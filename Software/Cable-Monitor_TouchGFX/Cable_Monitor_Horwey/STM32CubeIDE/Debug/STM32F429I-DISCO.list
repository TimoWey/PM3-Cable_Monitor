
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00028388  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003c50  08028538  08028538  00038538  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000021de  0802c188  0802c188  0003c188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000000f0  0802e368  0802e368  0003e368  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000055c  0802e458  0802e458  0003e458  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  0802e9b4  0802e9b4  0003e9b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  081479e4  081479e4  00160168  2**0
                  CONTENTS
  8 .ARM          00000008  081479e4  081479e4  001579e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  081479ec  081479ec  00160168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  081479ec  081479ec  001579ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08147a00  08147a00  00157a00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08147a08  00160000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001428c  20000168  08147b70  00160168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200143f4  08147b70  001643f4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00160168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00170000  2**2
                  ALLOC
 17 .comment      000000c2  00000000  00000000  00160198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0008d3c2  00000000  00000000  0016025a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001ed61c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00246234  00000000  00000000  001ed6af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002d0ad  00000000  00000000  004338e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000041a8  00000000  00000000  00460990  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011cc0a  00000000  00000000  00464b38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000729b  00000000  00000000  00581742  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0002e7da  00000000  00000000  005889dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  00038e2e  00000000  00000000  005b71b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c328  00000000  00000000  005effe8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08028520 	.word	0x08028520

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	08028520 	.word	0x08028520

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800058c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000590:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000592:	e003      	b.n	800059c <LoopCopyDataInit>

08000594 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000594:	4b0c      	ldr	r3, [pc, #48]	; (80005c8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000596:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000598:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059a:	3104      	adds	r1, #4

0800059c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800059c:	480b      	ldr	r0, [pc, #44]	; (80005cc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800059e:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a4:	d3f6      	bcc.n	8000594 <CopyDataInit>
  ldr  r2, =_sbss
 80005a6:	4a0b      	ldr	r2, [pc, #44]	; (80005d4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005a8:	e002      	b.n	80005b0 <LoopFillZerobss>

080005aa <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005aa:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005ac:	f842 3b04 	str.w	r3, [r2], #4

080005b0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b4:	d3f9      	bcc.n	80005aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005b6:	f007 fb35 	bl	8007c24 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ba:	f027 fa35 	bl	8027a28 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005be:	f000 ff5f 	bl	8001480 <main>
  bx  lr    
 80005c2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005c8:	08147a08 	.word	0x08147a08
  ldr  r0, =_sdata
 80005cc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d0:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005d4:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005d8:	200143f4 	.word	0x200143f4

080005dc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005dc:	e7fe      	b.n	80005dc <ADC_IRQHandler>
	...

080005e0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005e6:	f000 fd35 	bl	8001054 <touchgfx_components_init>
  touchgfx_init();
}
 80005ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005ee:	f000 bcbd 	b.w	8000f6c <touchgfx_init>
 80005f2:	bf00      	nop

080005f4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f4:	f000 bd30 	b.w	8001058 <touchgfx_taskEntry>

080005f8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f8:	4770      	bx	lr

080005fa <_ZN20STM32TouchControllerD0Ev>:
 80005fa:	b510      	push	{r4, lr}
 80005fc:	2104      	movs	r1, #4
 80005fe:	4604      	mov	r4, r0
 8000600:	f026 f91d 	bl	802683e <_ZdlPvj>
 8000604:	4620      	mov	r0, r4
 8000606:	bd10      	pop	{r4, pc}

08000608 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000608:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060a:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060c:	4c0c      	ldr	r4, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000610:	4b0c      	ldr	r3, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000614:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	6863      	ldr	r3, [r4, #4]
 8000618:	4798      	blx	r3
 800061a:	f640 0311 	movw	r3, #2065	; 0x811
 800061e:	4298      	cmp	r0, r3
 8000620:	d10a      	bne.n	8000638 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000622:	4d09      	ldr	r5, [pc, #36]	; (8000648 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000626:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	2082      	movs	r0, #130	; 0x82
 800062a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800062c:	682b      	ldr	r3, [r5, #0]
 800062e:	2082      	movs	r0, #130	; 0x82
 8000630:	68db      	ldr	r3, [r3, #12]
 8000632:	4798      	blx	r3
 8000634:	2000      	movs	r0, #0
    }

    return ret;
}
 8000636:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000638:	2001      	movs	r0, #1
 800063a:	e7fc      	b.n	8000636 <_Z11BSP_TS_Inittt+0x2e>
 800063c:	20000184 	.word	0x20000184
 8000640:	20000050 	.word	0x20000050
 8000644:	20000186 	.word	0x20000186
 8000648:	20000188 	.word	0x20000188

0800064c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800064c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000650:	20f0      	movs	r0, #240	; 0xf0
 8000652:	f7ff bfd9 	b.w	8000608 <_Z11BSP_TS_Inittt>
	...

08000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065a:	4d33      	ldr	r5, [pc, #204]	; (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800065c:	682b      	ldr	r3, [r5, #0]
{
 800065e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	2082      	movs	r0, #130	; 0x82
 8000664:	4798      	blx	r3
 8000666:	b280      	uxth	r0, r0
 8000668:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066a:	2800      	cmp	r0, #0
 800066c:	d04a      	beq.n	8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066e:	682b      	ldr	r3, [r5, #0]
 8000670:	f10d 0206 	add.w	r2, sp, #6
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	a901      	add	r1, sp, #4
 8000678:	2082      	movs	r0, #130	; 0x82
 800067a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800067c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000680:	f640 6274 	movw	r2, #3700	; 0xe74
 8000684:	4293      	cmp	r3, r2
 8000686:	d93f      	bls.n	8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000688:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800068c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000690:	1ad2      	subs	r2, r2, r3
 8000692:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000694:	2a0a      	cmp	r2, #10
 8000696:	d93d      	bls.n	8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000698:	230b      	movs	r3, #11
 800069a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800069e:	4b23      	ldr	r3, [pc, #140]	; (800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80006a0:	881b      	ldrh	r3, [r3, #0]
 80006a2:	429a      	cmp	r2, r3
 80006a4:	d901      	bls.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80006a6:	3b01      	subs	r3, #1
 80006a8:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006ae:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d830      	bhi.n	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80006b6:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006ba:	330e      	adds	r3, #14
 80006bc:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006be:	210f      	movs	r1, #15
 80006c0:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006c4:	491a      	ldr	r1, [pc, #104]	; (8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006c6:	8809      	ldrh	r1, [r1, #0]
 80006c8:	428b      	cmp	r3, r1
 80006ca:	d901      	bls.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 80006cc:	3901      	subs	r1, #1
 80006ce:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4e18      	ldr	r6, [pc, #96]	; (8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d2:	4d19      	ldr	r5, [pc, #100]	; (8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d8:	4283      	cmp	r3, r0
 80006da:	b281      	uxth	r1, r0
 80006dc:	bf8c      	ite	hi
 80006de:	1a59      	subhi	r1, r3, r1
 80006e0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e2:	b2b8      	uxth	r0, r7
 80006e4:	42ba      	cmp	r2, r7
 80006e6:	bf8c      	ite	hi
 80006e8:	1a10      	subhi	r0, r2, r0
 80006ea:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ec:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ee:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006f0:	4401      	add	r1, r0
 80006f2:	2905      	cmp	r1, #5
        {
            _x = x;
 80006f4:	bfc8      	it	gt
 80006f6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006f8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006fa:	bfc8      	it	gt
 80006fc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006fe:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000700:	682b      	ldr	r3, [r5, #0]
 8000702:	80a3      	strh	r3, [r4, #4]
    }
}
 8000704:	b003      	add	sp, #12
 8000706:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000708:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 800070a:	bf9c      	itt	ls
 800070c:	23b4      	movls	r3, #180	; 0xb4
 800070e:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000712:	e7bb      	b.n	800068c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000714:	2200      	movs	r2, #0
 8000716:	e7c8      	b.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000718:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 800071c:	3308      	adds	r3, #8
 800071e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000720:	2b0e      	cmp	r3, #14
 8000722:	d8cc      	bhi.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	e7d3      	b.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000728:	20000188 	.word	0x20000188
 800072c:	20000186 	.word	0x20000186
 8000730:	20000184 	.word	0x20000184
 8000734:	2000018c 	.word	0x2000018c
 8000738:	20000190 	.word	0x20000190

0800073c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800073c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800073e:	4668      	mov	r0, sp
{
 8000740:	460d      	mov	r5, r1
 8000742:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000744:	f7ff ff88 	bl	8000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000748:	f8bd 0000 	ldrh.w	r0, [sp]
 800074c:	b148      	cbz	r0, 8000762 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800074e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000752:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000754:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000758:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800075a:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800075c:	223c      	movs	r2, #60	; 0x3c
 800075e:	601a      	str	r2, [r3, #0]
        return true;
 8000760:	2001      	movs	r0, #1
}
 8000762:	b003      	add	sp, #12
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop
 8000768:	20000014 	.word	0x20000014

0800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800076c:	b110      	cbz	r0, 8000774 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800076e:	2802      	cmp	r0, #2
 8000770:	d009      	beq.n	8000786 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000772:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000774:	4b07      	ldr	r3, [pc, #28]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	fab2 f282 	clz	r2, r2
 800077c:	0952      	lsrs	r2, r2, #5
 800077e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000780:	4805      	ldr	r0, [pc, #20]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000782:	f007 bd83 	b.w	800828c <HAL_GPIO_WritePin>
 8000786:	4b03      	ldr	r3, [pc, #12]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000788:	689a      	ldr	r2, [r3, #8]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2110      	movs	r1, #16
 8000792:	e7f5      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000794:	20000194 	.word	0x20000194
 8000798:	40021000 	.word	0x40021000

0800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800079c:	b110      	cbz	r0, 80007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079e:	2802      	cmp	r0, #2
 80007a0:	d009      	beq.n	80007b6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80007a2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a4:	4b07      	ldr	r3, [pc, #28]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	3a00      	subs	r2, #0
 80007aa:	bf18      	it	ne
 80007ac:	2201      	movne	r2, #1
 80007ae:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007b0:	4805      	ldr	r0, [pc, #20]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b2:	f007 bd6b 	b.w	800828c <HAL_GPIO_WritePin>
 80007b6:	4b03      	ldr	r3, [pc, #12]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007b8:	689a      	ldr	r2, [r3, #8]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2110      	movs	r1, #16
 80007c2:	e7f5      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 80007c4:	20000194 	.word	0x20000194
 80007c8:	40021000 	.word	0x40021000

080007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007cc:	b110      	cbz	r0, 80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007ce:	2802      	cmp	r0, #2
 80007d0:	d004      	beq.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007d6:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80007d8:	f007 bd5c 	b.w	8008294 <HAL_GPIO_TogglePin>
 80007dc:	2110      	movs	r1, #16
 80007de:	e7fa      	b.n	80007d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80007e0:	40021000 	.word	0x40021000

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2802      	cmp	r0, #2
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007f8:	4802      	ldr	r0, [pc, #8]	; (8000804 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80007fa:	f007 fd41 	bl	8008280 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000800:	2110      	movs	r1, #16
 8000802:	e7f9      	b.n	80007f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8000804:	40021000 	.word	0x40021000

08000808 <_ZN8touchgfx4GPIO4initEv>:
{
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	4d08      	ldr	r5, [pc, #32]	; (800082c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 800080c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800080e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000810:	b2e0      	uxtb	r0, r4
 8000812:	f7ff ffe7 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000816:	b118      	cbz	r0, 8000820 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000818:	682b      	ldr	r3, [r5, #0]
 800081a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 800081c:	bf18      	it	ne
 800081e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000820:	3401      	adds	r4, #1
 8000822:	2c05      	cmp	r4, #5
 8000824:	f105 0504 	add.w	r5, r5, #4
 8000828:	d1f2      	bne.n	8000810 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	20000194 	.word	0x20000194

08000830 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000830:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000832:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000836:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800083a:	4770      	bx	lr

0800083c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800083c:	2000      	movs	r0, #0
 800083e:	4770      	bx	lr

08000840 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000840:	4b03      	ldr	r3, [pc, #12]	; (8000850 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000842:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000844:	3900      	subs	r1, #0
 8000846:	bf18      	it	ne
 8000848:	2101      	movne	r1, #1
 800084a:	7019      	strb	r1, [r3, #0]
    }
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop
 8000850:	200137bb 	.word	0x200137bb

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000872:	4770      	bx	lr

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000878:	b510      	push	{r4, lr}
 800087a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800087c:	f000 fcd8 	bl	8001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000880:	6823      	ldr	r3, [r4, #0]
 8000882:	4903      	ldr	r1, [pc, #12]	; (8000890 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000884:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000888:	4620      	mov	r0, r4
}
 800088a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800088e:	4718      	bx	r3
 8000890:	d0000000 	.word	0xd0000000

08000894 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000894:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000896:	6803      	ldr	r3, [r0, #0]
{
 8000898:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800089a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800089e:	4798      	blx	r3
    enableInterrupts();
 80008a0:	6823      	ldr	r3, [r4, #0]
 80008a2:	4620      	mov	r0, r4
 80008a4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008a6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008a8:	f000 f8ec 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008ac:	6823      	ldr	r3, [r4, #0]
 80008ae:	4620      	mov	r0, r4
 80008b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008b2:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80008b4:	2029      	movs	r0, #41	; 0x29
 80008b6:	f001 f8e5 	bl	8001a84 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80008ba:	f000 f8e3 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	4620      	mov	r0, r4
 80008c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008c4:	4798      	blx	r3
    for (;;)
 80008c6:	e7f8      	b.n	80008ba <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080008c8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c8:	b510      	push	{r4, lr}
 80008ca:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008cc:	f00e ffea 	bl	800f8a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008d0:	6823      	ldr	r3, [r4, #0]
 80008d2:	4620      	mov	r0, r4
 80008d4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80008d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008dc:	4718      	bx	r3

080008de <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80008de:	f000 bc99 	b.w	8001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080008e2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008e2:	f000 bc9d 	b.w	8001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008e6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008e6:	f000 bcc1 	b.w	800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008ea <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008ea:	f000 bc6f 	b.w	80011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ee <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ee:	f000 bcc9 	b.w	8001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008f2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008f2:	f000 bcd1 	b.w	8001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080008f6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80008f6:	f000 bc73 	b.w	80011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080008fa <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008fa:	f00e ba3f 	b.w	800ed7c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008fe <_ZN11TouchGFXHALD0Ev>:
 80008fe:	b510      	push	{r4, lr}
 8000900:	217c      	movs	r1, #124	; 0x7c
 8000902:	4604      	mov	r4, r0
 8000904:	f025 ff9b 	bl	802683e <_ZdlPvj>
 8000908:	4620      	mov	r0, r4
 800090a:	bd10      	pop	{r4, pc}

0800090c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800090c:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000910:	b11b      	cbz	r3, 800091a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000912:	6840      	ldr	r0, [r0, #4]
 8000914:	6803      	ldr	r3, [r0, #0]
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	4718      	bx	r3
    }
 800091a:	4618      	mov	r0, r3
 800091c:	4770      	bx	lr
	...

08000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000920:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000922:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000926:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 800092a:	4b0c      	ldr	r3, [pc, #48]	; (800095c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800092c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800092e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000930:	d009      	beq.n	8000946 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000932:	b93a      	cbnz	r2, 8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000934:	4a0a      	ldr	r2, [pc, #40]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000936:	490b      	ldr	r1, [pc, #44]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000938:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800093a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800093c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800093e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000940:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000942:	701a      	strb	r2, [r3, #0]
    }
 8000944:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000946:	2a00      	cmp	r2, #0
 8000948:	d0fc      	beq.n	8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094a:	4a05      	ldr	r2, [pc, #20]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800094c:	4905      	ldr	r1, [pc, #20]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000950:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000952:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000954:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000956:	2200      	movs	r2, #0
 8000958:	e7f3      	b.n	8000942 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800095a:	bf00      	nop
 800095c:	200137b4 	.word	0x200137b4
 8000960:	200137b0 	.word	0x200137b0
 8000964:	200137b2 	.word	0x200137b2

08000968 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000968:	b570      	push	{r4, r5, r6, lr}
 800096a:	460d      	mov	r5, r1
 800096c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800096e:	b935      	cbnz	r5, 800097e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000970:	4b09      	ldr	r3, [pc, #36]	; (8000998 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000972:	4a0a      	ldr	r2, [pc, #40]	; (800099c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000974:	480a      	ldr	r0, [pc, #40]	; (80009a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000976:	f240 21d2 	movw	r1, #722	; 0x2d2
 800097a:	f026 fd51 	bl	8027420 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800097e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000982:	4b08      	ldr	r3, [pc, #32]	; (80009a4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000984:	3a00      	subs	r2, #0
 8000986:	bf18      	it	ne
 8000988:	2201      	movne	r2, #1
 800098a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800098c:	6803      	ldr	r3, [r0, #0]
    }
 800098e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000992:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000996:	4718      	bx	r3
 8000998:	08028590 	.word	0x08028590
 800099c:	080285c8 	.word	0x080285c8
 80009a0:	08028616 	.word	0x08028616
 80009a4:	200137ba 	.word	0x200137ba

080009a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009a8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009aa:	4b09      	ldr	r3, [pc, #36]	; (80009d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009ac:	881b      	ldrh	r3, [r3, #0]
 80009ae:	428b      	cmp	r3, r1
 80009b0:	d803      	bhi.n	80009ba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009b2:	4b08      	ldr	r3, [pc, #32]	; (80009d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009b4:	881b      	ldrh	r3, [r3, #0]
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d905      	bls.n	80009c6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009bc:	4a07      	ldr	r2, [pc, #28]	; (80009dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009be:	4808      	ldr	r0, [pc, #32]	; (80009e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80009c0:	219e      	movs	r1, #158	; 0x9e
 80009c2:	f026 fd2d 	bl	8027420 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80009c6:	4b07      	ldr	r3, [pc, #28]	; (80009e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80009c8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80009ca:	4b07      	ldr	r3, [pc, #28]	; (80009e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80009cc:	801a      	strh	r2, [r3, #0]
    }
 80009ce:	bd08      	pop	{r3, pc}
 80009d0:	200137b0 	.word	0x200137b0
 80009d4:	200137b2 	.word	0x200137b2
 80009d8:	0802865b 	.word	0x0802865b
 80009dc:	080286be 	.word	0x080286be
 80009e0:	08028616 	.word	0x08028616
 80009e4:	200137b6 	.word	0x200137b6
 80009e8:	200137b8 	.word	0x200137b8

080009ec <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009ec:	2101      	movs	r1, #1
{
 80009ee:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009f0:	2200      	movs	r2, #0
 80009f2:	4608      	mov	r0, r1
 80009f4:	f00a ffce 	bl	800b994 <osSemaphoreNew>
 80009f8:	4b0a      	ldr	r3, [pc, #40]	; (8000a24 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80009fa:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80009fc:	b928      	cbnz	r0, 8000a0a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80009fe:	4b0a      	ldr	r3, [pc, #40]	; (8000a28 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a00:	4a0a      	ldr	r2, [pc, #40]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a02:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a04:	480a      	ldr	r0, [pc, #40]	; (8000a30 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a06:	f026 fd0b 	bl	8027420 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	2104      	movs	r1, #4
 8000a0e:	2001      	movs	r0, #1
 8000a10:	f00b f874 	bl	800bafc <osMessageQueueNew>
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a16:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a18:	b918      	cbnz	r0, 8000a22 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a1a:	4b07      	ldr	r3, [pc, #28]	; (8000a38 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a1c:	4a03      	ldr	r2, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a1e:	212c      	movs	r1, #44	; 0x2c
 8000a20:	e7f0      	b.n	8000a04 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a22:	bd08      	pop	{r3, pc}
 8000a24:	200001a8 	.word	0x200001a8
 8000a28:	080287dc 	.word	0x080287dc
 8000a2c:	08028825 	.word	0x08028825
 8000a30:	08028854 	.word	0x08028854
 8000a34:	200001a4 	.word	0x200001a4
 8000a38:	080288ce 	.word	0x080288ce

08000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a3c:	4b02      	ldr	r3, [pc, #8]	; (8000a48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a3e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a42:	6818      	ldr	r0, [r3, #0]
 8000a44:	f00a bffa 	b.w	800ba3c <osSemaphoreAcquire>
 8000a48:	200001a8 	.word	0x200001a8

08000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a4c:	4b01      	ldr	r3, [pc, #4]	; (8000a54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a4e:	6818      	ldr	r0, [r3, #0]
 8000a50:	f00b b828 	b.w	800baa4 <osSemaphoreRelease>
 8000a54:	200001a8 	.word	0x200001a8

08000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000a58:	4b02      	ldr	r3, [pc, #8]	; (8000a64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	6818      	ldr	r0, [r3, #0]
 8000a5e:	f00a bfed 	b.w	800ba3c <osSemaphoreAcquire>
 8000a62:	bf00      	nop
 8000a64:	200001a8 	.word	0x200001a8

08000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000a68:	f7ff bff0 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a6c:	4803      	ldr	r0, [pc, #12]	; (8000a7c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000a6e:	4904      	ldr	r1, [pc, #16]	; (8000a80 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a70:	6800      	ldr	r0, [r0, #0]
 8000a72:	2300      	movs	r3, #0
 8000a74:	461a      	mov	r2, r3
 8000a76:	f00b b87b 	b.w	800bb70 <osMessageQueuePut>
 8000a7a:	bf00      	nop
 8000a7c:	200001a4 	.word	0x200001a4
 8000a80:	20000004 	.word	0x20000004

08000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a84:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a86:	4c08      	ldr	r4, [pc, #32]	; (8000aa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a88:	2300      	movs	r3, #0
 8000a8a:	461a      	mov	r2, r3
 8000a8c:	a901      	add	r1, sp, #4
 8000a8e:	6820      	ldr	r0, [r4, #0]
 8000a90:	f00b f8a4 	bl	800bbdc <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a94:	6820      	ldr	r0, [r4, #0]
 8000a96:	f04f 33ff 	mov.w	r3, #4294967295
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	a901      	add	r1, sp, #4
 8000a9e:	f00b f89d 	bl	800bbdc <osMessageQueueGet>
}
 8000aa2:	b002      	add	sp, #8
 8000aa4:	bd10      	pop	{r4, pc}
 8000aa6:	bf00      	nop
 8000aa8:	200001a4 	.word	0x200001a4

08000aac <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000aac:	6803      	ldr	r3, [r0, #0]
 8000aae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ab0:	4718      	bx	r3

08000ab2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000ab2:	2001      	movs	r0, #1
 8000ab4:	4770      	bx	lr

08000ab6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000ab6:	6803      	ldr	r3, [r0, #0]
 8000ab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000aba:	4718      	bx	r3

08000abc <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000abc:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000abe:	2300      	movs	r3, #0
 8000ac0:	9301      	str	r3, [sp, #4]
 8000ac2:	4b0d      	ldr	r3, [pc, #52]	; (8000af8 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ac6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000aca:	631a      	str	r2, [r3, #48]	; 0x30
 8000acc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ace:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000ad2:	9201      	str	r2, [sp, #4]
 8000ad4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000ad6:	691a      	ldr	r2, [r3, #16]
 8000ad8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000adc:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000ade:	691a      	ldr	r2, [r3, #16]
 8000ae0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000ae4:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000ae6:	4b05      	ldr	r3, [pc, #20]	; (8000afc <_ZN8STM32DMA10initializeEv+0x40>)
 8000ae8:	4a05      	ldr	r2, [pc, #20]	; (8000b00 <_ZN8STM32DMA10initializeEv+0x44>)
 8000aea:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000aec:	4b05      	ldr	r3, [pc, #20]	; (8000b04 <_ZN8STM32DMA10initializeEv+0x48>)
 8000aee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000af2:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000af4:	b002      	add	sp, #8
 8000af6:	4770      	bx	lr
 8000af8:	40023800 	.word	0x40023800
 8000afc:	20002634 	.word	0x20002634
 8000b00:	08000b49 	.word	0x08000b49
 8000b04:	e000e100 	.word	0xe000e100

08000b08 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b08:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b0c:	4770      	bx	lr
	...

08000b10 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b10:	4b05      	ldr	r3, [pc, #20]	; (8000b28 <_ZN8STM32DMAD1Ev+0x18>)
 8000b12:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b14:	4b05      	ldr	r3, [pc, #20]	; (8000b2c <_ZN8STM32DMAD1Ev+0x1c>)
 8000b16:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b1a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b22:	f3bf 8f6f 	isb	sy
}
 8000b26:	4770      	bx	lr
 8000b28:	08028a98 	.word	0x08028a98
 8000b2c:	e000e100 	.word	0xe000e100

08000b30 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b30:	b510      	push	{r4, lr}
 8000b32:	4604      	mov	r4, r0
}
 8000b34:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000b38:	f7ff ffea 	bl	8000b10 <_ZN8STM32DMAD1Ev>
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	f025 fe7e 	bl	802683e <_ZdlPvj>
 8000b42:	4620      	mov	r0, r4
 8000b44:	bd10      	pop	{r4, pc}
	...

08000b48 <DMA2D_XferCpltCallback>:
        return instance;
 8000b48:	4b02      	ldr	r3, [pc, #8]	; (8000b54 <DMA2D_XferCpltCallback+0xc>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000b4e:	6803      	ldr	r3, [r0, #0]
 8000b50:	695b      	ldr	r3, [r3, #20]
 8000b52:	4718      	bx	r3
 8000b54:	200137bc 	.word	0x200137bc

08000b58 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000b5c:	4625      	mov	r5, r4
 8000b5e:	4b0a      	ldr	r3, [pc, #40]	; (8000b88 <_ZN8STM32DMAC1Ev+0x30>)
 8000b60:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000b62:	2600      	movs	r6, #0
 8000b64:	6060      	str	r0, [r4, #4]
 8000b66:	7226      	strb	r6, [r4, #8]
 8000b68:	7266      	strb	r6, [r4, #9]
 8000b6a:	f845 3b20 	str.w	r3, [r5], #32
 8000b6e:	2260      	movs	r2, #96	; 0x60
 8000b70:	4629      	mov	r1, r5
 8000b72:	f00e ffef 	bl	800fb54 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000b76:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000b7a:	60ee      	str	r6, [r5, #12]
 8000b7c:	3524      	adds	r5, #36	; 0x24
 8000b7e:	42ab      	cmp	r3, r5
 8000b80:	d1fb      	bne.n	8000b7a <_ZN8STM32DMAC1Ev+0x22>
}
 8000b82:	4620      	mov	r0, r4
 8000b84:	bd70      	pop	{r4, r5, r6, pc}
 8000b86:	bf00      	nop
 8000b88:	08028a98 	.word	0x08028a98

08000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000b8c:	b508      	push	{r3, lr}
    switch (format)
 8000b8e:	290b      	cmp	r1, #11
 8000b90:	d80b      	bhi.n	8000baa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000b92:	e8df f001 	tbb	[pc, r1]
 8000b96:	0612      	.short	0x0612
 8000b98:	0a0a0a10 	.word	0x0a0a0a10
 8000b9c:	0808080a 	.word	0x0808080a
 8000ba0:	0808      	.short	0x0808
 8000ba2:	2001      	movs	r0, #1
}
 8000ba4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000ba6:	2005      	movs	r0, #5
        break;
 8000ba8:	e7fc      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000baa:	4b05      	ldr	r3, [pc, #20]	; (8000bc0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bac:	4a05      	ldr	r2, [pc, #20]	; (8000bc4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bae:	4806      	ldr	r0, [pc, #24]	; (8000bc8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000bb0:	2165      	movs	r1, #101	; 0x65
 8000bb2:	f026 fc35 	bl	8027420 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000bb6:	2000      	movs	r0, #0
 8000bb8:	e7f4      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000bba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bbc:	e7f2      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bbe:	bf00      	nop
 8000bc0:	08028910 	.word	0x08028910
 8000bc4:	0802892b 	.word	0x0802892b
 8000bc8:	08028975 	.word	0x08028975

08000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bcc:	b508      	push	{r3, lr}
    switch (format)
 8000bce:	290a      	cmp	r1, #10
 8000bd0:	d809      	bhi.n	8000be6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000bd2:	e8df f001 	tbb	[pc, r1]
 8000bd6:	0610      	.short	0x0610
 8000bd8:	0808080e 	.word	0x0808080e
 8000bdc:	06060608 	.word	0x06060608
 8000be0:	06          	.byte	0x06
 8000be1:	00          	.byte	0x00
 8000be2:	2001      	movs	r0, #1
}
 8000be4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000be6:	4b05      	ldr	r3, [pc, #20]	; (8000bfc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000be8:	4a05      	ldr	r2, [pc, #20]	; (8000c00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bea:	4806      	ldr	r0, [pc, #24]	; (8000c04 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bec:	2186      	movs	r1, #134	; 0x86
 8000bee:	f026 fc17 	bl	8027420 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000bf2:	2000      	movs	r0, #0
 8000bf4:	e7f6      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000bf6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bf8:	e7f4      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bfa:	bf00      	nop
 8000bfc:	08028910 	.word	0x08028910
 8000c00:	080289ed 	.word	0x080289ed
 8000c04:	08028975 	.word	0x08028975

08000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c0c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000c10:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c12:	4641      	mov	r1, r8
{
 8000c14:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c16:	f7ff ffb9 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c1a:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c20:	4649      	mov	r1, r9
 8000c22:	4638      	mov	r0, r7
 8000c24:	f7ff ffb2 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c28:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	f7ff ffcd 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c32:	8aa1      	ldrh	r1, [r4, #20]
 8000c34:	8b62      	ldrh	r2, [r4, #26]
 8000c36:	4b43      	ldr	r3, [pc, #268]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c38:	1a52      	subs	r2, r2, r1
 8000c3a:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c3c:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000c3e:	8b22      	ldrh	r2, [r4, #24]
 8000c40:	1a52      	subs	r2, r2, r1
 8000c42:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c44:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c46:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c48:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c4c:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4e:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c50:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c52:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c54:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000c56:	6827      	ldr	r7, [r4, #0]
 8000c58:	2f80      	cmp	r7, #128	; 0x80
 8000c5a:	d028      	beq.n	8000cae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8000c5c:	7f22      	ldrb	r2, [r4, #28]
 8000c5e:	d80f      	bhi.n	8000c80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8000c60:	2f20      	cmp	r7, #32
 8000c62:	d065      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c64:	2f40      	cmp	r7, #64	; 0x40
 8000c66:	d063      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c68:	2f04      	cmp	r7, #4
 8000c6a:	d01a      	beq.n	8000ca2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c6c:	4b35      	ldr	r3, [pc, #212]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c6e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000c72:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c76:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c78:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c7a:	d05f      	beq.n	8000d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000c7c:	4a32      	ldr	r2, [pc, #200]	; (8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000c7e:	e044      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8000c80:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8000c84:	d004      	beq.n	8000c90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000c86:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 8000c8a:	d1ef      	bne.n	8000c6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c8c:	492f      	ldr	r1, [pc, #188]	; (8000d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000c8e:	e000      	b.n	8000c92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c90:	492f      	ldr	r1, [pc, #188]	; (8000d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c92:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 8000c96:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000c98:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c9a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c9c:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c9e:	6158      	str	r0, [r3, #20]
 8000ca0:	e032      	b.n	8000d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ca2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ca6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000caa:	61da      	str	r2, [r3, #28]
 8000cac:	e7f6      	b.n	8000c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000cae:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000cb0:	1d3a      	adds	r2, r7, #4
 8000cb2:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb4:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cb6:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb8:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 8000cbc:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000cc0:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cc2:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc4:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cc6:	b142      	cbz	r2, 8000cda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000cc8:	2a01      	cmp	r2, #1
 8000cca:	d021      	beq.n	8000d10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 8000ccc:	4b21      	ldr	r3, [pc, #132]	; (8000d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000cce:	4a22      	ldr	r2, [pc, #136]	; (8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000cd0:	4822      	ldr	r0, [pc, #136]	; (8000d5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000cd2:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000cd6:	f026 fba3 	bl	8027420 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000cda:	69da      	ldr	r2, [r3, #28]
 8000cdc:	8879      	ldrh	r1, [r7, #2]
 8000cde:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000ce2:	3901      	subs	r1, #1
 8000ce4:	f022 0210 	bic.w	r2, r2, #16
 8000ce8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000cec:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000cee:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000cf0:	4b14      	ldr	r3, [pc, #80]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cf2:	69da      	ldr	r2, [r3, #28]
 8000cf4:	f042 0220 	orr.w	r2, r2, #32
 8000cf8:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000cfa:	69da      	ldr	r2, [r3, #28]
 8000cfc:	0692      	lsls	r2, r2, #26
 8000cfe:	d4fc      	bmi.n	8000cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d00:	2210      	movs	r2, #16
 8000d02:	609a      	str	r2, [r3, #8]
            if (blend)
 8000d04:	2900      	cmp	r1, #0
 8000d06:	d0b9      	beq.n	8000c7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d08:	4a15      	ldr	r2, [pc, #84]	; (8000d60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d0a:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d10:	69da      	ldr	r2, [r3, #28]
 8000d12:	8878      	ldrh	r0, [r7, #2]
 8000d14:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d18:	3801      	subs	r0, #1
 8000d1a:	f022 0210 	bic.w	r2, r2, #16
 8000d1e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8000d22:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d24:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000d28:	bf18      	it	ne
 8000d2a:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d2c:	61da      	str	r2, [r3, #28]
                break;
 8000d2e:	e7df      	b.n	8000cf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d30:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000d34:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000d36:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d3a:	e7b6      	b.n	8000caa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d3c:	f240 2201 	movw	r2, #513	; 0x201
 8000d40:	e7e3      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8000d42:	bf00      	nop
 8000d44:	4002b000 	.word	0x4002b000
 8000d48:	00010201 	.word	0x00010201
 8000d4c:	00020009 	.word	0x00020009
 8000d50:	0002000a 	.word	0x0002000a
 8000d54:	08028a38 	.word	0x08028a38
 8000d58:	08028a52 	.word	0x08028a52
 8000d5c:	08028975 	.word	0x08028975
 8000d60:	00020201 	.word	0x00020201

08000d64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000d64:	b538      	push	{r3, r4, r5, lr}
 8000d66:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d68:	7f89      	ldrb	r1, [r1, #30]
 8000d6a:	f7ff ff2f 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d6e:	8aa5      	ldrh	r5, [r4, #20]
 8000d70:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d72:	4b16      	ldr	r3, [pc, #88]	; (8000dcc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d74:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d76:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d78:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d7c:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d7e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d80:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d82:	1b52      	subs	r2, r2, r5
 8000d84:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d86:	6825      	ldr	r5, [r4, #0]
 8000d88:	2d08      	cmp	r5, #8
 8000d8a:	d10e      	bne.n	8000daa <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d90:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d92:	7f20      	ldrb	r0, [r4, #28]
 8000d94:	4a0e      	ldr	r2, [pc, #56]	; (8000dd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d96:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d9a:	61da      	str	r2, [r3, #28]
 8000d9c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d9e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000da0:	4a0c      	ldr	r2, [pc, #48]	; (8000dd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da2:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da4:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000da6:	601a      	str	r2, [r3, #0]
    }
}
 8000da8:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000daa:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000dac:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000dae:	611a      	str	r2, [r3, #16]
 8000db0:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000db2:	0a0a      	lsrs	r2, r1, #8
 8000db4:	0948      	lsrs	r0, r1, #5
 8000db6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000dba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000dbe:	4302      	orrs	r2, r0
 8000dc0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000dc4:	430a      	orrs	r2, r1
 8000dc6:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000dc8:	4a03      	ldr	r2, [pc, #12]	; (8000dd8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000dca:	e7ec      	b.n	8000da6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000dcc:	4002b000 	.word	0x4002b000
 8000dd0:	00010009 	.word	0x00010009
 8000dd4:	00020201 	.word	0x00020201
 8000dd8:	00030201 	.word	0x00030201

08000ddc <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ddc:	4b03      	ldr	r3, [pc, #12]	; (8000dec <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000dde:	681a      	ldr	r2, [r3, #0]
 8000de0:	07d2      	lsls	r2, r2, #31
 8000de2:	d4fc      	bmi.n	8000dde <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000de4:	2223      	movs	r2, #35	; 0x23
 8000de6:	609a      	str	r2, [r3, #8]
}
 8000de8:	4770      	bx	lr
 8000dea:	bf00      	nop
 8000dec:	4002b000 	.word	0x4002b000

08000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000df0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000df2:	4c0f      	ldr	r4, [pc, #60]	; (8000e30 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000df4:	6825      	ldr	r5, [r4, #0]
 8000df6:	07ed      	lsls	r5, r5, #31
 8000df8:	d4fc      	bmi.n	8000df4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfa:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000dfc:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfe:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e00:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e04:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000e06:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e08:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e0a:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000e0c:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 8000e0e:	d00a      	beq.n	8000e26 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e10:	4908      	ldr	r1, [pc, #32]	; (8000e34 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e12:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e14:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000e18:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000e1a:	4b07      	ldr	r3, [pc, #28]	; (8000e38 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000e1c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000e1e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000e20:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e22:	6023      	str	r3, [r4, #0]
    }
}
 8000e24:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000e26:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000e28:	9b03      	ldr	r3, [sp, #12]
 8000e2a:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e2c:	4b03      	ldr	r3, [pc, #12]	; (8000e3c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000e2e:	e7f8      	b.n	8000e22 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000e30:	4002b000 	.word	0x4002b000
 8000e34:	00010009 	.word	0x00010009
 8000e38:	00020001 	.word	0x00020001
 8000e3c:	00030001 	.word	0x00030001

08000e40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e40:	2001      	movs	r0, #1
 8000e42:	4770      	bx	lr

08000e44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e44:	2038      	movs	r0, #56	; 0x38
 8000e46:	4770      	bx	lr

08000e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e48:	2338      	movs	r3, #56	; 0x38
 8000e4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4e:	3008      	adds	r0, #8
 8000e50:	4770      	bx	lr

08000e52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e52:	2338      	movs	r3, #56	; 0x38
 8000e54:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e58:	3008      	adds	r0, #8
 8000e5a:	4770      	bx	lr

08000e5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	4770      	bx	lr

08000e60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e60:	f241 30e4 	movw	r0, #5092	; 0x13e4
 8000e64:	4770      	bx	lr

08000e66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e66:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e6a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e6e:	3008      	adds	r0, #8
 8000e70:	4770      	bx	lr

08000e72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e72:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e76:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e7a:	3008      	adds	r0, #8
 8000e7c:	4770      	bx	lr

08000e7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e7e:	2001      	movs	r0, #1
 8000e80:	4770      	bx	lr

08000e82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e82:	2010      	movs	r0, #16
 8000e84:	4770      	bx	lr

08000e86 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e86:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e8a:	3008      	adds	r0, #8
 8000e8c:	4770      	bx	lr

08000e8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e8e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e92:	3008      	adds	r0, #8
 8000e94:	4770      	bx	lr

08000e96 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000e96:	4608      	mov	r0, r1
 8000e98:	f002 b854 	b.w	8002f44 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e9c:	b510      	push	{r4, lr}
 8000e9e:	4b03      	ldr	r3, [pc, #12]	; (8000eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000ea0:	6003      	str	r3, [r0, #0]
 8000ea2:	4604      	mov	r4, r0
 8000ea4:	f00d faf3 	bl	800e48e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	bd10      	pop	{r4, pc}
 8000eac:	08028b50 	.word	0x08028b50

08000eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000eb0:	b510      	push	{r4, lr}
 8000eb2:	4604      	mov	r4, r0
 8000eb4:	f7ff fff2 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	2140      	movs	r1, #64	; 0x40
 8000ebc:	f025 fcbf 	bl	802683e <_ZdlPvj>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	bd10      	pop	{r4, pc}

08000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ec4:	b510      	push	{r4, lr}
 8000ec6:	4b03      	ldr	r3, [pc, #12]	; (8000ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ec8:	6003      	str	r3, [r0, #0]
 8000eca:	4604      	mov	r4, r0
 8000ecc:	f00d fadf 	bl	800e48e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ed0:	4620      	mov	r0, r4
 8000ed2:	bd10      	pop	{r4, pc}
 8000ed4:	08028b1c 	.word	0x08028b1c

08000ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ed8:	b510      	push	{r4, lr}
 8000eda:	4604      	mov	r4, r0
 8000edc:	f7ff fff2 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f241 31ec 	movw	r1, #5100	; 0x13ec
 8000ee6:	f025 fcaa 	bl	802683e <_ZdlPvj>
 8000eea:	4620      	mov	r0, r4
 8000eec:	bd10      	pop	{r4, pc}
	...

08000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ef0:	b510      	push	{r4, lr}
 8000ef2:	4b03      	ldr	r3, [pc, #12]	; (8000f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ef4:	6003      	str	r3, [r0, #0]
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f00d fac9 	bl	800e48e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	bd10      	pop	{r4, pc}
 8000f00:	08028ae8 	.word	0x08028ae8

08000f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000f04:	b510      	push	{r4, lr}
 8000f06:	4604      	mov	r4, r0
 8000f08:	f7ff fff2 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	2118      	movs	r1, #24
 8000f10:	f025 fc95 	bl	802683e <_ZdlPvj>
 8000f14:	4620      	mov	r0, r4
 8000f16:	bd10      	pop	{r4, pc}

08000f18 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000f18:	b510      	push	{r4, lr}
 8000f1a:	4b09      	ldr	r3, [pc, #36]	; (8000f40 <_ZN12FrontendHeapD1Ev+0x28>)
 8000f1c:	6003      	str	r3, [r0, #0]
 8000f1e:	4604      	mov	r4, r0
 8000f20:	f500 50a0 	add.w	r0, r0, #5120	; 0x1400
 8000f24:	3018      	adds	r0, #24
 8000f26:	f7ff ffb9 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f2a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f2e:	f7ff ffc9 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f32:	f104 0014 	add.w	r0, r4, #20
 8000f36:	f7ff ffdb 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f3a:	4620      	mov	r0, r4
 8000f3c:	bd10      	pop	{r4, pc}
 8000f3e:	bf00      	nop
 8000f40:	08028b84 	.word	0x08028b84

08000f44 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f44:	b508      	push	{r3, lr}
 8000f46:	4802      	ldr	r0, [pc, #8]	; (8000f50 <__tcf_0+0xc>)
 8000f48:	f7ff ffe6 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f4c:	bd08      	pop	{r3, pc}
 8000f4e:	bf00      	nop
 8000f50:	200001b0 	.word	0x200001b0

08000f54 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f54:	b510      	push	{r4, lr}
 8000f56:	4604      	mov	r4, r0
 8000f58:	f7ff ffde 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	f241 51bc 	movw	r1, #5564	; 0x15bc
 8000f62:	f025 fc6c 	bl	802683e <_ZdlPvj>
 8000f66:	4620      	mov	r0, r4
 8000f68:	bd10      	pop	{r4, pc}
	...

08000f6c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f70:	f001 f97e 	bl	8002270 <_ZN14BitmapDatabase11getInstanceEv>
 8000f74:	4605      	mov	r5, r0
 8000f76:	f001 f97f 	bl	8002278 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f7a:	2400      	movs	r4, #0
 8000f7c:	4601      	mov	r1, r0
 8000f7e:	4623      	mov	r3, r4
 8000f80:	4628      	mov	r0, r5
 8000f82:	4622      	mov	r2, r4
 8000f84:	9400      	str	r4, [sp, #0]
 8000f86:	f016 f905 	bl	8017194 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f8a:	4b26      	ldr	r3, [pc, #152]	; (8001024 <touchgfx_init+0xb8>)
 8000f8c:	4a26      	ldr	r2, [pc, #152]	; (8001028 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000f8e:	4d27      	ldr	r5, [pc, #156]	; (800102c <touchgfx_init+0xc0>)
 8000f90:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f92:	4620      	mov	r0, r4
 8000f94:	f005 ffd6 	bl	8006f44 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f98:	4825      	ldr	r0, [pc, #148]	; (8001030 <touchgfx_init+0xc4>)
 8000f9a:	f016 f863 	bl	8017064 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f9e:	682b      	ldr	r3, [r5, #0]
 8000fa0:	f3bf 8f5b 	dmb	ish
 8000fa4:	07db      	lsls	r3, r3, #31
 8000fa6:	d436      	bmi.n	8001016 <touchgfx_init+0xaa>
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f025 fc4a 	bl	8026842 <__cxa_guard_acquire>
 8000fae:	b390      	cbz	r0, 8001016 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000fb0:	4c20      	ldr	r4, [pc, #128]	; (8001034 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000fb2:	4b21      	ldr	r3, [pc, #132]	; (8001038 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8000fb4:	4f21      	ldr	r7, [pc, #132]	; (800103c <touchgfx_init+0xd0>)
 8000fb6:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000fb8:	f504 56a3 	add.w	r6, r4, #5216	; 0x1460
        : presenterStorage(pres),
 8000fbc:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000fc0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000fc4:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000fc6:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000fca:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000fcc:	6126      	str	r6, [r4, #16]
 8000fce:	f00d fa5f 	bl	800e490 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fd2:	4b1b      	ldr	r3, [pc, #108]	; (8001040 <touchgfx_init+0xd4>)
 8000fd4:	6163      	str	r3, [r4, #20]
 8000fd6:	4640      	mov	r0, r8
 8000fd8:	f00d fa5a 	bl	800e490 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fdc:	4b19      	ldr	r3, [pc, #100]	; (8001044 <touchgfx_init+0xd8>)
 8000fde:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fe0:	4638      	mov	r0, r7
 8000fe2:	f00d fa55 	bl	800e490 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fe6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000fea:	4a17      	ldr	r2, [pc, #92]	; (8001048 <touchgfx_init+0xdc>)
 8000fec:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
 8000ff0:	f503 608b 	add.w	r0, r3, #1112	; 0x458
 8000ff4:	f006 fad6 	bl	80075a4 <_ZN5ModelC1Ev>
 8000ff8:	4622      	mov	r2, r4
 8000ffa:	f1a6 0108 	sub.w	r1, r6, #8
 8000ffe:	4630      	mov	r0, r6
 8001000:	f006 f858 	bl	80070b4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001004:	4630      	mov	r0, r6
 8001006:	f001 ff9d 	bl	8002f44 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800100a:	4810      	ldr	r0, [pc, #64]	; (800104c <touchgfx_init+0xe0>)
 800100c:	f026 fa26 	bl	802745c <atexit>
 8001010:	4628      	mov	r0, r5
 8001012:	f025 fc22 	bl	802685a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001016:	480e      	ldr	r0, [pc, #56]	; (8001050 <touchgfx_init+0xe4>)
}
 8001018:	b002      	add	sp, #8
 800101a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800101e:	f7ff bc2b 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001022:	bf00      	nop
 8001024:	20013820 	.word	0x20013820
 8001028:	2000258c 	.word	0x2000258c
 800102c:	200001ac 	.word	0x200001ac
 8001030:	20000008 	.word	0x20000008
 8001034:	200001b0 	.word	0x200001b0
 8001038:	08028b84 	.word	0x08028b84
 800103c:	200015c8 	.word	0x200015c8
 8001040:	08028ae8 	.word	0x08028ae8
 8001044:	08028b1c 	.word	0x08028b1c
 8001048:	08028b50 	.word	0x08028b50
 800104c:	08000f45 	.word	0x08000f45
 8001050:	20002510 	.word	0x20002510

08001054 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001054:	4770      	bx	lr
	...

08001058 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001058:	4801      	ldr	r0, [pc, #4]	; (8001060 <touchgfx_taskEntry+0x8>)
 800105a:	f7ff bc1b 	b.w	8000894 <_ZN11TouchGFXHAL9taskEntryEv>
 800105e:	bf00      	nop
 8001060:	20002510 	.word	0x20002510

08001064 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001064:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001066:	4e22      	ldr	r6, [pc, #136]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001068:	4c22      	ldr	r4, [pc, #136]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800106a:	4d23      	ldr	r5, [pc, #140]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800106c:	4b23      	ldr	r3, [pc, #140]	; (80010fc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800106e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001070:	4630      	mov	r0, r6
 8001072:	f7ff fd71 	bl	8000b58 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001076:	4628      	mov	r0, r5
 8001078:	f01a fb58 	bl	801b72c <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 800107c:	4b20      	ldr	r3, [pc, #128]	; (8001100 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800107e:	4821      	ldr	r0, [pc, #132]	; (8001104 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001080:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001082:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001084:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8001088:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 800108c:	491e      	ldr	r1, [pc, #120]	; (8001108 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800108e:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8001090:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001094:	491d      	ldr	r1, [pc, #116]	; (800110c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001096:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001098:	491d      	ldr	r1, [pc, #116]	; (8001110 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800109a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800109e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a0:	21f0      	movs	r1, #240	; 0xf0
 80010a2:	8001      	strh	r1, [r0, #0]
 80010a4:	481b      	ldr	r0, [pc, #108]	; (8001114 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80010a6:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a8:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010aa:	481b      	ldr	r0, [pc, #108]	; (8001118 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80010ac:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010b0:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80010b4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80010b8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80010bc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80010c0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80010c4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80010c8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010cc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80010d0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80010d4:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80010d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010da:	8001      	strh	r1, [r0, #0]
 80010dc:	480f      	ldr	r0, [pc, #60]	; (800111c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010de:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010e0:	490f      	ldr	r1, [pc, #60]	; (8001120 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010e2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010e4:	2201      	movs	r2, #1
 80010e6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010ea:	4a0e      	ldr	r2, [pc, #56]	; (8001124 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010ec:	601a      	str	r2, [r3, #0]
}
 80010ee:	bd70      	pop	{r4, r5, r6, pc}
 80010f0:	20001770 	.word	0x20001770
 80010f4:	2000176c 	.word	0x2000176c
 80010f8:	20002590 	.word	0x20002590
 80010fc:	08028580 	.word	0x08028580
 8001100:	20002510 	.word	0x20002510
 8001104:	200137b0 	.word	0x200137b0
 8001108:	01000001 	.word	0x01000001
 800110c:	01010000 	.word	0x01010000
 8001110:	200137bc 	.word	0x200137bc
 8001114:	200137b6 	.word	0x200137b6
 8001118:	200137b2 	.word	0x200137b2
 800111c:	200137b8 	.word	0x200137b8
 8001120:	200137b4 	.word	0x200137b4
 8001124:	0802870c 	.word	0x0802870c

08001128 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001128:	4801      	ldr	r0, [pc, #4]	; (8001130 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800112a:	f7ff bcf1 	b.w	8000b10 <_ZN8STM32DMAD1Ev>
 800112e:	bf00      	nop
 8001130:	20001770 	.word	0x20001770

08001134 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001134:	2000      	movs	r0, #0
 8001136:	4770      	bx	lr

08001138 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001138:	8081      	strh	r1, [r0, #4]
    }
 800113a:	4770      	bx	lr

0800113c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800113c:	80c1      	strh	r1, [r0, #6]
    }
 800113e:	4770      	bx	lr

08001140 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001140:	8101      	strh	r1, [r0, #8]
    }
 8001142:	4770      	bx	lr

08001144 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001144:	8141      	strh	r1, [r0, #10]
    }
 8001146:	4770      	bx	lr

08001148 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001148:	4770      	bx	lr

0800114a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800114a:	4770      	bx	lr

0800114c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800114c:	4770      	bx	lr

0800114e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800114e:	4770      	bx	lr

08001150 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001150:	4770      	bx	lr

08001152 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001152:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001154:	88c4      	ldrh	r4, [r0, #6]
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	1b12      	subs	r2, r2, r4
 800115a:	8884      	ldrh	r4, [r0, #4]
 800115c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800115e:	1b09      	subs	r1, r1, r4
 8001160:	b212      	sxth	r2, r2
    }
 8001162:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001166:	b209      	sxth	r1, r1
 8001168:	4718      	bx	r3

0800116a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800116a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800116e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001170:	f04f 33ff 	mov.w	r3, #4294967295
 8001174:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001176:	6813      	ldr	r3, [r2, #0]
 8001178:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800117a:	6010      	str	r0, [r2, #0]
    }
 800117c:	4770      	bx	lr

0800117e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800117e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001182:	b11a      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001184:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001188:	b102      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800118a:	6018      	str	r0, [r3, #0]
        }
    }
 800118c:	4770      	bx	lr

0800118e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800118e:	2000      	movs	r0, #0
 8001190:	4770      	bx	lr

08001192 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001192:	888b      	ldrh	r3, [r1, #4]
 8001194:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001196:	2001      	movs	r0, #1
 8001198:	4770      	bx	lr

0800119a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800119a:	4770      	bx	lr

0800119c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800119c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80011a0:	4770      	bx	lr

080011a2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80011a2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80011a6:	4770      	bx	lr

080011a8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80011a8:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80011aa:	2200      	movs	r2, #0
        return rect.width;
 80011ac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80011b0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80011b4:	8002      	strh	r2, [r0, #0]
 80011b6:	8042      	strh	r2, [r0, #2]
 80011b8:	8084      	strh	r4, [r0, #4]
 80011ba:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80011bc:	bd10      	pop	{r4, pc}

080011be <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80011be:	2200      	movs	r2, #0
 80011c0:	8002      	strh	r2, [r0, #0]
 80011c2:	8042      	strh	r2, [r0, #2]
 80011c4:	8082      	strh	r2, [r0, #4]
 80011c6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80011c8:	4770      	bx	lr
	...

080011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011cc:	4b03      	ldr	r3, [pc, #12]	; (80011dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80011ce:	2290      	movs	r2, #144	; 0x90
 80011d0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80011d4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop
 80011dc:	e000e100 	.word	0xe000e100

080011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e0:	4a09      	ldr	r2, [pc, #36]	; (8001208 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80011e2:	490a      	ldr	r1, [pc, #40]	; (800120c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80011e4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011e6:	480a      	ldr	r0, [pc, #40]	; (8001210 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80011ec:	3b01      	subs	r3, #1
 80011ee:	b29b      	uxth	r3, r3
 80011f0:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011f2:	6911      	ldr	r1, [r2, #16]
 80011f4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80011f8:	3901      	subs	r1, #1
 80011fa:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80011fc:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80011fe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001200:	f043 0301 	orr.w	r3, r3, #1
 8001204:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001206:	4770      	bx	lr
 8001208:	40016800 	.word	0x40016800
 800120c:	20002616 	.word	0x20002616
 8001210:	20002614 	.word	0x20002614

08001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001214:	4b01      	ldr	r3, [pc, #4]	; (800121c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001216:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800121a:	4770      	bx	lr
 800121c:	40016800 	.word	0x40016800

08001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001220:	4b02      	ldr	r3, [pc, #8]	; (800122c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001222:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001224:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001228:	625a      	str	r2, [r3, #36]	; 0x24
}
 800122a:	4770      	bx	lr
 800122c:	40016800 	.word	0x40016800

08001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001230:	b570      	push	{r4, r5, r6, lr}
 8001232:	4604      	mov	r4, r0
    HAL::initialize();
 8001234:	f00d fdf7 	bl	800ee26 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001238:	6823      	ldr	r3, [r4, #0]
 800123a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800123c:	f012 fda0 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
 8001240:	4601      	mov	r1, r0
 8001242:	4620      	mov	r0, r4
 8001244:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001246:	6823      	ldr	r3, [r4, #0]
 8001248:	4a05      	ldr	r2, [pc, #20]	; (8001260 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800124a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800124e:	4620      	mov	r0, r4
 8001250:	46ac      	mov	ip, r5
 8001252:	2300      	movs	r3, #0
}
 8001254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001258:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800125c:	4760      	bx	ip
 800125e:	bf00      	nop
 8001260:	d004b000 	.word	0xd004b000

08001264 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001264:	f00d bdc6 	b.w	800edf4 <_ZN8touchgfx3HAL10beginFrameEv>

08001268 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001268:	f00d bdd0 	b.w	800ee0c <_ZN8touchgfx3HAL8endFrameEv>

0800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800126c:	f00d bd8c 	b.w	800ed88 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001270 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001270:	f00d beed 	b.w	800f04e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001274:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001278:	b112      	cbz	r2, 8001280 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800127a:	6803      	ldr	r3, [r0, #0]
 800127c:	695b      	ldr	r3, [r3, #20]
 800127e:	4718      	bx	r3
    }
 8001280:	4770      	bx	lr
	...

08001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001284:	4b03      	ldr	r3, [pc, #12]	; (8001294 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001286:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800128a:	609a      	str	r2, [r3, #8]
 800128c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001290:	609a      	str	r2, [r3, #8]
}
 8001292:	4770      	bx	lr
 8001294:	e000e100 	.word	0xe000e100

08001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001298:	4b08      	ldr	r3, [pc, #32]	; (80012bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800129a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800129e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012a6:	f3bf 8f6f 	isb	sy
 80012aa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80012ae:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012b6:	f3bf 8f6f 	isb	sy
}
 80012ba:	4770      	bx	lr
 80012bc:	e000e100 	.word	0xe000e100

080012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80012c0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80012c2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80012c4:	4e12      	ldr	r6, [pc, #72]	; (8001310 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80012c6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80012c8:	4b12      	ldr	r3, [pc, #72]	; (8001314 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80012ca:	6003      	str	r3, [r0, #0]
 80012cc:	6833      	ldr	r3, [r6, #0]
 80012ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80012d2:	4605      	mov	r5, r0
 80012d4:	b10a      	cbz	r2, 80012da <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80012d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012d8:	b900      	cbnz	r0, 80012dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80012da:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80012dc:	6803      	ldr	r3, [r0, #0]
 80012de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012e0:	4798      	blx	r3
        return auxiliaryLCD;
 80012e2:	6833      	ldr	r3, [r6, #0]
 80012e4:	fab0 f480 	clz	r4, r0
 80012e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012ea:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80012ec:	b130      	cbz	r0, 80012fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80012ee:	6803      	ldr	r3, [r0, #0]
 80012f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012f2:	4798      	blx	r3
 80012f4:	2800      	cmp	r0, #0
 80012f6:	bf08      	it	eq
 80012f8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80012fc:	b92c      	cbnz	r4, 800130a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80012fe:	4b06      	ldr	r3, [pc, #24]	; (8001318 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001300:	4a06      	ldr	r2, [pc, #24]	; (800131c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001302:	4807      	ldr	r0, [pc, #28]	; (8001320 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001304:	212c      	movs	r1, #44	; 0x2c
 8001306:	f026 f88b 	bl	8027420 <__assert_func>
    }
 800130a:	4628      	mov	r0, r5
 800130c:	bd70      	pop	{r4, r5, r6, pc}
 800130e:	bf00      	nop
 8001310:	200137bc 	.word	0x200137bc
 8001314:	08028c94 	.word	0x08028c94
 8001318:	08028b90 	.word	0x08028b90
 800131c:	08028bee 	.word	0x08028bee
 8001320:	08028c27 	.word	0x08028c27

08001324 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001324:	b510      	push	{r4, lr}
        return instance;
 8001326:	4c14      	ldr	r4, [pc, #80]	; (8001378 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	b323      	cbz	r3, 8001376 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800132c:	4b13      	ldr	r3, [pc, #76]	; (800137c <HAL_LTDC_LineEventCallback+0x58>)
 800132e:	4a14      	ldr	r2, [pc, #80]	; (8001380 <HAL_LTDC_LineEventCallback+0x5c>)
 8001330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001332:	8811      	ldrh	r1, [r2, #0]
 8001334:	428b      	cmp	r3, r1
 8001336:	d113      	bne.n	8001360 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001338:	4b12      	ldr	r3, [pc, #72]	; (8001384 <HAL_LTDC_LineEventCallback+0x60>)
 800133a:	8819      	ldrh	r1, [r3, #0]
 800133c:	f008 fdc2 	bl	8009ec4 <HAL_LTDC_ProgramLineEvent>
 8001340:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001342:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001346:	3301      	adds	r3, #1
 8001348:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800134c:	f7ff fb8e 	bl	8000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001350:	6820      	ldr	r0, [r4, #0]
 8001352:	f00e faa7 	bl	800f8a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800135a:	2000      	movs	r0, #0
 800135c:	f7ff ba06 	b.w	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001360:	f008 fdb0 	bl	8009ec4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001364:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001366:	6803      	ldr	r3, [r0, #0]
 8001368:	6a1b      	ldr	r3, [r3, #32]
 800136a:	4798      	blx	r3
    }
 800136c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001370:	2000      	movs	r0, #0
 8001372:	f7ff ba13 	b.w	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001376:	bd10      	pop	{r4, pc}
 8001378:	200137bc 	.word	0x200137bc
 800137c:	40016800 	.word	0x40016800
 8001380:	20002616 	.word	0x20002616
 8001384:	20002614 	.word	0x20002614

08001388 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001388:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800138a:	2064      	movs	r0, #100	; 0x64
 800138c:	f00a faf4 	bl	800b978 <osDelay>
  for(;;)
 8001390:	e7fb      	b.n	800138a <StartDefaultTask+0x2>
 8001392:	bf00      	nop

08001394 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001394:	b580      	push	{r7, lr}
 8001396:	4c10      	ldr	r4, [pc, #64]	; (80013d8 <StartTimeoutTask+0x44>)
 8001398:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80013e4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800139c:	4f0f      	ldr	r7, [pc, #60]	; (80013dc <StartTimeoutTask+0x48>)
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;


	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800139e:	4e10      	ldr	r6, [pc, #64]	; (80013e0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80013a0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013a2:	2300      	movs	r3, #0
 80013a4:	461a      	mov	r2, r3
 80013a6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80013a8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013aa:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80013ae:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013b0:	f00a fbde 	bl	800bb70 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80013b4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80013b6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013b8:	4638      	mov	r0, r7
 80013ba:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80013bc:	b912      	cbnz	r2, 80013c4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80013be:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013c0:	f006 ff64 	bl	800828c <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80013c4:	4630      	mov	r0, r6
 80013c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ca:	f006 ff63 	bl	8008294 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80013ce:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013d2:	f00a fad1 	bl	800b978 <osDelay>
	  sleep_timeout_value--;
 80013d6:	e7e3      	b.n	80013a0 <StartTimeoutTask+0xc>
 80013d8:	20000014 	.word	0x20000014
 80013dc:	40021000 	.word	0x40021000
 80013e0:	40021800 	.word	0x40021800
 80013e4:	20002620 	.word	0x20002620

080013e8 <SystemClock_Config>:
{
 80013e8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013ea:	2400      	movs	r4, #0
{
 80013ec:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013ee:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80013f2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013f6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80013fa:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013fe:	4a1e      	ldr	r2, [pc, #120]	; (8001478 <SystemClock_Config+0x90>)
 8001400:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001402:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001404:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001406:	4b1d      	ldr	r3, [pc, #116]	; (800147c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001408:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800140c:	6411      	str	r1, [r2, #64]	; 0x40
 800140e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001410:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001414:	9201      	str	r2, [sp, #4]
 8001416:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001418:	9402      	str	r4, [sp, #8]
 800141a:	681a      	ldr	r2, [r3, #0]
 800141c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001420:	601a      	str	r2, [r3, #0]
 8001422:	681b      	ldr	r3, [r3, #0]
 8001424:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001428:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800142a:	2201      	movs	r2, #1
 800142c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001430:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001434:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001436:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001438:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800143a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800143e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001442:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001446:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001448:	2202      	movs	r2, #2
 800144a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800144c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800144e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001452:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001454:	f008 fd58 	bl	8009f08 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001458:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800145a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800145e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001462:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001466:	a803      	add	r0, sp, #12
 8001468:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800146a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800146e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001470:	f008 ff62 	bl	800a338 <HAL_RCC_ClockConfig>
}
 8001474:	b015      	add	sp, #84	; 0x54
 8001476:	bd30      	pop	{r4, r5, pc}
 8001478:	40023800 	.word	0x40023800
 800147c:	40007000 	.word	0x40007000

08001480 <main>:
{
 8001480:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001484:	2400      	movs	r4, #0
{
 8001486:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001488:	f006 fbda 	bl	8007c40 <HAL_Init>
  SystemClock_Config();
 800148c:	f7ff ffac 	bl	80013e8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001490:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001494:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001498:	4bc1      	ldr	r3, [pc, #772]	; (80017a0 <main+0x320>)
 800149a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800149c:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800149e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014a0:	48c0      	ldr	r0, [pc, #768]	; (80017a4 <main+0x324>)
  hi2c3.Instance = I2C3;
 80014a2:	4dc1      	ldr	r5, [pc, #772]	; (80017a8 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014a4:	f041 0110 	orr.w	r1, r1, #16
 80014a8:	6319      	str	r1, [r3, #48]	; 0x30
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ac:	f001 0110 	and.w	r1, r1, #16
 80014b0:	9100      	str	r1, [sp, #0]
 80014b2:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014b4:	9401      	str	r4, [sp, #4]
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f041 0120 	orr.w	r1, r1, #32
 80014bc:	6319      	str	r1, [r3, #48]	; 0x30
 80014be:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c0:	f001 0120 	and.w	r1, r1, #32
 80014c4:	9101      	str	r1, [sp, #4]
 80014c6:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014c8:	9402      	str	r4, [sp, #8]
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80014d0:	6319      	str	r1, [r3, #48]	; 0x30
 80014d2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d4:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80014d8:	9102      	str	r1, [sp, #8]
 80014da:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014dc:	9403      	str	r4, [sp, #12]
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f041 0104 	orr.w	r1, r1, #4
 80014e4:	6319      	str	r1, [r3, #48]	; 0x30
 80014e6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e8:	f001 0104 	and.w	r1, r1, #4
 80014ec:	9103      	str	r1, [sp, #12]
 80014ee:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014f0:	9404      	str	r4, [sp, #16]
 80014f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014f4:	f041 0101 	orr.w	r1, r1, #1
 80014f8:	6319      	str	r1, [r3, #48]	; 0x30
 80014fa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014fc:	f001 0101 	and.w	r1, r1, #1
 8001500:	9104      	str	r1, [sp, #16]
 8001502:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001504:	9405      	str	r4, [sp, #20]
 8001506:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001508:	f041 0102 	orr.w	r1, r1, #2
 800150c:	6319      	str	r1, [r3, #48]	; 0x30
 800150e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001510:	f001 0102 	and.w	r1, r1, #2
 8001514:	9105      	str	r1, [sp, #20]
 8001516:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001518:	9406      	str	r4, [sp, #24]
 800151a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800151c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001520:	6319      	str	r1, [r3, #48]	; 0x30
 8001522:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001524:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001528:	9106      	str	r1, [sp, #24]
 800152a:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800152c:	9407      	str	r4, [sp, #28]
 800152e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001530:	f041 0108 	orr.w	r1, r1, #8
 8001534:	6319      	str	r1, [r3, #48]	; 0x30
 8001536:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001538:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800153c:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800153e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001540:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001542:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001544:	f006 fea2 	bl	800828c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001548:	4896      	ldr	r0, [pc, #600]	; (80017a4 <main+0x324>)
 800154a:	2120      	movs	r1, #32
 800154c:	2201      	movs	r2, #1
 800154e:	f006 fe9d 	bl	800828c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001552:	4896      	ldr	r0, [pc, #600]	; (80017ac <main+0x32c>)
 8001554:	4622      	mov	r2, r4
 8001556:	2104      	movs	r1, #4
 8001558:	f006 fe98 	bl	800828c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800155c:	4894      	ldr	r0, [pc, #592]	; (80017b0 <main+0x330>)
 800155e:	4622      	mov	r2, r4
 8001560:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001564:	f006 fe92 	bl	800828c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001568:	2201      	movs	r2, #1
 800156a:	4892      	ldr	r0, [pc, #584]	; (80017b4 <main+0x334>)
 800156c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001570:	f006 fe8c 	bl	800828c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001574:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001576:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800157a:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800157c:	4889      	ldr	r0, [pc, #548]	; (80017a4 <main+0x324>)
 800157e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001580:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001584:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001588:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800158c:	f006 fd3a 	bl	8008004 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001590:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001594:	4883      	ldr	r0, [pc, #524]	; (80017a4 <main+0x324>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001596:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800159a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800159c:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800159e:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a0:	f006 fd30 	bl	8008004 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015a4:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015a6:	487f      	ldr	r0, [pc, #508]	; (80017a4 <main+0x324>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015a8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015aa:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ac:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ae:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015b2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b6:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b8:	f006 fd24 	bl	8008004 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015bc:	487b      	ldr	r0, [pc, #492]	; (80017ac <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015be:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015c2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015c4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015c8:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ca:	f006 fd1b 	bl	8008004 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015ce:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d2:	4877      	ldr	r0, [pc, #476]	; (80017b0 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015d4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015dc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	f006 fd11 	bl	8008004 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015e2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015e6:	4874      	ldr	r0, [pc, #464]	; (80017b8 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015e8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015ea:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80015ec:	230f      	movs	r3, #15
 80015ee:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 80015f0:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015f4:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015f8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015fa:	f006 fd03 	bl	8008004 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 80015fe:	486d      	ldr	r0, [pc, #436]	; (80017b4 <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001600:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001604:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001606:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800160a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800160c:	f006 fcfa 	bl	8008004 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001610:	4622      	mov	r2, r4
 8001612:	2105      	movs	r1, #5
 8001614:	2009      	movs	r0, #9
 8001616:	f006 fb63 	bl	8007ce0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 800161a:	2009      	movs	r0, #9
 800161c:	f006 fb9e 	bl	8007d5c <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001620:	4866      	ldr	r0, [pc, #408]	; (80017bc <main+0x33c>)
 8001622:	4b67      	ldr	r3, [pc, #412]	; (80017c0 <main+0x340>)
 8001624:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001626:	f006 fba7 	bl	8007d78 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800162a:	4966      	ldr	r1, [pc, #408]	; (80017c4 <main+0x344>)
 800162c:	4b66      	ldr	r3, [pc, #408]	; (80017c8 <main+0x348>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800162e:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001630:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001634:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001638:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800163a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800163e:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001642:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001646:	f007 f887 	bl	8008758 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800164a:	2110      	movs	r1, #16
 800164c:	4628      	mov	r0, r5
 800164e:	f008 fa4f 	bl	8009af0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001652:	4621      	mov	r1, r4
 8001654:	4628      	mov	r0, r5
 8001656:	f008 fa6b 	bl	8009b30 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800165a:	f8df c184 	ldr.w	ip, [pc, #388]	; 80017e0 <main+0x360>
  hspi5.Instance = SPI5;
 800165e:	485b      	ldr	r0, [pc, #364]	; (80017cc <main+0x34c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001660:	4d5b      	ldr	r5, [pc, #364]	; (80017d0 <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001662:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001664:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001668:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166c:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001670:	2318      	movs	r3, #24
 8001672:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001676:	230a      	movs	r3, #10
 8001678:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800167a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800167e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001682:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001686:	f009 f945 	bl	800a914 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 800168a:	2307      	movs	r3, #7
 800168c:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 800168e:	9312      	str	r3, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001690:	4b50      	ldr	r3, [pc, #320]	; (80017d4 <main+0x354>)
 8001692:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001694:	2040      	movs	r0, #64	; 0x40
 8001696:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800169a:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800169e:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016a6:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016aa:	a90f      	add	r1, sp, #60	; 0x3c
 80016ac:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ae:	622b      	str	r3, [r5, #32]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016b0:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80016b4:	f8c5 a00c 	str.w	sl, [r5, #12]
  SdramTiming.RPDelay = 2;
 80016b8:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016bc:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016be:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016c0:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016c4:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 80016c8:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 80016ca:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016cc:	f009 f830 	bl	800a730 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016d4:	a90b      	add	r1, sp, #44	; 0x2c
 80016d6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016d8:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016dc:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80016e0:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016e2:	f009 f847 	bl	800a774 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016e6:	4630      	mov	r0, r6
 80016e8:	f006 fad6 	bl	8007c98 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f0:	a90b      	add	r1, sp, #44	; 0x2c
 80016f2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016f4:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016f8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016fc:	f009 f83a 	bl	800a774 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001700:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001704:	a90b      	add	r1, sp, #44	; 0x2c
 8001706:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001708:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 800170c:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001710:	f009 f830 	bl	800a774 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001714:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001718:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800171a:	9b08      	ldr	r3, [sp, #32]
 800171c:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800171e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001722:	a90b      	add	r1, sp, #44	; 0x2c
 8001724:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001726:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 800172a:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800172c:	f009 f822 	bl	800a774 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001730:	4628      	mov	r0, r5
 8001732:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8001736:	4d28      	ldr	r5, [pc, #160]	; (80017d8 <main+0x358>)
  htim1.Instance = TIM1;
 8001738:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80017e4 <main+0x364>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800173c:	f009 f838 	bl	800a7b0 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001740:	2234      	movs	r2, #52	; 0x34
 8001742:	4621      	mov	r1, r4
 8001744:	a80f      	add	r0, sp, #60	; 0x3c
 8001746:	f026 f870 	bl	802782a <memset>
  hltdc.Instance = LTDC;
 800174a:	4b24      	ldr	r3, [pc, #144]	; (80017dc <main+0x35c>)
 800174c:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 800174e:	2309      	movs	r3, #9
 8001750:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001752:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001754:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8001758:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800175a:	f240 190d 	movw	r9, #269	; 0x10d
 800175e:	f240 1343 	movw	r3, #323	; 0x143
 8001762:	e9c5 9309 	strd	r9, r3, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8001766:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8001768:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800176c:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800176e:	f240 1a17 	movw	sl, #279	; 0x117
 8001772:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001776:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001778:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800177c:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001780:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001784:	f008 f9f8 	bl	8009b78 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001788:	23f0      	movs	r3, #240	; 0xf0
 800178a:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 800178c:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 800178e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001792:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001794:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001796:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001798:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 800179c:	e024      	b.n	80017e8 <main+0x368>
 800179e:	bf00      	nop
 80017a0:	40023800 	.word	0x40023800
 80017a4:	40021000 	.word	0x40021000
 80017a8:	20002674 	.word	0x20002674
 80017ac:	40020800 	.word	0x40020800
 80017b0:	40020c00 	.word	0x40020c00
 80017b4:	40021800 	.word	0x40021800
 80017b8:	40020000 	.word	0x40020000
 80017bc:	2000262c 	.word	0x2000262c
 80017c0:	40023000 	.word	0x40023000
 80017c4:	40005c00 	.word	0x40005c00
 80017c8:	000186a0 	.word	0x000186a0
 80017cc:	200027a4 	.word	0x200027a4
 80017d0:	20002770 	.word	0x20002770
 80017d4:	a0000140 	.word	0xa0000140
 80017d8:	200026c8 	.word	0x200026c8
 80017dc:	40016800 	.word	0x40016800
 80017e0:	40015000 	.word	0x40015000
 80017e4:	200027fc 	.word	0x200027fc
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017e8:	4622      	mov	r2, r4
 80017ea:	a90f      	add	r1, sp, #60	; 0x3c
 80017ec:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017ee:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017f0:	2305      	movs	r3, #5
 80017f2:	e9cd c316 	strd	ip, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 80017f6:	4d4b      	ldr	r5, [pc, #300]	; (8001924 <main+0x4a4>)
  pLayerCfg.WindowX0 = 0;
 80017f8:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 80017fa:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017fc:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 80017fe:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001800:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001802:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001806:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800180a:	f008 fa8b 	bl	8009d24 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800180e:	4b46      	ldr	r3, [pc, #280]	; (8001928 <main+0x4a8>)
 8001810:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001816:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001818:	4d44      	ldr	r5, [pc, #272]	; (800192c <main+0x4ac>)
  LcdDrv->DisplayOff();
 800181a:	68db      	ldr	r3, [r3, #12]
 800181c:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800181e:	4b44      	ldr	r3, [pc, #272]	; (8001930 <main+0x4b0>)
 8001820:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001822:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001826:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800182a:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 800182c:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.Init.OutputOffset = 0;
 8001830:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001832:	f006 facb 	bl	8007dcc <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001836:	4631      	mov	r1, r6
 8001838:	4628      	mov	r0, r5
 800183a:	f006 fb8d 	bl	8007f58 <HAL_DMA2D_ConfigLayer>
  htim1.Init.Period = 65535;
 800183e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  htim1.Instance = TIM1;
 8001842:	4b3c      	ldr	r3, [pc, #240]	; (8001934 <main+0x4b4>)
  htim3.Instance = TIM3;
 8001844:	4d3c      	ldr	r5, [pc, #240]	; (8001938 <main+0x4b8>)
  htim1.Instance = TIM1;
 8001846:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800184a:	4640      	mov	r0, r8
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800184c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001850:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001854:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001858:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 800185c:	e9c8 4404 	strd	r4, r4, [r8, #16]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001860:	9413      	str	r4, [sp, #76]	; 0x4c
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001862:	f8c8 4018 	str.w	r4, [r8, #24]
  htim1.Init.Period = 65535;
 8001866:	f8c8 600c 	str.w	r6, [r8, #12]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800186a:	f009 fc43 	bl	800b0f4 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800186e:	a90f      	add	r1, sp, #60	; 0x3c
 8001870:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001872:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001876:	f009 fdb7 	bl	800b3e8 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800187a:	a90b      	add	r1, sp, #44	; 0x2c
 800187c:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800187e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001882:	f009 feef 	bl	800b664 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001886:	4b2d      	ldr	r3, [pc, #180]	; (800193c <main+0x4bc>)
 8001888:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800188a:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800188c:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8001890:	60ee      	str	r6, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001892:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001894:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001896:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800189a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800189e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80018a2:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80018a6:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018a8:	9409      	str	r4, [sp, #36]	; 0x24
 80018aa:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80018ac:	f009 fc22 	bl	800b0f4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018b4:	a90b      	add	r1, sp, #44	; 0x2c
 80018b6:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018b8:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018ba:	f009 fce5 	bl	800b288 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018be:	a90f      	add	r1, sp, #60	; 0x3c
 80018c0:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80018c2:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018c6:	f009 fd8f 	bl	800b3e8 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018ca:	a909      	add	r1, sp, #36	; 0x24
 80018cc:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018ce:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018d2:	f009 fec7 	bl	800b664 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 80018d6:	f7fe fe85 	bl	80005e4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018da:	f7fe fe81 	bl	80005e0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80018de:	f009 ffd3 	bl	800b888 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018e2:	4a17      	ldr	r2, [pc, #92]	; (8001940 <main+0x4c0>)
 80018e4:	4639      	mov	r1, r7
 80018e6:	4658      	mov	r0, fp
 80018e8:	f00a f908 	bl	800bafc <osMessageQueueNew>
 80018ec:	4b15      	ldr	r3, [pc, #84]	; (8001944 <main+0x4c4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018ee:	4a16      	ldr	r2, [pc, #88]	; (8001948 <main+0x4c8>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018f0:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018f2:	4621      	mov	r1, r4
 80018f4:	4815      	ldr	r0, [pc, #84]	; (800194c <main+0x4cc>)
 80018f6:	f009 fff3 	bl	800b8e0 <osThreadNew>
 80018fa:	4b15      	ldr	r3, [pc, #84]	; (8001950 <main+0x4d0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018fc:	4a15      	ldr	r2, [pc, #84]	; (8001954 <main+0x4d4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fe:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001900:	4621      	mov	r1, r4
 8001902:	4815      	ldr	r0, [pc, #84]	; (8001958 <main+0x4d8>)
 8001904:	f009 ffec 	bl	800b8e0 <osThreadNew>
 8001908:	4b14      	ldr	r3, [pc, #80]	; (800195c <main+0x4dc>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800190a:	4a15      	ldr	r2, [pc, #84]	; (8001960 <main+0x4e0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800190c:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800190e:	4621      	mov	r1, r4
 8001910:	4814      	ldr	r0, [pc, #80]	; (8001964 <main+0x4e4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001912:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001914:	f009 ffe4 	bl	800b8e0 <osThreadNew>
 8001918:	4b13      	ldr	r3, [pc, #76]	; (8001968 <main+0x4e8>)
 800191a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800191c:	f009 ffc6 	bl	800b8ac <osKernelStart>
  while (1)
 8001920:	e7fe      	b.n	8001920 <main+0x4a0>
 8001922:	bf00      	nop
 8001924:	2000261c 	.word	0x2000261c
 8001928:	20000018 	.word	0x20000018
 800192c:	20002634 	.word	0x20002634
 8001930:	4002b000 	.word	0x4002b000
 8001934:	40010000 	.word	0x40010000
 8001938:	20002844 	.word	0x20002844
 800193c:	40000400 	.word	0x40000400
 8001940:	08028d04 	.word	0x08028d04
 8001944:	20002620 	.word	0x20002620
 8001948:	08028d40 	.word	0x08028d40
 800194c:	08001389 	.word	0x08001389
 8001950:	20002628 	.word	0x20002628
 8001954:	08028ce0 	.word	0x08028ce0
 8001958:	080005f5 	.word	0x080005f5
 800195c:	20002618 	.word	0x20002618
 8001960:	08028d1c 	.word	0x08028d1c
 8001964:	08001395 	.word	0x08001395
 8001968:	20002624 	.word	0x20002624

0800196c <IOE_Init>:
 800196c:	4770      	bx	lr
 800196e:	bf00      	nop

08001970 <IOE_ITConfig>:
 8001970:	4770      	bx	lr
 8001972:	bf00      	nop

08001974 <IOE_Write>:
{
 8001974:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001976:	4c09      	ldr	r4, [pc, #36]	; (800199c <IOE_Write+0x28>)
{
 8001978:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800197a:	6824      	ldr	r4, [r4, #0]
 800197c:	9402      	str	r4, [sp, #8]
{
 800197e:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001980:	2301      	movs	r3, #1
 8001982:	f88d 4017 	strb.w	r4, [sp, #23]
 8001986:	f10d 0417 	add.w	r4, sp, #23
 800198a:	460a      	mov	r2, r1
 800198c:	9301      	str	r3, [sp, #4]
 800198e:	4601      	mov	r1, r0
 8001990:	9400      	str	r4, [sp, #0]
 8001992:	4803      	ldr	r0, [pc, #12]	; (80019a0 <IOE_Write+0x2c>)
 8001994:	f006 ffa8 	bl	80088e8 <HAL_I2C_Mem_Write>
}
 8001998:	b006      	add	sp, #24
 800199a:	bd10      	pop	{r4, pc}
 800199c:	2000000c 	.word	0x2000000c
 80019a0:	20002674 	.word	0x20002674

080019a4 <IOE_Read>:
{
 80019a4:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019a6:	4b0b      	ldr	r3, [pc, #44]	; (80019d4 <IOE_Read+0x30>)
{
 80019a8:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	9302      	str	r3, [sp, #8]
{
 80019ae:	4684      	mov	ip, r0
 80019b0:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b2:	2301      	movs	r3, #1
 80019b4:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80019b8:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ba:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019be:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019c2:	4661      	mov	r1, ip
 80019c4:	4804      	ldr	r0, [pc, #16]	; (80019d8 <IOE_Read+0x34>)
 80019c6:	f007 f881 	bl	8008acc <HAL_I2C_Mem_Read>
}
 80019ca:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019ce:	b007      	add	sp, #28
 80019d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80019d4:	2000000c 	.word	0x2000000c
 80019d8:	20002674 	.word	0x20002674

080019dc <IOE_ReadMultiple>:
{
 80019dc:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019de:	4c09      	ldr	r4, [pc, #36]	; (8001a04 <IOE_ReadMultiple+0x28>)
{
 80019e0:	b084      	sub	sp, #16
 80019e2:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019e4:	6820      	ldr	r0, [r4, #0]
 80019e6:	9002      	str	r0, [sp, #8]
 80019e8:	e9cd 2300 	strd	r2, r3, [sp]
 80019ec:	4806      	ldr	r0, [pc, #24]	; (8001a08 <IOE_ReadMultiple+0x2c>)
 80019ee:	460a      	mov	r2, r1
 80019f0:	2301      	movs	r3, #1
 80019f2:	4661      	mov	r1, ip
 80019f4:	f007 f86a 	bl	8008acc <HAL_I2C_Mem_Read>
}
 80019f8:	3800      	subs	r0, #0
 80019fa:	bf18      	it	ne
 80019fc:	2001      	movne	r0, #1
 80019fe:	b004      	add	sp, #16
 8001a00:	bd10      	pop	{r4, pc}
 8001a02:	bf00      	nop
 8001a04:	2000000c 	.word	0x2000000c
 8001a08:	20002674 	.word	0x20002674

08001a0c <IOE_Delay>:
 8001a0c:	f006 b944 	b.w	8007c98 <HAL_Delay>

08001a10 <LCD_IO_Init>:
{
 8001a10:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a12:	4806      	ldr	r0, [pc, #24]	; (8001a2c <LCD_IO_Init+0x1c>)
 8001a14:	2200      	movs	r2, #0
 8001a16:	2104      	movs	r1, #4
 8001a18:	f006 fc38 	bl	800828c <HAL_GPIO_WritePin>
}
 8001a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a20:	4802      	ldr	r0, [pc, #8]	; (8001a2c <LCD_IO_Init+0x1c>)
 8001a22:	2201      	movs	r2, #1
 8001a24:	2104      	movs	r1, #4
 8001a26:	f006 bc31 	b.w	800828c <HAL_GPIO_WritePin>
 8001a2a:	bf00      	nop
 8001a2c:	40020800 	.word	0x40020800

08001a30 <LCD_IO_WriteData>:
{
 8001a30:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a32:	4d10      	ldr	r5, [pc, #64]	; (8001a74 <LCD_IO_WriteData+0x44>)
{
 8001a34:	b083      	sub	sp, #12
 8001a36:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a38:	2201      	movs	r2, #1
 8001a3a:	480f      	ldr	r0, [pc, #60]	; (8001a78 <LCD_IO_WriteData+0x48>)
 8001a3c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a40:	f006 fc24 	bl	800828c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a44:	4628      	mov	r0, r5
 8001a46:	2200      	movs	r2, #0
 8001a48:	2104      	movs	r1, #4
 8001a4a:	f006 fc1f 	bl	800828c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a4e:	4b0b      	ldr	r3, [pc, #44]	; (8001a7c <LCD_IO_WriteData+0x4c>)
 8001a50:	480b      	ldr	r0, [pc, #44]	; (8001a80 <LCD_IO_WriteData+0x50>)
 8001a52:	681b      	ldr	r3, [r3, #0]
 8001a54:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a58:	f10d 0106 	add.w	r1, sp, #6
 8001a5c:	2201      	movs	r2, #1
 8001a5e:	f008 ffbb 	bl	800a9d8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a62:	2201      	movs	r2, #1
 8001a64:	2104      	movs	r1, #4
 8001a66:	4628      	mov	r0, r5
}
 8001a68:	b003      	add	sp, #12
 8001a6a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a6e:	f006 bc0d 	b.w	800828c <HAL_GPIO_WritePin>
 8001a72:	bf00      	nop
 8001a74:	40020800 	.word	0x40020800
 8001a78:	40020c00 	.word	0x40020c00
 8001a7c:	20000010 	.word	0x20000010
 8001a80:	200027a4 	.word	0x200027a4

08001a84 <LCD_IO_WriteReg>:
{
 8001a84:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a86:	4d10      	ldr	r5, [pc, #64]	; (8001ac8 <LCD_IO_WriteReg+0x44>)
{
 8001a88:	b083      	sub	sp, #12
 8001a8a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a8c:	2200      	movs	r2, #0
 8001a8e:	480f      	ldr	r0, [pc, #60]	; (8001acc <LCD_IO_WriteReg+0x48>)
 8001a90:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a94:	f006 fbfa 	bl	800828c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a98:	4628      	mov	r0, r5
 8001a9a:	2200      	movs	r2, #0
 8001a9c:	2104      	movs	r1, #4
 8001a9e:	f006 fbf5 	bl	800828c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aa2:	4b0b      	ldr	r3, [pc, #44]	; (8001ad0 <LCD_IO_WriteReg+0x4c>)
 8001aa4:	480b      	ldr	r0, [pc, #44]	; (8001ad4 <LCD_IO_WriteReg+0x50>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001aa8:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aac:	f10d 0106 	add.w	r1, sp, #6
 8001ab0:	2201      	movs	r2, #1
 8001ab2:	f008 ff91 	bl	800a9d8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ab6:	2201      	movs	r2, #1
 8001ab8:	2104      	movs	r1, #4
 8001aba:	4628      	mov	r0, r5
}
 8001abc:	b003      	add	sp, #12
 8001abe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	f006 bbe3 	b.w	800828c <HAL_GPIO_WritePin>
 8001ac6:	bf00      	nop
 8001ac8:	40020800 	.word	0x40020800
 8001acc:	40020c00 	.word	0x40020c00
 8001ad0:	20000010 	.word	0x20000010
 8001ad4:	200027a4 	.word	0x200027a4

08001ad8 <LCD_IO_ReadData>:
{
 8001ad8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001adc:	4e19      	ldr	r6, [pc, #100]	; (8001b44 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ade:	4f1a      	ldr	r7, [pc, #104]	; (8001b48 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ae0:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b4c <LCD_IO_ReadData+0x74>
 8001ae4:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b50 <LCD_IO_ReadData+0x78>
{
 8001ae8:	b083      	sub	sp, #12
 8001aea:	460c      	mov	r4, r1
 8001aec:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aee:	2200      	movs	r2, #0
 8001af0:	4630      	mov	r0, r6
 8001af2:	2104      	movs	r1, #4
 8001af4:	f006 fbca 	bl	800828c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001af8:	4638      	mov	r0, r7
 8001afa:	2200      	movs	r2, #0
 8001afc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b00:	f006 fbc4 	bl	800828c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b04:	f8d9 3000 	ldr.w	r3, [r9]
 8001b08:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b0c:	a901      	add	r1, sp, #4
 8001b0e:	2201      	movs	r2, #1
 8001b10:	4640      	mov	r0, r8
 8001b12:	f008 ff61 	bl	800a9d8 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b16:	f8d9 3000 	ldr.w	r3, [r9]
 8001b1a:	4622      	mov	r2, r4
 8001b1c:	a901      	add	r1, sp, #4
 8001b1e:	4640      	mov	r0, r8
 8001b20:	f009 fa02 	bl	800af28 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b24:	4638      	mov	r0, r7
 8001b26:	2201      	movs	r2, #1
 8001b28:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b2c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b2e:	f006 fbad 	bl	800828c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b32:	4630      	mov	r0, r6
 8001b34:	2201      	movs	r2, #1
 8001b36:	2104      	movs	r1, #4
 8001b38:	f006 fba8 	bl	800828c <HAL_GPIO_WritePin>
}
 8001b3c:	4620      	mov	r0, r4
 8001b3e:	b003      	add	sp, #12
 8001b40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b44:	40020800 	.word	0x40020800
 8001b48:	40020c00 	.word	0x40020c00
 8001b4c:	20000010 	.word	0x20000010
 8001b50:	200027a4 	.word	0x200027a4

08001b54 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b54:	f006 b8a0 	b.w	8007c98 <HAL_Delay>

08001b58 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b58:	4b03      	ldr	r3, [pc, #12]	; (8001b68 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b5a:	6802      	ldr	r2, [r0, #0]
 8001b5c:	429a      	cmp	r2, r3
 8001b5e:	d000      	beq.n	8001b62 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b60:	4770      	bx	lr
    HAL_IncTick();
 8001b62:	f006 b887 	b.w	8007c74 <HAL_IncTick>
 8001b66:	bf00      	nop
 8001b68:	40001000 	.word	0x40001000

08001b6c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b6c:	4770      	bx	lr
 8001b6e:	bf00      	nop

08001b70 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b70:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b72:	4b0e      	ldr	r3, [pc, #56]	; (8001bac <HAL_MspInit+0x3c>)
 8001b74:	2200      	movs	r2, #0
 8001b76:	9200      	str	r2, [sp, #0]
 8001b78:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b7a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b7e:	6459      	str	r1, [r3, #68]	; 0x44
 8001b80:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001b82:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001b86:	9000      	str	r0, [sp, #0]
 8001b88:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b8a:	9201      	str	r2, [sp, #4]
 8001b8c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001b8e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001b92:	6418      	str	r0, [r3, #64]	; 0x40
 8001b94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b96:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b9a:	9301      	str	r3, [sp, #4]
 8001b9c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b9e:	210f      	movs	r1, #15
 8001ba0:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ba4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ba6:	f006 b89b 	b.w	8007ce0 <HAL_NVIC_SetPriority>
 8001baa:	bf00      	nop
 8001bac:	40023800 	.word	0x40023800

08001bb0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bb0:	4b0b      	ldr	r3, [pc, #44]	; (8001be0 <HAL_CRC_MspInit+0x30>)
 8001bb2:	6802      	ldr	r2, [r0, #0]
 8001bb4:	429a      	cmp	r2, r3
 8001bb6:	d000      	beq.n	8001bba <HAL_CRC_MspInit+0xa>
 8001bb8:	4770      	bx	lr
{
 8001bba:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001bbc:	2200      	movs	r2, #0
 8001bbe:	9201      	str	r2, [sp, #4]
 8001bc0:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001bc4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bc8:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001bcc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001bd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bd2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bd6:	9301      	str	r3, [sp, #4]
 8001bd8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001bda:	b002      	add	sp, #8
 8001bdc:	4770      	bx	lr
 8001bde:	bf00      	nop
 8001be0:	40023000 	.word	0x40023000

08001be4 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001be4:	4b0e      	ldr	r3, [pc, #56]	; (8001c20 <HAL_DMA2D_MspInit+0x3c>)
 8001be6:	6802      	ldr	r2, [r0, #0]
 8001be8:	429a      	cmp	r2, r3
 8001bea:	d000      	beq.n	8001bee <HAL_DMA2D_MspInit+0xa>
 8001bec:	4770      	bx	lr
{
 8001bee:	b500      	push	{lr}
 8001bf0:	b083      	sub	sp, #12
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001bf2:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	9201      	str	r2, [sp, #4]
 8001bfa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001bfc:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c00:	6319      	str	r1, [r3, #48]	; 0x30
 8001c02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c04:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c08:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c0a:	205a      	movs	r0, #90	; 0x5a
 8001c0c:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c0e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c10:	f006 f866 	bl	8007ce0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c14:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c16:	b003      	add	sp, #12
 8001c18:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c1c:	f006 b89e 	b.w	8007d5c <HAL_NVIC_EnableIRQ>
 8001c20:	4002b000 	.word	0x4002b000

08001c24 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c24:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001c28:	4b2e      	ldr	r3, [pc, #184]	; (8001ce4 <HAL_I2C_MspInit+0xc0>)
 8001c2a:	6802      	ldr	r2, [r0, #0]
{
 8001c2c:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c2e:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001c30:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c32:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001c36:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001c3a:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001c3c:	d002      	beq.n	8001c44 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001c3e:	b00a      	add	sp, #40	; 0x28
 8001c40:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c44:	4d28      	ldr	r5, [pc, #160]	; (8001ce8 <HAL_I2C_MspInit+0xc4>)
 8001c46:	9401      	str	r4, [sp, #4]
 8001c48:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c4a:	4828      	ldr	r0, [pc, #160]	; (8001cec <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c4c:	f043 0304 	orr.w	r3, r3, #4
 8001c50:	632b      	str	r3, [r5, #48]	; 0x30
 8001c52:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c54:	f003 0304 	and.w	r3, r3, #4
 8001c58:	9301      	str	r3, [sp, #4]
 8001c5a:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c5c:	9402      	str	r4, [sp, #8]
 8001c5e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c60:	f043 0301 	orr.w	r3, r3, #1
 8001c64:	632b      	str	r3, [r5, #48]	; 0x30
 8001c66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c68:	f003 0301 	and.w	r3, r3, #1
 8001c6c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c6e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c72:	f04f 0801 	mov.w	r8, #1
 8001c76:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c7a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c7c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c7e:	2312      	movs	r3, #18
 8001c80:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001c84:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c88:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c8a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c8c:	f006 f9ba 	bl	8008004 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c90:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c92:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001c96:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c98:	4815      	ldr	r0, [pc, #84]	; (8001cf0 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c9a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c9c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001ca0:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ca4:	f006 f9ae 	bl	8008004 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ca8:	9403      	str	r4, [sp, #12]
 8001caa:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cac:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cb0:	642b      	str	r3, [r5, #64]	; 0x40
 8001cb2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cb4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cb8:	4622      	mov	r2, r4
 8001cba:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cbc:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cbe:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cc0:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cc2:	f006 f80d 	bl	8007ce0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001cc6:	2048      	movs	r0, #72	; 0x48
 8001cc8:	f006 f848 	bl	8007d5c <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001ccc:	6a2b      	ldr	r3, [r5, #32]
 8001cce:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cd2:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001cd4:	6a2b      	ldr	r3, [r5, #32]
 8001cd6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001cda:	622b      	str	r3, [r5, #32]
}
 8001cdc:	b00a      	add	sp, #40	; 0x28
 8001cde:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001ce2:	bf00      	nop
 8001ce4:	40005c00 	.word	0x40005c00
 8001ce8:	40023800 	.word	0x40023800
 8001cec:	40020800 	.word	0x40020800
 8001cf0:	40020000 	.word	0x40020000

08001cf4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001cf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001cf8:	4604      	mov	r4, r0
 8001cfa:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cfc:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cfe:	2230      	movs	r2, #48	; 0x30
 8001d00:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d02:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001d06:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001d0a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d0c:	f025 fd8d 	bl	802782a <memset>
  if(hltdc->Instance==LTDC)
 8001d10:	4b67      	ldr	r3, [pc, #412]	; (8001eb0 <HAL_LTDC_MspInit+0x1bc>)
 8001d12:	6822      	ldr	r2, [r4, #0]
 8001d14:	429a      	cmp	r2, r3
 8001d16:	d002      	beq.n	8001d1e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d18:	b01a      	add	sp, #104	; 0x68
 8001d1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d1e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d20:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d22:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d24:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d26:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d28:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d2c:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d2e:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d30:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d32:	f008 fbd1 	bl	800a4d8 <HAL_RCCEx_PeriphCLKConfig>
 8001d36:	2800      	cmp	r0, #0
 8001d38:	f040 80b7 	bne.w	8001eaa <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d3c:	4b5d      	ldr	r3, [pc, #372]	; (8001eb4 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d3e:	485e      	ldr	r0, [pc, #376]	; (8001eb8 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d40:	2400      	movs	r4, #0
 8001d42:	9401      	str	r4, [sp, #4]
 8001d44:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d46:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d4a:	645a      	str	r2, [r3, #68]	; 0x44
 8001d4c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d4e:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d52:	9201      	str	r2, [sp, #4]
 8001d54:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d56:	9402      	str	r4, [sp, #8]
 8001d58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d5a:	f042 0220 	orr.w	r2, r2, #32
 8001d5e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d62:	f002 0220 	and.w	r2, r2, #32
 8001d66:	9202      	str	r2, [sp, #8]
 8001d68:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d6a:	9403      	str	r4, [sp, #12]
 8001d6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6e:	f042 0201 	orr.w	r2, r2, #1
 8001d72:	631a      	str	r2, [r3, #48]	; 0x30
 8001d74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d76:	f002 0201 	and.w	r2, r2, #1
 8001d7a:	9203      	str	r2, [sp, #12]
 8001d7c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d7e:	9404      	str	r4, [sp, #16]
 8001d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d82:	f042 0202 	orr.w	r2, r2, #2
 8001d86:	631a      	str	r2, [r3, #48]	; 0x30
 8001d88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8a:	f002 0202 	and.w	r2, r2, #2
 8001d8e:	9204      	str	r2, [sp, #16]
 8001d90:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d92:	9405      	str	r4, [sp, #20]
 8001d94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d96:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001d9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d9e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001da2:	9205      	str	r2, [sp, #20]
 8001da4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001da6:	9406      	str	r4, [sp, #24]
 8001da8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001daa:	f042 0204 	orr.w	r2, r2, #4
 8001dae:	631a      	str	r2, [r3, #48]	; 0x30
 8001db0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db2:	f002 0204 	and.w	r2, r2, #4
 8001db6:	9206      	str	r2, [sp, #24]
 8001db8:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dba:	9407      	str	r4, [sp, #28]
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbe:	f042 0208 	orr.w	r2, r2, #8
 8001dc2:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc6:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dca:	2600      	movs	r6, #0
 8001dcc:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dce:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dd0:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dd2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dd4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001dd8:	2302      	movs	r3, #2
 8001dda:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001dde:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001de2:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001de4:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de6:	f006 f90d 	bl	8008004 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dea:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dec:	f641 0258 	movw	r2, #6232	; 0x1858
 8001df0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001df2:	4832      	ldr	r0, [pc, #200]	; (8001ebc <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001df6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001dfa:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dfe:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e02:	f006 f8ff 	bl	8008004 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e06:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e08:	2203      	movs	r2, #3
 8001e0a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e0c:	482c      	ldr	r0, [pc, #176]	; (8001ec0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e0e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e12:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e16:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1a:	f006 f8f3 	bl	8008004 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e20:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001e24:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e26:	4826      	ldr	r0, [pc, #152]	; (8001ec0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e28:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e2a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e2e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e32:	f006 f8e7 	bl	8008004 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e36:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e38:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001e3c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e3e:	4821      	ldr	r0, [pc, #132]	; (8001ec4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e40:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e42:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e46:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e4a:	f006 f8db 	bl	8008004 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e4e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e50:	22c0      	movs	r2, #192	; 0xc0
 8001e52:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e54:	481c      	ldr	r0, [pc, #112]	; (8001ec8 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e56:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e58:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e5c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e60:	f006 f8d0 	bl	8008004 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e64:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e66:	2208      	movs	r2, #8
 8001e68:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e6a:	4818      	ldr	r0, [pc, #96]	; (8001ecc <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e6c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e6e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e72:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e76:	f006 f8c5 	bl	8008004 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e7a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e7c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e7e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e82:	4810      	ldr	r0, [pc, #64]	; (8001ec4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e84:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e88:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e8c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e90:	f006 f8b8 	bl	8008004 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001e94:	4622      	mov	r2, r4
 8001e96:	2105      	movs	r1, #5
 8001e98:	2058      	movs	r0, #88	; 0x58
 8001e9a:	f005 ff21 	bl	8007ce0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001e9e:	2058      	movs	r0, #88	; 0x58
 8001ea0:	f005 ff5c 	bl	8007d5c <HAL_NVIC_EnableIRQ>
}
 8001ea4:	b01a      	add	sp, #104	; 0x68
 8001ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001eaa:	f7ff fe5f 	bl	8001b6c <Error_Handler>
 8001eae:	e745      	b.n	8001d3c <HAL_LTDC_MspInit+0x48>
 8001eb0:	40016800 	.word	0x40016800
 8001eb4:	40023800 	.word	0x40023800
 8001eb8:	40021400 	.word	0x40021400
 8001ebc:	40020000 	.word	0x40020000
 8001ec0:	40020400 	.word	0x40020400
 8001ec4:	40021800 	.word	0x40021800
 8001ec8:	40020800 	.word	0x40020800
 8001ecc:	40020c00 	.word	0x40020c00

08001ed0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ed0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001ed2:	4a1b      	ldr	r2, [pc, #108]	; (8001f40 <HAL_SPI_MspInit+0x70>)
 8001ed4:	6801      	ldr	r1, [r0, #0]
{
 8001ed6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ed8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001eda:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001edc:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001ee0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001ee4:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001ee6:	d001      	beq.n	8001eec <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ee8:	b008      	add	sp, #32
 8001eea:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001eec:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001ef0:	9300      	str	r3, [sp, #0]
 8001ef2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001ef4:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001ef8:	6450      	str	r0, [r2, #68]	; 0x44
 8001efa:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001efc:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001f00:	9000      	str	r0, [sp, #0]
 8001f02:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f04:	9301      	str	r3, [sp, #4]
 8001f06:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f08:	480e      	ldr	r0, [pc, #56]	; (8001f44 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f0a:	f043 0320 	orr.w	r3, r3, #32
 8001f0e:	6313      	str	r3, [r2, #48]	; 0x30
 8001f10:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f12:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001f38 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f16:	f003 0320 	and.w	r3, r3, #32
 8001f1a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f1c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f1e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f20:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f22:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f26:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f2a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f2c:	f006 f86a 	bl	8008004 <HAL_GPIO_Init>
}
 8001f30:	b008      	add	sp, #32
 8001f32:	bd10      	pop	{r4, pc}
 8001f34:	f3af 8000 	nop.w
 8001f38:	00000380 	.word	0x00000380
 8001f3c:	00000002 	.word	0x00000002
 8001f40:	40015000 	.word	0x40015000
 8001f44:	40021400 	.word	0x40021400

08001f48 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001f48:	4a12      	ldr	r2, [pc, #72]	; (8001f94 <HAL_TIM_Base_MspInit+0x4c>)
 8001f4a:	6803      	ldr	r3, [r0, #0]
 8001f4c:	4293      	cmp	r3, r2
{
 8001f4e:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8001f50:	d012      	beq.n	8001f78 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001f52:	4a11      	ldr	r2, [pc, #68]	; (8001f98 <HAL_TIM_Base_MspInit+0x50>)
 8001f54:	4293      	cmp	r3, r2
 8001f56:	d001      	beq.n	8001f5c <HAL_TIM_Base_MspInit+0x14>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001f58:	b002      	add	sp, #8
 8001f5a:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001f5c:	4b0f      	ldr	r3, [pc, #60]	; (8001f9c <HAL_TIM_Base_MspInit+0x54>)
 8001f5e:	2200      	movs	r2, #0
 8001f60:	9201      	str	r2, [sp, #4]
 8001f62:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f64:	f042 0202 	orr.w	r2, r2, #2
 8001f68:	641a      	str	r2, [r3, #64]	; 0x40
 8001f6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f6c:	f003 0302 	and.w	r3, r3, #2
 8001f70:	9301      	str	r3, [sp, #4]
 8001f72:	9b01      	ldr	r3, [sp, #4]
}
 8001f74:	b002      	add	sp, #8
 8001f76:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f78:	4b08      	ldr	r3, [pc, #32]	; (8001f9c <HAL_TIM_Base_MspInit+0x54>)
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	9200      	str	r2, [sp, #0]
 8001f7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f80:	f042 0201 	orr.w	r2, r2, #1
 8001f84:	645a      	str	r2, [r3, #68]	; 0x44
 8001f86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f88:	f003 0301 	and.w	r3, r3, #1
 8001f8c:	9300      	str	r3, [sp, #0]
 8001f8e:	9b00      	ldr	r3, [sp, #0]
}
 8001f90:	b002      	add	sp, #8
 8001f92:	4770      	bx	lr
 8001f94:	40010000 	.word	0x40010000
 8001f98:	40000400 	.word	0x40000400
 8001f9c:	40023800 	.word	0x40023800

08001fa0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001fa2:	4b2b      	ldr	r3, [pc, #172]	; (8002050 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa4:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001fa6:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fa8:	2200      	movs	r2, #0
 8001faa:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001fac:	2c00      	cmp	r4, #0
 8001fae:	d14c      	bne.n	800204a <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001fb0:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fb2:	4a28      	ldr	r2, [pc, #160]	; (8002054 <HAL_SDRAM_MspInit+0xb4>)
 8001fb4:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001fb6:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fb8:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fba:	4827      	ldr	r0, [pc, #156]	; (8002058 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fbc:	433b      	orrs	r3, r7
 8001fbe:	6393      	str	r3, [r2, #56]	; 0x38
 8001fc0:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001fc2:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fc4:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fc6:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fc8:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fcc:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fce:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fd0:	2302      	movs	r3, #2
 8001fd2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fd6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fda:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fdc:	f006 f812 	bl	8008004 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe0:	481e      	ldr	r0, [pc, #120]	; (800205c <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001fe2:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fe6:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fe8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fec:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff0:	f006 f808 	bl	8008004 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ff4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ff8:	4819      	ldr	r0, [pc, #100]	; (8002060 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ffa:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ffc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ffe:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002002:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002006:	f005 fffd 	bl	8008004 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800200a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800200e:	4815      	ldr	r0, [pc, #84]	; (8002064 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002010:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002012:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002014:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002018:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800201c:	f005 fff2 	bl	8008004 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002020:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002024:	4810      	ldr	r0, [pc, #64]	; (8002068 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002026:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002028:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800202a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800202e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002032:	f005 ffe7 	bl	8008004 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002036:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002038:	480c      	ldr	r0, [pc, #48]	; (800206c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800203a:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800203c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800203e:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002042:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002044:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002046:	f005 ffdd 	bl	8008004 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800204a:	b009      	add	sp, #36	; 0x24
 800204c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800204e:	bf00      	nop
 8002050:	2000288c 	.word	0x2000288c
 8002054:	40023800 	.word	0x40023800
 8002058:	40021400 	.word	0x40021400
 800205c:	40020800 	.word	0x40020800
 8002060:	40021800 	.word	0x40021800
 8002064:	40021000 	.word	0x40021000
 8002068:	40020c00 	.word	0x40020c00
 800206c:	40020400 	.word	0x40020400

08002070 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002070:	b570      	push	{r4, r5, r6, lr}
 8002072:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002074:	4b23      	ldr	r3, [pc, #140]	; (8002104 <HAL_InitTick+0x94>)
 8002076:	2200      	movs	r2, #0
 8002078:	9202      	str	r2, [sp, #8]
 800207a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800207c:	f042 0210 	orr.w	r2, r2, #16
 8002080:	641a      	str	r2, [r3, #64]	; 0x40
 8002082:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002084:	f003 0310 	and.w	r3, r3, #16
 8002088:	9302      	str	r3, [sp, #8]
{
 800208a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800208c:	a901      	add	r1, sp, #4
 800208e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002090:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002092:	f008 f9ff 	bl	800a494 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002096:	9b06      	ldr	r3, [sp, #24]
 8002098:	b9d3      	cbnz	r3, 80020d0 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800209a:	f008 f9eb 	bl	800a474 <HAL_RCC_GetPCLK1Freq>
 800209e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020a0:	4a19      	ldr	r2, [pc, #100]	; (8002108 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80020a2:	4c1a      	ldr	r4, [pc, #104]	; (800210c <HAL_InitTick+0x9c>)
 80020a4:	491a      	ldr	r1, [pc, #104]	; (8002110 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020a6:	fba2 2303 	umull	r2, r3, r2, r3
 80020aa:	0c9b      	lsrs	r3, r3, #18
 80020ac:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80020ae:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80020b0:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80020b4:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020b6:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80020ba:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020bc:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020be:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020c0:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80020c2:	f009 f817 	bl	800b0f4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80020c6:	4606      	mov	r6, r0
 80020c8:	b130      	cbz	r0, 80020d8 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80020ca:	4630      	mov	r0, r6
 80020cc:	b008      	add	sp, #32
 80020ce:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80020d0:	f008 f9d0 	bl	800a474 <HAL_RCC_GetPCLK1Freq>
 80020d4:	0043      	lsls	r3, r0, #1
 80020d6:	e7e3      	b.n	80020a0 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80020d8:	4620      	mov	r0, r4
 80020da:	f009 f899 	bl	800b210 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80020de:	4606      	mov	r6, r0
 80020e0:	2800      	cmp	r0, #0
 80020e2:	d1f2      	bne.n	80020ca <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80020e4:	2036      	movs	r0, #54	; 0x36
 80020e6:	f005 fe39 	bl	8007d5c <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80020ea:	2d0f      	cmp	r5, #15
 80020ec:	d901      	bls.n	80020f2 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80020ee:	2601      	movs	r6, #1
 80020f0:	e7eb      	b.n	80020ca <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80020f2:	4632      	mov	r2, r6
 80020f4:	4629      	mov	r1, r5
 80020f6:	2036      	movs	r0, #54	; 0x36
 80020f8:	f005 fdf2 	bl	8007ce0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80020fc:	4b05      	ldr	r3, [pc, #20]	; (8002114 <HAL_InitTick+0xa4>)
 80020fe:	601d      	str	r5, [r3, #0]
 8002100:	e7e3      	b.n	80020ca <HAL_InitTick+0x5a>
 8002102:	bf00      	nop
 8002104:	40023800 	.word	0x40023800
 8002108:	431bde83 	.word	0x431bde83
 800210c:	20002890 	.word	0x20002890
 8002110:	40001000 	.word	0x40001000
 8002114:	20000080 	.word	0x20000080

08002118 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002118:	4770      	bx	lr
 800211a:	bf00      	nop

0800211c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800211c:	e7fe      	b.n	800211c <HardFault_Handler>
 800211e:	bf00      	nop

08002120 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002120:	e7fe      	b.n	8002120 <MemManage_Handler>
 8002122:	bf00      	nop

08002124 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002124:	e7fe      	b.n	8002124 <BusFault_Handler>
 8002126:	bf00      	nop

08002128 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002128:	e7fe      	b.n	8002128 <UsageFault_Handler>
 800212a:	bf00      	nop

0800212c <DebugMon_Handler>:
 800212c:	4770      	bx	lr
 800212e:	bf00      	nop

08002130 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002130:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002132:	20c8      	movs	r0, #200	; 0xc8
 8002134:	f005 fdb0 	bl	8007c98 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002138:	4804      	ldr	r0, [pc, #16]	; (800214c <EXTI3_IRQHandler+0x1c>)
 800213a:	2200      	movs	r2, #0
 800213c:	2120      	movs	r1, #32
 800213e:	f006 f8a5 	bl	800828c <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002142:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002146:	2008      	movs	r0, #8
 8002148:	f006 b8b0 	b.w	80082ac <HAL_GPIO_EXTI_IRQHandler>
 800214c:	40021000 	.word	0x40021000

08002150 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002150:	4801      	ldr	r0, [pc, #4]	; (8002158 <TIM6_DAC_IRQHandler+0x8>)
 8002152:	f009 b9dd 	b.w	800b510 <HAL_TIM_IRQHandler>
 8002156:	bf00      	nop
 8002158:	20002890 	.word	0x20002890

0800215c <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 800215c:	4801      	ldr	r0, [pc, #4]	; (8002164 <I2C3_EV_IRQHandler+0x8>)
 800215e:	f007 b805 	b.w	800916c <HAL_I2C_EV_IRQHandler>
 8002162:	bf00      	nop
 8002164:	20002674 	.word	0x20002674

08002168 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002168:	4801      	ldr	r0, [pc, #4]	; (8002170 <LTDC_IRQHandler+0x8>)
 800216a:	f007 bd79 	b.w	8009c60 <HAL_LTDC_IRQHandler>
 800216e:	bf00      	nop
 8002170:	200026c8 	.word	0x200026c8

08002174 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002174:	4801      	ldr	r0, [pc, #4]	; (800217c <DMA2D_IRQHandler+0x8>)
 8002176:	f005 be5b 	b.w	8007e30 <HAL_DMA2D_IRQHandler>
 800217a:	bf00      	nop
 800217c:	20002634 	.word	0x20002634

08002180 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002180:	2001      	movs	r0, #1
 8002182:	4770      	bx	lr

08002184 <_kill>:

int _kill(int pid, int sig)
{
 8002184:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002186:	f025 fc49 	bl	8027a1c <__errno>
 800218a:	2316      	movs	r3, #22
 800218c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800218e:	f04f 30ff 	mov.w	r0, #4294967295
 8002192:	bd08      	pop	{r3, pc}

08002194 <_exit>:

void _exit (int status)
{
 8002194:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002196:	f025 fc41 	bl	8027a1c <__errno>
 800219a:	2316      	movs	r3, #22
 800219c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800219e:	e7fe      	b.n	800219e <_exit+0xa>

080021a0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80021a0:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021a2:	1e16      	subs	r6, r2, #0
 80021a4:	dd07      	ble.n	80021b6 <_read+0x16>
 80021a6:	460c      	mov	r4, r1
 80021a8:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80021aa:	f3af 8000 	nop.w
 80021ae:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021b2:	42a5      	cmp	r5, r4
 80021b4:	d1f9      	bne.n	80021aa <_read+0xa>
	}

return len;
}
 80021b6:	4630      	mov	r0, r6
 80021b8:	bd70      	pop	{r4, r5, r6, pc}
 80021ba:	bf00      	nop

080021bc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80021bc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021be:	1e16      	subs	r6, r2, #0
 80021c0:	dd07      	ble.n	80021d2 <_write+0x16>
 80021c2:	460c      	mov	r4, r1
 80021c4:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80021c6:	f814 0b01 	ldrb.w	r0, [r4], #1
 80021ca:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021ce:	42ac      	cmp	r4, r5
 80021d0:	d1f9      	bne.n	80021c6 <_write+0xa>
	}
	return len;
}
 80021d2:	4630      	mov	r0, r6
 80021d4:	bd70      	pop	{r4, r5, r6, pc}
 80021d6:	bf00      	nop

080021d8 <_close>:

int _close(int file)
{
	return -1;
}
 80021d8:	f04f 30ff 	mov.w	r0, #4294967295
 80021dc:	4770      	bx	lr
 80021de:	bf00      	nop

080021e0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80021e0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021e4:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021e6:	2000      	movs	r0, #0
 80021e8:	4770      	bx	lr
 80021ea:	bf00      	nop

080021ec <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021ec:	2001      	movs	r0, #1
 80021ee:	4770      	bx	lr

080021f0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80021f0:	2000      	movs	r0, #0
 80021f2:	4770      	bx	lr

080021f4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80021f4:	4a0b      	ldr	r2, [pc, #44]	; (8002224 <_sbrk+0x30>)
{
 80021f6:	b508      	push	{r3, lr}
 80021f8:	4603      	mov	r3, r0
	if (heap_end == 0)
 80021fa:	6810      	ldr	r0, [r2, #0]
 80021fc:	b128      	cbz	r0, 800220a <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80021fe:	4403      	add	r3, r0
 8002200:	4669      	mov	r1, sp
 8002202:	428b      	cmp	r3, r1
 8002204:	d807      	bhi.n	8002216 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002206:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002208:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800220a:	4807      	ldr	r0, [pc, #28]	; (8002228 <_sbrk+0x34>)
 800220c:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800220e:	4403      	add	r3, r0
 8002210:	4669      	mov	r1, sp
 8002212:	428b      	cmp	r3, r1
 8002214:	d9f7      	bls.n	8002206 <_sbrk+0x12>
		errno = ENOMEM;
 8002216:	f025 fc01 	bl	8027a1c <__errno>
 800221a:	230c      	movs	r3, #12
 800221c:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800221e:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002222:	bd08      	pop	{r3, pc}
 8002224:	200028d8 	.word	0x200028d8
 8002228:	200143f8 	.word	0x200143f8

0800222c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800222c:	4770      	bx	lr

0800222e <_ZN23ApplicationFontProviderD0Ev>:
 800222e:	b510      	push	{r4, lr}
 8002230:	2104      	movs	r1, #4
 8002232:	4604      	mov	r4, r0
 8002234:	f024 fb03 	bl	802683e <_ZdlPvj>
 8002238:	4620      	mov	r0, r4
 800223a:	bd10      	pop	{r4, pc}

0800223c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800223c:	b508      	push	{r3, lr}
    switch (typography)
 800223e:	2903      	cmp	r1, #3
 8002240:	d813      	bhi.n	800226a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002242:	e8df f001 	tbb	[pc, r1]
 8002246:	0602      	.short	0x0602
 8002248:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800224a:	f004 fec7 	bl	8006fdc <_ZN17TypedTextDatabase8getFontsEv>
 800224e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002250:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002252:	f004 fec3 	bl	8006fdc <_ZN17TypedTextDatabase8getFontsEv>
 8002256:	6840      	ldr	r0, [r0, #4]
 8002258:	e7fa      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800225a:	f004 febf 	bl	8006fdc <_ZN17TypedTextDatabase8getFontsEv>
 800225e:	6880      	ldr	r0, [r0, #8]
 8002260:	e7f6      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002262:	f004 febb 	bl	8006fdc <_ZN17TypedTextDatabase8getFontsEv>
 8002266:	68c0      	ldr	r0, [r0, #12]
 8002268:	e7f2      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800226a:	2000      	movs	r0, #0
 800226c:	e7f0      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002270 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002270:	4800      	ldr	r0, [pc, #0]	; (8002274 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002272:	4770      	bx	lr
 8002274:	08028d78 	.word	0x08028d78

08002278 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002278:	200d      	movs	r0, #13
 800227a:	4770      	bx	lr

0800227c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800227c:	b513      	push	{r0, r1, r4, lr}
 800227e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002280:	b151      	cbz	r1, 8002298 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002282:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002284:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002286:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800228a:	aa01      	add	r2, sp, #4
 800228c:	689c      	ldr	r4, [r3, #8]
 800228e:	f10d 0303 	add.w	r3, sp, #3
 8002292:	47a0      	blx	r4
        return glyph;
    }
 8002294:	b002      	add	sp, #8
 8002296:	bd10      	pop	{r4, pc}
            return 0;
 8002298:	4608      	mov	r0, r1
 800229a:	e7fb      	b.n	8002294 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800229c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800229c:	89c0      	ldrh	r0, [r0, #14]
 800229e:	4770      	bx	lr

080022a0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80022a0:	8a00      	ldrh	r0, [r0, #16]
 80022a2:	4770      	bx	lr

080022a4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80022a4:	88c0      	ldrh	r0, [r0, #6]
 80022a6:	4770      	bx	lr

080022a8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80022a8:	8880      	ldrh	r0, [r0, #4]
 80022aa:	4770      	bx	lr

080022ac <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80022ac:	7a80      	ldrb	r0, [r0, #10]
    }
 80022ae:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80022b2:	4770      	bx	lr

080022b4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80022b4:	7a80      	ldrb	r0, [r0, #10]
    }
 80022b6:	09c0      	lsrs	r0, r0, #7
 80022b8:	4770      	bx	lr

080022ba <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80022ba:	4770      	bx	lr

080022bc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80022bc:	4770      	bx	lr

080022be <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022be:	4770      	bx	lr

080022c0 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80022c0:	4770      	bx	lr

080022c2 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80022c2:	4770      	bx	lr

080022c4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022c4:	4770      	bx	lr

080022c6 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80022c6:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80022c8:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80022ca:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80022cc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022ce:	466d      	mov	r5, sp
 80022d0:	4601      	mov	r1, r0
 80022d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80022d6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022d8:	4628      	mov	r0, r5
 80022da:	4798      	blx	r3
 80022dc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80022e0:	343c      	adds	r4, #60	; 0x3c
 80022e2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80022e6:	b005      	add	sp, #20
 80022e8:	bd30      	pop	{r4, r5, pc}

080022ea <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80022ea:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80022ec:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80022ee:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80022f0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022f2:	466d      	mov	r5, sp
 80022f4:	4601      	mov	r1, r0
 80022f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80022fa:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022fc:	4628      	mov	r0, r5
 80022fe:	4798      	blx	r3
 8002300:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002304:	343c      	adds	r4, #60	; 0x3c
 8002306:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800230a:	b005      	add	sp, #20
 800230c:	bd30      	pop	{r4, r5, pc}

0800230e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800230e:	2200      	movs	r2, #0
 8002310:	8002      	strh	r2, [r0, #0]
 8002312:	8042      	strh	r2, [r0, #2]
 8002314:	8082      	strh	r2, [r0, #4]
 8002316:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002318:	4770      	bx	lr

0800231a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800231a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800231e:	4770      	bx	lr

08002320 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002320:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002322:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002324:	4604      	mov	r4, r0
        setX(x);
 8002326:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002328:	4615      	mov	r5, r2
        setX(x);
 800232a:	4798      	blx	r3
        setBaselineY(baselineY);
 800232c:	6823      	ldr	r3, [r4, #0]
 800232e:	4629      	mov	r1, r5
 8002330:	4620      	mov	r0, r4
 8002332:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002334:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002338:	4718      	bx	r3

0800233a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800233a:	2000      	movs	r0, #0
 800233c:	4770      	bx	lr

0800233e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800233e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002340:	4770      	bx	lr

08002342 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002342:	4770      	bx	lr

08002344 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002344:	4770      	bx	lr

08002346 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002346:	4770      	bx	lr

08002348 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002348:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800234a:	68c2      	ldr	r2, [r0, #12]
 800234c:	6844      	ldr	r4, [r0, #4]
 800234e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002350:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002352:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002356:	07d2      	lsls	r2, r2, #31
 8002358:	bf48      	it	mi
 800235a:	5962      	ldrmi	r2, [r4, r5]
 800235c:	689b      	ldr	r3, [r3, #8]
    }
 800235e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002360:	bf48      	it	mi
 8002362:	58d3      	ldrmi	r3, [r2, r3]
 8002364:	4718      	bx	r3

08002366 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002366:	6843      	ldr	r3, [r0, #4]
 8002368:	b12b      	cbz	r3, 8002376 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800236a:	6883      	ldr	r3, [r0, #8]
 800236c:	b92b      	cbnz	r3, 800237a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800236e:	68c0      	ldr	r0, [r0, #12]
 8002370:	f000 0001 	and.w	r0, r0, #1
 8002374:	4770      	bx	lr
 8002376:	4618      	mov	r0, r3
 8002378:	4770      	bx	lr
 800237a:	2001      	movs	r0, #1
    }
 800237c:	4770      	bx	lr

0800237e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800237e:	b510      	push	{r4, lr}
    }
 8002380:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002382:	4604      	mov	r4, r0
    }
 8002384:	f024 fa5b 	bl	802683e <_ZdlPvj>
 8002388:	4620      	mov	r0, r4
 800238a:	bd10      	pop	{r4, pc}

0800238c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800238c:	b510      	push	{r4, lr}
 800238e:	214c      	movs	r1, #76	; 0x4c
 8002390:	4604      	mov	r4, r0
 8002392:	f024 fa54 	bl	802683e <_ZdlPvj>
 8002396:	4620      	mov	r0, r4
 8002398:	bd10      	pop	{r4, pc}

0800239a <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800239a:	b510      	push	{r4, lr}
 800239c:	2110      	movs	r1, #16
 800239e:	4604      	mov	r4, r0
 80023a0:	f024 fa4d 	bl	802683e <_ZdlPvj>
 80023a4:	4620      	mov	r0, r4
 80023a6:	bd10      	pop	{r4, pc}

080023a8 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023a8:	b510      	push	{r4, lr}
 80023aa:	4b03      	ldr	r3, [pc, #12]	; (80023b8 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 80023ac:	6003      	str	r3, [r0, #0]
 80023ae:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023b0:	f00f ffe4 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023b4:	4620      	mov	r0, r4
 80023b6:	bd10      	pop	{r4, pc}
 80023b8:	080290e4 	.word	0x080290e4

080023bc <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023bc:	b507      	push	{r0, r1, r2, lr}
 80023be:	4b07      	ldr	r3, [pc, #28]	; (80023dc <_ZN19CalibrationViewBaseD0Ev+0x20>)
 80023c0:	6003      	str	r3, [r0, #0]
 80023c2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023c4:	f00f ffda 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023c8:	9801      	ldr	r0, [sp, #4]
 80023ca:	f241 01f8 	movw	r1, #4344	; 0x10f8
 80023ce:	f024 fa36 	bl	802683e <_ZdlPvj>
 80023d2:	9801      	ldr	r0, [sp, #4]
 80023d4:	b003      	add	sp, #12
 80023d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80023da:	bf00      	nop
 80023dc:	080290e4 	.word	0x080290e4

080023e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80023e0:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80023e2:	f7fe ff47 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80023e6:	bd08      	pop	{r3, pc}

080023e8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023e8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023ea:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023ec:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80023ee:	4b12      	ldr	r3, [pc, #72]	; (8002438 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80023f0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023f2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023f4:	b28d      	uxth	r5, r1
 80023f6:	b92b      	cbnz	r3, 8002404 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80023f8:	4b10      	ldr	r3, [pc, #64]	; (800243c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80023fa:	4a11      	ldr	r2, [pc, #68]	; (8002440 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80023fc:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80023fe:	4811      	ldr	r0, [pc, #68]	; (8002444 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002400:	f025 f80e 	bl	8027420 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002404:	4910      	ldr	r1, [pc, #64]	; (8002448 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002406:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002408:	8809      	ldrh	r1, [r1, #0]
 800240a:	4291      	cmp	r1, r2
 800240c:	d803      	bhi.n	8002416 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800240e:	4b0f      	ldr	r3, [pc, #60]	; (800244c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002410:	4a0b      	ldr	r2, [pc, #44]	; (8002440 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002412:	216d      	movs	r1, #109	; 0x6d
 8002414:	e7f3      	b.n	80023fe <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002416:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800241a:	4b0d      	ldr	r3, [pc, #52]	; (8002450 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002422:	6803      	ldr	r3, [r0, #0]
 8002424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002426:	4798      	blx	r3
 8002428:	1a28      	subs	r0, r5, r0
 800242a:	b201      	sxth	r1, r0
 800242c:	4633      	mov	r3, r6
 800242e:	4620      	mov	r0, r4
    }
 8002430:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002434:	4718      	bx	r3
 8002436:	bf00      	nop
 8002438:	20013814 	.word	0x20013814
 800243c:	08028e7c 	.word	0x08028e7c
 8002440:	08028ebe 	.word	0x08028ebe
 8002444:	08028ef9 	.word	0x08028ef9
 8002448:	20013818 	.word	0x20013818
 800244c:	08028f40 	.word	0x08028f40
 8002450:	2001381c 	.word	0x2001381c

08002454 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002454:	f500 70fc 	add.w	r0, r0, #504	; 0x1f8
 8002458:	4288      	cmp	r0, r1
{
 800245a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800245c:	d105      	bne.n	800246a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800245e:	f011 fc8f 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8002462:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002466:	f000 bd7d 	b.w	8002f64 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800246a:	bd08      	pop	{r3, pc}

0800246c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800246c:	2200      	movs	r2, #0
 800246e:	f04f 31ff 	mov.w	r1, #4294967295
 8002472:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002476:	6082      	str	r2, [r0, #8]
    }
 8002478:	4770      	bx	lr

0800247a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800247a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800247c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800247e:	4604      	mov	r4, r0
        setX(x);
 8002480:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002482:	4615      	mov	r5, r2
        setX(x);
 8002484:	4798      	blx	r3
        setY(y);
 8002486:	6823      	ldr	r3, [r4, #0]
 8002488:	4629      	mov	r1, r5
 800248a:	4620      	mov	r0, r4
 800248c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800248e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002492:	4718      	bx	r3

08002494 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002494:	b570      	push	{r4, r5, r6, lr}
 8002496:	4604      	mov	r4, r0
 8002498:	461d      	mov	r5, r3
 800249a:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800249e:	f7ff ffec 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80024a2:	6823      	ldr	r3, [r4, #0]
 80024a4:	4629      	mov	r1, r5
 80024a6:	4620      	mov	r0, r4
 80024a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80024aa:	4798      	blx	r3
        setHeight(height);
 80024ac:	6823      	ldr	r3, [r4, #0]
 80024ae:	4631      	mov	r1, r6
 80024b0:	4620      	mov	r0, r4
 80024b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80024b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80024b8:	4718      	bx	r3
	...

080024bc <_ZN8touchgfx6WidgetC1Ev>:
 80024bc:	2200      	movs	r2, #0
 80024be:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024c2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80024c6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80024ca:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80024ce:	f44f 7280 	mov.w	r2, #256	; 0x100
 80024d2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80024d4:	4a01      	ldr	r2, [pc, #4]	; (80024dc <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80024d6:	6002      	str	r2, [r0, #0]
 80024d8:	4770      	bx	lr
 80024da:	bf00      	nop
 80024dc:	08028fc4 	.word	0x08028fc4

080024e0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80024e0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024e2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80024e4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024e6:	2100      	movs	r1, #0
 80024e8:	f025 f99f 	bl	802782a <memset>
 80024ec:	4620      	mov	r0, r4
 80024ee:	f7ff ffe5 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80024f2:	4b0a      	ldr	r3, [pc, #40]	; (800251c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80024f4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80024f6:	4b0a      	ldr	r3, [pc, #40]	; (8002520 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80024f8:	62a3      	str	r3, [r4, #40]	; 0x28
 80024fa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024fe:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002500:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002504:	2300      	movs	r3, #0
 8002506:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800250a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 800250e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002512:	8723      	strh	r3, [r4, #56]	; 0x38
 8002514:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002516:	4620      	mov	r0, r4
 8002518:	bd10      	pop	{r4, pc}
 800251a:	bf00      	nop
 800251c:	0802b3fc 	.word	0x0802b3fc
 8002520:	0802902c 	.word	0x0802902c

08002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002524:	4b1a      	ldr	r3, [pc, #104]	; (8002590 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002526:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002528:	881b      	ldrh	r3, [r3, #0]
 800252a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800252c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800252e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002530:	d92b      	bls.n	800258a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002532:	4b18      	ldr	r3, [pc, #96]	; (8002594 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	b92b      	cbnz	r3, 8002544 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002538:	4b17      	ldr	r3, [pc, #92]	; (8002598 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800253a:	4a18      	ldr	r2, [pc, #96]	; (800259c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800253c:	4818      	ldr	r0, [pc, #96]	; (80025a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800253e:	216c      	movs	r1, #108	; 0x6c
 8002540:	f024 ff6e 	bl	8027420 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002544:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002548:	4b16      	ldr	r3, [pc, #88]	; (80025a4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002550:	4b15      	ldr	r3, [pc, #84]	; (80025a8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002552:	6818      	ldr	r0, [r3, #0]
 8002554:	f004 fd32 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002558:	682b      	ldr	r3, [r5, #0]
 800255a:	9001      	str	r0, [sp, #4]
 800255c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800255e:	4628      	mov	r0, r5
 8002560:	4798      	blx	r3
 8002562:	682b      	ldr	r3, [r5, #0]
 8002564:	9901      	ldr	r1, [sp, #4]
 8002566:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002568:	4604      	mov	r4, r0
 800256a:	4628      	mov	r0, r5
 800256c:	4798      	blx	r3
 800256e:	682b      	ldr	r3, [r5, #0]
 8002570:	9901      	ldr	r1, [sp, #4]
 8002572:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002574:	fb14 f400 	smulbb	r4, r4, r0
 8002578:	4628      	mov	r0, r5
 800257a:	4798      	blx	r3
 800257c:	b2a4      	uxth	r4, r4
 800257e:	1823      	adds	r3, r4, r0
 8002580:	b21b      	sxth	r3, r3
 8002582:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002586:	b002      	add	sp, #8
 8002588:	bd70      	pop	{r4, r5, r6, pc}
 800258a:	2300      	movs	r3, #0
 800258c:	e7f9      	b.n	8002582 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800258e:	bf00      	nop
 8002590:	20013818 	.word	0x20013818
 8002594:	20013814 	.word	0x20013814
 8002598:	08028e7c 	.word	0x08028e7c
 800259c:	08028ebe 	.word	0x08028ebe
 80025a0:	08028ef9 	.word	0x08028ef9
 80025a4:	2001381c 	.word	0x2001381c
 80025a8:	20013820 	.word	0x20013820

080025ac <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 80025ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025b0:	ed2d 8b04 	vpush	{d8-d9}
 80025b4:	4604      	mov	r4, r0
 80025b6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80025b8:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80025ba:	2500      	movs	r5, #0
 80025bc:	f013 f860 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 80025c0:	4be1      	ldr	r3, [pc, #900]	; (8002948 <_ZN19CalibrationViewBaseC1Ev+0x39c>)
 80025c2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80025c4:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80025c8:	2226      	movs	r2, #38	; 0x26
 80025ca:	4629      	mov	r1, r5
 80025cc:	4658      	mov	r0, fp
 80025ce:	f025 f92c 	bl	802782a <memset>
 80025d2:	4658      	mov	r0, fp
 80025d4:	f7ff ff72 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80025d8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80025dc:	26ff      	movs	r6, #255	; 0xff
 80025de:	4bdb      	ldr	r3, [pc, #876]	; (800294c <_ZN19CalibrationViewBaseC1Ev+0x3a0>)
 80025e0:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80025e2:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80025e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80025e8:	4629      	mov	r1, r5
 80025ea:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80025ee:	4650      	mov	r0, sl
        : color(col)
 80025f0:	66a5      	str	r5, [r4, #104]	; 0x68
 80025f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80025f6:	f025 f918 	bl	802782a <memset>
 80025fa:	4650      	mov	r0, sl
 80025fc:	f7ff ff5e 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8002600:	4bd3      	ldr	r3, [pc, #844]	; (8002950 <_ZN19CalibrationViewBaseC1Ev+0x3a4>)
 8002602:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002604:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002608:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 800260c:	a90a      	add	r1, sp, #40	; 0x28
 800260e:	4650      	mov	r0, sl
 8002610:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002614:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002618:	f00e fea9 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800261c:	4648      	mov	r0, r9
 800261e:	f7ff ff5f 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8002622:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8002626:	4bcb      	ldr	r3, [pc, #812]	; (8002954 <_ZN19CalibrationViewBaseC1Ev+0x3a8>)
 8002628:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800262c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002630:	4638      	mov	r0, r7
 8002632:	f00d fd65 	bl	8010100 <_ZN8touchgfx4LineC1Ev>
 8002636:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800263a:	4618      	mov	r0, r3
 800263c:	9303      	str	r3, [sp, #12]
 800263e:	f7fe fe3f 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002642:	4bc5      	ldr	r3, [pc, #788]	; (8002958 <_ZN19CalibrationViewBaseC1Ev+0x3ac>)
 8002644:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8002648:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 800264c:	3324      	adds	r3, #36	; 0x24
 800264e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002652:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002656:	4640      	mov	r0, r8
 8002658:	f7ff ff42 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800265c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002660:	4618      	mov	r0, r3
 8002662:	ee08 3a10 	vmov	s16, r3
 8002666:	f7ff ff3b 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800266a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800266e:	4618      	mov	r0, r3
 8002670:	ee08 3a90 	vmov	s17, r3
 8002674:	f00e ffbc 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002678:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800267c:	4618      	mov	r0, r3
 800267e:	ee09 3a10 	vmov	s18, r3
 8002682:	f00e ffb5 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002686:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800268a:	4618      	mov	r0, r3
 800268c:	ee09 3a90 	vmov	s19, r3
 8002690:	f00e ffae 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002694:	4ab1      	ldr	r2, [pc, #708]	; (800295c <_ZN19CalibrationViewBaseC1Ev+0x3b0>)
 8002696:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800269a:	e9c3 243a 	strd	r2, r4, [r3, #232]	; 0xe8
 800269e:	4ab0      	ldr	r2, [pc, #704]	; (8002960 <_ZN19CalibrationViewBaseC1Ev+0x3b4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80026a0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80026a4:	e9c3 253c 	strd	r2, r5, [r3, #240]	; 0xf0
 80026a8:	f504 7036 	add.w	r0, r4, #728	; 0x2d8
 80026ac:	f00f fe5c 	bl	8012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80026b0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80026b4:	462a      	mov	r2, r5
 80026b6:	4658      	mov	r0, fp
 80026b8:	9300      	str	r3, [sp, #0]
 80026ba:	4629      	mov	r1, r5
 80026bc:	23f0      	movs	r3, #240	; 0xf0
 80026be:	f7ff fee9 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80026c2:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80026c4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80026c8:	66a3      	str	r3, [r4, #104]	; 0x68
 80026ca:	4659      	mov	r1, fp
 80026cc:	4630      	mov	r0, r6
 80026ce:	f00c f8bf 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80026d2:	462a      	mov	r2, r5
 80026d4:	4650      	mov	r0, sl
 80026d6:	4629      	mov	r1, r5
 80026d8:	f7ff fecf 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80026dc:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80026de:	4650      	mov	r0, sl
 80026e0:	a90a      	add	r1, sp, #40	; 0x28
 80026e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80026e6:	f00e fe42 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80026ea:	4651      	mov	r1, sl
 80026ec:	4630      	mov	r0, r6
 80026ee:	f00c f8af 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80026f2:	f44f 729a 	mov.w	r2, #308	; 0x134
 80026f6:	2156      	movs	r1, #86	; 0x56
 80026f8:	4648      	mov	r0, r9
 80026fa:	f7ff febe 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80026fe:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002702:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002706:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800270a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800270e:	4650      	mov	r0, sl
 8002710:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002714:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002718:	4649      	mov	r1, r9
 800271a:	4798      	blx	r3
 800271c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002720:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002724:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002728:	4b8e      	ldr	r3, [pc, #568]	; (8002964 <_ZN19CalibrationViewBaseC1Ev+0x3b8>)
 800272a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800272c:	f504 7a34 	add.w	sl, r4, #720	; 0x2d0
 8002730:	b92b      	cbnz	r3, 800273e <_ZN19CalibrationViewBaseC1Ev+0x192>
 8002732:	4b8d      	ldr	r3, [pc, #564]	; (8002968 <_ZN19CalibrationViewBaseC1Ev+0x3bc>)
 8002734:	4a8d      	ldr	r2, [pc, #564]	; (800296c <_ZN19CalibrationViewBaseC1Ev+0x3c0>)
 8002736:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002738:	488d      	ldr	r0, [pc, #564]	; (8002970 <_ZN19CalibrationViewBaseC1Ev+0x3c4>)
 800273a:	f024 fe71 	bl	8027420 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800273e:	4b8d      	ldr	r3, [pc, #564]	; (8002974 <_ZN19CalibrationViewBaseC1Ev+0x3c8>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002740:	881b      	ldrh	r3, [r3, #0]
 8002742:	2b02      	cmp	r3, #2
 8002744:	d803      	bhi.n	800274e <_ZN19CalibrationViewBaseC1Ev+0x1a2>
 8002746:	4b8c      	ldr	r3, [pc, #560]	; (8002978 <_ZN19CalibrationViewBaseC1Ev+0x3cc>)
 8002748:	4a88      	ldr	r2, [pc, #544]	; (800296c <_ZN19CalibrationViewBaseC1Ev+0x3c0>)
 800274a:	2161      	movs	r1, #97	; 0x61
 800274c:	e7f4      	b.n	8002738 <_ZN19CalibrationViewBaseC1Ev+0x18c>
        return texts->getText(typedTextId);
 800274e:	4b8b      	ldr	r3, [pc, #556]	; (800297c <_ZN19CalibrationViewBaseC1Ev+0x3d0>)
 8002750:	2102      	movs	r1, #2
 8002752:	6818      	ldr	r0, [r3, #0]
 8002754:	f004 fc32 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8002758:	4a89      	ldr	r2, [pc, #548]	; (8002980 <_ZN19CalibrationViewBaseC1Ev+0x3d4>)
 800275a:	4603      	mov	r3, r0
 800275c:	2104      	movs	r1, #4
 800275e:	4650      	mov	r0, sl
 8002760:	f014 fc72 	bl	8017048 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002764:	4648      	mov	r0, r9
        wc1 = value;
 8002766:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 800276a:	f00e fa05 	bl	8010b78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800276e:	4b85      	ldr	r3, [pc, #532]	; (8002984 <_ZN19CalibrationViewBaseC1Ev+0x3d8>)
 8002770:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002772:	a90a      	add	r1, sp, #40	; 0x28
 8002774:	2303      	movs	r3, #3
 8002776:	4648      	mov	r0, r9
 8002778:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800277c:	f00e fa1c 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002780:	4649      	mov	r1, r9
 8002782:	4630      	mov	r0, r6
 8002784:	f00c f864 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002788:	230a      	movs	r3, #10
 800278a:	9300      	str	r3, [sp, #0]
 800278c:	2232      	movs	r2, #50	; 0x32
 800278e:	23f0      	movs	r3, #240	; 0xf0
 8002790:	4629      	mov	r1, r5
 8002792:	4638      	mov	r0, r7
 8002794:	f7ff fe7e 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002798:	9b03      	ldr	r3, [sp, #12]
 800279a:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800279e:	22a0      	movs	r2, #160	; 0xa0
 80027a0:	4611      	mov	r1, r2
 80027a2:	4638      	mov	r0, r7
 80027a4:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80027a8:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80027ac:	f00d fdbe 	bl	801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80027b0:	22a0      	movs	r2, #160	; 0xa0
 80027b2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80027b6:	4638      	mov	r0, r7
 80027b8:	f00d fdc3 	bl	8010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80027bc:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80027c0:	2b20      	cmp	r3, #32
 80027c2:	d005      	beq.n	80027d0 <_ZN19CalibrationViewBaseC1Ev+0x224>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 80027c4:	2320      	movs	r3, #32
 80027c6:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 80027ca:	4638      	mov	r0, r7
 80027cc:	f00d fcb8 	bl	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80027d0:	4638      	mov	r0, r7
 80027d2:	2101      	movs	r1, #1
 80027d4:	f00d fdc0 	bl	8010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80027d8:	4639      	mov	r1, r7
 80027da:	4630      	mov	r0, r6
 80027dc:	f00c f838 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80027e0:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80027e4:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 36);
 80027e6:	2224      	movs	r2, #36	; 0x24
 80027e8:	4640      	mov	r0, r8
        linespace = space;
 80027ea:	f04f 0a00 	mov.w	sl, #0
 80027ee:	2145      	movs	r1, #69	; 0x45
 80027f0:	f7ff fe43 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80027f4:	4641      	mov	r1, r8
 80027f6:	4638      	mov	r0, r7
        color = newColor;
 80027f8:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
        linespace = space;
 80027fc:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002800:	f00d ff40 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002804:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8002808:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800280c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002810:	f8df 9170 	ldr.w	r9, [pc, #368]	; 8002984 <_ZN19CalibrationViewBaseC1Ev+0x3d8>
 8002814:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002818:	2338      	movs	r3, #56	; 0x38
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 800281a:	a90a      	add	r1, sp, #40	; 0x28
 800281c:	4640      	mov	r0, r8
 800281e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002822:	f00e f9c9 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002826:	4641      	mov	r1, r8
 8002828:	4630      	mov	r0, r6
 800282a:	f00c f811 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 800282e:	ee18 0a10 	vmov	r0, s16
 8002832:	220c      	movs	r2, #12
 8002834:	2132      	movs	r1, #50	; 0x32
 8002836:	f7ff fe20 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800283a:	ee18 1a10 	vmov	r1, s16
 800283e:	4638      	mov	r0, r7
        color = newColor;
 8002840:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8002844:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002848:	f00d ff1c 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800284c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8002850:	ee18 3a10 	vmov	r3, s16
 8002854:	333c      	adds	r3, #60	; 0x3c
 8002856:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800285a:	2337      	movs	r3, #55	; 0x37
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 800285c:	ee18 0a10 	vmov	r0, s16
 8002860:	a90a      	add	r1, sp, #40	; 0x28
 8002862:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002866:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800286a:	f00e f9a5 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800286e:	ee18 1a10 	vmov	r1, s16
 8002872:	4630      	mov	r0, r6
 8002874:	f00b ffec 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002878:	ee18 0a90 	vmov	r0, s17
 800287c:	22f0      	movs	r2, #240	; 0xf0
 800287e:	2121      	movs	r1, #33	; 0x21
 8002880:	f7ff fdfb 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8002884:	f04f 0803 	mov.w	r8, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002888:	aa0a      	add	r2, sp, #40	; 0x28
 800288a:	2702      	movs	r7, #2
 800288c:	a909      	add	r1, sp, #36	; 0x24
 800288e:	ee18 0a90 	vmov	r0, s17
 8002892:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 8002896:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800289a:	f00e fb72 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800289e:	2336      	movs	r3, #54	; 0x36
        updateTextPosition();
 80028a0:	ee18 0a90 	vmov	r0, s17
 80028a4:	f8a4 3230 	strh.w	r3, [r4, #560]	; 0x230
 80028a8:	f7ff fe3c 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80028ac:	f504 5387 	add.w	r3, r4, #4320	; 0x10e0
 80028b0:	3308      	adds	r3, #8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80028b2:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
 80028b6:	ee18 1a90 	vmov	r1, s17
 80028ba:	4630      	mov	r0, r6
        colorPressed = col;
 80028bc:	e9c4 558d 	strd	r5, r5, [r4, #564]	; 0x234
 80028c0:	f00b ffc6 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80028c4:	ee19 0a10 	vmov	r0, s18
 80028c8:	22aa      	movs	r2, #170	; 0xaa
 80028ca:	2121      	movs	r1, #33	; 0x21
 80028cc:	f7ff fdd5 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80028d0:	aa0a      	add	r2, sp, #40	; 0x28
 80028d2:	a909      	add	r1, sp, #36	; 0x24
 80028d4:	ee19 0a10 	vmov	r0, s18
 80028d8:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 80028dc:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80028e0:	f00e fb4f 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80028e4:	2335      	movs	r3, #53	; 0x35
 80028e6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
        updateTextPosition();
 80028ea:	ee19 0a10 	vmov	r0, s18
 80028ee:	f7ff fe19 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80028f2:	ee19 1a10 	vmov	r1, s18
 80028f6:	4630      	mov	r0, r6
        colorPressed = col;
 80028f8:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80028fc:	f00b ffa8 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002900:	ee19 0a90 	vmov	r0, s19
 8002904:	2264      	movs	r2, #100	; 0x64
 8002906:	2121      	movs	r1, #33	; 0x21
 8002908:	f7ff fdb7 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800290c:	aa0a      	add	r2, sp, #40	; 0x28
 800290e:	a909      	add	r1, sp, #36	; 0x24
 8002910:	ee19 0a90 	vmov	r0, s19
 8002914:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 8002918:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800291c:	f00e fb31 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002920:	2334      	movs	r3, #52	; 0x34
        updateTextPosition();
 8002922:	ee19 0a90 	vmov	r0, s19
 8002926:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
 800292a:	f7ff fdfb 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800292e:	4630      	mov	r0, r6
        colorPressed = col;
 8002930:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8002934:	ee19 1a90 	vmov	r1, s19
 8002938:	f00b ff8a 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800293c:	4620      	mov	r0, r4
 800293e:	b00d      	add	sp, #52	; 0x34
 8002940:	ecbd 8b04 	vpop	{d8-d9}
 8002944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002948:	080290e4 	.word	0x080290e4
 800294c:	0802b48c 	.word	0x0802b48c
 8002950:	0802b654 	.word	0x0802b654
 8002954:	0802903c 	.word	0x0802903c
 8002958:	0802b1c0 	.word	0x0802b1c0
 800295c:	080290cc 	.word	0x080290cc
 8002960:	08002455 	.word	0x08002455
 8002964:	20013814 	.word	0x20013814
 8002968:	08028e7c 	.word	0x08028e7c
 800296c:	08028f7e 	.word	0x08028f7e
 8002970:	08028ef9 	.word	0x08028ef9
 8002974:	20013818 	.word	0x20013818
 8002978:	08028f40 	.word	0x08028f40
 800297c:	20013820 	.word	0x20013820
 8002980:	08028fb6 	.word	0x08028fb6
 8002984:	0802902c 	.word	0x0802902c

08002988 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002988:	4770      	bx	lr

0800298a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800298a:	4770      	bx	lr

0800298c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800298c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8002990:	6808      	ldr	r0, [r1, #0]
 8002992:	6849      	ldr	r1, [r1, #4]
 8002994:	c303      	stmia	r3!, {r0, r1}
    }
 8002996:	4770      	bx	lr

08002998 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002998:	4770      	bx	lr

0800299a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800299a:	4770      	bx	lr

0800299c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800299c:	6041      	str	r1, [r0, #4]
    }
 800299e:	4770      	bx	lr

080029a0 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80029a0:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80029a2:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80029a4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80029a8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80029ac:	8002      	strh	r2, [r0, #0]
 80029ae:	8042      	strh	r2, [r0, #2]
 80029b0:	8084      	strh	r4, [r0, #4]
 80029b2:	80c1      	strh	r1, [r0, #6]
        }
 80029b4:	bd10      	pop	{r4, pc}

080029b6 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80029b6:	4770      	bx	lr

080029b8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80029b8:	4770      	bx	lr
	...

080029bc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80029bc:	4b06      	ldr	r3, [pc, #24]	; (80029d8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80029be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80029c2:	2300      	movs	r3, #0
 80029c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80029c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80029cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80029d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 80029d4:	4770      	bx	lr
 80029d6:	bf00      	nop
 80029d8:	08002d79 	.word	0x08002d79

080029dc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80029dc:	2301      	movs	r3, #1
 80029de:	7203      	strb	r3, [r0, #8]
    }
 80029e0:	4770      	bx	lr

080029e2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80029e2:	4770      	bx	lr

080029e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80029e4:	4770      	bx	lr

080029e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 80029e6:	4770      	bx	lr

080029e8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80029e8:	4770      	bx	lr

080029ea <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80029ea:	4770      	bx	lr

080029ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 80029ec:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80029ee:	6840      	ldr	r0, [r0, #4]
 80029f0:	6803      	ldr	r3, [r0, #0]
 80029f2:	3110      	adds	r1, #16
 80029f4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80029f6:	4718      	bx	r3

080029f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 80029f8:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80029fa:	6840      	ldr	r0, [r0, #4]
 80029fc:	6803      	ldr	r3, [r0, #0]
 80029fe:	3110      	adds	r1, #16
 8002a00:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002a02:	4718      	bx	r3

08002a04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8002a04:	4770      	bx	lr

08002a06 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8002a06:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8002a08:	6840      	ldr	r0, [r0, #4]
 8002a0a:	6803      	ldr	r3, [r0, #0]
 8002a0c:	3110      	adds	r1, #16
 8002a0e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002a10:	4718      	bx	r3

08002a12 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8002a12:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8002a14:	6840      	ldr	r0, [r0, #4]
 8002a16:	6803      	ldr	r3, [r0, #0]
 8002a18:	3110      	adds	r1, #16
 8002a1a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002a1c:	4718      	bx	r3

08002a1e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8002a1e:	4770      	bx	lr

08002a20 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002a20:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002a22:	68c2      	ldr	r2, [r0, #12]
 8002a24:	6841      	ldr	r1, [r0, #4]
 8002a26:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002a28:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002a2a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002a2e:	07d2      	lsls	r2, r2, #31
 8002a30:	bf48      	it	mi
 8002a32:	590a      	ldrmi	r2, [r1, r4]
 8002a34:	689b      	ldr	r3, [r3, #8]
    }
 8002a36:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002a3a:	bf48      	it	mi
 8002a3c:	58d3      	ldrmi	r3, [r2, r3]
 8002a3e:	4718      	bx	r3

08002a40 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002a40:	6843      	ldr	r3, [r0, #4]
 8002a42:	b12b      	cbz	r3, 8002a50 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002a44:	6883      	ldr	r3, [r0, #8]
 8002a46:	b92b      	cbnz	r3, 8002a54 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002a48:	68c0      	ldr	r0, [r0, #12]
 8002a4a:	f000 0001 	and.w	r0, r0, #1
 8002a4e:	4770      	bx	lr
 8002a50:	4618      	mov	r0, r3
 8002a52:	4770      	bx	lr
 8002a54:	2001      	movs	r0, #1
    }
 8002a56:	4770      	bx	lr

08002a58 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002a58:	b510      	push	{r4, lr}
 8002a5a:	210c      	movs	r1, #12
 8002a5c:	4604      	mov	r4, r0
 8002a5e:	f023 feee 	bl	802683e <_ZdlPvj>
 8002a62:	4620      	mov	r0, r4
 8002a64:	bd10      	pop	{r4, pc}

08002a66 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a66:	b510      	push	{r4, lr}
 8002a68:	2110      	movs	r1, #16
 8002a6a:	4604      	mov	r4, r0
 8002a6c:	f023 fee7 	bl	802683e <_ZdlPvj>
 8002a70:	4620      	mov	r0, r4
 8002a72:	bd10      	pop	{r4, pc}

08002a74 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002a74:	b510      	push	{r4, lr}
 8002a76:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8002a7a:	4604      	mov	r4, r0
 8002a7c:	f023 fedf 	bl	802683e <_ZdlPvj>
 8002a80:	4620      	mov	r0, r4
 8002a82:	bd10      	pop	{r4, pc}

08002a84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8002a84:	b510      	push	{r4, lr}
 8002a86:	2138      	movs	r1, #56	; 0x38
 8002a88:	4604      	mov	r4, r0
 8002a8a:	f023 fed8 	bl	802683e <_ZdlPvj>
 8002a8e:	4620      	mov	r0, r4
 8002a90:	bd10      	pop	{r4, pc}

08002a92 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8002a92:	b510      	push	{r4, lr}
 8002a94:	2128      	movs	r1, #40	; 0x28
 8002a96:	4604      	mov	r4, r0
 8002a98:	f023 fed1 	bl	802683e <_ZdlPvj>
 8002a9c:	4620      	mov	r0, r4
 8002a9e:	bd10      	pop	{r4, pc}

08002aa0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8002aa0:	b510      	push	{r4, lr}
 8002aa2:	2138      	movs	r1, #56	; 0x38
 8002aa4:	4604      	mov	r4, r0
 8002aa6:	f023 feca 	bl	802683e <_ZdlPvj>
 8002aaa:	4620      	mov	r0, r4
 8002aac:	bd10      	pop	{r4, pc}

08002aae <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002aae:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002ab0:	f011 f966 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
 8002ab4:	6803      	ldr	r3, [r0, #0]
    }
 8002ab6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002aba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002abc:	4718      	bx	r3
	...

08002ac0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002ac0:	b513      	push	{r0, r1, r4, lr}
 8002ac2:	4604      	mov	r4, r0
        animationCounter++;
 8002ac4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002ac6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002ac8:	3001      	adds	r0, #1
 8002aca:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002acc:	4298      	cmp	r0, r3
        animationCounter++;
 8002ace:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8002ad0:	d905      	bls.n	8002ade <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8002ad2:	2301      	movs	r3, #1
 8002ad4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002ad6:	2300      	movs	r3, #0
 8002ad8:	72a3      	strb	r3, [r4, #10]
    }
 8002ada:	b002      	add	sp, #8
 8002adc:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002ade:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002ae2:	2100      	movs	r1, #0
 8002ae4:	f012 ff7e 	bl	80159e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002ae8:	f010 0201 	ands.w	r2, r0, #1
 8002aec:	b283      	uxth	r3, r0
 8002aee:	d12a      	bne.n	8002b46 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002af0:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002af2:	4a19      	ldr	r2, [pc, #100]	; (8002b58 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8002af4:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8002af8:	89e3      	ldrh	r3, [r4, #14]
 8002afa:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8002afc:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8002b00:	82a0      	strh	r0, [r4, #20]
 8002b02:	2000      	movs	r0, #0
 8002b04:	1ad2      	subs	r2, r2, r3
 8002b06:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8002b0a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8002b0c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8002b0e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8002b10:	4a12      	ldr	r2, [pc, #72]	; (8002b5c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8002b12:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8002b16:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8002b18:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8002b1c:	691b      	ldr	r3, [r3, #16]
 8002b1e:	f8ad 1000 	strh.w	r1, [sp]
 8002b22:	f8ad 2006 	strh.w	r2, [sp, #6]
 8002b26:	4669      	mov	r1, sp
 8002b28:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002b2a:	7aa3      	ldrb	r3, [r4, #10]
 8002b2c:	2b01      	cmp	r3, #1
 8002b2e:	d1d4      	bne.n	8002ada <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8002b30:	4b0b      	ldr	r3, [pc, #44]	; (8002b60 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8002b32:	781b      	ldrb	r3, [r3, #0]
 8002b34:	2b00      	cmp	r3, #0
 8002b36:	d0d0      	beq.n	8002ada <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002b38:	f011 f922 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002b3c:	b002      	add	sp, #8
 8002b3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002b42:	f011 b923 	b.w	8013d8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002b46:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002b4a:	2800      	cmp	r0, #0
 8002b4c:	bfd8      	it	le
 8002b4e:	460a      	movle	r2, r1
 8002b50:	4413      	add	r3, r2
 8002b52:	81e3      	strh	r3, [r4, #14]
 8002b54:	e7cd      	b.n	8002af2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8002b56:	bf00      	nop
 8002b58:	200137b0 	.word	0x200137b0
 8002b5c:	200137b2 	.word	0x200137b2
 8002b60:	200137ba 	.word	0x200137ba

08002b64 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002b64:	b510      	push	{r4, lr}
 8002b66:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002b68:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8002b6c:	b158      	cbz	r0, 8002b86 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002b6e:	6803      	ldr	r3, [r0, #0]
 8002b70:	68db      	ldr	r3, [r3, #12]
 8002b72:	4798      	blx	r3
 8002b74:	b138      	cbz	r0, 8002b86 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002b76:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8002b7a:	6803      	ldr	r3, [r0, #0]
 8002b7c:	689b      	ldr	r3, [r3, #8]
 8002b7e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002b80:	2300      	movs	r3, #0
 8002b82:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8002b86:	bd10      	pop	{r4, pc}

08002b88 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8002b88:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b8c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8002b90:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002b92:	68a8      	ldr	r0, [r5, #8]
 8002b94:	6803      	ldr	r3, [r0, #0]
 8002b96:	6a1b      	ldr	r3, [r3, #32]
 8002b98:	4798      	blx	r3
 8002b9a:	2897      	cmp	r0, #151	; 0x97
 8002b9c:	d805      	bhi.n	8002baa <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8002b9e:	4b46      	ldr	r3, [pc, #280]	; (8002cb8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8002ba0:	4a46      	ldr	r2, [pc, #280]	; (8002cbc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8002ba2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002ba4:	4846      	ldr	r0, [pc, #280]	; (8002cc0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8002ba6:	f024 fc3b 	bl	8027420 <__assert_func>
 8002baa:	6868      	ldr	r0, [r5, #4]
 8002bac:	6803      	ldr	r3, [r0, #0]
 8002bae:	6a1b      	ldr	r3, [r3, #32]
 8002bb0:	4798      	blx	r3
 8002bb2:	280f      	cmp	r0, #15
 8002bb4:	d803      	bhi.n	8002bbe <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8002bb6:	4b43      	ldr	r3, [pc, #268]	; (8002cc4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8002bb8:	4a40      	ldr	r2, [pc, #256]	; (8002cbc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8002bba:	21a4      	movs	r1, #164	; 0xa4
 8002bbc:	e7f2      	b.n	8002ba4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002bbe:	68e8      	ldr	r0, [r5, #12]
 8002bc0:	6803      	ldr	r3, [r0, #0]
 8002bc2:	6a1b      	ldr	r3, [r3, #32]
 8002bc4:	4798      	blx	r3
 8002bc6:	280b      	cmp	r0, #11
 8002bc8:	d803      	bhi.n	8002bd2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8002bca:	4b3f      	ldr	r3, [pc, #252]	; (8002cc8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8002bcc:	4a3b      	ldr	r2, [pc, #236]	; (8002cbc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8002bce:	21a5      	movs	r1, #165	; 0xa5
 8002bd0:	e7e8      	b.n	8002ba4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8002bd2:	f011 f8d5 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002bd6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002cd0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002bda:	3004      	adds	r0, #4
 8002bdc:	f011 f936 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002be0:	f8d9 0000 	ldr.w	r0, [r9]
 8002be4:	b110      	cbz	r0, 8002bec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002be6:	6803      	ldr	r3, [r0, #0]
 8002be8:	68db      	ldr	r3, [r3, #12]
 8002bea:	4798      	blx	r3
    if (*currentTrans)
 8002bec:	f8d9 0000 	ldr.w	r0, [r9]
 8002bf0:	b110      	cbz	r0, 8002bf8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002bf2:	6803      	ldr	r3, [r0, #0]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	4798      	blx	r3
    if (*currentScreen)
 8002bf8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002cd4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8002bfc:	f8d8 0000 	ldr.w	r0, [r8]
 8002c00:	b110      	cbz	r0, 8002c08 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002c02:	6803      	ldr	r3, [r0, #0]
 8002c04:	695b      	ldr	r3, [r3, #20]
 8002c06:	4798      	blx	r3
    if (*currentPresenter)
 8002c08:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002c0c:	b110      	cbz	r0, 8002c14 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002c0e:	6803      	ldr	r3, [r0, #0]
 8002c10:	685b      	ldr	r3, [r3, #4]
 8002c12:	4798      	blx	r3
    if (*currentScreen)
 8002c14:	f8d8 0000 	ldr.w	r0, [r8]
 8002c18:	b110      	cbz	r0, 8002c20 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002c1a:	6803      	ldr	r3, [r0, #0]
 8002c1c:	681b      	ldr	r3, [r3, #0]
 8002c1e:	4798      	blx	r3
    if (*currentPresenter)
 8002c20:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002c24:	b110      	cbz	r0, 8002c2c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002c26:	6803      	ldr	r3, [r0, #0]
 8002c28:	689b      	ldr	r3, [r3, #8]
 8002c2a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c2c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002c2e:	6803      	ldr	r3, [r0, #0]
 8002c30:	2100      	movs	r1, #0
 8002c32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c34:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002c36:	f04f 0b00 	mov.w	fp, #0
 8002c3a:	4b24      	ldr	r3, [pc, #144]	; (8002ccc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8002c3c:	6003      	str	r3, [r0, #0]
 8002c3e:	4604      	mov	r4, r0
 8002c40:	f8c0 b004 	str.w	fp, [r0, #4]
 8002c44:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c48:	68a8      	ldr	r0, [r5, #8]
 8002c4a:	6803      	ldr	r3, [r0, #0]
 8002c4c:	4659      	mov	r1, fp
 8002c4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c50:	4798      	blx	r3
 8002c52:	4606      	mov	r6, r0
 8002c54:	f004 fd58 	bl	8007708 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c58:	6868      	ldr	r0, [r5, #4]
 8002c5a:	6803      	ldr	r3, [r0, #0]
 8002c5c:	4659      	mov	r1, fp
 8002c5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c60:	4798      	blx	r3
 8002c62:	4631      	mov	r1, r6
 8002c64:	4605      	mov	r5, r0
 8002c66:	f004 fd2b 	bl	80076c0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8002c6a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002c6e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002c72:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002c76:	b1e5      	cbz	r5, 8002cb2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8002c78:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002c7a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c7e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002c80:	f8c5 a008 	str.w	sl, [r5, #8]
 8002c84:	4630      	mov	r0, r6
 8002c86:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002c88:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002c8a:	4798      	blx	r3
    newPresenter->activate();
 8002c8c:	682b      	ldr	r3, [r5, #0]
 8002c8e:	4628      	mov	r0, r5
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002c94:	4621      	mov	r1, r4
 8002c96:	4630      	mov	r0, r6
 8002c98:	f012 fe9e 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002c9c:	6823      	ldr	r3, [r4, #0]
 8002c9e:	4620      	mov	r0, r4
 8002ca0:	691b      	ldr	r3, [r3, #16]
 8002ca2:	4798      	blx	r3
    newTransition->invalidate();
 8002ca4:	6823      	ldr	r3, [r4, #0]
 8002ca6:	695b      	ldr	r3, [r3, #20]
 8002ca8:	4620      	mov	r0, r4
}
 8002caa:	b001      	add	sp, #4
 8002cac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cb0:	4718      	bx	r3
    model->bind(newPresenter);
 8002cb2:	462b      	mov	r3, r5
 8002cb4:	e7e1      	b.n	8002c7a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8002cb6:	bf00      	nop
 8002cb8:	08029110 	.word	0x08029110
 8002cbc:	0802919e 	.word	0x0802919e
 8002cc0:	080292ac 	.word	0x080292ac
 8002cc4:	080292f3 	.word	0x080292f3
 8002cc8:	08029396 	.word	0x08029396
 8002ccc:	0802a448 	.word	0x0802a448
 8002cd0:	20013804 	.word	0x20013804
 8002cd4:	20013800 	.word	0x20013800

08002cd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002cd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002cda:	4604      	mov	r4, r0
        animationCounter++;
 8002cdc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002cde:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002ce0:	3001      	adds	r0, #1
 8002ce2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002ce4:	4298      	cmp	r0, r3
        animationCounter++;
 8002ce6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8002ce8:	d905      	bls.n	8002cf6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8002cea:	2301      	movs	r3, #1
 8002cec:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002cee:	2300      	movs	r3, #0
 8002cf0:	72a3      	strb	r3, [r4, #10]
    }
 8002cf2:	b003      	add	sp, #12
 8002cf4:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002cf6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002cfa:	2100      	movs	r1, #0
 8002cfc:	f012 fe72 	bl	80159e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002d00:	f010 0201 	ands.w	r2, r0, #1
 8002d04:	b283      	uxth	r3, r0
 8002d06:	d128      	bne.n	8002d5a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002d08:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002d0a:	4b18      	ldr	r3, [pc, #96]	; (8002d6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002d0c:	4818      	ldr	r0, [pc, #96]	; (8002d70 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002d0e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002d10:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002d12:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002d14:	f9b0 0000 	ldrsh.w	r0, [r0]
 8002d18:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002d1c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002d1e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002d20:	442b      	add	r3, r5
 8002d22:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002d24:	b212      	sxth	r2, r2
 8002d26:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8002d2a:	6803      	ldr	r3, [r0, #0]
 8002d2c:	8322      	strh	r2, [r4, #24]
 8002d2e:	f8ad 2000 	strh.w	r2, [sp]
 8002d32:	2200      	movs	r2, #0
 8002d34:	691b      	ldr	r3, [r3, #16]
 8002d36:	f8ad 2002 	strh.w	r2, [sp, #2]
 8002d3a:	4669      	mov	r1, sp
 8002d3c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002d3e:	7aa3      	ldrb	r3, [r4, #10]
 8002d40:	2b01      	cmp	r3, #1
 8002d42:	d1d6      	bne.n	8002cf2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8002d44:	4b0b      	ldr	r3, [pc, #44]	; (8002d74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8002d46:	781b      	ldrb	r3, [r3, #0]
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d0d2      	beq.n	8002cf2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002d4c:	f011 f818 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002d50:	b003      	add	sp, #12
 8002d52:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002d56:	f011 b819 	b.w	8013d8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002d5a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002d5e:	2800      	cmp	r0, #0
 8002d60:	bfd8      	it	le
 8002d62:	460a      	movle	r2, r1
 8002d64:	4413      	add	r3, r2
 8002d66:	81e3      	strh	r3, [r4, #14]
 8002d68:	e7cf      	b.n	8002d0a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8002d6a:	bf00      	nop
 8002d6c:	200137b0 	.word	0x200137b0
 8002d70:	200137b2 	.word	0x200137b2
 8002d74:	200137ba 	.word	0x200137ba

08002d78 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8002d78:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002d7c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8002d80:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002d82:	68a8      	ldr	r0, [r5, #8]
 8002d84:	6803      	ldr	r3, [r0, #0]
 8002d86:	6a1b      	ldr	r3, [r3, #32]
 8002d88:	4798      	blx	r3
 8002d8a:	f241 137b 	movw	r3, #4475	; 0x117b
 8002d8e:	4298      	cmp	r0, r3
 8002d90:	d805      	bhi.n	8002d9e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8002d92:	4b46      	ldr	r3, [pc, #280]	; (8002eac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8002d94:	4a46      	ldr	r2, [pc, #280]	; (8002eb0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8002d96:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002d98:	4846      	ldr	r0, [pc, #280]	; (8002eb4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8002d9a:	f024 fb41 	bl	8027420 <__assert_func>
 8002d9e:	6868      	ldr	r0, [r5, #4]
 8002da0:	6803      	ldr	r3, [r0, #0]
 8002da2:	6a1b      	ldr	r3, [r3, #32]
 8002da4:	4798      	blx	r3
 8002da6:	280f      	cmp	r0, #15
 8002da8:	d803      	bhi.n	8002db2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8002daa:	4b43      	ldr	r3, [pc, #268]	; (8002eb8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8002dac:	4a40      	ldr	r2, [pc, #256]	; (8002eb0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8002dae:	21a4      	movs	r1, #164	; 0xa4
 8002db0:	e7f2      	b.n	8002d98 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002db2:	68e8      	ldr	r0, [r5, #12]
 8002db4:	6803      	ldr	r3, [r0, #0]
 8002db6:	6a1b      	ldr	r3, [r3, #32]
 8002db8:	4798      	blx	r3
 8002dba:	280b      	cmp	r0, #11
 8002dbc:	d803      	bhi.n	8002dc6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8002dbe:	4b3f      	ldr	r3, [pc, #252]	; (8002ebc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8002dc0:	4a3b      	ldr	r2, [pc, #236]	; (8002eb0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8002dc2:	21a5      	movs	r1, #165	; 0xa5
 8002dc4:	e7e8      	b.n	8002d98 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002dc6:	f010 ffdb 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002dca:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002ec4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8002dce:	3004      	adds	r0, #4
 8002dd0:	f011 f83c 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002dd4:	f8d9 0000 	ldr.w	r0, [r9]
 8002dd8:	b110      	cbz	r0, 8002de0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002dda:	6803      	ldr	r3, [r0, #0]
 8002ddc:	68db      	ldr	r3, [r3, #12]
 8002dde:	4798      	blx	r3
    if (*currentTrans)
 8002de0:	f8d9 0000 	ldr.w	r0, [r9]
 8002de4:	b110      	cbz	r0, 8002dec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002de6:	6803      	ldr	r3, [r0, #0]
 8002de8:	681b      	ldr	r3, [r3, #0]
 8002dea:	4798      	blx	r3
    if (*currentScreen)
 8002dec:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002ec8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8002df0:	f8d8 0000 	ldr.w	r0, [r8]
 8002df4:	b110      	cbz	r0, 8002dfc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002df6:	6803      	ldr	r3, [r0, #0]
 8002df8:	695b      	ldr	r3, [r3, #20]
 8002dfa:	4798      	blx	r3
    if (*currentPresenter)
 8002dfc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002e00:	b110      	cbz	r0, 8002e08 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002e02:	6803      	ldr	r3, [r0, #0]
 8002e04:	685b      	ldr	r3, [r3, #4]
 8002e06:	4798      	blx	r3
    if (*currentScreen)
 8002e08:	f8d8 0000 	ldr.w	r0, [r8]
 8002e0c:	b110      	cbz	r0, 8002e14 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002e0e:	6803      	ldr	r3, [r0, #0]
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	4798      	blx	r3
    if (*currentPresenter)
 8002e14:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002e18:	b110      	cbz	r0, 8002e20 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002e1a:	6803      	ldr	r3, [r0, #0]
 8002e1c:	689b      	ldr	r3, [r3, #8]
 8002e1e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002e20:	68e8      	ldr	r0, [r5, #12]
 8002e22:	6803      	ldr	r3, [r0, #0]
 8002e24:	2100      	movs	r1, #0
 8002e26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e28:	4798      	blx	r3
 8002e2a:	f04f 0b00 	mov.w	fp, #0
 8002e2e:	4b24      	ldr	r3, [pc, #144]	; (8002ec0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8002e30:	6003      	str	r3, [r0, #0]
 8002e32:	4604      	mov	r4, r0
 8002e34:	f8c0 b004 	str.w	fp, [r0, #4]
 8002e38:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002e3c:	68a8      	ldr	r0, [r5, #8]
 8002e3e:	6803      	ldr	r3, [r0, #0]
 8002e40:	4659      	mov	r1, fp
 8002e42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e44:	4798      	blx	r3
 8002e46:	4606      	mov	r6, r0
 8002e48:	f004 f99c 	bl	8007184 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002e4c:	6868      	ldr	r0, [r5, #4]
 8002e4e:	6803      	ldr	r3, [r0, #0]
 8002e50:	4659      	mov	r1, fp
 8002e52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e54:	4798      	blx	r3
 8002e56:	4631      	mov	r1, r6
 8002e58:	4605      	mov	r5, r0
 8002e5a:	f004 f96d 	bl	8007138 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8002e5e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002e62:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002e66:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002e6a:	b1e5      	cbz	r5, 8002ea6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8002e6c:	1d2b      	adds	r3, r5, #4
 8002e6e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002e72:	6833      	ldr	r3, [r6, #0]
 8002e74:	f8c5 a008 	str.w	sl, [r5, #8]
 8002e78:	4630      	mov	r0, r6
 8002e7a:	68db      	ldr	r3, [r3, #12]
 8002e7c:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002e7e:	4798      	blx	r3
    newPresenter->activate();
 8002e80:	682b      	ldr	r3, [r5, #0]
 8002e82:	4628      	mov	r0, r5
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002e88:	4621      	mov	r1, r4
 8002e8a:	4630      	mov	r0, r6
 8002e8c:	f012 fda4 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002e90:	6823      	ldr	r3, [r4, #0]
 8002e92:	4620      	mov	r0, r4
 8002e94:	691b      	ldr	r3, [r3, #16]
 8002e96:	4798      	blx	r3
    newTransition->invalidate();
 8002e98:	6823      	ldr	r3, [r4, #0]
 8002e9a:	695b      	ldr	r3, [r3, #20]
 8002e9c:	4620      	mov	r0, r4
}
 8002e9e:	b001      	add	sp, #4
 8002ea0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ea4:	4718      	bx	r3
    model->bind(newPresenter);
 8002ea6:	462b      	mov	r3, r5
 8002ea8:	e7e1      	b.n	8002e6e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8002eaa:	bf00      	nop
 8002eac:	08029110 	.word	0x08029110
 8002eb0:	08029439 	.word	0x08029439
 8002eb4:	080292ac 	.word	0x080292ac
 8002eb8:	080292f3 	.word	0x080292f3
 8002ebc:	08029396 	.word	0x08029396
 8002ec0:	0802a448 	.word	0x0802a448
 8002ec4:	20013804 	.word	0x20013804
 8002ec8:	20013800 	.word	0x20013800

08002ecc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002ecc:	4b04      	ldr	r3, [pc, #16]	; (8002ee0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8002ed4:	b10a      	cbz	r2, 8002eda <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002ed6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002ed8:	b900      	cbnz	r0, 8002edc <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002eda:	6898      	ldr	r0, [r3, #8]
    }
 8002edc:	4770      	bx	lr
 8002ede:	bf00      	nop
 8002ee0:	200137bc 	.word	0x200137bc

08002ee4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002ee4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ee6:	4604      	mov	r4, r0
 8002ee8:	4617      	mov	r7, r2
 8002eea:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002eec:	f011 f87c 	bl	8013fe8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002ef0:	4b10      	ldr	r3, [pc, #64]	; (8002f34 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002ef2:	601c      	str	r4, [r3, #0]
      model(m)
 8002ef4:	4b10      	ldr	r3, [pc, #64]	; (8002f38 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002ef6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002ef8:	4b10      	ldr	r3, [pc, #64]	; (8002f3c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002efa:	2500      	movs	r5, #0
 8002efc:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8002f00:	4b0f      	ldr	r3, [pc, #60]	; (8002f40 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002f02:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8002f06:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f08:	6803      	ldr	r3, [r0, #0]
 8002f0a:	2101      	movs	r1, #1
 8002f0c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002f0e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8002f12:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f16:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002f18:	4628      	mov	r0, r5
 8002f1a:	f004 f813 	bl	8006f44 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002f1e:	f7ff ffd5 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 8002f22:	f01a fa32 	bl	801d38a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002f26:	f7ff ffd1 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 8002f2a:	f01a faa9 	bl	801d480 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002f2e:	4620      	mov	r0, r4
 8002f30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f32:	bf00      	nop
 8002f34:	20013810 	.word	0x20013810
 8002f38:	0802a3f4 	.word	0x0802a3f4
 8002f3c:	0802a3dc 	.word	0x0802a3dc
 8002f40:	200137bc 	.word	0x200137bc

08002f44 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f44:	4b06      	ldr	r3, [pc, #24]	; (8002f60 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8002f46:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002f4a:	2300      	movs	r3, #0
 8002f4c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002f50:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002f54:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002f58:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002f5c:	4770      	bx	lr
 8002f5e:	bf00      	nop
 8002f60:	08002d79 	.word	0x08002d79

08002f64 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8002f64:	4b06      	ldr	r3, [pc, #24]	; (8002f80 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8002f66:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002f6a:	2300      	movs	r3, #0
 8002f6c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002f70:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002f74:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002f78:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002f7c:	4770      	bx	lr
 8002f7e:	bf00      	nop
 8002f80:	080033e9 	.word	0x080033e9

08002f84 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8002f84:	4b06      	ldr	r3, [pc, #24]	; (8002fa0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8002f86:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002f8a:	2300      	movs	r3, #0
 8002f8c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002f90:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002f94:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002f98:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002f9c:	4770      	bx	lr
 8002f9e:	bf00      	nop
 8002fa0:	08003f8d 	.word	0x08003f8d

08002fa4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8002fa4:	4b06      	ldr	r3, [pc, #24]	; (8002fc0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8002fa6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002faa:	2300      	movs	r3, #0
 8002fac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002fb0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002fb4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002fb8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002fbc:	4770      	bx	lr
 8002fbe:	bf00      	nop
 8002fc0:	080032a9 	.word	0x080032a9

08002fc4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8002fc4:	4b06      	ldr	r3, [pc, #24]	; (8002fe0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8002fc6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002fca:	2300      	movs	r3, #0
 8002fcc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002fd0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002fd4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002fd8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002fdc:	4770      	bx	lr
 8002fde:	bf00      	nop
 8002fe0:	08003e4d 	.word	0x08003e4d

08002fe4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8002fe4:	4b06      	ldr	r3, [pc, #24]	; (8003000 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8002fe6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002fea:	2300      	movs	r3, #0
 8002fec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002ff0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002ff4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002ff8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002ffc:	4770      	bx	lr
 8002ffe:	bf00      	nop
 8003000:	08003d0d 	.word	0x08003d0d

08003004 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003004:	4b06      	ldr	r3, [pc, #24]	; (8003020 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8003006:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800300a:	2300      	movs	r3, #0
 800300c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003010:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003014:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003018:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800301c:	4770      	bx	lr
 800301e:	bf00      	nop
 8003020:	08003bcd 	.word	0x08003bcd

08003024 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003024:	4b06      	ldr	r3, [pc, #24]	; (8003040 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8003026:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800302a:	2300      	movs	r3, #0
 800302c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003030:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003034:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003038:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800303c:	4770      	bx	lr
 800303e:	bf00      	nop
 8003040:	08003a8d 	.word	0x08003a8d

08003044 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003044:	4b06      	ldr	r3, [pc, #24]	; (8003060 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003046:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800304a:	2300      	movs	r3, #0
 800304c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003050:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003054:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003058:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800305c:	4770      	bx	lr
 800305e:	bf00      	nop
 8003060:	08003169 	.word	0x08003169

08003064 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003064:	4b06      	ldr	r3, [pc, #24]	; (8003080 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003066:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800306a:	2300      	movs	r3, #0
 800306c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003070:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003074:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003078:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800307c:	4770      	bx	lr
 800307e:	bf00      	nop
 8003080:	0800394d 	.word	0x0800394d

08003084 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003084:	4b06      	ldr	r3, [pc, #24]	; (80030a0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003086:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800308a:	2300      	movs	r3, #0
 800308c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003090:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003094:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003098:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800309c:	4770      	bx	lr
 800309e:	bf00      	nop
 80030a0:	0800380d 	.word	0x0800380d

080030a4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 80030a4:	4b06      	ldr	r3, [pc, #24]	; (80030c0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 80030a6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80030aa:	2300      	movs	r3, #0
 80030ac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80030b0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80030b4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80030b8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80030bc:	4770      	bx	lr
 80030be:	bf00      	nop
 80030c0:	080036cd 	.word	0x080036cd

080030c4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80030c4:	4b06      	ldr	r3, [pc, #24]	; (80030e0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80030c6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80030ca:	2300      	movs	r3, #0
 80030cc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80030d0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80030d4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80030d8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80030dc:	4770      	bx	lr
 80030de:	bf00      	nop
 80030e0:	0800358d 	.word	0x0800358d

080030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 80030e4:	4b06      	ldr	r3, [pc, #24]	; (8003100 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 80030e6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80030ea:	2300      	movs	r3, #0
 80030ec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80030f0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80030f4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80030f8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80030fc:	4770      	bx	lr
 80030fe:	bf00      	nop
 8003100:	08002b89 	.word	0x08002b89

08003104 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003104:	6803      	ldr	r3, [r0, #0]
 8003106:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003108:	4718      	bx	r3
	...

0800310c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 800310c:	4b12      	ldr	r3, [pc, #72]	; (8003158 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800310e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003110:	6003      	str	r3, [r0, #0]
 8003112:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003116:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003118:	4b10      	ldr	r3, [pc, #64]	; (800315c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800311a:	7241      	strb	r1, [r0, #9]
 800311c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800311e:	4910      	ldr	r1, [pc, #64]	; (8003160 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003120:	4b10      	ldr	r3, [pc, #64]	; (8003164 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003122:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003126:	f9b3 3000 	ldrsh.w	r3, [r3]
 800312a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 800312c:	2200      	movs	r2, #0
 800312e:	6042      	str	r2, [r0, #4]
 8003130:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003132:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003134:	81c2      	strh	r2, [r0, #14]
          solid()
 8003136:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800313a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800313e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003142:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003146:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003148:	9100      	str	r1, [sp, #0]
 800314a:	3010      	adds	r0, #16
 800314c:	4611      	mov	r1, r2
 800314e:	f7ff f9a1 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003152:	4620      	mov	r0, r4
 8003154:	b002      	add	sp, #8
 8003156:	bd10      	pop	{r4, pc}
 8003158:	0802a490 	.word	0x0802a490
 800315c:	0802a374 	.word	0x0802a374
 8003160:	200137b2 	.word	0x200137b2
 8003164:	200137b0 	.word	0x200137b0

08003168 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003168:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800316c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003170:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003172:	68a0      	ldr	r0, [r4, #8]
 8003174:	6803      	ldr	r3, [r0, #0]
 8003176:	6a1b      	ldr	r3, [r3, #32]
 8003178:	4798      	blx	r3
 800317a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800317e:	d205      	bcs.n	800318c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003180:	4b42      	ldr	r3, [pc, #264]	; (800328c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003182:	4a43      	ldr	r2, [pc, #268]	; (8003290 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003184:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003186:	4843      	ldr	r0, [pc, #268]	; (8003294 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003188:	f024 f94a 	bl	8027420 <__assert_func>
 800318c:	6860      	ldr	r0, [r4, #4]
 800318e:	6803      	ldr	r3, [r0, #0]
 8003190:	6a1b      	ldr	r3, [r3, #32]
 8003192:	4798      	blx	r3
 8003194:	280f      	cmp	r0, #15
 8003196:	d803      	bhi.n	80031a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003198:	4b3f      	ldr	r3, [pc, #252]	; (8003298 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 800319a:	4a3d      	ldr	r2, [pc, #244]	; (8003290 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800319c:	21a4      	movs	r1, #164	; 0xa4
 800319e:	e7f2      	b.n	8003186 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80031a0:	68e0      	ldr	r0, [r4, #12]
 80031a2:	6803      	ldr	r3, [r0, #0]
 80031a4:	6a1b      	ldr	r3, [r3, #32]
 80031a6:	4798      	blx	r3
 80031a8:	2837      	cmp	r0, #55	; 0x37
 80031aa:	d803      	bhi.n	80031b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 80031ac:	4b3b      	ldr	r3, [pc, #236]	; (800329c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 80031ae:	4a38      	ldr	r2, [pc, #224]	; (8003290 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80031b0:	21a5      	movs	r1, #165	; 0xa5
 80031b2:	e7e8      	b.n	8003186 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80031b4:	f010 fde4 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80031b8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80032a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 80031bc:	3004      	adds	r0, #4
 80031be:	f010 fe45 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80031c2:	f8d9 0000 	ldr.w	r0, [r9]
 80031c6:	b110      	cbz	r0, 80031ce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80031c8:	6803      	ldr	r3, [r0, #0]
 80031ca:	68db      	ldr	r3, [r3, #12]
 80031cc:	4798      	blx	r3
    if (*currentTrans)
 80031ce:	f8d9 0000 	ldr.w	r0, [r9]
 80031d2:	b110      	cbz	r0, 80031da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80031d4:	6803      	ldr	r3, [r0, #0]
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	4798      	blx	r3
    if (*currentScreen)
 80031da:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80032a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 80031de:	f8d8 0000 	ldr.w	r0, [r8]
 80031e2:	b110      	cbz	r0, 80031ea <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80031e4:	6803      	ldr	r3, [r0, #0]
 80031e6:	695b      	ldr	r3, [r3, #20]
 80031e8:	4798      	blx	r3
    if (*currentPresenter)
 80031ea:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80031ee:	b110      	cbz	r0, 80031f6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80031f0:	6803      	ldr	r3, [r0, #0]
 80031f2:	685b      	ldr	r3, [r3, #4]
 80031f4:	4798      	blx	r3
    if (*currentScreen)
 80031f6:	f8d8 0000 	ldr.w	r0, [r8]
 80031fa:	b110      	cbz	r0, 8003202 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80031fc:	6803      	ldr	r3, [r0, #0]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	4798      	blx	r3
    if (*currentPresenter)
 8003202:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003206:	b110      	cbz	r0, 800320e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003208:	6803      	ldr	r3, [r0, #0]
 800320a:	689b      	ldr	r3, [r3, #8]
 800320c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800320e:	68e0      	ldr	r0, [r4, #12]
 8003210:	2100      	movs	r1, #0
 8003212:	f7ff ff77 	bl	8003104 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003216:	2114      	movs	r1, #20
 8003218:	4605      	mov	r5, r0
 800321a:	f7ff ff77 	bl	800310c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800321e:	68a0      	ldr	r0, [r4, #8]
 8003220:	6803      	ldr	r3, [r0, #0]
 8003222:	2100      	movs	r1, #0
 8003224:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003226:	4798      	blx	r3
 8003228:	4606      	mov	r6, r0
 800322a:	f004 f865 	bl	80072f8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800322e:	6860      	ldr	r0, [r4, #4]
 8003230:	6803      	ldr	r3, [r0, #0]
 8003232:	2100      	movs	r1, #0
 8003234:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003236:	4798      	blx	r3
 8003238:	4631      	mov	r1, r6
 800323a:	4604      	mov	r4, r0
 800323c:	f004 f836 	bl	80072ac <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003240:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003244:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003248:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800324c:	b1dc      	cbz	r4, 8003286 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 800324e:	1d23      	adds	r3, r4, #4
 8003250:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003254:	6833      	ldr	r3, [r6, #0]
 8003256:	f8c4 a008 	str.w	sl, [r4, #8]
 800325a:	4630      	mov	r0, r6
 800325c:	68db      	ldr	r3, [r3, #12]
 800325e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003260:	4798      	blx	r3
    newPresenter->activate();
 8003262:	6823      	ldr	r3, [r4, #0]
 8003264:	4620      	mov	r0, r4
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800326a:	4629      	mov	r1, r5
 800326c:	4630      	mov	r0, r6
 800326e:	f012 fbb3 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003272:	682b      	ldr	r3, [r5, #0]
 8003274:	4628      	mov	r0, r5
 8003276:	691b      	ldr	r3, [r3, #16]
 8003278:	4798      	blx	r3
    newTransition->invalidate();
 800327a:	682b      	ldr	r3, [r5, #0]
 800327c:	4628      	mov	r0, r5
 800327e:	695b      	ldr	r3, [r3, #20]
}
 8003280:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003284:	4718      	bx	r3
    model->bind(newPresenter);
 8003286:	4623      	mov	r3, r4
 8003288:	e7e2      	b.n	8003250 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 800328a:	bf00      	nop
 800328c:	08029110 	.word	0x08029110
 8003290:	08029541 	.word	0x08029541
 8003294:	080292ac 	.word	0x080292ac
 8003298:	080292f3 	.word	0x080292f3
 800329c:	08029396 	.word	0x08029396
 80032a0:	20013804 	.word	0x20013804
 80032a4:	20013800 	.word	0x20013800

080032a8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80032a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80032ac:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80032b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80032b2:	68a0      	ldr	r0, [r4, #8]
 80032b4:	6803      	ldr	r3, [r0, #0]
 80032b6:	6a1b      	ldr	r3, [r3, #32]
 80032b8:	4798      	blx	r3
 80032ba:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80032be:	d205      	bcs.n	80032cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 80032c0:	4b42      	ldr	r3, [pc, #264]	; (80033cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80032c2:	4a43      	ldr	r2, [pc, #268]	; (80033d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80032c4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80032c6:	4843      	ldr	r0, [pc, #268]	; (80033d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80032c8:	f024 f8aa 	bl	8027420 <__assert_func>
 80032cc:	6860      	ldr	r0, [r4, #4]
 80032ce:	6803      	ldr	r3, [r0, #0]
 80032d0:	6a1b      	ldr	r3, [r3, #32]
 80032d2:	4798      	blx	r3
 80032d4:	280f      	cmp	r0, #15
 80032d6:	d803      	bhi.n	80032e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 80032d8:	4b3f      	ldr	r3, [pc, #252]	; (80033d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80032da:	4a3d      	ldr	r2, [pc, #244]	; (80033d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80032dc:	21a4      	movs	r1, #164	; 0xa4
 80032de:	e7f2      	b.n	80032c6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80032e0:	68e0      	ldr	r0, [r4, #12]
 80032e2:	6803      	ldr	r3, [r0, #0]
 80032e4:	6a1b      	ldr	r3, [r3, #32]
 80032e6:	4798      	blx	r3
 80032e8:	2837      	cmp	r0, #55	; 0x37
 80032ea:	d803      	bhi.n	80032f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 80032ec:	4b3b      	ldr	r3, [pc, #236]	; (80033dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 80032ee:	4a38      	ldr	r2, [pc, #224]	; (80033d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80032f0:	21a5      	movs	r1, #165	; 0xa5
 80032f2:	e7e8      	b.n	80032c6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80032f4:	f010 fd44 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80032f8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80033e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 80032fc:	3004      	adds	r0, #4
 80032fe:	f010 fda5 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003302:	f8d9 0000 	ldr.w	r0, [r9]
 8003306:	b110      	cbz	r0, 800330e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003308:	6803      	ldr	r3, [r0, #0]
 800330a:	68db      	ldr	r3, [r3, #12]
 800330c:	4798      	blx	r3
    if (*currentTrans)
 800330e:	f8d9 0000 	ldr.w	r0, [r9]
 8003312:	b110      	cbz	r0, 800331a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003314:	6803      	ldr	r3, [r0, #0]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	4798      	blx	r3
    if (*currentScreen)
 800331a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80033e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 800331e:	f8d8 0000 	ldr.w	r0, [r8]
 8003322:	b110      	cbz	r0, 800332a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003324:	6803      	ldr	r3, [r0, #0]
 8003326:	695b      	ldr	r3, [r3, #20]
 8003328:	4798      	blx	r3
    if (*currentPresenter)
 800332a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800332e:	b110      	cbz	r0, 8003336 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003330:	6803      	ldr	r3, [r0, #0]
 8003332:	685b      	ldr	r3, [r3, #4]
 8003334:	4798      	blx	r3
    if (*currentScreen)
 8003336:	f8d8 0000 	ldr.w	r0, [r8]
 800333a:	b110      	cbz	r0, 8003342 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 800333c:	6803      	ldr	r3, [r0, #0]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	4798      	blx	r3
    if (*currentPresenter)
 8003342:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003346:	b110      	cbz	r0, 800334e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003348:	6803      	ldr	r3, [r0, #0]
 800334a:	689b      	ldr	r3, [r3, #8]
 800334c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800334e:	68e0      	ldr	r0, [r4, #12]
 8003350:	2100      	movs	r1, #0
 8003352:	f7ff fed7 	bl	8003104 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003356:	2114      	movs	r1, #20
 8003358:	4605      	mov	r5, r0
 800335a:	f7ff fed7 	bl	800310c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800335e:	68a0      	ldr	r0, [r4, #8]
 8003360:	6803      	ldr	r3, [r0, #0]
 8003362:	2100      	movs	r1, #0
 8003364:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003366:	4798      	blx	r3
 8003368:	4606      	mov	r6, r0
 800336a:	f003 ff6b 	bl	8007244 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800336e:	6860      	ldr	r0, [r4, #4]
 8003370:	6803      	ldr	r3, [r0, #0]
 8003372:	2100      	movs	r1, #0
 8003374:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003376:	4798      	blx	r3
 8003378:	4631      	mov	r1, r6
 800337a:	4604      	mov	r4, r0
 800337c:	f003 ff3c 	bl	80071f8 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003380:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003384:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003388:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800338c:	b1dc      	cbz	r4, 80033c6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 800338e:	1d23      	adds	r3, r4, #4
 8003390:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003394:	6833      	ldr	r3, [r6, #0]
 8003396:	f8c4 a008 	str.w	sl, [r4, #8]
 800339a:	4630      	mov	r0, r6
 800339c:	68db      	ldr	r3, [r3, #12]
 800339e:	63f4      	str	r4, [r6, #60]	; 0x3c
 80033a0:	4798      	blx	r3
    newPresenter->activate();
 80033a2:	6823      	ldr	r3, [r4, #0]
 80033a4:	4620      	mov	r0, r4
 80033a6:	681b      	ldr	r3, [r3, #0]
 80033a8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80033aa:	4629      	mov	r1, r5
 80033ac:	4630      	mov	r0, r6
 80033ae:	f012 fb13 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80033b2:	682b      	ldr	r3, [r5, #0]
 80033b4:	4628      	mov	r0, r5
 80033b6:	691b      	ldr	r3, [r3, #16]
 80033b8:	4798      	blx	r3
    newTransition->invalidate();
 80033ba:	682b      	ldr	r3, [r5, #0]
 80033bc:	4628      	mov	r0, r5
 80033be:	695b      	ldr	r3, [r3, #20]
}
 80033c0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80033c4:	4718      	bx	r3
    model->bind(newPresenter);
 80033c6:	4623      	mov	r3, r4
 80033c8:	e7e2      	b.n	8003390 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 80033ca:	bf00      	nop
 80033cc:	08029110 	.word	0x08029110
 80033d0:	08029671 	.word	0x08029671
 80033d4:	080292ac 	.word	0x080292ac
 80033d8:	080292f3 	.word	0x080292f3
 80033dc:	08029396 	.word	0x08029396
 80033e0:	20013804 	.word	0x20013804
 80033e4:	20013800 	.word	0x20013800

080033e8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 80033e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80033ec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80033f0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80033f2:	68a0      	ldr	r0, [r4, #8]
 80033f4:	6803      	ldr	r3, [r0, #0]
 80033f6:	6a1b      	ldr	r3, [r3, #32]
 80033f8:	4798      	blx	r3
 80033fa:	f241 137b 	movw	r3, #4475	; 0x117b
 80033fe:	4298      	cmp	r0, r3
 8003400:	d805      	bhi.n	800340e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003402:	4b42      	ldr	r3, [pc, #264]	; (800350c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003404:	4a42      	ldr	r2, [pc, #264]	; (8003510 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003406:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003408:	4842      	ldr	r0, [pc, #264]	; (8003514 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 800340a:	f024 f809 	bl	8027420 <__assert_func>
 800340e:	6860      	ldr	r0, [r4, #4]
 8003410:	6803      	ldr	r3, [r0, #0]
 8003412:	6a1b      	ldr	r3, [r3, #32]
 8003414:	4798      	blx	r3
 8003416:	280f      	cmp	r0, #15
 8003418:	d803      	bhi.n	8003422 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 800341a:	4b3f      	ldr	r3, [pc, #252]	; (8003518 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 800341c:	4a3c      	ldr	r2, [pc, #240]	; (8003510 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800341e:	21a4      	movs	r1, #164	; 0xa4
 8003420:	e7f2      	b.n	8003408 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003422:	68e0      	ldr	r0, [r4, #12]
 8003424:	6803      	ldr	r3, [r0, #0]
 8003426:	6a1b      	ldr	r3, [r3, #32]
 8003428:	4798      	blx	r3
 800342a:	2837      	cmp	r0, #55	; 0x37
 800342c:	d803      	bhi.n	8003436 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 800342e:	4b3b      	ldr	r3, [pc, #236]	; (800351c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003430:	4a37      	ldr	r2, [pc, #220]	; (8003510 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003432:	21a5      	movs	r1, #165	; 0xa5
 8003434:	e7e8      	b.n	8003408 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003436:	f010 fca3 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800343a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003520 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 800343e:	3004      	adds	r0, #4
 8003440:	f010 fd04 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003444:	f8d9 0000 	ldr.w	r0, [r9]
 8003448:	b110      	cbz	r0, 8003450 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 800344a:	6803      	ldr	r3, [r0, #0]
 800344c:	68db      	ldr	r3, [r3, #12]
 800344e:	4798      	blx	r3
    if (*currentTrans)
 8003450:	f8d9 0000 	ldr.w	r0, [r9]
 8003454:	b110      	cbz	r0, 800345c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8003456:	6803      	ldr	r3, [r0, #0]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	4798      	blx	r3
    if (*currentScreen)
 800345c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003524 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8003460:	f8d8 0000 	ldr.w	r0, [r8]
 8003464:	b110      	cbz	r0, 800346c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003466:	6803      	ldr	r3, [r0, #0]
 8003468:	695b      	ldr	r3, [r3, #20]
 800346a:	4798      	blx	r3
    if (*currentPresenter)
 800346c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003470:	b110      	cbz	r0, 8003478 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003472:	6803      	ldr	r3, [r0, #0]
 8003474:	685b      	ldr	r3, [r3, #4]
 8003476:	4798      	blx	r3
    if (*currentScreen)
 8003478:	f8d8 0000 	ldr.w	r0, [r8]
 800347c:	b110      	cbz	r0, 8003484 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800347e:	6803      	ldr	r3, [r0, #0]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	4798      	blx	r3
    if (*currentPresenter)
 8003484:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003488:	b110      	cbz	r0, 8003490 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800348a:	6803      	ldr	r3, [r0, #0]
 800348c:	689b      	ldr	r3, [r3, #8]
 800348e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003490:	68e0      	ldr	r0, [r4, #12]
 8003492:	2100      	movs	r1, #0
 8003494:	f7ff fe36 	bl	8003104 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003498:	2114      	movs	r1, #20
 800349a:	4605      	mov	r5, r0
 800349c:	f7ff fe36 	bl	800310c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80034a0:	68a0      	ldr	r0, [r4, #8]
 80034a2:	6803      	ldr	r3, [r0, #0]
 80034a4:	2100      	movs	r1, #0
 80034a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034a8:	4798      	blx	r3
 80034aa:	4606      	mov	r6, r0
 80034ac:	f003 fe6a 	bl	8007184 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80034b0:	6860      	ldr	r0, [r4, #4]
 80034b2:	6803      	ldr	r3, [r0, #0]
 80034b4:	2100      	movs	r1, #0
 80034b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034b8:	4798      	blx	r3
 80034ba:	4631      	mov	r1, r6
 80034bc:	4604      	mov	r4, r0
 80034be:	f003 fe3b 	bl	8007138 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80034c2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80034c6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80034ca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80034ce:	b1dc      	cbz	r4, 8003508 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 80034d0:	1d23      	adds	r3, r4, #4
 80034d2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80034d6:	6833      	ldr	r3, [r6, #0]
 80034d8:	f8c4 a008 	str.w	sl, [r4, #8]
 80034dc:	4630      	mov	r0, r6
 80034de:	68db      	ldr	r3, [r3, #12]
 80034e0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80034e2:	4798      	blx	r3
    newPresenter->activate();
 80034e4:	6823      	ldr	r3, [r4, #0]
 80034e6:	4620      	mov	r0, r4
 80034e8:	681b      	ldr	r3, [r3, #0]
 80034ea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80034ec:	4629      	mov	r1, r5
 80034ee:	4630      	mov	r0, r6
 80034f0:	f012 fa72 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80034f4:	682b      	ldr	r3, [r5, #0]
 80034f6:	4628      	mov	r0, r5
 80034f8:	691b      	ldr	r3, [r3, #16]
 80034fa:	4798      	blx	r3
    newTransition->invalidate();
 80034fc:	682b      	ldr	r3, [r5, #0]
 80034fe:	4628      	mov	r0, r5
 8003500:	695b      	ldr	r3, [r3, #20]
}
 8003502:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003506:	4718      	bx	r3
    model->bind(newPresenter);
 8003508:	4623      	mov	r3, r4
 800350a:	e7e2      	b.n	80034d2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 800350c:	08029110 	.word	0x08029110
 8003510:	0802978f 	.word	0x0802978f
 8003514:	080292ac 	.word	0x080292ac
 8003518:	080292f3 	.word	0x080292f3
 800351c:	08029396 	.word	0x08029396
 8003520:	20013804 	.word	0x20013804
 8003524:	20013800 	.word	0x20013800

08003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003528:	6803      	ldr	r3, [r0, #0]
 800352a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800352c:	4718      	bx	r3
	...

08003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8003530:	4b12      	ldr	r3, [pc, #72]	; (800357c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003532:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003534:	6003      	str	r3, [r0, #0]
 8003536:	f44f 7380 	mov.w	r3, #256	; 0x100
 800353a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800353c:	4b10      	ldr	r3, [pc, #64]	; (8003580 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800353e:	7241      	strb	r1, [r0, #9]
 8003540:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003542:	4910      	ldr	r1, [pc, #64]	; (8003584 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003544:	4b10      	ldr	r3, [pc, #64]	; (8003588 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003546:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800354a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800354e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003550:	2200      	movs	r2, #0
 8003552:	6042      	str	r2, [r0, #4]
 8003554:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003556:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003558:	81c2      	strh	r2, [r0, #14]
          solid()
 800355a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800355e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003562:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003566:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800356a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800356c:	9100      	str	r1, [sp, #0]
 800356e:	3010      	adds	r0, #16
 8003570:	4611      	mov	r1, r2
 8003572:	f7fe ff8f 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003576:	4620      	mov	r0, r4
 8003578:	b002      	add	sp, #8
 800357a:	bd10      	pop	{r4, pc}
 800357c:	0802a46c 	.word	0x0802a46c
 8003580:	0802a374 	.word	0x0802a374
 8003584:	200137b2 	.word	0x200137b2
 8003588:	200137b0 	.word	0x200137b0

0800358c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 800358c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003590:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003594:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003596:	68a0      	ldr	r0, [r4, #8]
 8003598:	6803      	ldr	r3, [r0, #0]
 800359a:	6a1b      	ldr	r3, [r3, #32]
 800359c:	4798      	blx	r3
 800359e:	f241 03af 	movw	r3, #4271	; 0x10af
 80035a2:	4298      	cmp	r0, r3
 80035a4:	d805      	bhi.n	80035b2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 80035a6:	4b42      	ldr	r3, [pc, #264]	; (80036b0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 80035a8:	4a42      	ldr	r2, [pc, #264]	; (80036b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80035aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80035ac:	4842      	ldr	r0, [pc, #264]	; (80036b8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 80035ae:	f023 ff37 	bl	8027420 <__assert_func>
 80035b2:	6860      	ldr	r0, [r4, #4]
 80035b4:	6803      	ldr	r3, [r0, #0]
 80035b6:	6a1b      	ldr	r3, [r3, #32]
 80035b8:	4798      	blx	r3
 80035ba:	280f      	cmp	r0, #15
 80035bc:	d803      	bhi.n	80035c6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 80035be:	4b3f      	ldr	r3, [pc, #252]	; (80036bc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 80035c0:	4a3c      	ldr	r2, [pc, #240]	; (80036b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80035c2:	21a4      	movs	r1, #164	; 0xa4
 80035c4:	e7f2      	b.n	80035ac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80035c6:	68e0      	ldr	r0, [r4, #12]
 80035c8:	6803      	ldr	r3, [r0, #0]
 80035ca:	6a1b      	ldr	r3, [r3, #32]
 80035cc:	4798      	blx	r3
 80035ce:	2837      	cmp	r0, #55	; 0x37
 80035d0:	d803      	bhi.n	80035da <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80035d2:	4b3b      	ldr	r3, [pc, #236]	; (80036c0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80035d4:	4a37      	ldr	r2, [pc, #220]	; (80036b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80035d6:	21a5      	movs	r1, #165	; 0xa5
 80035d8:	e7e8      	b.n	80035ac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80035da:	f010 fbd1 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80035de:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80036c4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 80035e2:	3004      	adds	r0, #4
 80035e4:	f010 fc32 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80035e8:	f8d9 0000 	ldr.w	r0, [r9]
 80035ec:	b110      	cbz	r0, 80035f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80035ee:	6803      	ldr	r3, [r0, #0]
 80035f0:	68db      	ldr	r3, [r3, #12]
 80035f2:	4798      	blx	r3
    if (*currentTrans)
 80035f4:	f8d9 0000 	ldr.w	r0, [r9]
 80035f8:	b110      	cbz	r0, 8003600 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80035fa:	6803      	ldr	r3, [r0, #0]
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	4798      	blx	r3
    if (*currentScreen)
 8003600:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80036c8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8003604:	f8d8 0000 	ldr.w	r0, [r8]
 8003608:	b110      	cbz	r0, 8003610 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800360a:	6803      	ldr	r3, [r0, #0]
 800360c:	695b      	ldr	r3, [r3, #20]
 800360e:	4798      	blx	r3
    if (*currentPresenter)
 8003610:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003614:	b110      	cbz	r0, 800361c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003616:	6803      	ldr	r3, [r0, #0]
 8003618:	685b      	ldr	r3, [r3, #4]
 800361a:	4798      	blx	r3
    if (*currentScreen)
 800361c:	f8d8 0000 	ldr.w	r0, [r8]
 8003620:	b110      	cbz	r0, 8003628 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003622:	6803      	ldr	r3, [r0, #0]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	4798      	blx	r3
    if (*currentPresenter)
 8003628:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800362c:	b110      	cbz	r0, 8003634 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800362e:	6803      	ldr	r3, [r0, #0]
 8003630:	689b      	ldr	r3, [r3, #8]
 8003632:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003634:	68e0      	ldr	r0, [r4, #12]
 8003636:	2100      	movs	r1, #0
 8003638:	f7ff ff76 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800363c:	2114      	movs	r1, #20
 800363e:	4605      	mov	r5, r0
 8003640:	f7ff ff76 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003644:	68a0      	ldr	r0, [r4, #8]
 8003646:	6803      	ldr	r3, [r0, #0]
 8003648:	2100      	movs	r1, #0
 800364a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800364c:	4798      	blx	r3
 800364e:	4606      	mov	r6, r0
 8003650:	f004 f802 	bl	8007658 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003654:	6860      	ldr	r0, [r4, #4]
 8003656:	6803      	ldr	r3, [r0, #0]
 8003658:	2100      	movs	r1, #0
 800365a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800365c:	4798      	blx	r3
 800365e:	4631      	mov	r1, r6
 8003660:	4604      	mov	r4, r0
 8003662:	f003 ffd3 	bl	800760c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8003666:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800366a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800366e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003672:	b1dc      	cbz	r4, 80036ac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8003674:	1d23      	adds	r3, r4, #4
 8003676:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800367a:	6833      	ldr	r3, [r6, #0]
 800367c:	f8c4 a008 	str.w	sl, [r4, #8]
 8003680:	4630      	mov	r0, r6
 8003682:	68db      	ldr	r3, [r3, #12]
 8003684:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003686:	4798      	blx	r3
    newPresenter->activate();
 8003688:	6823      	ldr	r3, [r4, #0]
 800368a:	4620      	mov	r0, r4
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003690:	4629      	mov	r1, r5
 8003692:	4630      	mov	r0, r6
 8003694:	f012 f9a0 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003698:	682b      	ldr	r3, [r5, #0]
 800369a:	4628      	mov	r0, r5
 800369c:	691b      	ldr	r3, [r3, #16]
 800369e:	4798      	blx	r3
    newTransition->invalidate();
 80036a0:	682b      	ldr	r3, [r5, #0]
 80036a2:	4628      	mov	r0, r5
 80036a4:	695b      	ldr	r3, [r3, #20]
}
 80036a6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80036aa:	4718      	bx	r3
    model->bind(newPresenter);
 80036ac:	4623      	mov	r3, r4
 80036ae:	e7e2      	b.n	8003676 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80036b0:	08029110 	.word	0x08029110
 80036b4:	080298a9 	.word	0x080298a9
 80036b8:	080292ac 	.word	0x080292ac
 80036bc:	080292f3 	.word	0x080292f3
 80036c0:	08029396 	.word	0x08029396
 80036c4:	20013804 	.word	0x20013804
 80036c8:	20013800 	.word	0x20013800

080036cc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 80036cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80036d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80036d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80036d6:	68a0      	ldr	r0, [r4, #8]
 80036d8:	6803      	ldr	r3, [r0, #0]
 80036da:	6a1b      	ldr	r3, [r3, #32]
 80036dc:	4798      	blx	r3
 80036de:	f241 03f7 	movw	r3, #4343	; 0x10f7
 80036e2:	4298      	cmp	r0, r3
 80036e4:	d805      	bhi.n	80036f2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x26>
 80036e6:	4b42      	ldr	r3, [pc, #264]	; (80037f0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 80036e8:	4a42      	ldr	r2, [pc, #264]	; (80037f4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80036ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80036ec:	4842      	ldr	r0, [pc, #264]	; (80037f8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 80036ee:	f023 fe97 	bl	8027420 <__assert_func>
 80036f2:	6860      	ldr	r0, [r4, #4]
 80036f4:	6803      	ldr	r3, [r0, #0]
 80036f6:	6a1b      	ldr	r3, [r3, #32]
 80036f8:	4798      	blx	r3
 80036fa:	280f      	cmp	r0, #15
 80036fc:	d803      	bhi.n	8003706 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x3a>
 80036fe:	4b3f      	ldr	r3, [pc, #252]	; (80037fc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8003700:	4a3c      	ldr	r2, [pc, #240]	; (80037f4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8003702:	21a4      	movs	r1, #164	; 0xa4
 8003704:	e7f2      	b.n	80036ec <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003706:	68e0      	ldr	r0, [r4, #12]
 8003708:	6803      	ldr	r3, [r0, #0]
 800370a:	6a1b      	ldr	r3, [r3, #32]
 800370c:	4798      	blx	r3
 800370e:	2837      	cmp	r0, #55	; 0x37
 8003710:	d803      	bhi.n	800371a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4e>
 8003712:	4b3b      	ldr	r3, [pc, #236]	; (8003800 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8003714:	4a37      	ldr	r2, [pc, #220]	; (80037f4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8003716:	21a5      	movs	r1, #165	; 0xa5
 8003718:	e7e8      	b.n	80036ec <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800371a:	f010 fb31 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800371e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003804 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8003722:	3004      	adds	r0, #4
 8003724:	f010 fb92 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003728:	f8d9 0000 	ldr.w	r0, [r9]
 800372c:	b110      	cbz	r0, 8003734 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800372e:	6803      	ldr	r3, [r0, #0]
 8003730:	68db      	ldr	r3, [r3, #12]
 8003732:	4798      	blx	r3
    if (*currentTrans)
 8003734:	f8d9 0000 	ldr.w	r0, [r9]
 8003738:	b110      	cbz	r0, 8003740 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800373a:	6803      	ldr	r3, [r0, #0]
 800373c:	681b      	ldr	r3, [r3, #0]
 800373e:	4798      	blx	r3
    if (*currentScreen)
 8003740:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003808 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8003744:	f8d8 0000 	ldr.w	r0, [r8]
 8003748:	b110      	cbz	r0, 8003750 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800374a:	6803      	ldr	r3, [r0, #0]
 800374c:	695b      	ldr	r3, [r3, #20]
 800374e:	4798      	blx	r3
    if (*currentPresenter)
 8003750:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003754:	b110      	cbz	r0, 800375c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003756:	6803      	ldr	r3, [r0, #0]
 8003758:	685b      	ldr	r3, [r3, #4]
 800375a:	4798      	blx	r3
    if (*currentScreen)
 800375c:	f8d8 0000 	ldr.w	r0, [r8]
 8003760:	b110      	cbz	r0, 8003768 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003762:	6803      	ldr	r3, [r0, #0]
 8003764:	681b      	ldr	r3, [r3, #0]
 8003766:	4798      	blx	r3
    if (*currentPresenter)
 8003768:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800376c:	b110      	cbz	r0, 8003774 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800376e:	6803      	ldr	r3, [r0, #0]
 8003770:	689b      	ldr	r3, [r3, #8]
 8003772:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003774:	68e0      	ldr	r0, [r4, #12]
 8003776:	2100      	movs	r1, #0
 8003778:	f7ff fed6 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800377c:	2114      	movs	r1, #20
 800377e:	4605      	mov	r5, r0
 8003780:	f7ff fed6 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003784:	68a0      	ldr	r0, [r4, #8]
 8003786:	6803      	ldr	r3, [r0, #0]
 8003788:	2100      	movs	r1, #0
 800378a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800378c:	4798      	blx	r3
 800378e:	4606      	mov	r6, r0
 8003790:	f003 fc70 	bl	8007074 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003794:	6860      	ldr	r0, [r4, #4]
 8003796:	6803      	ldr	r3, [r0, #0]
 8003798:	2100      	movs	r1, #0
 800379a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800379c:	4798      	blx	r3
 800379e:	4631      	mov	r1, r6
 80037a0:	4604      	mov	r4, r0
 80037a2:	f003 fc41 	bl	8007028 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80037a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80037aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80037ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80037b2:	b1dc      	cbz	r4, 80037ec <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x120>
 80037b4:	1d23      	adds	r3, r4, #4
 80037b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80037ba:	6833      	ldr	r3, [r6, #0]
 80037bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80037c0:	4630      	mov	r0, r6
 80037c2:	68db      	ldr	r3, [r3, #12]
 80037c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80037c6:	4798      	blx	r3
    newPresenter->activate();
 80037c8:	6823      	ldr	r3, [r4, #0]
 80037ca:	4620      	mov	r0, r4
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80037d0:	4629      	mov	r1, r5
 80037d2:	4630      	mov	r0, r6
 80037d4:	f012 f900 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80037d8:	682b      	ldr	r3, [r5, #0]
 80037da:	4628      	mov	r0, r5
 80037dc:	691b      	ldr	r3, [r3, #16]
 80037de:	4798      	blx	r3
    newTransition->invalidate();
 80037e0:	682b      	ldr	r3, [r5, #0]
 80037e2:	4628      	mov	r0, r5
 80037e4:	695b      	ldr	r3, [r3, #20]
}
 80037e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80037ea:	4718      	bx	r3
    model->bind(newPresenter);
 80037ec:	4623      	mov	r3, r4
 80037ee:	e7e2      	b.n	80037b6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xea>
 80037f0:	08029110 	.word	0x08029110
 80037f4:	080299c9 	.word	0x080299c9
 80037f8:	080292ac 	.word	0x080292ac
 80037fc:	080292f3 	.word	0x080292f3
 8003800:	08029396 	.word	0x08029396
 8003804:	20013804 	.word	0x20013804
 8003808:	20013800 	.word	0x20013800

0800380c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 800380c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003810:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003814:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003816:	68a0      	ldr	r0, [r4, #8]
 8003818:	6803      	ldr	r3, [r0, #0]
 800381a:	6a1b      	ldr	r3, [r3, #32]
 800381c:	4798      	blx	r3
 800381e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003822:	4298      	cmp	r0, r3
 8003824:	d805      	bhi.n	8003832 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8003826:	4b42      	ldr	r3, [pc, #264]	; (8003930 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8003828:	4a42      	ldr	r2, [pc, #264]	; (8003934 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800382a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800382c:	4842      	ldr	r0, [pc, #264]	; (8003938 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 800382e:	f023 fdf7 	bl	8027420 <__assert_func>
 8003832:	6860      	ldr	r0, [r4, #4]
 8003834:	6803      	ldr	r3, [r0, #0]
 8003836:	6a1b      	ldr	r3, [r3, #32]
 8003838:	4798      	blx	r3
 800383a:	280f      	cmp	r0, #15
 800383c:	d803      	bhi.n	8003846 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 800383e:	4b3f      	ldr	r3, [pc, #252]	; (800393c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8003840:	4a3c      	ldr	r2, [pc, #240]	; (8003934 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8003842:	21a4      	movs	r1, #164	; 0xa4
 8003844:	e7f2      	b.n	800382c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003846:	68e0      	ldr	r0, [r4, #12]
 8003848:	6803      	ldr	r3, [r0, #0]
 800384a:	6a1b      	ldr	r3, [r3, #32]
 800384c:	4798      	blx	r3
 800384e:	2837      	cmp	r0, #55	; 0x37
 8003850:	d803      	bhi.n	800385a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8003852:	4b3b      	ldr	r3, [pc, #236]	; (8003940 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8003854:	4a37      	ldr	r2, [pc, #220]	; (8003934 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8003856:	21a5      	movs	r1, #165	; 0xa5
 8003858:	e7e8      	b.n	800382c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800385a:	f010 fa91 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800385e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003944 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8003862:	3004      	adds	r0, #4
 8003864:	f010 faf2 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003868:	f8d9 0000 	ldr.w	r0, [r9]
 800386c:	b110      	cbz	r0, 8003874 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800386e:	6803      	ldr	r3, [r0, #0]
 8003870:	68db      	ldr	r3, [r3, #12]
 8003872:	4798      	blx	r3
    if (*currentTrans)
 8003874:	f8d9 0000 	ldr.w	r0, [r9]
 8003878:	b110      	cbz	r0, 8003880 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800387a:	6803      	ldr	r3, [r0, #0]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	4798      	blx	r3
    if (*currentScreen)
 8003880:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003948 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8003884:	f8d8 0000 	ldr.w	r0, [r8]
 8003888:	b110      	cbz	r0, 8003890 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800388a:	6803      	ldr	r3, [r0, #0]
 800388c:	695b      	ldr	r3, [r3, #20]
 800388e:	4798      	blx	r3
    if (*currentPresenter)
 8003890:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003894:	b110      	cbz	r0, 800389c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003896:	6803      	ldr	r3, [r0, #0]
 8003898:	685b      	ldr	r3, [r3, #4]
 800389a:	4798      	blx	r3
    if (*currentScreen)
 800389c:	f8d8 0000 	ldr.w	r0, [r8]
 80038a0:	b110      	cbz	r0, 80038a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80038a2:	6803      	ldr	r3, [r0, #0]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	4798      	blx	r3
    if (*currentPresenter)
 80038a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80038ac:	b110      	cbz	r0, 80038b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80038ae:	6803      	ldr	r3, [r0, #0]
 80038b0:	689b      	ldr	r3, [r3, #8]
 80038b2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80038b4:	68e0      	ldr	r0, [r4, #12]
 80038b6:	2100      	movs	r1, #0
 80038b8:	f7ff fe36 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80038bc:	2114      	movs	r1, #20
 80038be:	4605      	mov	r5, r0
 80038c0:	f7ff fe36 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80038c4:	68a0      	ldr	r0, [r4, #8]
 80038c6:	6803      	ldr	r3, [r0, #0]
 80038c8:	2100      	movs	r1, #0
 80038ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038cc:	4798      	blx	r3
 80038ce:	4606      	mov	r6, r0
 80038d0:	f003 fd96 	bl	8007400 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80038d4:	6860      	ldr	r0, [r4, #4]
 80038d6:	6803      	ldr	r3, [r0, #0]
 80038d8:	2100      	movs	r1, #0
 80038da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038dc:	4798      	blx	r3
 80038de:	4631      	mov	r1, r6
 80038e0:	4604      	mov	r4, r0
 80038e2:	f003 fd67 	bl	80073b4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 80038e6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80038ea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80038ee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80038f2:	b1dc      	cbz	r4, 800392c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 80038f4:	1d23      	adds	r3, r4, #4
 80038f6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80038fa:	6833      	ldr	r3, [r6, #0]
 80038fc:	f8c4 a008 	str.w	sl, [r4, #8]
 8003900:	4630      	mov	r0, r6
 8003902:	68db      	ldr	r3, [r3, #12]
 8003904:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003906:	4798      	blx	r3
    newPresenter->activate();
 8003908:	6823      	ldr	r3, [r4, #0]
 800390a:	4620      	mov	r0, r4
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003910:	4629      	mov	r1, r5
 8003912:	4630      	mov	r0, r6
 8003914:	f012 f860 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003918:	682b      	ldr	r3, [r5, #0]
 800391a:	4628      	mov	r0, r5
 800391c:	691b      	ldr	r3, [r3, #16]
 800391e:	4798      	blx	r3
    newTransition->invalidate();
 8003920:	682b      	ldr	r3, [r5, #0]
 8003922:	4628      	mov	r0, r5
 8003924:	695b      	ldr	r3, [r3, #20]
}
 8003926:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800392a:	4718      	bx	r3
    model->bind(newPresenter);
 800392c:	4623      	mov	r3, r4
 800392e:	e7e2      	b.n	80038f6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8003930:	08029110 	.word	0x08029110
 8003934:	08029ae7 	.word	0x08029ae7
 8003938:	080292ac 	.word	0x080292ac
 800393c:	080292f3 	.word	0x080292f3
 8003940:	08029396 	.word	0x08029396
 8003944:	20013804 	.word	0x20013804
 8003948:	20013800 	.word	0x20013800

0800394c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 800394c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003950:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003954:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003956:	68a0      	ldr	r0, [r4, #8]
 8003958:	6803      	ldr	r3, [r0, #0]
 800395a:	6a1b      	ldr	r3, [r3, #32]
 800395c:	4798      	blx	r3
 800395e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003962:	4298      	cmp	r0, r3
 8003964:	d805      	bhi.n	8003972 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8003966:	4b42      	ldr	r3, [pc, #264]	; (8003a70 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8003968:	4a42      	ldr	r2, [pc, #264]	; (8003a74 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800396a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800396c:	4842      	ldr	r0, [pc, #264]	; (8003a78 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 800396e:	f023 fd57 	bl	8027420 <__assert_func>
 8003972:	6860      	ldr	r0, [r4, #4]
 8003974:	6803      	ldr	r3, [r0, #0]
 8003976:	6a1b      	ldr	r3, [r3, #32]
 8003978:	4798      	blx	r3
 800397a:	280f      	cmp	r0, #15
 800397c:	d803      	bhi.n	8003986 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 800397e:	4b3f      	ldr	r3, [pc, #252]	; (8003a7c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8003980:	4a3c      	ldr	r2, [pc, #240]	; (8003a74 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8003982:	21a4      	movs	r1, #164	; 0xa4
 8003984:	e7f2      	b.n	800396c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003986:	68e0      	ldr	r0, [r4, #12]
 8003988:	6803      	ldr	r3, [r0, #0]
 800398a:	6a1b      	ldr	r3, [r3, #32]
 800398c:	4798      	blx	r3
 800398e:	2837      	cmp	r0, #55	; 0x37
 8003990:	d803      	bhi.n	800399a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8003992:	4b3b      	ldr	r3, [pc, #236]	; (8003a80 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8003994:	4a37      	ldr	r2, [pc, #220]	; (8003a74 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8003996:	21a5      	movs	r1, #165	; 0xa5
 8003998:	e7e8      	b.n	800396c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800399a:	f010 f9f1 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800399e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003a84 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80039a2:	3004      	adds	r0, #4
 80039a4:	f010 fa52 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80039a8:	f8d9 0000 	ldr.w	r0, [r9]
 80039ac:	b110      	cbz	r0, 80039b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80039ae:	6803      	ldr	r3, [r0, #0]
 80039b0:	68db      	ldr	r3, [r3, #12]
 80039b2:	4798      	blx	r3
    if (*currentTrans)
 80039b4:	f8d9 0000 	ldr.w	r0, [r9]
 80039b8:	b110      	cbz	r0, 80039c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80039ba:	6803      	ldr	r3, [r0, #0]
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	4798      	blx	r3
    if (*currentScreen)
 80039c0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003a88 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80039c4:	f8d8 0000 	ldr.w	r0, [r8]
 80039c8:	b110      	cbz	r0, 80039d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80039ca:	6803      	ldr	r3, [r0, #0]
 80039cc:	695b      	ldr	r3, [r3, #20]
 80039ce:	4798      	blx	r3
    if (*currentPresenter)
 80039d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039d4:	b110      	cbz	r0, 80039dc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80039d6:	6803      	ldr	r3, [r0, #0]
 80039d8:	685b      	ldr	r3, [r3, #4]
 80039da:	4798      	blx	r3
    if (*currentScreen)
 80039dc:	f8d8 0000 	ldr.w	r0, [r8]
 80039e0:	b110      	cbz	r0, 80039e8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80039e2:	6803      	ldr	r3, [r0, #0]
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	4798      	blx	r3
    if (*currentPresenter)
 80039e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039ec:	b110      	cbz	r0, 80039f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80039ee:	6803      	ldr	r3, [r0, #0]
 80039f0:	689b      	ldr	r3, [r3, #8]
 80039f2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80039f4:	68e0      	ldr	r0, [r4, #12]
 80039f6:	2100      	movs	r1, #0
 80039f8:	f7ff fd96 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80039fc:	2114      	movs	r1, #20
 80039fe:	4605      	mov	r5, r0
 8003a00:	f7ff fd96 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003a04:	68a0      	ldr	r0, [r4, #8]
 8003a06:	6803      	ldr	r3, [r0, #0]
 8003a08:	2100      	movs	r1, #0
 8003a0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a0c:	4798      	blx	r3
 8003a0e:	4606      	mov	r6, r0
 8003a10:	f003 fcb4 	bl	800737c <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003a14:	6860      	ldr	r0, [r4, #4]
 8003a16:	6803      	ldr	r3, [r0, #0]
 8003a18:	2100      	movs	r1, #0
 8003a1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a1c:	4798      	blx	r3
 8003a1e:	4631      	mov	r1, r6
 8003a20:	4604      	mov	r4, r0
 8003a22:	f003 fc85 	bl	8007330 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8003a26:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003a2a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003a2e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003a32:	b1dc      	cbz	r4, 8003a6c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8003a34:	1d23      	adds	r3, r4, #4
 8003a36:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003a3a:	6833      	ldr	r3, [r6, #0]
 8003a3c:	f8c4 a008 	str.w	sl, [r4, #8]
 8003a40:	4630      	mov	r0, r6
 8003a42:	68db      	ldr	r3, [r3, #12]
 8003a44:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003a46:	4798      	blx	r3
    newPresenter->activate();
 8003a48:	6823      	ldr	r3, [r4, #0]
 8003a4a:	4620      	mov	r0, r4
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003a50:	4629      	mov	r1, r5
 8003a52:	4630      	mov	r0, r6
 8003a54:	f011 ffc0 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003a58:	682b      	ldr	r3, [r5, #0]
 8003a5a:	4628      	mov	r0, r5
 8003a5c:	691b      	ldr	r3, [r3, #16]
 8003a5e:	4798      	blx	r3
    newTransition->invalidate();
 8003a60:	682b      	ldr	r3, [r5, #0]
 8003a62:	4628      	mov	r0, r5
 8003a64:	695b      	ldr	r3, [r3, #20]
}
 8003a66:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a6a:	4718      	bx	r3
    model->bind(newPresenter);
 8003a6c:	4623      	mov	r3, r4
 8003a6e:	e7e2      	b.n	8003a36 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8003a70:	08029110 	.word	0x08029110
 8003a74:	08029c2b 	.word	0x08029c2b
 8003a78:	080292ac 	.word	0x080292ac
 8003a7c:	080292f3 	.word	0x080292f3
 8003a80:	08029396 	.word	0x08029396
 8003a84:	20013804 	.word	0x20013804
 8003a88:	20013800 	.word	0x20013800

08003a8c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8003a8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003a90:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003a94:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003a96:	68a0      	ldr	r0, [r4, #8]
 8003a98:	6803      	ldr	r3, [r0, #0]
 8003a9a:	6a1b      	ldr	r3, [r3, #32]
 8003a9c:	4798      	blx	r3
 8003a9e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003aa2:	d205      	bcs.n	8003ab0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8003aa4:	4b42      	ldr	r3, [pc, #264]	; (8003bb0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8003aa6:	4a43      	ldr	r2, [pc, #268]	; (8003bb4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8003aa8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003aaa:	4843      	ldr	r0, [pc, #268]	; (8003bb8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8003aac:	f023 fcb8 	bl	8027420 <__assert_func>
 8003ab0:	6860      	ldr	r0, [r4, #4]
 8003ab2:	6803      	ldr	r3, [r0, #0]
 8003ab4:	6a1b      	ldr	r3, [r3, #32]
 8003ab6:	4798      	blx	r3
 8003ab8:	280f      	cmp	r0, #15
 8003aba:	d803      	bhi.n	8003ac4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8003abc:	4b3f      	ldr	r3, [pc, #252]	; (8003bbc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8003abe:	4a3d      	ldr	r2, [pc, #244]	; (8003bb4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8003ac0:	21a4      	movs	r1, #164	; 0xa4
 8003ac2:	e7f2      	b.n	8003aaa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ac4:	68e0      	ldr	r0, [r4, #12]
 8003ac6:	6803      	ldr	r3, [r0, #0]
 8003ac8:	6a1b      	ldr	r3, [r3, #32]
 8003aca:	4798      	blx	r3
 8003acc:	2837      	cmp	r0, #55	; 0x37
 8003ace:	d803      	bhi.n	8003ad8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8003ad0:	4b3b      	ldr	r3, [pc, #236]	; (8003bc0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8003ad2:	4a38      	ldr	r2, [pc, #224]	; (8003bb4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8003ad4:	21a5      	movs	r1, #165	; 0xa5
 8003ad6:	e7e8      	b.n	8003aaa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003ad8:	f010 f952 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003adc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003bc4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8003ae0:	3004      	adds	r0, #4
 8003ae2:	f010 f9b3 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ae6:	f8d9 0000 	ldr.w	r0, [r9]
 8003aea:	b110      	cbz	r0, 8003af2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003aec:	6803      	ldr	r3, [r0, #0]
 8003aee:	68db      	ldr	r3, [r3, #12]
 8003af0:	4798      	blx	r3
    if (*currentTrans)
 8003af2:	f8d9 0000 	ldr.w	r0, [r9]
 8003af6:	b110      	cbz	r0, 8003afe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003af8:	6803      	ldr	r3, [r0, #0]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	4798      	blx	r3
    if (*currentScreen)
 8003afe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003bc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8003b02:	f8d8 0000 	ldr.w	r0, [r8]
 8003b06:	b110      	cbz	r0, 8003b0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003b08:	6803      	ldr	r3, [r0, #0]
 8003b0a:	695b      	ldr	r3, [r3, #20]
 8003b0c:	4798      	blx	r3
    if (*currentPresenter)
 8003b0e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b12:	b110      	cbz	r0, 8003b1a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003b14:	6803      	ldr	r3, [r0, #0]
 8003b16:	685b      	ldr	r3, [r3, #4]
 8003b18:	4798      	blx	r3
    if (*currentScreen)
 8003b1a:	f8d8 0000 	ldr.w	r0, [r8]
 8003b1e:	b110      	cbz	r0, 8003b26 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003b20:	6803      	ldr	r3, [r0, #0]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	4798      	blx	r3
    if (*currentPresenter)
 8003b26:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b2a:	b110      	cbz	r0, 8003b32 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003b2c:	6803      	ldr	r3, [r0, #0]
 8003b2e:	689b      	ldr	r3, [r3, #8]
 8003b30:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003b32:	68e0      	ldr	r0, [r4, #12]
 8003b34:	2100      	movs	r1, #0
 8003b36:	f7ff fcf7 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003b3a:	2114      	movs	r1, #20
 8003b3c:	4605      	mov	r5, r0
 8003b3e:	f7ff fcf7 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003b42:	68a0      	ldr	r0, [r4, #8]
 8003b44:	6803      	ldr	r3, [r0, #0]
 8003b46:	2100      	movs	r1, #0
 8003b48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b4a:	4798      	blx	r3
 8003b4c:	4606      	mov	r6, r0
 8003b4e:	f003 fbd3 	bl	80072f8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003b52:	6860      	ldr	r0, [r4, #4]
 8003b54:	6803      	ldr	r3, [r0, #0]
 8003b56:	2100      	movs	r1, #0
 8003b58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b5a:	4798      	blx	r3
 8003b5c:	4631      	mov	r1, r6
 8003b5e:	4604      	mov	r4, r0
 8003b60:	f003 fba4 	bl	80072ac <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003b64:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003b68:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003b6c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003b70:	b1dc      	cbz	r4, 8003baa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8003b72:	1d23      	adds	r3, r4, #4
 8003b74:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003b78:	6833      	ldr	r3, [r6, #0]
 8003b7a:	f8c4 a008 	str.w	sl, [r4, #8]
 8003b7e:	4630      	mov	r0, r6
 8003b80:	68db      	ldr	r3, [r3, #12]
 8003b82:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003b84:	4798      	blx	r3
    newPresenter->activate();
 8003b86:	6823      	ldr	r3, [r4, #0]
 8003b88:	4620      	mov	r0, r4
 8003b8a:	681b      	ldr	r3, [r3, #0]
 8003b8c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003b8e:	4629      	mov	r1, r5
 8003b90:	4630      	mov	r0, r6
 8003b92:	f011 ff21 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003b96:	682b      	ldr	r3, [r5, #0]
 8003b98:	4628      	mov	r0, r5
 8003b9a:	691b      	ldr	r3, [r3, #16]
 8003b9c:	4798      	blx	r3
    newTransition->invalidate();
 8003b9e:	682b      	ldr	r3, [r5, #0]
 8003ba0:	4628      	mov	r0, r5
 8003ba2:	695b      	ldr	r3, [r3, #20]
}
 8003ba4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ba8:	4718      	bx	r3
    model->bind(newPresenter);
 8003baa:	4623      	mov	r3, r4
 8003bac:	e7e2      	b.n	8003b74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8003bae:	bf00      	nop
 8003bb0:	08029110 	.word	0x08029110
 8003bb4:	08029d6b 	.word	0x08029d6b
 8003bb8:	080292ac 	.word	0x080292ac
 8003bbc:	080292f3 	.word	0x080292f3
 8003bc0:	08029396 	.word	0x08029396
 8003bc4:	20013804 	.word	0x20013804
 8003bc8:	20013800 	.word	0x20013800

08003bcc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8003bcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003bd0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003bd4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003bd6:	68a0      	ldr	r0, [r4, #8]
 8003bd8:	6803      	ldr	r3, [r0, #0]
 8003bda:	6a1b      	ldr	r3, [r3, #32]
 8003bdc:	4798      	blx	r3
 8003bde:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003be2:	4298      	cmp	r0, r3
 8003be4:	d805      	bhi.n	8003bf2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8003be6:	4b42      	ldr	r3, [pc, #264]	; (8003cf0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8003be8:	4a42      	ldr	r2, [pc, #264]	; (8003cf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8003bea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003bec:	4842      	ldr	r0, [pc, #264]	; (8003cf8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8003bee:	f023 fc17 	bl	8027420 <__assert_func>
 8003bf2:	6860      	ldr	r0, [r4, #4]
 8003bf4:	6803      	ldr	r3, [r0, #0]
 8003bf6:	6a1b      	ldr	r3, [r3, #32]
 8003bf8:	4798      	blx	r3
 8003bfa:	280f      	cmp	r0, #15
 8003bfc:	d803      	bhi.n	8003c06 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8003bfe:	4b3f      	ldr	r3, [pc, #252]	; (8003cfc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8003c00:	4a3c      	ldr	r2, [pc, #240]	; (8003cf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8003c02:	21a4      	movs	r1, #164	; 0xa4
 8003c04:	e7f2      	b.n	8003bec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003c06:	68e0      	ldr	r0, [r4, #12]
 8003c08:	6803      	ldr	r3, [r0, #0]
 8003c0a:	6a1b      	ldr	r3, [r3, #32]
 8003c0c:	4798      	blx	r3
 8003c0e:	2837      	cmp	r0, #55	; 0x37
 8003c10:	d803      	bhi.n	8003c1a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8003c12:	4b3b      	ldr	r3, [pc, #236]	; (8003d00 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8003c14:	4a37      	ldr	r2, [pc, #220]	; (8003cf4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8003c16:	21a5      	movs	r1, #165	; 0xa5
 8003c18:	e7e8      	b.n	8003bec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003c1a:	f010 f8b1 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c1e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003d04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8003c22:	3004      	adds	r0, #4
 8003c24:	f010 f912 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c28:	f8d9 0000 	ldr.w	r0, [r9]
 8003c2c:	b110      	cbz	r0, 8003c34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003c2e:	6803      	ldr	r3, [r0, #0]
 8003c30:	68db      	ldr	r3, [r3, #12]
 8003c32:	4798      	blx	r3
    if (*currentTrans)
 8003c34:	f8d9 0000 	ldr.w	r0, [r9]
 8003c38:	b110      	cbz	r0, 8003c40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003c3a:	6803      	ldr	r3, [r0, #0]
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	4798      	blx	r3
    if (*currentScreen)
 8003c40:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003d08 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8003c44:	f8d8 0000 	ldr.w	r0, [r8]
 8003c48:	b110      	cbz	r0, 8003c50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003c4a:	6803      	ldr	r3, [r0, #0]
 8003c4c:	695b      	ldr	r3, [r3, #20]
 8003c4e:	4798      	blx	r3
    if (*currentPresenter)
 8003c50:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c54:	b110      	cbz	r0, 8003c5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003c56:	6803      	ldr	r3, [r0, #0]
 8003c58:	685b      	ldr	r3, [r3, #4]
 8003c5a:	4798      	blx	r3
    if (*currentScreen)
 8003c5c:	f8d8 0000 	ldr.w	r0, [r8]
 8003c60:	b110      	cbz	r0, 8003c68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003c62:	6803      	ldr	r3, [r0, #0]
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	4798      	blx	r3
    if (*currentPresenter)
 8003c68:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c6c:	b110      	cbz	r0, 8003c74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003c6e:	6803      	ldr	r3, [r0, #0]
 8003c70:	689b      	ldr	r3, [r3, #8]
 8003c72:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003c74:	68e0      	ldr	r0, [r4, #12]
 8003c76:	2100      	movs	r1, #0
 8003c78:	f7ff fc56 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003c7c:	2114      	movs	r1, #20
 8003c7e:	4605      	mov	r5, r0
 8003c80:	f7ff fc56 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003c84:	68a0      	ldr	r0, [r4, #8]
 8003c86:	6803      	ldr	r3, [r0, #0]
 8003c88:	2100      	movs	r1, #0
 8003c8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c8c:	4798      	blx	r3
 8003c8e:	4606      	mov	r6, r0
 8003c90:	f003 fc7c 	bl	800758c <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c94:	6860      	ldr	r0, [r4, #4]
 8003c96:	6803      	ldr	r3, [r0, #0]
 8003c98:	2100      	movs	r1, #0
 8003c9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c9c:	4798      	blx	r3
 8003c9e:	4631      	mov	r1, r6
 8003ca0:	4604      	mov	r4, r0
 8003ca2:	f003 fc4d 	bl	8007540 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8003ca6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003caa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003cae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003cb2:	b1dc      	cbz	r4, 8003cec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8003cb4:	1d23      	adds	r3, r4, #4
 8003cb6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003cba:	6833      	ldr	r3, [r6, #0]
 8003cbc:	f8c4 a008 	str.w	sl, [r4, #8]
 8003cc0:	4630      	mov	r0, r6
 8003cc2:	68db      	ldr	r3, [r3, #12]
 8003cc4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003cc6:	4798      	blx	r3
    newPresenter->activate();
 8003cc8:	6823      	ldr	r3, [r4, #0]
 8003cca:	4620      	mov	r0, r4
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003cd0:	4629      	mov	r1, r5
 8003cd2:	4630      	mov	r0, r6
 8003cd4:	f011 fe80 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003cd8:	682b      	ldr	r3, [r5, #0]
 8003cda:	4628      	mov	r0, r5
 8003cdc:	691b      	ldr	r3, [r3, #16]
 8003cde:	4798      	blx	r3
    newTransition->invalidate();
 8003ce0:	682b      	ldr	r3, [r5, #0]
 8003ce2:	4628      	mov	r0, r5
 8003ce4:	695b      	ldr	r3, [r3, #20]
}
 8003ce6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cea:	4718      	bx	r3
    model->bind(newPresenter);
 8003cec:	4623      	mov	r3, r4
 8003cee:	e7e2      	b.n	8003cb6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8003cf0:	08029110 	.word	0x08029110
 8003cf4:	08029e9b 	.word	0x08029e9b
 8003cf8:	080292ac 	.word	0x080292ac
 8003cfc:	080292f3 	.word	0x080292f3
 8003d00:	08029396 	.word	0x08029396
 8003d04:	20013804 	.word	0x20013804
 8003d08:	20013800 	.word	0x20013800

08003d0c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8003d0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003d10:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003d14:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003d16:	68a0      	ldr	r0, [r4, #8]
 8003d18:	6803      	ldr	r3, [r0, #0]
 8003d1a:	6a1b      	ldr	r3, [r3, #32]
 8003d1c:	4798      	blx	r3
 8003d1e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003d22:	4298      	cmp	r0, r3
 8003d24:	d805      	bhi.n	8003d32 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8003d26:	4b42      	ldr	r3, [pc, #264]	; (8003e30 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8003d28:	4a42      	ldr	r2, [pc, #264]	; (8003e34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8003d2a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d2c:	4842      	ldr	r0, [pc, #264]	; (8003e38 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8003d2e:	f023 fb77 	bl	8027420 <__assert_func>
 8003d32:	6860      	ldr	r0, [r4, #4]
 8003d34:	6803      	ldr	r3, [r0, #0]
 8003d36:	6a1b      	ldr	r3, [r3, #32]
 8003d38:	4798      	blx	r3
 8003d3a:	280f      	cmp	r0, #15
 8003d3c:	d803      	bhi.n	8003d46 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8003d3e:	4b3f      	ldr	r3, [pc, #252]	; (8003e3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8003d40:	4a3c      	ldr	r2, [pc, #240]	; (8003e34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8003d42:	21a4      	movs	r1, #164	; 0xa4
 8003d44:	e7f2      	b.n	8003d2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d46:	68e0      	ldr	r0, [r4, #12]
 8003d48:	6803      	ldr	r3, [r0, #0]
 8003d4a:	6a1b      	ldr	r3, [r3, #32]
 8003d4c:	4798      	blx	r3
 8003d4e:	2837      	cmp	r0, #55	; 0x37
 8003d50:	d803      	bhi.n	8003d5a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8003d52:	4b3b      	ldr	r3, [pc, #236]	; (8003e40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8003d54:	4a37      	ldr	r2, [pc, #220]	; (8003e34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8003d56:	21a5      	movs	r1, #165	; 0xa5
 8003d58:	e7e8      	b.n	8003d2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003d5a:	f010 f811 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d5e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8003d62:	3004      	adds	r0, #4
 8003d64:	f010 f872 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d68:	f8d9 0000 	ldr.w	r0, [r9]
 8003d6c:	b110      	cbz	r0, 8003d74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003d6e:	6803      	ldr	r3, [r0, #0]
 8003d70:	68db      	ldr	r3, [r3, #12]
 8003d72:	4798      	blx	r3
    if (*currentTrans)
 8003d74:	f8d9 0000 	ldr.w	r0, [r9]
 8003d78:	b110      	cbz	r0, 8003d80 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003d7a:	6803      	ldr	r3, [r0, #0]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	4798      	blx	r3
    if (*currentScreen)
 8003d80:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003e48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8003d84:	f8d8 0000 	ldr.w	r0, [r8]
 8003d88:	b110      	cbz	r0, 8003d90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003d8a:	6803      	ldr	r3, [r0, #0]
 8003d8c:	695b      	ldr	r3, [r3, #20]
 8003d8e:	4798      	blx	r3
    if (*currentPresenter)
 8003d90:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d94:	b110      	cbz	r0, 8003d9c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003d96:	6803      	ldr	r3, [r0, #0]
 8003d98:	685b      	ldr	r3, [r3, #4]
 8003d9a:	4798      	blx	r3
    if (*currentScreen)
 8003d9c:	f8d8 0000 	ldr.w	r0, [r8]
 8003da0:	b110      	cbz	r0, 8003da8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003da2:	6803      	ldr	r3, [r0, #0]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	4798      	blx	r3
    if (*currentPresenter)
 8003da8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003dac:	b110      	cbz	r0, 8003db4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003dae:	6803      	ldr	r3, [r0, #0]
 8003db0:	689b      	ldr	r3, [r3, #8]
 8003db2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003db4:	68e0      	ldr	r0, [r4, #12]
 8003db6:	2100      	movs	r1, #0
 8003db8:	f7ff fbb6 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003dbc:	2114      	movs	r1, #20
 8003dbe:	4605      	mov	r5, r0
 8003dc0:	f7ff fbb6 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003dc4:	68a0      	ldr	r0, [r4, #8]
 8003dc6:	6803      	ldr	r3, [r0, #0]
 8003dc8:	2100      	movs	r1, #0
 8003dca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003dcc:	4798      	blx	r3
 8003dce:	4606      	mov	r6, r0
 8003dd0:	f003 fb9a 	bl	8007508 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003dd4:	6860      	ldr	r0, [r4, #4]
 8003dd6:	6803      	ldr	r3, [r0, #0]
 8003dd8:	2100      	movs	r1, #0
 8003dda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ddc:	4798      	blx	r3
 8003dde:	4631      	mov	r1, r6
 8003de0:	4604      	mov	r4, r0
 8003de2:	f003 fb6b 	bl	80074bc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8003de6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003dea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003dee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003df2:	b1dc      	cbz	r4, 8003e2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8003df4:	1d23      	adds	r3, r4, #4
 8003df6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003dfa:	6833      	ldr	r3, [r6, #0]
 8003dfc:	f8c4 a008 	str.w	sl, [r4, #8]
 8003e00:	4630      	mov	r0, r6
 8003e02:	68db      	ldr	r3, [r3, #12]
 8003e04:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003e06:	4798      	blx	r3
    newPresenter->activate();
 8003e08:	6823      	ldr	r3, [r4, #0]
 8003e0a:	4620      	mov	r0, r4
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003e10:	4629      	mov	r1, r5
 8003e12:	4630      	mov	r0, r6
 8003e14:	f011 fde0 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003e18:	682b      	ldr	r3, [r5, #0]
 8003e1a:	4628      	mov	r0, r5
 8003e1c:	691b      	ldr	r3, [r3, #16]
 8003e1e:	4798      	blx	r3
    newTransition->invalidate();
 8003e20:	682b      	ldr	r3, [r5, #0]
 8003e22:	4628      	mov	r0, r5
 8003e24:	695b      	ldr	r3, [r3, #20]
}
 8003e26:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e2a:	4718      	bx	r3
    model->bind(newPresenter);
 8003e2c:	4623      	mov	r3, r4
 8003e2e:	e7e2      	b.n	8003df6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8003e30:	08029110 	.word	0x08029110
 8003e34:	08029fdd 	.word	0x08029fdd
 8003e38:	080292ac 	.word	0x080292ac
 8003e3c:	080292f3 	.word	0x080292f3
 8003e40:	08029396 	.word	0x08029396
 8003e44:	20013804 	.word	0x20013804
 8003e48:	20013800 	.word	0x20013800

08003e4c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8003e4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e50:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e54:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e56:	68a0      	ldr	r0, [r4, #8]
 8003e58:	6803      	ldr	r3, [r0, #0]
 8003e5a:	6a1b      	ldr	r3, [r3, #32]
 8003e5c:	4798      	blx	r3
 8003e5e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003e62:	d205      	bcs.n	8003e70 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8003e64:	4b42      	ldr	r3, [pc, #264]	; (8003f70 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8003e66:	4a43      	ldr	r2, [pc, #268]	; (8003f74 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8003e68:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e6a:	4843      	ldr	r0, [pc, #268]	; (8003f78 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8003e6c:	f023 fad8 	bl	8027420 <__assert_func>
 8003e70:	6860      	ldr	r0, [r4, #4]
 8003e72:	6803      	ldr	r3, [r0, #0]
 8003e74:	6a1b      	ldr	r3, [r3, #32]
 8003e76:	4798      	blx	r3
 8003e78:	280f      	cmp	r0, #15
 8003e7a:	d803      	bhi.n	8003e84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8003e7c:	4b3f      	ldr	r3, [pc, #252]	; (8003f7c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8003e7e:	4a3d      	ldr	r2, [pc, #244]	; (8003f74 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8003e80:	21a4      	movs	r1, #164	; 0xa4
 8003e82:	e7f2      	b.n	8003e6a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e84:	68e0      	ldr	r0, [r4, #12]
 8003e86:	6803      	ldr	r3, [r0, #0]
 8003e88:	6a1b      	ldr	r3, [r3, #32]
 8003e8a:	4798      	blx	r3
 8003e8c:	2837      	cmp	r0, #55	; 0x37
 8003e8e:	d803      	bhi.n	8003e98 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8003e90:	4b3b      	ldr	r3, [pc, #236]	; (8003f80 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8003e92:	4a38      	ldr	r2, [pc, #224]	; (8003f74 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8003e94:	21a5      	movs	r1, #165	; 0xa5
 8003e96:	e7e8      	b.n	8003e6a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003e98:	f00f ff72 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003e9c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003f84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8003ea0:	3004      	adds	r0, #4
 8003ea2:	f00f ffd3 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ea6:	f8d9 0000 	ldr.w	r0, [r9]
 8003eaa:	b110      	cbz	r0, 8003eb2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003eac:	6803      	ldr	r3, [r0, #0]
 8003eae:	68db      	ldr	r3, [r3, #12]
 8003eb0:	4798      	blx	r3
    if (*currentTrans)
 8003eb2:	f8d9 0000 	ldr.w	r0, [r9]
 8003eb6:	b110      	cbz	r0, 8003ebe <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003eb8:	6803      	ldr	r3, [r0, #0]
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	4798      	blx	r3
    if (*currentScreen)
 8003ebe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003f88 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8003ec2:	f8d8 0000 	ldr.w	r0, [r8]
 8003ec6:	b110      	cbz	r0, 8003ece <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003ec8:	6803      	ldr	r3, [r0, #0]
 8003eca:	695b      	ldr	r3, [r3, #20]
 8003ecc:	4798      	blx	r3
    if (*currentPresenter)
 8003ece:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ed2:	b110      	cbz	r0, 8003eda <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003ed4:	6803      	ldr	r3, [r0, #0]
 8003ed6:	685b      	ldr	r3, [r3, #4]
 8003ed8:	4798      	blx	r3
    if (*currentScreen)
 8003eda:	f8d8 0000 	ldr.w	r0, [r8]
 8003ede:	b110      	cbz	r0, 8003ee6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003ee0:	6803      	ldr	r3, [r0, #0]
 8003ee2:	681b      	ldr	r3, [r3, #0]
 8003ee4:	4798      	blx	r3
    if (*currentPresenter)
 8003ee6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003eea:	b110      	cbz	r0, 8003ef2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003eec:	6803      	ldr	r3, [r0, #0]
 8003eee:	689b      	ldr	r3, [r3, #8]
 8003ef0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003ef2:	68e0      	ldr	r0, [r4, #12]
 8003ef4:	2100      	movs	r1, #0
 8003ef6:	f7ff fb17 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003efa:	2114      	movs	r1, #20
 8003efc:	4605      	mov	r5, r0
 8003efe:	f7ff fb17 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f02:	68a0      	ldr	r0, [r4, #8]
 8003f04:	6803      	ldr	r3, [r0, #0]
 8003f06:	2100      	movs	r1, #0
 8003f08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f0a:	4798      	blx	r3
 8003f0c:	4606      	mov	r6, r0
 8003f0e:	f003 fab9 	bl	8007484 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f12:	6860      	ldr	r0, [r4, #4]
 8003f14:	6803      	ldr	r3, [r0, #0]
 8003f16:	2100      	movs	r1, #0
 8003f18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f1a:	4798      	blx	r3
 8003f1c:	4631      	mov	r1, r6
 8003f1e:	4604      	mov	r4, r0
 8003f20:	f003 fa8a 	bl	8007438 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8003f24:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f28:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f2c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f30:	b1dc      	cbz	r4, 8003f6a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8003f32:	1d23      	adds	r3, r4, #4
 8003f34:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f38:	6833      	ldr	r3, [r6, #0]
 8003f3a:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f3e:	4630      	mov	r0, r6
 8003f40:	68db      	ldr	r3, [r3, #12]
 8003f42:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f44:	4798      	blx	r3
    newPresenter->activate();
 8003f46:	6823      	ldr	r3, [r4, #0]
 8003f48:	4620      	mov	r0, r4
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f4e:	4629      	mov	r1, r5
 8003f50:	4630      	mov	r0, r6
 8003f52:	f011 fd41 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f56:	682b      	ldr	r3, [r5, #0]
 8003f58:	4628      	mov	r0, r5
 8003f5a:	691b      	ldr	r3, [r3, #16]
 8003f5c:	4798      	blx	r3
    newTransition->invalidate();
 8003f5e:	682b      	ldr	r3, [r5, #0]
 8003f60:	4628      	mov	r0, r5
 8003f62:	695b      	ldr	r3, [r3, #20]
}
 8003f64:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f68:	4718      	bx	r3
    model->bind(newPresenter);
 8003f6a:	4623      	mov	r3, r4
 8003f6c:	e7e2      	b.n	8003f34 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8003f6e:	bf00      	nop
 8003f70:	08029110 	.word	0x08029110
 8003f74:	0802a11f 	.word	0x0802a11f
 8003f78:	080292ac 	.word	0x080292ac
 8003f7c:	080292f3 	.word	0x080292f3
 8003f80:	08029396 	.word	0x08029396
 8003f84:	20013804 	.word	0x20013804
 8003f88:	20013800 	.word	0x20013800

08003f8c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8003f8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f90:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003f94:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003f96:	68a0      	ldr	r0, [r4, #8]
 8003f98:	6803      	ldr	r3, [r0, #0]
 8003f9a:	6a1b      	ldr	r3, [r3, #32]
 8003f9c:	4798      	blx	r3
 8003f9e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003fa2:	d205      	bcs.n	8003fb0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8003fa4:	4b42      	ldr	r3, [pc, #264]	; (80040b0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8003fa6:	4a43      	ldr	r2, [pc, #268]	; (80040b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8003fa8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003faa:	4843      	ldr	r0, [pc, #268]	; (80040b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8003fac:	f023 fa38 	bl	8027420 <__assert_func>
 8003fb0:	6860      	ldr	r0, [r4, #4]
 8003fb2:	6803      	ldr	r3, [r0, #0]
 8003fb4:	6a1b      	ldr	r3, [r3, #32]
 8003fb6:	4798      	blx	r3
 8003fb8:	280f      	cmp	r0, #15
 8003fba:	d803      	bhi.n	8003fc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8003fbc:	4b3f      	ldr	r3, [pc, #252]	; (80040bc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8003fbe:	4a3d      	ldr	r2, [pc, #244]	; (80040b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8003fc0:	21a4      	movs	r1, #164	; 0xa4
 8003fc2:	e7f2      	b.n	8003faa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003fc4:	68e0      	ldr	r0, [r4, #12]
 8003fc6:	6803      	ldr	r3, [r0, #0]
 8003fc8:	6a1b      	ldr	r3, [r3, #32]
 8003fca:	4798      	blx	r3
 8003fcc:	2837      	cmp	r0, #55	; 0x37
 8003fce:	d803      	bhi.n	8003fd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8003fd0:	4b3b      	ldr	r3, [pc, #236]	; (80040c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8003fd2:	4a38      	ldr	r2, [pc, #224]	; (80040b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8003fd4:	21a5      	movs	r1, #165	; 0xa5
 8003fd6:	e7e8      	b.n	8003faa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003fd8:	f00f fed2 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003fdc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80040c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8003fe0:	3004      	adds	r0, #4
 8003fe2:	f00f ff33 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003fe6:	f8d9 0000 	ldr.w	r0, [r9]
 8003fea:	b110      	cbz	r0, 8003ff2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003fec:	6803      	ldr	r3, [r0, #0]
 8003fee:	68db      	ldr	r3, [r3, #12]
 8003ff0:	4798      	blx	r3
    if (*currentTrans)
 8003ff2:	f8d9 0000 	ldr.w	r0, [r9]
 8003ff6:	b110      	cbz	r0, 8003ffe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003ff8:	6803      	ldr	r3, [r0, #0]
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	4798      	blx	r3
    if (*currentScreen)
 8003ffe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80040c8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004002:	f8d8 0000 	ldr.w	r0, [r8]
 8004006:	b110      	cbz	r0, 800400e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004008:	6803      	ldr	r3, [r0, #0]
 800400a:	695b      	ldr	r3, [r3, #20]
 800400c:	4798      	blx	r3
    if (*currentPresenter)
 800400e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004012:	b110      	cbz	r0, 800401a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004014:	6803      	ldr	r3, [r0, #0]
 8004016:	685b      	ldr	r3, [r3, #4]
 8004018:	4798      	blx	r3
    if (*currentScreen)
 800401a:	f8d8 0000 	ldr.w	r0, [r8]
 800401e:	b110      	cbz	r0, 8004026 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004020:	6803      	ldr	r3, [r0, #0]
 8004022:	681b      	ldr	r3, [r3, #0]
 8004024:	4798      	blx	r3
    if (*currentPresenter)
 8004026:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800402a:	b110      	cbz	r0, 8004032 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800402c:	6803      	ldr	r3, [r0, #0]
 800402e:	689b      	ldr	r3, [r3, #8]
 8004030:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004032:	68e0      	ldr	r0, [r4, #12]
 8004034:	2100      	movs	r1, #0
 8004036:	f7ff fa77 	bl	8003528 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800403a:	2114      	movs	r1, #20
 800403c:	4605      	mov	r5, r0
 800403e:	f7ff fa77 	bl	8003530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004042:	68a0      	ldr	r0, [r4, #8]
 8004044:	6803      	ldr	r3, [r0, #0]
 8004046:	2100      	movs	r1, #0
 8004048:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800404a:	4798      	blx	r3
 800404c:	4606      	mov	r6, r0
 800404e:	f003 f8f9 	bl	8007244 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004052:	6860      	ldr	r0, [r4, #4]
 8004054:	6803      	ldr	r3, [r0, #0]
 8004056:	2100      	movs	r1, #0
 8004058:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800405a:	4798      	blx	r3
 800405c:	4631      	mov	r1, r6
 800405e:	4604      	mov	r4, r0
 8004060:	f003 f8ca 	bl	80071f8 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004064:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004068:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800406c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004070:	b1dc      	cbz	r4, 80040aa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004072:	1d23      	adds	r3, r4, #4
 8004074:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004078:	6833      	ldr	r3, [r6, #0]
 800407a:	f8c4 a008 	str.w	sl, [r4, #8]
 800407e:	4630      	mov	r0, r6
 8004080:	68db      	ldr	r3, [r3, #12]
 8004082:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004084:	4798      	blx	r3
    newPresenter->activate();
 8004086:	6823      	ldr	r3, [r4, #0]
 8004088:	4620      	mov	r0, r4
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800408e:	4629      	mov	r1, r5
 8004090:	4630      	mov	r0, r6
 8004092:	f011 fca1 	bl	80159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004096:	682b      	ldr	r3, [r5, #0]
 8004098:	4628      	mov	r0, r5
 800409a:	691b      	ldr	r3, [r3, #16]
 800409c:	4798      	blx	r3
    newTransition->invalidate();
 800409e:	682b      	ldr	r3, [r5, #0]
 80040a0:	4628      	mov	r0, r5
 80040a2:	695b      	ldr	r3, [r3, #20]
}
 80040a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040a8:	4718      	bx	r3
    model->bind(newPresenter);
 80040aa:	4623      	mov	r3, r4
 80040ac:	e7e2      	b.n	8004074 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 80040ae:	bf00      	nop
 80040b0:	08029110 	.word	0x08029110
 80040b4:	0802a24b 	.word	0x0802a24b
 80040b8:	080292ac 	.word	0x080292ac
 80040bc:	080292f3 	.word	0x080292f3
 80040c0:	08029396 	.word	0x08029396
 80040c4:	20013804 	.word	0x20013804
 80040c8:	20013800 	.word	0x20013800

080040cc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80040cc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80040ce:	4770      	bx	lr

080040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 80040d0:	4770      	bx	lr

080040d2 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 80040d2:	4770      	bx	lr

080040d4 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 80040d4:	b510      	push	{r4, lr}
}
 80040d6:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 80040da:	4604      	mov	r4, r0
}
 80040dc:	f022 fbaf 	bl	802683e <_ZdlPvj>
 80040e0:	4620      	mov	r0, r4
 80040e2:	bd10      	pop	{r4, pc}

080040e4 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 80040e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 80040e8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80040ec:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 80040ee:	2600      	movs	r6, #0
 80040f0:	ed2d 8b02 	vpush	{d8}
 80040f4:	8483      	strh	r3, [r0, #36]	; 0x24
 80040f6:	4bb3      	ldr	r3, [pc, #716]	; (80043c4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
          firstChild(0)
 80040f8:	6286      	str	r6, [r0, #40]	; 0x28
 80040fa:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80040fe:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004102:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004106:	e9c0 6607 	strd	r6, r6, [r0, #28]
 800410a:	f848 3b2c 	str.w	r3, [r8], #44
 800410e:	b08b      	sub	sp, #44	; 0x2c
 8004110:	4604      	mov	r4, r0
 8004112:	4640      	mov	r0, r8
 8004114:	f7fe f9e4 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004118:	f104 0374 	add.w	r3, r4, #116	; 0x74
 800411c:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004120:	4618      	mov	r0, r3
 8004122:	9303      	str	r3, [sp, #12]
 8004124:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004128:	f7fe f9da 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800412c:	4658      	mov	r0, fp
 800412e:	f7fe f9d7 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004132:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004136:	4da4      	ldr	r5, [pc, #656]	; (80043c8 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
        : TextArea()
 8004138:	4650      	mov	r0, sl
 800413a:	f7fe f9d1 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800413e:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004142:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004146:	4648      	mov	r0, r9
 8004148:	f7fe f9ca 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800414c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004150:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004154:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004156:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 800415a:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 800415e:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004162:	f7fe f9bd 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004166:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 800416a:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 800416e:	4638      	mov	r0, r7
 8004170:	f00c fdc0 	bl	8010cf4 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004174:	4a95      	ldr	r2, [pc, #596]	; (80043cc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004176:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004178:	4640      	mov	r0, r8
 800417a:	226d      	movs	r2, #109	; 0x6d
 800417c:	21d9      	movs	r1, #217	; 0xd9
 800417e:	ad04      	add	r5, sp, #16
 8004180:	f7fe f97b 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004184:	f04f 33ff 	mov.w	r3, #4294967295
 8004188:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 800418a:	4641      	mov	r1, r8
 800418c:	4628      	mov	r0, r5
        linespace = space;
 800418e:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004192:	f00c fa77 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004196:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800419a:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 800419e:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 80041a2:	4b8b      	ldr	r3, [pc, #556]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 80041a4:	9308      	str	r3, [sp, #32]
 80041a6:	221d      	movs	r2, #29
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 80041a8:	a908      	add	r1, sp, #32
 80041aa:	4640      	mov	r0, r8
 80041ac:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80041b0:	f00c fd02 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 80041b4:	4641      	mov	r1, r8
 80041b6:	4620      	mov	r0, r4
 80041b8:	f00a fb4a 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 80041bc:	9b03      	ldr	r3, [sp, #12]
 80041be:	4631      	mov	r1, r6
 80041c0:	4618      	mov	r0, r3
 80041c2:	226d      	movs	r2, #109	; 0x6d
 80041c4:	f7fe f959 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80041c8:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 80041ca:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 80041ce:	f04f 32ff 	mov.w	r2, #4294967295
 80041d2:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 80041d6:	4619      	mov	r1, r3
 80041d8:	4628      	mov	r0, r5
 80041da:	f00c fa53 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80041de:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80041e2:	4b7b      	ldr	r3, [pc, #492]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 80041e4:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 80041e6:	9b03      	ldr	r3, [sp, #12]
 80041e8:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 80041ec:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80041f0:	221e      	movs	r2, #30
 80041f2:	a908      	add	r1, sp, #32
 80041f4:	4618      	mov	r0, r3
 80041f6:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80041fa:	f00c fcdd 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 80041fe:	9b03      	ldr	r3, [sp, #12]
 8004200:	4620      	mov	r0, r4
 8004202:	4619      	mov	r1, r3
 8004204:	f00a fb24 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004208:	4632      	mov	r2, r6
 800420a:	4658      	mov	r0, fp
 800420c:	2171      	movs	r1, #113	; 0x71
 800420e:	f7fe f934 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004212:	f04f 32ff 	mov.w	r2, #4294967295
 8004216:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 800421a:	4659      	mov	r1, fp
 800421c:	4628      	mov	r0, r5
        linespace = space;
 800421e:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8004222:	f00c fa2f 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004226:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800422a:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 800422e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004232:	4b67      	ldr	r3, [pc, #412]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 8004234:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8004236:	a908      	add	r1, sp, #32
 8004238:	231f      	movs	r3, #31
 800423a:	4658      	mov	r0, fp
 800423c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004240:	f00c fcba 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8004244:	4659      	mov	r1, fp
 8004246:	4620      	mov	r0, r4
 8004248:	f00a fb02 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 800424c:	4650      	mov	r0, sl
 800424e:	227c      	movs	r2, #124	; 0x7c
 8004250:	214c      	movs	r1, #76	; 0x4c
 8004252:	f7fe f912 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004256:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 800425a:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 800425e:	f04f 32ff 	mov.w	r2, #4294967295
 8004262:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8004266:	4651      	mov	r1, sl
 8004268:	4628      	mov	r0, r5
 800426a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800426e:	4798      	blx	r3
 8004270:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004274:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8004278:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800427c:	f04f 081c 	mov.w	r8, #28
 8004280:	4b53      	ldr	r3, [pc, #332]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 8004282:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8004284:	a908      	add	r1, sp, #32
 8004286:	4650      	mov	r0, sl
 8004288:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 800428c:	f00c fc94 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8004290:	4651      	mov	r1, sl
 8004292:	4620      	mov	r0, r4
 8004294:	f00a fadc 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8004298:	4648      	mov	r0, r9
 800429a:	228b      	movs	r2, #139	; 0x8b
 800429c:	2156      	movs	r1, #86	; 0x56
 800429e:	f7fe f8ec 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80042a2:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 80042a6:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 80042aa:	f04f 32ff 	mov.w	r2, #4294967295
 80042ae:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 80042b2:	4649      	mov	r1, r9
 80042b4:	4628      	mov	r0, r5
 80042b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80042ba:	4798      	blx	r3
 80042bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80042c0:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 80042c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80042c8:	4b41      	ldr	r3, [pc, #260]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 80042ca:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 80042cc:	a908      	add	r1, sp, #32
 80042ce:	231b      	movs	r3, #27
 80042d0:	4648      	mov	r0, r9
 80042d2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80042d6:	f00c fc6f 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 80042da:	4649      	mov	r1, r9
 80042dc:	4620      	mov	r0, r4
 80042de:	f00a fab7 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 80042e2:	ee18 0a10 	vmov	r0, s16
 80042e6:	229a      	movs	r2, #154	; 0x9a
 80042e8:	2156      	movs	r1, #86	; 0x56
 80042ea:	f7fe f8c6 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80042ee:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 80042f2:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 80042f6:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80042fa:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 80042fe:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8004302:	4628      	mov	r0, r5
 8004304:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004308:	4798      	blx	r3
 800430a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800430e:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8004312:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004316:	4b2e      	ldr	r3, [pc, #184]	; (80043d0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2ec>)
 8004318:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 800431a:	ee18 0a10 	vmov	r0, s16
 800431e:	231a      	movs	r3, #26
 8004320:	a908      	add	r1, sp, #32
 8004322:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004326:	f00c fc47 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 800432a:	ee18 1a10 	vmov	r1, s16
 800432e:	4620      	mov	r0, r4
 8004330:	f00a fa8e 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004334:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8004336:	a908      	add	r1, sp, #32
 8004338:	4638      	mov	r0, r7
 800433a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800433e:	f00a fa19 	bl	800e774 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8004342:	2212      	movs	r2, #18
 8004344:	4641      	mov	r1, r8
 8004346:	4638      	mov	r0, r7
 8004348:	f7fe f897 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800434c:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004350:	4638      	mov	r0, r7
 8004352:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004354:	21b8      	movs	r1, #184	; 0xb8
 8004356:	4798      	blx	r3
        setHeight(height);
 8004358:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800435c:	4638      	mov	r0, r7
 800435e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004360:	216a      	movs	r1, #106	; 0x6a
 8004362:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8004364:	225c      	movs	r2, #92	; 0x5c
 8004366:	4611      	mov	r1, r2
 8004368:	4638      	mov	r0, r7
 800436a:	f00c fd6e 	bl	8010e4a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 800436e:	4638      	mov	r0, r7
 8004370:	225a      	movs	r2, #90	; 0x5a
 8004372:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004376:	f00c fded 	bl	8010f54 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 800437a:	4633      	mov	r3, r6
 800437c:	225a      	movs	r2, #90	; 0x5a
 800437e:	4638      	mov	r0, r7
 8004380:	9600      	str	r6, [sp, #0]
 8004382:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004386:	f00a f8a2 	bl	800e4ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 800438a:	4631      	mov	r1, r6
 800438c:	4638      	mov	r0, r7
 800438e:	f00c fd8b 	bl	8010ea8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8004392:	2335      	movs	r3, #53	; 0x35
 8004394:	2208      	movs	r2, #8
 8004396:	4638      	mov	r0, r7
 8004398:	2105      	movs	r1, #5
 800439a:	f00c fd41 	bl	8010e20 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800439e:	4638      	mov	r0, r7
 80043a0:	2101      	movs	r1, #1
 80043a2:	f00c fcdf 	bl	8010d64 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80043a6:	4638      	mov	r0, r7
 80043a8:	2101      	movs	r1, #1
 80043aa:	f00c fcde 	bl	8010d6a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 80043ae:	4620      	mov	r0, r4
 80043b0:	4639      	mov	r1, r7
 80043b2:	f00a fa4d 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80043b6:	4620      	mov	r0, r4
 80043b8:	b00b      	add	sp, #44	; 0x2c
 80043ba:	ecbd 8b02 	vpop	{d8}
 80043be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043c2:	bf00      	nop
 80043c4:	0802a4b4 	.word	0x0802a4b4
 80043c8:	0802903c 	.word	0x0802903c
 80043cc:	00a900f0 	.word	0x00a900f0
 80043d0:	0802902c 	.word	0x0802902c

080043d4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80043d4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80043d6:	4770      	bx	lr

080043d8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80043d8:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80043da:	4770      	bx	lr

080043dc <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80043dc:	4770      	bx	lr

080043de <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80043de:	888b      	ldrh	r3, [r1, #4]
 80043e0:	69c0      	ldr	r0, [r0, #28]
 80043e2:	680a      	ldr	r2, [r1, #0]
 80043e4:	0adb      	lsrs	r3, r3, #11
 80043e6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80043ea:	4410      	add	r0, r2
 80043ec:	4770      	bx	lr

080043ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80043ee:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80043f0:	b1c2      	cbz	r2, 8004424 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80043f2:	7b13      	ldrb	r3, [r2, #12]
 80043f4:	b1b3      	cbz	r3, 8004424 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80043f6:	7b54      	ldrb	r4, [r2, #13]
 80043f8:	7ad2      	ldrb	r2, [r2, #11]
 80043fa:	0224      	lsls	r4, r4, #8
 80043fc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004400:	4314      	orrs	r4, r2
 8004402:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004404:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004406:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800440a:	8813      	ldrh	r3, [r2, #0]
 800440c:	428b      	cmp	r3, r1
 800440e:	d102      	bne.n	8004416 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004410:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8004414:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004416:	d805      	bhi.n	8004424 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004418:	3801      	subs	r0, #1
 800441a:	b280      	uxth	r0, r0
 800441c:	3204      	adds	r2, #4
 800441e:	2800      	cmp	r0, #0
 8004420:	d1f3      	bne.n	800440a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004422:	e7f7      	b.n	8004414 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004424:	2000      	movs	r0, #0
 8004426:	e7f5      	b.n	8004414 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004428 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004428:	b510      	push	{r4, lr}
 800442a:	212c      	movs	r1, #44	; 0x2c
 800442c:	4604      	mov	r4, r0
 800442e:	f022 fa06 	bl	802683e <_ZdlPvj>
 8004432:	4620      	mov	r0, r4
 8004434:	bd10      	pop	{r4, pc}
	...

08004438 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004438:	b530      	push	{r4, r5, lr}
 800443a:	b08b      	sub	sp, #44	; 0x2c
 800443c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800443e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8004442:	9508      	str	r5, [sp, #32]
 8004444:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8004448:	9507      	str	r5, [sp, #28]
 800444a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800444e:	9506      	str	r5, [sp, #24]
 8004450:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8004454:	9505      	str	r5, [sp, #20]
 8004456:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800445a:	9504      	str	r5, [sp, #16]
 800445c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8004460:	9503      	str	r5, [sp, #12]
 8004462:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8004466:	9502      	str	r5, [sp, #8]
 8004468:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800446c:	9501      	str	r5, [sp, #4]
 800446e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8004472:	9500      	str	r5, [sp, #0]
 8004474:	f010 fe1a 	bl	80150ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004478:	4b06      	ldr	r3, [pc, #24]	; (8004494 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800447a:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 800447c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800447e:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8004480:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004482:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8004484:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004486:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8004488:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800448a:	62a3      	str	r3, [r4, #40]	; 0x28
}
 800448c:	4620      	mov	r0, r4
 800448e:	b00b      	add	sp, #44	; 0x2c
 8004490:	bd30      	pop	{r4, r5, pc}
 8004492:	bf00      	nop
 8004494:	0802a548 	.word	0x0802a548

08004498 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8004498:	4770      	bx	lr

0800449a <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800449a:	4770      	bx	lr

0800449c <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800449c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800449e:	68c2      	ldr	r2, [r0, #12]
 80044a0:	6844      	ldr	r4, [r0, #4]
 80044a2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80044a4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80044a6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80044aa:	07d2      	lsls	r2, r2, #31
 80044ac:	bf48      	it	mi
 80044ae:	5962      	ldrmi	r2, [r4, r5]
 80044b0:	689b      	ldr	r3, [r3, #8]
    }
 80044b2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80044b4:	bf48      	it	mi
 80044b6:	58d3      	ldrmi	r3, [r2, r3]
 80044b8:	4718      	bx	r3

080044ba <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80044ba:	6843      	ldr	r3, [r0, #4]
 80044bc:	b12b      	cbz	r3, 80044ca <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80044be:	6883      	ldr	r3, [r0, #8]
 80044c0:	b92b      	cbnz	r3, 80044ce <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80044c2:	68c0      	ldr	r0, [r0, #12]
 80044c4:	f000 0001 	and.w	r0, r0, #1
 80044c8:	4770      	bx	lr
 80044ca:	4618      	mov	r0, r3
 80044cc:	4770      	bx	lr
 80044ce:	2001      	movs	r0, #1
    }
 80044d0:	4770      	bx	lr

080044d2 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80044d2:	b510      	push	{r4, lr}
 80044d4:	2110      	movs	r1, #16
 80044d6:	4604      	mov	r4, r0
 80044d8:	f022 f9b1 	bl	802683e <_ZdlPvj>
 80044dc:	4620      	mov	r0, r4
 80044de:	bd10      	pop	{r4, pc}

080044e0 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80044e0:	b510      	push	{r4, lr}
 80044e2:	4b03      	ldr	r3, [pc, #12]	; (80044f0 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80044e4:	6003      	str	r3, [r0, #0]
 80044e6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80044e8:	f00d ff48 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80044ec:	4620      	mov	r0, r4
 80044ee:	bd10      	pop	{r4, pc}
 80044f0:	0802a5c0 	.word	0x0802a5c0

080044f4 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80044f4:	b507      	push	{r0, r1, r2, lr}
 80044f6:	4b07      	ldr	r3, [pc, #28]	; (8004514 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80044f8:	6003      	str	r3, [r0, #0]
 80044fa:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80044fc:	f00d ff3e 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004500:	9801      	ldr	r0, [sp, #4]
 8004502:	f241 117c 	movw	r1, #4476	; 0x117c
 8004506:	f022 f99a 	bl	802683e <_ZdlPvj>
 800450a:	9801      	ldr	r0, [sp, #4]
 800450c:	b003      	add	sp, #12
 800450e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004512:	bf00      	nop
 8004514:	0802a5c0 	.word	0x0802a5c0

08004518 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8004518:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800451a:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800451e:	4299      	cmp	r1, r3
{
 8004520:	4604      	mov	r4, r0
 8004522:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8004524:	d103      	bne.n	800452e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004526:	f00f fc2b 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800452a:	f7fe fd2b 	bl	8002f84 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800452e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004532:	429d      	cmp	r5, r3
 8004534:	d103      	bne.n	800453e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8004536:	f00f fc23 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 800453a:	f7fe fdb3 	bl	80030a4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800453e:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004542:	429d      	cmp	r5, r3
 8004544:	d103      	bne.n	800454e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8004546:	f00f fc1b 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800454a:	f7fe fdbb 	bl	80030c4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800454e:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8004552:	42a5      	cmp	r5, r4
 8004554:	d10a      	bne.n	800456c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8004556:	4806      	ldr	r0, [pc, #24]	; (8004570 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8004558:	2200      	movs	r2, #0
 800455a:	2120      	movs	r1, #32
 800455c:	f003 fe96 	bl	800828c <HAL_GPIO_WritePin>
 8004560:	f00f fc0e 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8004564:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8004568:	f7fe bdbc 	b.w	80030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800456c:	bd38      	pop	{r3, r4, r5, pc}
 800456e:	bf00      	nop
 8004570:	40021000 	.word	0x40021000

08004574 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8004574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004578:	ed2d 8b06 	vpush	{d8-d10}
 800457c:	4604      	mov	r4, r0
 800457e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8004580:	46a3      	mov	fp, r4
        : presenter(0)
 8004582:	2500      	movs	r5, #0
 8004584:	f011 f87c 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 8004588:	4b6a      	ldr	r3, [pc, #424]	; (8004734 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 800458a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800458c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8004590:	2226      	movs	r2, #38	; 0x26
 8004592:	4629      	mov	r1, r5
 8004594:	4658      	mov	r0, fp
 8004596:	f023 f948 	bl	802782a <memset>
 800459a:	4658      	mov	r0, fp
 800459c:	f7fd ff8e 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80045a0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80045a4:	26ff      	movs	r6, #255	; 0xff
 80045a6:	4b64      	ldr	r3, [pc, #400]	; (8004738 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80045a8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80045aa:	2226      	movs	r2, #38	; 0x26
 80045ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80045b0:	4629      	mov	r1, r5
 80045b2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80045b6:	4650      	mov	r0, sl
        : color(col)
 80045b8:	66a5      	str	r5, [r4, #104]	; 0x68
 80045ba:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80045be:	f023 f934 	bl	802782a <memset>
 80045c2:	4650      	mov	r0, sl
 80045c4:	f7fd ff7a 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80045c8:	4b5c      	ldr	r3, [pc, #368]	; (800473c <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80045ca:	66e3      	str	r3, [r4, #108]	; 0x6c
 80045cc:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80045d0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80045d4:	a90c      	add	r1, sp, #48	; 0x30
 80045d6:	4650      	mov	r0, sl
 80045d8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80045dc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80045e0:	f00c fec5 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80045e4:	4648      	mov	r0, r9
 80045e6:	f7fd ff7b 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80045ea:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80045ee:	4b54      	ldr	r3, [pc, #336]	; (8004740 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 80045f0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80045f4:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80045f8:	4638      	mov	r0, r7
 80045fa:	f00b fd81 	bl	8010100 <_ZN8touchgfx4LineC1Ev>
 80045fe:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004602:	4618      	mov	r0, r3
 8004604:	9303      	str	r3, [sp, #12]
 8004606:	f7fc fe5b 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800460a:	4b4e      	ldr	r3, [pc, #312]	; (8004744 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 800460c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8004610:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8004614:	3324      	adds	r3, #36	; 0x24
 8004616:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800461a:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800461e:	4640      	mov	r0, r8
 8004620:	f7fd ff5e 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004624:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8004628:	4618      	mov	r0, r3
 800462a:	ee08 3a10 	vmov	s16, r3
 800462e:	f7fd ff57 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004632:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8004636:	4618      	mov	r0, r3
 8004638:	ee08 3a90 	vmov	s17, r3
 800463c:	f7fd ff50 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004640:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004644:	4618      	mov	r0, r3
 8004646:	ee09 3a10 	vmov	s18, r3
 800464a:	f00c ffd1 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800464e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004652:	4618      	mov	r0, r3
 8004654:	ee09 3a90 	vmov	s19, r3
 8004658:	f00c ffca 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800465c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8004660:	4618      	mov	r0, r3
 8004662:	ee0a 3a10 	vmov	s20, r3
 8004666:	f00c ffc3 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800466a:	f504 7346 	add.w	r3, r4, #792	; 0x318
 800466e:	4618      	mov	r0, r3
 8004670:	ee0a 3a90 	vmov	s21, r3
 8004674:	f00c fe54 	bl	8011320 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004678:	4a33      	ldr	r2, [pc, #204]	; (8004748 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 800467a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800467e:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8004682:	4a32      	ldr	r2, [pc, #200]	; (800474c <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004684:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004688:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 800468c:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8004690:	f00d fe6a 	bl	8012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8004694:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004698:	462a      	mov	r2, r5
 800469a:	4658      	mov	r0, fp
 800469c:	9300      	str	r3, [sp, #0]
 800469e:	4629      	mov	r1, r5
 80046a0:	23f0      	movs	r3, #240	; 0xf0
 80046a2:	f7fd fef7 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046a6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80046a8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80046ac:	66a3      	str	r3, [r4, #104]	; 0x68
 80046ae:	4659      	mov	r1, fp
 80046b0:	4630      	mov	r0, r6
 80046b2:	f00a f8cd 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80046b6:	462a      	mov	r2, r5
 80046b8:	4650      	mov	r0, sl
 80046ba:	4629      	mov	r1, r5
 80046bc:	f7fd fedd 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80046c0:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80046c2:	4650      	mov	r0, sl
 80046c4:	a90c      	add	r1, sp, #48	; 0x30
 80046c6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80046ca:	f00c fe50 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80046ce:	4651      	mov	r1, sl
 80046d0:	4630      	mov	r0, r6
 80046d2:	f00a f8bd 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 80046d6:	f44f 729a 	mov.w	r2, #308	; 0x134
 80046da:	2156      	movs	r1, #86	; 0x56
 80046dc:	4648      	mov	r0, r9
 80046de:	f7fd fecc 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80046e2:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80046e6:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80046ea:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80046ee:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80046f2:	4650      	mov	r0, sl
 80046f4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80046f8:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80046fc:	4649      	mov	r1, r9
 80046fe:	4798      	blx	r3
 8004700:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8004704:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8004708:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800470c:	4b10      	ldr	r3, [pc, #64]	; (8004750 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 800470e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8004710:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8004714:	b92b      	cbnz	r3, 8004722 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8004716:	4b0f      	ldr	r3, [pc, #60]	; (8004754 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8004718:	4a0f      	ldr	r2, [pc, #60]	; (8004758 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800471a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800471c:	480f      	ldr	r0, [pc, #60]	; (800475c <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 800471e:	f022 fe7f 	bl	8027420 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8004722:	4b0f      	ldr	r3, [pc, #60]	; (8004760 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004724:	881b      	ldrh	r3, [r3, #0]
 8004726:	2b18      	cmp	r3, #24
 8004728:	d81e      	bhi.n	8004768 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800472a:	4b0e      	ldr	r3, [pc, #56]	; (8004764 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 800472c:	4a0a      	ldr	r2, [pc, #40]	; (8004758 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800472e:	2161      	movs	r1, #97	; 0x61
 8004730:	e7f4      	b.n	800471c <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8004732:	bf00      	nop
 8004734:	0802a5c0 	.word	0x0802a5c0
 8004738:	0802b48c 	.word	0x0802b48c
 800473c:	0802b654 	.word	0x0802b654
 8004740:	0802903c 	.word	0x0802903c
 8004744:	0802b1c0 	.word	0x0802b1c0
 8004748:	0802a5a8 	.word	0x0802a5a8
 800474c:	08004519 	.word	0x08004519
 8004750:	20013814 	.word	0x20013814
 8004754:	08028e7c 	.word	0x08028e7c
 8004758:	08028f7e 	.word	0x08028f7e
 800475c:	08028ef9 	.word	0x08028ef9
 8004760:	20013818 	.word	0x20013818
 8004764:	08028f40 	.word	0x08028f40
        return texts->getText(typedTextId);
 8004768:	4ba5      	ldr	r3, [pc, #660]	; (8004a00 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 800476a:	2118      	movs	r1, #24
 800476c:	6818      	ldr	r0, [r3, #0]
 800476e:	f002 fc25 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8004772:	4aa4      	ldr	r2, [pc, #656]	; (8004a04 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8004774:	4603      	mov	r3, r0
 8004776:	2104      	movs	r1, #4
 8004778:	4650      	mov	r0, sl
 800477a:	f012 fc65 	bl	8017048 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 800477e:	4648      	mov	r0, r9
        wc1 = value;
 8004780:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8004784:	f00c f9f8 	bl	8010b78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004788:	4b9f      	ldr	r3, [pc, #636]	; (8004a08 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 800478a:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 800478c:	a90c      	add	r1, sp, #48	; 0x30
 800478e:	2319      	movs	r3, #25
 8004790:	4648      	mov	r0, r9
 8004792:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004796:	f00c fa0f 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800479a:	4649      	mov	r1, r9
 800479c:	4630      	mov	r0, r6
 800479e:	f00a f857 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80047a2:	230a      	movs	r3, #10
 80047a4:	9300      	str	r3, [sp, #0]
 80047a6:	2232      	movs	r2, #50	; 0x32
 80047a8:	23f0      	movs	r3, #240	; 0xf0
 80047aa:	4629      	mov	r1, r5
 80047ac:	4638      	mov	r0, r7
 80047ae:	f7fd fe71 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80047b2:	9b03      	ldr	r3, [sp, #12]
 80047b4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80047b8:	22a0      	movs	r2, #160	; 0xa0
 80047ba:	4611      	mov	r1, r2
 80047bc:	4638      	mov	r0, r7
 80047be:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80047c2:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80047c6:	f00b fdb1 	bl	801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80047ca:	22a0      	movs	r2, #160	; 0xa0
 80047cc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80047d0:	4638      	mov	r0, r7
 80047d2:	f00b fdb6 	bl	8010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80047d6:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80047da:	2b20      	cmp	r3, #32
 80047dc:	d005      	beq.n	80047ea <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 80047de:	2320      	movs	r3, #32
 80047e0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80047e4:	4638      	mov	r0, r7
 80047e6:	f00b fcab 	bl	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80047ea:	4638      	mov	r0, r7
 80047ec:	2101      	movs	r1, #1
 80047ee:	f00b fdb3 	bl	8010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80047f2:	4639      	mov	r1, r7
 80047f4:	4630      	mov	r0, r6
 80047f6:	ad04      	add	r5, sp, #16
        color = newColor;
 80047f8:	f04f 37ff 	mov.w	r7, #4294967295
 80047fc:	f00a f828 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8004800:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 36);
 8004804:	2224      	movs	r2, #36	; 0x24
 8004806:	4640      	mov	r0, r8
 8004808:	2145      	movs	r1, #69	; 0x45
 800480a:	f7fd fe36 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800480e:	4641      	mov	r1, r8
 8004810:	4628      	mov	r0, r5
        color = newColor;
 8004812:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8004816:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800481a:	f00b ff33 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800481e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8004822:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8004826:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800482a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800482e:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8004a08 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8004832:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8004836:	233e      	movs	r3, #62	; 0x3e
 8004838:	4649      	mov	r1, r9
 800483a:	4640      	mov	r0, r8
 800483c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004840:	f00c f9ba 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004844:	4641      	mov	r1, r8
 8004846:	4630      	mov	r0, r6
 8004848:	f00a f802 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 800484c:	ee18 0a10 	vmov	r0, s16
 8004850:	220c      	movs	r2, #12
 8004852:	2132      	movs	r1, #50	; 0x32
 8004854:	f7fd fe11 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004858:	ee18 1a10 	vmov	r1, s16
 800485c:	4628      	mov	r0, r5
        color = newColor;
 800485e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8004862:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8004866:	f00b ff0d 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800486a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800486e:	ee18 3a10 	vmov	r3, s16
 8004872:	333c      	adds	r3, #60	; 0x3c
 8004874:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004878:	233f      	movs	r3, #63	; 0x3f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 800487a:	ee18 0a10 	vmov	r0, s16
 800487e:	4649      	mov	r1, r9
 8004880:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004884:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8004888:	f00c f996 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800488c:	ee18 1a10 	vmov	r1, s16
 8004890:	4630      	mov	r0, r6
 8004892:	f009 ffdd 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8004896:	ee18 0a90 	vmov	r0, s17
 800489a:	223c      	movs	r2, #60	; 0x3c
 800489c:	2158      	movs	r1, #88	; 0x58
 800489e:	f7fd fdec 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80048a2:	ee18 1a90 	vmov	r1, s17
 80048a6:	4628      	mov	r0, r5
        color = newColor;
 80048a8:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80048ac:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80048b0:	f00b fee8 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80048b4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80048b8:	ee18 3a90 	vmov	r3, s17
 80048bc:	333c      	adds	r3, #60	; 0x3c
 80048be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80048c2:	2308      	movs	r3, #8
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80048c4:	ee18 0a90 	vmov	r0, s17
 80048c8:	4649      	mov	r1, r9
 80048ca:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80048ce:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80048d2:	f00c f971 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80048d6:	ee18 1a90 	vmov	r1, s17
 80048da:	4630      	mov	r0, r6
 80048dc:	f009 ffb8 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80048e0:	ee19 0a10 	vmov	r0, s18
 80048e4:	22f0      	movs	r2, #240	; 0xf0
 80048e6:	2121      	movs	r1, #33	; 0x21
 80048e8:	f7fd fdc7 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80048ec:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80048f0:	464a      	mov	r2, r9
 80048f2:	f04f 0802 	mov.w	r8, #2
 80048f6:	a90b      	add	r1, sp, #44	; 0x2c
 80048f8:	ee19 0a10 	vmov	r0, s18
 80048fc:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8004900:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8004904:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004908:	f00c fb3b 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800490c:	2340      	movs	r3, #64	; 0x40
 800490e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8004912:	350c      	adds	r5, #12
        updateTextPosition();
 8004914:	ee19 0a10 	vmov	r0, s18
 8004918:	f7fd fe04 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800491c:	ee19 1a10 	vmov	r1, s18
 8004920:	4630      	mov	r0, r6
        colorPressed = col;
 8004922:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8004926:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800492a:	f009 ff91 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800492e:	ee19 0a90 	vmov	r0, s19
 8004932:	22aa      	movs	r2, #170	; 0xaa
 8004934:	2121      	movs	r1, #33	; 0x21
 8004936:	f7fd fda0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800493a:	464a      	mov	r2, r9
 800493c:	a90b      	add	r1, sp, #44	; 0x2c
 800493e:	ee19 0a90 	vmov	r0, s19
 8004942:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8004946:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800494a:	f00c fb1a 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800494e:	2341      	movs	r3, #65	; 0x41
 8004950:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8004954:	ee19 0a90 	vmov	r0, s19
 8004958:	f7fd fde4 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800495c:	ee19 1a90 	vmov	r1, s19
 8004960:	4630      	mov	r0, r6
        colorPressed = col;
 8004962:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8004966:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800496a:	f009 ff71 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800496e:	ee1a 0a10 	vmov	r0, s20
 8004972:	2264      	movs	r2, #100	; 0x64
 8004974:	2121      	movs	r1, #33	; 0x21
 8004976:	f7fd fd80 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800497a:	464a      	mov	r2, r9
 800497c:	a90b      	add	r1, sp, #44	; 0x2c
 800497e:	ee1a 0a10 	vmov	r0, s20
 8004982:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8004986:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800498a:	f00c fafa 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800498e:	2342      	movs	r3, #66	; 0x42
 8004990:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8004994:	ee1a 0a10 	vmov	r0, s20
 8004998:	f7fd fdc4 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800499c:	ee1a 1a10 	vmov	r1, s20
 80049a0:	4630      	mov	r0, r6
        colorPressed = col;
 80049a2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80049a6:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80049aa:	f009 ff51 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80049ae:	ee1a 0a90 	vmov	r0, s21
 80049b2:	2205      	movs	r2, #5
 80049b4:	21c6      	movs	r1, #198	; 0xc6
 80049b6:	f7fd fd60 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80049ba:	2301      	movs	r3, #1
 80049bc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80049c0:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80049c2:	ee1a 0a90 	vmov	r0, s21
 80049c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80049ca:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80049ce:	aa0a      	add	r2, sp, #40	; 0x28
 80049d0:	ab0b      	add	r3, sp, #44	; 0x2c
 80049d2:	a909      	add	r1, sp, #36	; 0x24
 80049d4:	f8cd 9000 	str.w	r9, [sp]
 80049d8:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 80049dc:	f00c fc0b 	bl	80111f6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80049e0:	4630      	mov	r0, r6
 80049e2:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80049e6:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 80049ea:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 80049ee:	f009 ff2f 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80049f2:	4620      	mov	r0, r4
 80049f4:	b00f      	add	sp, #60	; 0x3c
 80049f6:	ecbd 8b06 	vpop	{d8-d10}
 80049fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80049fe:	bf00      	nop
 8004a00:	20013820 	.word	0x20013820
 8004a04:	08028fb6 	.word	0x08028fb6
 8004a08:	0802902c 	.word	0x0802902c

08004a0c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8004a0c:	4770      	bx	lr

08004a0e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004a0e:	4770      	bx	lr

08004a10 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004a10:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004a12:	68c2      	ldr	r2, [r0, #12]
 8004a14:	6844      	ldr	r4, [r0, #4]
 8004a16:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004a18:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004a1a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004a1e:	07d2      	lsls	r2, r2, #31
 8004a20:	bf48      	it	mi
 8004a22:	5962      	ldrmi	r2, [r4, r5]
 8004a24:	689b      	ldr	r3, [r3, #8]
    }
 8004a26:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004a28:	bf48      	it	mi
 8004a2a:	58d3      	ldrmi	r3, [r2, r3]
 8004a2c:	4718      	bx	r3

08004a2e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004a2e:	6843      	ldr	r3, [r0, #4]
 8004a30:	b12b      	cbz	r3, 8004a3e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004a32:	6883      	ldr	r3, [r0, #8]
 8004a34:	b92b      	cbnz	r3, 8004a42 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004a36:	68c0      	ldr	r0, [r0, #12]
 8004a38:	f000 0001 	and.w	r0, r0, #1
 8004a3c:	4770      	bx	lr
 8004a3e:	4618      	mov	r0, r3
 8004a40:	4770      	bx	lr
 8004a42:	2001      	movs	r0, #1
    }
 8004a44:	4770      	bx	lr

08004a46 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004a46:	b510      	push	{r4, lr}
 8004a48:	2110      	movs	r1, #16
 8004a4a:	4604      	mov	r4, r0
 8004a4c:	f021 fef7 	bl	802683e <_ZdlPvj>
 8004a50:	4620      	mov	r0, r4
 8004a52:	bd10      	pop	{r4, pc}

08004a54 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8004a54:	b510      	push	{r4, lr}
 8004a56:	4b03      	ldr	r3, [pc, #12]	; (8004a64 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8004a58:	6003      	str	r3, [r0, #0]
 8004a5a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004a5c:	f00d fc8e 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004a60:	4620      	mov	r0, r4
 8004a62:	bd10      	pop	{r4, pc}
 8004a64:	0802a60c 	.word	0x0802a60c

08004a68 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8004a68:	b507      	push	{r0, r1, r2, lr}
 8004a6a:	4b07      	ldr	r3, [pc, #28]	; (8004a88 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8004a6c:	6003      	str	r3, [r0, #0]
 8004a6e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004a70:	f00d fc84 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004a74:	9801      	ldr	r0, [sp, #4]
 8004a76:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8004a7a:	f021 fee0 	bl	802683e <_ZdlPvj>
 8004a7e:	9801      	ldr	r0, [sp, #4]
 8004a80:	b003      	add	sp, #12
 8004a82:	f85d fb04 	ldr.w	pc, [sp], #4
 8004a86:	bf00      	nop
 8004a88:	0802a60c 	.word	0x0802a60c

08004a8c <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8004a8c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8004a8e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8004a92:	4299      	cmp	r1, r3
{
 8004a94:	4604      	mov	r4, r0
 8004a96:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8004a98:	d103      	bne.n	8004aa2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004a9a:	f00f f971 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8004a9e:	f7fe fa61 	bl	8002f64 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8004aa2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8004aa6:	429d      	cmp	r5, r3
 8004aa8:	d103      	bne.n	8004ab2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8004aaa:	f00f f969 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8004aae:	f7fe fa89 	bl	8002fc4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8004ab2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8004ab6:	42a5      	cmp	r5, r4
 8004ab8:	d105      	bne.n	8004ac6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8004aba:	f00f f961 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8004abe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8004ac2:	f7fe baaf 	b.w	8003024 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8004ac6:	bd38      	pop	{r3, r4, r5, pc}

08004ac8 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8004ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004acc:	ed2d 8b06 	vpush	{d8-d10}
 8004ad0:	4604      	mov	r4, r0
 8004ad2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8004ad4:	46a3      	mov	fp, r4
 8004ad6:	2500      	movs	r5, #0
 8004ad8:	f010 fdd2 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 8004adc:	4b67      	ldr	r3, [pc, #412]	; (8004c7c <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8004ade:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004ae0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8004ae4:	2226      	movs	r2, #38	; 0x26
 8004ae6:	4629      	mov	r1, r5
 8004ae8:	4658      	mov	r0, fp
 8004aea:	f022 fe9e 	bl	802782a <memset>
 8004aee:	4658      	mov	r0, fp
 8004af0:	f7fd fce4 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8004af4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8004af8:	26ff      	movs	r6, #255	; 0xff
 8004afa:	4b61      	ldr	r3, [pc, #388]	; (8004c80 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8004afc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8004afe:	2226      	movs	r2, #38	; 0x26
 8004b00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004b04:	4629      	mov	r1, r5
 8004b06:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8004b0a:	4650      	mov	r0, sl
 8004b0c:	66a5      	str	r5, [r4, #104]	; 0x68
 8004b0e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004b12:	f022 fe8a 	bl	802782a <memset>
 8004b16:	4650      	mov	r0, sl
 8004b18:	f7fd fcd0 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8004b1c:	4b59      	ldr	r3, [pc, #356]	; (8004c84 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8004b1e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8004b20:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8004b24:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8004b28:	a90a      	add	r1, sp, #40	; 0x28
 8004b2a:	4650      	mov	r0, sl
 8004b2c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8004b30:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8004b34:	f00c fc1b 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8004b38:	4648      	mov	r0, r9
 8004b3a:	f7fd fcd1 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004b3e:	4b52      	ldr	r3, [pc, #328]	; (8004c88 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8004b40:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8004b44:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8004b48:	4618      	mov	r0, r3
 8004b4a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8004b4e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8004b52:	ee08 3a90 	vmov	s17, r3
 8004b56:	f7fd fcc3 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004b5a:	4638      	mov	r0, r7
 8004b5c:	f00b fad0 	bl	8010100 <_ZN8touchgfx4LineC1Ev>
 8004b60:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004b64:	4618      	mov	r0, r3
 8004b66:	9303      	str	r3, [sp, #12]
 8004b68:	f7fc fbaa 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004b6c:	4b47      	ldr	r3, [pc, #284]	; (8004c8c <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8004b6e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8004b72:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8004b76:	3324      	adds	r3, #36	; 0x24
 8004b78:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8004b7c:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8004b80:	4640      	mov	r0, r8
 8004b82:	f7fd fcad 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004b86:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8004b8a:	4618      	mov	r0, r3
 8004b8c:	ee08 3a10 	vmov	s16, r3
 8004b90:	f7fd fca6 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8004b94:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004b98:	4618      	mov	r0, r3
 8004b9a:	ee09 3a10 	vmov	s18, r3
 8004b9e:	f00c fd27 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004ba2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004ba6:	4618      	mov	r0, r3
 8004ba8:	ee09 3a90 	vmov	s19, r3
 8004bac:	f00c fd20 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004bb0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8004bb4:	4618      	mov	r0, r3
 8004bb6:	ee0a 3a10 	vmov	s20, r3
 8004bba:	f00c fd19 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004bbe:	4a34      	ldr	r2, [pc, #208]	; (8004c90 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
 8004bc0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8004bc4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8004bc8:	4a32      	ldr	r2, [pc, #200]	; (8004c94 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004bca:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004bce:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8004bd2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8004bd6:	f00d fbc7 	bl	8012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8004bda:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004bde:	462a      	mov	r2, r5
 8004be0:	4658      	mov	r0, fp
 8004be2:	9300      	str	r3, [sp, #0]
 8004be4:	4629      	mov	r1, r5
 8004be6:	23f0      	movs	r3, #240	; 0xf0
 8004be8:	f7fd fc54 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004bec:	1d26      	adds	r6, r4, #4
        color = newColor;
 8004bee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004bf2:	66a3      	str	r3, [r4, #104]	; 0x68
 8004bf4:	4659      	mov	r1, fp
 8004bf6:	4630      	mov	r0, r6
 8004bf8:	f009 fe2a 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8004bfc:	462a      	mov	r2, r5
 8004bfe:	4650      	mov	r0, sl
 8004c00:	4629      	mov	r1, r5
 8004c02:	f7fd fc3a 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004c06:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8004c08:	4650      	mov	r0, sl
 8004c0a:	a90a      	add	r1, sp, #40	; 0x28
 8004c0c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004c10:	f00c fbad 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004c14:	4651      	mov	r1, sl
 8004c16:	4630      	mov	r0, r6
 8004c18:	f009 fe1a 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8004c1c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8004c20:	2156      	movs	r1, #86	; 0x56
 8004c22:	4648      	mov	r0, r9
 8004c24:	f7fd fc29 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004c28:	f8d4 2098 	ldr.w	r2, [r4, #152]	; 0x98
        linespace = space;
 8004c2c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        color = newColor;
 8004c30:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8004c34:	f10d 0b10 	add.w	fp, sp, #16
 8004c38:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
        color = newColor;
 8004c3c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8004c40:	4649      	mov	r1, r9
 8004c42:	4658      	mov	r0, fp
 8004c44:	4790      	blx	r2
 8004c46:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8004c4a:	f104 0cd4 	add.w	ip, r4, #212	; 0xd4
 8004c4e:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004c52:	4a11      	ldr	r2, [pc, #68]	; (8004c98 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8004c54:	6812      	ldr	r2, [r2, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8004c56:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8004c5a:	2309      	movs	r3, #9
 8004c5c:	b92a      	cbnz	r2, 8004c6a <_ZN19MeasurementViewBaseC1Ev+0x1a2>
 8004c5e:	4b0f      	ldr	r3, [pc, #60]	; (8004c9c <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8004c60:	4a0f      	ldr	r2, [pc, #60]	; (8004ca0 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8004c62:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c64:	480f      	ldr	r0, [pc, #60]	; (8004ca4 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
 8004c66:	f022 fbdb 	bl	8027420 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8004c6a:	4a0f      	ldr	r2, [pc, #60]	; (8004ca8 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c6c:	8812      	ldrh	r2, [r2, #0]
 8004c6e:	2a09      	cmp	r2, #9
 8004c70:	d81e      	bhi.n	8004cb0 <_ZN19MeasurementViewBaseC1Ev+0x1e8>
 8004c72:	4b0e      	ldr	r3, [pc, #56]	; (8004cac <_ZN19MeasurementViewBaseC1Ev+0x1e4>)
 8004c74:	4a0a      	ldr	r2, [pc, #40]	; (8004ca0 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8004c76:	2161      	movs	r1, #97	; 0x61
 8004c78:	e7f4      	b.n	8004c64 <_ZN19MeasurementViewBaseC1Ev+0x19c>
 8004c7a:	bf00      	nop
 8004c7c:	0802a60c 	.word	0x0802a60c
 8004c80:	0802b48c 	.word	0x0802b48c
 8004c84:	0802b654 	.word	0x0802b654
 8004c88:	0802903c 	.word	0x0802903c
 8004c8c:	0802b1c0 	.word	0x0802b1c0
 8004c90:	0802a5f4 	.word	0x0802a5f4
 8004c94:	08004a8d 	.word	0x08004a8d
 8004c98:	20013814 	.word	0x20013814
 8004c9c:	08028e7c 	.word	0x08028e7c
 8004ca0:	08028f7e 	.word	0x08028f7e
 8004ca4:	08028ef9 	.word	0x08028ef9
 8004ca8:	20013818 	.word	0x20013818
 8004cac:	08028f40 	.word	0x08028f40
        return texts->getText(typedTextId);
 8004cb0:	4619      	mov	r1, r3
 8004cb2:	4b95      	ldr	r3, [pc, #596]	; (8004f08 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8004cb4:	6818      	ldr	r0, [r3, #0]
 8004cb6:	f002 f981 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8004cba:	4a94      	ldr	r2, [pc, #592]	; (8004f0c <_ZN19MeasurementViewBaseC1Ev+0x444>)
 8004cbc:	4603      	mov	r3, r0
 8004cbe:	2104      	movs	r1, #4
 8004cc0:	4650      	mov	r0, sl
 8004cc2:	f012 f9c1 	bl	8017048 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8004cc6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8004cca:	4648      	mov	r0, r9
 8004ccc:	f00b ff54 	bl	8010b78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004cd0:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8004f10 <_ZN19MeasurementViewBaseC1Ev+0x448>
 8004cd4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8004cd8:	230a      	movs	r3, #10
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8004cda:	a90a      	add	r1, sp, #40	; 0x28
 8004cdc:	4648      	mov	r0, r9
 8004cde:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004ce2:	f00b ff69 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ce6:	4649      	mov	r1, r9
 8004ce8:	4630      	mov	r0, r6
 8004cea:	f009 fdb1 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(57, 60);
 8004cee:	223c      	movs	r2, #60	; 0x3c
 8004cf0:	ee18 0a90 	vmov	r0, s17
 8004cf4:	2139      	movs	r1, #57	; 0x39
 8004cf6:	f7fd fbc0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004cfa:	f04f 33ff 	mov.w	r3, #4294967295
 8004cfe:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8004d02:	ee18 1a90 	vmov	r1, s17
 8004d06:	4658      	mov	r0, fp
        linespace = space;
 8004d08:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8004d0c:	f00b fcba 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d10:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8004d14:	f504 7c90 	add.w	ip, r4, #288	; 0x120
 8004d18:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004d1c:	2217      	movs	r2, #23
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8004d1e:	ee18 0a90 	vmov	r0, s17
 8004d22:	a90a      	add	r1, sp, #40	; 0x28
 8004d24:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8004d28:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8004d2c:	f00b ff44 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004d30:	ee18 1a90 	vmov	r1, s17
 8004d34:	4630      	mov	r0, r6
 8004d36:	f009 fd8b 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004d3a:	230a      	movs	r3, #10
 8004d3c:	9300      	str	r3, [sp, #0]
 8004d3e:	2232      	movs	r2, #50	; 0x32
 8004d40:	23f0      	movs	r3, #240	; 0xf0
 8004d42:	4629      	mov	r1, r5
 8004d44:	4638      	mov	r0, r7
 8004d46:	f7fd fba5 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d4a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004d4e:	22a0      	movs	r2, #160	; 0xa0
 8004d50:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004d54:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8004d58:	9b03      	ldr	r3, [sp, #12]
 8004d5a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8004d5e:	4611      	mov	r1, r2
 8004d60:	4638      	mov	r0, r7
 8004d62:	f00b fae3 	bl	801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004d66:	22a0      	movs	r2, #160	; 0xa0
 8004d68:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8004d6c:	4638      	mov	r0, r7
 8004d6e:	f00b fae8 	bl	8010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8004d72:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8004d76:	2b20      	cmp	r3, #32
 8004d78:	d005      	beq.n	8004d86 <_ZN19MeasurementViewBaseC1Ev+0x2be>
        lineWidthQ5 = widthQ5;
 8004d7a:	2320      	movs	r3, #32
 8004d7c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8004d80:	4638      	mov	r0, r7
 8004d82:	f00b f9dd 	bl	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004d86:	4638      	mov	r0, r7
 8004d88:	2101      	movs	r1, #1
 8004d8a:	f00b fae5 	bl	8010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004d8e:	4639      	mov	r1, r7
 8004d90:	4630      	mov	r0, r6
 8004d92:	f009 fd5d 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004d96:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8004d9a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 36);
 8004d9c:	2224      	movs	r2, #36	; 0x24
 8004d9e:	4640      	mov	r0, r8
        linespace = space;
 8004da0:	f04f 0a00 	mov.w	sl, #0
 8004da4:	2145      	movs	r1, #69	; 0x45
 8004da6:	f7fd fb68 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004daa:	4641      	mov	r1, r8
 8004dac:	4638      	mov	r0, r7
        color = newColor;
 8004dae:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8004db2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8004db6:	f00b fc65 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004dba:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004dbe:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8004dc2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004dc6:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8004f10 <_ZN19MeasurementViewBaseC1Ev+0x448>
 8004dca:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8004dce:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8004dd0:	a90a      	add	r1, sp, #40	; 0x28
 8004dd2:	4640      	mov	r0, r8
 8004dd4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004dd8:	f00b feee 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ddc:	4641      	mov	r1, r8
 8004dde:	4630      	mov	r0, r6
 8004de0:	f009 fd36 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8004de4:	ee18 0a10 	vmov	r0, s16
 8004de8:	220c      	movs	r2, #12
 8004dea:	2132      	movs	r1, #50	; 0x32
 8004dec:	f7fd fb45 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004df0:	ee18 1a10 	vmov	r1, s16
 8004df4:	4638      	mov	r0, r7
        color = newColor;
 8004df6:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8004dfa:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8004dfe:	f00b fc41 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e02:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004e06:	ee18 3a10 	vmov	r3, s16
 8004e0a:	333c      	adds	r3, #60	; 0x3c
 8004e0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e10:	233d      	movs	r3, #61	; 0x3d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8004e12:	ee18 0a10 	vmov	r0, s16
 8004e16:	a90a      	add	r1, sp, #40	; 0x28
 8004e18:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004e1c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8004e20:	f00b feca 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004e24:	ee18 1a10 	vmov	r1, s16
 8004e28:	4630      	mov	r0, r6
 8004e2a:	f009 fd11 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8004e2e:	ee19 0a10 	vmov	r0, s18
 8004e32:	22f0      	movs	r2, #240	; 0xf0
 8004e34:	2121      	movs	r1, #33	; 0x21
 8004e36:	f7fd fb20 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8004e3a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004e3e:	aa0a      	add	r2, sp, #40	; 0x28
 8004e40:	f04f 0802 	mov.w	r8, #2
 8004e44:	a909      	add	r1, sp, #36	; 0x24
 8004e46:	ee19 0a10 	vmov	r0, s18
 8004e4a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8004e4e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8004e52:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004e56:	f00c f894 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8004e5a:	233b      	movs	r3, #59	; 0x3b
 8004e5c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8004e60:	3710      	adds	r7, #16
        updateTextPosition();
 8004e62:	ee19 0a10 	vmov	r0, s18
 8004e66:	f7fd fb5d 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004e6a:	ee19 1a10 	vmov	r1, s18
 8004e6e:	4630      	mov	r0, r6
        colorPressed = col;
 8004e70:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8004e74:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8004e78:	f009 fcea 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8004e7c:	ee19 0a90 	vmov	r0, s19
 8004e80:	22aa      	movs	r2, #170	; 0xaa
 8004e82:	2121      	movs	r1, #33	; 0x21
 8004e84:	f7fd faf9 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004e88:	aa0a      	add	r2, sp, #40	; 0x28
 8004e8a:	a909      	add	r1, sp, #36	; 0x24
 8004e8c:	ee19 0a90 	vmov	r0, s19
 8004e90:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8004e94:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8004e98:	f00c f873 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004e9c:	233a      	movs	r3, #58	; 0x3a
 8004e9e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8004ea2:	ee19 0a90 	vmov	r0, s19
 8004ea6:	f7fd fb3d 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004eaa:	ee19 1a90 	vmov	r1, s19
 8004eae:	4630      	mov	r0, r6
        colorPressed = col;
 8004eb0:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8004eb4:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8004eb8:	f009 fcca 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8004ebc:	ee1a 0a10 	vmov	r0, s20
 8004ec0:	2264      	movs	r2, #100	; 0x64
 8004ec2:	2121      	movs	r1, #33	; 0x21
 8004ec4:	f7fd fad9 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004ec8:	aa0a      	add	r2, sp, #40	; 0x28
 8004eca:	a909      	add	r1, sp, #36	; 0x24
 8004ecc:	ee1a 0a10 	vmov	r0, s20
 8004ed0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8004ed4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8004ed8:	f00c f853 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004edc:	2339      	movs	r3, #57	; 0x39
        updateTextPosition();
 8004ede:	ee1a 0a10 	vmov	r0, s20
 8004ee2:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8004ee6:	f7fd fb1d 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004eea:	4630      	mov	r0, r6
        colorPressed = col;
 8004eec:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8004ef0:	ee1a 1a10 	vmov	r1, s20
 8004ef4:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8004ef8:	f009 fcaa 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004efc:	4620      	mov	r0, r4
 8004efe:	b00d      	add	sp, #52	; 0x34
 8004f00:	ecbd 8b06 	vpop	{d8-d10}
 8004f04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f08:	20013820 	.word	0x20013820
 8004f0c:	08028fb6 	.word	0x08028fb6
 8004f10:	0802902c 	.word	0x0802902c

08004f14 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8004f14:	4770      	bx	lr

08004f16 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004f16:	4770      	bx	lr

08004f18 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004f18:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004f1a:	68c2      	ldr	r2, [r0, #12]
 8004f1c:	6844      	ldr	r4, [r0, #4]
 8004f1e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004f20:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004f22:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004f26:	07d2      	lsls	r2, r2, #31
 8004f28:	bf48      	it	mi
 8004f2a:	5962      	ldrmi	r2, [r4, r5]
 8004f2c:	689b      	ldr	r3, [r3, #8]
    }
 8004f2e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004f30:	bf48      	it	mi
 8004f32:	58d3      	ldrmi	r3, [r2, r3]
 8004f34:	4718      	bx	r3

08004f36 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004f36:	6843      	ldr	r3, [r0, #4]
 8004f38:	b12b      	cbz	r3, 8004f46 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004f3a:	6883      	ldr	r3, [r0, #8]
 8004f3c:	b92b      	cbnz	r3, 8004f4a <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004f3e:	68c0      	ldr	r0, [r0, #12]
 8004f40:	f000 0001 	and.w	r0, r0, #1
 8004f44:	4770      	bx	lr
 8004f46:	4618      	mov	r0, r3
 8004f48:	4770      	bx	lr
 8004f4a:	2001      	movs	r0, #1
    }
 8004f4c:	4770      	bx	lr

08004f4e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004f4e:	b510      	push	{r4, lr}
 8004f50:	2110      	movs	r1, #16
 8004f52:	4604      	mov	r4, r0
 8004f54:	f021 fc73 	bl	802683e <_ZdlPvj>
 8004f58:	4620      	mov	r0, r4
 8004f5a:	bd10      	pop	{r4, pc}

08004f5c <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8004f5c:	b510      	push	{r4, lr}
 8004f5e:	4b03      	ldr	r3, [pc, #12]	; (8004f6c <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8004f60:	6003      	str	r3, [r0, #0]
 8004f62:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004f64:	f00d fa0a 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004f68:	4620      	mov	r0, r4
 8004f6a:	bd10      	pop	{r4, pc}
 8004f6c:	0802a658 	.word	0x0802a658

08004f70 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8004f70:	b507      	push	{r0, r1, r2, lr}
 8004f72:	4b07      	ldr	r3, [pc, #28]	; (8004f90 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8004f74:	6003      	str	r3, [r0, #0]
 8004f76:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004f78:	f00d fa00 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004f7c:	9801      	ldr	r0, [sp, #4]
 8004f7e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8004f82:	f021 fc5c 	bl	802683e <_ZdlPvj>
 8004f86:	9801      	ldr	r0, [sp, #4]
 8004f88:	b003      	add	sp, #12
 8004f8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8004f8e:	bf00      	nop
 8004f90:	0802a658 	.word	0x0802a658

08004f94 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8004f94:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8004f96:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8004f9a:	4299      	cmp	r1, r3
{
 8004f9c:	4604      	mov	r4, r0
 8004f9e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8004fa0:	d103      	bne.n	8004faa <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004fa2:	f00e feed 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8004fa6:	f7fd fffd 	bl	8002fa4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8004faa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004fae:	429d      	cmp	r5, r3
 8004fb0:	d103      	bne.n	8004fba <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8004fb2:	f00e fee5 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8004fb6:	f7fe f865 	bl	8003084 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8004fba:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8004fbe:	42a5      	cmp	r5, r4
 8004fc0:	d105      	bne.n	8004fce <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8004fc2:	f00e fedd 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8004fc6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8004fca:	f7fe b84b 	b.w	8003064 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8004fce:	bd38      	pop	{r3, r4, r5, pc}

08004fd0 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8004fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fd4:	ed2d 8b06 	vpush	{d8-d10}
 8004fd8:	4604      	mov	r4, r0
 8004fda:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8004fdc:	46a3      	mov	fp, r4
 8004fde:	2500      	movs	r5, #0
 8004fe0:	f010 fb4e 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 8004fe4:	4b66      	ldr	r3, [pc, #408]	; (8005180 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8004fe6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004fe8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8004fec:	2226      	movs	r2, #38	; 0x26
 8004fee:	4629      	mov	r1, r5
 8004ff0:	4658      	mov	r0, fp
 8004ff2:	f022 fc1a 	bl	802782a <memset>
 8004ff6:	4658      	mov	r0, fp
 8004ff8:	f7fd fa60 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8004ffc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005000:	26ff      	movs	r6, #255	; 0xff
 8005002:	4b60      	ldr	r3, [pc, #384]	; (8005184 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005004:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005006:	2226      	movs	r2, #38	; 0x26
 8005008:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800500c:	4629      	mov	r1, r5
 800500e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005012:	4650      	mov	r0, sl
 8005014:	66a5      	str	r5, [r4, #104]	; 0x68
 8005016:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800501a:	f022 fc06 	bl	802782a <memset>
 800501e:	4650      	mov	r0, sl
 8005020:	f7fd fa4c 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005024:	4b58      	ldr	r3, [pc, #352]	; (8005188 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005026:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005028:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800502c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005030:	a90a      	add	r1, sp, #40	; 0x28
 8005032:	4650      	mov	r0, sl
 8005034:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005038:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800503c:	f00c f997 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005040:	4648      	mov	r0, r9
 8005042:	f7fd fa4d 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005046:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800504a:	4b50      	ldr	r3, [pc, #320]	; (800518c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 800504c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005050:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005054:	4638      	mov	r0, r7
 8005056:	f00b f853 	bl	8010100 <_ZN8touchgfx4LineC1Ev>
 800505a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800505e:	4618      	mov	r0, r3
 8005060:	9303      	str	r3, [sp, #12]
 8005062:	f7fc f92d 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005066:	4b4a      	ldr	r3, [pc, #296]	; (8005190 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005068:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800506c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005070:	3324      	adds	r3, #36	; 0x24
 8005072:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005076:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800507a:	4640      	mov	r0, r8
 800507c:	f7fd fa30 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005080:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005084:	4618      	mov	r0, r3
 8005086:	ee08 3a10 	vmov	s16, r3
 800508a:	f7fd fa29 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800508e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005092:	4618      	mov	r0, r3
 8005094:	ee08 3a90 	vmov	s17, r3
 8005098:	f7fd fa22 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800509c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80050a0:	4618      	mov	r0, r3
 80050a2:	ee09 3a10 	vmov	s18, r3
 80050a6:	f00c faa3 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80050aa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80050ae:	4618      	mov	r0, r3
 80050b0:	ee09 3a90 	vmov	s19, r3
 80050b4:	f00c fa9c 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80050b8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80050bc:	4618      	mov	r0, r3
 80050be:	ee0a 3a10 	vmov	s20, r3
 80050c2:	f00c fa95 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80050c6:	4a33      	ldr	r2, [pc, #204]	; (8005194 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 80050c8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80050cc:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80050d0:	4a31      	ldr	r2, [pc, #196]	; (8005198 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80050d2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80050d6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80050da:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80050de:	f00d f943 	bl	8012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80050e2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80050e6:	462a      	mov	r2, r5
 80050e8:	4658      	mov	r0, fp
 80050ea:	9300      	str	r3, [sp, #0]
 80050ec:	4629      	mov	r1, r5
 80050ee:	23f0      	movs	r3, #240	; 0xf0
 80050f0:	f7fd f9d0 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80050f4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80050f6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80050fa:	66a3      	str	r3, [r4, #104]	; 0x68
 80050fc:	4659      	mov	r1, fp
 80050fe:	4630      	mov	r0, r6
 8005100:	f009 fba6 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005104:	462a      	mov	r2, r5
 8005106:	4650      	mov	r0, sl
 8005108:	4629      	mov	r1, r5
 800510a:	f7fd f9b6 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800510e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005110:	4650      	mov	r0, sl
 8005112:	a90a      	add	r1, sp, #40	; 0x28
 8005114:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005118:	f00c f929 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800511c:	4651      	mov	r1, sl
 800511e:	4630      	mov	r0, r6
 8005120:	f009 fb96 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005124:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005128:	2156      	movs	r1, #86	; 0x56
 800512a:	4648      	mov	r0, r9
 800512c:	f7fd f9a5 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005130:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005134:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005138:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800513c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005140:	4650      	mov	r0, sl
 8005142:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005146:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800514a:	4649      	mov	r1, r9
 800514c:	4798      	blx	r3
 800514e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005152:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005156:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800515a:	4b10      	ldr	r3, [pc, #64]	; (800519c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 800515c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 800515e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005162:	b92b      	cbnz	r3, 8005170 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005164:	4b0e      	ldr	r3, [pc, #56]	; (80051a0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005166:	4a0f      	ldr	r2, [pc, #60]	; (80051a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005168:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800516a:	480f      	ldr	r0, [pc, #60]	; (80051a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 800516c:	f022 f958 	bl	8027420 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005170:	4b0e      	ldr	r3, [pc, #56]	; (80051ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005172:	881b      	ldrh	r3, [r3, #0]
 8005174:	2b04      	cmp	r3, #4
 8005176:	d81d      	bhi.n	80051b4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005178:	4b0d      	ldr	r3, [pc, #52]	; (80051b0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 800517a:	4a0a      	ldr	r2, [pc, #40]	; (80051a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 800517c:	2161      	movs	r1, #97	; 0x61
 800517e:	e7f4      	b.n	800516a <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005180:	0802a658 	.word	0x0802a658
 8005184:	0802b48c 	.word	0x0802b48c
 8005188:	0802b654 	.word	0x0802b654
 800518c:	0802903c 	.word	0x0802903c
 8005190:	0802b1c0 	.word	0x0802b1c0
 8005194:	0802a640 	.word	0x0802a640
 8005198:	08004f95 	.word	0x08004f95
 800519c:	20013814 	.word	0x20013814
 80051a0:	08028e7c 	.word	0x08028e7c
 80051a4:	08028f7e 	.word	0x08028f7e
 80051a8:	08028ef9 	.word	0x08028ef9
 80051ac:	20013818 	.word	0x20013818
 80051b0:	08028f40 	.word	0x08028f40
        return texts->getText(typedTextId);
 80051b4:	4b93      	ldr	r3, [pc, #588]	; (8005404 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 80051b6:	2104      	movs	r1, #4
 80051b8:	6818      	ldr	r0, [r3, #0]
 80051ba:	f001 feff 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 80051be:	4a92      	ldr	r2, [pc, #584]	; (8005408 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 80051c0:	4603      	mov	r3, r0
 80051c2:	2104      	movs	r1, #4
 80051c4:	4650      	mov	r0, sl
 80051c6:	f011 ff3f 	bl	8017048 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80051ca:	4648      	mov	r0, r9
        wc1 = value;
 80051cc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80051d0:	f00b fcd2 	bl	8010b78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80051d4:	4b8d      	ldr	r3, [pc, #564]	; (800540c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 80051d6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 80051d8:	a90a      	add	r1, sp, #40	; 0x28
 80051da:	2305      	movs	r3, #5
 80051dc:	4648      	mov	r0, r9
 80051de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80051e2:	f00b fce9 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80051e6:	4649      	mov	r1, r9
 80051e8:	4630      	mov	r0, r6
 80051ea:	f009 fb31 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80051ee:	230a      	movs	r3, #10
 80051f0:	9300      	str	r3, [sp, #0]
 80051f2:	2232      	movs	r2, #50	; 0x32
 80051f4:	23f0      	movs	r3, #240	; 0xf0
 80051f6:	4629      	mov	r1, r5
 80051f8:	4638      	mov	r0, r7
 80051fa:	f7fd f94b 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80051fe:	9b03      	ldr	r3, [sp, #12]
 8005200:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005204:	22a0      	movs	r2, #160	; 0xa0
 8005206:	4611      	mov	r1, r2
 8005208:	4638      	mov	r0, r7
 800520a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800520e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005212:	f00b f88b 	bl	801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005216:	22a0      	movs	r2, #160	; 0xa0
 8005218:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800521c:	4638      	mov	r0, r7
 800521e:	f00b f890 	bl	8010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005222:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005226:	2b20      	cmp	r3, #32
 8005228:	d005      	beq.n	8005236 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 800522a:	2320      	movs	r3, #32
 800522c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005230:	4638      	mov	r0, r7
 8005232:	f00a ff85 	bl	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005236:	4638      	mov	r0, r7
 8005238:	2101      	movs	r1, #1
 800523a:	f00b f88d 	bl	8010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800523e:	4639      	mov	r1, r7
 8005240:	4630      	mov	r0, r6
 8005242:	ad04      	add	r5, sp, #16
        color = newColor;
 8005244:	f04f 37ff 	mov.w	r7, #4294967295
 8005248:	f009 fb02 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800524c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 36);
 8005250:	2224      	movs	r2, #36	; 0x24
 8005252:	4640      	mov	r0, r8
 8005254:	2145      	movs	r1, #69	; 0x45
 8005256:	f7fd f910 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800525a:	4641      	mov	r1, r8
 800525c:	4628      	mov	r0, r5
        color = newColor;
 800525e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005262:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005266:	f00b fa0d 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800526a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800526e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005272:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005276:	f8df 9194 	ldr.w	r9, [pc, #404]	; 800540c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 800527a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800527e:	232a      	movs	r3, #42	; 0x2a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005280:	a90a      	add	r1, sp, #40	; 0x28
 8005282:	4640      	mov	r0, r8
 8005284:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005288:	f00b fc96 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800528c:	4641      	mov	r1, r8
 800528e:	4630      	mov	r0, r6
 8005290:	f009 fade 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8005294:	ee18 0a10 	vmov	r0, s16
 8005298:	220c      	movs	r2, #12
 800529a:	2132      	movs	r1, #50	; 0x32
 800529c:	f7fd f8ed 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80052a0:	ee18 1a10 	vmov	r1, s16
 80052a4:	4628      	mov	r0, r5
        color = newColor;
 80052a6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80052aa:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80052ae:	f00b f9e9 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80052b2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80052b6:	ee18 3a10 	vmov	r3, s16
 80052ba:	333c      	adds	r3, #60	; 0x3c
 80052bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80052c0:	2329      	movs	r3, #41	; 0x29
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80052c2:	ee18 0a10 	vmov	r0, s16
 80052c6:	a90a      	add	r1, sp, #40	; 0x28
 80052c8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80052cc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80052d0:	f00b fc72 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80052d4:	ee18 1a10 	vmov	r1, s16
 80052d8:	4630      	mov	r0, r6
 80052da:	f009 fab9 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 80052de:	ee18 0a90 	vmov	r0, s17
 80052e2:	223c      	movs	r2, #60	; 0x3c
 80052e4:	2121      	movs	r1, #33	; 0x21
 80052e6:	f7fd f8c8 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80052ea:	ee18 1a90 	vmov	r1, s17
 80052ee:	4628      	mov	r0, r5
        color = newColor;
 80052f0:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80052f4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80052f8:	f00b f9c4 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80052fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005300:	ee18 3a90 	vmov	r3, s17
 8005304:	333c      	adds	r3, #60	; 0x3c
 8005306:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800530a:	2313      	movs	r3, #19
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 800530c:	ee18 0a90 	vmov	r0, s17
 8005310:	a90a      	add	r1, sp, #40	; 0x28
 8005312:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005316:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800531a:	f00b fc4d 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800531e:	ee18 1a90 	vmov	r1, s17
 8005322:	4630      	mov	r0, r6
 8005324:	f009 fa94 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005328:	ee19 0a10 	vmov	r0, s18
 800532c:	22f0      	movs	r2, #240	; 0xf0
 800532e:	2121      	movs	r1, #33	; 0x21
 8005330:	f7fd f8a3 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005334:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005338:	aa0a      	add	r2, sp, #40	; 0x28
 800533a:	f04f 0802 	mov.w	r8, #2
 800533e:	a909      	add	r1, sp, #36	; 0x24
 8005340:	ee19 0a10 	vmov	r0, s18
 8005344:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005348:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800534c:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005350:	f00b fe17 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005354:	2328      	movs	r3, #40	; 0x28
 8005356:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800535a:	3510      	adds	r5, #16
        updateTextPosition();
 800535c:	ee19 0a10 	vmov	r0, s18
 8005360:	f7fd f8e0 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005364:	ee19 1a10 	vmov	r1, s18
 8005368:	4630      	mov	r0, r6
        colorPressed = col;
 800536a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800536e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005372:	f009 fa6d 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005376:	ee19 0a90 	vmov	r0, s19
 800537a:	22aa      	movs	r2, #170	; 0xaa
 800537c:	2121      	movs	r1, #33	; 0x21
 800537e:	f7fd f87c 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005382:	aa0a      	add	r2, sp, #40	; 0x28
 8005384:	a909      	add	r1, sp, #36	; 0x24
 8005386:	ee19 0a90 	vmov	r0, s19
 800538a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800538e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005392:	f00b fdf6 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005396:	2327      	movs	r3, #39	; 0x27
 8005398:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800539c:	ee19 0a90 	vmov	r0, s19
 80053a0:	f7fd f8c0 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80053a4:	ee19 1a90 	vmov	r1, s19
 80053a8:	4630      	mov	r0, r6
        colorPressed = col;
 80053aa:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80053ae:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80053b2:	f009 fa4d 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80053b6:	ee1a 0a10 	vmov	r0, s20
 80053ba:	2264      	movs	r2, #100	; 0x64
 80053bc:	2121      	movs	r1, #33	; 0x21
 80053be:	f7fd f85c 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80053c2:	aa0a      	add	r2, sp, #40	; 0x28
 80053c4:	a909      	add	r1, sp, #36	; 0x24
 80053c6:	ee1a 0a10 	vmov	r0, s20
 80053ca:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80053ce:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80053d2:	f00b fdd6 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80053d6:	2326      	movs	r3, #38	; 0x26
        updateTextPosition();
 80053d8:	ee1a 0a10 	vmov	r0, s20
 80053dc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80053e0:	f7fd f8a0 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80053e4:	4630      	mov	r0, r6
        colorPressed = col;
 80053e6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80053ea:	ee1a 1a10 	vmov	r1, s20
 80053ee:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80053f2:	f009 fa2d 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80053f6:	4620      	mov	r0, r4
 80053f8:	b00d      	add	sp, #52	; 0x34
 80053fa:	ecbd 8b06 	vpop	{d8-d10}
 80053fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005402:	bf00      	nop
 8005404:	20013820 	.word	0x20013820
 8005408:	08028fb6 	.word	0x08028fb6
 800540c:	0802902c 	.word	0x0802902c

08005410 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005410:	4770      	bx	lr

08005412 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005412:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005414:	68c2      	ldr	r2, [r0, #12]
 8005416:	6844      	ldr	r4, [r0, #4]
 8005418:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800541a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800541c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005420:	07d2      	lsls	r2, r2, #31
 8005422:	bf48      	it	mi
 8005424:	5962      	ldrmi	r2, [r4, r5]
 8005426:	689b      	ldr	r3, [r3, #8]
    }
 8005428:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800542a:	bf48      	it	mi
 800542c:	58d3      	ldrmi	r3, [r2, r3]
 800542e:	4718      	bx	r3

08005430 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005430:	6843      	ldr	r3, [r0, #4]
 8005432:	b12b      	cbz	r3, 8005440 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005434:	6883      	ldr	r3, [r0, #8]
 8005436:	b92b      	cbnz	r3, 8005444 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005438:	68c0      	ldr	r0, [r0, #12]
 800543a:	f000 0001 	and.w	r0, r0, #1
 800543e:	4770      	bx	lr
 8005440:	4618      	mov	r0, r3
 8005442:	4770      	bx	lr
 8005444:	2001      	movs	r0, #1
    }
 8005446:	4770      	bx	lr

08005448 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005448:	b510      	push	{r4, lr}
 800544a:	2110      	movs	r1, #16
 800544c:	4604      	mov	r4, r0
 800544e:	f021 f9f6 	bl	802683e <_ZdlPvj>
 8005452:	4620      	mov	r0, r4
 8005454:	bd10      	pop	{r4, pc}

08005456 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8005456:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800545a:	f001 be55 	b.w	8007108 <_ZN17Gauge_with_Values10initializeEv>

0800545e <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800545e:	3098      	adds	r0, #152	; 0x98
 8005460:	4288      	cmp	r0, r1
{
 8005462:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8005464:	d105      	bne.n	8005472 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005466:	f00e fc8b 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800546a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800546e:	f7fd bde9 	b.w	8003044 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8005472:	bd08      	pop	{r3, pc}

08005474 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8005474:	b510      	push	{r4, lr}
 8005476:	4b07      	ldr	r3, [pc, #28]	; (8005494 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8005478:	6003      	str	r3, [r0, #0]
 800547a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800547c:	f00c ff7e 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8005480:	4b05      	ldr	r3, [pc, #20]	; (8005498 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 8005482:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8005486:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800548a:	f7fe fe21 	bl	80040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800548e:	4620      	mov	r0, r4
 8005490:	bd10      	pop	{r4, pc}
 8005492:	bf00      	nop
 8005494:	0802a6a4 	.word	0x0802a6a4
 8005498:	0802ab20 	.word	0x0802ab20

0800549c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800549c:	b510      	push	{r4, lr}
 800549e:	4604      	mov	r4, r0
}
 80054a0:	f7ff ffe8 	bl	8005474 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80054a4:	4620      	mov	r0, r4
 80054a6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80054aa:	f021 f9c8 	bl	802683e <_ZdlPvj>
 80054ae:	4620      	mov	r0, r4
 80054b0:	bd10      	pop	{r4, pc}
	...

080054b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80054b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054b8:	ed2d 8b04 	vpush	{d8-d9}
 80054bc:	4604      	mov	r4, r0
 80054be:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80054c0:	46a1      	mov	r9, r4
 80054c2:	2500      	movs	r5, #0
 80054c4:	f010 f8dc 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 80054c8:	4bac      	ldr	r3, [pc, #688]	; (800577c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 80054ca:	63e5      	str	r5, [r4, #60]	; 0x3c
 80054cc:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80054d0:	2226      	movs	r2, #38	; 0x26
 80054d2:	4629      	mov	r1, r5
 80054d4:	4648      	mov	r0, r9
 80054d6:	f022 f9a8 	bl	802782a <memset>
 80054da:	4648      	mov	r0, r9
 80054dc:	f7fc ffee 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80054e0:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80054e4:	26ff      	movs	r6, #255	; 0xff
 80054e6:	4ba6      	ldr	r3, [pc, #664]	; (8005780 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 80054e8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80054ea:	2226      	movs	r2, #38	; 0x26
 80054ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80054f0:	4629      	mov	r1, r5
 80054f2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80054f6:	4640      	mov	r0, r8
 80054f8:	66a5      	str	r5, [r4, #104]	; 0x68
 80054fa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80054fe:	f022 f994 	bl	802782a <memset>
 8005502:	4640      	mov	r0, r8
 8005504:	f7fc ffda 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005508:	4b9e      	ldr	r3, [pc, #632]	; (8005784 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 800550a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800550c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005510:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005514:	a90a      	add	r1, sp, #40	; 0x28
 8005516:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8005518:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800551c:	f00b ff27 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005520:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8005524:	4618      	mov	r0, r3
 8005526:	ee08 3a10 	vmov	s16, r3
 800552a:	f00c f861 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800552e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8005532:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8005536:	4618      	mov	r0, r3
 8005538:	ee08 3a90 	vmov	s17, r3
 800553c:	f7fc ffd0 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005540:	4638      	mov	r0, r7
 8005542:	f00a fddd 	bl	8010100 <_ZN8touchgfx4LineC1Ev>
 8005546:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800554a:	4618      	mov	r0, r3
 800554c:	9303      	str	r3, [sp, #12]
 800554e:	f7fb feb7 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005552:	4b8d      	ldr	r3, [pc, #564]	; (8005788 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 8005554:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8005558:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 800555c:	3324      	adds	r3, #36	; 0x24
 800555e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8005562:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8005566:	4658      	mov	r0, fp
 8005568:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 800556c:	f7fc ffb8 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005570:	4650      	mov	r0, sl
 8005572:	f7fc ffb5 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005576:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800557a:	4618      	mov	r0, r3
 800557c:	ee09 3a10 	vmov	s18, r3
 8005580:	f001 fdb8 	bl	80070f4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005584:	4a81      	ldr	r2, [pc, #516]	; (800578c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 8005586:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800558a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800558e:	4a80      	ldr	r2, [pc, #512]	; (8005790 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005590:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005594:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8005598:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800559c:	f00c fee4 	bl	8012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80055a0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80055a4:	462a      	mov	r2, r5
 80055a6:	4648      	mov	r0, r9
 80055a8:	9300      	str	r3, [sp, #0]
 80055aa:	4629      	mov	r1, r5
 80055ac:	23f0      	movs	r3, #240	; 0xf0
 80055ae:	f7fc ff71 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80055b2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80055b4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80055b8:	66a3      	str	r3, [r4, #104]	; 0x68
 80055ba:	4649      	mov	r1, r9
 80055bc:	4630      	mov	r0, r6
 80055be:	f009 f947 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80055c2:	462a      	mov	r2, r5
 80055c4:	4640      	mov	r0, r8
 80055c6:	4629      	mov	r1, r5
 80055c8:	f7fc ff57 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80055cc:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80055ce:	4640      	mov	r0, r8
 80055d0:	a90a      	add	r1, sp, #40	; 0x28
 80055d2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80055d6:	f00b feca 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80055da:	4641      	mov	r1, r8
 80055dc:	4630      	mov	r0, r6
 80055de:	f009 f937 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80055e2:	ee18 0a10 	vmov	r0, s16
 80055e6:	f240 1201 	movw	r2, #257	; 0x101
 80055ea:	2121      	movs	r1, #33	; 0x21
 80055ec:	f7fc ff45 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80055f0:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80055f2:	aa0a      	add	r2, sp, #40	; 0x28
 80055f4:	a909      	add	r1, sp, #36	; 0x24
 80055f6:	ee18 0a10 	vmov	r0, s16
 80055fa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80055fe:	2302      	movs	r3, #2
 8005600:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005604:	f00b fcbd 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005608:	230f      	movs	r3, #15
        updateTextPosition();
 800560a:	ee18 0a10 	vmov	r0, s16
 800560e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8005612:	f7fc ff87 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8005616:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800561a:	3314      	adds	r3, #20
        color = col;
 800561c:	f04f 39ff 	mov.w	r9, #4294967295
 8005620:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8005624:	ee18 1a10 	vmov	r1, s16
 8005628:	4630      	mov	r0, r6
        colorPressed = col;
 800562a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800562e:	f009 f90f 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005632:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8005636:	223c      	movs	r2, #60	; 0x3c
 8005638:	ee18 0a90 	vmov	r0, s17
 800563c:	2117      	movs	r1, #23
 800563e:	f7fc ff1c 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005642:	ee18 1a90 	vmov	r1, s17
 8005646:	4640      	mov	r0, r8
        color = newColor;
 8005648:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800564c:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005650:	f00b f818 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005654:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005658:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800565c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8005660:	4b4c      	ldr	r3, [pc, #304]	; (8005794 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8005662:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8005664:	ee18 0a90 	vmov	r0, s17
 8005668:	2310      	movs	r3, #16
 800566a:	a90a      	add	r1, sp, #40	; 0x28
 800566c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005670:	f00b faa2 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005674:	ee18 1a90 	vmov	r1, s17
 8005678:	4630      	mov	r0, r6
 800567a:	f009 f8e9 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800567e:	230a      	movs	r3, #10
 8005680:	9300      	str	r3, [sp, #0]
 8005682:	2232      	movs	r2, #50	; 0x32
 8005684:	23f0      	movs	r3, #240	; 0xf0
 8005686:	4629      	mov	r1, r5
 8005688:	4638      	mov	r0, r7
 800568a:	f7fc ff03 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 800568e:	9b03      	ldr	r3, [sp, #12]
 8005690:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005694:	22a0      	movs	r2, #160	; 0xa0
 8005696:	4611      	mov	r1, r2
 8005698:	4638      	mov	r0, r7
 800569a:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800569e:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80056a2:	f00a fe43 	bl	801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80056a6:	22a0      	movs	r2, #160	; 0xa0
 80056a8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80056ac:	4638      	mov	r0, r7
 80056ae:	f00a fe48 	bl	8010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80056b2:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80056b6:	2b20      	cmp	r3, #32
 80056b8:	d005      	beq.n	80056c6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80056ba:	2320      	movs	r3, #32
 80056bc:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80056c0:	4638      	mov	r0, r7
 80056c2:	f00a fd3d 	bl	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80056c6:	4638      	mov	r0, r7
 80056c8:	2101      	movs	r1, #1
 80056ca:	f00a fe45 	bl	8010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80056ce:	4639      	mov	r1, r7
 80056d0:	4630      	mov	r0, r6
 80056d2:	f009 f8bd 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80056d6:	2500      	movs	r5, #0
    textArea2.setXY(69, 36);
 80056d8:	2224      	movs	r2, #36	; 0x24
 80056da:	4658      	mov	r0, fp
        color = newColor;
 80056dc:	f04f 39ff 	mov.w	r9, #4294967295
 80056e0:	2145      	movs	r1, #69	; 0x45
 80056e2:	f7fc feca 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80056e6:	4659      	mov	r1, fp
 80056e8:	4640      	mov	r0, r8
        color = newColor;
 80056ea:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80056ee:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80056f2:	f00a ffc7 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80056f6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80056fa:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80056fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005702:	4f24      	ldr	r7, [pc, #144]	; (8005794 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8005704:	970a      	str	r7, [sp, #40]	; 0x28
 8005706:	2311      	movs	r3, #17
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8005708:	a90a      	add	r1, sp, #40	; 0x28
 800570a:	4658      	mov	r0, fp
 800570c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005710:	f00b fa52 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005714:	4659      	mov	r1, fp
 8005716:	4630      	mov	r0, r6
 8005718:	f009 f89a 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 800571c:	220c      	movs	r2, #12
 800571e:	4650      	mov	r0, sl
 8005720:	2132      	movs	r1, #50	; 0x32
 8005722:	f7fc feaa 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005726:	4651      	mov	r1, sl
 8005728:	4640      	mov	r0, r8
        color = newColor;
 800572a:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800572e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8005732:	f00a ffa7 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005736:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800573a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800573e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005742:	2312      	movs	r3, #18
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8005744:	a90a      	add	r1, sp, #40	; 0x28
 8005746:	4650      	mov	r0, sl
 8005748:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800574c:	970a      	str	r7, [sp, #40]	; 0x28
 800574e:	f00b fa33 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005752:	4651      	mov	r1, sl
 8005754:	4630      	mov	r0, r6
 8005756:	f009 f87b 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800575a:	ee19 0a10 	vmov	r0, s18
 800575e:	224e      	movs	r2, #78	; 0x4e
 8005760:	4629      	mov	r1, r5
 8005762:	f7fc fe8a 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005766:	4630      	mov	r0, r6
 8005768:	ee19 1a10 	vmov	r1, s18
 800576c:	f009 f870 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005770:	4620      	mov	r0, r4
 8005772:	b00d      	add	sp, #52	; 0x34
 8005774:	ecbd 8b04 	vpop	{d8-d9}
 8005778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800577c:	0802a6a4 	.word	0x0802a6a4
 8005780:	0802b48c 	.word	0x0802b48c
 8005784:	0802b654 	.word	0x0802b654
 8005788:	0802b1c0 	.word	0x0802b1c0
 800578c:	0802a68c 	.word	0x0802a68c
 8005790:	0800545f 	.word	0x0800545f
 8005794:	0802902c 	.word	0x0802902c

08005798 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005798:	4770      	bx	lr

0800579a <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800579a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800579c:	68c2      	ldr	r2, [r0, #12]
 800579e:	6844      	ldr	r4, [r0, #4]
 80057a0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80057a2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80057a4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80057a8:	07d2      	lsls	r2, r2, #31
 80057aa:	bf48      	it	mi
 80057ac:	5962      	ldrmi	r2, [r4, r5]
 80057ae:	689b      	ldr	r3, [r3, #8]
    }
 80057b0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80057b2:	bf48      	it	mi
 80057b4:	58d3      	ldrmi	r3, [r2, r3]
 80057b6:	4718      	bx	r3

080057b8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80057b8:	6843      	ldr	r3, [r0, #4]
 80057ba:	b12b      	cbz	r3, 80057c8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80057bc:	6883      	ldr	r3, [r0, #8]
 80057be:	b92b      	cbnz	r3, 80057cc <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80057c0:	68c0      	ldr	r0, [r0, #12]
 80057c2:	f000 0001 	and.w	r0, r0, #1
 80057c6:	4770      	bx	lr
 80057c8:	4618      	mov	r0, r3
 80057ca:	4770      	bx	lr
 80057cc:	2001      	movs	r0, #1
    }
 80057ce:	4770      	bx	lr

080057d0 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80057d0:	b510      	push	{r4, lr}
 80057d2:	2110      	movs	r1, #16
 80057d4:	4604      	mov	r4, r0
 80057d6:	f021 f832 	bl	802683e <_ZdlPvj>
 80057da:	4620      	mov	r0, r4
 80057dc:	bd10      	pop	{r4, pc}

080057de <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80057de:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80057e2:	f001 bc91 	b.w	8007108 <_ZN17Gauge_with_Values10initializeEv>

080057e6 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80057e6:	3098      	adds	r0, #152	; 0x98
 80057e8:	4288      	cmp	r0, r1
{
 80057ea:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80057ec:	d105      	bne.n	80057fa <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80057ee:	f00e fac7 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80057f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80057f6:	f7fd bc25 	b.w	8003044 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80057fa:	bd08      	pop	{r3, pc}

080057fc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80057fc:	b510      	push	{r4, lr}
 80057fe:	4b07      	ldr	r3, [pc, #28]	; (800581c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8005800:	6003      	str	r3, [r0, #0]
 8005802:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005804:	f00c fdba 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8005808:	4b05      	ldr	r3, [pc, #20]	; (8005820 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 800580a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800580e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8005812:	f7fe fc5d 	bl	80040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8005816:	4620      	mov	r0, r4
 8005818:	bd10      	pop	{r4, pc}
 800581a:	bf00      	nop
 800581c:	0802a6f0 	.word	0x0802a6f0
 8005820:	0802ab20 	.word	0x0802ab20

08005824 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8005824:	b510      	push	{r4, lr}
 8005826:	4604      	mov	r4, r0
}
 8005828:	f7ff ffe8 	bl	80057fc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800582c:	4620      	mov	r0, r4
 800582e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8005832:	f021 f804 	bl	802683e <_ZdlPvj>
 8005836:	4620      	mov	r0, r4
 8005838:	bd10      	pop	{r4, pc}
	...

0800583c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 800583c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005840:	ed2d 8b04 	vpush	{d8-d9}
 8005844:	4604      	mov	r4, r0
 8005846:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8005848:	46a1      	mov	r9, r4
 800584a:	2500      	movs	r5, #0
 800584c:	f00f ff18 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 8005850:	4bac      	ldr	r3, [pc, #688]	; (8005b04 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 8005852:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005854:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8005858:	2226      	movs	r2, #38	; 0x26
 800585a:	4629      	mov	r1, r5
 800585c:	4648      	mov	r0, r9
 800585e:	f021 ffe4 	bl	802782a <memset>
 8005862:	4648      	mov	r0, r9
 8005864:	f7fc fe2a 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005868:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800586c:	26ff      	movs	r6, #255	; 0xff
 800586e:	4ba6      	ldr	r3, [pc, #664]	; (8005b08 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8005870:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005872:	2226      	movs	r2, #38	; 0x26
 8005874:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005878:	4629      	mov	r1, r5
 800587a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800587e:	4640      	mov	r0, r8
 8005880:	66a5      	str	r5, [r4, #104]	; 0x68
 8005882:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005886:	f021 ffd0 	bl	802782a <memset>
 800588a:	4640      	mov	r0, r8
 800588c:	f7fc fe16 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005890:	4b9e      	ldr	r3, [pc, #632]	; (8005b0c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 8005892:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005894:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005898:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800589c:	a90a      	add	r1, sp, #40	; 0x28
 800589e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80058a0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80058a4:	f00b fd63 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80058a8:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80058ac:	4618      	mov	r0, r3
 80058ae:	ee08 3a10 	vmov	s16, r3
 80058b2:	f00b fe9d 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80058b6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80058ba:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80058be:	4618      	mov	r0, r3
 80058c0:	ee08 3a90 	vmov	s17, r3
 80058c4:	f7fc fe0c 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80058c8:	4638      	mov	r0, r7
 80058ca:	f00a fc19 	bl	8010100 <_ZN8touchgfx4LineC1Ev>
 80058ce:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80058d2:	4618      	mov	r0, r3
 80058d4:	9303      	str	r3, [sp, #12]
 80058d6:	f7fb fcf3 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80058da:	4b8d      	ldr	r3, [pc, #564]	; (8005b10 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 80058dc:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80058e0:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80058e4:	3324      	adds	r3, #36	; 0x24
 80058e6:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80058ea:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80058ee:	4658      	mov	r0, fp
 80058f0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80058f4:	f7fc fdf4 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80058f8:	4650      	mov	r0, sl
 80058fa:	f7fc fdf1 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80058fe:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8005902:	4618      	mov	r0, r3
 8005904:	ee09 3a10 	vmov	s18, r3
 8005908:	f001 fbf4 	bl	80070f4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800590c:	4a81      	ldr	r2, [pc, #516]	; (8005b14 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800590e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005912:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8005916:	4a80      	ldr	r2, [pc, #512]	; (8005b18 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005918:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800591c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8005920:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8005924:	f00c fd20 	bl	8012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005928:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800592c:	462a      	mov	r2, r5
 800592e:	4648      	mov	r0, r9
 8005930:	9300      	str	r3, [sp, #0]
 8005932:	4629      	mov	r1, r5
 8005934:	23f0      	movs	r3, #240	; 0xf0
 8005936:	f7fc fdad 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 800593a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800593c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005940:	66a3      	str	r3, [r4, #104]	; 0x68
 8005942:	4649      	mov	r1, r9
 8005944:	4630      	mov	r0, r6
 8005946:	f008 ff83 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800594a:	462a      	mov	r2, r5
 800594c:	4640      	mov	r0, r8
 800594e:	4629      	mov	r1, r5
 8005950:	f7fc fd93 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005954:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005956:	4640      	mov	r0, r8
 8005958:	a90a      	add	r1, sp, #40	; 0x28
 800595a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800595e:	f00b fd06 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005962:	4641      	mov	r1, r8
 8005964:	4630      	mov	r0, r6
 8005966:	f008 ff73 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800596a:	ee18 0a10 	vmov	r0, s16
 800596e:	f240 1201 	movw	r2, #257	; 0x101
 8005972:	2121      	movs	r1, #33	; 0x21
 8005974:	f7fc fd81 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005978:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800597a:	aa0a      	add	r2, sp, #40	; 0x28
 800597c:	a909      	add	r1, sp, #36	; 0x24
 800597e:	ee18 0a10 	vmov	r0, s16
 8005982:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005986:	2302      	movs	r3, #2
 8005988:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800598c:	f00b faf9 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005990:	230b      	movs	r3, #11
        updateTextPosition();
 8005992:	ee18 0a10 	vmov	r0, s16
 8005996:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800599a:	f7fc fdc3 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800599e:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80059a2:	3314      	adds	r3, #20
        color = col;
 80059a4:	f04f 39ff 	mov.w	r9, #4294967295
 80059a8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80059ac:	ee18 1a10 	vmov	r1, s16
 80059b0:	4630      	mov	r0, r6
        colorPressed = col;
 80059b2:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80059b6:	f008 ff4b 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80059ba:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80059be:	223c      	movs	r2, #60	; 0x3c
 80059c0:	ee18 0a90 	vmov	r0, s17
 80059c4:	2117      	movs	r1, #23
 80059c6:	f7fc fd58 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80059ca:	ee18 1a90 	vmov	r1, s17
 80059ce:	4640      	mov	r0, r8
        color = newColor;
 80059d0:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80059d4:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80059d8:	f00a fe54 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059dc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80059e0:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80059e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80059e8:	4b4c      	ldr	r3, [pc, #304]	; (8005b1c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80059ea:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80059ec:	ee18 0a90 	vmov	r0, s17
 80059f0:	230c      	movs	r3, #12
 80059f2:	a90a      	add	r1, sp, #40	; 0x28
 80059f4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80059f8:	f00b f8de 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80059fc:	ee18 1a90 	vmov	r1, s17
 8005a00:	4630      	mov	r0, r6
 8005a02:	f008 ff25 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005a06:	230a      	movs	r3, #10
 8005a08:	9300      	str	r3, [sp, #0]
 8005a0a:	2232      	movs	r2, #50	; 0x32
 8005a0c:	23f0      	movs	r3, #240	; 0xf0
 8005a0e:	4629      	mov	r1, r5
 8005a10:	4638      	mov	r0, r7
 8005a12:	f7fc fd3f 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a16:	9b03      	ldr	r3, [sp, #12]
 8005a18:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005a1c:	22a0      	movs	r2, #160	; 0xa0
 8005a1e:	4611      	mov	r1, r2
 8005a20:	4638      	mov	r0, r7
 8005a22:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005a26:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8005a2a:	f00a fc7f 	bl	801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005a2e:	22a0      	movs	r2, #160	; 0xa0
 8005a30:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005a34:	4638      	mov	r0, r7
 8005a36:	f00a fc84 	bl	8010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005a3a:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8005a3e:	2b20      	cmp	r3, #32
 8005a40:	d005      	beq.n	8005a4e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8005a42:	2320      	movs	r3, #32
 8005a44:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8005a48:	4638      	mov	r0, r7
 8005a4a:	f00a fb79 	bl	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005a4e:	4638      	mov	r0, r7
 8005a50:	2101      	movs	r1, #1
 8005a52:	f00a fc81 	bl	8010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005a56:	4639      	mov	r1, r7
 8005a58:	4630      	mov	r0, r6
 8005a5a:	f008 fef9 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005a5e:	2500      	movs	r5, #0
    textArea2.setXY(69, 36);
 8005a60:	2224      	movs	r2, #36	; 0x24
 8005a62:	4658      	mov	r0, fp
        color = newColor;
 8005a64:	f04f 39ff 	mov.w	r9, #4294967295
 8005a68:	2145      	movs	r1, #69	; 0x45
 8005a6a:	f7fc fd06 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005a6e:	4659      	mov	r1, fp
 8005a70:	4640      	mov	r0, r8
        color = newColor;
 8005a72:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8005a76:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8005a7a:	f00a fe03 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a7e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005a82:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8005a86:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005a8a:	4f24      	ldr	r7, [pc, #144]	; (8005b1c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8005a8c:	970a      	str	r7, [sp, #40]	; 0x28
 8005a8e:	230d      	movs	r3, #13
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8005a90:	a90a      	add	r1, sp, #40	; 0x28
 8005a92:	4658      	mov	r0, fp
 8005a94:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005a98:	f00b f88e 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a9c:	4659      	mov	r1, fp
 8005a9e:	4630      	mov	r0, r6
 8005aa0:	f008 fed6 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8005aa4:	220c      	movs	r2, #12
 8005aa6:	4650      	mov	r0, sl
 8005aa8:	2132      	movs	r1, #50	; 0x32
 8005aaa:	f7fc fce6 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005aae:	4651      	mov	r1, sl
 8005ab0:	4640      	mov	r0, r8
        color = newColor;
 8005ab2:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8005ab6:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8005aba:	f00a fde3 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005abe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005ac2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8005ac6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005aca:	230e      	movs	r3, #14
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8005acc:	a90a      	add	r1, sp, #40	; 0x28
 8005ace:	4650      	mov	r0, sl
 8005ad0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005ad4:	970a      	str	r7, [sp, #40]	; 0x28
 8005ad6:	f00b f86f 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ada:	4651      	mov	r1, sl
 8005adc:	4630      	mov	r0, r6
 8005ade:	f008 feb7 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8005ae2:	ee19 0a10 	vmov	r0, s18
 8005ae6:	224e      	movs	r2, #78	; 0x4e
 8005ae8:	4629      	mov	r1, r5
 8005aea:	f7fc fcc6 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005aee:	4630      	mov	r0, r6
 8005af0:	ee19 1a10 	vmov	r1, s18
 8005af4:	f008 feac 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005af8:	4620      	mov	r0, r4
 8005afa:	b00d      	add	sp, #52	; 0x34
 8005afc:	ecbd 8b04 	vpop	{d8-d9}
 8005b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b04:	0802a6f0 	.word	0x0802a6f0
 8005b08:	0802b48c 	.word	0x0802b48c
 8005b0c:	0802b654 	.word	0x0802b654
 8005b10:	0802b1c0 	.word	0x0802b1c0
 8005b14:	0802a6d8 	.word	0x0802a6d8
 8005b18:	080057e7 	.word	0x080057e7
 8005b1c:	0802902c 	.word	0x0802902c

08005b20 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8005b20:	4770      	bx	lr

08005b22 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b22:	4770      	bx	lr

08005b24 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005b24:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b26:	68c2      	ldr	r2, [r0, #12]
 8005b28:	6844      	ldr	r4, [r0, #4]
 8005b2a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005b2c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005b2e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005b32:	07d2      	lsls	r2, r2, #31
 8005b34:	bf48      	it	mi
 8005b36:	5962      	ldrmi	r2, [r4, r5]
 8005b38:	689b      	ldr	r3, [r3, #8]
    }
 8005b3a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b3c:	bf48      	it	mi
 8005b3e:	58d3      	ldrmi	r3, [r2, r3]
 8005b40:	4718      	bx	r3

08005b42 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005b42:	6843      	ldr	r3, [r0, #4]
 8005b44:	b12b      	cbz	r3, 8005b52 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005b46:	6883      	ldr	r3, [r0, #8]
 8005b48:	b92b      	cbnz	r3, 8005b56 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005b4a:	68c0      	ldr	r0, [r0, #12]
 8005b4c:	f000 0001 	and.w	r0, r0, #1
 8005b50:	4770      	bx	lr
 8005b52:	4618      	mov	r0, r3
 8005b54:	4770      	bx	lr
 8005b56:	2001      	movs	r0, #1
    }
 8005b58:	4770      	bx	lr

08005b5a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b5a:	b510      	push	{r4, lr}
 8005b5c:	2110      	movs	r1, #16
 8005b5e:	4604      	mov	r4, r0
 8005b60:	f020 fe6d 	bl	802683e <_ZdlPvj>
 8005b64:	4620      	mov	r0, r4
 8005b66:	bd10      	pop	{r4, pc}

08005b68 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8005b68:	b510      	push	{r4, lr}
 8005b6a:	4b03      	ldr	r3, [pc, #12]	; (8005b78 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8005b6c:	6003      	str	r3, [r0, #0]
 8005b6e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b70:	f00c fc04 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b74:	4620      	mov	r0, r4
 8005b76:	bd10      	pop	{r4, pc}
 8005b78:	0802a73c 	.word	0x0802a73c

08005b7c <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8005b7c:	b507      	push	{r0, r1, r2, lr}
 8005b7e:	4b07      	ldr	r3, [pc, #28]	; (8005b9c <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8005b80:	6003      	str	r3, [r0, #0]
 8005b82:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b84:	f00c fbfa 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b88:	9801      	ldr	r0, [sp, #4]
 8005b8a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005b8e:	f020 fe56 	bl	802683e <_ZdlPvj>
 8005b92:	9801      	ldr	r0, [sp, #4]
 8005b94:	b003      	add	sp, #12
 8005b96:	f85d fb04 	ldr.w	pc, [sp], #4
 8005b9a:	bf00      	nop
 8005b9c:	0802a73c 	.word	0x0802a73c

08005ba0 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005ba0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005ba2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005ba6:	4299      	cmp	r1, r3
{
 8005ba8:	4604      	mov	r4, r0
 8005baa:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005bac:	d103      	bne.n	8005bb6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005bae:	f00e f8e7 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005bb2:	f7fd f9f7 	bl	8002fa4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8005bb6:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005bba:	429d      	cmp	r5, r3
 8005bbc:	d103      	bne.n	8005bc6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005bbe:	f00e f8df 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8005bc2:	f7fd fa0f 	bl	8002fe4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005bc6:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005bca:	42a5      	cmp	r5, r4
 8005bcc:	d105      	bne.n	8005bda <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005bce:	f00e f8d7 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8005bd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8005bd6:	f7fd ba15 	b.w	8003004 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8005bda:	bd38      	pop	{r3, r4, r5, pc}

08005bdc <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8005bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005be0:	ed2d 8b06 	vpush	{d8-d10}
 8005be4:	4604      	mov	r4, r0
 8005be6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8005be8:	46a3      	mov	fp, r4
 8005bea:	2500      	movs	r5, #0
 8005bec:	f00f fd48 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 8005bf0:	4b66      	ldr	r3, [pc, #408]	; (8005d8c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8005bf2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005bf4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005bf8:	2226      	movs	r2, #38	; 0x26
 8005bfa:	4629      	mov	r1, r5
 8005bfc:	4658      	mov	r0, fp
 8005bfe:	f021 fe14 	bl	802782a <memset>
 8005c02:	4658      	mov	r0, fp
 8005c04:	f7fc fc5a 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005c08:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005c0c:	26ff      	movs	r6, #255	; 0xff
 8005c0e:	4b60      	ldr	r3, [pc, #384]	; (8005d90 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8005c10:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005c12:	2226      	movs	r2, #38	; 0x26
 8005c14:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005c18:	4629      	mov	r1, r5
 8005c1a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005c1e:	4650      	mov	r0, sl
 8005c20:	66a5      	str	r5, [r4, #104]	; 0x68
 8005c22:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c26:	f021 fe00 	bl	802782a <memset>
 8005c2a:	4650      	mov	r0, sl
 8005c2c:	f7fc fc46 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8005c30:	4b58      	ldr	r3, [pc, #352]	; (8005d94 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8005c32:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005c34:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005c38:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005c3c:	a90a      	add	r1, sp, #40	; 0x28
 8005c3e:	4650      	mov	r0, sl
 8005c40:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005c44:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005c48:	f00b fb91 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005c4c:	4648      	mov	r0, r9
 8005c4e:	f7fc fc47 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005c52:	4b51      	ldr	r3, [pc, #324]	; (8005d98 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8005c54:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005c58:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005c5c:	4618      	mov	r0, r3
 8005c5e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005c62:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005c66:	ee08 3a90 	vmov	s17, r3
 8005c6a:	f7fc fc39 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005c6e:	4638      	mov	r0, r7
 8005c70:	f00a fa46 	bl	8010100 <_ZN8touchgfx4LineC1Ev>
 8005c74:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005c78:	4618      	mov	r0, r3
 8005c7a:	9303      	str	r3, [sp, #12]
 8005c7c:	f7fb fb20 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005c80:	4b46      	ldr	r3, [pc, #280]	; (8005d9c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8005c82:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005c86:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005c8a:	3324      	adds	r3, #36	; 0x24
 8005c8c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005c90:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005c94:	4640      	mov	r0, r8
 8005c96:	f7fc fc23 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005c9a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005c9e:	4618      	mov	r0, r3
 8005ca0:	ee08 3a10 	vmov	s16, r3
 8005ca4:	f7fc fc1c 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ca8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005cac:	4618      	mov	r0, r3
 8005cae:	ee09 3a10 	vmov	s18, r3
 8005cb2:	f00b fc9d 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005cb6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005cba:	4618      	mov	r0, r3
 8005cbc:	ee09 3a90 	vmov	s19, r3
 8005cc0:	f00b fc96 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005cc4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005cc8:	4618      	mov	r0, r3
 8005cca:	ee0a 3a10 	vmov	s20, r3
 8005cce:	f00b fc8f 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005cd2:	4a33      	ldr	r2, [pc, #204]	; (8005da0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8005cd4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005cd8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005cdc:	4a31      	ldr	r2, [pc, #196]	; (8005da4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005cde:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005ce2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005ce6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005cea:	f00c fb3d 	bl	8012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005cee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005cf2:	462a      	mov	r2, r5
 8005cf4:	4658      	mov	r0, fp
 8005cf6:	9300      	str	r3, [sp, #0]
 8005cf8:	4629      	mov	r1, r5
 8005cfa:	23f0      	movs	r3, #240	; 0xf0
 8005cfc:	f7fc fbca 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d00:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005d02:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005d06:	66a3      	str	r3, [r4, #104]	; 0x68
 8005d08:	4659      	mov	r1, fp
 8005d0a:	4630      	mov	r0, r6
 8005d0c:	f008 fda0 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005d10:	462a      	mov	r2, r5
 8005d12:	4650      	mov	r0, sl
 8005d14:	4629      	mov	r1, r5
 8005d16:	f7fc fbb0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005d1a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005d1c:	4650      	mov	r0, sl
 8005d1e:	a90a      	add	r1, sp, #40	; 0x28
 8005d20:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005d24:	f00b fb23 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005d28:	4651      	mov	r1, sl
 8005d2a:	4630      	mov	r0, r6
 8005d2c:	f008 fd90 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005d30:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005d34:	2156      	movs	r1, #86	; 0x56
 8005d36:	4648      	mov	r0, r9
 8005d38:	f7fc fb9f 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005d3c:	f04f 33ff 	mov.w	r3, #4294967295
 8005d40:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005d44:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005d48:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005d4c:	f10d 0b10 	add.w	fp, sp, #16
 8005d50:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005d54:	4649      	mov	r1, r9
 8005d56:	4658      	mov	r0, fp
 8005d58:	4798      	blx	r3
 8005d5a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005d5e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005d62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005d66:	4b10      	ldr	r3, [pc, #64]	; (8005da8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8005d68:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8005d6a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005d6e:	b92b      	cbnz	r3, 8005d7c <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8005d70:	4b0e      	ldr	r3, [pc, #56]	; (8005dac <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8005d72:	4a0f      	ldr	r2, [pc, #60]	; (8005db0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8005d74:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d76:	480f      	ldr	r0, [pc, #60]	; (8005db4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8005d78:	f021 fb52 	bl	8027420 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005d7c:	4b0e      	ldr	r3, [pc, #56]	; (8005db8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d7e:	881b      	ldrh	r3, [r3, #0]
 8005d80:	2b06      	cmp	r3, #6
 8005d82:	d81d      	bhi.n	8005dc0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8005d84:	4b0d      	ldr	r3, [pc, #52]	; (8005dbc <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8005d86:	4a0a      	ldr	r2, [pc, #40]	; (8005db0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8005d88:	2161      	movs	r1, #97	; 0x61
 8005d8a:	e7f4      	b.n	8005d76 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8005d8c:	0802a73c 	.word	0x0802a73c
 8005d90:	0802b48c 	.word	0x0802b48c
 8005d94:	0802b654 	.word	0x0802b654
 8005d98:	0802903c 	.word	0x0802903c
 8005d9c:	0802b1c0 	.word	0x0802b1c0
 8005da0:	0802a724 	.word	0x0802a724
 8005da4:	08005ba1 	.word	0x08005ba1
 8005da8:	20013814 	.word	0x20013814
 8005dac:	08028e7c 	.word	0x08028e7c
 8005db0:	08028f7e 	.word	0x08028f7e
 8005db4:	08028ef9 	.word	0x08028ef9
 8005db8:	20013818 	.word	0x20013818
 8005dbc:	08028f40 	.word	0x08028f40
        return texts->getText(typedTextId);
 8005dc0:	4b95      	ldr	r3, [pc, #596]	; (8006018 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8005dc2:	2106      	movs	r1, #6
 8005dc4:	6818      	ldr	r0, [r3, #0]
 8005dc6:	f001 f8f9 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8005dca:	4a94      	ldr	r2, [pc, #592]	; (800601c <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8005dcc:	4603      	mov	r3, r0
 8005dce:	2104      	movs	r1, #4
 8005dd0:	4650      	mov	r0, sl
 8005dd2:	f011 f939 	bl	8017048 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005dd6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005dda:	4648      	mov	r0, r9
 8005ddc:	f00a fecc 	bl	8010b78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005de0:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006020 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8005de4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005de8:	2307      	movs	r3, #7
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8005dea:	a90a      	add	r1, sp, #40	; 0x28
 8005dec:	4648      	mov	r0, r9
 8005dee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005df2:	f00a fee1 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005df6:	4649      	mov	r1, r9
 8005df8:	4630      	mov	r0, r6
 8005dfa:	f008 fd29 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8005dfe:	223c      	movs	r2, #60	; 0x3c
 8005e00:	ee18 0a90 	vmov	r0, s17
 8005e04:	2129      	movs	r1, #41	; 0x29
 8005e06:	f7fc fb38 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005e0a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005e0e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005e12:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005e16:	4658      	mov	r0, fp
        linespace = space;
 8005e18:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005e1c:	f00a fc32 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e20:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005e24:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005e28:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e2c:	2316      	movs	r3, #22
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8005e2e:	ee18 0a90 	vmov	r0, s17
 8005e32:	a90a      	add	r1, sp, #40	; 0x28
 8005e34:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e38:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005e3c:	f00a febc 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e40:	ee18 1a90 	vmov	r1, s17
 8005e44:	4630      	mov	r0, r6
 8005e46:	f008 fd03 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005e4a:	230a      	movs	r3, #10
 8005e4c:	9300      	str	r3, [sp, #0]
 8005e4e:	2232      	movs	r2, #50	; 0x32
 8005e50:	23f0      	movs	r3, #240	; 0xf0
 8005e52:	4629      	mov	r1, r5
 8005e54:	4638      	mov	r0, r7
 8005e56:	f7fc fb1d 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e5a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005e5e:	22a0      	movs	r2, #160	; 0xa0
 8005e60:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005e64:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005e68:	9b03      	ldr	r3, [sp, #12]
 8005e6a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005e6e:	4611      	mov	r1, r2
 8005e70:	4638      	mov	r0, r7
 8005e72:	f00a fa5b 	bl	801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005e76:	22a0      	movs	r2, #160	; 0xa0
 8005e78:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005e7c:	4638      	mov	r0, r7
 8005e7e:	f00a fa60 	bl	8010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005e82:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005e86:	2b20      	cmp	r3, #32
 8005e88:	d005      	beq.n	8005e96 <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005e8a:	2320      	movs	r3, #32
 8005e8c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005e90:	4638      	mov	r0, r7
 8005e92:	f00a f955 	bl	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005e96:	4638      	mov	r0, r7
 8005e98:	2101      	movs	r1, #1
 8005e9a:	f00a fa5d 	bl	8010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005e9e:	4639      	mov	r1, r7
 8005ea0:	4630      	mov	r0, r6
 8005ea2:	f008 fcd5 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005ea6:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005eaa:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 36);
 8005eac:	2224      	movs	r2, #36	; 0x24
 8005eae:	4640      	mov	r0, r8
        linespace = space;
 8005eb0:	f04f 0a00 	mov.w	sl, #0
 8005eb4:	2145      	movs	r1, #69	; 0x45
 8005eb6:	f7fc fae0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005eba:	4641      	mov	r1, r8
 8005ebc:	4638      	mov	r0, r7
        color = newColor;
 8005ebe:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005ec2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005ec6:	f00a fbdd 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005eca:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005ece:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005ed2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ed6:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006020 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8005eda:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005ede:	232f      	movs	r3, #47	; 0x2f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8005ee0:	a90a      	add	r1, sp, #40	; 0x28
 8005ee2:	4640      	mov	r0, r8
 8005ee4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005ee8:	f00a fe66 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005eec:	4641      	mov	r1, r8
 8005eee:	4630      	mov	r0, r6
 8005ef0:	f008 fcae 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8005ef4:	ee18 0a10 	vmov	r0, s16
 8005ef8:	220c      	movs	r2, #12
 8005efa:	2132      	movs	r1, #50	; 0x32
 8005efc:	f7fc fabd 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005f00:	ee18 1a10 	vmov	r1, s16
 8005f04:	4638      	mov	r0, r7
        color = newColor;
 8005f06:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005f0a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005f0e:	f00a fbb9 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f12:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005f16:	ee18 3a10 	vmov	r3, s16
 8005f1a:	333c      	adds	r3, #60	; 0x3c
 8005f1c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f20:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8005f22:	ee18 0a10 	vmov	r0, s16
 8005f26:	a90a      	add	r1, sp, #40	; 0x28
 8005f28:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005f2c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005f30:	f00a fe42 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f34:	ee18 1a10 	vmov	r1, s16
 8005f38:	4630      	mov	r0, r6
 8005f3a:	f008 fc89 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005f3e:	ee19 0a10 	vmov	r0, s18
 8005f42:	22f0      	movs	r2, #240	; 0xf0
 8005f44:	2121      	movs	r1, #33	; 0x21
 8005f46:	f7fc fa98 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8005f4a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f4e:	aa0a      	add	r2, sp, #40	; 0x28
 8005f50:	f04f 0802 	mov.w	r8, #2
 8005f54:	a909      	add	r1, sp, #36	; 0x24
 8005f56:	ee19 0a10 	vmov	r0, s18
 8005f5a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f5e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005f62:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f66:	f00b f80c 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005f6a:	232d      	movs	r3, #45	; 0x2d
 8005f6c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005f70:	3710      	adds	r7, #16
        updateTextPosition();
 8005f72:	ee19 0a10 	vmov	r0, s18
 8005f76:	f7fc fad5 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f7a:	ee19 1a10 	vmov	r1, s18
 8005f7e:	4630      	mov	r0, r6
        colorPressed = col;
 8005f80:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005f84:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005f88:	f008 fc62 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005f8c:	ee19 0a90 	vmov	r0, s19
 8005f90:	22aa      	movs	r2, #170	; 0xaa
 8005f92:	2121      	movs	r1, #33	; 0x21
 8005f94:	f7fc fa71 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f98:	aa0a      	add	r2, sp, #40	; 0x28
 8005f9a:	a909      	add	r1, sp, #36	; 0x24
 8005f9c:	ee19 0a90 	vmov	r0, s19
 8005fa0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005fa4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005fa8:	f00a ffeb 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005fac:	232c      	movs	r3, #44	; 0x2c
 8005fae:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005fb2:	ee19 0a90 	vmov	r0, s19
 8005fb6:	f7fc fab5 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005fba:	ee19 1a90 	vmov	r1, s19
 8005fbe:	4630      	mov	r0, r6
        colorPressed = col;
 8005fc0:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005fc4:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005fc8:	f008 fc42 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005fcc:	ee1a 0a10 	vmov	r0, s20
 8005fd0:	2264      	movs	r2, #100	; 0x64
 8005fd2:	2121      	movs	r1, #33	; 0x21
 8005fd4:	f7fc fa51 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005fd8:	aa0a      	add	r2, sp, #40	; 0x28
 8005fda:	a909      	add	r1, sp, #36	; 0x24
 8005fdc:	ee1a 0a10 	vmov	r0, s20
 8005fe0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005fe4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005fe8:	f00a ffcb 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005fec:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8005fee:	ee1a 0a10 	vmov	r0, s20
 8005ff2:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005ff6:	f7fc fa95 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005ffa:	4630      	mov	r0, r6
        colorPressed = col;
 8005ffc:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006000:	ee1a 1a10 	vmov	r1, s20
 8006004:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006008:	f008 fc22 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800600c:	4620      	mov	r0, r4
 800600e:	b00d      	add	sp, #52	; 0x34
 8006010:	ecbd 8b06 	vpop	{d8-d10}
 8006014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006018:	20013820 	.word	0x20013820
 800601c:	08028fb6 	.word	0x08028fb6
 8006020:	0802902c 	.word	0x0802902c

08006024 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006024:	4770      	bx	lr

08006026 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006026:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006028:	68c2      	ldr	r2, [r0, #12]
 800602a:	6844      	ldr	r4, [r0, #4]
 800602c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800602e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006030:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006034:	07d2      	lsls	r2, r2, #31
 8006036:	bf48      	it	mi
 8006038:	5962      	ldrmi	r2, [r4, r5]
 800603a:	689b      	ldr	r3, [r3, #8]
    }
 800603c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800603e:	bf48      	it	mi
 8006040:	58d3      	ldrmi	r3, [r2, r3]
 8006042:	4718      	bx	r3

08006044 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006044:	6843      	ldr	r3, [r0, #4]
 8006046:	b12b      	cbz	r3, 8006054 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006048:	6883      	ldr	r3, [r0, #8]
 800604a:	b92b      	cbnz	r3, 8006058 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800604c:	68c0      	ldr	r0, [r0, #12]
 800604e:	f000 0001 	and.w	r0, r0, #1
 8006052:	4770      	bx	lr
 8006054:	4618      	mov	r0, r3
 8006056:	4770      	bx	lr
 8006058:	2001      	movs	r0, #1
    }
 800605a:	4770      	bx	lr

0800605c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800605c:	b510      	push	{r4, lr}
 800605e:	2110      	movs	r1, #16
 8006060:	4604      	mov	r4, r0
 8006062:	f020 fbec 	bl	802683e <_ZdlPvj>
 8006066:	4620      	mov	r0, r4
 8006068:	bd10      	pop	{r4, pc}

0800606a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800606a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800606e:	f001 b84b 	b.w	8007108 <_ZN17Gauge_with_Values10initializeEv>

08006072 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_1PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006072:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8006076:	4288      	cmp	r0, r1
{
 8006078:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800607a:	d105      	bne.n	8006088 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_1PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800607c:	f00d fe80 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8006080:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006084:	f7fc bf9e 	b.w	8002fc4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006088:	bd08      	pop	{r3, pc}
	...

0800608c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 800608c:	b510      	push	{r4, lr}
 800608e:	4b07      	ldr	r3, [pc, #28]	; (80060ac <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x20>)
 8006090:	6003      	str	r3, [r0, #0]
 8006092:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006094:	f00c f972 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006098:	4b05      	ldr	r3, [pc, #20]	; (80060b0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x24>)
 800609a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800609e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80060a2:	f7fe f815 	bl	80040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80060a6:	4620      	mov	r0, r4
 80060a8:	bd10      	pop	{r4, pc}
 80060aa:	bf00      	nop
 80060ac:	0802a788 	.word	0x0802a788
 80060b0:	0802ab20 	.word	0x0802ab20

080060b4 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 80060b4:	b510      	push	{r4, lr}
 80060b6:	4604      	mov	r4, r0
}
 80060b8:	f7ff ffe8 	bl	800608c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 80060bc:	4620      	mov	r0, r4
 80060be:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80060c2:	f020 fbbc 	bl	802683e <_ZdlPvj>
 80060c6:	4620      	mov	r0, r4
 80060c8:	bd10      	pop	{r4, pc}
	...

080060cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 80060cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060d0:	ed2d 8b04 	vpush	{d8-d9}
 80060d4:	4604      	mov	r4, r0
 80060d6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 80060d8:	46a2      	mov	sl, r4
 80060da:	2500      	movs	r5, #0
 80060dc:	f00f fad0 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 80060e0:	4baf      	ldr	r3, [pc, #700]	; (80063a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80060e2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80060e4:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 80060e8:	2226      	movs	r2, #38	; 0x26
 80060ea:	4629      	mov	r1, r5
 80060ec:	4650      	mov	r0, sl
 80060ee:	f021 fb9c 	bl	802782a <memset>
 80060f2:	4650      	mov	r0, sl
 80060f4:	f7fc f9e2 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80060f8:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 80060fc:	26ff      	movs	r6, #255	; 0xff
 80060fe:	4ba9      	ldr	r3, [pc, #676]	; (80063a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8006100:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006102:	2226      	movs	r2, #38	; 0x26
 8006104:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006108:	4629      	mov	r1, r5
 800610a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800610e:	4648      	mov	r0, r9
 8006110:	66a5      	str	r5, [r4, #104]	; 0x68
 8006112:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006116:	f021 fb88 	bl	802782a <memset>
 800611a:	4648      	mov	r0, r9
 800611c:	f7fc f9ce 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8006120:	4ba1      	ldr	r3, [pc, #644]	; (80063a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8006122:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006124:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006128:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800612c:	a90a      	add	r1, sp, #40	; 0x28
 800612e:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 8006130:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006134:	f00b f91b 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006138:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800613c:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006140:	4618      	mov	r0, r3
 8006142:	ee08 3a10 	vmov	s16, r3
 8006146:	f7fc f9cb 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800614a:	4638      	mov	r0, r7
 800614c:	f009 ffd8 	bl	8010100 <_ZN8touchgfx4LineC1Ev>
 8006150:	f504 73a8 	add.w	r3, r4, #336	; 0x150
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006154:	4618      	mov	r0, r3
 8006156:	9303      	str	r3, [sp, #12]
 8006158:	f7fb f8b2 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800615c:	4b93      	ldr	r3, [pc, #588]	; (80063ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 800615e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8006162:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8006166:	3324      	adds	r3, #36	; 0x24
 8006168:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
 800616c:	f8c4 515c 	str.w	r5, [r4, #348]	; 0x15c
 8006170:	4640      	mov	r0, r8
 8006172:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006176:	f7fc f9b3 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800617a:	4658      	mov	r0, fp
 800617c:	f7fc f9b0 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8006180:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8006184:	4618      	mov	r0, r3
 8006186:	ee08 3a90 	vmov	s17, r3
 800618a:	f00b fa31 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800618e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006192:	4618      	mov	r0, r3
 8006194:	ee09 3a10 	vmov	s18, r3
 8006198:	f000 ffac 	bl	80070f4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800619c:	4a84      	ldr	r2, [pc, #528]	; (80063b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 800619e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80061a2:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80061a6:	4a83      	ldr	r2, [pc, #524]	; (80063b4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80061a8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80061ac:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80061b0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80061b4:	f00c f8d8 	bl	8012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80061b8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80061bc:	462a      	mov	r2, r5
 80061be:	4650      	mov	r0, sl
 80061c0:	9300      	str	r3, [sp, #0]
 80061c2:	4629      	mov	r1, r5
 80061c4:	23f0      	movs	r3, #240	; 0xf0
 80061c6:	f7fc f965 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061ca:	1d26      	adds	r6, r4, #4
        color = newColor;
 80061cc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80061d0:	66a3      	str	r3, [r4, #104]	; 0x68
 80061d2:	4651      	mov	r1, sl
 80061d4:	4630      	mov	r0, r6
 80061d6:	f008 fb3b 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80061da:	462a      	mov	r2, r5
 80061dc:	4648      	mov	r0, r9
 80061de:	4629      	mov	r1, r5
 80061e0:	f7fc f94b 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80061e4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80061e6:	4648      	mov	r0, r9
 80061e8:	a90a      	add	r1, sp, #40	; 0x28
 80061ea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80061ee:	f00b f8be 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80061f2:	4649      	mov	r1, r9
 80061f4:	4630      	mov	r0, r6
 80061f6:	f008 fb2b 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80061fa:	f04f 39ff 	mov.w	r9, #4294967295
    textArea3.setXY(31, 60);
 80061fe:	223c      	movs	r2, #60	; 0x3c
 8006200:	ee18 0a10 	vmov	r0, s16
 8006204:	211f      	movs	r1, #31
        boundingArea = calculateBoundingArea();
 8006206:	f10d 0a10 	add.w	sl, sp, #16
 800620a:	f7fc f936 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800620e:	ee18 1a10 	vmov	r1, s16
 8006212:	4650      	mov	r0, sl
        color = newColor;
 8006214:	f8c4 90c8 	str.w	r9, [r4, #200]	; 0xc8
        linespace = space;
 8006218:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800621c:	f00a fa32 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006220:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006224:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006228:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800622c:	4b62      	ldr	r3, [pc, #392]	; (80063b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 800622e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8006230:	ee18 0a10 	vmov	r0, s16
 8006234:	2315      	movs	r3, #21
 8006236:	a90a      	add	r1, sp, #40	; 0x28
 8006238:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800623c:	f00a fcbc 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006240:	ee18 1a10 	vmov	r1, s16
 8006244:	4630      	mov	r0, r6
 8006246:	f008 fb03 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800624a:	230a      	movs	r3, #10
 800624c:	9300      	str	r3, [sp, #0]
 800624e:	2232      	movs	r2, #50	; 0x32
 8006250:	23f0      	movs	r3, #240	; 0xf0
 8006252:	4629      	mov	r1, r5
 8006254:	4638      	mov	r0, r7
 8006256:	f7fc f91d 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 800625a:	9b03      	ldr	r3, [sp, #12]
 800625c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006260:	22a0      	movs	r2, #160	; 0xa0
 8006262:	4611      	mov	r1, r2
 8006264:	4638      	mov	r0, r7
 8006266:	f8c4 915c 	str.w	r9, [r4, #348]	; 0x15c
        color565 = LCD16bpp::getNativeColor(painterColor);
 800626a:	f8a4 9160 	strh.w	r9, [r4, #352]	; 0x160
 800626e:	f00a f85d 	bl	801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006272:	22a0      	movs	r2, #160	; 0xa0
 8006274:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006278:	4638      	mov	r0, r7
 800627a:	f00a f862 	bl	8010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800627e:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8006282:	2b20      	cmp	r3, #32
 8006284:	d005      	beq.n	8006292 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x1c6>
        lineWidthQ5 = widthQ5;
 8006286:	2320      	movs	r3, #32
 8006288:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        updateCachedShape();
 800628c:	4638      	mov	r0, r7
 800628e:	f009 ff57 	bl	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006292:	4638      	mov	r0, r7
 8006294:	2101      	movs	r1, #1
 8006296:	f00a f85f 	bl	8010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800629a:	4639      	mov	r1, r7
 800629c:	4630      	mov	r0, r6
 800629e:	f008 fad7 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80062a2:	ad04      	add	r5, sp, #16
        color = newColor;
 80062a4:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80062a8:	f04f 0900 	mov.w	r9, #0
    textArea2.setXY(69, 36);
 80062ac:	2224      	movs	r2, #36	; 0x24
 80062ae:	4640      	mov	r0, r8
 80062b0:	2145      	movs	r1, #69	; 0x45
 80062b2:	f7fc f8e2 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80062b6:	4641      	mov	r1, r8
 80062b8:	4628      	mov	r0, r5
        color = newColor;
 80062ba:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80062be:	f8a4 9198 	strh.w	r9, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80062c2:	f00a f9df 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80062ca:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80062ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062d2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80063b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>
 80062d6:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80062da:	2322      	movs	r3, #34	; 0x22
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80062dc:	a90a      	add	r1, sp, #40	; 0x28
 80062de:	4640      	mov	r0, r8
 80062e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80062e4:	f00a fc68 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80062e8:	4641      	mov	r1, r8
 80062ea:	4630      	mov	r0, r6
 80062ec:	f008 fab0 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 80062f0:	220c      	movs	r2, #12
 80062f2:	4658      	mov	r0, fp
 80062f4:	2132      	movs	r1, #50	; 0x32
 80062f6:	f7fc f8c0 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80062fa:	4659      	mov	r1, fp
 80062fc:	4628      	mov	r0, r5
        color = newColor;
 80062fe:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006302:	f8a4 91e0 	strh.w	r9, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006306:	f00a f9bd 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800630a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800630e:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006312:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006316:	2521      	movs	r5, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8006318:	a90a      	add	r1, sp, #40	; 0x28
 800631a:	4658      	mov	r0, fp
 800631c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006320:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8006324:	f00a fc48 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006328:	4659      	mov	r1, fp
 800632a:	4630      	mov	r0, r6
 800632c:	f008 fa90 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8006330:	ee18 0a90 	vmov	r0, s17
 8006334:	4629      	mov	r1, r5
 8006336:	f44f 7280 	mov.w	r2, #256	; 0x100
 800633a:	f7fc f89e 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800633e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006340:	aa0a      	add	r2, sp, #40	; 0x28
 8006342:	a909      	add	r1, sp, #36	; 0x24
 8006344:	ee18 0a90 	vmov	r0, s17
 8006348:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800634c:	2302      	movs	r3, #2
 800634e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006352:	f00a fe16 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006356:	2320      	movs	r3, #32
        updateTextPosition();
 8006358:	ee18 0a90 	vmov	r0, s17
 800635c:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8006360:	f7fc f8e0 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006364:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006368:	3314      	adds	r3, #20
 800636a:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 800636e:	ee18 1a90 	vmov	r1, s17
 8006372:	4630      	mov	r0, r6
        colorPressed = col;
 8006374:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8006378:	f008 fa6a 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800637c:	ee19 0a10 	vmov	r0, s18
 8006380:	224e      	movs	r2, #78	; 0x4e
 8006382:	4649      	mov	r1, r9
 8006384:	f7fc f879 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006388:	4630      	mov	r0, r6
 800638a:	ee19 1a10 	vmov	r1, s18
 800638e:	f008 fa5f 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006392:	4620      	mov	r0, r4
 8006394:	b00d      	add	sp, #52	; 0x34
 8006396:	ecbd 8b04 	vpop	{d8-d9}
 800639a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800639e:	bf00      	nop
 80063a0:	0802a788 	.word	0x0802a788
 80063a4:	0802b48c 	.word	0x0802b48c
 80063a8:	0802b654 	.word	0x0802b654
 80063ac:	0802b1c0 	.word	0x0802b1c0
 80063b0:	0802a770 	.word	0x0802a770
 80063b4:	08006073 	.word	0x08006073
 80063b8:	0802902c 	.word	0x0802902c

080063bc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80063bc:	4770      	bx	lr

080063be <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80063be:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80063c0:	68c2      	ldr	r2, [r0, #12]
 80063c2:	6844      	ldr	r4, [r0, #4]
 80063c4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80063c6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80063c8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80063cc:	07d2      	lsls	r2, r2, #31
 80063ce:	bf48      	it	mi
 80063d0:	5962      	ldrmi	r2, [r4, r5]
 80063d2:	689b      	ldr	r3, [r3, #8]
    }
 80063d4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80063d6:	bf48      	it	mi
 80063d8:	58d3      	ldrmi	r3, [r2, r3]
 80063da:	4718      	bx	r3

080063dc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80063dc:	6843      	ldr	r3, [r0, #4]
 80063de:	b12b      	cbz	r3, 80063ec <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80063e0:	6883      	ldr	r3, [r0, #8]
 80063e2:	b92b      	cbnz	r3, 80063f0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80063e4:	68c0      	ldr	r0, [r0, #12]
 80063e6:	f000 0001 	and.w	r0, r0, #1
 80063ea:	4770      	bx	lr
 80063ec:	4618      	mov	r0, r3
 80063ee:	4770      	bx	lr
 80063f0:	2001      	movs	r0, #1
    }
 80063f2:	4770      	bx	lr

080063f4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80063f4:	b510      	push	{r4, lr}
 80063f6:	2110      	movs	r1, #16
 80063f8:	4604      	mov	r4, r0
 80063fa:	f020 fa20 	bl	802683e <_ZdlPvj>
 80063fe:	4620      	mov	r0, r4
 8006400:	bd10      	pop	{r4, pc}

08006402 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006402:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006406:	f000 be7f 	b.w	8007108 <_ZN17Gauge_with_Values10initializeEv>

0800640a <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800640a:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 800640e:	4288      	cmp	r0, r1
{
 8006410:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006412:	d105      	bne.n	8006420 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006414:	f00d fcb4 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8006418:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800641c:	f7fc bdd2 	b.w	8002fc4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006420:	bd08      	pop	{r3, pc}
	...

08006424 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8006424:	b510      	push	{r4, lr}
 8006426:	4b07      	ldr	r3, [pc, #28]	; (8006444 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8006428:	6003      	str	r3, [r0, #0]
 800642a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800642c:	f00b ffa6 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006430:	4b05      	ldr	r3, [pc, #20]	; (8006448 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 8006432:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8006436:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800643a:	f7fd fe49 	bl	80040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800643e:	4620      	mov	r0, r4
 8006440:	bd10      	pop	{r4, pc}
 8006442:	bf00      	nop
 8006444:	0802a7d4 	.word	0x0802a7d4
 8006448:	0802ab20 	.word	0x0802ab20

0800644c <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800644c:	b510      	push	{r4, lr}
 800644e:	4604      	mov	r4, r0
}
 8006450:	f7ff ffe8 	bl	8006424 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8006454:	4620      	mov	r0, r4
 8006456:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800645a:	f020 f9f0 	bl	802683e <_ZdlPvj>
 800645e:	4620      	mov	r0, r4
 8006460:	bd10      	pop	{r4, pc}
	...

08006464 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8006464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006468:	ed2d 8b04 	vpush	{d8-d9}
 800646c:	4604      	mov	r4, r0
 800646e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8006470:	46a3      	mov	fp, r4
 8006472:	2500      	movs	r5, #0
 8006474:	f00f f904 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 8006478:	4bae      	ldr	r3, [pc, #696]	; (8006734 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 800647a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800647c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006480:	2226      	movs	r2, #38	; 0x26
 8006482:	4629      	mov	r1, r5
 8006484:	4658      	mov	r0, fp
 8006486:	f021 f9d0 	bl	802782a <memset>
 800648a:	4658      	mov	r0, fp
 800648c:	f7fc f816 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8006490:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006494:	26ff      	movs	r6, #255	; 0xff
 8006496:	4ba8      	ldr	r3, [pc, #672]	; (8006738 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8006498:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800649a:	2226      	movs	r2, #38	; 0x26
 800649c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80064a0:	4629      	mov	r1, r5
 80064a2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80064a6:	66a5      	str	r5, [r4, #104]	; 0x68
 80064a8:	4650      	mov	r0, sl
 80064aa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064ae:	f021 f9bc 	bl	802782a <memset>
 80064b2:	4650      	mov	r0, sl
 80064b4:	f7fc f802 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 80064b8:	4ba0      	ldr	r3, [pc, #640]	; (800673c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 80064ba:	66e3      	str	r3, [r4, #108]	; 0x6c
 80064bc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80064c0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80064c4:	a90a      	add	r1, sp, #40	; 0x28
 80064c6:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80064ca:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80064ce:	4650      	mov	r0, sl
 80064d0:	f00a ff4d 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80064d4:	4638      	mov	r0, r7
 80064d6:	f009 fe13 	bl	8010100 <_ZN8touchgfx4LineC1Ev>
 80064da:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80064de:	4618      	mov	r0, r3
 80064e0:	9303      	str	r3, [sp, #12]
 80064e2:	f7fa feed 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80064e6:	4b96      	ldr	r3, [pc, #600]	; (8006740 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 80064e8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80064ec:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80064f0:	3324      	adds	r3, #36	; 0x24
 80064f2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80064f6:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80064fa:	4648      	mov	r0, r9
 80064fc:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8006500:	f7fb ffee 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8006504:	4640      	mov	r0, r8
 8006506:	f7fb ffeb 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800650a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800650e:	4618      	mov	r0, r3
 8006510:	ee08 3a10 	vmov	s16, r3
 8006514:	f7fb ffe4 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 8006518:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800651c:	4618      	mov	r0, r3
 800651e:	ee08 3a90 	vmov	s17, r3
 8006522:	f00b f865 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006526:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800652a:	4618      	mov	r0, r3
 800652c:	ee09 3a10 	vmov	s18, r3
 8006530:	f000 fde0 	bl	80070f4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006534:	4a83      	ldr	r2, [pc, #524]	; (8006744 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 8006536:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800653a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800653e:	4a82      	ldr	r2, [pc, #520]	; (8006748 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006540:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006544:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006548:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800654c:	f00b ff0c 	bl	8012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006550:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006554:	462a      	mov	r2, r5
 8006556:	9300      	str	r3, [sp, #0]
 8006558:	4629      	mov	r1, r5
 800655a:	23f0      	movs	r3, #240	; 0xf0
 800655c:	4658      	mov	r0, fp
 800655e:	f7fb ff99 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006562:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006564:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006568:	66a3      	str	r3, [r4, #104]	; 0x68
 800656a:	4659      	mov	r1, fp
 800656c:	4630      	mov	r0, r6
 800656e:	f008 f96f 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006572:	462a      	mov	r2, r5
 8006574:	4629      	mov	r1, r5
 8006576:	4650      	mov	r0, sl
 8006578:	f7fb ff7f 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800657c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800657e:	a90a      	add	r1, sp, #40	; 0x28
 8006580:	4650      	mov	r0, sl
 8006582:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006586:	f00a fef2 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800658a:	4651      	mov	r1, sl
 800658c:	4630      	mov	r0, r6
 800658e:	f008 f95f 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006592:	230a      	movs	r3, #10
 8006594:	9300      	str	r3, [sp, #0]
 8006596:	2232      	movs	r2, #50	; 0x32
 8006598:	23f0      	movs	r3, #240	; 0xf0
 800659a:	4629      	mov	r1, r5
 800659c:	4638      	mov	r0, r7
 800659e:	f7fb ff79 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80065a2:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065a6:	22a0      	movs	r2, #160	; 0xa0
 80065a8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 80065ac:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 80065b0:	9b03      	ldr	r3, [sp, #12]
 80065b2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80065b6:	4611      	mov	r1, r2
 80065b8:	4638      	mov	r0, r7
 80065ba:	f009 feb7 	bl	801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065be:	22a0      	movs	r2, #160	; 0xa0
 80065c0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80065c4:	4638      	mov	r0, r7
 80065c6:	f009 febc 	bl	8010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80065ca:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80065ce:	2b20      	cmp	r3, #32
 80065d0:	d005      	beq.n	80065de <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 80065d2:	2320      	movs	r3, #32
 80065d4:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 80065d8:	4638      	mov	r0, r7
 80065da:	f009 fdb1 	bl	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80065de:	4638      	mov	r0, r7
 80065e0:	2101      	movs	r1, #1
 80065e2:	f009 feb9 	bl	8010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80065e6:	4639      	mov	r1, r7
 80065e8:	4630      	mov	r0, r6
 80065ea:	ad04      	add	r5, sp, #16
 80065ec:	f008 f930 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80065f0:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80065f4:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 36);
 80065f8:	2224      	movs	r2, #36	; 0x24
 80065fa:	4648      	mov	r0, r9
 80065fc:	2145      	movs	r1, #69	; 0x45
 80065fe:	f7fb ff3c 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006602:	4649      	mov	r1, r9
 8006604:	4628      	mov	r0, r5
        color = newColor;
 8006606:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 800660a:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 800660e:	f00a f839 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006612:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006616:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 800661a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800661e:	f8df b12c 	ldr.w	fp, [pc, #300]	; 800674c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8006622:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006626:	2325      	movs	r3, #37	; 0x25
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8006628:	a90a      	add	r1, sp, #40	; 0x28
 800662a:	4648      	mov	r0, r9
 800662c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006630:	f00a fac2 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006634:	4649      	mov	r1, r9
 8006636:	4630      	mov	r0, r6
 8006638:	f008 f90a 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800663c:	223c      	movs	r2, #60	; 0x3c
 800663e:	4640      	mov	r0, r8
 8006640:	211f      	movs	r1, #31
 8006642:	f7fb ff1a 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006646:	4641      	mov	r1, r8
 8006648:	4628      	mov	r0, r5
        color = newColor;
 800664a:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 800664e:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8006652:	f00a f817 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006656:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800665a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800665e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006662:	2314      	movs	r3, #20
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8006664:	a90a      	add	r1, sp, #40	; 0x28
 8006666:	4640      	mov	r0, r8
 8006668:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800666c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006670:	f00a faa2 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006674:	4641      	mov	r1, r8
 8006676:	4630      	mov	r0, r6
 8006678:	f008 f8ea 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 800667c:	ee18 0a10 	vmov	r0, s16
 8006680:	220c      	movs	r2, #12
 8006682:	2132      	movs	r1, #50	; 0x32
 8006684:	f7fb fef9 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006688:	ee18 1a10 	vmov	r1, s16
 800668c:	4628      	mov	r0, r5
        color = newColor;
 800668e:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006692:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006696:	f009 fff5 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800669a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800669e:	ee18 3a10 	vmov	r3, s16
 80066a2:	333c      	adds	r3, #60	; 0x3c
 80066a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80066a8:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 80066aa:	ee18 0a10 	vmov	r0, s16
 80066ae:	a90a      	add	r1, sp, #40	; 0x28
 80066b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80066b4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80066b8:	f00a fa7e 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066bc:	ee18 1a10 	vmov	r1, s16
 80066c0:	4630      	mov	r0, r6
 80066c2:	f008 f8c5 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80066c6:	ee18 0a90 	vmov	r0, s17
 80066ca:	f240 1201 	movw	r2, #257	; 0x101
 80066ce:	2121      	movs	r1, #33	; 0x21
 80066d0:	f7fb fed3 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 80066d4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066d6:	aa0a      	add	r2, sp, #40	; 0x28
 80066d8:	a909      	add	r1, sp, #36	; 0x24
 80066da:	ee18 0a90 	vmov	r0, s17
 80066de:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80066e2:	2302      	movs	r3, #2
 80066e4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80066e8:	f00a fc4b 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80066ec:	2323      	movs	r3, #35	; 0x23
        updateTextPosition();
 80066ee:	ee18 0a90 	vmov	r0, s17
 80066f2:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80066f6:	f7fb ff15 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80066fa:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80066fe:	3314      	adds	r3, #20
 8006700:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8006704:	ee18 1a90 	vmov	r1, s17
 8006708:	4630      	mov	r0, r6
        colorPressed = col;
 800670a:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 800670e:	f008 f89f 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006712:	ee19 0a10 	vmov	r0, s18
 8006716:	224e      	movs	r2, #78	; 0x4e
 8006718:	4651      	mov	r1, sl
 800671a:	f7fb feae 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800671e:	4630      	mov	r0, r6
 8006720:	ee19 1a10 	vmov	r1, s18
 8006724:	f008 f894 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006728:	4620      	mov	r0, r4
 800672a:	b00d      	add	sp, #52	; 0x34
 800672c:	ecbd 8b04 	vpop	{d8-d9}
 8006730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006734:	0802a7d4 	.word	0x0802a7d4
 8006738:	0802b48c 	.word	0x0802b48c
 800673c:	0802b654 	.word	0x0802b654
 8006740:	0802b1c0 	.word	0x0802b1c0
 8006744:	0802a7bc 	.word	0x0802a7bc
 8006748:	0800640b 	.word	0x0800640b
 800674c:	0802902c 	.word	0x0802902c

08006750 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8006750:	4770      	bx	lr

08006752 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006752:	4770      	bx	lr

08006754 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006754:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006756:	68c2      	ldr	r2, [r0, #12]
 8006758:	6844      	ldr	r4, [r0, #4]
 800675a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800675c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800675e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006762:	07d2      	lsls	r2, r2, #31
 8006764:	bf48      	it	mi
 8006766:	5962      	ldrmi	r2, [r4, r5]
 8006768:	689b      	ldr	r3, [r3, #8]
    }
 800676a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800676c:	bf48      	it	mi
 800676e:	58d3      	ldrmi	r3, [r2, r3]
 8006770:	4718      	bx	r3

08006772 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006772:	6843      	ldr	r3, [r0, #4]
 8006774:	b12b      	cbz	r3, 8006782 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006776:	6883      	ldr	r3, [r0, #8]
 8006778:	b92b      	cbnz	r3, 8006786 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800677a:	68c0      	ldr	r0, [r0, #12]
 800677c:	f000 0001 	and.w	r0, r0, #1
 8006780:	4770      	bx	lr
 8006782:	4618      	mov	r0, r3
 8006784:	4770      	bx	lr
 8006786:	2001      	movs	r0, #1
    }
 8006788:	4770      	bx	lr

0800678a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800678a:	b510      	push	{r4, lr}
 800678c:	2110      	movs	r1, #16
 800678e:	4604      	mov	r4, r0
 8006790:	f020 f855 	bl	802683e <_ZdlPvj>
 8006794:	4620      	mov	r0, r4
 8006796:	bd10      	pop	{r4, pc}

08006798 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8006798:	b510      	push	{r4, lr}
 800679a:	4b03      	ldr	r3, [pc, #12]	; (80067a8 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 800679c:	6003      	str	r3, [r0, #0]
 800679e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067a0:	f00b fdec 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067a4:	4620      	mov	r0, r4
 80067a6:	bd10      	pop	{r4, pc}
 80067a8:	0802a820 	.word	0x0802a820

080067ac <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80067ac:	b507      	push	{r0, r1, r2, lr}
 80067ae:	4b07      	ldr	r3, [pc, #28]	; (80067cc <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 80067b0:	6003      	str	r3, [r0, #0]
 80067b2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067b4:	f00b fde2 	bl	801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067b8:	9801      	ldr	r0, [sp, #4]
 80067ba:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80067be:	f020 f83e 	bl	802683e <_ZdlPvj>
 80067c2:	9801      	ldr	r0, [sp, #4]
 80067c4:	b003      	add	sp, #12
 80067c6:	f85d fb04 	ldr.w	pc, [sp], #4
 80067ca:	bf00      	nop
 80067cc:	0802a820 	.word	0x0802a820

080067d0 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80067d0:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 80067d4:	4288      	cmp	r0, r1
{
 80067d6:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80067d8:	d105      	bne.n	80067e6 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80067da:	f00d fad1 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 80067de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 80067e2:	f7fc bbbf 	b.w	8002f64 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 80067e6:	bd08      	pop	{r3, pc}

080067e8 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 80067e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067ec:	ed2d 8b04 	vpush	{d8-d9}
 80067f0:	4604      	mov	r4, r0
 80067f2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 80067f4:	46a3      	mov	fp, r4
 80067f6:	2500      	movs	r5, #0
 80067f8:	f00e ff42 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 80067fc:	4bd1      	ldr	r3, [pc, #836]	; (8006b44 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 80067fe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006800:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006804:	2226      	movs	r2, #38	; 0x26
 8006806:	4629      	mov	r1, r5
 8006808:	4658      	mov	r0, fp
 800680a:	f021 f80e 	bl	802782a <memset>
 800680e:	4658      	mov	r0, fp
 8006810:	f7fb fe54 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 8006814:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006818:	26ff      	movs	r6, #255	; 0xff
 800681a:	4bcb      	ldr	r3, [pc, #812]	; (8006b48 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 800681c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800681e:	2226      	movs	r2, #38	; 0x26
 8006820:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006824:	4629      	mov	r1, r5
 8006826:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800682a:	4650      	mov	r0, sl
 800682c:	66a5      	str	r5, [r4, #104]	; 0x68
 800682e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006832:	f020 fffa 	bl	802782a <memset>
 8006836:	4650      	mov	r0, sl
 8006838:	f7fb fe40 	bl	80024bc <_ZN8touchgfx6WidgetC1Ev>
 800683c:	4bc3      	ldr	r3, [pc, #780]	; (8006b4c <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 800683e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006840:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006844:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006848:	a90a      	add	r1, sp, #40	; 0x28
 800684a:	4650      	mov	r0, sl
 800684c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006850:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006854:	f00a fd8b 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006858:	4648      	mov	r0, r9
 800685a:	f7fb fe41 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 800685e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006862:	4bbb      	ldr	r3, [pc, #748]	; (8006b50 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8006864:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006868:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800686c:	4638      	mov	r0, r7
 800686e:	f009 fc47 	bl	8010100 <_ZN8touchgfx4LineC1Ev>
 8006872:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006876:	4618      	mov	r0, r3
 8006878:	9303      	str	r3, [sp, #12]
 800687a:	f7fa fd21 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800687e:	4bb5      	ldr	r3, [pc, #724]	; (8006b54 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8006880:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006884:	3324      	adds	r3, #36	; 0x24
 8006886:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800688a:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800688e:	4618      	mov	r0, r3
 8006890:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006894:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006898:	ee09 3a10 	vmov	s18, r3
 800689c:	f00a fea8 	bl	80115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068a0:	4640      	mov	r0, r8
 80068a2:	f7fb fe1d 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80068a6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80068aa:	4618      	mov	r0, r3
 80068ac:	ee08 3a10 	vmov	s16, r3
 80068b0:	f7fb fe16 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
 80068b4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80068b8:	4618      	mov	r0, r3
 80068ba:	ee08 3a90 	vmov	s17, r3
 80068be:	f7fb fe0f 	bl	80024e0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80068c2:	4aa5      	ldr	r2, [pc, #660]	; (8006b58 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 80068c4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80068c8:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 80068cc:	4aa3      	ldr	r2, [pc, #652]	; (8006b5c <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80068ce:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80068d2:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 80068d6:	f504 7024 	add.w	r0, r4, #656	; 0x290
 80068da:	f00b fd45 	bl	8012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80068de:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80068e2:	462a      	mov	r2, r5
 80068e4:	4658      	mov	r0, fp
 80068e6:	9300      	str	r3, [sp, #0]
 80068e8:	4629      	mov	r1, r5
 80068ea:	23f0      	movs	r3, #240	; 0xf0
 80068ec:	f7fb fdd2 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80068f0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80068f2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80068f6:	66a3      	str	r3, [r4, #104]	; 0x68
 80068f8:	4659      	mov	r1, fp
 80068fa:	4630      	mov	r0, r6
 80068fc:	f007 ffa8 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006900:	462a      	mov	r2, r5
 8006902:	4650      	mov	r0, sl
 8006904:	4629      	mov	r1, r5
 8006906:	f7fb fdb8 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800690a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800690c:	4650      	mov	r0, sl
 800690e:	a90a      	add	r1, sp, #40	; 0x28
 8006910:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006914:	f00a fd2b 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006918:	4651      	mov	r1, sl
 800691a:	4630      	mov	r0, r6
 800691c:	f007 ff98 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006920:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006924:	2156      	movs	r1, #86	; 0x56
 8006926:	4648      	mov	r0, r9
 8006928:	f7fb fda7 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800692c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006930:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006934:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006938:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800693c:	4650      	mov	r0, sl
 800693e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006942:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006946:	4649      	mov	r1, r9
 8006948:	4798      	blx	r3
 800694a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800694e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006952:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006956:	4b82      	ldr	r3, [pc, #520]	; (8006b60 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8006958:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 800695a:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 800695e:	b92b      	cbnz	r3, 800696c <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8006960:	4b80      	ldr	r3, [pc, #512]	; (8006b64 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8006962:	4a81      	ldr	r2, [pc, #516]	; (8006b68 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8006964:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006966:	4881      	ldr	r0, [pc, #516]	; (8006b6c <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8006968:	f020 fd5a 	bl	8027420 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800696c:	4b80      	ldr	r3, [pc, #512]	; (8006b70 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800696e:	881b      	ldrh	r3, [r3, #0]
 8006970:	b91b      	cbnz	r3, 800697a <_ZN20Project_InfoViewBaseC1Ev+0x192>
 8006972:	4b80      	ldr	r3, [pc, #512]	; (8006b74 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8006974:	4a7c      	ldr	r2, [pc, #496]	; (8006b68 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8006976:	2161      	movs	r1, #97	; 0x61
 8006978:	e7f5      	b.n	8006966 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 800697a:	4b7f      	ldr	r3, [pc, #508]	; (8006b78 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 800697c:	4629      	mov	r1, r5
 800697e:	6818      	ldr	r0, [r3, #0]
 8006980:	f000 fb1c 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8006984:	4a7d      	ldr	r2, [pc, #500]	; (8006b7c <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8006986:	4603      	mov	r3, r0
 8006988:	2104      	movs	r1, #4
 800698a:	4650      	mov	r0, sl
 800698c:	f010 fb5c 	bl	8017048 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006990:	4648      	mov	r0, r9
        wc1 = value;
 8006992:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006996:	f00a f8ef 	bl	8010b78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800699a:	4b79      	ldr	r3, [pc, #484]	; (8006b80 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 800699c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 800699e:	a90a      	add	r1, sp, #40	; 0x28
 80069a0:	2301      	movs	r3, #1
 80069a2:	4648      	mov	r0, r9
 80069a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069a8:	f00a f906 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069ac:	4649      	mov	r1, r9
 80069ae:	4630      	mov	r0, r6
 80069b0:	f007 ff4e 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80069b4:	230a      	movs	r3, #10
 80069b6:	9300      	str	r3, [sp, #0]
 80069b8:	2232      	movs	r2, #50	; 0x32
 80069ba:	23f0      	movs	r3, #240	; 0xf0
 80069bc:	4629      	mov	r1, r5
 80069be:	4638      	mov	r0, r7
 80069c0:	f7fb fd68 	bl	8002494 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069c4:	9b03      	ldr	r3, [sp, #12]
 80069c6:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069ca:	22a0      	movs	r2, #160	; 0xa0
 80069cc:	4611      	mov	r1, r2
 80069ce:	4638      	mov	r0, r7
 80069d0:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80069d4:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80069d8:	f009 fca8 	bl	801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069dc:	22a0      	movs	r2, #160	; 0xa0
 80069de:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80069e2:	4638      	mov	r0, r7
 80069e4:	f009 fcad 	bl	8010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80069e8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80069ec:	2b20      	cmp	r3, #32
 80069ee:	d005      	beq.n	80069fc <_ZN20Project_InfoViewBaseC1Ev+0x214>
        lineWidthQ5 = widthQ5;
 80069f0:	2320      	movs	r3, #32
 80069f2:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80069f6:	4638      	mov	r0, r7
 80069f8:	f009 fba2 	bl	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80069fc:	4638      	mov	r0, r7
 80069fe:	2101      	movs	r1, #1
 8006a00:	f009 fcaa 	bl	8010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006a04:	4639      	mov	r1, r7
 8006a06:	4630      	mov	r0, r6
 8006a08:	f007 ff22 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006a0c:	ee19 0a10 	vmov	r0, s18
 8006a10:	22f0      	movs	r2, #240	; 0xf0
 8006a12:	2121      	movs	r1, #33	; 0x21
 8006a14:	f7fb fd31 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006a18:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a1a:	aa0a      	add	r2, sp, #40	; 0x28
 8006a1c:	a909      	add	r1, sp, #36	; 0x24
 8006a1e:	ee19 0a10 	vmov	r0, s18
 8006a22:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006a26:	2302      	movs	r3, #2
 8006a28:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a2c:	f00a faa9 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006a30:	2330      	movs	r3, #48	; 0x30
        updateTextPosition();
 8006a32:	ee19 0a10 	vmov	r0, s18
 8006a36:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8006a3a:	f7fb fd73 	bl	8002524 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8006a3e:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8006a42:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8006a46:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8006a4a:	ee19 1a10 	vmov	r1, s18
 8006a4e:	4630      	mov	r0, r6
        colorPressed = col;
 8006a50:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8006a54:	ad04      	add	r5, sp, #16
 8006a56:	f007 fefb 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006a5a:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8006a5e:	225b      	movs	r2, #91	; 0x5b
 8006a60:	4640      	mov	r0, r8
 8006a62:	2105      	movs	r1, #5
 8006a64:	f7fb fd09 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006a68:	4641      	mov	r1, r8
 8006a6a:	4628      	mov	r0, r5
        color = newColor;
 8006a6c:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006a70:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006a74:	f009 fe06 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a78:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006a7c:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006a80:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006a84:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8006b80 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8006a88:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a8c:	2331      	movs	r3, #49	; 0x31
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8006a8e:	a90a      	add	r1, sp, #40	; 0x28
 8006a90:	4640      	mov	r0, r8
 8006a92:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a96:	f00a f88f 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a9a:	4641      	mov	r1, r8
 8006a9c:	4630      	mov	r0, r6
 8006a9e:	f007 fed7 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 36);
 8006aa2:	ee18 0a10 	vmov	r0, s16
 8006aa6:	2224      	movs	r2, #36	; 0x24
 8006aa8:	2145      	movs	r1, #69	; 0x45
 8006aaa:	f7fb fce6 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006aae:	ee18 1a10 	vmov	r1, s16
 8006ab2:	4628      	mov	r0, r5
        color = newColor;
 8006ab4:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006ab8:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006abc:	f009 fde2 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ac0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006ac4:	ee18 3a10 	vmov	r3, s16
 8006ac8:	333c      	adds	r3, #60	; 0x3c
 8006aca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ace:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8006ad0:	ee18 0a10 	vmov	r0, s16
 8006ad4:	a90a      	add	r1, sp, #40	; 0x28
 8006ad6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ada:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006ade:	f00a f86b 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ae2:	ee18 1a10 	vmov	r1, s16
 8006ae6:	4630      	mov	r0, r6
 8006ae8:	f007 feb2 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8006aec:	ee18 0a90 	vmov	r0, s17
 8006af0:	220c      	movs	r2, #12
 8006af2:	2132      	movs	r1, #50	; 0x32
 8006af4:	f7fb fcc1 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006af8:	ee18 1a90 	vmov	r1, s17
 8006afc:	4628      	mov	r0, r5
        color = newColor;
 8006afe:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8006b02:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8006b06:	f009 fdbd 	bl	8010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006b0e:	ee18 3a90 	vmov	r3, s17
 8006b12:	333c      	adds	r3, #60	; 0x3c
 8006b14:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b18:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8006b1a:	ee18 0a90 	vmov	r0, s17
 8006b1e:	a90a      	add	r1, sp, #40	; 0x28
 8006b20:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b24:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006b28:	f00a f846 	bl	8010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b2c:	4630      	mov	r0, r6
 8006b2e:	ee18 1a90 	vmov	r1, s17
 8006b32:	f007 fe8d 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b36:	4620      	mov	r0, r4
 8006b38:	b00d      	add	sp, #52	; 0x34
 8006b3a:	ecbd 8b04 	vpop	{d8-d9}
 8006b3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b42:	bf00      	nop
 8006b44:	0802a820 	.word	0x0802a820
 8006b48:	0802b48c 	.word	0x0802b48c
 8006b4c:	0802b654 	.word	0x0802b654
 8006b50:	0802903c 	.word	0x0802903c
 8006b54:	0802b1c0 	.word	0x0802b1c0
 8006b58:	0802a808 	.word	0x0802a808
 8006b5c:	080067d1 	.word	0x080067d1
 8006b60:	20013814 	.word	0x20013814
 8006b64:	08028e7c 	.word	0x08028e7c
 8006b68:	08028f7e 	.word	0x08028f7e
 8006b6c:	08028ef9 	.word	0x08028ef9
 8006b70:	20013818 	.word	0x20013818
 8006b74:	08028f40 	.word	0x08028f40
 8006b78:	20013820 	.word	0x20013820
 8006b7c:	08028fb6 	.word	0x08028fb6
 8006b80:	0802902c 	.word	0x0802902c

08006b84 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8006b84:	4770      	bx	lr

08006b86 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8006b86:	4770      	bx	lr

08006b88 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8006b88:	b510      	push	{r4, lr}
}
 8006b8a:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8006b8c:	4604      	mov	r4, r0
}
 8006b8e:	f01f fe56 	bl	802683e <_ZdlPvj>
 8006b92:	4620      	mov	r0, r4
 8006b94:	bd10      	pop	{r4, pc}
	...

08006b98 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8006b98:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006b9c:	4604      	mov	r4, r0
 8006b9e:	4626      	mov	r6, r4
 8006ba0:	f00e fd6e 	bl	8015680 <_ZN8touchgfx6ScreenC1Ev>
 8006ba4:	2500      	movs	r5, #0
 8006ba6:	4b2e      	ldr	r3, [pc, #184]	; (8006c60 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8006ba8:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006baa:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8006bae:	4b2d      	ldr	r3, [pc, #180]	; (8006c64 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8006bb0:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8006bb2:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8006bb6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006bba:	23ff      	movs	r3, #255	; 0xff
 8006bbc:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8006bc0:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8006bc4:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8006bc8:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8006bcc:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8006bd0:	4a25      	ldr	r2, [pc, #148]	; (8006c68 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8006bd2:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8006bd6:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8006bda:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8006bdc:	a901      	add	r1, sp, #4
 8006bde:	4638      	mov	r0, r7
 8006be0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8006be4:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8006be8:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8006bec:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8006bf0:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8006bf4:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8006bf8:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8006bfc:	66a5      	str	r5, [r4, #104]	; 0x68
 8006bfe:	f8ad 3004 	strh.w	r3, [sp, #4]
 8006c02:	f00a fbb4 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8006c06:	462a      	mov	r2, r5
 8006c08:	4629      	mov	r1, r5
 8006c0a:	4630      	mov	r0, r6
 8006c0c:	f7fb fc35 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8006c10:	4630      	mov	r0, r6
 8006c12:	21f0      	movs	r1, #240	; 0xf0
 8006c14:	f7fa fa94 	bl	8001140 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8006c18:	4630      	mov	r0, r6
 8006c1a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006c1e:	f7fa fa91 	bl	8001144 <_ZN8touchgfx8Drawable9setHeightEs>
 8006c22:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8006c26:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006c2a:	66a3      	str	r3, [r4, #104]	; 0x68
 8006c2c:	4631      	mov	r1, r6
 8006c2e:	4640      	mov	r0, r8
 8006c30:	f007 fe0e 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8006c34:	462a      	mov	r2, r5
 8006c36:	4638      	mov	r0, r7
 8006c38:	f06f 0102 	mvn.w	r1, #2
 8006c3c:	f7fb fc1d 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8006c40:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8006c42:	a901      	add	r1, sp, #4
 8006c44:	4638      	mov	r0, r7
 8006c46:	f8ad 3004 	strh.w	r3, [sp, #4]
 8006c4a:	f00a fb90 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c4e:	4640      	mov	r0, r8
 8006c50:	4639      	mov	r1, r7
 8006c52:	f007 fdfd 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006c56:	4620      	mov	r0, r4
 8006c58:	b002      	add	sp, #8
 8006c5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c5e:	bf00      	nop
 8006c60:	0802a854 	.word	0x0802a854
 8006c64:	0802b48c 	.word	0x0802b48c
 8006c68:	0802b654 	.word	0x0802b654

08006c6c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006c6c:	4770      	bx	lr
	...

08006c70 <_Z23getFont_verdana_10_4bppv>:
{
 8006c70:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006c72:	4d17      	ldr	r5, [pc, #92]	; (8006cd0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8006c74:	682c      	ldr	r4, [r5, #0]
 8006c76:	f3bf 8f5b 	dmb	ish
 8006c7a:	f014 0401 	ands.w	r4, r4, #1
{
 8006c7e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006c80:	d122      	bne.n	8006cc8 <_Z23getFont_verdana_10_4bppv+0x58>
 8006c82:	4628      	mov	r0, r5
 8006c84:	f01f fddd 	bl	8026842 <__cxa_guard_acquire>
 8006c88:	b1f0      	cbz	r0, 8006cc8 <_Z23getFont_verdana_10_4bppv+0x58>
 8006c8a:	233f      	movs	r3, #63	; 0x3f
 8006c8c:	9309      	str	r3, [sp, #36]	; 0x24
 8006c8e:	4b11      	ldr	r3, [pc, #68]	; (8006cd4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8006c90:	9308      	str	r3, [sp, #32]
 8006c92:	4b11      	ldr	r3, [pc, #68]	; (8006cd8 <_Z23getFont_verdana_10_4bppv+0x68>)
 8006c94:	9307      	str	r3, [sp, #28]
 8006c96:	2301      	movs	r3, #1
 8006c98:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8006c9c:	9304      	str	r3, [sp, #16]
 8006c9e:	2304      	movs	r3, #4
 8006ca0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006ca4:	230a      	movs	r3, #10
 8006ca6:	490d      	ldr	r1, [pc, #52]	; (8006cdc <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006ca8:	9300      	str	r3, [sp, #0]
 8006caa:	225f      	movs	r2, #95	; 0x5f
 8006cac:	230c      	movs	r3, #12
 8006cae:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8006cb2:	480b      	ldr	r0, [pc, #44]	; (8006ce0 <_Z23getFont_verdana_10_4bppv+0x70>)
 8006cb4:	940a      	str	r4, [sp, #40]	; 0x28
 8006cb6:	9401      	str	r4, [sp, #4]
 8006cb8:	f7fd fbbe 	bl	8004438 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006cbc:	4809      	ldr	r0, [pc, #36]	; (8006ce4 <_Z23getFont_verdana_10_4bppv+0x74>)
 8006cbe:	f020 fbcd 	bl	802745c <atexit>
 8006cc2:	4628      	mov	r0, r5
 8006cc4:	f01f fdc9 	bl	802685a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8006cc8:	4805      	ldr	r0, [pc, #20]	; (8006ce0 <_Z23getFont_verdana_10_4bppv+0x70>)
 8006cca:	b00f      	add	sp, #60	; 0x3c
 8006ccc:	bd30      	pop	{r4, r5, pc}
 8006cce:	bf00      	nop
 8006cd0:	200028dc 	.word	0x200028dc
 8006cd4:	0802e368 	.word	0x0802e368
 8006cd8:	0802e448 	.word	0x0802e448
 8006cdc:	0802d9ec 	.word	0x0802d9ec
 8006ce0:	200028e0 	.word	0x200028e0
 8006ce4:	08006c6d 	.word	0x08006c6d

08006ce8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 30, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006ce8:	4770      	bx	lr
	...

08006cec <_Z23getFont_verdana_12_4bppv>:
{
 8006cec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 30, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006cee:	4d17      	ldr	r5, [pc, #92]	; (8006d4c <_Z23getFont_verdana_12_4bppv+0x60>)
 8006cf0:	682c      	ldr	r4, [r5, #0]
 8006cf2:	f3bf 8f5b 	dmb	ish
 8006cf6:	f014 0401 	ands.w	r4, r4, #1
{
 8006cfa:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 30, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006cfc:	d122      	bne.n	8006d44 <_Z23getFont_verdana_12_4bppv+0x58>
 8006cfe:	4628      	mov	r0, r5
 8006d00:	f01f fd9f 	bl	8026842 <__cxa_guard_acquire>
 8006d04:	b1f0      	cbz	r0, 8006d44 <_Z23getFont_verdana_12_4bppv+0x58>
 8006d06:	233f      	movs	r3, #63	; 0x3f
 8006d08:	9309      	str	r3, [sp, #36]	; 0x24
 8006d0a:	4b11      	ldr	r3, [pc, #68]	; (8006d50 <_Z23getFont_verdana_12_4bppv+0x64>)
 8006d0c:	9308      	str	r3, [sp, #32]
 8006d0e:	4b11      	ldr	r3, [pc, #68]	; (8006d54 <_Z23getFont_verdana_12_4bppv+0x68>)
 8006d10:	9307      	str	r3, [sp, #28]
 8006d12:	2301      	movs	r3, #1
 8006d14:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8006d18:	9304      	str	r3, [sp, #16]
 8006d1a:	2304      	movs	r3, #4
 8006d1c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006d20:	230c      	movs	r3, #12
 8006d22:	490d      	ldr	r1, [pc, #52]	; (8006d58 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8006d24:	9300      	str	r3, [sp, #0]
 8006d26:	221e      	movs	r2, #30
 8006d28:	230f      	movs	r3, #15
 8006d2a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8006d2e:	480b      	ldr	r0, [pc, #44]	; (8006d5c <_Z23getFont_verdana_12_4bppv+0x70>)
 8006d30:	940a      	str	r4, [sp, #40]	; 0x28
 8006d32:	9401      	str	r4, [sp, #4]
 8006d34:	f7fd fb80 	bl	8004438 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006d38:	4809      	ldr	r0, [pc, #36]	; (8006d60 <_Z23getFont_verdana_12_4bppv+0x74>)
 8006d3a:	f020 fb8f 	bl	802745c <atexit>
 8006d3e:	4628      	mov	r0, r5
 8006d40:	f01f fd8b 	bl	802685a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8006d44:	4805      	ldr	r0, [pc, #20]	; (8006d5c <_Z23getFont_verdana_12_4bppv+0x70>)
 8006d46:	b00f      	add	sp, #60	; 0x3c
 8006d48:	bd30      	pop	{r4, r5, pc}
 8006d4a:	bf00      	nop
 8006d4c:	2000290c 	.word	0x2000290c
 8006d50:	0802e39c 	.word	0x0802e39c
 8006d54:	0802e44c 	.word	0x0802e44c
 8006d58:	0802df20 	.word	0x0802df20
 8006d5c:	20002910 	.word	0x20002910
 8006d60:	08006ce9 	.word	0x08006ce9

08006d64 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8006d64:	4770      	bx	lr
	...

08006d68 <_Z23getFont_verdana_19_4bppv>:
{
 8006d68:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8006d6a:	4d17      	ldr	r5, [pc, #92]	; (8006dc8 <_Z23getFont_verdana_19_4bppv+0x60>)
 8006d6c:	682c      	ldr	r4, [r5, #0]
 8006d6e:	f3bf 8f5b 	dmb	ish
 8006d72:	f014 0401 	ands.w	r4, r4, #1
{
 8006d76:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8006d78:	d122      	bne.n	8006dc0 <_Z23getFont_verdana_19_4bppv+0x58>
 8006d7a:	4628      	mov	r0, r5
 8006d7c:	f01f fd61 	bl	8026842 <__cxa_guard_acquire>
 8006d80:	b1f0      	cbz	r0, 8006dc0 <_Z23getFont_verdana_19_4bppv+0x58>
 8006d82:	233f      	movs	r3, #63	; 0x3f
 8006d84:	9309      	str	r3, [sp, #36]	; 0x24
 8006d86:	4b11      	ldr	r3, [pc, #68]	; (8006dcc <_Z23getFont_verdana_19_4bppv+0x64>)
 8006d88:	9308      	str	r3, [sp, #32]
 8006d8a:	4b11      	ldr	r3, [pc, #68]	; (8006dd0 <_Z23getFont_verdana_19_4bppv+0x68>)
 8006d8c:	9307      	str	r3, [sp, #28]
 8006d8e:	2301      	movs	r3, #1
 8006d90:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8006d94:	9304      	str	r3, [sp, #16]
 8006d96:	2304      	movs	r3, #4
 8006d98:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006d9c:	2313      	movs	r3, #19
 8006d9e:	490d      	ldr	r1, [pc, #52]	; (8006dd4 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8006da0:	9300      	str	r3, [sp, #0]
 8006da2:	222f      	movs	r2, #47	; 0x2f
 8006da4:	2317      	movs	r3, #23
 8006da6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8006daa:	480b      	ldr	r0, [pc, #44]	; (8006dd8 <_Z23getFont_verdana_19_4bppv+0x70>)
 8006dac:	940a      	str	r4, [sp, #40]	; 0x28
 8006dae:	9401      	str	r4, [sp, #4]
 8006db0:	f7fd fb42 	bl	8004438 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006db4:	4809      	ldr	r0, [pc, #36]	; (8006ddc <_Z23getFont_verdana_19_4bppv+0x74>)
 8006db6:	f020 fb51 	bl	802745c <atexit>
 8006dba:	4628      	mov	r0, r5
 8006dbc:	f01f fd4d 	bl	802685a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8006dc0:	4805      	ldr	r0, [pc, #20]	; (8006dd8 <_Z23getFont_verdana_19_4bppv+0x70>)
 8006dc2:	b00f      	add	sp, #60	; 0x3c
 8006dc4:	bd30      	pop	{r4, r5, pc}
 8006dc6:	bf00      	nop
 8006dc8:	2000293c 	.word	0x2000293c
 8006dcc:	0802e3a0 	.word	0x0802e3a0
 8006dd0:	0802e450 	.word	0x0802e450
 8006dd4:	0802e0c4 	.word	0x0802e0c4
 8006dd8:	20002940 	.word	0x20002940
 8006ddc:	08006d65 	.word	0x08006d65

08006de0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006de0:	4770      	bx	lr
	...

08006de4 <_Z23getFont_verdana_40_4bppv>:
{
 8006de4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006de6:	4d16      	ldr	r5, [pc, #88]	; (8006e40 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8006de8:	682c      	ldr	r4, [r5, #0]
 8006dea:	f3bf 8f5b 	dmb	ish
 8006dee:	f014 0401 	ands.w	r4, r4, #1
{
 8006df2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006df4:	d120      	bne.n	8006e38 <_Z23getFont_verdana_40_4bppv+0x54>
 8006df6:	4628      	mov	r0, r5
 8006df8:	f01f fd23 	bl	8026842 <__cxa_guard_acquire>
 8006dfc:	b1e0      	cbz	r0, 8006e38 <_Z23getFont_verdana_40_4bppv+0x54>
 8006dfe:	233f      	movs	r3, #63	; 0x3f
 8006e00:	9309      	str	r3, [sp, #36]	; 0x24
 8006e02:	4b10      	ldr	r3, [pc, #64]	; (8006e44 <_Z23getFont_verdana_40_4bppv+0x60>)
 8006e04:	9308      	str	r3, [sp, #32]
 8006e06:	4b10      	ldr	r3, [pc, #64]	; (8006e48 <_Z23getFont_verdana_40_4bppv+0x64>)
 8006e08:	4910      	ldr	r1, [pc, #64]	; (8006e4c <_Z23getFont_verdana_40_4bppv+0x68>)
 8006e0a:	4811      	ldr	r0, [pc, #68]	; (8006e50 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8006e0c:	940a      	str	r4, [sp, #40]	; 0x28
 8006e0e:	2201      	movs	r2, #1
 8006e10:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8006e14:	2304      	movs	r3, #4
 8006e16:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8006e1a:	2328      	movs	r3, #40	; 0x28
 8006e1c:	9300      	str	r3, [sp, #0]
 8006e1e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8006e22:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8006e26:	9405      	str	r4, [sp, #20]
 8006e28:	f7fd fb06 	bl	8004438 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006e2c:	4809      	ldr	r0, [pc, #36]	; (8006e54 <_Z23getFont_verdana_40_4bppv+0x70>)
 8006e2e:	f020 fb15 	bl	802745c <atexit>
 8006e32:	4628      	mov	r0, r5
 8006e34:	f01f fd11 	bl	802685a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8006e38:	4805      	ldr	r0, [pc, #20]	; (8006e50 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8006e3a:	b00f      	add	sp, #60	; 0x3c
 8006e3c:	bd30      	pop	{r4, r5, pc}
 8006e3e:	bf00      	nop
 8006e40:	2000296c 	.word	0x2000296c
 8006e44:	0802e444 	.word	0x0802e444
 8006e48:	0802e454 	.word	0x0802e454
 8006e4c:	0802e358 	.word	0x0802e358
 8006e50:	20002970 	.word	0x20002970
 8006e54:	08006de1 	.word	0x08006de1

08006e58 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8006e58:	2000      	movs	r0, #0
 8006e5a:	4770      	bx	lr

08006e5c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8006e5c:	2000      	movs	r0, #0
 8006e5e:	4770      	bx	lr

08006e60 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006e60:	b40e      	push	{r1, r2, r3}
 8006e62:	b503      	push	{r0, r1, lr}
 8006e64:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006e66:	2100      	movs	r1, #0
{
 8006e68:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8006e6c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006e6e:	f00d ff45 	bl	8014cfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006e72:	b002      	add	sp, #8
 8006e74:	f85d eb04 	ldr.w	lr, [sp], #4
 8006e78:	b003      	add	sp, #12
 8006e7a:	4770      	bx	lr

08006e7c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006e7c:	b40c      	push	{r2, r3}
 8006e7e:	b507      	push	{r0, r1, r2, lr}
 8006e80:	ab04      	add	r3, sp, #16
 8006e82:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8006e86:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8006e88:	f00d ff38 	bl	8014cfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006e8c:	b003      	add	sp, #12
 8006e8e:	f85d eb04 	ldr.w	lr, [sp], #4
 8006e92:	b002      	add	sp, #8
 8006e94:	4770      	bx	lr
	...

08006e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8006e98:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8006e9a:	b510      	push	{r4, lr}
 8006e9c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8006e9e:	b373      	cbz	r3, 8006efe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8006ea0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8006ea2:	b92b      	cbnz	r3, 8006eb0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8006ea4:	4b18      	ldr	r3, [pc, #96]	; (8006f08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8006ea6:	4a19      	ldr	r2, [pc, #100]	; (8006f0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8006ea8:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8006eaa:	4819      	ldr	r0, [pc, #100]	; (8006f10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8006eac:	f020 fab8 	bl	8027420 <__assert_func>
            return buffer[pos];
 8006eb0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8006eb2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006eb6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8006eb8:	b30b      	cbz	r3, 8006efe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8006eba:	f00f fb1c 	bl	80164f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8006ebe:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8006ec0:	2b01      	cmp	r3, #1
 8006ec2:	d803      	bhi.n	8006ecc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8006ec4:	4b13      	ldr	r3, [pc, #76]	; (8006f14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8006ec6:	4a14      	ldr	r2, [pc, #80]	; (8006f18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8006ec8:	21cb      	movs	r1, #203	; 0xcb
 8006eca:	e7ee      	b.n	8006eaa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8006ecc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8006ece:	1c53      	adds	r3, r2, #1
 8006ed0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8006ed2:	2b09      	cmp	r3, #9
 8006ed4:	4619      	mov	r1, r3
 8006ed6:	bf88      	it	hi
 8006ed8:	f1a3 010a 	subhi.w	r1, r3, #10
 8006edc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8006ee0:	f640 103f 	movw	r0, #2367	; 0x93f
 8006ee4:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8006ee6:	4281      	cmp	r1, r0
 8006ee8:	d109      	bne.n	8006efe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8006eea:	2b0a      	cmp	r3, #10
 8006eec:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8006ef0:	bf28      	it	cs
 8006ef2:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8006ef4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8006ef8:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8006efa:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8006efc:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8006efe:	4620      	mov	r0, r4
}
 8006f00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8006f04:	f00f b9fa 	b.w	80162fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8006f08:	0802a880 	.word	0x0802a880
 8006f0c:	0802a889 	.word	0x0802a889
 8006f10:	0802a934 	.word	0x0802a934
 8006f14:	0802a97e 	.word	0x0802a97e
 8006f18:	0802a98c 	.word	0x0802a98c

08006f1c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8006f1c:	f00f b9b5 	b.w	801628a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08006f20 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8006f20:	b510      	push	{r4, lr}
 8006f22:	b086      	sub	sp, #24
 8006f24:	ac02      	add	r4, sp, #8
 8006f26:	e884 0006 	stmia.w	r4, {r1, r2}
 8006f2a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8006f2c:	ab0a      	add	r3, sp, #40	; 0x28
 8006f2e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8006f30:	9301      	str	r3, [sp, #4]
 8006f32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006f34:	9300      	str	r3, [sp, #0]
 8006f36:	4621      	mov	r1, r4
 8006f38:	9b08      	ldr	r3, [sp, #32]
 8006f3a:	f00c faa3 	bl	8013484 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8006f3e:	b006      	add	sp, #24
 8006f40:	bd10      	pop	{r4, pc}
	...

08006f44 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8006f44:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8006f46:	bb18      	cbnz	r0, 8006f90 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8006f48:	4b12      	ldr	r3, [pc, #72]	; (8006f94 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8006f4a:	4813      	ldr	r0, [pc, #76]	; (8006f98 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8006f4c:	681c      	ldr	r4, [r3, #0]
 8006f4e:	4913      	ldr	r1, [pc, #76]	; (8006f9c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8006f50:	b1b4      	cbz	r4, 8006f80 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006f52:	6822      	ldr	r2, [r4, #0]
 8006f54:	4422      	add	r2, r4
 8006f56:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8006f58:	6862      	ldr	r2, [r4, #4]
 8006f5a:	4422      	add	r2, r4
 8006f5c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8006f5e:	68a2      	ldr	r2, [r4, #8]
 8006f60:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8006f62:	4b0f      	ldr	r3, [pc, #60]	; (8006fa0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8006f64:	2200      	movs	r2, #0
 8006f66:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8006f68:	f000 f838 	bl	8006fdc <_ZN17TypedTextDatabase8getFontsEv>
 8006f6c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8006f6e:	f000 f833 	bl	8006fd8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8006f72:	4b0c      	ldr	r3, [pc, #48]	; (8006fa4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8006f74:	601c      	str	r4, [r3, #0]
        fonts = f;
 8006f76:	4b0c      	ldr	r3, [pc, #48]	; (8006fa8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8006f78:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8006f7a:	4b0c      	ldr	r3, [pc, #48]	; (8006fac <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8006f7c:	8018      	strh	r0, [r3, #0]
    }
}
 8006f7e:	e007      	b.n	8006f90 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8006f80:	4b0b      	ldr	r3, [pc, #44]	; (8006fb0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8006f82:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8006f84:	4b0b      	ldr	r3, [pc, #44]	; (8006fb4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8006f86:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8006f88:	4b0b      	ldr	r3, [pc, #44]	; (8006fb8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8006f8a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8006f8c:	2c00      	cmp	r4, #0
 8006f8e:	d1e8      	bne.n	8006f62 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8006f90:	bd38      	pop	{r3, r4, r5, pc}
 8006f92:	bf00      	nop
 8006f94:	2000299c 	.word	0x2000299c
 8006f98:	200029a0 	.word	0x200029a0
 8006f9c:	200029a4 	.word	0x200029a4
 8006fa0:	200029a8 	.word	0x200029a8
 8006fa4:	20013814 	.word	0x20013814
 8006fa8:	2001381c 	.word	0x2001381c
 8006fac:	20013818 	.word	0x20013818
 8006fb0:	0802e564 	.word	0x0802e564
 8006fb4:	0802e458 	.word	0x0802e458
 8006fb8:	0802e9b0 	.word	0x0802e9b0

08006fbc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8006fbc:	4b04      	ldr	r3, [pc, #16]	; (8006fd0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8006fbe:	681b      	ldr	r3, [r3, #0]
 8006fc0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8006fc4:	4b03      	ldr	r3, [pc, #12]	; (8006fd4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8006fc6:	681b      	ldr	r3, [r3, #0]
}
 8006fc8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8006fcc:	4770      	bx	lr
 8006fce:	bf00      	nop
 8006fd0:	200029a4 	.word	0x200029a4
 8006fd4:	200029a0 	.word	0x200029a0

08006fd8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8006fd8:	2043      	movs	r0, #67	; 0x43
 8006fda:	4770      	bx	lr

08006fdc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8006fdc:	4800      	ldr	r0, [pc, #0]	; (8006fe0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8006fde:	4770      	bx	lr
 8006fe0:	200029ac 	.word	0x200029ac

08006fe4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8006fe4:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8006fe6:	f7ff febf 	bl	8006d68 <_Z23getFont_verdana_19_4bppv>
};
 8006fea:	4c06      	ldr	r4, [pc, #24]	; (8007004 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8006fec:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8006fee:	f7ff fef9 	bl	8006de4 <_Z23getFont_verdana_40_4bppv>
};
 8006ff2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8006ff4:	f7ff fe3c 	bl	8006c70 <_Z23getFont_verdana_10_4bppv>
};
 8006ff8:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8006ffa:	f7ff fe77 	bl	8006cec <_Z23getFont_verdana_12_4bppv>
};
 8006ffe:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8007000:	bd10      	pop	{r4, pc}
 8007002:	bf00      	nop
 8007004:	200029ac 	.word	0x200029ac

08007008 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8007008:	4770      	bx	lr

0800700a <_ZThn4_N20CalibrationPresenterD1Ev>:
 800700a:	3804      	subs	r0, #4
 800700c:	4770      	bx	lr

0800700e <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 800700e:	4770      	bx	lr

08007010 <_ZN20CalibrationPresenter15setTimeoutValueEi>:
}

void CalibrationPresenter::setTimeoutValue(int value)
{

}
 8007010:	4770      	bx	lr

08007012 <_ZN20CalibrationPresenterD0Ev>:
 8007012:	b510      	push	{r4, lr}
 8007014:	2110      	movs	r1, #16
 8007016:	4604      	mov	r4, r0
 8007018:	f01f fc11 	bl	802683e <_ZdlPvj>
 800701c:	4620      	mov	r0, r4
 800701e:	bd10      	pop	{r4, pc}

08007020 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8007020:	f1a0 0004 	sub.w	r0, r0, #4
 8007024:	e7f5      	b.n	8007012 <_ZN20CalibrationPresenterD0Ev>

08007026 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:
 8007026:	4770      	bx	lr

08007028 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8007028:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800702a:	2200      	movs	r2, #0
 800702c:	6082      	str	r2, [r0, #8]
    : view(v)
 800702e:	4a04      	ldr	r2, [pc, #16]	; (8007040 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8007030:	60c1      	str	r1, [r0, #12]
 8007032:	f102 0408 	add.w	r4, r2, #8
 8007036:	3224      	adds	r2, #36	; 0x24
 8007038:	6004      	str	r4, [r0, #0]
 800703a:	6042      	str	r2, [r0, #4]
}
 800703c:	bd10      	pop	{r4, pc}
 800703e:	bf00      	nop
 8007040:	0802aa60 	.word	0x0802aa60

08007044 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8007044:	4770      	bx	lr
	...

08007048 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8007048:	b510      	push	{r4, lr}
 800704a:	4b03      	ldr	r3, [pc, #12]	; (8007058 <_ZN15CalibrationViewD1Ev+0x10>)
 800704c:	6003      	str	r3, [r0, #0]
 800704e:	4604      	mov	r4, r0
 8007050:	f7fb f9aa 	bl	80023a8 <_ZN19CalibrationViewBaseD1Ev>
 8007054:	4620      	mov	r0, r4
 8007056:	bd10      	pop	{r4, pc}
 8007058:	0802aa98 	.word	0x0802aa98

0800705c <_ZN15CalibrationViewD0Ev>:
 800705c:	b510      	push	{r4, lr}
 800705e:	4604      	mov	r4, r0
 8007060:	f7ff fff2 	bl	8007048 <_ZN15CalibrationViewD1Ev>
 8007064:	4620      	mov	r0, r4
 8007066:	f241 01f8 	movw	r1, #4344	; 0x10f8
 800706a:	f01f fbe8 	bl	802683e <_ZdlPvj>
 800706e:	4620      	mov	r0, r4
 8007070:	bd10      	pop	{r4, pc}
	...

08007074 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8007074:	b510      	push	{r4, lr}
 8007076:	4604      	mov	r4, r0
 8007078:	f7fb fa98 	bl	80025ac <_ZN19CalibrationViewBaseC1Ev>
 800707c:	4b01      	ldr	r3, [pc, #4]	; (8007084 <_ZN15CalibrationViewC1Ev+0x10>)
 800707e:	6023      	str	r3, [r4, #0]
}
 8007080:	4620      	mov	r0, r4
 8007082:	bd10      	pop	{r4, pc}
 8007084:	0802aa98 	.word	0x0802aa98

08007088 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8007088:	f7fb b95b 	b.w	8002342 <_ZN19CalibrationViewBase11setupScreenEv>

0800708c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800708c:	4770      	bx	lr

0800708e <_ZN19FrontendApplicationD0Ev>:
 800708e:	b510      	push	{r4, lr}
 8007090:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8007094:	4604      	mov	r4, r0
 8007096:	f01f fbd2 	bl	802683e <_ZdlPvj>
 800709a:	4620      	mov	r0, r4
 800709c:	bd10      	pop	{r4, pc}

0800709e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800709e:	b510      	push	{r4, lr}
 80070a0:	4604      	mov	r4, r0
    {
        model.tick();
 80070a2:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80070a6:	f000 fa83 	bl	80075b0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80070aa:	4620      	mov	r0, r4
    }
 80070ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80070b0:	f00c bf2a 	b.w	8013f08 <_ZN8touchgfx11Application15handleTickEventEv>

080070b4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80070b4:	b510      	push	{r4, lr}
 80070b6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80070b8:	f7fb ff14 	bl	8002ee4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80070bc:	4b01      	ldr	r3, [pc, #4]	; (80070c4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80070be:	6023      	str	r3, [r4, #0]
{

}
 80070c0:	4620      	mov	r0, r4
 80070c2:	bd10      	pop	{r4, pc}
 80070c4:	0802aacc 	.word	0x0802aacc

080070c8 <_ZN17Gauge_with_ValuesD1Ev>:
 80070c8:	b510      	push	{r4, lr}
 80070ca:	4b03      	ldr	r3, [pc, #12]	; (80070d8 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80070cc:	6003      	str	r3, [r0, #0]
 80070ce:	4604      	mov	r4, r0
 80070d0:	f7fc fffe 	bl	80040d0 <_ZN21Gauge_with_ValuesBaseD1Ev>
 80070d4:	4620      	mov	r0, r4
 80070d6:	bd10      	pop	{r4, pc}
 80070d8:	0802ab20 	.word	0x0802ab20

080070dc <_ZN17Gauge_with_ValuesD0Ev>:
 80070dc:	b510      	push	{r4, lr}
 80070de:	4604      	mov	r4, r0
 80070e0:	f7ff fff2 	bl	80070c8 <_ZN17Gauge_with_ValuesD1Ev>
 80070e4:	4620      	mov	r0, r4
 80070e6:	f44f 7162 	mov.w	r1, #904	; 0x388
 80070ea:	f01f fba8 	bl	802683e <_ZdlPvj>
 80070ee:	4620      	mov	r0, r4
 80070f0:	bd10      	pop	{r4, pc}
	...

080070f4 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 80070f4:	b510      	push	{r4, lr}
 80070f6:	4604      	mov	r4, r0
 80070f8:	f7fc fff4 	bl	80040e4 <_ZN21Gauge_with_ValuesBaseC1Ev>
 80070fc:	4b01      	ldr	r3, [pc, #4]	; (8007104 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 80070fe:	6023      	str	r3, [r4, #0]
{

}
 8007100:	4620      	mov	r0, r4
 8007102:	bd10      	pop	{r4, pc}
 8007104:	0802ab20 	.word	0x0802ab20

08007108 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8007108:	f7fc bfe3 	b.w	80040d2 <_ZN21Gauge_with_ValuesBase10initializeEv>

0800710c <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800710c:	4770      	bx	lr

0800710e <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800710e:	3804      	subs	r0, #4
 8007110:	4770      	bx	lr

08007112 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8007112:	4770      	bx	lr

08007114 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007114:	68c0      	ldr	r0, [r0, #12]
 8007116:	6803      	ldr	r3, [r0, #0]
 8007118:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800711a:	4718      	bx	r3

0800711c <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800711c:	f1a0 0004 	sub.w	r0, r0, #4
 8007120:	f7ff bff8 	b.w	8007114 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08007124 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8007124:	b510      	push	{r4, lr}
 8007126:	2110      	movs	r1, #16
 8007128:	4604      	mov	r4, r0
 800712a:	f01f fb88 	bl	802683e <_ZdlPvj>
 800712e:	4620      	mov	r0, r4
 8007130:	bd10      	pop	{r4, pc}

08007132 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8007132:	f1a0 0004 	sub.w	r0, r0, #4
 8007136:	e7f5      	b.n	8007124 <_ZN18Main_MenuPresenterD0Ev>

08007138 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8007138:	b510      	push	{r4, lr}
 800713a:	2200      	movs	r2, #0
 800713c:	6082      	str	r2, [r0, #8]
    : view(v)
 800713e:	4a04      	ldr	r2, [pc, #16]	; (8007150 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8007140:	60c1      	str	r1, [r0, #12]
 8007142:	f102 0408 	add.w	r4, r2, #8
 8007146:	3224      	adds	r2, #36	; 0x24
 8007148:	6004      	str	r4, [r0, #0]
 800714a:	6042      	str	r2, [r0, #4]
}
 800714c:	bd10      	pop	{r4, pc}
 800714e:	bf00      	nop
 8007150:	0802abac 	.word	0x0802abac

08007154 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8007154:	4770      	bx	lr
	...

08007158 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8007158:	b510      	push	{r4, lr}
 800715a:	4b03      	ldr	r3, [pc, #12]	; (8007168 <_ZN13Main_MenuViewD1Ev+0x10>)
 800715c:	6003      	str	r3, [r0, #0]
 800715e:	4604      	mov	r4, r0
 8007160:	f7fd f9be 	bl	80044e0 <_ZN17Main_MenuViewBaseD1Ev>
 8007164:	4620      	mov	r0, r4
 8007166:	bd10      	pop	{r4, pc}
 8007168:	0802abe8 	.word	0x0802abe8

0800716c <_ZN13Main_MenuViewD0Ev>:
 800716c:	b510      	push	{r4, lr}
 800716e:	4604      	mov	r4, r0
 8007170:	f7ff fff2 	bl	8007158 <_ZN13Main_MenuViewD1Ev>
 8007174:	4620      	mov	r0, r4
 8007176:	f241 117c 	movw	r1, #4476	; 0x117c
 800717a:	f01f fb60 	bl	802683e <_ZdlPvj>
 800717e:	4620      	mov	r0, r4
 8007180:	bd10      	pop	{r4, pc}
	...

08007184 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8007184:	b510      	push	{r4, lr}
 8007186:	4604      	mov	r4, r0
 8007188:	f7fd f9f4 	bl	8004574 <_ZN17Main_MenuViewBaseC1Ev>
 800718c:	4b01      	ldr	r3, [pc, #4]	; (8007194 <_ZN13Main_MenuViewC1Ev+0x10>)
 800718e:	6023      	str	r3, [r4, #0]
}
 8007190:	4620      	mov	r0, r4
 8007192:	bd10      	pop	{r4, pc}
 8007194:	0802abe8 	.word	0x0802abe8

08007198 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8007198:	f7fd b97e 	b.w	8004498 <_ZN17Main_MenuViewBase11setupScreenEv>

0800719c <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800719c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800719e:	4a0a      	ldr	r2, [pc, #40]	; (80071c8 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80071a0:	4605      	mov	r5, r0
 80071a2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80071a4:	460b      	mov	r3, r1
 80071a6:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80071aa:	2104      	movs	r1, #4
 80071ac:	f00f ff4c 	bl	8017048 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80071b0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80071b4:	f00d fecc 	bl	8014f50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80071b8:	b92c      	cbnz	r4, 80071c6 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80071ba:	f00c fde1 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80071be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80071c2:	f7fb bf8f 	b.w	80030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80071c6:	bd38      	pop	{r3, r4, r5, pc}
 80071c8:	0802abdc 	.word	0x0802abdc

080071cc <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80071cc:	4770      	bx	lr

080071ce <_ZThn4_N20MeasurementPresenterD1Ev>:
 80071ce:	3804      	subs	r0, #4
 80071d0:	4770      	bx	lr

080071d2 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80071d2:	4770      	bx	lr

080071d4 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80071d4:	68c0      	ldr	r0, [r0, #12]
 80071d6:	6803      	ldr	r3, [r0, #0]
 80071d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80071da:	4718      	bx	r3

080071dc <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80071dc:	f1a0 0004 	sub.w	r0, r0, #4
 80071e0:	f7ff bff8 	b.w	80071d4 <_ZN20MeasurementPresenter15setTimeoutValueEi>

080071e4 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 80071e4:	b510      	push	{r4, lr}
 80071e6:	2110      	movs	r1, #16
 80071e8:	4604      	mov	r4, r0
 80071ea:	f01f fb28 	bl	802683e <_ZdlPvj>
 80071ee:	4620      	mov	r0, r4
 80071f0:	bd10      	pop	{r4, pc}

080071f2 <_ZThn4_N20MeasurementPresenterD0Ev>:
 80071f2:	f1a0 0004 	sub.w	r0, r0, #4
 80071f6:	e7f5      	b.n	80071e4 <_ZN20MeasurementPresenterD0Ev>

080071f8 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 80071f8:	b510      	push	{r4, lr}
 80071fa:	2200      	movs	r2, #0
 80071fc:	6082      	str	r2, [r0, #8]
    : view(v)
 80071fe:	4a04      	ldr	r2, [pc, #16]	; (8007210 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8007200:	60c1      	str	r1, [r0, #12]
 8007202:	f102 0408 	add.w	r4, r2, #8
 8007206:	3224      	adds	r2, #36	; 0x24
 8007208:	6004      	str	r4, [r0, #0]
 800720a:	6042      	str	r2, [r0, #4]
}
 800720c:	bd10      	pop	{r4, pc}
 800720e:	bf00      	nop
 8007210:	0802ac18 	.word	0x0802ac18

08007214 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8007214:	4770      	bx	lr
	...

08007218 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8007218:	b510      	push	{r4, lr}
 800721a:	4b03      	ldr	r3, [pc, #12]	; (8007228 <_ZN15MeasurementViewD1Ev+0x10>)
 800721c:	6003      	str	r3, [r0, #0]
 800721e:	4604      	mov	r4, r0
 8007220:	f7fd fc18 	bl	8004a54 <_ZN19MeasurementViewBaseD1Ev>
 8007224:	4620      	mov	r0, r4
 8007226:	bd10      	pop	{r4, pc}
 8007228:	0802ac50 	.word	0x0802ac50

0800722c <_ZN15MeasurementViewD0Ev>:
 800722c:	b510      	push	{r4, lr}
 800722e:	4604      	mov	r4, r0
 8007230:	f7ff fff2 	bl	8007218 <_ZN15MeasurementViewD1Ev>
 8007234:	4620      	mov	r0, r4
 8007236:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800723a:	f01f fb00 	bl	802683e <_ZdlPvj>
 800723e:	4620      	mov	r0, r4
 8007240:	bd10      	pop	{r4, pc}
	...

08007244 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8007244:	b510      	push	{r4, lr}
 8007246:	4604      	mov	r4, r0
 8007248:	f7fd fc3e 	bl	8004ac8 <_ZN19MeasurementViewBaseC1Ev>
 800724c:	4b01      	ldr	r3, [pc, #4]	; (8007254 <_ZN15MeasurementViewC1Ev+0x10>)
 800724e:	6023      	str	r3, [r4, #0]
}
 8007250:	4620      	mov	r0, r4
 8007252:	bd10      	pop	{r4, pc}
 8007254:	0802ac50 	.word	0x0802ac50

08007258 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8007258:	f7fd bbd8 	b.w	8004a0c <_ZN19MeasurementViewBase11setupScreenEv>

0800725c <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800725c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800725e:	4a0a      	ldr	r2, [pc, #40]	; (8007288 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8007260:	4605      	mov	r5, r0
 8007262:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007264:	460b      	mov	r3, r1
 8007266:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800726a:	2104      	movs	r1, #4
 800726c:	f00f feec 	bl	8017048 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007270:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007274:	f00d fe6c 	bl	8014f50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007278:	b92c      	cbnz	r4, 8007286 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800727a:	f00c fd81 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800727e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007282:	f7fb bf2f 	b.w	80030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007286:	bd38      	pop	{r3, r4, r5, pc}
 8007288:	0802abdc 	.word	0x0802abdc

0800728c <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800728c:	4770      	bx	lr

0800728e <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800728e:	3804      	subs	r0, #4
 8007290:	4770      	bx	lr

08007292 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8007292:	4770      	bx	lr

08007294 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:
}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{

}
 8007294:	4770      	bx	lr

08007296 <_ZN29Measurement_AccuratePresenterD0Ev>:
 8007296:	b510      	push	{r4, lr}
 8007298:	2110      	movs	r1, #16
 800729a:	4604      	mov	r4, r0
 800729c:	f01f facf 	bl	802683e <_ZdlPvj>
 80072a0:	4620      	mov	r0, r4
 80072a2:	bd10      	pop	{r4, pc}

080072a4 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80072a4:	f1a0 0004 	sub.w	r0, r0, #4
 80072a8:	e7f5      	b.n	8007296 <_ZN29Measurement_AccuratePresenterD0Ev>

080072aa <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:
 80072aa:	4770      	bx	lr

080072ac <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80072ac:	b510      	push	{r4, lr}
 80072ae:	2200      	movs	r2, #0
 80072b0:	6082      	str	r2, [r0, #8]
    : view(v)
 80072b2:	4a04      	ldr	r2, [pc, #16]	; (80072c4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80072b4:	60c1      	str	r1, [r0, #12]
 80072b6:	f102 0408 	add.w	r4, r2, #8
 80072ba:	3224      	adds	r2, #36	; 0x24
 80072bc:	6004      	str	r4, [r0, #0]
 80072be:	6042      	str	r2, [r0, #4]
}
 80072c0:	bd10      	pop	{r4, pc}
 80072c2:	bf00      	nop
 80072c4:	0802ac80 	.word	0x0802ac80

080072c8 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 80072c8:	4770      	bx	lr
	...

080072cc <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 80072cc:	b510      	push	{r4, lr}
 80072ce:	4b03      	ldr	r3, [pc, #12]	; (80072dc <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 80072d0:	6003      	str	r3, [r0, #0]
 80072d2:	4604      	mov	r4, r0
 80072d4:	f7fd fe42 	bl	8004f5c <_ZN28Measurement_AccurateViewBaseD1Ev>
 80072d8:	4620      	mov	r0, r4
 80072da:	bd10      	pop	{r4, pc}
 80072dc:	0802acb8 	.word	0x0802acb8

080072e0 <_ZN24Measurement_AccurateViewD0Ev>:
 80072e0:	b510      	push	{r4, lr}
 80072e2:	4604      	mov	r4, r0
 80072e4:	f7ff fff2 	bl	80072cc <_ZN24Measurement_AccurateViewD1Ev>
 80072e8:	4620      	mov	r0, r4
 80072ea:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80072ee:	f01f faa6 	bl	802683e <_ZdlPvj>
 80072f2:	4620      	mov	r0, r4
 80072f4:	bd10      	pop	{r4, pc}
	...

080072f8 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 80072f8:	b510      	push	{r4, lr}
 80072fa:	4604      	mov	r4, r0
 80072fc:	f7fd fe68 	bl	8004fd0 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8007300:	4b01      	ldr	r3, [pc, #4]	; (8007308 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8007302:	6023      	str	r3, [r4, #0]
}
 8007304:	4620      	mov	r0, r4
 8007306:	bd10      	pop	{r4, pc}
 8007308:	0802acb8 	.word	0x0802acb8

0800730c <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800730c:	f7fd be02 	b.w	8004f14 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08007310 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8007310:	4770      	bx	lr

08007312 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8007312:	3804      	subs	r0, #4
 8007314:	4770      	bx	lr

08007316 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8007316:	4770      	bx	lr

08007318 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8007318:	4770      	bx	lr

0800731a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800731a:	b510      	push	{r4, lr}
 800731c:	2110      	movs	r1, #16
 800731e:	4604      	mov	r4, r0
 8007320:	f01f fa8d 	bl	802683e <_ZdlPvj>
 8007324:	4620      	mov	r0, r4
 8007326:	bd10      	pop	{r4, pc}

08007328 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8007328:	f1a0 0004 	sub.w	r0, r0, #4
 800732c:	e7f5      	b.n	800731a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800732e <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800732e:	4770      	bx	lr

08007330 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8007330:	b510      	push	{r4, lr}
 8007332:	2200      	movs	r2, #0
 8007334:	6082      	str	r2, [r0, #8]
    : view(v)
 8007336:	4a04      	ldr	r2, [pc, #16]	; (8007348 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8007338:	60c1      	str	r1, [r0, #12]
 800733a:	f102 0408 	add.w	r4, r2, #8
 800733e:	3224      	adds	r2, #36	; 0x24
 8007340:	6004      	str	r4, [r0, #0]
 8007342:	6042      	str	r2, [r0, #4]
}
 8007344:	bd10      	pop	{r4, pc}
 8007346:	bf00      	nop
 8007348:	0802ace4 	.word	0x0802ace4

0800734c <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800734c:	4770      	bx	lr
	...

08007350 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8007350:	b510      	push	{r4, lr}
 8007352:	4b03      	ldr	r3, [pc, #12]	; (8007360 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8007354:	6003      	str	r3, [r0, #0]
 8007356:	4604      	mov	r4, r0
 8007358:	f7fe f88c 	bl	8005474 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800735c:	4620      	mov	r0, r4
 800735e:	bd10      	pop	{r4, pc}
 8007360:	0802ad1c 	.word	0x0802ad1c

08007364 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8007364:	b510      	push	{r4, lr}
 8007366:	4604      	mov	r4, r0
 8007368:	f7ff fff2 	bl	8007350 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 800736c:	4620      	mov	r0, r4
 800736e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007372:	f01f fa64 	bl	802683e <_ZdlPvj>
 8007376:	4620      	mov	r0, r4
 8007378:	bd10      	pop	{r4, pc}
	...

0800737c <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 800737c:	b510      	push	{r4, lr}
 800737e:	4604      	mov	r4, r0
 8007380:	f7fe f898 	bl	80054b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8007384:	4b01      	ldr	r3, [pc, #4]	; (800738c <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8007386:	6023      	str	r3, [r4, #0]
}
 8007388:	4620      	mov	r0, r4
 800738a:	bd10      	pop	{r4, pc}
 800738c:	0802ad1c 	.word	0x0802ad1c

08007390 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8007390:	f7fe b861 	b.w	8005456 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08007394 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8007394:	4770      	bx	lr

08007396 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8007396:	3804      	subs	r0, #4
 8007398:	4770      	bx	lr

0800739a <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800739a:	4770      	bx	lr

0800739c <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 800739c:	4770      	bx	lr

0800739e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800739e:	b510      	push	{r4, lr}
 80073a0:	2110      	movs	r1, #16
 80073a2:	4604      	mov	r4, r0
 80073a4:	f01f fa4b 	bl	802683e <_ZdlPvj>
 80073a8:	4620      	mov	r0, r4
 80073aa:	bd10      	pop	{r4, pc}

080073ac <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80073ac:	f1a0 0004 	sub.w	r0, r0, #4
 80073b0:	e7f5      	b.n	800739e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080073b2 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80073b2:	4770      	bx	lr

080073b4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 80073b4:	b510      	push	{r4, lr}
 80073b6:	2200      	movs	r2, #0
 80073b8:	6082      	str	r2, [r0, #8]
    : view(v)
 80073ba:	4a04      	ldr	r2, [pc, #16]	; (80073cc <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80073bc:	60c1      	str	r1, [r0, #12]
 80073be:	f102 0408 	add.w	r4, r2, #8
 80073c2:	3224      	adds	r2, #36	; 0x24
 80073c4:	6004      	str	r4, [r0, #0]
 80073c6:	6042      	str	r2, [r0, #4]
}
 80073c8:	bd10      	pop	{r4, pc}
 80073ca:	bf00      	nop
 80073cc:	0802ad48 	.word	0x0802ad48

080073d0 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 80073d0:	4770      	bx	lr
	...

080073d4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 80073d4:	b510      	push	{r4, lr}
 80073d6:	4b03      	ldr	r3, [pc, #12]	; (80073e4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 80073d8:	6003      	str	r3, [r0, #0]
 80073da:	4604      	mov	r4, r0
 80073dc:	f7fe fa0e 	bl	80057fc <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80073e0:	4620      	mov	r0, r4
 80073e2:	bd10      	pop	{r4, pc}
 80073e4:	0802ad80 	.word	0x0802ad80

080073e8 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80073e8:	b510      	push	{r4, lr}
 80073ea:	4604      	mov	r4, r0
 80073ec:	f7ff fff2 	bl	80073d4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80073f0:	4620      	mov	r0, r4
 80073f2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80073f6:	f01f fa22 	bl	802683e <_ZdlPvj>
 80073fa:	4620      	mov	r0, r4
 80073fc:	bd10      	pop	{r4, pc}
	...

08007400 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8007400:	b510      	push	{r4, lr}
 8007402:	4604      	mov	r4, r0
 8007404:	f7fe fa1a 	bl	800583c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8007408:	4b01      	ldr	r3, [pc, #4]	; (8007410 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800740a:	6023      	str	r3, [r4, #0]
}
 800740c:	4620      	mov	r0, r4
 800740e:	bd10      	pop	{r4, pc}
 8007410:	0802ad80 	.word	0x0802ad80

08007414 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8007414:	f7fe b9e3 	b.w	80057de <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08007418 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8007418:	4770      	bx	lr

0800741a <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800741a:	3804      	subs	r0, #4
 800741c:	4770      	bx	lr

0800741e <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800741e:	4770      	bx	lr

08007420 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:
}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{

}
 8007420:	4770      	bx	lr

08007422 <_ZN27Measurement_SinglePresenterD0Ev>:
 8007422:	b510      	push	{r4, lr}
 8007424:	2110      	movs	r1, #16
 8007426:	4604      	mov	r4, r0
 8007428:	f01f fa09 	bl	802683e <_ZdlPvj>
 800742c:	4620      	mov	r0, r4
 800742e:	bd10      	pop	{r4, pc}

08007430 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8007430:	f1a0 0004 	sub.w	r0, r0, #4
 8007434:	e7f5      	b.n	8007422 <_ZN27Measurement_SinglePresenterD0Ev>

08007436 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:
 8007436:	4770      	bx	lr

08007438 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8007438:	b510      	push	{r4, lr}
 800743a:	2200      	movs	r2, #0
 800743c:	6082      	str	r2, [r0, #8]
    : view(v)
 800743e:	4a04      	ldr	r2, [pc, #16]	; (8007450 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8007440:	60c1      	str	r1, [r0, #12]
 8007442:	f102 0408 	add.w	r4, r2, #8
 8007446:	3224      	adds	r2, #36	; 0x24
 8007448:	6004      	str	r4, [r0, #0]
 800744a:	6042      	str	r2, [r0, #4]
}
 800744c:	bd10      	pop	{r4, pc}
 800744e:	bf00      	nop
 8007450:	0802adac 	.word	0x0802adac

08007454 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8007454:	4770      	bx	lr
	...

08007458 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8007458:	b510      	push	{r4, lr}
 800745a:	4b03      	ldr	r3, [pc, #12]	; (8007468 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800745c:	6003      	str	r3, [r0, #0]
 800745e:	4604      	mov	r4, r0
 8007460:	f7fe fb82 	bl	8005b68 <_ZN26Measurement_SingleViewBaseD1Ev>
 8007464:	4620      	mov	r0, r4
 8007466:	bd10      	pop	{r4, pc}
 8007468:	0802ade4 	.word	0x0802ade4

0800746c <_ZN22Measurement_SingleViewD0Ev>:
 800746c:	b510      	push	{r4, lr}
 800746e:	4604      	mov	r4, r0
 8007470:	f7ff fff2 	bl	8007458 <_ZN22Measurement_SingleViewD1Ev>
 8007474:	4620      	mov	r0, r4
 8007476:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800747a:	f01f f9e0 	bl	802683e <_ZdlPvj>
 800747e:	4620      	mov	r0, r4
 8007480:	bd10      	pop	{r4, pc}
	...

08007484 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8007484:	b510      	push	{r4, lr}
 8007486:	4604      	mov	r4, r0
 8007488:	f7fe fba8 	bl	8005bdc <_ZN26Measurement_SingleViewBaseC1Ev>
 800748c:	4b01      	ldr	r3, [pc, #4]	; (8007494 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800748e:	6023      	str	r3, [r4, #0]
}
 8007490:	4620      	mov	r0, r4
 8007492:	bd10      	pop	{r4, pc}
 8007494:	0802ade4 	.word	0x0802ade4

08007498 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8007498:	f7fe bb42 	b.w	8005b20 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800749c <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800749c:	4770      	bx	lr

0800749e <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800749e:	3804      	subs	r0, #4
 80074a0:	4770      	bx	lr

080074a2 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80074a2:	4770      	bx	lr

080074a4 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80074a4:	4770      	bx	lr

080074a6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80074a6:	b510      	push	{r4, lr}
 80074a8:	2110      	movs	r1, #16
 80074aa:	4604      	mov	r4, r0
 80074ac:	f01f f9c7 	bl	802683e <_ZdlPvj>
 80074b0:	4620      	mov	r0, r4
 80074b2:	bd10      	pop	{r4, pc}

080074b4 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80074b4:	f1a0 0004 	sub.w	r0, r0, #4
 80074b8:	e7f5      	b.n	80074a6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080074ba <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80074ba:	4770      	bx	lr

080074bc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80074bc:	b510      	push	{r4, lr}
 80074be:	2200      	movs	r2, #0
 80074c0:	6082      	str	r2, [r0, #8]
    : view(v)
 80074c2:	4a04      	ldr	r2, [pc, #16]	; (80074d4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80074c4:	60c1      	str	r1, [r0, #12]
 80074c6:	f102 0408 	add.w	r4, r2, #8
 80074ca:	3224      	adds	r2, #36	; 0x24
 80074cc:	6004      	str	r4, [r0, #0]
 80074ce:	6042      	str	r2, [r0, #4]
}
 80074d0:	bd10      	pop	{r4, pc}
 80074d2:	bf00      	nop
 80074d4:	0802ae10 	.word	0x0802ae10

080074d8 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 80074d8:	4770      	bx	lr
	...

080074dc <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 80074dc:	b510      	push	{r4, lr}
 80074de:	4b03      	ldr	r3, [pc, #12]	; (80074ec <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 80074e0:	6003      	str	r3, [r0, #0]
 80074e2:	4604      	mov	r4, r0
 80074e4:	f7fe fdd2 	bl	800608c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 80074e8:	4620      	mov	r0, r4
 80074ea:	bd10      	pop	{r4, pc}
 80074ec:	0802ae48 	.word	0x0802ae48

080074f0 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 80074f0:	b510      	push	{r4, lr}
 80074f2:	4604      	mov	r4, r0
 80074f4:	f7ff fff2 	bl	80074dc <_ZN33Measurement_Single_Display_1PViewD1Ev>
 80074f8:	4620      	mov	r0, r4
 80074fa:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80074fe:	f01f f99e 	bl	802683e <_ZdlPvj>
 8007502:	4620      	mov	r0, r4
 8007504:	bd10      	pop	{r4, pc}
	...

08007508 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8007508:	b510      	push	{r4, lr}
 800750a:	4604      	mov	r4, r0
 800750c:	f7fe fdde 	bl	80060cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8007510:	4b01      	ldr	r3, [pc, #4]	; (8007518 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8007512:	6023      	str	r3, [r4, #0]
}
 8007514:	4620      	mov	r0, r4
 8007516:	bd10      	pop	{r4, pc}
 8007518:	0802ae48 	.word	0x0802ae48

0800751c <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800751c:	f7fe bda5 	b.w	800606a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08007520 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8007520:	4770      	bx	lr

08007522 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8007522:	3804      	subs	r0, #4
 8007524:	4770      	bx	lr

08007526 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8007526:	4770      	bx	lr

08007528 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8007528:	4770      	bx	lr

0800752a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800752a:	b510      	push	{r4, lr}
 800752c:	2110      	movs	r1, #16
 800752e:	4604      	mov	r4, r0
 8007530:	f01f f985 	bl	802683e <_ZdlPvj>
 8007534:	4620      	mov	r0, r4
 8007536:	bd10      	pop	{r4, pc}

08007538 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8007538:	f1a0 0004 	sub.w	r0, r0, #4
 800753c:	e7f5      	b.n	800752a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800753e <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800753e:	4770      	bx	lr

08007540 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8007540:	b510      	push	{r4, lr}
 8007542:	2200      	movs	r2, #0
 8007544:	6082      	str	r2, [r0, #8]
    : view(v)
 8007546:	4a04      	ldr	r2, [pc, #16]	; (8007558 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8007548:	60c1      	str	r1, [r0, #12]
 800754a:	f102 0408 	add.w	r4, r2, #8
 800754e:	3224      	adds	r2, #36	; 0x24
 8007550:	6004      	str	r4, [r0, #0]
 8007552:	6042      	str	r2, [r0, #4]
}
 8007554:	bd10      	pop	{r4, pc}
 8007556:	bf00      	nop
 8007558:	0802ae74 	.word	0x0802ae74

0800755c <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800755c:	4770      	bx	lr
	...

08007560 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8007560:	b510      	push	{r4, lr}
 8007562:	4b03      	ldr	r3, [pc, #12]	; (8007570 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8007564:	6003      	str	r3, [r0, #0]
 8007566:	4604      	mov	r4, r0
 8007568:	f7fe ff5c 	bl	8006424 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800756c:	4620      	mov	r0, r4
 800756e:	bd10      	pop	{r4, pc}
 8007570:	0802aeac 	.word	0x0802aeac

08007574 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8007574:	b510      	push	{r4, lr}
 8007576:	4604      	mov	r4, r0
 8007578:	f7ff fff2 	bl	8007560 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800757c:	4620      	mov	r0, r4
 800757e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007582:	f01f f95c 	bl	802683e <_ZdlPvj>
 8007586:	4620      	mov	r0, r4
 8007588:	bd10      	pop	{r4, pc}
	...

0800758c <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800758c:	b510      	push	{r4, lr}
 800758e:	4604      	mov	r4, r0
 8007590:	f7fe ff68 	bl	8006464 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8007594:	4b01      	ldr	r3, [pc, #4]	; (800759c <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8007596:	6023      	str	r3, [r4, #0]
}
 8007598:	4620      	mov	r0, r4
 800759a:	bd10      	pop	{r4, pc}
 800759c:	0802aeac 	.word	0x0802aeac

080075a0 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 80075a0:	f7fe bf2f 	b.w	8006402 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

080075a4 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 80075a4:	2100      	movs	r1, #0
 80075a6:	223c      	movs	r2, #60	; 0x3c
 80075a8:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80075ac:	4770      	bx	lr
	...

080075b0 <_ZN5Model4tickEv>:

void Model::tick()
{
 80075b0:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80075b2:	4d0a      	ldr	r5, [pc, #40]	; (80075dc <_ZN5Model4tickEv+0x2c>)
{
 80075b4:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80075b6:	6828      	ldr	r0, [r5, #0]
 80075b8:	f004 fb44 	bl	800bc44 <osMessageQueueGetCount>
 80075bc:	b168      	cbz	r0, 80075da <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80075be:	2300      	movs	r3, #0
 80075c0:	6828      	ldr	r0, [r5, #0]
 80075c2:	461a      	mov	r2, r3
 80075c4:	1d21      	adds	r1, r4, #4
 80075c6:	f004 fb09 	bl	800bbdc <osMessageQueueGet>
 80075ca:	b930      	cbnz	r0, 80075da <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80075cc:	6820      	ldr	r0, [r4, #0]
 80075ce:	6861      	ldr	r1, [r4, #4]
 80075d0:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80075d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80075d6:	689b      	ldr	r3, [r3, #8]
 80075d8:	4718      	bx	r3
}
 80075da:	bd70      	pop	{r4, r5, r6, pc}
 80075dc:	20002620 	.word	0x20002620

080075e0 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80075e0:	4770      	bx	lr

080075e2 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80075e2:	3804      	subs	r0, #4
 80075e4:	4770      	bx	lr

080075e6 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80075e6:	4770      	bx	lr

080075e8 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80075e8:	68c0      	ldr	r0, [r0, #12]
 80075ea:	6803      	ldr	r3, [r0, #0]
 80075ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80075ee:	4718      	bx	r3

080075f0 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80075f0:	f1a0 0004 	sub.w	r0, r0, #4
 80075f4:	f7ff bff8 	b.w	80075e8 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080075f8 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80075f8:	b510      	push	{r4, lr}
 80075fa:	2110      	movs	r1, #16
 80075fc:	4604      	mov	r4, r0
 80075fe:	f01f f91e 	bl	802683e <_ZdlPvj>
 8007602:	4620      	mov	r0, r4
 8007604:	bd10      	pop	{r4, pc}

08007606 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8007606:	f1a0 0004 	sub.w	r0, r0, #4
 800760a:	e7f5      	b.n	80075f8 <_ZN21Project_InfoPresenterD0Ev>

0800760c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800760c:	b510      	push	{r4, lr}
 800760e:	2200      	movs	r2, #0
 8007610:	6082      	str	r2, [r0, #8]
    : view(v)
 8007612:	4a04      	ldr	r2, [pc, #16]	; (8007624 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8007614:	60c1      	str	r1, [r0, #12]
 8007616:	f102 0408 	add.w	r4, r2, #8
 800761a:	3224      	adds	r2, #36	; 0x24
 800761c:	6004      	str	r4, [r0, #0]
 800761e:	6042      	str	r2, [r0, #4]
}
 8007620:	bd10      	pop	{r4, pc}
 8007622:	bf00      	nop
 8007624:	0802aed8 	.word	0x0802aed8

08007628 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8007628:	4770      	bx	lr
	...

0800762c <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800762c:	b510      	push	{r4, lr}
 800762e:	4b03      	ldr	r3, [pc, #12]	; (800763c <_ZN16Project_InfoViewD1Ev+0x10>)
 8007630:	6003      	str	r3, [r0, #0]
 8007632:	4604      	mov	r4, r0
 8007634:	f7ff f8b0 	bl	8006798 <_ZN20Project_InfoViewBaseD1Ev>
 8007638:	4620      	mov	r0, r4
 800763a:	bd10      	pop	{r4, pc}
 800763c:	0802af10 	.word	0x0802af10

08007640 <_ZN16Project_InfoViewD0Ev>:
 8007640:	b510      	push	{r4, lr}
 8007642:	4604      	mov	r4, r0
 8007644:	f7ff fff2 	bl	800762c <_ZN16Project_InfoViewD1Ev>
 8007648:	4620      	mov	r0, r4
 800764a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800764e:	f01f f8f6 	bl	802683e <_ZdlPvj>
 8007652:	4620      	mov	r0, r4
 8007654:	bd10      	pop	{r4, pc}
	...

08007658 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8007658:	b510      	push	{r4, lr}
 800765a:	4604      	mov	r4, r0
 800765c:	f7ff f8c4 	bl	80067e8 <_ZN20Project_InfoViewBaseC1Ev>
 8007660:	4b01      	ldr	r3, [pc, #4]	; (8007668 <_ZN16Project_InfoViewC1Ev+0x10>)
 8007662:	6023      	str	r3, [r4, #0]
}
 8007664:	4620      	mov	r0, r4
 8007666:	bd10      	pop	{r4, pc}
 8007668:	0802af10 	.word	0x0802af10

0800766c <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800766c:	f7ff b870 	b.w	8006750 <_ZN20Project_InfoViewBase11setupScreenEv>

08007670 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8007670:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007672:	4a0a      	ldr	r2, [pc, #40]	; (800769c <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8007674:	4605      	mov	r5, r0
 8007676:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007678:	460b      	mov	r3, r1
 800767a:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800767e:	2104      	movs	r1, #4
 8007680:	f00f fce2 	bl	8017048 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007684:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007688:	f00d fc62 	bl	8014f50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800768c:	b92c      	cbnz	r4, 800769a <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800768e:	f00c fb77 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007692:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007696:	f7fb bd25 	b.w	80030e4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800769a:	bd38      	pop	{r3, r4, r5, pc}
 800769c:	0802abdc 	.word	0x0802abdc

080076a0 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 80076a0:	4770      	bx	lr

080076a2 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 80076a2:	3804      	subs	r0, #4
 80076a4:	4770      	bx	lr

080076a6 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 80076a6:	4770      	bx	lr

080076a8 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 80076a8:	4770      	bx	lr

080076aa <_ZN21Shutting_OffPresenterD0Ev>:
 80076aa:	b510      	push	{r4, lr}
 80076ac:	2110      	movs	r1, #16
 80076ae:	4604      	mov	r4, r0
 80076b0:	f01f f8c5 	bl	802683e <_ZdlPvj>
 80076b4:	4620      	mov	r0, r4
 80076b6:	bd10      	pop	{r4, pc}

080076b8 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80076b8:	f1a0 0004 	sub.w	r0, r0, #4
 80076bc:	e7f5      	b.n	80076aa <_ZN21Shutting_OffPresenterD0Ev>

080076be <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80076be:	4770      	bx	lr

080076c0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80076c0:	b510      	push	{r4, lr}
 80076c2:	2200      	movs	r2, #0
 80076c4:	6082      	str	r2, [r0, #8]
    : view(v)
 80076c6:	4a04      	ldr	r2, [pc, #16]	; (80076d8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80076c8:	60c1      	str	r1, [r0, #12]
 80076ca:	f102 0408 	add.w	r4, r2, #8
 80076ce:	3224      	adds	r2, #36	; 0x24
 80076d0:	6004      	str	r4, [r0, #0]
 80076d2:	6042      	str	r2, [r0, #4]
}
 80076d4:	bd10      	pop	{r4, pc}
 80076d6:	bf00      	nop
 80076d8:	0802af40 	.word	0x0802af40

080076dc <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80076dc:	4770      	bx	lr
	...

080076e0 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80076e0:	b510      	push	{r4, lr}
 80076e2:	4b03      	ldr	r3, [pc, #12]	; (80076f0 <_ZN16Shutting_OffViewD1Ev+0x10>)
 80076e4:	6003      	str	r3, [r0, #0]
 80076e6:	4604      	mov	r4, r0
 80076e8:	f7ff fa4c 	bl	8006b84 <_ZN20Shutting_OffViewBaseD1Ev>
 80076ec:	4620      	mov	r0, r4
 80076ee:	bd10      	pop	{r4, pc}
 80076f0:	0802af78 	.word	0x0802af78

080076f4 <_ZN16Shutting_OffViewD0Ev>:
 80076f4:	b510      	push	{r4, lr}
 80076f6:	4604      	mov	r4, r0
 80076f8:	f7ff fff2 	bl	80076e0 <_ZN16Shutting_OffViewD1Ev>
 80076fc:	4620      	mov	r0, r4
 80076fe:	2198      	movs	r1, #152	; 0x98
 8007700:	f01f f89d 	bl	802683e <_ZdlPvj>
 8007704:	4620      	mov	r0, r4
 8007706:	bd10      	pop	{r4, pc}

08007708 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8007708:	b510      	push	{r4, lr}
 800770a:	4604      	mov	r4, r0
 800770c:	f7ff fa44 	bl	8006b98 <_ZN20Shutting_OffViewBaseC1Ev>
 8007710:	4b01      	ldr	r3, [pc, #4]	; (8007718 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8007712:	6023      	str	r3, [r4, #0]
}
 8007714:	4620      	mov	r0, r4
 8007716:	bd10      	pop	{r4, pc}
 8007718:	0802af78 	.word	0x0802af78

0800771c <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800771c:	f7ff ba33 	b.w	8006b86 <_ZN20Shutting_OffViewBase11setupScreenEv>

08007720 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8007720:	20f0      	movs	r0, #240	; 0xf0
 8007722:	4770      	bx	lr

08007724 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8007724:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8007728:	4770      	bx	lr
 800772a:	bf00      	nop

0800772c <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800772c:	2029      	movs	r0, #41	; 0x29
 800772e:	f7fa b9a9 	b.w	8001a84 <LCD_IO_WriteReg>
 8007732:	bf00      	nop

08007734 <ili9341_DisplayOff>:
 8007734:	2028      	movs	r0, #40	; 0x28
 8007736:	f7fa b9a5 	b.w	8001a84 <LCD_IO_WriteReg>
 800773a:	bf00      	nop

0800773c <ili9341_Init>:
{
 800773c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800773e:	f7fa f967 	bl	8001a10 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8007742:	20ca      	movs	r0, #202	; 0xca
 8007744:	f7fa f99e 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007748:	20c3      	movs	r0, #195	; 0xc3
 800774a:	f7fa f971 	bl	8001a30 <LCD_IO_WriteData>
 800774e:	2008      	movs	r0, #8
 8007750:	f7fa f96e 	bl	8001a30 <LCD_IO_WriteData>
 8007754:	2050      	movs	r0, #80	; 0x50
 8007756:	f7fa f96b 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800775a:	20cf      	movs	r0, #207	; 0xcf
 800775c:	f7fa f992 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007760:	2000      	movs	r0, #0
 8007762:	f7fa f965 	bl	8001a30 <LCD_IO_WriteData>
 8007766:	20c1      	movs	r0, #193	; 0xc1
 8007768:	f7fa f962 	bl	8001a30 <LCD_IO_WriteData>
 800776c:	2030      	movs	r0, #48	; 0x30
 800776e:	f7fa f95f 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007772:	20ed      	movs	r0, #237	; 0xed
 8007774:	f7fa f986 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007778:	2064      	movs	r0, #100	; 0x64
 800777a:	f7fa f959 	bl	8001a30 <LCD_IO_WriteData>
 800777e:	2003      	movs	r0, #3
 8007780:	f7fa f956 	bl	8001a30 <LCD_IO_WriteData>
 8007784:	2012      	movs	r0, #18
 8007786:	f7fa f953 	bl	8001a30 <LCD_IO_WriteData>
 800778a:	2081      	movs	r0, #129	; 0x81
 800778c:	f7fa f950 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007790:	20e8      	movs	r0, #232	; 0xe8
 8007792:	f7fa f977 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007796:	2085      	movs	r0, #133	; 0x85
 8007798:	f7fa f94a 	bl	8001a30 <LCD_IO_WriteData>
 800779c:	2000      	movs	r0, #0
 800779e:	f7fa f947 	bl	8001a30 <LCD_IO_WriteData>
 80077a2:	2078      	movs	r0, #120	; 0x78
 80077a4:	f7fa f944 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80077a8:	20cb      	movs	r0, #203	; 0xcb
 80077aa:	f7fa f96b 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80077ae:	2039      	movs	r0, #57	; 0x39
 80077b0:	f7fa f93e 	bl	8001a30 <LCD_IO_WriteData>
 80077b4:	202c      	movs	r0, #44	; 0x2c
 80077b6:	f7fa f93b 	bl	8001a30 <LCD_IO_WriteData>
 80077ba:	2000      	movs	r0, #0
 80077bc:	f7fa f938 	bl	8001a30 <LCD_IO_WriteData>
 80077c0:	2034      	movs	r0, #52	; 0x34
 80077c2:	f7fa f935 	bl	8001a30 <LCD_IO_WriteData>
 80077c6:	2002      	movs	r0, #2
 80077c8:	f7fa f932 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80077cc:	20f7      	movs	r0, #247	; 0xf7
 80077ce:	f7fa f959 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80077d2:	2020      	movs	r0, #32
 80077d4:	f7fa f92c 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80077d8:	20ea      	movs	r0, #234	; 0xea
 80077da:	f7fa f953 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80077de:	2000      	movs	r0, #0
 80077e0:	f7fa f926 	bl	8001a30 <LCD_IO_WriteData>
 80077e4:	2000      	movs	r0, #0
 80077e6:	f7fa f923 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80077ea:	20b1      	movs	r0, #177	; 0xb1
 80077ec:	f7fa f94a 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80077f0:	2000      	movs	r0, #0
 80077f2:	f7fa f91d 	bl	8001a30 <LCD_IO_WriteData>
 80077f6:	201b      	movs	r0, #27
 80077f8:	f7fa f91a 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80077fc:	20b6      	movs	r0, #182	; 0xb6
 80077fe:	f7fa f941 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007802:	200a      	movs	r0, #10
 8007804:	f7fa f914 	bl	8001a30 <LCD_IO_WriteData>
 8007808:	20a2      	movs	r0, #162	; 0xa2
 800780a:	f7fa f911 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800780e:	20c0      	movs	r0, #192	; 0xc0
 8007810:	f7fa f938 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007814:	2010      	movs	r0, #16
 8007816:	f7fa f90b 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800781a:	20c1      	movs	r0, #193	; 0xc1
 800781c:	f7fa f932 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007820:	2010      	movs	r0, #16
 8007822:	f7fa f905 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007826:	20c5      	movs	r0, #197	; 0xc5
 8007828:	f7fa f92c 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800782c:	2045      	movs	r0, #69	; 0x45
 800782e:	f7fa f8ff 	bl	8001a30 <LCD_IO_WriteData>
 8007832:	2015      	movs	r0, #21
 8007834:	f7fa f8fc 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007838:	20c7      	movs	r0, #199	; 0xc7
 800783a:	f7fa f923 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800783e:	2090      	movs	r0, #144	; 0x90
 8007840:	f7fa f8f6 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007844:	2036      	movs	r0, #54	; 0x36
 8007846:	f7fa f91d 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800784a:	20c8      	movs	r0, #200	; 0xc8
 800784c:	f7fa f8f0 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007850:	20f2      	movs	r0, #242	; 0xf2
 8007852:	f7fa f917 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007856:	2000      	movs	r0, #0
 8007858:	f7fa f8ea 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800785c:	20b0      	movs	r0, #176	; 0xb0
 800785e:	f7fa f911 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007862:	20c2      	movs	r0, #194	; 0xc2
 8007864:	f7fa f8e4 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007868:	20b6      	movs	r0, #182	; 0xb6
 800786a:	f7fa f90b 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800786e:	200a      	movs	r0, #10
 8007870:	f7fa f8de 	bl	8001a30 <LCD_IO_WriteData>
 8007874:	20a7      	movs	r0, #167	; 0xa7
 8007876:	f7fa f8db 	bl	8001a30 <LCD_IO_WriteData>
 800787a:	2027      	movs	r0, #39	; 0x27
 800787c:	f7fa f8d8 	bl	8001a30 <LCD_IO_WriteData>
 8007880:	2004      	movs	r0, #4
 8007882:	f7fa f8d5 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007886:	202a      	movs	r0, #42	; 0x2a
 8007888:	f7fa f8fc 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800788c:	2000      	movs	r0, #0
 800788e:	f7fa f8cf 	bl	8001a30 <LCD_IO_WriteData>
 8007892:	2000      	movs	r0, #0
 8007894:	f7fa f8cc 	bl	8001a30 <LCD_IO_WriteData>
 8007898:	2000      	movs	r0, #0
 800789a:	f7fa f8c9 	bl	8001a30 <LCD_IO_WriteData>
 800789e:	20ef      	movs	r0, #239	; 0xef
 80078a0:	f7fa f8c6 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078a4:	202b      	movs	r0, #43	; 0x2b
 80078a6:	f7fa f8ed 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078aa:	2000      	movs	r0, #0
 80078ac:	f7fa f8c0 	bl	8001a30 <LCD_IO_WriteData>
 80078b0:	2000      	movs	r0, #0
 80078b2:	f7fa f8bd 	bl	8001a30 <LCD_IO_WriteData>
 80078b6:	2001      	movs	r0, #1
 80078b8:	f7fa f8ba 	bl	8001a30 <LCD_IO_WriteData>
 80078bc:	203f      	movs	r0, #63	; 0x3f
 80078be:	f7fa f8b7 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078c2:	20f6      	movs	r0, #246	; 0xf6
 80078c4:	f7fa f8de 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078c8:	2001      	movs	r0, #1
 80078ca:	f7fa f8b1 	bl	8001a30 <LCD_IO_WriteData>
 80078ce:	2000      	movs	r0, #0
 80078d0:	f7fa f8ae 	bl	8001a30 <LCD_IO_WriteData>
 80078d4:	2006      	movs	r0, #6
 80078d6:	f7fa f8ab 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078da:	202c      	movs	r0, #44	; 0x2c
 80078dc:	f7fa f8d2 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80078e0:	20c8      	movs	r0, #200	; 0xc8
 80078e2:	f7fa f937 	bl	8001b54 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80078e6:	2026      	movs	r0, #38	; 0x26
 80078e8:	f7fa f8cc 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078ec:	2001      	movs	r0, #1
 80078ee:	f7fa f89f 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078f2:	20e0      	movs	r0, #224	; 0xe0
 80078f4:	f7fa f8c6 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078f8:	200f      	movs	r0, #15
 80078fa:	f7fa f899 	bl	8001a30 <LCD_IO_WriteData>
 80078fe:	2029      	movs	r0, #41	; 0x29
 8007900:	f7fa f896 	bl	8001a30 <LCD_IO_WriteData>
 8007904:	2024      	movs	r0, #36	; 0x24
 8007906:	f7fa f893 	bl	8001a30 <LCD_IO_WriteData>
 800790a:	200c      	movs	r0, #12
 800790c:	f7fa f890 	bl	8001a30 <LCD_IO_WriteData>
 8007910:	200e      	movs	r0, #14
 8007912:	f7fa f88d 	bl	8001a30 <LCD_IO_WriteData>
 8007916:	2009      	movs	r0, #9
 8007918:	f7fa f88a 	bl	8001a30 <LCD_IO_WriteData>
 800791c:	204e      	movs	r0, #78	; 0x4e
 800791e:	f7fa f887 	bl	8001a30 <LCD_IO_WriteData>
 8007922:	2078      	movs	r0, #120	; 0x78
 8007924:	f7fa f884 	bl	8001a30 <LCD_IO_WriteData>
 8007928:	203c      	movs	r0, #60	; 0x3c
 800792a:	f7fa f881 	bl	8001a30 <LCD_IO_WriteData>
 800792e:	2009      	movs	r0, #9
 8007930:	f7fa f87e 	bl	8001a30 <LCD_IO_WriteData>
 8007934:	2013      	movs	r0, #19
 8007936:	f7fa f87b 	bl	8001a30 <LCD_IO_WriteData>
 800793a:	2005      	movs	r0, #5
 800793c:	f7fa f878 	bl	8001a30 <LCD_IO_WriteData>
 8007940:	2017      	movs	r0, #23
 8007942:	f7fa f875 	bl	8001a30 <LCD_IO_WriteData>
 8007946:	2011      	movs	r0, #17
 8007948:	f7fa f872 	bl	8001a30 <LCD_IO_WriteData>
 800794c:	2000      	movs	r0, #0
 800794e:	f7fa f86f 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007952:	20e1      	movs	r0, #225	; 0xe1
 8007954:	f7fa f896 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007958:	2000      	movs	r0, #0
 800795a:	f7fa f869 	bl	8001a30 <LCD_IO_WriteData>
 800795e:	2016      	movs	r0, #22
 8007960:	f7fa f866 	bl	8001a30 <LCD_IO_WriteData>
 8007964:	201b      	movs	r0, #27
 8007966:	f7fa f863 	bl	8001a30 <LCD_IO_WriteData>
 800796a:	2004      	movs	r0, #4
 800796c:	f7fa f860 	bl	8001a30 <LCD_IO_WriteData>
 8007970:	2011      	movs	r0, #17
 8007972:	f7fa f85d 	bl	8001a30 <LCD_IO_WriteData>
 8007976:	2007      	movs	r0, #7
 8007978:	f7fa f85a 	bl	8001a30 <LCD_IO_WriteData>
 800797c:	2031      	movs	r0, #49	; 0x31
 800797e:	f7fa f857 	bl	8001a30 <LCD_IO_WriteData>
 8007982:	2033      	movs	r0, #51	; 0x33
 8007984:	f7fa f854 	bl	8001a30 <LCD_IO_WriteData>
 8007988:	2042      	movs	r0, #66	; 0x42
 800798a:	f7fa f851 	bl	8001a30 <LCD_IO_WriteData>
 800798e:	2005      	movs	r0, #5
 8007990:	f7fa f84e 	bl	8001a30 <LCD_IO_WriteData>
 8007994:	200c      	movs	r0, #12
 8007996:	f7fa f84b 	bl	8001a30 <LCD_IO_WriteData>
 800799a:	200a      	movs	r0, #10
 800799c:	f7fa f848 	bl	8001a30 <LCD_IO_WriteData>
 80079a0:	2028      	movs	r0, #40	; 0x28
 80079a2:	f7fa f845 	bl	8001a30 <LCD_IO_WriteData>
 80079a6:	202f      	movs	r0, #47	; 0x2f
 80079a8:	f7fa f842 	bl	8001a30 <LCD_IO_WriteData>
 80079ac:	200f      	movs	r0, #15
 80079ae:	f7fa f83f 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80079b2:	2011      	movs	r0, #17
 80079b4:	f7fa f866 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80079b8:	20c8      	movs	r0, #200	; 0xc8
 80079ba:	f7fa f8cb 	bl	8001b54 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80079be:	2029      	movs	r0, #41	; 0x29
 80079c0:	f7fa f860 	bl	8001a84 <LCD_IO_WriteReg>
}
 80079c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80079c8:	202c      	movs	r0, #44	; 0x2c
 80079ca:	f7fa b85b 	b.w	8001a84 <LCD_IO_WriteReg>
 80079ce:	bf00      	nop

080079d0 <ili9341_ReadID>:
{
 80079d0:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80079d2:	f7fa f81d 	bl	8001a10 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80079d6:	2103      	movs	r1, #3
 80079d8:	20d3      	movs	r0, #211	; 0xd3
 80079da:	f7fa f87d 	bl	8001ad8 <LCD_IO_ReadData>
}
 80079de:	b280      	uxth	r0, r0
 80079e0:	bd08      	pop	{r3, pc}
 80079e2:	bf00      	nop

080079e4 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80079e4:	221f      	movs	r2, #31
 80079e6:	210b      	movs	r1, #11
 80079e8:	b2c0      	uxtb	r0, r0
 80079ea:	f7f9 bfc3 	b.w	8001974 <IOE_Write>
 80079ee:	bf00      	nop

080079f0 <stmpe811_Reset>:
{
 80079f0:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80079f2:	b2c4      	uxtb	r4, r0
 80079f4:	2202      	movs	r2, #2
 80079f6:	2103      	movs	r1, #3
 80079f8:	4620      	mov	r0, r4
 80079fa:	f7f9 ffbb 	bl	8001974 <IOE_Write>
  IOE_Delay(10); 
 80079fe:	200a      	movs	r0, #10
 8007a00:	f7fa f804 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8007a04:	4620      	mov	r0, r4
 8007a06:	2200      	movs	r2, #0
 8007a08:	2103      	movs	r1, #3
 8007a0a:	f7f9 ffb3 	bl	8001974 <IOE_Write>
}
 8007a0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8007a12:	2002      	movs	r0, #2
 8007a14:	f7f9 bffa 	b.w	8001a0c <IOE_Delay>

08007a18 <stmpe811_ReadID>:
{
 8007a18:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007a1a:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8007a1c:	f7f9 ffa6 	bl	800196c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007a20:	2100      	movs	r1, #0
 8007a22:	4620      	mov	r0, r4
 8007a24:	f7f9 ffbe 	bl	80019a4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007a28:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007a2a:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007a2c:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007a2e:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007a30:	f7f9 ffb8 	bl	80019a4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007a34:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8007a38:	b280      	uxth	r0, r0
 8007a3a:	bd10      	pop	{r4, pc}

08007a3c <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8007a3c:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8007a3e:	b2c4      	uxtb	r4, r0
 8007a40:	2140      	movs	r1, #64	; 0x40
 8007a42:	4620      	mov	r0, r4
 8007a44:	f7f9 ffae 	bl	80019a4 <IOE_Read>
  
  if(state > 0)
 8007a48:	0603      	lsls	r3, r0, #24
 8007a4a:	d40b      	bmi.n	8007a64 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007a4c:	4620      	mov	r0, r4
 8007a4e:	2201      	movs	r2, #1
 8007a50:	214b      	movs	r1, #75	; 0x4b
 8007a52:	f7f9 ff8f 	bl	8001974 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007a56:	4620      	mov	r0, r4
 8007a58:	2200      	movs	r2, #0
 8007a5a:	214b      	movs	r1, #75	; 0x4b
 8007a5c:	f7f9 ff8a 	bl	8001974 <IOE_Write>
  uint8_t ret = 0;
 8007a60:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8007a62:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8007a64:	214c      	movs	r1, #76	; 0x4c
 8007a66:	4620      	mov	r0, r4
 8007a68:	f7f9 ff9c 	bl	80019a4 <IOE_Read>
      ret = 1;
 8007a6c:	3800      	subs	r0, #0
 8007a6e:	bf18      	it	ne
 8007a70:	2001      	movne	r0, #1
}
 8007a72:	bd10      	pop	{r4, pc}

08007a74 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8007a74:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8007a76:	210b      	movs	r1, #11
 8007a78:	b2c0      	uxtb	r0, r0
 8007a7a:	f7f9 ff93 	bl	80019a4 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8007a7e:	f000 001f 	and.w	r0, r0, #31
 8007a82:	bd08      	pop	{r3, pc}

08007a84 <stmpe811_TS_GetXY>:
{
 8007a84:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007a86:	2304      	movs	r3, #4
{
 8007a88:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007a8a:	b2c4      	uxtb	r4, r0
{
 8007a8c:	4615      	mov	r5, r2
 8007a8e:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007a90:	eb0d 0203 	add.w	r2, sp, r3
 8007a94:	21d7      	movs	r1, #215	; 0xd7
 8007a96:	4620      	mov	r0, r4
 8007a98:	f7f9 ffa0 	bl	80019dc <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8007a9c:	9b01      	ldr	r3, [sp, #4]
 8007a9e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8007aa0:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8007aa2:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8007aa6:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007aa8:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8007aaa:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007aac:	2201      	movs	r2, #1
 8007aae:	214b      	movs	r1, #75	; 0x4b
 8007ab0:	f7f9 ff60 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007ab4:	2200      	movs	r2, #0
 8007ab6:	214b      	movs	r1, #75	; 0x4b
 8007ab8:	4620      	mov	r0, r4
 8007aba:	f7f9 ff5b 	bl	8001974 <IOE_Write>
}
 8007abe:	b002      	add	sp, #8
 8007ac0:	bd70      	pop	{r4, r5, r6, pc}
 8007ac2:	bf00      	nop

08007ac4 <stmpe811_TS_Start>:
{
 8007ac4:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007ac6:	b2c4      	uxtb	r4, r0
 8007ac8:	2104      	movs	r1, #4
 8007aca:	4620      	mov	r0, r4
 8007acc:	f7f9 ff6a 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007ad0:	2104      	movs	r1, #4
 8007ad2:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007ad6:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007ad8:	4620      	mov	r0, r4
 8007ada:	f7f9 ff4b 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8007ade:	2117      	movs	r1, #23
 8007ae0:	4620      	mov	r0, r4
 8007ae2:	f7f9 ff5f 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8007ae6:	2117      	movs	r1, #23
 8007ae8:	f000 020f 	and.w	r2, r0, #15
 8007aec:	4620      	mov	r0, r4
 8007aee:	f7f9 ff41 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007af2:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8007af6:	4620      	mov	r0, r4
 8007af8:	2104      	movs	r1, #4
 8007afa:	f7f9 ff3b 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8007afe:	2249      	movs	r2, #73	; 0x49
 8007b00:	2120      	movs	r1, #32
 8007b02:	4620      	mov	r0, r4
 8007b04:	f7f9 ff36 	bl	8001974 <IOE_Write>
  IOE_Delay(2); 
 8007b08:	2002      	movs	r0, #2
 8007b0a:	f7f9 ff7f 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8007b0e:	4620      	mov	r0, r4
 8007b10:	2201      	movs	r2, #1
 8007b12:	2121      	movs	r1, #33	; 0x21
 8007b14:	f7f9 ff2e 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8007b18:	4620      	mov	r0, r4
 8007b1a:	229a      	movs	r2, #154	; 0x9a
 8007b1c:	2141      	movs	r1, #65	; 0x41
 8007b1e:	f7f9 ff29 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8007b22:	4620      	mov	r0, r4
 8007b24:	2201      	movs	r2, #1
 8007b26:	214a      	movs	r1, #74	; 0x4a
 8007b28:	f7f9 ff24 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007b2c:	4620      	mov	r0, r4
 8007b2e:	2201      	movs	r2, #1
 8007b30:	214b      	movs	r1, #75	; 0x4b
 8007b32:	f7f9 ff1f 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007b36:	4620      	mov	r0, r4
 8007b38:	2200      	movs	r2, #0
 8007b3a:	214b      	movs	r1, #75	; 0x4b
 8007b3c:	f7f9 ff1a 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8007b40:	4620      	mov	r0, r4
 8007b42:	2201      	movs	r2, #1
 8007b44:	2156      	movs	r1, #86	; 0x56
 8007b46:	f7f9 ff15 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8007b4a:	4620      	mov	r0, r4
 8007b4c:	2201      	movs	r2, #1
 8007b4e:	2158      	movs	r1, #88	; 0x58
 8007b50:	f7f9 ff10 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8007b54:	4620      	mov	r0, r4
 8007b56:	2201      	movs	r2, #1
 8007b58:	2140      	movs	r1, #64	; 0x40
 8007b5a:	f7f9 ff0b 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8007b5e:	4620      	mov	r0, r4
 8007b60:	22ff      	movs	r2, #255	; 0xff
 8007b62:	210b      	movs	r1, #11
 8007b64:	f7f9 ff06 	bl	8001974 <IOE_Write>
}
 8007b68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8007b6c:	2002      	movs	r0, #2
 8007b6e:	f7f9 bf4d 	b.w	8001a0c <IOE_Delay>
 8007b72:	bf00      	nop

08007b74 <stmpe811_TS_DisableIT>:
{
 8007b74:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8007b76:	b2c4      	uxtb	r4, r0
 8007b78:	2109      	movs	r1, #9
 8007b7a:	4620      	mov	r0, r4
 8007b7c:	f7f9 ff12 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8007b80:	2109      	movs	r1, #9
 8007b82:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8007b86:	4620      	mov	r0, r4
 8007b88:	f7f9 fef4 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007b8c:	210a      	movs	r1, #10
 8007b8e:	4620      	mov	r0, r4
 8007b90:	f7f9 ff08 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007b94:	210a      	movs	r1, #10
 8007b96:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8007b9a:	4620      	mov	r0, r4
}
 8007b9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007ba0:	f7f9 bee8 	b.w	8001974 <IOE_Write>

08007ba4 <stmpe811_TS_EnableIT>:
{
 8007ba4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007ba6:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8007ba8:	f7f9 fee2 	bl	8001970 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007bac:	210a      	movs	r1, #10
 8007bae:	4620      	mov	r0, r4
 8007bb0:	f7f9 fef8 	bl	80019a4 <IOE_Read>
  tmp |= Source; 
 8007bb4:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007bb8:	b2c2      	uxtb	r2, r0
 8007bba:	210a      	movs	r1, #10
 8007bbc:	4620      	mov	r0, r4
 8007bbe:	f7f9 fed9 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8007bc2:	2109      	movs	r1, #9
 8007bc4:	4620      	mov	r0, r4
 8007bc6:	f7f9 feed 	bl	80019a4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8007bca:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007bce:	b2c2      	uxtb	r2, r0
 8007bd0:	2109      	movs	r1, #9
 8007bd2:	4620      	mov	r0, r4
}
 8007bd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007bd8:	f7f9 becc 	b.w	8001974 <IOE_Write>

08007bdc <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8007bdc:	4a10      	ldr	r2, [pc, #64]	; (8007c20 <stmpe811_Init+0x44>)
 8007bde:	7813      	ldrb	r3, [r2, #0]
 8007be0:	4298      	cmp	r0, r3
 8007be2:	d004      	beq.n	8007bee <stmpe811_Init+0x12>
 8007be4:	7851      	ldrb	r1, [r2, #1]
 8007be6:	4288      	cmp	r0, r1
 8007be8:	d001      	beq.n	8007bee <stmpe811_Init+0x12>
 8007bea:	b113      	cbz	r3, 8007bf2 <stmpe811_Init+0x16>
 8007bec:	b101      	cbz	r1, 8007bf0 <stmpe811_Init+0x14>
 8007bee:	4770      	bx	lr
 8007bf0:	2301      	movs	r3, #1
{
 8007bf2:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8007bf4:	b2c4      	uxtb	r4, r0
 8007bf6:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8007bf8:	f7f9 feb8 	bl	800196c <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8007bfc:	2202      	movs	r2, #2
 8007bfe:	2103      	movs	r1, #3
 8007c00:	4620      	mov	r0, r4
 8007c02:	f7f9 feb7 	bl	8001974 <IOE_Write>
  IOE_Delay(10); 
 8007c06:	200a      	movs	r0, #10
 8007c08:	f7f9 ff00 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8007c0c:	4620      	mov	r0, r4
 8007c0e:	2200      	movs	r2, #0
 8007c10:	2103      	movs	r1, #3
 8007c12:	f7f9 feaf 	bl	8001974 <IOE_Write>
}
 8007c16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8007c1a:	2002      	movs	r0, #2
 8007c1c:	f7f9 bef6 	b.w	8001a0c <IOE_Delay>
 8007c20:	200029bc 	.word	0x200029bc

08007c24 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007c24:	4b05      	ldr	r3, [pc, #20]	; (8007c3c <SystemInit+0x18>)
 8007c26:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8007c2a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007c2e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8007c32:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8007c36:	6099      	str	r1, [r3, #8]
#endif
}
 8007c38:	4770      	bx	lr
 8007c3a:	bf00      	nop
 8007c3c:	e000ed00 	.word	0xe000ed00

08007c40 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8007c40:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8007c42:	4b0b      	ldr	r3, [pc, #44]	; (8007c70 <HAL_Init+0x30>)
 8007c44:	681a      	ldr	r2, [r3, #0]
 8007c46:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007c4a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8007c4c:	681a      	ldr	r2, [r3, #0]
 8007c4e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007c52:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8007c54:	681a      	ldr	r2, [r3, #0]
 8007c56:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007c5a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8007c5c:	2003      	movs	r0, #3
 8007c5e:	f000 f82d 	bl	8007cbc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8007c62:	2000      	movs	r0, #0
 8007c64:	f7fa fa04 	bl	8002070 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8007c68:	f7f9 ff82 	bl	8001b70 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8007c6c:	2000      	movs	r0, #0
 8007c6e:	bd08      	pop	{r3, pc}
 8007c70:	40023c00 	.word	0x40023c00

08007c74 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8007c74:	4a03      	ldr	r2, [pc, #12]	; (8007c84 <HAL_IncTick+0x10>)
 8007c76:	4b04      	ldr	r3, [pc, #16]	; (8007c88 <HAL_IncTick+0x14>)
 8007c78:	6811      	ldr	r1, [r2, #0]
 8007c7a:	781b      	ldrb	r3, [r3, #0]
 8007c7c:	440b      	add	r3, r1
 8007c7e:	6013      	str	r3, [r2, #0]
}
 8007c80:	4770      	bx	lr
 8007c82:	bf00      	nop
 8007c84:	200029c0 	.word	0x200029c0
 8007c88:	2000007c 	.word	0x2000007c

08007c8c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8007c8c:	4b01      	ldr	r3, [pc, #4]	; (8007c94 <HAL_GetTick+0x8>)
 8007c8e:	6818      	ldr	r0, [r3, #0]
}
 8007c90:	4770      	bx	lr
 8007c92:	bf00      	nop
 8007c94:	200029c0 	.word	0x200029c0

08007c98 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8007c98:	b538      	push	{r3, r4, r5, lr}
 8007c9a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007c9c:	f7ff fff6 	bl	8007c8c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8007ca0:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8007ca2:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8007ca4:	d002      	beq.n	8007cac <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8007ca6:	4b04      	ldr	r3, [pc, #16]	; (8007cb8 <HAL_Delay+0x20>)
 8007ca8:	781b      	ldrb	r3, [r3, #0]
 8007caa:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8007cac:	f7ff ffee 	bl	8007c8c <HAL_GetTick>
 8007cb0:	1b43      	subs	r3, r0, r5
 8007cb2:	42a3      	cmp	r3, r4
 8007cb4:	d3fa      	bcc.n	8007cac <HAL_Delay+0x14>
  {
  }
}
 8007cb6:	bd38      	pop	{r3, r4, r5, pc}
 8007cb8:	2000007c 	.word	0x2000007c

08007cbc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8007cbc:	4907      	ldr	r1, [pc, #28]	; (8007cdc <HAL_NVIC_SetPriorityGrouping+0x20>)
 8007cbe:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007cc0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007cc2:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007cc6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007cca:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8007ccc:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8007cce:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8007cd2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8007cd6:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8007cd8:	4770      	bx	lr
 8007cda:	bf00      	nop
 8007cdc:	e000ed00 	.word	0xe000ed00

08007ce0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8007ce0:	4b1c      	ldr	r3, [pc, #112]	; (8007d54 <HAL_NVIC_SetPriority+0x74>)
 8007ce2:	68db      	ldr	r3, [r3, #12]
 8007ce4:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8007ce8:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007cea:	f1c3 0e07 	rsb	lr, r3, #7
 8007cee:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007cf2:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007cf6:	bf28      	it	cs
 8007cf8:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007cfc:	f1bc 0f06 	cmp.w	ip, #6
 8007d00:	d91b      	bls.n	8007d3a <HAL_NVIC_SetPriority+0x5a>
 8007d02:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8007d04:	f04f 3cff 	mov.w	ip, #4294967295
 8007d08:	fa0c fc03 	lsl.w	ip, ip, r3
 8007d0c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007d10:	f04f 3cff 	mov.w	ip, #4294967295
 8007d14:	fa0c fc0e 	lsl.w	ip, ip, lr
 8007d18:	ea21 010c 	bic.w	r1, r1, ip
 8007d1c:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8007d1e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007d20:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8007d24:	db0c      	blt.n	8007d40 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007d26:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8007d2a:	0109      	lsls	r1, r1, #4
 8007d2c:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8007d30:	b2c9      	uxtb	r1, r1
 8007d32:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8007d36:	f85d fb04 	ldr.w	pc, [sp], #4
 8007d3a:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007d3c:	4613      	mov	r3, r2
 8007d3e:	e7e7      	b.n	8007d10 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007d40:	4b05      	ldr	r3, [pc, #20]	; (8007d58 <HAL_NVIC_SetPriority+0x78>)
 8007d42:	f000 000f 	and.w	r0, r0, #15
 8007d46:	0109      	lsls	r1, r1, #4
 8007d48:	4403      	add	r3, r0
 8007d4a:	b2c9      	uxtb	r1, r1
 8007d4c:	7619      	strb	r1, [r3, #24]
 8007d4e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007d52:	bf00      	nop
 8007d54:	e000ed00 	.word	0xe000ed00
 8007d58:	e000ecfc 	.word	0xe000ecfc

08007d5c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8007d5c:	2800      	cmp	r0, #0
 8007d5e:	db07      	blt.n	8007d70 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8007d60:	0941      	lsrs	r1, r0, #5
 8007d62:	4a04      	ldr	r2, [pc, #16]	; (8007d74 <HAL_NVIC_EnableIRQ+0x18>)
 8007d64:	f000 001f 	and.w	r0, r0, #31
 8007d68:	2301      	movs	r3, #1
 8007d6a:	4083      	lsls	r3, r0
 8007d6c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8007d70:	4770      	bx	lr
 8007d72:	bf00      	nop
 8007d74:	e000e100 	.word	0xe000e100

08007d78 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8007d78:	b180      	cbz	r0, 8007d9c <HAL_CRC_Init+0x24>
{
 8007d7a:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8007d7c:	7943      	ldrb	r3, [r0, #5]
 8007d7e:	4604      	mov	r4, r0
 8007d80:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007d84:	b11b      	cbz	r3, 8007d8e <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8007d86:	2301      	movs	r3, #1
 8007d88:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8007d8a:	2000      	movs	r0, #0
}
 8007d8c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8007d8e:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8007d90:	f7f9 ff0e 	bl	8001bb0 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8007d94:	2301      	movs	r3, #1
 8007d96:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8007d98:	2000      	movs	r0, #0
}
 8007d9a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007d9c:	2001      	movs	r0, #1
}
 8007d9e:	4770      	bx	lr

08007da0 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8007da0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8007da4:	2b02      	cmp	r3, #2
 8007da6:	d003      	beq.n	8007db0 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8007da8:	2380      	movs	r3, #128	; 0x80
 8007daa:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8007dac:	2001      	movs	r0, #1
 8007dae:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8007db0:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8007db2:	2305      	movs	r3, #5
 8007db4:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8007db8:	6813      	ldr	r3, [r2, #0]
 8007dba:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8007dbe:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8007dc0:	6013      	str	r3, [r2, #0]
}
 8007dc2:	4770      	bx	lr

08007dc4 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8007dc4:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8007dc8:	4770      	bx	lr
 8007dca:	bf00      	nop

08007dcc <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8007dcc:	b348      	cbz	r0, 8007e22 <HAL_DMA2D_Init+0x56>
{
 8007dce:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8007dd0:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8007dd4:	4604      	mov	r4, r0
 8007dd6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007dda:	b1eb      	cbz	r3, 8007e18 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007ddc:	6822      	ldr	r2, [r4, #0]
 8007dde:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007de0:	2302      	movs	r3, #2
 8007de2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007de6:	6813      	ldr	r3, [r2, #0]
 8007de8:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007dec:	430b      	orrs	r3, r1
 8007dee:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8007df0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8007df2:	68a1      	ldr	r1, [r4, #8]
 8007df4:	f023 0307 	bic.w	r3, r3, #7
 8007df8:	430b      	orrs	r3, r1
 8007dfa:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8007dfc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007dfe:	68e1      	ldr	r1, [r4, #12]
 8007e00:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8007e04:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8007e08:	430b      	orrs	r3, r1
 8007e0a:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007e0c:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007e0e:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007e10:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007e12:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8007e16:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 8007e18:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8007e1c:	f7f9 fee2 	bl	8001be4 <HAL_DMA2D_MspInit>
 8007e20:	e7dc      	b.n	8007ddc <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 8007e22:	2001      	movs	r0, #1
}
 8007e24:	4770      	bx	lr
 8007e26:	bf00      	nop

08007e28 <HAL_DMA2D_LineEventCallback>:
 8007e28:	4770      	bx	lr
 8007e2a:	bf00      	nop

08007e2c <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8007e2c:	4770      	bx	lr
 8007e2e:	bf00      	nop

08007e30 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007e30:	6803      	ldr	r3, [r0, #0]
{
 8007e32:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007e34:	685d      	ldr	r5, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8007e36:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007e38:	07ea      	lsls	r2, r5, #31
{
 8007e3a:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007e3c:	d501      	bpl.n	8007e42 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8007e3e:	05f1      	lsls	r1, r6, #23
 8007e40:	d457      	bmi.n	8007ef2 <HAL_DMA2D_IRQHandler+0xc2>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8007e42:	06aa      	lsls	r2, r5, #26
 8007e44:	d501      	bpl.n	8007e4a <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8007e46:	04b3      	lsls	r3, r6, #18
 8007e48:	d43c      	bmi.n	8007ec4 <HAL_DMA2D_IRQHandler+0x94>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8007e4a:	0728      	lsls	r0, r5, #28
 8007e4c:	d501      	bpl.n	8007e52 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8007e4e:	0531      	lsls	r1, r6, #20
 8007e50:	d421      	bmi.n	8007e96 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8007e52:	076a      	lsls	r2, r5, #29
 8007e54:	d501      	bpl.n	8007e5a <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8007e56:	0573      	lsls	r3, r6, #21
 8007e58:	d473      	bmi.n	8007f42 <HAL_DMA2D_IRQHandler+0x112>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8007e5a:	07a8      	lsls	r0, r5, #30
 8007e5c:	d501      	bpl.n	8007e62 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8007e5e:	05b1      	lsls	r1, r6, #22
 8007e60:	d404      	bmi.n	8007e6c <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8007e62:	06ea      	lsls	r2, r5, #27
 8007e64:	d501      	bpl.n	8007e6a <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8007e66:	04f3      	lsls	r3, r6, #19
 8007e68:	d458      	bmi.n	8007f1c <HAL_DMA2D_IRQHandler+0xec>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8007e6a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8007e6c:	6823      	ldr	r3, [r4, #0]
 8007e6e:	681a      	ldr	r2, [r3, #0]
 8007e70:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007e74:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8007e76:	2202      	movs	r2, #2
 8007e78:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007e7a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8007e7c:	63e2      	str	r2, [r4, #60]	; 0x3c
      if (hdma2d->XferCpltCallback != NULL)
 8007e7e:	6923      	ldr	r3, [r4, #16]
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007e80:	2201      	movs	r2, #1
 8007e82:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007e86:	2200      	movs	r2, #0
 8007e88:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8007e8c:	2b00      	cmp	r3, #0
 8007e8e:	d0e8      	beq.n	8007e62 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
 8007e90:	4620      	mov	r0, r4
 8007e92:	4798      	blx	r3
 8007e94:	e7e5      	b.n	8007e62 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8007e96:	6823      	ldr	r3, [r4, #0]
 8007e98:	681a      	ldr	r2, [r3, #0]
 8007e9a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007e9e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8007ea0:	2208      	movs	r2, #8
 8007ea2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8007ea4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8007ea6:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8007ea8:	f043 0304 	orr.w	r3, r3, #4
 8007eac:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007eae:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8007eb0:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007eb2:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007eb6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007eba:	2a00      	cmp	r2, #0
 8007ebc:	d0c9      	beq.n	8007e52 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
 8007ebe:	4620      	mov	r0, r4
 8007ec0:	4790      	blx	r2
 8007ec2:	e7c6      	b.n	8007e52 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8007ec4:	6823      	ldr	r3, [r4, #0]
 8007ec6:	681a      	ldr	r2, [r3, #0]
 8007ec8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007ecc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8007ece:	2220      	movs	r2, #32
 8007ed0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8007ed2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8007ed4:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8007ed6:	f043 0302 	orr.w	r3, r3, #2
 8007eda:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007edc:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8007ede:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007ee0:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007ee4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007ee8:	2a00      	cmp	r2, #0
 8007eea:	d0ae      	beq.n	8007e4a <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
 8007eec:	4620      	mov	r0, r4
 8007eee:	4790      	blx	r2
 8007ef0:	e7ab      	b.n	8007e4a <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8007ef2:	681a      	ldr	r2, [r3, #0]
 8007ef4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007ef8:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8007efa:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8007efc:	2101      	movs	r1, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8007efe:	f042 0201 	orr.w	r2, r2, #1
 8007f02:	63c2      	str	r2, [r0, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8007f04:	6942      	ldr	r2, [r0, #20]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8007f06:	6099      	str	r1, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007f08:	2304      	movs	r3, #4
 8007f0a:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007f0e:	2300      	movs	r3, #0
 8007f10:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007f14:	2a00      	cmp	r2, #0
 8007f16:	d094      	beq.n	8007e42 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
 8007f18:	4790      	blx	r2
 8007f1a:	e792      	b.n	8007e42 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8007f1c:	6823      	ldr	r3, [r4, #0]
 8007f1e:	681a      	ldr	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8007f20:	2010      	movs	r0, #16
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8007f22:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8007f26:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8007f28:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007f2a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8007f2c:	63e2      	str	r2, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007f2e:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
 8007f30:	2300      	movs	r3, #0
 8007f32:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007f36:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8007f3a:	4620      	mov	r0, r4
 8007f3c:	f7ff ff76 	bl	8007e2c <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8007f40:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8007f42:	6823      	ldr	r3, [r4, #0]
 8007f44:	681a      	ldr	r2, [r3, #0]
 8007f46:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007f4a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8007f4c:	2204      	movs	r2, #4
 8007f4e:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8007f50:	4620      	mov	r0, r4
 8007f52:	f7ff ff69 	bl	8007e28 <HAL_DMA2D_LineEventCallback>
 8007f56:	e780      	b.n	8007e5a <HAL_DMA2D_IRQHandler+0x2a>

08007f58 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8007f58:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8007f5c:	2b01      	cmp	r3, #1
 8007f5e:	d04d      	beq.n	8007ffc <HAL_DMA2D_ConfigLayer+0xa4>
 8007f60:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007f62:	2302      	movs	r3, #2
{
 8007f64:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007f66:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 8007f6a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007f6e:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007f72:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 8007f76:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007f7a:	3a09      	subs	r2, #9
 8007f7c:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8007f7e:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007f82:	d91d      	bls.n	8007fc0 <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8007f84:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8007f88:	b189      	cbz	r1, 8007fae <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007f8a:	6801      	ldr	r1, [r0, #0]
 8007f8c:	4a1c      	ldr	r2, [pc, #112]	; (8008000 <HAL_DMA2D_ConfigLayer+0xa8>)
 8007f8e:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007f90:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007f94:	402a      	ands	r2, r5
 8007f96:	431a      	orrs	r2, r3
 8007f98:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007f9a:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8007f9c:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8007f9e:	2201      	movs	r2, #1
 8007fa0:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8007fa4:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 8007fa8:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 8007faa:	4618      	mov	r0, r3
}
 8007fac:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007fae:	6801      	ldr	r1, [r0, #0]
 8007fb0:	4a13      	ldr	r2, [pc, #76]	; (8008000 <HAL_DMA2D_ConfigLayer+0xa8>)
 8007fb2:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8007fb4:	4022      	ands	r2, r4
 8007fb6:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007fb8:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007fba:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007fbc:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007fbe:	e7ed      	b.n	8007f9c <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8007fc0:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 8007fc4:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8007fc6:	b961      	cbnz	r1, 8007fe2 <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007fc8:	6801      	ldr	r1, [r0, #0]
 8007fca:	4a0d      	ldr	r2, [pc, #52]	; (8008000 <HAL_DMA2D_ConfigLayer+0xa8>)
 8007fcc:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007fce:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007fd0:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8007fd2:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007fd4:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8007fd6:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007fda:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007fdc:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8007fde:	628c      	str	r4, [r1, #40]	; 0x28
 8007fe0:	e7dc      	b.n	8007f9c <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007fe2:	6804      	ldr	r4, [r0, #0]
 8007fe4:	4906      	ldr	r1, [pc, #24]	; (8008000 <HAL_DMA2D_ConfigLayer+0xa8>)
 8007fe6:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007fe8:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007fec:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8007fee:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007ff2:	4319      	orrs	r1, r3
 8007ff4:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007ff6:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8007ff8:	6222      	str	r2, [r4, #32]
 8007ffa:	e7cf      	b.n	8007f9c <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 8007ffc:	2002      	movs	r0, #2
}
 8007ffe:	4770      	bx	lr
 8008000:	00fcfff0 	.word	0x00fcfff0

08008004 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8008004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8008008:	2200      	movs	r2, #0
 800800a:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800800c:	f8df a260 	ldr.w	sl, [pc, #608]	; 8008270 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8008010:	4e90      	ldr	r6, [pc, #576]	; (8008254 <HAL_GPIO_Init+0x250>)
{
 8008012:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008014:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008016:	4689      	mov	r9, r1
 8008018:	e005      	b.n	8008026 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800801a:	3301      	adds	r3, #1
 800801c:	2b10      	cmp	r3, #16
 800801e:	f102 0202 	add.w	r2, r2, #2
 8008022:	f000 8095 	beq.w	8008150 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8008026:	2101      	movs	r1, #1
 8008028:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800802a:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800802e:	43a1      	bics	r1, r4
 8008030:	d1f3      	bne.n	800801a <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8008032:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8008036:	f00c 0103 	and.w	r1, ip, #3
 800803a:	1e4d      	subs	r5, r1, #1
 800803c:	2d01      	cmp	r5, #1
 800803e:	f240 808a 	bls.w	8008156 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8008042:	2903      	cmp	r1, #3
 8008044:	f040 80ca 	bne.w	80081dc <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008048:	4091      	lsls	r1, r2
 800804a:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800804c:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800804e:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8008050:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8008052:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8008056:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8008058:	d0df      	beq.n	800801a <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800805a:	2100      	movs	r1, #0
 800805c:	9103      	str	r1, [sp, #12]
 800805e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8008062:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8008066:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800806a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800806e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8008072:	9103      	str	r1, [sp, #12]
 8008074:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8008076:	f023 0103 	bic.w	r1, r3, #3
 800807a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800807e:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008082:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8008086:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008088:	00bf      	lsls	r7, r7, #2
 800808a:	f04f 0e0f 	mov.w	lr, #15
 800808e:	fa0e fe07 	lsl.w	lr, lr, r7
 8008092:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008096:	4d70      	ldr	r5, [pc, #448]	; (8008258 <HAL_GPIO_Init+0x254>)
 8008098:	42a8      	cmp	r0, r5
 800809a:	d02e      	beq.n	80080fa <HAL_GPIO_Init+0xf6>
 800809c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80080a0:	42a8      	cmp	r0, r5
 80080a2:	f000 809f 	beq.w	80081e4 <HAL_GPIO_Init+0x1e0>
 80080a6:	4d6d      	ldr	r5, [pc, #436]	; (800825c <HAL_GPIO_Init+0x258>)
 80080a8:	42a8      	cmp	r0, r5
 80080aa:	f000 80a2 	beq.w	80081f2 <HAL_GPIO_Init+0x1ee>
 80080ae:	4d6c      	ldr	r5, [pc, #432]	; (8008260 <HAL_GPIO_Init+0x25c>)
 80080b0:	42a8      	cmp	r0, r5
 80080b2:	f000 80a5 	beq.w	8008200 <HAL_GPIO_Init+0x1fc>
 80080b6:	4d6b      	ldr	r5, [pc, #428]	; (8008264 <HAL_GPIO_Init+0x260>)
 80080b8:	42a8      	cmp	r0, r5
 80080ba:	f000 80a8 	beq.w	800820e <HAL_GPIO_Init+0x20a>
 80080be:	4d6a      	ldr	r5, [pc, #424]	; (8008268 <HAL_GPIO_Init+0x264>)
 80080c0:	42a8      	cmp	r0, r5
 80080c2:	f000 80b2 	beq.w	800822a <HAL_GPIO_Init+0x226>
 80080c6:	4d69      	ldr	r5, [pc, #420]	; (800826c <HAL_GPIO_Init+0x268>)
 80080c8:	42a8      	cmp	r0, r5
 80080ca:	f000 80b5 	beq.w	8008238 <HAL_GPIO_Init+0x234>
 80080ce:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8008274 <HAL_GPIO_Init+0x270>
 80080d2:	4570      	cmp	r0, lr
 80080d4:	f000 80a2 	beq.w	800821c <HAL_GPIO_Init+0x218>
 80080d8:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8008278 <HAL_GPIO_Init+0x274>
 80080dc:	4570      	cmp	r0, lr
 80080de:	f000 80b2 	beq.w	8008246 <HAL_GPIO_Init+0x242>
 80080e2:	f8df e198 	ldr.w	lr, [pc, #408]	; 800827c <HAL_GPIO_Init+0x278>
 80080e6:	4570      	cmp	r0, lr
 80080e8:	bf0c      	ite	eq
 80080ea:	f04f 0e09 	moveq.w	lr, #9
 80080ee:	f04f 0e0a 	movne.w	lr, #10
 80080f2:	fa0e f707 	lsl.w	r7, lr, r7
 80080f6:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80080fa:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 80080fe:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8008100:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8008104:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8008108:	bf0c      	ite	eq
 800810a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800810c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8008110:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8008112:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8008114:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8008118:	bf0c      	ite	eq
 800811a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800811c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8008120:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8008122:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8008124:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8008128:	bf0c      	ite	eq
 800812a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800812c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8008130:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8008132:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8008134:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008138:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800813c:	bf0c      	ite	eq
 800813e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008140:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008144:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8008146:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008148:	f102 0202 	add.w	r2, r2, #2
 800814c:	f47f af6b 	bne.w	8008026 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8008150:	b005      	add	sp, #20
 8008152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008156:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800815a:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800815e:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008162:	2503      	movs	r5, #3
 8008164:	fa05 f802 	lsl.w	r8, r5, r2
 8008168:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800816c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8008170:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8008172:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8008174:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8008178:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800817c:	409f      	lsls	r7, r3
 800817e:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008182:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8008186:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8008188:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800818a:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800818e:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8008192:	4097      	lsls	r7, r2
 8008194:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008198:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800819a:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800819c:	fa01 f102 	lsl.w	r1, r1, r2
 80081a0:	f47f af54 	bne.w	800804c <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 80081a4:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 80081a8:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80081ac:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80081b0:	f8de 7020 	ldr.w	r7, [lr, #32]
 80081b4:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80081b6:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80081ba:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80081be:	fa07 f708 	lsl.w	r7, r7, r8
 80081c2:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80081c4:	270f      	movs	r7, #15
 80081c6:	fa07 f808 	lsl.w	r8, r7, r8
 80081ca:	9f00      	ldr	r7, [sp, #0]
 80081cc:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80081d0:	9f01      	ldr	r7, [sp, #4]
 80081d2:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 80081d6:	f8ce 7020 	str.w	r7, [lr, #32]
 80081da:	e737      	b.n	800804c <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80081dc:	2503      	movs	r5, #3
 80081de:	4095      	lsls	r5, r2
 80081e0:	43ed      	mvns	r5, r5
 80081e2:	e7d1      	b.n	8008188 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80081e4:	f04f 0e01 	mov.w	lr, #1
 80081e8:	fa0e f707 	lsl.w	r7, lr, r7
 80081ec:	ea48 0807 	orr.w	r8, r8, r7
 80081f0:	e783      	b.n	80080fa <HAL_GPIO_Init+0xf6>
 80081f2:	f04f 0e02 	mov.w	lr, #2
 80081f6:	fa0e f707 	lsl.w	r7, lr, r7
 80081fa:	ea48 0807 	orr.w	r8, r8, r7
 80081fe:	e77c      	b.n	80080fa <HAL_GPIO_Init+0xf6>
 8008200:	f04f 0e03 	mov.w	lr, #3
 8008204:	fa0e f707 	lsl.w	r7, lr, r7
 8008208:	ea48 0807 	orr.w	r8, r8, r7
 800820c:	e775      	b.n	80080fa <HAL_GPIO_Init+0xf6>
 800820e:	f04f 0e04 	mov.w	lr, #4
 8008212:	fa0e f707 	lsl.w	r7, lr, r7
 8008216:	ea48 0807 	orr.w	r8, r8, r7
 800821a:	e76e      	b.n	80080fa <HAL_GPIO_Init+0xf6>
 800821c:	f04f 0e07 	mov.w	lr, #7
 8008220:	fa0e f707 	lsl.w	r7, lr, r7
 8008224:	ea48 0807 	orr.w	r8, r8, r7
 8008228:	e767      	b.n	80080fa <HAL_GPIO_Init+0xf6>
 800822a:	f04f 0e05 	mov.w	lr, #5
 800822e:	fa0e f707 	lsl.w	r7, lr, r7
 8008232:	ea48 0807 	orr.w	r8, r8, r7
 8008236:	e760      	b.n	80080fa <HAL_GPIO_Init+0xf6>
 8008238:	f04f 0e06 	mov.w	lr, #6
 800823c:	fa0e f707 	lsl.w	r7, lr, r7
 8008240:	ea48 0807 	orr.w	r8, r8, r7
 8008244:	e759      	b.n	80080fa <HAL_GPIO_Init+0xf6>
 8008246:	f04f 0e08 	mov.w	lr, #8
 800824a:	fa0e f707 	lsl.w	r7, lr, r7
 800824e:	ea48 0807 	orr.w	r8, r8, r7
 8008252:	e752      	b.n	80080fa <HAL_GPIO_Init+0xf6>
 8008254:	40013c00 	.word	0x40013c00
 8008258:	40020000 	.word	0x40020000
 800825c:	40020800 	.word	0x40020800
 8008260:	40020c00 	.word	0x40020c00
 8008264:	40021000 	.word	0x40021000
 8008268:	40021400 	.word	0x40021400
 800826c:	40021800 	.word	0x40021800
 8008270:	40023800 	.word	0x40023800
 8008274:	40021c00 	.word	0x40021c00
 8008278:	40022000 	.word	0x40022000
 800827c:	40022400 	.word	0x40022400

08008280 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8008280:	6903      	ldr	r3, [r0, #16]
 8008282:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8008284:	bf14      	ite	ne
 8008286:	2001      	movne	r0, #1
 8008288:	2000      	moveq	r0, #0
 800828a:	4770      	bx	lr

0800828c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800828c:	b902      	cbnz	r2, 8008290 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800828e:	0409      	lsls	r1, r1, #16
 8008290:	6181      	str	r1, [r0, #24]
  }
}
 8008292:	4770      	bx	lr

08008294 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8008294:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8008296:	ea01 0203 	and.w	r2, r1, r3
 800829a:	ea21 0103 	bic.w	r1, r1, r3
 800829e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80082a2:	6181      	str	r1, [r0, #24]
}
 80082a4:	4770      	bx	lr
 80082a6:	bf00      	nop

080082a8 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80082a8:	4770      	bx	lr
 80082aa:	bf00      	nop

080082ac <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80082ac:	4a04      	ldr	r2, [pc, #16]	; (80082c0 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80082ae:	6951      	ldr	r1, [r2, #20]
 80082b0:	4201      	tst	r1, r0
 80082b2:	d100      	bne.n	80082b6 <HAL_GPIO_EXTI_IRQHandler+0xa>
 80082b4:	4770      	bx	lr
{
 80082b6:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80082b8:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80082ba:	f7ff fff5 	bl	80082a8 <HAL_GPIO_EXTI_Callback>
}
 80082be:	bd08      	pop	{r3, pc}
 80082c0:	40013c00 	.word	0x40013c00

080082c4 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80082c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80082c8:	6804      	ldr	r4, [r0, #0]
{
 80082ca:	b083      	sub	sp, #12
 80082cc:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80082ce:	6823      	ldr	r3, [r4, #0]
{
 80082d0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80082d4:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80082d8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80082dc:	4606      	mov	r6, r0
 80082de:	468a      	mov	sl, r1
 80082e0:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80082e2:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80082e4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80082e8:	d136      	bne.n	8008358 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80082ea:	6965      	ldr	r5, [r4, #20]
 80082ec:	07e8      	lsls	r0, r5, #31
 80082ee:	d5fc      	bpl.n	80082ea <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80082f0:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 80082f4:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 80082f6:	f1b9 3fff 	cmp.w	r9, #4294967295
 80082fa:	d003      	beq.n	8008304 <I2C_RequestMemoryWrite+0x40>
 80082fc:	e04f      	b.n	800839e <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80082fe:	6961      	ldr	r1, [r4, #20]
 8008300:	054d      	lsls	r5, r1, #21
 8008302:	d45d      	bmi.n	80083c0 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008304:	6961      	ldr	r1, [r4, #20]
 8008306:	078b      	lsls	r3, r1, #30
 8008308:	d5f9      	bpl.n	80082fe <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800830a:	2300      	movs	r3, #0
 800830c:	9301      	str	r3, [sp, #4]
 800830e:	6963      	ldr	r3, [r4, #20]
 8008310:	9301      	str	r3, [sp, #4]
 8008312:	69a3      	ldr	r3, [r4, #24]
 8008314:	9301      	str	r3, [sp, #4]
 8008316:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008318:	f1b9 3fff 	cmp.w	r9, #4294967295
 800831c:	f040 8088 	bne.w	8008430 <I2C_RequestMemoryWrite+0x16c>
 8008320:	6963      	ldr	r3, [r4, #20]
 8008322:	061a      	lsls	r2, r3, #24
 8008324:	d464      	bmi.n	80083f0 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008326:	6963      	ldr	r3, [r4, #20]
 8008328:	055b      	lsls	r3, r3, #21
 800832a:	d5f9      	bpl.n	8008320 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800832c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800832e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8008332:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008334:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8008336:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8008338:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800833c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008340:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8008342:	f043 0304 	orr.w	r3, r3, #4
 8008346:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008348:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800834a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800834c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800834e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008352:	d066      	beq.n	8008422 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8008354:	2001      	movs	r0, #1
 8008356:	e01f      	b.n	8008398 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008358:	6963      	ldr	r3, [r4, #20]
 800835a:	07d9      	lsls	r1, r3, #31
 800835c:	d4c8      	bmi.n	80082f0 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800835e:	f7ff fc95 	bl	8007c8c <HAL_GetTick>
 8008362:	eba0 000b 	sub.w	r0, r0, fp
 8008366:	4581      	cmp	r9, r0
 8008368:	d304      	bcc.n	8008374 <I2C_RequestMemoryWrite+0xb0>
 800836a:	f1b9 0f00 	cmp.w	r9, #0
 800836e:	d001      	beq.n	8008374 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008370:	6834      	ldr	r4, [r6, #0]
 8008372:	e7b7      	b.n	80082e4 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008374:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008376:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008378:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800837a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800837e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008382:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008384:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8008386:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800838a:	f042 0220 	orr.w	r2, r2, #32
 800838e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008390:	680b      	ldr	r3, [r1, #0]
 8008392:	05dc      	lsls	r4, r3, #23
 8008394:	d435      	bmi.n	8008402 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8008396:	2003      	movs	r0, #3
}
 8008398:	b003      	add	sp, #12
 800839a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800839e:	6963      	ldr	r3, [r4, #20]
 80083a0:	0798      	lsls	r0, r3, #30
 80083a2:	d4b2      	bmi.n	800830a <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80083a4:	6963      	ldr	r3, [r4, #20]
 80083a6:	055a      	lsls	r2, r3, #21
 80083a8:	d40a      	bmi.n	80083c0 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80083aa:	f7ff fc6f 	bl	8007c8c <HAL_GetTick>
 80083ae:	eba0 000b 	sub.w	r0, r0, fp
 80083b2:	4581      	cmp	r9, r0
 80083b4:	d34e      	bcc.n	8008454 <I2C_RequestMemoryWrite+0x190>
 80083b6:	f1b9 0f00 	cmp.w	r9, #0
 80083ba:	d04b      	beq.n	8008454 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80083bc:	6834      	ldr	r4, [r6, #0]
 80083be:	e79a      	b.n	80082f6 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80083c0:	6823      	ldr	r3, [r4, #0]
 80083c2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80083c6:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80083c8:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80083ca:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80083ce:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80083d0:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80083d2:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80083d4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80083d8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80083dc:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80083de:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80083e2:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80083e6:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80083e8:	6433      	str	r3, [r6, #64]	; 0x40
}
 80083ea:	b003      	add	sp, #12
 80083ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80083f0:	f1b8 0f01 	cmp.w	r8, #1
 80083f4:	d109      	bne.n	800840a <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80083f6:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 80083f8:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80083fa:	6127      	str	r7, [r4, #16]
}
 80083fc:	b003      	add	sp, #12
 80083fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8008402:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008406:	6433      	str	r3, [r6, #64]	; 0x40
 8008408:	e7c5      	b.n	8008396 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800840a:	0a3b      	lsrs	r3, r7, #8
 800840c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800840e:	f1b9 3fff 	cmp.w	r9, #4294967295
 8008412:	d12e      	bne.n	8008472 <I2C_RequestMemoryWrite+0x1ae>
 8008414:	6963      	ldr	r3, [r4, #20]
 8008416:	0619      	lsls	r1, r3, #24
 8008418:	d4ed      	bmi.n	80083f6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800841a:	6963      	ldr	r3, [r4, #20]
 800841c:	055a      	lsls	r2, r3, #21
 800841e:	d5f9      	bpl.n	8008414 <I2C_RequestMemoryWrite+0x150>
 8008420:	e784      	b.n	800832c <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008422:	6832      	ldr	r2, [r6, #0]
 8008424:	6813      	ldr	r3, [r2, #0]
 8008426:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800842a:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800842c:	6013      	str	r3, [r2, #0]
 800842e:	e7b3      	b.n	8008398 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008430:	6963      	ldr	r3, [r4, #20]
 8008432:	061d      	lsls	r5, r3, #24
 8008434:	d4dc      	bmi.n	80083f0 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008436:	6963      	ldr	r3, [r4, #20]
 8008438:	0559      	lsls	r1, r3, #21
 800843a:	f53f af77 	bmi.w	800832c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800843e:	f7ff fc25 	bl	8007c8c <HAL_GetTick>
 8008442:	eba0 000b 	sub.w	r0, r0, fp
 8008446:	4581      	cmp	r9, r0
 8008448:	d325      	bcc.n	8008496 <I2C_RequestMemoryWrite+0x1d2>
 800844a:	f1b9 0f00 	cmp.w	r9, #0
 800844e:	d022      	beq.n	8008496 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008450:	6834      	ldr	r4, [r6, #0]
 8008452:	e761      	b.n	8008318 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008454:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8008456:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008458:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800845a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800845e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008462:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008464:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008468:	f043 0320 	orr.w	r3, r3, #32
 800846c:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800846e:	2001      	movs	r0, #1
 8008470:	e792      	b.n	8008398 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008472:	6963      	ldr	r3, [r4, #20]
 8008474:	061b      	lsls	r3, r3, #24
 8008476:	d4be      	bmi.n	80083f6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008478:	6963      	ldr	r3, [r4, #20]
 800847a:	0558      	lsls	r0, r3, #21
 800847c:	f53f af56 	bmi.w	800832c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008480:	f7ff fc04 	bl	8007c8c <HAL_GetTick>
 8008484:	eba0 000b 	sub.w	r0, r0, fp
 8008488:	4581      	cmp	r9, r0
 800848a:	d304      	bcc.n	8008496 <I2C_RequestMemoryWrite+0x1d2>
 800848c:	f1b9 0f00 	cmp.w	r9, #0
 8008490:	d001      	beq.n	8008496 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008492:	6834      	ldr	r4, [r6, #0]
 8008494:	e7bb      	b.n	800840e <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008496:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008498:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800849a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800849c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80084a0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80084a4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80084a6:	4313      	orrs	r3, r2
 80084a8:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80084aa:	e74d      	b.n	8008348 <I2C_RequestMemoryWrite+0x84>

080084ac <I2C_RequestMemoryRead>:
{
 80084ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80084b0:	6804      	ldr	r4, [r0, #0]
{
 80084b2:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80084b4:	6823      	ldr	r3, [r4, #0]
 80084b6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80084ba:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80084bc:	6823      	ldr	r3, [r4, #0]
{
 80084be:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80084c0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80084c4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80084c8:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80084cc:	6023      	str	r3, [r4, #0]
{
 80084ce:	4606      	mov	r6, r0
 80084d0:	468b      	mov	fp, r1
 80084d2:	4617      	mov	r7, r2
 80084d4:	f1ba 3fff 	cmp.w	sl, #4294967295
 80084d8:	d13a      	bne.n	8008550 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80084da:	6965      	ldr	r5, [r4, #20]
 80084dc:	07eb      	lsls	r3, r5, #31
 80084de:	d5fc      	bpl.n	80084da <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80084e0:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 80084e4:	6123      	str	r3, [r4, #16]
 80084e6:	fa5f fb8b 	uxtb.w	fp, fp
 80084ea:	f1ba 3fff 	cmp.w	sl, #4294967295
 80084ee:	d003      	beq.n	80084f8 <I2C_RequestMemoryRead+0x4c>
 80084f0:	e069      	b.n	80085c6 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80084f2:	6965      	ldr	r5, [r4, #20]
 80084f4:	056a      	lsls	r2, r5, #21
 80084f6:	d44e      	bmi.n	8008596 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80084f8:	6965      	ldr	r5, [r4, #20]
 80084fa:	07a9      	lsls	r1, r5, #30
 80084fc:	d5f9      	bpl.n	80084f2 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80084fe:	2300      	movs	r3, #0
 8008500:	9301      	str	r3, [sp, #4]
 8008502:	6963      	ldr	r3, [r4, #20]
 8008504:	9301      	str	r3, [sp, #4]
 8008506:	69a3      	ldr	r3, [r4, #24]
 8008508:	9301      	str	r3, [sp, #4]
 800850a:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800850c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008510:	f040 80bd 	bne.w	800868e <I2C_RequestMemoryRead+0x1e2>
 8008514:	6963      	ldr	r3, [r4, #20]
 8008516:	0618      	lsls	r0, r3, #24
 8008518:	d468      	bmi.n	80085ec <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800851a:	6963      	ldr	r3, [r4, #20]
 800851c:	0559      	lsls	r1, r3, #21
 800851e:	d5f9      	bpl.n	8008514 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8008520:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008522:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8008526:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008528:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800852a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800852c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008530:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008534:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8008536:	f043 0304 	orr.w	r3, r3, #4
 800853a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800853c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800853e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008540:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8008542:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008546:	d070      	beq.n	800862a <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8008548:	2001      	movs	r0, #1
}
 800854a:	b003      	add	sp, #12
 800854c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008550:	6963      	ldr	r3, [r4, #20]
 8008552:	07dd      	lsls	r5, r3, #31
 8008554:	d4c4      	bmi.n	80084e0 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008556:	f7ff fb99 	bl	8007c8c <HAL_GetTick>
 800855a:	eba0 0009 	sub.w	r0, r0, r9
 800855e:	4582      	cmp	sl, r0
 8008560:	d304      	bcc.n	800856c <I2C_RequestMemoryRead+0xc0>
 8008562:	f1ba 0f00 	cmp.w	sl, #0
 8008566:	d001      	beq.n	800856c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008568:	6834      	ldr	r4, [r6, #0]
 800856a:	e7b3      	b.n	80084d4 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800856c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800856e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008570:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008572:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008576:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800857a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800857c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800857e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008582:	f042 0220 	orr.w	r2, r2, #32
 8008586:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008588:	680b      	ldr	r3, [r1, #0]
 800858a:	05dc      	lsls	r4, r3, #23
 800858c:	d43d      	bmi.n	800860a <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800858e:	2003      	movs	r0, #3
}
 8008590:	b003      	add	sp, #12
 8008592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008596:	6823      	ldr	r3, [r4, #0]
 8008598:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800859c:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800859e:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80085a0:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80085a4:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80085a6:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80085a8:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80085aa:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80085ae:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80085b2:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80085b4:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80085b8:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80085bc:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80085be:	6433      	str	r3, [r6, #64]	; 0x40
}
 80085c0:	b003      	add	sp, #12
 80085c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80085c6:	6963      	ldr	r3, [r4, #20]
 80085c8:	079b      	lsls	r3, r3, #30
 80085ca:	d498      	bmi.n	80084fe <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80085cc:	6963      	ldr	r3, [r4, #20]
 80085ce:	0558      	lsls	r0, r3, #21
 80085d0:	d4e1      	bmi.n	8008596 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80085d2:	f7ff fb5b 	bl	8007c8c <HAL_GetTick>
 80085d6:	eba0 0009 	sub.w	r0, r0, r9
 80085da:	4582      	cmp	sl, r0
 80085dc:	f0c0 808f 	bcc.w	80086fe <I2C_RequestMemoryRead+0x252>
 80085e0:	f1ba 0f00 	cmp.w	sl, #0
 80085e4:	f000 808b 	beq.w	80086fe <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80085e8:	6834      	ldr	r4, [r6, #0]
 80085ea:	e77e      	b.n	80084ea <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80085ec:	f1b8 0f01 	cmp.w	r8, #1
 80085f0:	d10f      	bne.n	8008612 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80085f2:	b2ff      	uxtb	r7, r7
 80085f4:	6127      	str	r7, [r4, #16]
 80085f6:	f1ba 3fff 	cmp.w	sl, #4294967295
 80085fa:	d16e      	bne.n	80086da <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80085fc:	6963      	ldr	r3, [r4, #20]
 80085fe:	061b      	lsls	r3, r3, #24
 8008600:	d41a      	bmi.n	8008638 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008602:	6963      	ldr	r3, [r4, #20]
 8008604:	055f      	lsls	r7, r3, #21
 8008606:	d5f9      	bpl.n	80085fc <I2C_RequestMemoryRead+0x150>
 8008608:	e78a      	b.n	8008520 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800860a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800860e:	6433      	str	r3, [r6, #64]	; 0x40
 8008610:	e7bd      	b.n	800858e <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8008612:	0a3b      	lsrs	r3, r7, #8
 8008614:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008616:	f1ba 3fff 	cmp.w	sl, #4294967295
 800861a:	d17e      	bne.n	800871a <I2C_RequestMemoryRead+0x26e>
 800861c:	6963      	ldr	r3, [r4, #20]
 800861e:	061d      	lsls	r5, r3, #24
 8008620:	d4e7      	bmi.n	80085f2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008622:	6963      	ldr	r3, [r4, #20]
 8008624:	0558      	lsls	r0, r3, #21
 8008626:	d5f9      	bpl.n	800861c <I2C_RequestMemoryRead+0x170>
 8008628:	e77a      	b.n	8008520 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800862a:	6832      	ldr	r2, [r6, #0]
 800862c:	6813      	ldr	r3, [r2, #0]
 800862e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 8008632:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008634:	6013      	str	r3, [r2, #0]
 8008636:	e7ab      	b.n	8008590 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008638:	6823      	ldr	r3, [r4, #0]
 800863a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800863e:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8008640:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008644:	d113      	bne.n	800866e <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008646:	6963      	ldr	r3, [r4, #20]
 8008648:	07d8      	lsls	r0, r3, #31
 800864a:	d5fc      	bpl.n	8008646 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800864c:	f04b 0301 	orr.w	r3, fp, #1
 8008650:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8008652:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008656:	d003      	beq.n	8008660 <I2C_RequestMemoryRead+0x1b4>
 8008658:	e02b      	b.n	80086b2 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800865a:	6963      	ldr	r3, [r4, #20]
 800865c:	055b      	lsls	r3, r3, #21
 800865e:	d49a      	bmi.n	8008596 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008660:	6963      	ldr	r3, [r4, #20]
 8008662:	43db      	mvns	r3, r3
 8008664:	f013 0302 	ands.w	r3, r3, #2
 8008668:	d1f7      	bne.n	800865a <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800866a:	4618      	mov	r0, r3
 800866c:	e790      	b.n	8008590 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800866e:	6963      	ldr	r3, [r4, #20]
 8008670:	07d9      	lsls	r1, r3, #31
 8008672:	d4eb      	bmi.n	800864c <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008674:	f7ff fb0a 	bl	8007c8c <HAL_GetTick>
 8008678:	eba0 0009 	sub.w	r0, r0, r9
 800867c:	4582      	cmp	sl, r0
 800867e:	f4ff af75 	bcc.w	800856c <I2C_RequestMemoryRead+0xc0>
 8008682:	f1ba 0f00 	cmp.w	sl, #0
 8008686:	f43f af71 	beq.w	800856c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800868a:	6834      	ldr	r4, [r6, #0]
 800868c:	e7d8      	b.n	8008640 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800868e:	6963      	ldr	r3, [r4, #20]
 8008690:	061a      	lsls	r2, r3, #24
 8008692:	d4ab      	bmi.n	80085ec <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008694:	6963      	ldr	r3, [r4, #20]
 8008696:	055d      	lsls	r5, r3, #21
 8008698:	f53f af42 	bmi.w	8008520 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800869c:	f7ff faf6 	bl	8007c8c <HAL_GetTick>
 80086a0:	eba0 0009 	sub.w	r0, r0, r9
 80086a4:	4582      	cmp	sl, r0
 80086a6:	d34b      	bcc.n	8008740 <I2C_RequestMemoryRead+0x294>
 80086a8:	f1ba 0f00 	cmp.w	sl, #0
 80086ac:	d048      	beq.n	8008740 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80086ae:	6834      	ldr	r4, [r6, #0]
 80086b0:	e72c      	b.n	800850c <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80086b2:	6963      	ldr	r3, [r4, #20]
 80086b4:	43db      	mvns	r3, r3
 80086b6:	f013 0302 	ands.w	r3, r3, #2
 80086ba:	d0d6      	beq.n	800866a <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80086bc:	6963      	ldr	r3, [r4, #20]
 80086be:	055a      	lsls	r2, r3, #21
 80086c0:	f53f af69 	bmi.w	8008596 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80086c4:	f7ff fae2 	bl	8007c8c <HAL_GetTick>
 80086c8:	eba0 0009 	sub.w	r0, r0, r9
 80086cc:	4582      	cmp	sl, r0
 80086ce:	d316      	bcc.n	80086fe <I2C_RequestMemoryRead+0x252>
 80086d0:	f1ba 0f00 	cmp.w	sl, #0
 80086d4:	d013      	beq.n	80086fe <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80086d6:	6834      	ldr	r4, [r6, #0]
 80086d8:	e7bb      	b.n	8008652 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80086da:	6963      	ldr	r3, [r4, #20]
 80086dc:	061d      	lsls	r5, r3, #24
 80086de:	d4ab      	bmi.n	8008638 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80086e0:	6963      	ldr	r3, [r4, #20]
 80086e2:	055a      	lsls	r2, r3, #21
 80086e4:	f53f af1c 	bmi.w	8008520 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80086e8:	f7ff fad0 	bl	8007c8c <HAL_GetTick>
 80086ec:	eba0 0009 	sub.w	r0, r0, r9
 80086f0:	4582      	cmp	sl, r0
 80086f2:	d325      	bcc.n	8008740 <I2C_RequestMemoryRead+0x294>
 80086f4:	f1ba 0f00 	cmp.w	sl, #0
 80086f8:	d022      	beq.n	8008740 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80086fa:	6834      	ldr	r4, [r6, #0]
 80086fc:	e77b      	b.n	80085f6 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80086fe:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8008700:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008702:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8008704:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008708:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800870c:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800870e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008712:	f043 0320 	orr.w	r3, r3, #32
 8008716:	6433      	str	r3, [r6, #64]	; 0x40
 8008718:	e716      	b.n	8008548 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800871a:	6963      	ldr	r3, [r4, #20]
 800871c:	0619      	lsls	r1, r3, #24
 800871e:	f53f af68 	bmi.w	80085f2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008722:	6963      	ldr	r3, [r4, #20]
 8008724:	055b      	lsls	r3, r3, #21
 8008726:	f53f aefb 	bmi.w	8008520 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800872a:	f7ff faaf 	bl	8007c8c <HAL_GetTick>
 800872e:	eba0 0009 	sub.w	r0, r0, r9
 8008732:	4582      	cmp	sl, r0
 8008734:	d304      	bcc.n	8008740 <I2C_RequestMemoryRead+0x294>
 8008736:	f1ba 0f00 	cmp.w	sl, #0
 800873a:	d001      	beq.n	8008740 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800873c:	6834      	ldr	r4, [r6, #0]
 800873e:	e76a      	b.n	8008616 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008740:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008742:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008744:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008746:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800874a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800874e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8008750:	4313      	orrs	r3, r2
 8008752:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8008754:	e6f2      	b.n	800853c <I2C_RequestMemoryRead+0x90>
 8008756:	bf00      	nop

08008758 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8008758:	2800      	cmp	r0, #0
 800875a:	f000 80b9 	beq.w	80088d0 <HAL_I2C_Init+0x178>
{
 800875e:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8008760:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008764:	4604      	mov	r4, r0
 8008766:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800876a:	2b00      	cmp	r3, #0
 800876c:	f000 8098 	beq.w	80088a0 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8008770:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8008772:	2224      	movs	r2, #36	; 0x24
 8008774:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8008778:	681a      	ldr	r2, [r3, #0]
 800877a:	f022 0201 	bic.w	r2, r2, #1
 800877e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8008780:	681a      	ldr	r2, [r3, #0]
 8008782:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8008786:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8008788:	681a      	ldr	r2, [r3, #0]
 800878a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800878e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8008790:	f001 fe70 	bl	800a474 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8008794:	6865      	ldr	r5, [r4, #4]
 8008796:	4b4f      	ldr	r3, [pc, #316]	; (80088d4 <HAL_I2C_Init+0x17c>)
 8008798:	429d      	cmp	r5, r3
 800879a:	d84f      	bhi.n	800883c <HAL_I2C_Init+0xe4>
 800879c:	4b4e      	ldr	r3, [pc, #312]	; (80088d8 <HAL_I2C_Init+0x180>)
 800879e:	4298      	cmp	r0, r3
 80087a0:	d97c      	bls.n	800889c <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 80087a2:	4b4e      	ldr	r3, [pc, #312]	; (80088dc <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80087a4:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 80087a6:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80087aa:	1e43      	subs	r3, r0, #1
 80087ac:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80087b0:	6822      	ldr	r2, [r4, #0]
 80087b2:	6851      	ldr	r1, [r2, #4]
 80087b4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80087b8:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 80087bc:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80087be:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 80087c0:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80087c4:	f10c 0c01 	add.w	ip, ip, #1
 80087c8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80087cc:	ea41 010c 	orr.w	r1, r1, ip
 80087d0:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80087d2:	69d1      	ldr	r1, [r2, #28]
 80087d4:	f640 70fc 	movw	r0, #4092	; 0xffc
 80087d8:	3301      	adds	r3, #1
 80087da:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80087de:	4203      	tst	r3, r0
 80087e0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80087e4:	d161      	bne.n	80088aa <HAL_I2C_Init+0x152>
 80087e6:	2304      	movs	r3, #4
 80087e8:	430b      	orrs	r3, r1
 80087ea:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80087ec:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80087f0:	6811      	ldr	r1, [r2, #0]
 80087f2:	4303      	orrs	r3, r0
 80087f4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80087f8:	430b      	orrs	r3, r1
 80087fa:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80087fc:	6891      	ldr	r1, [r2, #8]
 80087fe:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8008802:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8008806:	4303      	orrs	r3, r0
 8008808:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800880c:	430b      	orrs	r3, r1
 800880e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8008810:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8008814:	68d1      	ldr	r1, [r2, #12]
 8008816:	4303      	orrs	r3, r0
 8008818:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800881c:	430b      	orrs	r3, r1
 800881e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8008820:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008822:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8008824:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8008828:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800882a:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800882c:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800882e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8008832:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8008834:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8008838:	4618      	mov	r0, r3
}
 800883a:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800883c:	4b28      	ldr	r3, [pc, #160]	; (80088e0 <HAL_I2C_Init+0x188>)
 800883e:	4298      	cmp	r0, r3
 8008840:	d92c      	bls.n	800889c <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008842:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8008844:	4b25      	ldr	r3, [pc, #148]	; (80088dc <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008846:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8008848:	4e26      	ldr	r6, [pc, #152]	; (80088e4 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800884a:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800884e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8008852:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8008856:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8008858:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800885c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8008860:	fb01 f303 	mul.w	r3, r1, r3
 8008864:	fba6 6303 	umull	r6, r3, r6, r3
 8008868:	6a11      	ldr	r1, [r2, #32]
 800886a:	099b      	lsrs	r3, r3, #6
 800886c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8008870:	3301      	adds	r3, #1
 8008872:	430b      	orrs	r3, r1
 8008874:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8008876:	69d1      	ldr	r1, [r2, #28]
 8008878:	68a3      	ldr	r3, [r4, #8]
 800887a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800887e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008882:	b9ab      	cbnz	r3, 80088b0 <HAL_I2C_Init+0x158>
 8008884:	1e43      	subs	r3, r0, #1
 8008886:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800888a:	fbb3 f3f5 	udiv	r3, r3, r5
 800888e:	3301      	adds	r3, #1
 8008890:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008894:	b1d3      	cbz	r3, 80088cc <HAL_I2C_Init+0x174>
 8008896:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800889a:	e7a5      	b.n	80087e8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800889c:	2001      	movs	r0, #1
}
 800889e:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 80088a0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80088a4:	f7f9 f9be 	bl	8001c24 <HAL_I2C_MspInit>
 80088a8:	e762      	b.n	8008770 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80088aa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80088ae:	e79b      	b.n	80087e8 <HAL_I2C_Init+0x90>
 80088b0:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80088b4:	1e43      	subs	r3, r0, #1
 80088b6:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80088ba:	fbb3 f3f5 	udiv	r3, r3, r5
 80088be:	3301      	adds	r3, #1
 80088c0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80088c4:	b113      	cbz	r3, 80088cc <HAL_I2C_Init+0x174>
 80088c6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80088ca:	e78d      	b.n	80087e8 <HAL_I2C_Init+0x90>
 80088cc:	2301      	movs	r3, #1
 80088ce:	e78b      	b.n	80087e8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 80088d0:	2001      	movs	r0, #1
}
 80088d2:	4770      	bx	lr
 80088d4:	000186a0 	.word	0x000186a0
 80088d8:	001e847f 	.word	0x001e847f
 80088dc:	431bde83 	.word	0x431bde83
 80088e0:	003d08ff 	.word	0x003d08ff
 80088e4:	10624dd3 	.word	0x10624dd3

080088e8 <HAL_I2C_Mem_Write>:
{
 80088e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80088ec:	4604      	mov	r4, r0
 80088ee:	b083      	sub	sp, #12
 80088f0:	4699      	mov	r9, r3
 80088f2:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 80088f6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80088f8:	460f      	mov	r7, r1
 80088fa:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80088fc:	f7ff f9c6 	bl	8007c8c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008900:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008904:	2b20      	cmp	r3, #32
 8008906:	d004      	beq.n	8008912 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8008908:	2702      	movs	r7, #2
}
 800890a:	4638      	mov	r0, r7
 800890c:	b003      	add	sp, #12
 800890e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008912:	4605      	mov	r5, r0
 8008914:	e005      	b.n	8008922 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008916:	f7ff f9b9 	bl	8007c8c <HAL_GetTick>
 800891a:	1b40      	subs	r0, r0, r5
 800891c:	2819      	cmp	r0, #25
 800891e:	f200 80a8 	bhi.w	8008a72 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008922:	6820      	ldr	r0, [r4, #0]
 8008924:	6983      	ldr	r3, [r0, #24]
 8008926:	ea6f 0c03 	mvn.w	ip, r3
 800892a:	f01c 0b02 	ands.w	fp, ip, #2
 800892e:	d0f2      	beq.n	8008916 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8008930:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8008934:	2b01      	cmp	r3, #1
 8008936:	d0e7      	beq.n	8008908 <HAL_I2C_Mem_Write+0x20>
 8008938:	2301      	movs	r3, #1
 800893a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800893e:	6803      	ldr	r3, [r0, #0]
 8008940:	07db      	lsls	r3, r3, #31
 8008942:	d572      	bpl.n	8008a2a <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008944:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008946:	6807      	ldr	r7, [r0, #0]
 8008948:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800894c:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800894e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8008950:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8008952:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008954:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8008958:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800895c:	2040      	movs	r0, #64	; 0x40
 800895e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008962:	2000      	movs	r0, #0
 8008964:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8008966:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800896a:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800896c:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800896e:	4856      	ldr	r0, [pc, #344]	; (8008ac8 <HAL_I2C_Mem_Write+0x1e0>)
 8008970:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008972:	464b      	mov	r3, r9
 8008974:	4642      	mov	r2, r8
 8008976:	4620      	mov	r0, r4
 8008978:	f7ff fca4 	bl	80082c4 <I2C_RequestMemoryWrite>
 800897c:	4607      	mov	r7, r0
 800897e:	bb00      	cbnz	r0, 80089c2 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8008980:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008982:	2b00      	cmp	r3, #0
 8008984:	f000 809e 	beq.w	8008ac4 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8008988:	6823      	ldr	r3, [r4, #0]
 800898a:	1c72      	adds	r2, r6, #1
 800898c:	d159      	bne.n	8008a42 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800898e:	695a      	ldr	r2, [r3, #20]
 8008990:	0610      	lsls	r0, r2, #24
 8008992:	d41b      	bmi.n	80089cc <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008994:	695a      	ldr	r2, [r3, #20]
 8008996:	0551      	lsls	r1, r2, #21
 8008998:	d5f9      	bpl.n	800898e <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800899a:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800899c:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80089a0:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80089a2:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80089a4:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80089a6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80089aa:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80089ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80089b0:	f043 0304 	orr.w	r3, r3, #4
 80089b4:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80089b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 80089b8:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80089ba:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80089bc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80089c0:	d038      	beq.n	8008a34 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 80089c2:	2701      	movs	r7, #1
}
 80089c4:	4638      	mov	r0, r7
 80089c6:	b003      	add	sp, #12
 80089c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80089cc:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 80089d0:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80089d4:	4661      	mov	r1, ip
      hi2c->XferSize--;
 80089d6:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80089da:	f811 2b01 	ldrb.w	r2, [r1], #1
 80089de:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 80089e0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 80089e2:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80089e4:	3a01      	subs	r2, #1
 80089e6:	b292      	uxth	r2, r2
 80089e8:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80089ea:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80089ec:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 80089ee:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80089f0:	0740      	lsls	r0, r0, #29
 80089f2:	d517      	bpl.n	8008a24 <HAL_I2C_Mem_Write+0x13c>
 80089f4:	b942      	cbnz	r2, 8008a08 <HAL_I2C_Mem_Write+0x120>
 80089f6:	1c72      	adds	r2, r6, #1
 80089f8:	d156      	bne.n	8008aa8 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80089fa:	695a      	ldr	r2, [r3, #20]
 80089fc:	0750      	lsls	r0, r2, #29
 80089fe:	d446      	bmi.n	8008a8e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008a00:	695a      	ldr	r2, [r3, #20]
 8008a02:	0551      	lsls	r1, r2, #21
 8008a04:	d5f9      	bpl.n	80089fa <HAL_I2C_Mem_Write+0x112>
 8008a06:	e7c8      	b.n	800899a <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008a08:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8008a0c:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8008a0e:	f10c 0102 	add.w	r1, ip, #2
 8008a12:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8008a14:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8008a16:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8008a1a:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8008a1c:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8008a1e:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8008a20:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8008a22:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8008a24:	2a00      	cmp	r2, #0
 8008a26:	d1b0      	bne.n	800898a <HAL_I2C_Mem_Write+0xa2>
 8008a28:	e7e5      	b.n	80089f6 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8008a2a:	6803      	ldr	r3, [r0, #0]
 8008a2c:	f043 0301 	orr.w	r3, r3, #1
 8008a30:	6003      	str	r3, [r0, #0]
 8008a32:	e787      	b.n	8008944 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008a34:	6822      	ldr	r2, [r4, #0]
 8008a36:	6813      	ldr	r3, [r2, #0]
 8008a38:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8008a3c:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008a3e:	6013      	str	r3, [r2, #0]
 8008a40:	e763      	b.n	800890a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008a42:	695a      	ldr	r2, [r3, #20]
 8008a44:	0612      	lsls	r2, r2, #24
 8008a46:	d4c1      	bmi.n	80089cc <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008a48:	695a      	ldr	r2, [r3, #20]
 8008a4a:	0551      	lsls	r1, r2, #21
 8008a4c:	d4a5      	bmi.n	800899a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008a4e:	f7ff f91d 	bl	8007c8c <HAL_GetTick>
 8008a52:	1b40      	subs	r0, r0, r5
 8008a54:	4286      	cmp	r6, r0
 8008a56:	d301      	bcc.n	8008a5c <HAL_I2C_Mem_Write+0x174>
 8008a58:	2e00      	cmp	r6, #0
 8008a5a:	d195      	bne.n	8008988 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008a5c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008a5e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008a60:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008a62:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008a66:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008a6a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008a6c:	4313      	orrs	r3, r2
 8008a6e:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8008a70:	e7a1      	b.n	80089b6 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8008a72:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008a74:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008a78:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008a7c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008a80:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008a82:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008a86:	f043 0320 	orr.w	r3, r3, #32
 8008a8a:	6423      	str	r3, [r4, #64]	; 0x40
 8008a8c:	e73c      	b.n	8008908 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008a8e:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008a90:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008a92:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8008a96:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008a98:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8008a9a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8008a9e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008aa2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8008aa6:	e730      	b.n	800890a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8008aa8:	695a      	ldr	r2, [r3, #20]
 8008aaa:	0752      	lsls	r2, r2, #29
 8008aac:	d4ef      	bmi.n	8008a8e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008aae:	695a      	ldr	r2, [r3, #20]
 8008ab0:	0551      	lsls	r1, r2, #21
 8008ab2:	f53f af72 	bmi.w	800899a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008ab6:	f7ff f8e9 	bl	8007c8c <HAL_GetTick>
 8008aba:	1b40      	subs	r0, r0, r5
 8008abc:	4286      	cmp	r6, r0
 8008abe:	d3cd      	bcc.n	8008a5c <HAL_I2C_Mem_Write+0x174>
 8008ac0:	2e00      	cmp	r6, #0
 8008ac2:	d0cb      	beq.n	8008a5c <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8008ac4:	6823      	ldr	r3, [r4, #0]
 8008ac6:	e796      	b.n	80089f6 <HAL_I2C_Mem_Write+0x10e>
 8008ac8:	ffff0000 	.word	0xffff0000

08008acc <HAL_I2C_Mem_Read>:
{
 8008acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ad0:	4604      	mov	r4, r0
 8008ad2:	b087      	sub	sp, #28
 8008ad4:	4699      	mov	r9, r3
 8008ad6:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8008ada:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8008adc:	460f      	mov	r7, r1
 8008ade:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8008ae0:	f7ff f8d4 	bl	8007c8c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008ae4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008ae8:	2b20      	cmp	r3, #32
 8008aea:	d004      	beq.n	8008af6 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8008aec:	2702      	movs	r7, #2
}
 8008aee:	4638      	mov	r0, r7
 8008af0:	b007      	add	sp, #28
 8008af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008af6:	4606      	mov	r6, r0
 8008af8:	e005      	b.n	8008b06 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008afa:	f7ff f8c7 	bl	8007c8c <HAL_GetTick>
 8008afe:	1b80      	subs	r0, r0, r6
 8008b00:	2819      	cmp	r0, #25
 8008b02:	f200 80d2 	bhi.w	8008caa <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008b06:	f8d4 c000 	ldr.w	ip, [r4]
 8008b0a:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8008b0e:	43c0      	mvns	r0, r0
 8008b10:	f010 0b02 	ands.w	fp, r0, #2
 8008b14:	d0f1      	beq.n	8008afa <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8008b16:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8008b1a:	2b01      	cmp	r3, #1
 8008b1c:	d0e6      	beq.n	8008aec <HAL_I2C_Mem_Read+0x20>
 8008b1e:	2301      	movs	r3, #1
 8008b20:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008b24:	f8dc 3000 	ldr.w	r3, [ip]
 8008b28:	07d9      	lsls	r1, r3, #31
 8008b2a:	d537      	bpl.n	8008b9c <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008b2c:	f8dc 0000 	ldr.w	r0, [ip]
 8008b30:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8008b34:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8008b38:	9810      	ldr	r0, [sp, #64]	; 0x40
 8008b3a:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8008b3c:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008b3e:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8008b42:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8008b46:	2040      	movs	r0, #64	; 0x40
 8008b48:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008b4c:	2000      	movs	r0, #0
 8008b4e:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8008b50:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8008b54:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8008b56:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8008b58:	4893      	ldr	r0, [pc, #588]	; (8008da8 <HAL_I2C_Mem_Read+0x2dc>)
 8008b5a:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008b5c:	4639      	mov	r1, r7
 8008b5e:	464b      	mov	r3, r9
 8008b60:	4642      	mov	r2, r8
 8008b62:	4620      	mov	r0, r4
 8008b64:	f7ff fca2 	bl	80084ac <I2C_RequestMemoryRead>
 8008b68:	4607      	mov	r7, r0
 8008b6a:	2800      	cmp	r0, #0
 8008b6c:	f040 80ab 	bne.w	8008cc6 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8008b70:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8008b72:	b9d2      	cbnz	r2, 8008baa <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008b74:	6823      	ldr	r3, [r4, #0]
 8008b76:	9002      	str	r0, [sp, #8]
 8008b78:	695a      	ldr	r2, [r3, #20]
 8008b7a:	9202      	str	r2, [sp, #8]
 8008b7c:	699a      	ldr	r2, [r3, #24]
 8008b7e:	9202      	str	r2, [sp, #8]
 8008b80:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008b82:	681a      	ldr	r2, [r3, #0]
 8008b84:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008b88:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008b8a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8008b8c:	2220      	movs	r2, #32
 8008b8e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8008b92:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008b96:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8008b9a:	e7a8      	b.n	8008aee <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8008b9c:	f8dc 3000 	ldr.w	r3, [ip]
 8008ba0:	f043 0301 	orr.w	r3, r3, #1
 8008ba4:	f8cc 3000 	str.w	r3, [ip]
 8008ba8:	e7c0      	b.n	8008b2c <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8008baa:	2a01      	cmp	r2, #1
 8008bac:	f000 812c 	beq.w	8008e08 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 8008bb0:	2a02      	cmp	r2, #2
 8008bb2:	f000 80bd 	beq.w	8008d30 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008bb6:	6823      	ldr	r3, [r4, #0]
 8008bb8:	9005      	str	r0, [sp, #20]
 8008bba:	6959      	ldr	r1, [r3, #20]
 8008bbc:	9105      	str	r1, [sp, #20]
 8008bbe:	6999      	ldr	r1, [r3, #24]
 8008bc0:	9105      	str	r1, [sp, #20]
 8008bc2:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8008bc4:	2a03      	cmp	r2, #3
 8008bc6:	d849      	bhi.n	8008c5c <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8008bc8:	2a01      	cmp	r2, #1
 8008bca:	f000 80eb 	beq.w	8008da4 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 8008bce:	2a02      	cmp	r2, #2
 8008bd0:	f000 8089 	beq.w	8008ce6 <HAL_I2C_Mem_Read+0x21a>
 8008bd4:	1c69      	adds	r1, r5, #1
 8008bd6:	f040 80bb 	bne.w	8008d50 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008bda:	695a      	ldr	r2, [r3, #20]
 8008bdc:	0752      	lsls	r2, r2, #29
 8008bde:	d5fc      	bpl.n	8008bda <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008be0:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008be2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008be4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008be8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008bea:	691b      	ldr	r3, [r3, #16]
 8008bec:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8008bee:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8008bf0:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008bf2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008bf4:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8008bf6:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8008bf8:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8008bfa:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8008bfc:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008bfe:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008c00:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8008c02:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008c04:	6822      	ldr	r2, [r4, #0]
 8008c06:	f040 80af 	bne.w	8008d68 <HAL_I2C_Mem_Read+0x29c>
 8008c0a:	6953      	ldr	r3, [r2, #20]
 8008c0c:	075b      	lsls	r3, r3, #29
 8008c0e:	d5fc      	bpl.n	8008c0a <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008c10:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c12:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008c14:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008c18:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c1a:	6913      	ldr	r3, [r2, #16]
 8008c1c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8008c1e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8008c20:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8008c22:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c24:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8008c26:	3b01      	subs	r3, #1
 8008c28:	b29b      	uxth	r3, r3
 8008c2a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c2c:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 8008c2e:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8008c30:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8008c34:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8008c36:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c3a:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8008c3c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008c3e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8008c40:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008c42:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8008c44:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8008c46:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8008c48:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8008c4a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8008c4c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008c4e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008c50:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8008c52:	2a00      	cmp	r2, #0
 8008c54:	d099      	beq.n	8008b8a <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8008c56:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008c58:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8008c5a:	d9b5      	bls.n	8008bc8 <HAL_I2C_Mem_Read+0xfc>
 8008c5c:	b95d      	cbnz	r5, 8008c76 <HAL_I2C_Mem_Read+0x1aa>
 8008c5e:	e0c5      	b.n	8008dec <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8008c60:	695a      	ldr	r2, [r3, #20]
 8008c62:	06d0      	lsls	r0, r2, #27
 8008c64:	f100 80b2 	bmi.w	8008dcc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008c68:	f7ff f810 	bl	8007c8c <HAL_GetTick>
 8008c6c:	1b80      	subs	r0, r0, r6
 8008c6e:	4285      	cmp	r5, r0
 8008c70:	f0c0 8086 	bcc.w	8008d80 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008c74:	6823      	ldr	r3, [r4, #0]
 8008c76:	695a      	ldr	r2, [r3, #20]
 8008c78:	0652      	lsls	r2, r2, #25
 8008c7a:	d5f1      	bpl.n	8008c60 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c7c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008c7e:	691b      	ldr	r3, [r3, #16]
 8008c80:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 8008c82:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008c84:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8008c86:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8008c88:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8008c8a:	3b01      	subs	r3, #1
 8008c8c:	b29b      	uxth	r3, r3
 8008c8e:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008c90:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 8008c92:	3a01      	subs	r2, #1
 8008c94:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8008c96:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008c9a:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8008c9c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8008c9e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008ca2:	d5d6      	bpl.n	8008c52 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008ca4:	6903      	ldr	r3, [r0, #16]
 8008ca6:	704b      	strb	r3, [r1, #1]
 8008ca8:	e036      	b.n	8008d18 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8008caa:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008cac:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008cb0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008cb4:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008cb8:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008cba:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008cbe:	f043 0320 	orr.w	r3, r3, #32
 8008cc2:	6423      	str	r3, [r4, #64]	; 0x40
 8008cc4:	e712      	b.n	8008aec <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8008cc6:	2701      	movs	r7, #1
}
 8008cc8:	4638      	mov	r0, r7
 8008cca:	b007      	add	sp, #28
 8008ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008cd0:	695a      	ldr	r2, [r3, #20]
 8008cd2:	0750      	lsls	r0, r2, #29
 8008cd4:	d40c      	bmi.n	8008cf0 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008cd6:	f7fe ffd9 	bl	8007c8c <HAL_GetTick>
 8008cda:	1b80      	subs	r0, r0, r6
 8008cdc:	4285      	cmp	r5, r0
 8008cde:	d34f      	bcc.n	8008d80 <HAL_I2C_Mem_Read+0x2b4>
 8008ce0:	2d00      	cmp	r5, #0
 8008ce2:	d04d      	beq.n	8008d80 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008ce4:	6823      	ldr	r3, [r4, #0]
 8008ce6:	1c69      	adds	r1, r5, #1
 8008ce8:	d1f2      	bne.n	8008cd0 <HAL_I2C_Mem_Read+0x204>
 8008cea:	695a      	ldr	r2, [r3, #20]
 8008cec:	0752      	lsls	r2, r2, #29
 8008cee:	d5fc      	bpl.n	8008cea <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008cf0:	681a      	ldr	r2, [r3, #0]
 8008cf2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008cf6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008cf8:	691a      	ldr	r2, [r3, #16]
 8008cfa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008cfc:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8008cfe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8008d00:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8008d02:	3b01      	subs	r3, #1
 8008d04:	b29b      	uxth	r3, r3
 8008d06:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8008d08:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008d0a:	3b01      	subs	r3, #1
 8008d0c:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d0e:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8008d10:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d12:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8008d14:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d16:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8008d18:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008d1a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8008d1c:	3301      	adds	r3, #1
 8008d1e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8008d20:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8008d22:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8008d24:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8008d26:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8008d28:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8008d2a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008d2c:	8563      	strh	r3, [r4, #42]	; 0x2a
 8008d2e:	e790      	b.n	8008c52 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008d30:	6823      	ldr	r3, [r4, #0]
 8008d32:	6819      	ldr	r1, [r3, #0]
 8008d34:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8008d38:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008d3a:	6819      	ldr	r1, [r3, #0]
 8008d3c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8008d40:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008d42:	9004      	str	r0, [sp, #16]
 8008d44:	6959      	ldr	r1, [r3, #20]
 8008d46:	9104      	str	r1, [sp, #16]
 8008d48:	6999      	ldr	r1, [r3, #24]
 8008d4a:	9104      	str	r1, [sp, #16]
 8008d4c:	9904      	ldr	r1, [sp, #16]
 8008d4e:	e739      	b.n	8008bc4 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008d50:	695a      	ldr	r2, [r3, #20]
 8008d52:	0750      	lsls	r0, r2, #29
 8008d54:	f53f af44 	bmi.w	8008be0 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008d58:	f7fe ff98 	bl	8007c8c <HAL_GetTick>
 8008d5c:	1b80      	subs	r0, r0, r6
 8008d5e:	4285      	cmp	r5, r0
 8008d60:	d30e      	bcc.n	8008d80 <HAL_I2C_Mem_Read+0x2b4>
 8008d62:	b16d      	cbz	r5, 8008d80 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008d64:	6823      	ldr	r3, [r4, #0]
 8008d66:	e735      	b.n	8008bd4 <HAL_I2C_Mem_Read+0x108>
 8008d68:	6953      	ldr	r3, [r2, #20]
 8008d6a:	0758      	lsls	r0, r3, #29
 8008d6c:	f53f af50 	bmi.w	8008c10 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008d70:	f7fe ff8c 	bl	8007c8c <HAL_GetTick>
 8008d74:	1b80      	subs	r0, r0, r6
 8008d76:	4285      	cmp	r5, r0
 8008d78:	d302      	bcc.n	8008d80 <HAL_I2C_Mem_Read+0x2b4>
 8008d7a:	2d00      	cmp	r5, #0
 8008d7c:	f47f af41 	bne.w	8008c02 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008d80:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008d82:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008d84:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008d86:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008d8a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008d8e:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008d90:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8008d94:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008d96:	f043 0320 	orr.w	r3, r3, #32
}
 8008d9a:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008d9c:	6423      	str	r3, [r4, #64]	; 0x40
}
 8008d9e:	b007      	add	sp, #28
 8008da0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008da4:	b95d      	cbnz	r5, 8008dbe <HAL_I2C_Mem_Read+0x2f2>
 8008da6:	e02b      	b.n	8008e00 <HAL_I2C_Mem_Read+0x334>
 8008da8:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8008dac:	695a      	ldr	r2, [r3, #20]
 8008dae:	06d2      	lsls	r2, r2, #27
 8008db0:	d40c      	bmi.n	8008dcc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008db2:	f7fe ff6b 	bl	8007c8c <HAL_GetTick>
 8008db6:	1b80      	subs	r0, r0, r6
 8008db8:	4285      	cmp	r5, r0
 8008dba:	d3e1      	bcc.n	8008d80 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008dbc:	6823      	ldr	r3, [r4, #0]
 8008dbe:	695a      	ldr	r2, [r3, #20]
 8008dc0:	0651      	lsls	r1, r2, #25
 8008dc2:	d5f3      	bpl.n	8008dac <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008dc4:	691a      	ldr	r2, [r3, #16]
 8008dc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008dc8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008dca:	e7a5      	b.n	8008d18 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008dcc:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008dce:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 8008dd2:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008dd4:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008dd6:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008dd8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008ddc:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8008de0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008de2:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8008de4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8008de8:	2701      	movs	r7, #1
 8008dea:	e680      	b.n	8008aee <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008dec:	695a      	ldr	r2, [r3, #20]
 8008dee:	0652      	lsls	r2, r2, #25
 8008df0:	f53f af44 	bmi.w	8008c7c <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8008df4:	695a      	ldr	r2, [r3, #20]
 8008df6:	06d1      	lsls	r1, r2, #27
 8008df8:	d4e8      	bmi.n	8008dcc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008dfa:	f7fe ff47 	bl	8007c8c <HAL_GetTick>
 8008dfe:	e7bf      	b.n	8008d80 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008e00:	695a      	ldr	r2, [r3, #20]
 8008e02:	0650      	lsls	r0, r2, #25
 8008e04:	d5f6      	bpl.n	8008df4 <HAL_I2C_Mem_Read+0x328>
 8008e06:	e7dd      	b.n	8008dc4 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008e08:	6823      	ldr	r3, [r4, #0]
 8008e0a:	6819      	ldr	r1, [r3, #0]
 8008e0c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8008e10:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008e12:	9003      	str	r0, [sp, #12]
 8008e14:	6959      	ldr	r1, [r3, #20]
 8008e16:	9103      	str	r1, [sp, #12]
 8008e18:	6999      	ldr	r1, [r3, #24]
 8008e1a:	9103      	str	r1, [sp, #12]
 8008e1c:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008e1e:	6819      	ldr	r1, [r3, #0]
 8008e20:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8008e24:	6019      	str	r1, [r3, #0]
 8008e26:	e6cd      	b.n	8008bc4 <HAL_I2C_Mem_Read+0xf8>

08008e28 <HAL_I2C_MasterTxCpltCallback>:
 8008e28:	4770      	bx	lr
 8008e2a:	bf00      	nop

08008e2c <HAL_I2C_MasterRxCpltCallback>:
 8008e2c:	4770      	bx	lr
 8008e2e:	bf00      	nop

08008e30 <HAL_I2C_SlaveTxCpltCallback>:
 8008e30:	4770      	bx	lr
 8008e32:	bf00      	nop

08008e34 <HAL_I2C_SlaveRxCpltCallback>:
 8008e34:	4770      	bx	lr
 8008e36:	bf00      	nop

08008e38 <HAL_I2C_AddrCallback>:
}
 8008e38:	4770      	bx	lr
 8008e3a:	bf00      	nop

08008e3c <HAL_I2C_ListenCpltCallback>:
 8008e3c:	4770      	bx	lr
 8008e3e:	bf00      	nop

08008e40 <HAL_I2C_MemTxCpltCallback>:
 8008e40:	4770      	bx	lr
 8008e42:	bf00      	nop

08008e44 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008e44:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 8008e48:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 8008e4a:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 8008e4c:	b959      	cbnz	r1, 8008e66 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8008e4e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008e50:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8008e52:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008e54:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8008e56:	d00d      	beq.n	8008e74 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 8008e58:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8008e5c:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 8008e5e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008e60:	3201      	adds	r2, #1
 8008e62:	6502      	str	r2, [r0, #80]	; 0x50
 8008e64:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 8008e66:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8008e68:	2901      	cmp	r1, #1
 8008e6a:	d009      	beq.n	8008e80 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 8008e6c:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8008e6e:	2902      	cmp	r1, #2
 8008e70:	d00e      	beq.n	8008e90 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 8008e72:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008e74:	b2d2      	uxtb	r2, r2
 8008e76:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 8008e78:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008e7a:	3202      	adds	r2, #2
 8008e7c:	6502      	str	r2, [r0, #80]	; 0x50
 8008e7e:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008e80:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8008e82:	6801      	ldr	r1, [r0, #0]
 8008e84:	b2d2      	uxtb	r2, r2
 8008e86:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 8008e88:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008e8a:	3201      	adds	r2, #1
 8008e8c:	6502      	str	r2, [r0, #80]	; 0x50
 8008e8e:	4770      	bx	lr
 8008e90:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 8008e92:	2a22      	cmp	r2, #34	; 0x22
 8008e94:	d01f      	beq.n	8008ed6 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008e96:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8008e98:	b289      	uxth	r1, r1
 8008e9a:	b9c1      	cbnz	r1, 8008ece <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008e9c:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8008e9e:	b289      	uxth	r1, r1
 8008ea0:	2900      	cmp	r1, #0
 8008ea2:	d1e6      	bne.n	8008e72 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 8008ea4:	2a21      	cmp	r2, #33	; 0x21
 8008ea6:	d1e4      	bne.n	8008e72 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8008ea8:	6802      	ldr	r2, [r0, #0]
{
 8008eaa:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8008eac:	6854      	ldr	r4, [r2, #4]
 8008eae:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 8008eb2:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008eb4:	6814      	ldr	r4, [r2, #0]
 8008eb6:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 8008eba:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 8008ebc:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 8008ebe:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 8008ec0:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8008ec4:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 8008ec8:	f7ff ffba 	bl	8008e40 <HAL_I2C_MemTxCpltCallback>
}
 8008ecc:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008ece:	2a21      	cmp	r2, #33	; 0x21
 8008ed0:	d00a      	beq.n	8008ee8 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008ed2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008ed4:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 8008ed6:	6801      	ldr	r1, [r0, #0]
 8008ed8:	680a      	ldr	r2, [r1, #0]
 8008eda:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008ede:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 8008ee0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008ee2:	3201      	adds	r2, #1
 8008ee4:	6502      	str	r2, [r0, #80]	; 0x50
 8008ee6:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008ee8:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8008eea:	6802      	ldr	r2, [r0, #0]
 8008eec:	f811 0b01 	ldrb.w	r0, [r1], #1
 8008ef0:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 8008ef2:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8008ef4:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 8008ef6:	3a01      	subs	r2, #1
 8008ef8:	b292      	uxth	r2, r2
 8008efa:	855a      	strh	r2, [r3, #42]	; 0x2a
 8008efc:	4770      	bx	lr
 8008efe:	bf00      	nop

08008f00 <HAL_I2C_MemRxCpltCallback>:
 8008f00:	4770      	bx	lr
 8008f02:	bf00      	nop

08008f04 <HAL_I2C_ErrorCallback>:
 8008f04:	4770      	bx	lr
 8008f06:	bf00      	nop

08008f08 <HAL_I2C_AbortCpltCallback>:
 8008f08:	4770      	bx	lr
 8008f0a:	bf00      	nop

08008f0c <I2C_DMAAbort>:
{
 8008f0c:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008f0e:	4b3a      	ldr	r3, [pc, #232]	; (8008ff8 <I2C_DMAAbort+0xec>)
 8008f10:	4a3a      	ldr	r2, [pc, #232]	; (8008ffc <I2C_DMAAbort+0xf0>)
 8008f12:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 8008f14:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 8008f16:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008f18:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 8008f1a:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008f1c:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 8008f20:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008f22:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008f24:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8008f28:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008f2a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8008f2e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008f32:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008f34:	9301      	str	r3, [sp, #4]
 8008f36:	e005      	b.n	8008f44 <I2C_DMAAbort+0x38>
    count--;
 8008f38:	9b01      	ldr	r3, [sp, #4]
 8008f3a:	3b01      	subs	r3, #1
 8008f3c:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8008f3e:	6813      	ldr	r3, [r2, #0]
 8008f40:	059b      	lsls	r3, r3, #22
 8008f42:	d506      	bpl.n	8008f52 <I2C_DMAAbort+0x46>
    if (count == 0U)
 8008f44:	9b01      	ldr	r3, [sp, #4]
 8008f46:	2b00      	cmp	r3, #0
 8008f48:	d1f6      	bne.n	8008f38 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8008f4a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008f4c:	f043 0320 	orr.w	r3, r3, #32
 8008f50:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 8008f52:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8008f54:	b34c      	cbz	r4, 8008faa <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 8008f56:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 8008f58:	2500      	movs	r5, #0
 8008f5a:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 8008f5c:	b1f3      	cbz	r3, 8008f9c <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008f5e:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 8008f60:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008f62:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 8008f66:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 8008f68:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8008f6a:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 8008f6c:	2400      	movs	r4, #0
 8008f6e:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 8008f70:	6813      	ldr	r3, [r2, #0]
 8008f72:	f023 0301 	bic.w	r3, r3, #1
 8008f76:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 8008f78:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008f7c:	2b60      	cmp	r3, #96	; 0x60
 8008f7e:	d02a      	beq.n	8008fd6 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8008f80:	f001 0128 	and.w	r1, r1, #40	; 0x28
 8008f84:	2928      	cmp	r1, #40	; 0x28
 8008f86:	d019      	beq.n	8008fbc <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 8008f88:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8008f8a:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8008f8c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8008f90:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 8008f94:	f7ff ffb6 	bl	8008f04 <HAL_I2C_ErrorCallback>
}
 8008f98:	b002      	add	sp, #8
 8008f9a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008f9c:	6815      	ldr	r5, [r2, #0]
 8008f9e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 8008fa2:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8008fa4:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8008fa6:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 8008fa8:	e7e2      	b.n	8008f70 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 8008faa:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8008fac:	b1f3      	cbz	r3, 8008fec <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008fae:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 8008fb0:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008fb2:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 8008fb6:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8008fb8:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 8008fba:	e7d7      	b.n	8008f6c <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 8008fbc:	6813      	ldr	r3, [r2, #0]
 8008fbe:	f043 0301 	orr.w	r3, r3, #1
 8008fc2:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008fc4:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 8008fc6:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008fc8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8008fcc:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 8008fce:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8008fd0:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 8008fd4:	e7de      	b.n	8008f94 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8008fd6:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 8008fd8:	2220      	movs	r2, #32
 8008fda:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8008fde:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8008fe2:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 8008fe4:	f7ff ff90 	bl	8008f08 <HAL_I2C_AbortCpltCallback>
}
 8008fe8:	b002      	add	sp, #8
 8008fea:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008fec:	6814      	ldr	r4, [r2, #0]
 8008fee:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 8008ff2:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 8008ff4:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 8008ff6:	e7bb      	b.n	8008f70 <I2C_DMAAbort+0x64>
 8008ff8:	20000078 	.word	0x20000078
 8008ffc:	14f8b589 	.word	0x14f8b589

08009000 <I2C_ITError>:
{
 8009000:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009002:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 8009006:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800900a:	2b10      	cmp	r3, #16
{
 800900c:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800900e:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009010:	d039      	beq.n	8009086 <I2C_ITError+0x86>
 8009012:	b2d9      	uxtb	r1, r3
 8009014:	2940      	cmp	r1, #64	; 0x40
 8009016:	d036      	beq.n	8009086 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8009018:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800901c:	2928      	cmp	r1, #40	; 0x28
 800901e:	d03d      	beq.n	800909c <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009020:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 8009022:	6859      	ldr	r1, [r3, #4]
 8009024:	0508      	lsls	r0, r1, #20
 8009026:	d407      	bmi.n	8009038 <I2C_ITError+0x38>
 8009028:	2a60      	cmp	r2, #96	; 0x60
 800902a:	d005      	beq.n	8009038 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800902c:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800902e:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8009030:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009034:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 8009038:	2200      	movs	r2, #0
 800903a:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800903c:	685a      	ldr	r2, [r3, #4]
 800903e:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8009042:	d134      	bne.n	80090ae <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 8009044:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8009048:	2960      	cmp	r1, #96	; 0x60
 800904a:	d075      	beq.n	8009138 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800904c:	695a      	ldr	r2, [r3, #20]
 800904e:	0650      	lsls	r0, r2, #25
 8009050:	d505      	bpl.n	800905e <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009052:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009054:	691b      	ldr	r3, [r3, #16]
 8009056:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 8009058:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800905a:	3301      	adds	r3, #1
 800905c:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800905e:	4620      	mov	r0, r4
 8009060:	f7ff ff50 	bl	8008f04 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 8009064:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 8009066:	0719      	lsls	r1, r3, #28
 8009068:	d004      	beq.n	8009074 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800906a:	6822      	ldr	r2, [r4, #0]
 800906c:	6853      	ldr	r3, [r2, #4]
 800906e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8009072:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 8009074:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 8009078:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800907a:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800907c:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800907e:	d501      	bpl.n	8009084 <I2C_ITError+0x84>
 8009080:	2b28      	cmp	r3, #40	; 0x28
 8009082:	d02f      	beq.n	80090e4 <I2C_ITError+0xe4>
}
 8009084:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009086:	2a22      	cmp	r2, #34	; 0x22
 8009088:	d1c6      	bne.n	8009018 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800908a:	6823      	ldr	r3, [r4, #0]
 800908c:	681a      	ldr	r2, [r3, #0]
 800908e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009092:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 8009094:	685a      	ldr	r2, [r3, #4]
 8009096:	0512      	lsls	r2, r2, #20
 8009098:	d5c8      	bpl.n	800902c <I2C_ITError+0x2c>
 800909a:	e7cd      	b.n	8009038 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800909c:	2300      	movs	r3, #0
 800909e:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 80090a0:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 80090a2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 80090a6:	685a      	ldr	r2, [r3, #4]
 80090a8:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 80090ac:	d0ca      	beq.n	8009044 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 80090ae:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 80090b0:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 80090b2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80090b6:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 80090b8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80090bc:	2b01      	cmp	r3, #1
 80090be:	d01e      	beq.n	80090fe <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 80090c0:	4b28      	ldr	r3, [pc, #160]	; (8009164 <I2C_ITError+0x164>)
 80090c2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 80090c4:	f7fe fe6c 	bl	8007da0 <HAL_DMA_Abort_IT>
 80090c8:	2800      	cmp	r0, #0
 80090ca:	d0cb      	beq.n	8009064 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 80090cc:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 80090ce:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 80090d0:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 80090d2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 80090d4:	f023 0301 	bic.w	r3, r3, #1
 80090d8:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 80090da:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 80090de:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80090e0:	4798      	blx	r3
 80090e2:	e7bf      	b.n	8009064 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 80090e4:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 80090e6:	4920      	ldr	r1, [pc, #128]	; (8009168 <I2C_ITError+0x168>)
 80090e8:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 80090ea:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 80090ec:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 80090ee:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 80090f0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 80090f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 80090f8:	f7ff fea0 	bl	8008e3c <HAL_I2C_ListenCpltCallback>
}
 80090fc:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 80090fe:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009100:	4b18      	ldr	r3, [pc, #96]	; (8009164 <I2C_ITError+0x164>)
 8009102:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 8009104:	f7fe fe4c 	bl	8007da0 <HAL_DMA_Abort_IT>
 8009108:	2800      	cmp	r0, #0
 800910a:	d0ab      	beq.n	8009064 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800910c:	6823      	ldr	r3, [r4, #0]
 800910e:	695a      	ldr	r2, [r3, #20]
 8009110:	0651      	lsls	r1, r2, #25
 8009112:	d506      	bpl.n	8009122 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009114:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009116:	691b      	ldr	r3, [r3, #16]
 8009118:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800911a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800911c:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800911e:	3201      	adds	r2, #1
 8009120:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 8009122:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8009124:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 8009126:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800912a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800912c:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800912e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8009132:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009134:	4798      	blx	r3
 8009136:	e795      	b.n	8009064 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 8009138:	2120      	movs	r1, #32
 800913a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800913e:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009140:	695a      	ldr	r2, [r3, #20]
 8009142:	0652      	lsls	r2, r2, #25
 8009144:	d506      	bpl.n	8009154 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009146:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009148:	691b      	ldr	r3, [r3, #16]
 800914a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800914c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800914e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 8009150:	3201      	adds	r2, #1
 8009152:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 8009154:	681a      	ldr	r2, [r3, #0]
 8009156:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800915a:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800915c:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800915e:	f7ff fed3 	bl	8008f08 <HAL_I2C_AbortCpltCallback>
 8009162:	e77f      	b.n	8009064 <I2C_ITError+0x64>
 8009164:	08008f0d 	.word	0x08008f0d
 8009168:	ffff0000 	.word	0xffff0000

0800916c <HAL_I2C_EV_IRQHandler>:
{
 800916c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800916e:	6803      	ldr	r3, [r0, #0]
{
 8009170:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 8009172:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 8009174:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009176:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800917a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800917e:	2910      	cmp	r1, #16
{
 8009180:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009182:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009184:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 8009188:	d022      	beq.n	80091d0 <HAL_I2C_EV_IRQHandler+0x64>
 800918a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800918e:	d01f      	beq.n	80091d0 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8009190:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8009192:	2900      	cmp	r1, #0
 8009194:	f000 8094 	beq.w	80092c0 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8009198:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800919a:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800919c:	f011 0602 	ands.w	r6, r1, #2
 80091a0:	d059      	beq.n	8009256 <HAL_I2C_EV_IRQHandler+0xea>
 80091a2:	0586      	lsls	r6, r0, #22
 80091a4:	d559      	bpl.n	800925a <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 80091a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80091a8:	b102      	cbz	r2, 80091ac <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 80091aa:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 80091ac:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 80091b0:	f002 0228 	and.w	r2, r2, #40	; 0x28
 80091b4:	2a28      	cmp	r2, #40	; 0x28
 80091b6:	f000 821e 	beq.w	80095f6 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80091ba:	2200      	movs	r2, #0
 80091bc:	920c      	str	r2, [sp, #48]	; 0x30
 80091be:	6959      	ldr	r1, [r3, #20]
 80091c0:	910c      	str	r1, [sp, #48]	; 0x30
 80091c2:	699b      	ldr	r3, [r3, #24]
 80091c4:	930c      	str	r3, [sp, #48]	; 0x30
 80091c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 80091c8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 80091cc:	b00e      	add	sp, #56	; 0x38
 80091ce:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 80091d0:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 80091d2:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 80091d4:	f011 0f01 	tst.w	r1, #1
 80091d8:	d11a      	bne.n	8009210 <HAL_I2C_EV_IRQHandler+0xa4>
 80091da:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 80091de:	d0f5      	beq.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 80091e0:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 80091e4:	d0f2      	beq.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80091e6:	070d      	lsls	r5, r1, #28
 80091e8:	d56d      	bpl.n	80092c6 <HAL_I2C_EV_IRQHandler+0x15a>
 80091ea:	0585      	lsls	r5, r0, #22
 80091ec:	f140 8083 	bpl.w	80092f6 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 80091f0:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 80091f2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80091f4:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 80091f6:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 80091f8:	2900      	cmp	r1, #0
 80091fa:	f000 81e3 	beq.w	80095c4 <HAL_I2C_EV_IRQHandler+0x458>
 80091fe:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8009200:	2a00      	cmp	r2, #0
 8009202:	f000 81df 	beq.w	80095c4 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 8009206:	685a      	ldr	r2, [r3, #4]
 8009208:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800920c:	605a      	str	r2, [r3, #4]
 800920e:	e7dd      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009210:	0585      	lsls	r5, r0, #22
 8009212:	d56e      	bpl.n	80092f2 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 8009214:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009216:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800921a:	f000 81e9 	beq.w	80095f0 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800921e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009220:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 8009224:	bf04      	itt	eq
 8009226:	2208      	moveq	r2, #8
 8009228:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800922a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800922e:	2a40      	cmp	r2, #64	; 0x40
 8009230:	f000 81d7 	beq.w	80095e2 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8009234:	6922      	ldr	r2, [r4, #16]
 8009236:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800923a:	f000 81b2 	beq.w	80095a2 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800923e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009240:	2a00      	cmp	r2, #0
 8009242:	f040 81ef 	bne.w	8009624 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 8009246:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8009248:	11d2      	asrs	r2, r2, #7
 800924a:	f002 0206 	and.w	r2, r2, #6
 800924e:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 8009252:	611a      	str	r2, [r3, #16]
 8009254:	e7ba      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009256:	06cd      	lsls	r5, r1, #27
 8009258:	d47c      	bmi.n	8009354 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800925a:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800925e:	2a21      	cmp	r2, #33	; 0x21
 8009260:	f000 80f5 	beq.w	800944e <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8009264:	064e      	lsls	r6, r1, #25
 8009266:	f140 8132 	bpl.w	80094ce <HAL_I2C_EV_IRQHandler+0x362>
 800926a:	0545      	lsls	r5, r0, #21
 800926c:	f140 812f 	bpl.w	80094ce <HAL_I2C_EV_IRQHandler+0x362>
 8009270:	0749      	lsls	r1, r1, #29
 8009272:	f100 812f 	bmi.w	80094d4 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009276:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800927a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800927c:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800927e:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 8009280:	2a00      	cmp	r2, #0
 8009282:	d0a3      	beq.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009284:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009286:	691b      	ldr	r3, [r3, #16]
 8009288:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800928a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800928c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800928e:	3b01      	subs	r3, #1
 8009290:	b29b      	uxth	r3, r3
 8009292:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009294:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009296:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009298:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800929a:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800929c:	2b00      	cmp	r3, #0
 800929e:	d195      	bne.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 80092a0:	292a      	cmp	r1, #42	; 0x2a
 80092a2:	d193      	bne.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 80092a4:	6822      	ldr	r2, [r4, #0]
 80092a6:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 80092a8:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 80092aa:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 80092ac:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80092b0:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 80092b2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 80092b4:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 80092b6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 80092ba:	f7ff fdbb 	bl	8008e34 <HAL_I2C_SlaveRxCpltCallback>
 80092be:	e785      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 80092c0:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 80092c2:	6959      	ldr	r1, [r3, #20]
 80092c4:	e76a      	b.n	800919c <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80092c6:	078d      	lsls	r5, r1, #30
 80092c8:	d515      	bpl.n	80092f6 <HAL_I2C_EV_IRQHandler+0x18a>
 80092ca:	0585      	lsls	r5, r0, #22
 80092cc:	d513      	bpl.n	80092f6 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 80092ce:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 80092d2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 80092d4:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 80092d6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 80092da:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 80092dc:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 80092de:	f000 81b3 	beq.w	8009648 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80092e2:	2200      	movs	r2, #0
 80092e4:	920a      	str	r2, [sp, #40]	; 0x28
 80092e6:	695a      	ldr	r2, [r3, #20]
 80092e8:	920a      	str	r2, [sp, #40]	; 0x28
 80092ea:	699b      	ldr	r3, [r3, #24]
 80092ec:	930a      	str	r3, [sp, #40]	; 0x28
 80092ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80092f0:	e76c      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80092f2:	070d      	lsls	r5, r1, #28
 80092f4:	d5e7      	bpl.n	80092c6 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 80092f6:	0776      	lsls	r6, r6, #29
 80092f8:	f140 80f5 	bpl.w	80094e6 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 80092fc:	685d      	ldr	r5, [r3, #4]
 80092fe:	052d      	lsls	r5, r5, #20
 8009300:	f53f af64 	bmi.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8009304:	060e      	lsls	r6, r1, #24
 8009306:	f140 8115 	bpl.w	8009534 <HAL_I2C_EV_IRQHandler+0x3c8>
 800930a:	0545      	lsls	r5, r0, #21
 800930c:	f140 8112 	bpl.w	8009534 <HAL_I2C_EV_IRQHandler+0x3c8>
 8009310:	074e      	lsls	r6, r1, #29
 8009312:	f100 8112 	bmi.w	800953a <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009316:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800931a:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800931c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 8009320:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009322:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009324:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009326:	2800      	cmp	r0, #0
 8009328:	f040 8235 	bne.w	8009796 <HAL_I2C_EV_IRQHandler+0x62a>
 800932c:	2a21      	cmp	r2, #33	; 0x21
 800932e:	f000 8347 	beq.w	80099c0 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 8009332:	2940      	cmp	r1, #64	; 0x40
 8009334:	f47f af4a 	bne.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 8009338:	2a22      	cmp	r2, #34	; 0x22
 800933a:	f47f af47 	bne.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800933e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009340:	b292      	uxth	r2, r2
 8009342:	2a00      	cmp	r2, #0
 8009344:	f000 8268 	beq.w	8009818 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009348:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800934c:	2a40      	cmp	r2, #64	; 0x40
 800934e:	f040 80b4 	bne.w	80094ba <HAL_I2C_EV_IRQHandler+0x34e>
 8009352:	e0fc      	b.n	800954e <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009354:	0585      	lsls	r5, r0, #22
 8009356:	d580      	bpl.n	800925a <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009358:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800935c:	685a      	ldr	r2, [r3, #4]
 800935e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8009362:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 8009364:	960d      	str	r6, [sp, #52]	; 0x34
 8009366:	695a      	ldr	r2, [r3, #20]
 8009368:	920d      	str	r2, [sp, #52]	; 0x34
 800936a:	681a      	ldr	r2, [r3, #0]
 800936c:	f042 0201 	orr.w	r2, r2, #1
 8009370:	601a      	str	r2, [r3, #0]
 8009372:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009374:	681a      	ldr	r2, [r3, #0]
 8009376:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800937a:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800937c:	685a      	ldr	r2, [r3, #4]
 800937e:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009380:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009382:	d521      	bpl.n	80093c8 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009384:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 8009388:	2a22      	cmp	r2, #34	; 0x22
 800938a:	f000 817a 	beq.w	8009682 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800938e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009390:	6802      	ldr	r2, [r0, #0]
 8009392:	6852      	ldr	r2, [r2, #4]
 8009394:	b292      	uxth	r2, r2
 8009396:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 8009398:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800939a:	b292      	uxth	r2, r2
 800939c:	b11a      	cbz	r2, 80093a6 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800939e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80093a0:	f042 0204 	orr.w	r2, r2, #4
 80093a4:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 80093a6:	685a      	ldr	r2, [r3, #4]
 80093a8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80093ac:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 80093ae:	f7fe fd09 	bl	8007dc4 <HAL_DMA_GetState>
 80093b2:	2801      	cmp	r0, #1
 80093b4:	d008      	beq.n	80093c8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 80093b6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80093b8:	4b99      	ldr	r3, [pc, #612]	; (8009620 <HAL_I2C_EV_IRQHandler+0x4b4>)
 80093ba:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 80093bc:	f7fe fcf0 	bl	8007da0 <HAL_DMA_Abort_IT>
 80093c0:	b110      	cbz	r0, 80093c8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 80093c2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80093c4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80093c6:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 80093c8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80093ca:	b29b      	uxth	r3, r3
 80093cc:	b313      	cbz	r3, 8009414 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80093ce:	6823      	ldr	r3, [r4, #0]
 80093d0:	695a      	ldr	r2, [r3, #20]
 80093d2:	0752      	lsls	r2, r2, #29
 80093d4:	d50a      	bpl.n	80093ec <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80093d6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80093d8:	691b      	ldr	r3, [r3, #16]
 80093da:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 80093dc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 80093de:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80093e0:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 80093e2:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 80093e4:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 80093e6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 80093e8:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80093ea:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 80093ec:	695a      	ldr	r2, [r3, #20]
 80093ee:	0656      	lsls	r6, r2, #25
 80093f0:	d509      	bpl.n	8009406 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80093f2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80093f4:	691b      	ldr	r3, [r3, #16]
 80093f6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 80093f8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 80093fa:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80093fc:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 80093fe:	3201      	adds	r2, #1
      hi2c->XferCount--;
 8009400:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 8009402:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009404:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 8009406:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009408:	b29b      	uxth	r3, r3
 800940a:	b11b      	cbz	r3, 8009414 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800940c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800940e:	f043 0304 	orr.w	r3, r3, #4
 8009412:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8009414:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009416:	2b00      	cmp	r3, #0
 8009418:	f040 80dd 	bne.w	80095d6 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800941c:	2d2a      	cmp	r5, #42	; 0x2a
 800941e:	f000 8151 	beq.w	80096c4 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 8009422:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009426:	2b28      	cmp	r3, #40	; 0x28
 8009428:	f000 8154 	beq.w	80096d4 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800942c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800942e:	2b22      	cmp	r3, #34	; 0x22
 8009430:	d002      	beq.n	8009438 <HAL_I2C_EV_IRQHandler+0x2cc>
 8009432:	2d22      	cmp	r5, #34	; 0x22
 8009434:	f47f aeca 	bne.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 8009438:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800943a:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800943c:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800943e:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 8009440:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8009444:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009448:	f7ff fcf4 	bl	8008e34 <HAL_I2C_SlaveRxCpltCallback>
 800944c:	e6be      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800944e:	060d      	lsls	r5, r1, #24
 8009450:	d528      	bpl.n	80094a4 <HAL_I2C_EV_IRQHandler+0x338>
 8009452:	0546      	lsls	r6, r0, #21
 8009454:	d526      	bpl.n	80094a4 <HAL_I2C_EV_IRQHandler+0x338>
 8009456:	074d      	lsls	r5, r1, #29
 8009458:	d427      	bmi.n	80094aa <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800945a:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800945e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 8009460:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009462:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 8009464:	2900      	cmp	r1, #0
 8009466:	f43f aeb1 	beq.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800946a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800946c:	f811 5b01 	ldrb.w	r5, [r1], #1
 8009470:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 8009472:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009474:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 8009476:	3901      	subs	r1, #1
 8009478:	b289      	uxth	r1, r1
 800947a:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800947c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800947e:	b289      	uxth	r1, r1
 8009480:	2900      	cmp	r1, #0
 8009482:	f47f aea3 	bne.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 8009486:	2829      	cmp	r0, #41	; 0x29
 8009488:	f47f aea0 	bne.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800948c:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800948e:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009490:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009494:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 8009496:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 8009498:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800949a:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800949e:	f7ff fcc7 	bl	8008e30 <HAL_I2C_SlaveTxCpltCallback>
 80094a2:	e693      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80094a4:	0749      	lsls	r1, r1, #29
 80094a6:	f57f ae91 	bpl.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 80094aa:	0582      	lsls	r2, r0, #22
 80094ac:	f57f ae8e 	bpl.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 80094b0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80094b2:	b292      	uxth	r2, r2
 80094b4:	2a00      	cmp	r2, #0
 80094b6:	f43f ae89 	beq.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 80094ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80094bc:	f812 1b01 	ldrb.w	r1, [r2], #1
 80094c0:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 80094c2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 80094c4:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 80094c6:	3b01      	subs	r3, #1
 80094c8:	b29b      	uxth	r3, r3
 80094ca:	8563      	strh	r3, [r4, #42]	; 0x2a
 80094cc:	e67e      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80094ce:	074a      	lsls	r2, r1, #29
 80094d0:	f57f ae7c 	bpl.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 80094d4:	0586      	lsls	r6, r0, #22
 80094d6:	f57f ae79 	bpl.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 80094da:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80094dc:	b292      	uxth	r2, r2
 80094de:	2a00      	cmp	r2, #0
 80094e0:	f43f ae74 	beq.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 80094e4:	e01b      	b.n	800951e <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 80094e6:	685a      	ldr	r2, [r3, #4]
 80094e8:	0512      	lsls	r2, r2, #20
 80094ea:	f53f ae6f 	bmi.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 80094ee:	064e      	lsls	r6, r1, #25
 80094f0:	d433      	bmi.n	800955a <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80094f2:	0749      	lsls	r1, r1, #29
 80094f4:	f57f ae6a 	bpl.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 80094f8:	0582      	lsls	r2, r0, #22
 80094fa:	f57f ae67 	bpl.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 80094fe:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 8009500:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009502:	b292      	uxth	r2, r2
 8009504:	2a04      	cmp	r2, #4
 8009506:	f000 8113 	beq.w	8009730 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800950a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800950c:	b292      	uxth	r2, r2
 800950e:	2a03      	cmp	r2, #3
 8009510:	f000 8153 	beq.w	80097ba <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 8009514:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009516:	b292      	uxth	r2, r2
 8009518:	2a02      	cmp	r2, #2
 800951a:	f000 8182 	beq.w	8009822 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800951e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009520:	691b      	ldr	r3, [r3, #16]
 8009522:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 8009524:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009526:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009528:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800952a:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800952c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800952e:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009530:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 8009532:	e64b      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009534:	074d      	lsls	r5, r1, #29
 8009536:	f57f ae49 	bpl.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 800953a:	0581      	lsls	r1, r0, #22
 800953c:	f57f ae46 	bpl.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 8009540:	2a21      	cmp	r2, #33	; 0x21
 8009542:	f000 80fd 	beq.w	8009740 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 8009546:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800954a:	f47f ae3f 	bne.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800954e:	4620      	mov	r0, r4
}
 8009550:	b00e      	add	sp, #56	; 0x38
 8009552:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 8009556:	f7ff bc75 	b.w	8008e44 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800955a:	0545      	lsls	r5, r0, #21
 800955c:	d5c9      	bpl.n	80094f2 <HAL_I2C_EV_IRQHandler+0x386>
 800955e:	f011 0104 	ands.w	r1, r1, #4
 8009562:	d1c9      	bne.n	80094f8 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8009564:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8009568:	2a22      	cmp	r2, #34	; 0x22
 800956a:	f47f ae2f 	bne.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800956e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009570:	b292      	uxth	r2, r2
    if (tmp > 3U)
 8009572:	2a03      	cmp	r2, #3
 8009574:	f240 81ec 	bls.w	8009950 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009578:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800957a:	691b      	ldr	r3, [r3, #16]
 800957c:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800957e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009580:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009582:	3b01      	subs	r3, #1
 8009584:	b29b      	uxth	r3, r3
 8009586:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 8009588:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800958a:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800958c:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800958e:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 8009590:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 8009592:	f47f ae1b 	bne.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009596:	6822      	ldr	r2, [r4, #0]
 8009598:	6853      	ldr	r3, [r2, #4]
 800959a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800959e:	6053      	str	r3, [r2, #4]
 80095a0:	e614      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 80095a2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 80095a6:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 80095a8:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 80095aa:	bf16      	itet	ne
 80095ac:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 80095b0:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 80095b4:	b2d2      	uxtbne	r2, r2
 80095b6:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 80095b8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80095ba:	b11a      	cbz	r2, 80095c4 <HAL_I2C_EV_IRQHandler+0x458>
 80095bc:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80095be:	2a00      	cmp	r2, #0
 80095c0:	f47f ae21 	bne.w	8009206 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 80095c4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80095c6:	2a00      	cmp	r2, #0
 80095c8:	f43f ae00 	beq.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 80095cc:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80095ce:	2a00      	cmp	r2, #0
 80095d0:	f47f ae19 	bne.w	8009206 <HAL_I2C_EV_IRQHandler+0x9a>
 80095d4:	e5fa      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 80095d6:	4620      	mov	r0, r4
}
 80095d8:	b00e      	add	sp, #56	; 0x38
 80095da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 80095de:	f7ff bd0f 	b.w	8009000 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 80095e2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80095e4:	bb52      	cbnz	r2, 800963c <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 80095e6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80095e8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 80095ec:	611a      	str	r2, [r3, #16]
 80095ee:	e5ed      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 80095f0:	2201      	movs	r2, #1
 80095f2:	62e2      	str	r2, [r4, #44]	; 0x2c
 80095f4:	e619      	b.n	800922a <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 80095f6:	685a      	ldr	r2, [r3, #4]
 80095f8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80095fc:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 80095fe:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 8009600:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 8009604:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 8009608:	bf54      	ite	pl
 800960a:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800960c:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800960e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 8009612:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 8009616:	4620      	mov	r0, r4
 8009618:	f7ff fc0e 	bl	8008e38 <HAL_I2C_AddrCallback>
 800961c:	e5d6      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 800961e:	bf00      	nop
 8009620:	08008f0d 	.word	0x08008f0d
      else if (hi2c->EventCount == 1U)
 8009624:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009626:	2a01      	cmp	r2, #1
 8009628:	f47f add0 	bne.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800962c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800962e:	11d2      	asrs	r2, r2, #7
 8009630:	f002 0206 	and.w	r2, r2, #6
 8009634:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 8009638:	611a      	str	r2, [r3, #16]
 800963a:	e5c7      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800963c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800963e:	f042 0201 	orr.w	r2, r2, #1
 8009642:	b2d2      	uxtb	r2, r2
 8009644:	611a      	str	r2, [r3, #16]
 8009646:	e5c1      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 8009648:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800964a:	b911      	cbnz	r1, 8009652 <HAL_I2C_EV_IRQHandler+0x4e6>
 800964c:	2a40      	cmp	r2, #64	; 0x40
 800964e:	f000 809b 	beq.w	8009788 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 8009652:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009654:	b922      	cbnz	r2, 8009660 <HAL_I2C_EV_IRQHandler+0x4f4>
 8009656:	6921      	ldr	r1, [r4, #16]
 8009658:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800965c:	f000 809f 	beq.w	800979e <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 8009660:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009662:	b292      	uxth	r2, r2
 8009664:	2a00      	cmp	r2, #0
 8009666:	d142      	bne.n	80096ee <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009668:	9203      	str	r2, [sp, #12]
 800966a:	695a      	ldr	r2, [r3, #20]
 800966c:	9203      	str	r2, [sp, #12]
 800966e:	699a      	ldr	r2, [r3, #24]
 8009670:	9203      	str	r2, [sp, #12]
 8009672:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009674:	681a      	ldr	r2, [r3, #0]
 8009676:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800967a:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800967c:	2300      	movs	r3, #0
 800967e:	6523      	str	r3, [r4, #80]	; 0x50
 8009680:	e5a4      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 8009682:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009684:	6802      	ldr	r2, [r0, #0]
 8009686:	6852      	ldr	r2, [r2, #4]
 8009688:	b292      	uxth	r2, r2
 800968a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800968c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800968e:	b292      	uxth	r2, r2
 8009690:	b11a      	cbz	r2, 800969a <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8009692:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009694:	f042 0204 	orr.w	r2, r2, #4
 8009698:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800969a:	685a      	ldr	r2, [r3, #4]
 800969c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80096a0:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 80096a2:	f7fe fb8f 	bl	8007dc4 <HAL_DMA_GetState>
 80096a6:	2801      	cmp	r0, #1
 80096a8:	f43f ae8e 	beq.w	80093c8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 80096ac:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80096ae:	4b98      	ldr	r3, [pc, #608]	; (8009910 <HAL_I2C_EV_IRQHandler+0x7a4>)
 80096b0:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 80096b2:	f7fe fb75 	bl	8007da0 <HAL_DMA_Abort_IT>
 80096b6:	2800      	cmp	r0, #0
 80096b8:	f43f ae86 	beq.w	80093c8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 80096bc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80096be:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80096c0:	4798      	blx	r3
 80096c2:	e681      	b.n	80093c8 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 80096c4:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 80096c6:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 80096c8:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 80096ca:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 80096ce:	f7ff fbb1 	bl	8008e34 <HAL_I2C_SlaveRxCpltCallback>
 80096d2:	e6a6      	b.n	8009422 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 80096d4:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80096d6:	498f      	ldr	r1, [pc, #572]	; (8009914 <HAL_I2C_EV_IRQHandler+0x7a8>)
 80096d8:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 80096da:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 80096dc:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 80096de:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 80096e0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80096e4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 80096e8:	f7ff fba8 	bl	8008e3c <HAL_I2C_ListenCpltCallback>
 80096ec:	e56e      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 80096ee:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80096f0:	b292      	uxth	r2, r2
 80096f2:	2a01      	cmp	r2, #1
 80096f4:	d070      	beq.n	80097d8 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 80096f6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80096f8:	b292      	uxth	r2, r2
 80096fa:	2a02      	cmp	r2, #2
 80096fc:	f000 80d6 	beq.w	80098ac <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009700:	681a      	ldr	r2, [r3, #0]
 8009702:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009706:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 8009708:	685a      	ldr	r2, [r3, #4]
 800970a:	0511      	lsls	r1, r2, #20
 800970c:	d508      	bpl.n	8009720 <HAL_I2C_EV_IRQHandler+0x5b4>
 800970e:	2820      	cmp	r0, #32
 8009710:	f200 80f8 	bhi.w	8009904 <HAL_I2C_EV_IRQHandler+0x798>
 8009714:	2807      	cmp	r0, #7
 8009716:	f200 80ea 	bhi.w	80098ee <HAL_I2C_EV_IRQHandler+0x782>
 800971a:	2801      	cmp	r0, #1
 800971c:	f000 80ed 	beq.w	80098fa <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009720:	2200      	movs	r2, #0
 8009722:	9209      	str	r2, [sp, #36]	; 0x24
 8009724:	695a      	ldr	r2, [r3, #20]
 8009726:	9209      	str	r2, [sp, #36]	; 0x24
 8009728:	699b      	ldr	r3, [r3, #24]
 800972a:	9309      	str	r3, [sp, #36]	; 0x24
 800972c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800972e:	e7a5      	b.n	800967c <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009730:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009732:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009734:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009738:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800973a:	691b      	ldr	r3, [r3, #16]
 800973c:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800973e:	e6f1      	b.n	8009524 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8009740:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 8009742:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8009746:	2a21      	cmp	r2, #33	; 0x21
 8009748:	f47f ad40 	bne.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800974c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800974e:	b292      	uxth	r2, r2
 8009750:	2a00      	cmp	r2, #0
 8009752:	f47f aeb2 	bne.w	80094ba <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 8009756:	2908      	cmp	r1, #8
 8009758:	f000 80e2 	beq.w	8009920 <HAL_I2C_EV_IRQHandler+0x7b4>
 800975c:	2920      	cmp	r1, #32
 800975e:	f000 80df 	beq.w	8009920 <HAL_I2C_EV_IRQHandler+0x7b4>
 8009762:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 8009766:	f000 80db 	beq.w	8009920 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800976a:	6859      	ldr	r1, [r3, #4]
 800976c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 8009770:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 8009772:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 8009774:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 8009776:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8009778:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800977c:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800977e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 8009782:	f7ff fb51 	bl	8008e28 <HAL_I2C_MasterTxCpltCallback>
 8009786:	e521      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009788:	9101      	str	r1, [sp, #4]
 800978a:	695a      	ldr	r2, [r3, #20]
 800978c:	9201      	str	r2, [sp, #4]
 800978e:	699b      	ldr	r3, [r3, #24]
 8009790:	9301      	str	r3, [sp, #4]
 8009792:	9b01      	ldr	r3, [sp, #4]
 8009794:	e51a      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 8009796:	2a21      	cmp	r2, #33	; 0x21
 8009798:	f43f add1 	beq.w	800933e <HAL_I2C_EV_IRQHandler+0x1d2>
 800979c:	e5c9      	b.n	8009332 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800979e:	9202      	str	r2, [sp, #8]
 80097a0:	695a      	ldr	r2, [r3, #20]
 80097a2:	9202      	str	r2, [sp, #8]
 80097a4:	699a      	ldr	r2, [r3, #24]
 80097a6:	9202      	str	r2, [sp, #8]
 80097a8:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097aa:	681a      	ldr	r2, [r3, #0]
 80097ac:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80097b0:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 80097b2:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80097b4:	3301      	adds	r3, #1
 80097b6:	6523      	str	r3, [r4, #80]	; 0x50
 80097b8:	e508      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 80097ba:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 80097bc:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 80097be:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80097c2:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 80097c4:	f43f aeab 	beq.w	800951e <HAL_I2C_EV_IRQHandler+0x3b2>
 80097c8:	2902      	cmp	r1, #2
 80097ca:	f43f aea8 	beq.w	800951e <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80097ce:	681a      	ldr	r2, [r3, #0]
 80097d0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80097d4:	601a      	str	r2, [r3, #0]
 80097d6:	e6a2      	b.n	800951e <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 80097d8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 80097dc:	f000 811b 	beq.w	8009a16 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 80097e0:	2808      	cmp	r0, #8
 80097e2:	f000 8108 	beq.w	80099f6 <HAL_I2C_EV_IRQHandler+0x88a>
 80097e6:	2820      	cmp	r0, #32
 80097e8:	f000 8105 	beq.w	80099f6 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 80097ec:	2d12      	cmp	r5, #18
 80097ee:	f000 80ff 	beq.w	80099f0 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 80097f2:	2810      	cmp	r0, #16
 80097f4:	d804      	bhi.n	8009800 <HAL_I2C_EV_IRQHandler+0x694>
 80097f6:	4a48      	ldr	r2, [pc, #288]	; (8009918 <HAL_I2C_EV_IRQHandler+0x7ac>)
 80097f8:	40c2      	lsrs	r2, r0
 80097fa:	07d1      	lsls	r1, r2, #31
 80097fc:	f100 814c 	bmi.w	8009a98 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009800:	681a      	ldr	r2, [r3, #0]
 8009802:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009806:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009808:	2200      	movs	r2, #0
 800980a:	9206      	str	r2, [sp, #24]
 800980c:	695a      	ldr	r2, [r3, #20]
 800980e:	9206      	str	r2, [sp, #24]
 8009810:	699b      	ldr	r3, [r3, #24]
 8009812:	9306      	str	r3, [sp, #24]
 8009814:	9b06      	ldr	r3, [sp, #24]
 8009816:	e731      	b.n	800967c <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009818:	685a      	ldr	r2, [r3, #4]
 800981a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800981e:	605a      	str	r2, [r3, #4]
 8009820:	e4d4      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 8009822:	3901      	subs	r1, #1
 8009824:	290f      	cmp	r1, #15
 8009826:	d809      	bhi.n	800983c <HAL_I2C_EV_IRQHandler+0x6d0>
 8009828:	e8df f001 	tbb	[pc, r1]
 800982c:	3608363b 	.word	0x3608363b
 8009830:	08080808 	.word	0x08080808
 8009834:	08080808 	.word	0x08080808
 8009838:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800983c:	681a      	ldr	r2, [r3, #0]
 800983e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009842:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009844:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009846:	691b      	ldr	r3, [r3, #16]
 8009848:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800984a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800984c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800984e:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 8009850:	3b01      	subs	r3, #1
 8009852:	b29b      	uxth	r3, r3
 8009854:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009856:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 8009858:	1c51      	adds	r1, r2, #1
 800985a:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800985c:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800985e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 8009860:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 8009862:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009864:	3b01      	subs	r3, #1
 8009866:	b29b      	uxth	r3, r3
 8009868:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800986a:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800986c:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800986e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 8009872:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 8009874:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 8009876:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8009878:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800987c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 8009880:	2b40      	cmp	r3, #64	; 0x40
 8009882:	f000 80f5 	beq.w	8009a70 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009886:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 8009888:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800988a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800988e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 8009890:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 8009892:	f7ff facb 	bl	8008e2c <HAL_I2C_MasterRxCpltCallback>
 8009896:	e499      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009898:	681a      	ldr	r2, [r3, #0]
 800989a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800989e:	601a      	str	r2, [r3, #0]
 80098a0:	e7d0      	b.n	8009844 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80098a2:	681a      	ldr	r2, [r3, #0]
 80098a4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80098a8:	601a      	str	r2, [r3, #0]
 80098aa:	e7cb      	b.n	8009844 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 80098ac:	2810      	cmp	r0, #16
 80098ae:	d804      	bhi.n	80098ba <HAL_I2C_EV_IRQHandler+0x74e>
 80098b0:	4a19      	ldr	r2, [pc, #100]	; (8009918 <HAL_I2C_EV_IRQHandler+0x7ac>)
 80098b2:	40c2      	lsrs	r2, r0
 80098b4:	07d2      	lsls	r2, r2, #31
 80098b6:	f100 80c2 	bmi.w	8009a3e <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80098ba:	681a      	ldr	r2, [r3, #0]
 80098bc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80098c0:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80098c2:	681a      	ldr	r2, [r3, #0]
 80098c4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80098c8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 80098ca:	685a      	ldr	r2, [r3, #4]
 80098cc:	0516      	lsls	r6, r2, #20
 80098ce:	d506      	bpl.n	80098de <HAL_I2C_EV_IRQHandler+0x772>
 80098d0:	2820      	cmp	r0, #32
 80098d2:	f240 80bc 	bls.w	8009a4e <HAL_I2C_EV_IRQHandler+0x8e2>
 80098d6:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 80098da:	f000 80bd 	beq.w	8009a58 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80098de:	2200      	movs	r2, #0
 80098e0:	9208      	str	r2, [sp, #32]
 80098e2:	695a      	ldr	r2, [r3, #20]
 80098e4:	9208      	str	r2, [sp, #32]
 80098e6:	699b      	ldr	r3, [r3, #24]
 80098e8:	9308      	str	r3, [sp, #32]
 80098ea:	9b08      	ldr	r3, [sp, #32]
 80098ec:	e6c6      	b.n	800967c <HAL_I2C_EV_IRQHandler+0x510>
 80098ee:	4a0b      	ldr	r2, [pc, #44]	; (800991c <HAL_I2C_EV_IRQHandler+0x7b0>)
 80098f0:	3808      	subs	r0, #8
 80098f2:	40c2      	lsrs	r2, r0
 80098f4:	07d2      	lsls	r2, r2, #31
 80098f6:	f57f af13 	bpl.w	8009720 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 80098fa:	685a      	ldr	r2, [r3, #4]
 80098fc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009900:	605a      	str	r2, [r3, #4]
 8009902:	e70d      	b.n	8009720 <HAL_I2C_EV_IRQHandler+0x5b4>
 8009904:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 8009908:	f47f af0a 	bne.w	8009720 <HAL_I2C_EV_IRQHandler+0x5b4>
 800990c:	e7f5      	b.n	80098fa <HAL_I2C_EV_IRQHandler+0x78e>
 800990e:	bf00      	nop
 8009910:	08008f0d 	.word	0x08008f0d
 8009914:	ffff0000 	.word	0xffff0000
 8009918:	00010014 	.word	0x00010014
 800991c:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009920:	6859      	ldr	r1, [r3, #4]
 8009922:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 8009926:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009928:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800992a:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800992c:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800992e:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8009932:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 8009934:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 8009936:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800993a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800993e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009942:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 8009944:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009946:	f47f af1c 	bne.w	8009782 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800994a:	f7ff fa79 	bl	8008e40 <HAL_I2C_MemTxCpltCallback>
 800994e:	e43d      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 8009950:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8009952:	2802      	cmp	r0, #2
 8009954:	f43f af60 	beq.w	8009818 <HAL_I2C_EV_IRQHandler+0x6ac>
 8009958:	2a01      	cmp	r2, #1
 800995a:	f63f af5d 	bhi.w	8009818 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800995e:	4a62      	ldr	r2, [pc, #392]	; (8009ae8 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 8009960:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 8009962:	6812      	ldr	r2, [r2, #0]
 8009964:	f246 10a8 	movw	r0, #25000	; 0x61a8
 8009968:	fbb2 f2f0 	udiv	r2, r2, r0
 800996c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8009970:	920b      	str	r2, [sp, #44]	; 0x2c
 8009972:	e004      	b.n	800997e <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8009974:	681a      	ldr	r2, [r3, #0]
 8009976:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800997a:	f000 8092 	beq.w	8009aa2 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800997e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009980:	3a01      	subs	r2, #1
 8009982:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 8009984:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009986:	2900      	cmp	r1, #0
 8009988:	d1f4      	bne.n	8009974 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800998a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800998c:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800998e:	f042 0220 	orr.w	r2, r2, #32
 8009992:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009994:	685a      	ldr	r2, [r3, #4]
 8009996:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800999a:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800999c:	691b      	ldr	r3, [r3, #16]
 800999e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 80099a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 80099a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80099a4:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 80099a6:	3201      	adds	r2, #1
        hi2c->XferCount--;
 80099a8:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 80099aa:	2020      	movs	r0, #32
        hi2c->XferCount--;
 80099ac:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 80099ae:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 80099b0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 80099b4:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80099b6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 80099ba:	f7ff faa3 	bl	8008f04 <HAL_I2C_ErrorCallback>
 80099be:	e405      	b.n	80091cc <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 80099c0:	2d08      	cmp	r5, #8
 80099c2:	d0ad      	beq.n	8009920 <HAL_I2C_EV_IRQHandler+0x7b4>
 80099c4:	2d20      	cmp	r5, #32
 80099c6:	d0ab      	beq.n	8009920 <HAL_I2C_EV_IRQHandler+0x7b4>
 80099c8:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 80099cc:	d0a8      	beq.n	8009920 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 80099ce:	685a      	ldr	r2, [r3, #4]
 80099d0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80099d4:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 80099d6:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80099d8:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 80099da:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 80099dc:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80099de:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 80099e2:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 80099e4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 80099e8:	f7ff fa1e 	bl	8008e28 <HAL_I2C_MasterTxCpltCallback>
 80099ec:	f7ff bbee 	b.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 80099f0:	2801      	cmp	r0, #1
 80099f2:	f43f af05 	beq.w	8009800 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80099f6:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80099f8:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80099fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80099fe:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009a00:	9107      	str	r1, [sp, #28]
 8009a02:	695a      	ldr	r2, [r3, #20]
 8009a04:	9207      	str	r2, [sp, #28]
 8009a06:	699a      	ldr	r2, [r3, #24]
 8009a08:	9207      	str	r2, [sp, #28]
 8009a0a:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009a0c:	681a      	ldr	r2, [r3, #0]
 8009a0e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009a12:	601a      	str	r2, [r3, #0]
 8009a14:	e632      	b.n	800967c <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a16:	681a      	ldr	r2, [r3, #0]
 8009a18:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009a1c:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009a1e:	685a      	ldr	r2, [r3, #4]
 8009a20:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8009a24:	d02d      	beq.n	8009a82 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a26:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009a28:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a2a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009a2e:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009a30:	9104      	str	r1, [sp, #16]
 8009a32:	695a      	ldr	r2, [r3, #20]
 8009a34:	9204      	str	r2, [sp, #16]
 8009a36:	699b      	ldr	r3, [r3, #24]
 8009a38:	9304      	str	r3, [sp, #16]
 8009a3a:	9b04      	ldr	r3, [sp, #16]
 8009a3c:	e61e      	b.n	800967c <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a3e:	681a      	ldr	r2, [r3, #0]
 8009a40:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009a44:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 8009a46:	685a      	ldr	r2, [r3, #4]
 8009a48:	0515      	lsls	r5, r2, #20
 8009a4a:	f57f af48 	bpl.w	80098de <HAL_I2C_EV_IRQHandler+0x772>
 8009a4e:	2807      	cmp	r0, #7
 8009a50:	d807      	bhi.n	8009a62 <HAL_I2C_EV_IRQHandler+0x8f6>
 8009a52:	2801      	cmp	r0, #1
 8009a54:	f47f af43 	bne.w	80098de <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 8009a58:	685a      	ldr	r2, [r3, #4]
 8009a5a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009a5e:	605a      	str	r2, [r3, #4]
 8009a60:	e73d      	b.n	80098de <HAL_I2C_EV_IRQHandler+0x772>
 8009a62:	4a22      	ldr	r2, [pc, #136]	; (8009aec <HAL_I2C_EV_IRQHandler+0x980>)
 8009a64:	3808      	subs	r0, #8
 8009a66:	40c2      	lsrs	r2, r0
 8009a68:	07d0      	lsls	r0, r2, #31
 8009a6a:	f57f af38 	bpl.w	80098de <HAL_I2C_EV_IRQHandler+0x772>
 8009a6e:	e7f3      	b.n	8009a58 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009a70:	2300      	movs	r3, #0
 8009a72:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 8009a76:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 8009a78:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 8009a7a:	f7ff fa41 	bl	8008f00 <HAL_I2C_MemRxCpltCallback>
 8009a7e:	f7ff bba5 	b.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009a82:	9205      	str	r2, [sp, #20]
 8009a84:	695a      	ldr	r2, [r3, #20]
 8009a86:	9205      	str	r2, [sp, #20]
 8009a88:	699a      	ldr	r2, [r3, #24]
 8009a8a:	9205      	str	r2, [sp, #20]
 8009a8c:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009a8e:	681a      	ldr	r2, [r3, #0]
 8009a90:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009a94:	601a      	str	r2, [r3, #0]
 8009a96:	e5f1      	b.n	800967c <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a98:	681a      	ldr	r2, [r3, #0]
 8009a9a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009a9e:	601a      	str	r2, [r3, #0]
 8009aa0:	e6b2      	b.n	8009808 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009aa2:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009aa4:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009aa6:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009aaa:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009aac:	6859      	ldr	r1, [r3, #4]
 8009aae:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 8009ab2:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ab4:	691b      	ldr	r3, [r3, #16]
 8009ab6:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 8009ab8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009aba:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 8009abc:	2120      	movs	r1, #32
        hi2c->XferCount--;
 8009abe:	b29b      	uxth	r3, r3
 8009ac0:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 8009ac2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 8009ac6:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009ac8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 8009acc:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009ace:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 8009ad0:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009ad2:	f47f aed9 	bne.w	8009888 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8009ad6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 8009ada:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 8009adc:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 8009ade:	f7ff fa0f 	bl	8008f00 <HAL_I2C_MemRxCpltCallback>
 8009ae2:	f7ff bb73 	b.w	80091cc <HAL_I2C_EV_IRQHandler+0x60>
 8009ae6:	bf00      	nop
 8009ae8:	20000078 	.word	0x20000078
 8009aec:	01000101 	.word	0x01000101

08009af0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8009af0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8009af4:	2a20      	cmp	r2, #32
{
 8009af6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009af8:	fa5f fc82 	uxtb.w	ip, r2
 8009afc:	d001      	beq.n	8009b02 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8009afe:	2002      	movs	r0, #2
  }
}
 8009b00:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 8009b02:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009b04:	2024      	movs	r0, #36	; 0x24
 8009b06:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8009b0a:	6810      	ldr	r0, [r2, #0]
 8009b0c:	f020 0001 	bic.w	r0, r0, #1
 8009b10:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8009b12:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8009b14:	f020 0010 	bic.w	r0, r0, #16
 8009b18:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 8009b1a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8009b1c:	4301      	orrs	r1, r0
 8009b1e:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 8009b20:	6811      	ldr	r1, [r2, #0]
 8009b22:	f041 0101 	orr.w	r1, r1, #1
 8009b26:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 8009b28:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009b2a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 8009b2e:	4770      	bx	lr

08009b30 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8009b30:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8009b34:	2a20      	cmp	r2, #32
 8009b36:	d001      	beq.n	8009b3c <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8009b38:	2002      	movs	r0, #2
  }
}
 8009b3a:	4770      	bx	lr
{
 8009b3c:	b410      	push	{r4}
 8009b3e:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 8009b42:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009b44:	2224      	movs	r2, #36	; 0x24
 8009b46:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8009b4a:	6822      	ldr	r2, [r4, #0]
 8009b4c:	f022 0201 	bic.w	r2, r2, #1
 8009b50:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 8009b52:	4603      	mov	r3, r0
 8009b54:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 8009b56:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 8009b5a:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 8009b5c:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 8009b5e:	b289      	uxth	r1, r1
 8009b60:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 8009b62:	6822      	ldr	r2, [r4, #0]
 8009b64:	f042 0201 	orr.w	r2, r2, #1
 8009b68:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009b6a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 8009b6e:	2000      	movs	r0, #0
}
 8009b70:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009b74:	4770      	bx	lr
 8009b76:	bf00      	nop

08009b78 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 8009b78:	2800      	cmp	r0, #0
 8009b7a:	d069      	beq.n	8009c50 <HAL_LTDC_Init+0xd8>
{
 8009b7c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8009b7e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8009b82:	4604      	mov	r4, r0
 8009b84:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009b88:	2b00      	cmp	r3, #0
 8009b8a:	d05c      	beq.n	8009c46 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009b8c:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009b8e:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009b90:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009b94:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009b98:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009b9a:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8009b9c:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009ba0:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 8009ba4:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009ba6:	6999      	ldr	r1, [r3, #24]
 8009ba8:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8009baa:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009bac:	430a      	orrs	r2, r1
 8009bae:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009bb0:	689a      	ldr	r2, [r3, #8]
 8009bb2:	4928      	ldr	r1, [pc, #160]	; (8009c54 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8009bb4:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009bb6:	400a      	ands	r2, r1
 8009bb8:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8009bba:	689a      	ldr	r2, [r3, #8]
 8009bbc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009bc0:	69a0      	ldr	r0, [r4, #24]
 8009bc2:	4302      	orrs	r2, r0
 8009bc4:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8009bc6:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8009bc8:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8009bca:	400a      	ands	r2, r1
 8009bcc:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8009bce:	68da      	ldr	r2, [r3, #12]
 8009bd0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009bd4:	6a20      	ldr	r0, [r4, #32]
 8009bd6:	4302      	orrs	r2, r0
 8009bd8:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8009bda:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8009bdc:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8009bde:	400a      	ands	r2, r1
 8009be0:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8009be2:	691a      	ldr	r2, [r3, #16]
 8009be4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009be8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8009bea:	4302      	orrs	r2, r0
 8009bec:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8009bee:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8009bf0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8009bf2:	400a      	ands	r2, r1
 8009bf4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8009bf6:	695a      	ldr	r2, [r3, #20]
 8009bf8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009bfa:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009bfe:	430a      	orrs	r2, r1
 8009c00:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009c02:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8009c04:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8009c08:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009c0c:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8009c10:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8009c12:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8009c14:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8009c18:	432a      	orrs	r2, r5
 8009c1a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8009c1e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009c22:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8009c24:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009c26:	f042 0206 	orr.w	r2, r2, #6
 8009c2a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8009c2c:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8009c2e:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8009c32:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 8009c34:	ea42 020c 	orr.w	r2, r2, ip
 8009c38:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8009c3a:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8009c3e:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 8009c42:	4608      	mov	r0, r1
}
 8009c44:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 8009c46:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8009c4a:	f7f8 f853 	bl	8001cf4 <HAL_LTDC_MspInit>
 8009c4e:	e79d      	b.n	8009b8c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 8009c50:	2001      	movs	r0, #1
}
 8009c52:	4770      	bx	lr
 8009c54:	f000f800 	.word	0xf000f800

08009c58 <HAL_LTDC_ErrorCallback>:
 8009c58:	4770      	bx	lr
 8009c5a:	bf00      	nop

08009c5c <HAL_LTDC_ReloadEventCallback>:
 8009c5c:	4770      	bx	lr
 8009c5e:	bf00      	nop

08009c60 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8009c60:	6803      	ldr	r3, [r0, #0]
{
 8009c62:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8009c64:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8009c66:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8009c68:	076a      	lsls	r2, r5, #29
{
 8009c6a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8009c6c:	d501      	bpl.n	8009c72 <HAL_LTDC_IRQHandler+0x12>
 8009c6e:	0771      	lsls	r1, r6, #29
 8009c70:	d41d      	bmi.n	8009cae <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8009c72:	07aa      	lsls	r2, r5, #30
 8009c74:	d501      	bpl.n	8009c7a <HAL_LTDC_IRQHandler+0x1a>
 8009c76:	07b3      	lsls	r3, r6, #30
 8009c78:	d42d      	bmi.n	8009cd6 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8009c7a:	07e8      	lsls	r0, r5, #31
 8009c7c:	d501      	bpl.n	8009c82 <HAL_LTDC_IRQHandler+0x22>
 8009c7e:	07f1      	lsls	r1, r6, #31
 8009c80:	d440      	bmi.n	8009d04 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8009c82:	072a      	lsls	r2, r5, #28
 8009c84:	d501      	bpl.n	8009c8a <HAL_LTDC_IRQHandler+0x2a>
 8009c86:	0733      	lsls	r3, r6, #28
 8009c88:	d400      	bmi.n	8009c8c <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 8009c8a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8009c8c:	6823      	ldr	r3, [r4, #0]
 8009c8e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8009c90:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8009c92:	f022 0208 	bic.w	r2, r2, #8
 8009c96:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 8009c98:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8009c9a:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8009c9c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8009c9e:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009ca2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8009ca6:	4620      	mov	r0, r4
 8009ca8:	f7ff ffd8 	bl	8009c5c <HAL_LTDC_ReloadEventCallback>
}
 8009cac:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8009cae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009cb0:	f022 0204 	bic.w	r2, r2, #4
 8009cb4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8009cb6:	2204      	movs	r2, #4
 8009cb8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8009cba:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8009cbe:	f043 0301 	orr.w	r3, r3, #1
 8009cc2:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8009cc6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009cc8:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009ccc:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8009cd0:	f7ff ffc2 	bl	8009c58 <HAL_LTDC_ErrorCallback>
 8009cd4:	e7cd      	b.n	8009c72 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8009cd6:	6823      	ldr	r3, [r4, #0]
 8009cd8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009cda:	f022 0202 	bic.w	r2, r2, #2
 8009cde:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8009ce0:	2202      	movs	r2, #2
 8009ce2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8009ce4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8009ce8:	f043 0302 	orr.w	r3, r3, #2
 8009cec:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009cf0:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 8009cf2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009cf4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009cf8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8009cfc:	4620      	mov	r0, r4
 8009cfe:	f7ff ffab 	bl	8009c58 <HAL_LTDC_ErrorCallback>
 8009d02:	e7ba      	b.n	8009c7a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009d04:	6823      	ldr	r3, [r4, #0]
 8009d06:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009d08:	f022 0201 	bic.w	r2, r2, #1
 8009d0c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8009d0e:	2201      	movs	r2, #1
 8009d10:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8009d12:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8009d14:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009d18:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8009d1c:	4620      	mov	r0, r4
 8009d1e:	f7f7 fb01 	bl	8001324 <HAL_LTDC_LineEventCallback>
 8009d22:	e7ae      	b.n	8009c82 <HAL_LTDC_IRQHandler+0x22>

08009d24 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8009d24:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8009d28:	2b01      	cmp	r3, #1
 8009d2a:	f000 80c2 	beq.w	8009eb2 <HAL_LTDC_ConfigLayer+0x18e>
{
 8009d2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009d32:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009d36:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009d3a:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009d3e:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009d40:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009d42:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009d46:	f102 0684 	add.w	r6, r2, #132	; 0x84
 8009d4a:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009d4e:	f8d9 300c 	ldr.w	r3, [r9, #12]
 8009d52:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009d56:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 8009d5a:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009d5c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009d60:	460c      	mov	r4, r1
 8009d62:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009d64:	9301      	str	r3, [sp, #4]
 8009d66:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009d68:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009d6a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 8009d6e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8009d72:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009d74:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009d76:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8009d7a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009d7c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8009d80:	6823      	ldr	r3, [r4, #0]
 8009d82:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009d86:	9b01      	ldr	r3, [sp, #4]
 8009d88:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8009d8c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8009d90:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009d92:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8009d94:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8009d98:	1c51      	adds	r1, r2, #1
 8009d9a:	f3c3 430b 	ubfx	r3, r3, #16, #12
 8009d9e:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009da0:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8009da2:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8009da6:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009daa:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8009dae:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8009db2:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8009db6:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009dba:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8009dbe:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009dc0:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8009dc2:	f8d9 000c 	ldr.w	r0, [r9, #12]
 8009dc6:	3301      	adds	r3, #1
 8009dc8:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8009dcc:	4403      	add	r3, r0
 8009dce:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8009dd2:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009dd6:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009dda:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009ddc:	f023 0307 	bic.w	r3, r3, #7
 8009de0:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009de4:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009de8:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009dec:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8009df0:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8009df4:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009df8:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8009dfc:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 8009e00:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 8009e04:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 8009e08:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8009e0c:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8009e10:	f8dc 3014 	ldr.w	r3, [ip, #20]
 8009e14:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8009e18:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8009e1c:	696b      	ldr	r3, [r5, #20]
 8009e1e:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8009e22:	f8dc 301c 	ldr.w	r3, [ip, #28]
 8009e26:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8009e2a:	f023 0307 	bic.w	r3, r3, #7
 8009e2e:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009e32:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 8009e36:	4303      	orrs	r3, r0
 8009e38:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8009e3c:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009e40:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8009e42:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009e46:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8009e4a:	bb69      	cbnz	r1, 8009ea8 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 8009e4c:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8009e4e:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009e50:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8009e52:	fb03 f707 	mul.w	r7, r3, r7
 8009e56:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009e58:	fb02 f303 	mul.w	r3, r2, r3
 8009e5c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009e60:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009e64:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009e66:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8009e6a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009e6e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8009e72:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 8009e76:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8009e7a:	f023 0307 	bic.w	r3, r3, #7
 8009e7e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009e82:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8009e86:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8009e8a:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8009e8c:	4313      	orrs	r3, r2
 8009e8e:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 8009e92:	2300      	movs	r3, #0
  return HAL_OK;
 8009e94:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8009e96:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8009e9a:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8009e9e:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 8009ea2:	b003      	add	sp, #12
 8009ea4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8009ea8:	3901      	subs	r1, #1
 8009eaa:	2906      	cmp	r1, #6
 8009eac:	d903      	bls.n	8009eb6 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8009eae:	2301      	movs	r3, #1
 8009eb0:	e7cd      	b.n	8009e4e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 8009eb2:	2002      	movs	r0, #2
}
 8009eb4:	4770      	bx	lr
 8009eb6:	4b02      	ldr	r3, [pc, #8]	; (8009ec0 <HAL_LTDC_ConfigLayer+0x19c>)
 8009eb8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8009ebc:	e7c7      	b.n	8009e4e <HAL_LTDC_ConfigLayer+0x12a>
 8009ebe:	bf00      	nop
 8009ec0:	0802afbc 	.word	0x0802afbc

08009ec4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8009ec4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8009ec8:	2b01      	cmp	r3, #1
 8009eca:	d019      	beq.n	8009f00 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009ecc:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009ece:	2302      	movs	r3, #2
{
 8009ed0:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009ed2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009ed6:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8009ed8:	4c0a      	ldr	r4, [pc, #40]	; (8009f04 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009eda:	f023 0301 	bic.w	r3, r3, #1
 8009ede:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8009ee0:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8009ee2:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 8009ee4:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8009ee6:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 8009eea:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8009eee:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8009ef0:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8009ef4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8009ef8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 8009efc:	4618      	mov	r0, r3
}
 8009efe:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 8009f00:	2002      	movs	r0, #2
}
 8009f02:	4770      	bx	lr
 8009f04:	40016800 	.word	0x40016800

08009f08 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8009f08:	2800      	cmp	r0, #0
 8009f0a:	f000 81a2 	beq.w	800a252 <HAL_RCC_OscConfig+0x34a>
{
 8009f0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009f12:	6803      	ldr	r3, [r0, #0]
 8009f14:	07dd      	lsls	r5, r3, #31
{
 8009f16:	b082      	sub	sp, #8
 8009f18:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009f1a:	d52f      	bpl.n	8009f7c <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009f1c:	499e      	ldr	r1, [pc, #632]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 8009f1e:	688a      	ldr	r2, [r1, #8]
 8009f20:	f002 020c 	and.w	r2, r2, #12
 8009f24:	2a04      	cmp	r2, #4
 8009f26:	f000 80ed 	beq.w	800a104 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009f2a:	688a      	ldr	r2, [r1, #8]
 8009f2c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009f30:	2a08      	cmp	r2, #8
 8009f32:	f000 80e3 	beq.w	800a0fc <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009f36:	6863      	ldr	r3, [r4, #4]
 8009f38:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009f3c:	f000 80ec 	beq.w	800a118 <HAL_RCC_OscConfig+0x210>
 8009f40:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009f44:	f000 8175 	beq.w	800a232 <HAL_RCC_OscConfig+0x32a>
 8009f48:	4d93      	ldr	r5, [pc, #588]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 8009f4a:	682a      	ldr	r2, [r5, #0]
 8009f4c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8009f50:	602a      	str	r2, [r5, #0]
 8009f52:	682a      	ldr	r2, [r5, #0]
 8009f54:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8009f58:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8009f5a:	2b00      	cmp	r3, #0
 8009f5c:	f040 80e1 	bne.w	800a122 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8009f60:	f7fd fe94 	bl	8007c8c <HAL_GetTick>
 8009f64:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8009f66:	e005      	b.n	8009f74 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8009f68:	f7fd fe90 	bl	8007c8c <HAL_GetTick>
 8009f6c:	1b80      	subs	r0, r0, r6
 8009f6e:	2864      	cmp	r0, #100	; 0x64
 8009f70:	f200 8101 	bhi.w	800a176 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8009f74:	682b      	ldr	r3, [r5, #0]
 8009f76:	039b      	lsls	r3, r3, #14
 8009f78:	d4f6      	bmi.n	8009f68 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8009f7a:	6823      	ldr	r3, [r4, #0]
 8009f7c:	079f      	lsls	r7, r3, #30
 8009f7e:	d528      	bpl.n	8009fd2 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8009f80:	4a85      	ldr	r2, [pc, #532]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 8009f82:	6891      	ldr	r1, [r2, #8]
 8009f84:	f011 0f0c 	tst.w	r1, #12
 8009f88:	f000 8090 	beq.w	800a0ac <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8009f8c:	6891      	ldr	r1, [r2, #8]
 8009f8e:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8009f92:	2908      	cmp	r1, #8
 8009f94:	f000 8086 	beq.w	800a0a4 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8009f98:	68e3      	ldr	r3, [r4, #12]
 8009f9a:	2b00      	cmp	r3, #0
 8009f9c:	f000 810e 	beq.w	800a1bc <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8009fa0:	4b7e      	ldr	r3, [pc, #504]	; (800a19c <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009fa2:	4e7d      	ldr	r6, [pc, #500]	; (800a198 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 8009fa4:	2201      	movs	r2, #1
 8009fa6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8009fa8:	f7fd fe70 	bl	8007c8c <HAL_GetTick>
 8009fac:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009fae:	e005      	b.n	8009fbc <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8009fb0:	f7fd fe6c 	bl	8007c8c <HAL_GetTick>
 8009fb4:	1b40      	subs	r0, r0, r5
 8009fb6:	2802      	cmp	r0, #2
 8009fb8:	f200 80dd 	bhi.w	800a176 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009fbc:	6833      	ldr	r3, [r6, #0]
 8009fbe:	0798      	lsls	r0, r3, #30
 8009fc0:	d5f6      	bpl.n	8009fb0 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8009fc2:	6833      	ldr	r3, [r6, #0]
 8009fc4:	6922      	ldr	r2, [r4, #16]
 8009fc6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009fca:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009fce:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8009fd0:	6823      	ldr	r3, [r4, #0]
 8009fd2:	071a      	lsls	r2, r3, #28
 8009fd4:	d451      	bmi.n	800a07a <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8009fd6:	0758      	lsls	r0, r3, #29
 8009fd8:	d52f      	bpl.n	800a03a <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8009fda:	4a6f      	ldr	r2, [pc, #444]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 8009fdc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009fde:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 8009fe2:	d07f      	beq.n	800a0e4 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 8009fe4:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8009fe6:	4e6e      	ldr	r6, [pc, #440]	; (800a1a0 <HAL_RCC_OscConfig+0x298>)
 8009fe8:	6833      	ldr	r3, [r6, #0]
 8009fea:	05d9      	lsls	r1, r3, #23
 8009fec:	f140 80b3 	bpl.w	800a156 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009ff0:	68a3      	ldr	r3, [r4, #8]
 8009ff2:	2b01      	cmp	r3, #1
 8009ff4:	f000 80c3 	beq.w	800a17e <HAL_RCC_OscConfig+0x276>
 8009ff8:	2b05      	cmp	r3, #5
 8009ffa:	f000 812c 	beq.w	800a256 <HAL_RCC_OscConfig+0x34e>
 8009ffe:	4e66      	ldr	r6, [pc, #408]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 800a000:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800a002:	f022 0201 	bic.w	r2, r2, #1
 800a006:	6732      	str	r2, [r6, #112]	; 0x70
 800a008:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800a00a:	f022 0204 	bic.w	r2, r2, #4
 800a00e:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800a010:	2b00      	cmp	r3, #0
 800a012:	f040 80b9 	bne.w	800a188 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800a016:	f7fd fe39 	bl	8007c8c <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a01a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800a01e:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a020:	e005      	b.n	800a02e <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a022:	f7fd fe33 	bl	8007c8c <HAL_GetTick>
 800a026:	1bc0      	subs	r0, r0, r7
 800a028:	4540      	cmp	r0, r8
 800a02a:	f200 80a4 	bhi.w	800a176 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a02e:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800a030:	0798      	lsls	r0, r3, #30
 800a032:	d4f6      	bmi.n	800a022 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800a034:	2d00      	cmp	r5, #0
 800a036:	f040 8106 	bne.w	800a246 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800a03a:	69a0      	ldr	r0, [r4, #24]
 800a03c:	b1c8      	cbz	r0, 800a072 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800a03e:	4d56      	ldr	r5, [pc, #344]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 800a040:	68ab      	ldr	r3, [r5, #8]
 800a042:	f003 030c 	and.w	r3, r3, #12
 800a046:	2b08      	cmp	r3, #8
 800a048:	f000 80c9 	beq.w	800a1de <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800a04c:	4b53      	ldr	r3, [pc, #332]	; (800a19c <HAL_RCC_OscConfig+0x294>)
 800a04e:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a050:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800a052:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a054:	f000 8109 	beq.w	800a26a <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800a058:	f7fd fe18 	bl	8007c8c <HAL_GetTick>
 800a05c:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a05e:	e005      	b.n	800a06c <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a060:	f7fd fe14 	bl	8007c8c <HAL_GetTick>
 800a064:	1b00      	subs	r0, r0, r4
 800a066:	2802      	cmp	r0, #2
 800a068:	f200 8085 	bhi.w	800a176 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a06c:	682b      	ldr	r3, [r5, #0]
 800a06e:	019b      	lsls	r3, r3, #6
 800a070:	d4f6      	bmi.n	800a060 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800a072:	2000      	movs	r0, #0
}
 800a074:	b002      	add	sp, #8
 800a076:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800a07a:	6963      	ldr	r3, [r4, #20]
 800a07c:	b30b      	cbz	r3, 800a0c2 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800a07e:	4b47      	ldr	r3, [pc, #284]	; (800a19c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a080:	4e45      	ldr	r6, [pc, #276]	; (800a198 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800a082:	2201      	movs	r2, #1
 800a084:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800a088:	f7fd fe00 	bl	8007c8c <HAL_GetTick>
 800a08c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a08e:	e004      	b.n	800a09a <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800a090:	f7fd fdfc 	bl	8007c8c <HAL_GetTick>
 800a094:	1b40      	subs	r0, r0, r5
 800a096:	2802      	cmp	r0, #2
 800a098:	d86d      	bhi.n	800a176 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a09a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800a09c:	079b      	lsls	r3, r3, #30
 800a09e:	d5f7      	bpl.n	800a090 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800a0a0:	6823      	ldr	r3, [r4, #0]
 800a0a2:	e798      	b.n	8009fd6 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a0a4:	6852      	ldr	r2, [r2, #4]
 800a0a6:	0256      	lsls	r6, r2, #9
 800a0a8:	f53f af76 	bmi.w	8009f98 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a0ac:	4a3a      	ldr	r2, [pc, #232]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 800a0ae:	6812      	ldr	r2, [r2, #0]
 800a0b0:	0795      	lsls	r5, r2, #30
 800a0b2:	d544      	bpl.n	800a13e <HAL_RCC_OscConfig+0x236>
 800a0b4:	68e2      	ldr	r2, [r4, #12]
 800a0b6:	2a01      	cmp	r2, #1
 800a0b8:	d041      	beq.n	800a13e <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800a0ba:	2001      	movs	r0, #1
}
 800a0bc:	b002      	add	sp, #8
 800a0be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800a0c2:	4a36      	ldr	r2, [pc, #216]	; (800a19c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a0c4:	4e34      	ldr	r6, [pc, #208]	; (800a198 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800a0c6:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800a0ca:	f7fd fddf 	bl	8007c8c <HAL_GetTick>
 800a0ce:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a0d0:	e004      	b.n	800a0dc <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800a0d2:	f7fd fddb 	bl	8007c8c <HAL_GetTick>
 800a0d6:	1b40      	subs	r0, r0, r5
 800a0d8:	2802      	cmp	r0, #2
 800a0da:	d84c      	bhi.n	800a176 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a0dc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800a0de:	079f      	lsls	r7, r3, #30
 800a0e0:	d4f7      	bmi.n	800a0d2 <HAL_RCC_OscConfig+0x1ca>
 800a0e2:	e7dd      	b.n	800a0a0 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800a0e4:	9301      	str	r3, [sp, #4]
 800a0e6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a0e8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a0ec:	6413      	str	r3, [r2, #64]	; 0x40
 800a0ee:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a0f0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a0f4:	9301      	str	r3, [sp, #4]
 800a0f6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800a0f8:	2501      	movs	r5, #1
 800a0fa:	e774      	b.n	8009fe6 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800a0fc:	684a      	ldr	r2, [r1, #4]
 800a0fe:	0250      	lsls	r0, r2, #9
 800a100:	f57f af19 	bpl.w	8009f36 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800a104:	4a24      	ldr	r2, [pc, #144]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 800a106:	6812      	ldr	r2, [r2, #0]
 800a108:	0391      	lsls	r1, r2, #14
 800a10a:	f57f af37 	bpl.w	8009f7c <HAL_RCC_OscConfig+0x74>
 800a10e:	6862      	ldr	r2, [r4, #4]
 800a110:	2a00      	cmp	r2, #0
 800a112:	f47f af33 	bne.w	8009f7c <HAL_RCC_OscConfig+0x74>
 800a116:	e7d0      	b.n	800a0ba <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a118:	4a1f      	ldr	r2, [pc, #124]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 800a11a:	6813      	ldr	r3, [r2, #0]
 800a11c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800a120:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800a122:	f7fd fdb3 	bl	8007c8c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a126:	4e1c      	ldr	r6, [pc, #112]	; (800a198 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800a128:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a12a:	e004      	b.n	800a136 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800a12c:	f7fd fdae 	bl	8007c8c <HAL_GetTick>
 800a130:	1b40      	subs	r0, r0, r5
 800a132:	2864      	cmp	r0, #100	; 0x64
 800a134:	d81f      	bhi.n	800a176 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a136:	6833      	ldr	r3, [r6, #0]
 800a138:	039a      	lsls	r2, r3, #14
 800a13a:	d5f7      	bpl.n	800a12c <HAL_RCC_OscConfig+0x224>
 800a13c:	e71d      	b.n	8009f7a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a13e:	4916      	ldr	r1, [pc, #88]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 800a140:	6920      	ldr	r0, [r4, #16]
 800a142:	680a      	ldr	r2, [r1, #0]
 800a144:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800a148:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800a14c:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a14e:	071a      	lsls	r2, r3, #28
 800a150:	f57f af41 	bpl.w	8009fd6 <HAL_RCC_OscConfig+0xce>
 800a154:	e791      	b.n	800a07a <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800a156:	6833      	ldr	r3, [r6, #0]
 800a158:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a15c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800a15e:	f7fd fd95 	bl	8007c8c <HAL_GetTick>
 800a162:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a164:	6833      	ldr	r3, [r6, #0]
 800a166:	05da      	lsls	r2, r3, #23
 800a168:	f53f af42 	bmi.w	8009ff0 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800a16c:	f7fd fd8e 	bl	8007c8c <HAL_GetTick>
 800a170:	1bc0      	subs	r0, r0, r7
 800a172:	2802      	cmp	r0, #2
 800a174:	d9f6      	bls.n	800a164 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800a176:	2003      	movs	r0, #3
}
 800a178:	b002      	add	sp, #8
 800a17a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a17e:	4a06      	ldr	r2, [pc, #24]	; (800a198 <HAL_RCC_OscConfig+0x290>)
 800a180:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800a182:	f043 0301 	orr.w	r3, r3, #1
 800a186:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800a188:	f7fd fd80 	bl	8007c8c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a18c:	4f02      	ldr	r7, [pc, #8]	; (800a198 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800a18e:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a190:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a194:	e00b      	b.n	800a1ae <HAL_RCC_OscConfig+0x2a6>
 800a196:	bf00      	nop
 800a198:	40023800 	.word	0x40023800
 800a19c:	42470000 	.word	0x42470000
 800a1a0:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a1a4:	f7fd fd72 	bl	8007c8c <HAL_GetTick>
 800a1a8:	1b80      	subs	r0, r0, r6
 800a1aa:	4540      	cmp	r0, r8
 800a1ac:	d8e3      	bhi.n	800a176 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a1ae:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800a1b0:	079b      	lsls	r3, r3, #30
 800a1b2:	d5f7      	bpl.n	800a1a4 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800a1b4:	2d00      	cmp	r5, #0
 800a1b6:	f43f af40 	beq.w	800a03a <HAL_RCC_OscConfig+0x132>
 800a1ba:	e044      	b.n	800a246 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800a1bc:	4a42      	ldr	r2, [pc, #264]	; (800a2c8 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a1be:	4e43      	ldr	r6, [pc, #268]	; (800a2cc <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800a1c0:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800a1c2:	f7fd fd63 	bl	8007c8c <HAL_GetTick>
 800a1c6:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a1c8:	e004      	b.n	800a1d4 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800a1ca:	f7fd fd5f 	bl	8007c8c <HAL_GetTick>
 800a1ce:	1b40      	subs	r0, r0, r5
 800a1d0:	2802      	cmp	r0, #2
 800a1d2:	d8d0      	bhi.n	800a176 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a1d4:	6833      	ldr	r3, [r6, #0]
 800a1d6:	0799      	lsls	r1, r3, #30
 800a1d8:	d4f7      	bmi.n	800a1ca <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a1da:	6823      	ldr	r3, [r4, #0]
 800a1dc:	e6f9      	b.n	8009fd2 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800a1de:	2801      	cmp	r0, #1
 800a1e0:	f43f af48 	beq.w	800a074 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800a1e4:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a1e6:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a1e8:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a1ec:	4291      	cmp	r1, r2
 800a1ee:	f47f af64 	bne.w	800a0ba <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a1f2:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a1f4:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a1f8:	4291      	cmp	r1, r2
 800a1fa:	f47f af5e 	bne.w	800a0ba <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a1fe:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a200:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800a204:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a206:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800a20a:	f47f af56 	bne.w	800a0ba <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a20e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a210:	0852      	lsrs	r2, r2, #1
 800a212:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800a216:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a218:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800a21c:	f47f af4d 	bne.w	800a0ba <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800a220:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a222:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a226:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800a22a:	bf14      	ite	ne
 800a22c:	2001      	movne	r0, #1
 800a22e:	2000      	moveq	r0, #0
 800a230:	e720      	b.n	800a074 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a232:	4b26      	ldr	r3, [pc, #152]	; (800a2cc <HAL_RCC_OscConfig+0x3c4>)
 800a234:	681a      	ldr	r2, [r3, #0]
 800a236:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800a23a:	601a      	str	r2, [r3, #0]
 800a23c:	681a      	ldr	r2, [r3, #0]
 800a23e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800a242:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800a244:	e76d      	b.n	800a122 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800a246:	4a21      	ldr	r2, [pc, #132]	; (800a2cc <HAL_RCC_OscConfig+0x3c4>)
 800a248:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a24a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a24e:	6413      	str	r3, [r2, #64]	; 0x40
 800a250:	e6f3      	b.n	800a03a <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800a252:	2001      	movs	r0, #1
}
 800a254:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a256:	4b1d      	ldr	r3, [pc, #116]	; (800a2cc <HAL_RCC_OscConfig+0x3c4>)
 800a258:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800a25a:	f042 0204 	orr.w	r2, r2, #4
 800a25e:	671a      	str	r2, [r3, #112]	; 0x70
 800a260:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800a262:	f042 0201 	orr.w	r2, r2, #1
 800a266:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800a268:	e78e      	b.n	800a188 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800a26a:	f7fd fd0f 	bl	8007c8c <HAL_GetTick>
 800a26e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a270:	e005      	b.n	800a27e <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a272:	f7fd fd0b 	bl	8007c8c <HAL_GetTick>
 800a276:	1b80      	subs	r0, r0, r6
 800a278:	2802      	cmp	r0, #2
 800a27a:	f63f af7c 	bhi.w	800a176 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a27e:	682b      	ldr	r3, [r5, #0]
 800a280:	0199      	lsls	r1, r3, #6
 800a282:	d4f6      	bmi.n	800a272 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800a284:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800a288:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a28a:	430b      	orrs	r3, r1
 800a28c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800a290:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800a294:	0852      	lsrs	r2, r2, #1
 800a296:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800a29a:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800a29c:	490a      	ldr	r1, [pc, #40]	; (800a2c8 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800a29e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800a2a2:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800a2a4:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800a2a6:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800a2a8:	f7fd fcf0 	bl	8007c8c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a2ac:	4d07      	ldr	r5, [pc, #28]	; (800a2cc <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800a2ae:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a2b0:	e005      	b.n	800a2be <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800a2b2:	f7fd fceb 	bl	8007c8c <HAL_GetTick>
 800a2b6:	1b00      	subs	r0, r0, r4
 800a2b8:	2802      	cmp	r0, #2
 800a2ba:	f63f af5c 	bhi.w	800a176 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a2be:	682b      	ldr	r3, [r5, #0]
 800a2c0:	019a      	lsls	r2, r3, #6
 800a2c2:	d5f6      	bpl.n	800a2b2 <HAL_RCC_OscConfig+0x3aa>
 800a2c4:	e6d5      	b.n	800a072 <HAL_RCC_OscConfig+0x16a>
 800a2c6:	bf00      	nop
 800a2c8:	42470000 	.word	0x42470000
 800a2cc:	40023800 	.word	0x40023800

0800a2d0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a2d0:	4916      	ldr	r1, [pc, #88]	; (800a32c <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800a2d2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a2d4:	688b      	ldr	r3, [r1, #8]
 800a2d6:	f003 030c 	and.w	r3, r3, #12
 800a2da:	2b04      	cmp	r3, #4
 800a2dc:	d01b      	beq.n	800a316 <HAL_RCC_GetSysClockFreq+0x46>
 800a2de:	2b08      	cmp	r3, #8
 800a2e0:	d117      	bne.n	800a312 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a2e2:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a2e4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a2e6:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a2e8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a2ec:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a2f0:	d113      	bne.n	800a31a <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a2f2:	480f      	ldr	r0, [pc, #60]	; (800a330 <HAL_RCC_GetSysClockFreq+0x60>)
 800a2f4:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800a2f8:	fba1 0100 	umull	r0, r1, r1, r0
 800a2fc:	f7f5 ffc8 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800a300:	4b0a      	ldr	r3, [pc, #40]	; (800a32c <HAL_RCC_GetSysClockFreq+0x5c>)
 800a302:	685b      	ldr	r3, [r3, #4]
 800a304:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800a308:	3301      	adds	r3, #1
 800a30a:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800a30c:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800a310:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800a312:	4807      	ldr	r0, [pc, #28]	; (800a330 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800a314:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a316:	4807      	ldr	r0, [pc, #28]	; (800a334 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800a318:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a31a:	4806      	ldr	r0, [pc, #24]	; (800a334 <HAL_RCC_GetSysClockFreq+0x64>)
 800a31c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800a320:	2300      	movs	r3, #0
 800a322:	fba1 0100 	umull	r0, r1, r1, r0
 800a326:	f7f5 ffb3 	bl	8000290 <__aeabi_uldivmod>
 800a32a:	e7e9      	b.n	800a300 <HAL_RCC_GetSysClockFreq+0x30>
 800a32c:	40023800 	.word	0x40023800
 800a330:	00f42400 	.word	0x00f42400
 800a334:	007a1200 	.word	0x007a1200

0800a338 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800a338:	2800      	cmp	r0, #0
 800a33a:	f000 8087 	beq.w	800a44c <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800a33e:	4a48      	ldr	r2, [pc, #288]	; (800a460 <HAL_RCC_ClockConfig+0x128>)
 800a340:	6813      	ldr	r3, [r2, #0]
 800a342:	f003 030f 	and.w	r3, r3, #15
 800a346:	428b      	cmp	r3, r1
{
 800a348:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a34c:	460d      	mov	r5, r1
 800a34e:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800a350:	d209      	bcs.n	800a366 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a352:	b2cb      	uxtb	r3, r1
 800a354:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800a356:	6813      	ldr	r3, [r2, #0]
 800a358:	f003 030f 	and.w	r3, r3, #15
 800a35c:	428b      	cmp	r3, r1
 800a35e:	d002      	beq.n	800a366 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800a360:	2001      	movs	r0, #1
}
 800a362:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800a366:	6823      	ldr	r3, [r4, #0]
 800a368:	0798      	lsls	r0, r3, #30
 800a36a:	d514      	bpl.n	800a396 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a36c:	0759      	lsls	r1, r3, #29
 800a36e:	d504      	bpl.n	800a37a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800a370:	493c      	ldr	r1, [pc, #240]	; (800a464 <HAL_RCC_ClockConfig+0x12c>)
 800a372:	688a      	ldr	r2, [r1, #8]
 800a374:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800a378:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a37a:	071a      	lsls	r2, r3, #28
 800a37c:	d504      	bpl.n	800a388 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800a37e:	4939      	ldr	r1, [pc, #228]	; (800a464 <HAL_RCC_ClockConfig+0x12c>)
 800a380:	688a      	ldr	r2, [r1, #8]
 800a382:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800a386:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800a388:	4936      	ldr	r1, [pc, #216]	; (800a464 <HAL_RCC_ClockConfig+0x12c>)
 800a38a:	68a0      	ldr	r0, [r4, #8]
 800a38c:	688a      	ldr	r2, [r1, #8]
 800a38e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800a392:	4302      	orrs	r2, r0
 800a394:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800a396:	07df      	lsls	r7, r3, #31
 800a398:	d521      	bpl.n	800a3de <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800a39a:	6862      	ldr	r2, [r4, #4]
 800a39c:	2a01      	cmp	r2, #1
 800a39e:	d057      	beq.n	800a450 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800a3a0:	1e93      	subs	r3, r2, #2
 800a3a2:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a3a4:	4b2f      	ldr	r3, [pc, #188]	; (800a464 <HAL_RCC_ClockConfig+0x12c>)
 800a3a6:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800a3a8:	d94d      	bls.n	800a446 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a3aa:	0799      	lsls	r1, r3, #30
 800a3ac:	d5d8      	bpl.n	800a360 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800a3ae:	4e2d      	ldr	r6, [pc, #180]	; (800a464 <HAL_RCC_ClockConfig+0x12c>)
 800a3b0:	68b3      	ldr	r3, [r6, #8]
 800a3b2:	f023 0303 	bic.w	r3, r3, #3
 800a3b6:	4313      	orrs	r3, r2
 800a3b8:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800a3ba:	f7fd fc67 	bl	8007c8c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a3be:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800a3c2:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a3c4:	e004      	b.n	800a3d0 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a3c6:	f7fd fc61 	bl	8007c8c <HAL_GetTick>
 800a3ca:	1bc0      	subs	r0, r0, r7
 800a3cc:	4540      	cmp	r0, r8
 800a3ce:	d844      	bhi.n	800a45a <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a3d0:	68b3      	ldr	r3, [r6, #8]
 800a3d2:	6862      	ldr	r2, [r4, #4]
 800a3d4:	f003 030c 	and.w	r3, r3, #12
 800a3d8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800a3dc:	d1f3      	bne.n	800a3c6 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800a3de:	4a20      	ldr	r2, [pc, #128]	; (800a460 <HAL_RCC_ClockConfig+0x128>)
 800a3e0:	6813      	ldr	r3, [r2, #0]
 800a3e2:	f003 030f 	and.w	r3, r3, #15
 800a3e6:	42ab      	cmp	r3, r5
 800a3e8:	d906      	bls.n	800a3f8 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a3ea:	b2eb      	uxtb	r3, r5
 800a3ec:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800a3ee:	6813      	ldr	r3, [r2, #0]
 800a3f0:	f003 030f 	and.w	r3, r3, #15
 800a3f4:	42ab      	cmp	r3, r5
 800a3f6:	d1b3      	bne.n	800a360 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a3f8:	6823      	ldr	r3, [r4, #0]
 800a3fa:	075a      	lsls	r2, r3, #29
 800a3fc:	d506      	bpl.n	800a40c <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800a3fe:	4919      	ldr	r1, [pc, #100]	; (800a464 <HAL_RCC_ClockConfig+0x12c>)
 800a400:	68e0      	ldr	r0, [r4, #12]
 800a402:	688a      	ldr	r2, [r1, #8]
 800a404:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800a408:	4302      	orrs	r2, r0
 800a40a:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a40c:	071b      	lsls	r3, r3, #28
 800a40e:	d507      	bpl.n	800a420 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800a410:	4a14      	ldr	r2, [pc, #80]	; (800a464 <HAL_RCC_ClockConfig+0x12c>)
 800a412:	6921      	ldr	r1, [r4, #16]
 800a414:	6893      	ldr	r3, [r2, #8]
 800a416:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800a41a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800a41e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a420:	f7ff ff56 	bl	800a2d0 <HAL_RCC_GetSysClockFreq>
 800a424:	4a0f      	ldr	r2, [pc, #60]	; (800a464 <HAL_RCC_ClockConfig+0x12c>)
 800a426:	4c10      	ldr	r4, [pc, #64]	; (800a468 <HAL_RCC_ClockConfig+0x130>)
 800a428:	6892      	ldr	r2, [r2, #8]
 800a42a:	4910      	ldr	r1, [pc, #64]	; (800a46c <HAL_RCC_ClockConfig+0x134>)
 800a42c:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800a430:	4603      	mov	r3, r0
 800a432:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800a434:	480e      	ldr	r0, [pc, #56]	; (800a470 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a436:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800a438:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a43a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800a43c:	f7f7 fe18 	bl	8002070 <HAL_InitTick>
  return HAL_OK;
 800a440:	2000      	movs	r0, #0
}
 800a442:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a446:	0198      	lsls	r0, r3, #6
 800a448:	d4b1      	bmi.n	800a3ae <HAL_RCC_ClockConfig+0x76>
 800a44a:	e789      	b.n	800a360 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800a44c:	2001      	movs	r0, #1
}
 800a44e:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a450:	4b04      	ldr	r3, [pc, #16]	; (800a464 <HAL_RCC_ClockConfig+0x12c>)
 800a452:	681b      	ldr	r3, [r3, #0]
 800a454:	039e      	lsls	r6, r3, #14
 800a456:	d4aa      	bmi.n	800a3ae <HAL_RCC_ClockConfig+0x76>
 800a458:	e782      	b.n	800a360 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800a45a:	2003      	movs	r0, #3
 800a45c:	e781      	b.n	800a362 <HAL_RCC_ClockConfig+0x2a>
 800a45e:	bf00      	nop
 800a460:	40023c00 	.word	0x40023c00
 800a464:	40023800 	.word	0x40023800
 800a468:	0802afa4 	.word	0x0802afa4
 800a46c:	20000078 	.word	0x20000078
 800a470:	20000080 	.word	0x20000080

0800a474 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800a474:	4b04      	ldr	r3, [pc, #16]	; (800a488 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800a476:	4905      	ldr	r1, [pc, #20]	; (800a48c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800a478:	689b      	ldr	r3, [r3, #8]
 800a47a:	4a05      	ldr	r2, [pc, #20]	; (800a490 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800a47c:	6808      	ldr	r0, [r1, #0]
 800a47e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800a482:	5cd3      	ldrb	r3, [r2, r3]
}
 800a484:	40d8      	lsrs	r0, r3
 800a486:	4770      	bx	lr
 800a488:	40023800 	.word	0x40023800
 800a48c:	20000078 	.word	0x20000078
 800a490:	0802afb4 	.word	0x0802afb4

0800a494 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800a494:	4b0e      	ldr	r3, [pc, #56]	; (800a4d0 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800a496:	220f      	movs	r2, #15
 800a498:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800a49a:	689a      	ldr	r2, [r3, #8]
 800a49c:	f002 0203 	and.w	r2, r2, #3
 800a4a0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800a4a2:	689a      	ldr	r2, [r3, #8]
 800a4a4:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800a4a8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800a4aa:	689a      	ldr	r2, [r3, #8]
 800a4ac:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800a4b0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a4b2:	689b      	ldr	r3, [r3, #8]
 800a4b4:	08db      	lsrs	r3, r3, #3
{
 800a4b6:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a4b8:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a4bc:	4c05      	ldr	r4, [pc, #20]	; (800a4d4 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a4be:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a4c0:	6823      	ldr	r3, [r4, #0]
}
 800a4c2:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a4c6:	f003 030f 	and.w	r3, r3, #15
 800a4ca:	600b      	str	r3, [r1, #0]
}
 800a4cc:	4770      	bx	lr
 800a4ce:	bf00      	nop
 800a4d0:	40023800 	.word	0x40023800
 800a4d4:	40023c00 	.word	0x40023c00

0800a4d8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800a4d8:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800a4da:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800a4dc:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800a4e0:	b083      	sub	sp, #12
 800a4e2:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800a4e4:	d111      	bne.n	800a50a <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800a4e6:	f013 0f0c 	tst.w	r3, #12
 800a4ea:	d16f      	bne.n	800a5cc <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800a4ec:	0698      	lsls	r0, r3, #26
 800a4ee:	f100 80c2 	bmi.w	800a676 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800a4f2:	f013 0310 	ands.w	r3, r3, #16
 800a4f6:	f000 80bb 	beq.w	800a670 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800a4fa:	4b89      	ldr	r3, [pc, #548]	; (800a720 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800a4fc:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800a500:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800a504:	2000      	movs	r0, #0
}
 800a506:	b003      	add	sp, #12
 800a508:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800a50a:	4b86      	ldr	r3, [pc, #536]	; (800a724 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a50c:	4e86      	ldr	r6, [pc, #536]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800a50e:	2200      	movs	r2, #0
 800a510:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800a512:	f7fd fbbb 	bl	8007c8c <HAL_GetTick>
 800a516:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a518:	e004      	b.n	800a524 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800a51a:	f7fd fbb7 	bl	8007c8c <HAL_GetTick>
 800a51e:	1b43      	subs	r3, r0, r5
 800a520:	2b02      	cmp	r3, #2
 800a522:	d850      	bhi.n	800a5c6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a524:	6833      	ldr	r3, [r6, #0]
 800a526:	0118      	lsls	r0, r3, #4
 800a528:	d4f7      	bmi.n	800a51a <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800a52a:	6823      	ldr	r3, [r4, #0]
 800a52c:	07d9      	lsls	r1, r3, #31
 800a52e:	d506      	bpl.n	800a53e <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800a530:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800a534:	0712      	lsls	r2, r2, #28
 800a536:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800a53a:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800a53e:	079a      	lsls	r2, r3, #30
 800a540:	d515      	bpl.n	800a56e <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a542:	4979      	ldr	r1, [pc, #484]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800a544:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a546:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800a54a:	6865      	ldr	r5, [r4, #4]
 800a54c:	0612      	lsls	r2, r2, #24
 800a54e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800a552:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800a556:	4302      	orrs	r2, r0
 800a558:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800a55c:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800a560:	69e2      	ldr	r2, [r4, #28]
 800a562:	f020 001f 	bic.w	r0, r0, #31
 800a566:	3a01      	subs	r2, #1
 800a568:	4302      	orrs	r2, r0
 800a56a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800a56e:	065b      	lsls	r3, r3, #25
 800a570:	d509      	bpl.n	800a586 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800a572:	1d20      	adds	r0, r4, #4
 800a574:	c80b      	ldmia	r0, {r0, r1, r3}
 800a576:	061b      	lsls	r3, r3, #24
 800a578:	4a6b      	ldr	r2, [pc, #428]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a57a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a57e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800a582:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800a586:	4b67      	ldr	r3, [pc, #412]	; (800a724 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a588:	4e67      	ldr	r6, [pc, #412]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800a58a:	2201      	movs	r2, #1
 800a58c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800a58e:	f7fd fb7d 	bl	8007c8c <HAL_GetTick>
 800a592:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a594:	e004      	b.n	800a5a0 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800a596:	f7fd fb79 	bl	8007c8c <HAL_GetTick>
 800a59a:	1b40      	subs	r0, r0, r5
 800a59c:	2802      	cmp	r0, #2
 800a59e:	d812      	bhi.n	800a5c6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a5a0:	6833      	ldr	r3, [r6, #0]
 800a5a2:	011f      	lsls	r7, r3, #4
 800a5a4:	d5f7      	bpl.n	800a596 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800a5a6:	6823      	ldr	r3, [r4, #0]
 800a5a8:	e79d      	b.n	800a4e6 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800a5aa:	f7fd fb6f 	bl	8007c8c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a5ae:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800a5b2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a5b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800a5b6:	079b      	lsls	r3, r3, #30
 800a5b8:	f100 80a5 	bmi.w	800a706 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a5bc:	f7fd fb66 	bl	8007c8c <HAL_GetTick>
 800a5c0:	1b80      	subs	r0, r0, r6
 800a5c2:	42b8      	cmp	r0, r7
 800a5c4:	d9f6      	bls.n	800a5b4 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800a5c6:	2003      	movs	r0, #3
}
 800a5c8:	b003      	add	sp, #12
 800a5ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800a5cc:	4b55      	ldr	r3, [pc, #340]	; (800a724 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a5ce:	4e56      	ldr	r6, [pc, #344]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800a5d0:	2200      	movs	r2, #0
 800a5d2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800a5d4:	f7fd fb5a 	bl	8007c8c <HAL_GetTick>
 800a5d8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a5da:	e004      	b.n	800a5e6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800a5dc:	f7fd fb56 	bl	8007c8c <HAL_GetTick>
 800a5e0:	1b43      	subs	r3, r0, r5
 800a5e2:	2b02      	cmp	r3, #2
 800a5e4:	d8ef      	bhi.n	800a5c6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a5e6:	6833      	ldr	r3, [r6, #0]
 800a5e8:	0098      	lsls	r0, r3, #2
 800a5ea:	d4f7      	bmi.n	800a5dc <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800a5ec:	6822      	ldr	r2, [r4, #0]
 800a5ee:	0751      	lsls	r1, r2, #29
 800a5f0:	d515      	bpl.n	800a61e <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a5f2:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800a5f4:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a5f8:	6920      	ldr	r0, [r4, #16]
 800a5fa:	061b      	lsls	r3, r3, #24
 800a5fc:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800a600:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a604:	430b      	orrs	r3, r1
 800a606:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800a60a:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800a60e:	6a21      	ldr	r1, [r4, #32]
 800a610:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800a614:	3901      	subs	r1, #1
 800a616:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800a61a:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800a61e:	0713      	lsls	r3, r2, #28
 800a620:	d514      	bpl.n	800a64c <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a622:	4a41      	ldr	r2, [pc, #260]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800a624:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a626:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800a62a:	6920      	ldr	r0, [r4, #16]
 800a62c:	071b      	lsls	r3, r3, #28
 800a62e:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800a632:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a636:	430b      	orrs	r3, r1
 800a638:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800a63c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800a640:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a642:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800a646:	430b      	orrs	r3, r1
 800a648:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800a64c:	4b35      	ldr	r3, [pc, #212]	; (800a724 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a64e:	4e36      	ldr	r6, [pc, #216]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800a650:	2201      	movs	r2, #1
 800a652:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800a654:	f7fd fb1a 	bl	8007c8c <HAL_GetTick>
 800a658:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a65a:	e004      	b.n	800a666 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800a65c:	f7fd fb16 	bl	8007c8c <HAL_GetTick>
 800a660:	1b40      	subs	r0, r0, r5
 800a662:	2802      	cmp	r0, #2
 800a664:	d8af      	bhi.n	800a5c6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a666:	6833      	ldr	r3, [r6, #0]
 800a668:	009f      	lsls	r7, r3, #2
 800a66a:	d5f7      	bpl.n	800a65c <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800a66c:	6823      	ldr	r3, [r4, #0]
 800a66e:	e73d      	b.n	800a4ec <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800a670:	4618      	mov	r0, r3
}
 800a672:	b003      	add	sp, #12
 800a674:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800a676:	4b2c      	ldr	r3, [pc, #176]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800a678:	4d2c      	ldr	r5, [pc, #176]	; (800a72c <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800a67a:	2200      	movs	r2, #0
 800a67c:	9201      	str	r2, [sp, #4]
 800a67e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800a680:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800a684:	641a      	str	r2, [r3, #64]	; 0x40
 800a686:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a688:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a68c:	9301      	str	r3, [sp, #4]
 800a68e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800a690:	682b      	ldr	r3, [r5, #0]
 800a692:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a696:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800a698:	f7fd faf8 	bl	8007c8c <HAL_GetTick>
 800a69c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800a69e:	e004      	b.n	800a6aa <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800a6a0:	f7fd faf4 	bl	8007c8c <HAL_GetTick>
 800a6a4:	1b83      	subs	r3, r0, r6
 800a6a6:	2b02      	cmp	r3, #2
 800a6a8:	d88d      	bhi.n	800a5c6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800a6aa:	682b      	ldr	r3, [r5, #0]
 800a6ac:	05d9      	lsls	r1, r3, #23
 800a6ae:	d5f7      	bpl.n	800a6a0 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a6b0:	4d1d      	ldr	r5, [pc, #116]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a6b2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a6b4:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a6b6:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800a6ba:	d111      	bne.n	800a6e0 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800a6bc:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800a6c0:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800a6c4:	d021      	beq.n	800a70a <HAL_RCCEx_PeriphCLKConfig+0x232>
 800a6c6:	4918      	ldr	r1, [pc, #96]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a6c8:	688a      	ldr	r2, [r1, #8]
 800a6ca:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800a6ce:	608a      	str	r2, [r1, #8]
 800a6d0:	4a15      	ldr	r2, [pc, #84]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a6d2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800a6d4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a6d8:	430b      	orrs	r3, r1
 800a6da:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800a6dc:	6823      	ldr	r3, [r4, #0]
 800a6de:	e708      	b.n	800a4f2 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a6e0:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800a6e4:	4291      	cmp	r1, r2
 800a6e6:	d0eb      	beq.n	800a6c0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800a6e8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800a6ea:	4a0e      	ldr	r2, [pc, #56]	; (800a724 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800a6ec:	2101      	movs	r1, #1
 800a6ee:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800a6f2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800a6f6:	2100      	movs	r1, #0
 800a6f8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800a6fc:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800a6fe:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800a700:	07da      	lsls	r2, r3, #31
 800a702:	f53f af52 	bmi.w	800a5aa <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800a706:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800a708:	e7d8      	b.n	800a6bc <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800a70a:	4807      	ldr	r0, [pc, #28]	; (800a728 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a70c:	6882      	ldr	r2, [r0, #8]
 800a70e:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800a712:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800a716:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800a71a:	430a      	orrs	r2, r1
 800a71c:	6082      	str	r2, [r0, #8]
 800a71e:	e7d7      	b.n	800a6d0 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800a720:	42471000 	.word	0x42471000
 800a724:	42470000 	.word	0x42470000
 800a728:	40023800 	.word	0x40023800
 800a72c:	40007000 	.word	0x40007000

0800a730 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800a730:	b1f0      	cbz	r0, 800a770 <HAL_SDRAM_Init+0x40>
{
 800a732:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800a734:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a738:	460d      	mov	r5, r1
 800a73a:	4604      	mov	r4, r0
 800a73c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a740:	b18b      	cbz	r3, 800a766 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800a742:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a744:	2302      	movs	r3, #2
 800a746:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800a74a:	f851 0b04 	ldr.w	r0, [r1], #4
 800a74e:	f000 ffcd 	bl	800b6ec <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800a752:	e9d4 0200 	ldrd	r0, r2, [r4]
 800a756:	4629      	mov	r1, r5
 800a758:	f001 f806 	bl	800b768 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800a75c:	2301      	movs	r3, #1
 800a75e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800a762:	2000      	movs	r0, #0
}
 800a764:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800a766:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800a76a:	f7f7 fc19 	bl	8001fa0 <HAL_SDRAM_MspInit>
 800a76e:	e7e8      	b.n	800a742 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800a770:	2001      	movs	r0, #1
}
 800a772:	4770      	bx	lr

0800a774 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800a774:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800a776:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800a77a:	2b02      	cmp	r3, #2
{
 800a77c:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800a77e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800a780:	d004      	beq.n	800a78c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800a782:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800a786:	2c01      	cmp	r4, #1
 800a788:	d001      	beq.n	800a78e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800a78a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800a78c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a78e:	460e      	mov	r6, r1
 800a790:	2302      	movs	r3, #2
 800a792:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800a796:	6828      	ldr	r0, [r5, #0]
 800a798:	f001 f832 	bl	800b800 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800a79c:	6833      	ldr	r3, [r6, #0]
 800a79e:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800a7a0:	bf06      	itte	eq
 800a7a2:	2305      	moveq	r3, #5
 800a7a4:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800a7a8:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800a7ac:	2000      	movs	r0, #0
}
 800a7ae:	bd70      	pop	{r4, r5, r6, pc}

0800a7b0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800a7b0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800a7b2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a7b6:	2b02      	cmp	r3, #2
{
 800a7b8:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800a7ba:	b2d8      	uxtb	r0, r3
 800a7bc:	d005      	beq.n	800a7ca <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800a7be:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800a7c2:	2b01      	cmp	r3, #1
 800a7c4:	b2dd      	uxtb	r5, r3
 800a7c6:	d001      	beq.n	800a7cc <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800a7c8:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800a7ca:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a7cc:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800a7ce:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a7d0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800a7d4:	f001 f83e 	bl	800b854 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800a7d8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800a7dc:	2000      	movs	r0, #0
}
 800a7de:	bd38      	pop	{r3, r4, r5, pc}

0800a7e0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800a7e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a7e4:	b082      	sub	sp, #8
 800a7e6:	461d      	mov	r5, r3
 800a7e8:	4616      	mov	r6, r2
 800a7ea:	460c      	mov	r4, r1
 800a7ec:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800a7ee:	f7fd fa4d 	bl	8007c8c <HAL_GetTick>
 800a7f2:	4435      	add	r5, r6
 800a7f4:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800a7f6:	f7fd fa49 	bl	8007c8c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a7fa:	4b27      	ldr	r3, [pc, #156]	; (800a898 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800a7fc:	681b      	ldr	r3, [r3, #0]
 800a7fe:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800a802:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800a806:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a808:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a80a:	1c73      	adds	r3, r6, #1
 800a80c:	6839      	ldr	r1, [r7, #0]
 800a80e:	d107      	bne.n	800a820 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800a810:	688b      	ldr	r3, [r1, #8]
 800a812:	ea34 0303 	bics.w	r3, r4, r3
 800a816:	d0fb      	beq.n	800a810 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800a818:	2000      	movs	r0, #0
}
 800a81a:	b002      	add	sp, #8
 800a81c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a820:	688b      	ldr	r3, [r1, #8]
 800a822:	ea34 0303 	bics.w	r3, r4, r3
 800a826:	d1f7      	bne.n	800a818 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800a828:	f7fd fa30 	bl	8007c8c <HAL_GetTick>
 800a82c:	eba0 0008 	sub.w	r0, r0, r8
 800a830:	42a8      	cmp	r0, r5
 800a832:	d208      	bcs.n	800a846 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800a834:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800a836:	2b00      	cmp	r3, #0
      count--;
 800a838:	9b01      	ldr	r3, [sp, #4]
 800a83a:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800a83e:	bf08      	it	eq
 800a840:	2500      	moveq	r5, #0
      count--;
 800a842:	9301      	str	r3, [sp, #4]
 800a844:	e7e1      	b.n	800a80a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a846:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a84a:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a84c:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a850:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800a854:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a856:	d013      	beq.n	800a880 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800a858:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a85a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800a85e:	d107      	bne.n	800a870 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800a860:	681a      	ldr	r2, [r3, #0]
 800a862:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a866:	601a      	str	r2, [r3, #0]
 800a868:	681a      	ldr	r2, [r3, #0]
 800a86a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a86e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800a870:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800a872:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800a874:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800a878:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800a87c:	2003      	movs	r0, #3
 800a87e:	e7cc      	b.n	800a81a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a880:	68ba      	ldr	r2, [r7, #8]
 800a882:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800a886:	d002      	beq.n	800a88e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a888:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a88c:	d1e4      	bne.n	800a858 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800a88e:	681a      	ldr	r2, [r3, #0]
 800a890:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a894:	601a      	str	r2, [r3, #0]
 800a896:	e7df      	b.n	800a858 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800a898:	20000078 	.word	0x20000078

0800a89c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800a89c:	b538      	push	{r3, r4, r5, lr}
 800a89e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a8a0:	6842      	ldr	r2, [r0, #4]
 800a8a2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800a8a6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a8a8:	d006      	beq.n	800a8b8 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a8aa:	460a      	mov	r2, r1
 800a8ac:	2101      	movs	r1, #1
 800a8ae:	f7ff ff97 	bl	800a7e0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a8b2:	b978      	cbnz	r0, 800a8d4 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800a8b4:	2000      	movs	r0, #0
}
 800a8b6:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a8b8:	6882      	ldr	r2, [r0, #8]
 800a8ba:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800a8be:	d01c      	beq.n	800a8fa <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a8c0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a8c4:	d00c      	beq.n	800a8e0 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a8c6:	460a      	mov	r2, r1
 800a8c8:	4620      	mov	r0, r4
 800a8ca:	2180      	movs	r1, #128	; 0x80
 800a8cc:	f7ff ff88 	bl	800a7e0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a8d0:	2800      	cmp	r0, #0
 800a8d2:	d0ef      	beq.n	800a8b4 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a8d4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a8d6:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800a8da:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a8dc:	6563      	str	r3, [r4, #84]	; 0x54
}
 800a8de:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800a8e0:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a8e2:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800a8e4:	6829      	ldr	r1, [r5, #0]
 800a8e6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800a8ea:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a8ec:	2101      	movs	r1, #1
 800a8ee:	f7ff ff77 	bl	800a7e0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a8f2:	2800      	cmp	r0, #0
 800a8f4:	d1ee      	bne.n	800a8d4 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800a8f6:	2000      	movs	r0, #0
 800a8f8:	e7dd      	b.n	800a8b6 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800a8fa:	6800      	ldr	r0, [r0, #0]
 800a8fc:	6802      	ldr	r2, [r0, #0]
 800a8fe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a902:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a904:	460a      	mov	r2, r1
 800a906:	4620      	mov	r0, r4
 800a908:	2180      	movs	r1, #128	; 0x80
 800a90a:	f7ff ff69 	bl	800a7e0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a90e:	2800      	cmp	r0, #0
 800a910:	d0d0      	beq.n	800a8b4 <SPI_EndRxTransaction+0x18>
 800a912:	e7df      	b.n	800a8d4 <SPI_EndRxTransaction+0x38>

0800a914 <HAL_SPI_Init>:
  if (hspi == NULL)
 800a914:	2800      	cmp	r0, #0
 800a916:	d05c      	beq.n	800a9d2 <HAL_SPI_Init+0xbe>
{
 800a918:	b570      	push	{r4, r5, r6, lr}
 800a91a:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800a91c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800a91e:	2800      	cmp	r0, #0
 800a920:	d047      	beq.n	800a9b2 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800a922:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800a924:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800a928:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800a92c:	2200      	movs	r2, #0
 800a92e:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800a930:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800a934:	2b00      	cmp	r3, #0
 800a936:	d042      	beq.n	800a9be <HAL_SPI_Init+0xaa>
 800a938:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800a93a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a93c:	68a5      	ldr	r5, [r4, #8]
 800a93e:	69a2      	ldr	r2, [r4, #24]
 800a940:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800a942:	2302      	movs	r3, #2
 800a944:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800a948:	680b      	ldr	r3, [r1, #0]
 800a94a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a94e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a950:	6863      	ldr	r3, [r4, #4]
 800a952:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800a956:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800a95a:	432b      	orrs	r3, r5
 800a95c:	68e5      	ldr	r5, [r4, #12]
 800a95e:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800a962:	432b      	orrs	r3, r5
 800a964:	6925      	ldr	r5, [r4, #16]
 800a966:	f005 0502 	and.w	r5, r5, #2
 800a96a:	432b      	orrs	r3, r5
 800a96c:	6965      	ldr	r5, [r4, #20]
 800a96e:	f005 0501 	and.w	r5, r5, #1
 800a972:	432b      	orrs	r3, r5
 800a974:	69e5      	ldr	r5, [r4, #28]
 800a976:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800a97a:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800a97e:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800a982:	4333      	orrs	r3, r6
 800a984:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a986:	0c12      	lsrs	r2, r2, #16
 800a988:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a98c:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a990:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a994:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a998:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a99a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a99c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a99e:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800a9a0:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a9a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800a9a6:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a9a8:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800a9aa:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800a9ac:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800a9b0:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a9b2:	6863      	ldr	r3, [r4, #4]
 800a9b4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a9b8:	d0b6      	beq.n	800a928 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800a9ba:	61e0      	str	r0, [r4, #28]
 800a9bc:	e7b4      	b.n	800a928 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800a9be:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800a9c0:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800a9c4:	f7f7 fa84 	bl	8001ed0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a9c8:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a9cc:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800a9d0:	e7b3      	b.n	800a93a <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800a9d2:	2001      	movs	r0, #1
}
 800a9d4:	4770      	bx	lr
 800a9d6:	bf00      	nop

0800a9d8 <HAL_SPI_Transmit>:
{
 800a9d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a9dc:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800a9de:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800a9e2:	2801      	cmp	r0, #1
{
 800a9e4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800a9e6:	f000 8085 	beq.w	800aaf4 <HAL_SPI_Transmit+0x11c>
 800a9ea:	461d      	mov	r5, r3
 800a9ec:	2301      	movs	r3, #1
 800a9ee:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800a9f2:	4688      	mov	r8, r1
 800a9f4:	4617      	mov	r7, r2
 800a9f6:	f7fd f949 	bl	8007c8c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800a9fa:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800a9fe:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800aa00:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800aa02:	b2d8      	uxtb	r0, r3
 800aa04:	d009      	beq.n	800aa1a <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800aa06:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800aa08:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800aa0a:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800aa0c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800aa10:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800aa14:	b002      	add	sp, #8
 800aa16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800aa1a:	f1b8 0f00 	cmp.w	r8, #0
 800aa1e:	d0f3      	beq.n	800aa08 <HAL_SPI_Transmit+0x30>
 800aa20:	2f00      	cmp	r7, #0
 800aa22:	d0f1      	beq.n	800aa08 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aa24:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800aa26:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800aa28:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800aa2c:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800aa2e:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aa30:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800aa34:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800aa38:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800aa3c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800aa3e:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800aa40:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800aa42:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800aa44:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800aa46:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aa48:	f000 8085 	beq.w	800ab56 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800aa4c:	6803      	ldr	r3, [r0, #0]
 800aa4e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800aa50:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800aa52:	d403      	bmi.n	800aa5c <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800aa54:	6803      	ldr	r3, [r0, #0]
 800aa56:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800aa5a:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800aa5c:	68e3      	ldr	r3, [r4, #12]
 800aa5e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800aa62:	d04b      	beq.n	800aafc <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800aa64:	6863      	ldr	r3, [r4, #4]
 800aa66:	2b00      	cmp	r3, #0
 800aa68:	f000 8097 	beq.w	800ab9a <HAL_SPI_Transmit+0x1c2>
 800aa6c:	2f01      	cmp	r7, #1
 800aa6e:	f000 8094 	beq.w	800ab9a <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800aa72:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800aa74:	b29b      	uxth	r3, r3
 800aa76:	b1ab      	cbz	r3, 800aaa4 <HAL_SPI_Transmit+0xcc>
 800aa78:	1c68      	adds	r0, r5, #1
 800aa7a:	f040 8083 	bne.w	800ab84 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800aa7e:	6823      	ldr	r3, [r4, #0]
 800aa80:	689a      	ldr	r2, [r3, #8]
 800aa82:	0791      	lsls	r1, r2, #30
 800aa84:	f140 8094 	bpl.w	800abb0 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800aa88:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800aa8a:	7812      	ldrb	r2, [r2, #0]
 800aa8c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800aa8e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800aa90:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800aa92:	3901      	subs	r1, #1
 800aa94:	b289      	uxth	r1, r1
 800aa96:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800aa98:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800aa9a:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800aa9c:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800aa9e:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800aaa0:	2900      	cmp	r1, #0
 800aaa2:	d1ec      	bne.n	800aa7e <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800aaa4:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800aaa6:	4b5b      	ldr	r3, [pc, #364]	; (800ac14 <HAL_SPI_Transmit+0x23c>)
 800aaa8:	4a5b      	ldr	r2, [pc, #364]	; (800ac18 <HAL_SPI_Transmit+0x240>)
 800aaaa:	681b      	ldr	r3, [r3, #0]
 800aaac:	fba2 2303 	umull	r2, r3, r2, r3
 800aab0:	0d5b      	lsrs	r3, r3, #21
 800aab2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800aab6:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800aaba:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800aabe:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800aac0:	d107      	bne.n	800aad2 <HAL_SPI_Transmit+0xfa>
 800aac2:	e098      	b.n	800abf6 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800aac4:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800aac6:	6822      	ldr	r2, [r4, #0]
      count--;
 800aac8:	3b01      	subs	r3, #1
 800aaca:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800aacc:	6893      	ldr	r3, [r2, #8]
 800aace:	061b      	lsls	r3, r3, #24
 800aad0:	d502      	bpl.n	800aad8 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800aad2:	9b01      	ldr	r3, [sp, #4]
 800aad4:	2b00      	cmp	r3, #0
 800aad6:	d1f5      	bne.n	800aac4 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800aad8:	68a3      	ldr	r3, [r4, #8]
 800aada:	b933      	cbnz	r3, 800aaea <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800aadc:	6822      	ldr	r2, [r4, #0]
 800aade:	9300      	str	r3, [sp, #0]
 800aae0:	68d3      	ldr	r3, [r2, #12]
 800aae2:	9300      	str	r3, [sp, #0]
 800aae4:	6893      	ldr	r3, [r2, #8]
 800aae6:	9300      	str	r3, [sp, #0]
 800aae8:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800aaea:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800aaec:	3800      	subs	r0, #0
 800aaee:	bf18      	it	ne
 800aaf0:	2001      	movne	r0, #1
error:
 800aaf2:	e789      	b.n	800aa08 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800aaf4:	2002      	movs	r0, #2
}
 800aaf6:	b002      	add	sp, #8
 800aaf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800aafc:	6861      	ldr	r1, [r4, #4]
 800aafe:	2900      	cmp	r1, #0
 800ab00:	d176      	bne.n	800abf0 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ab02:	4643      	mov	r3, r8
 800ab04:	f833 7b02 	ldrh.w	r7, [r3], #2
 800ab08:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ab0a:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ab0c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab0e:	3b01      	subs	r3, #1
 800ab10:	b29b      	uxth	r3, r3
 800ab12:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ab14:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab16:	b29b      	uxth	r3, r3
 800ab18:	2b00      	cmp	r3, #0
 800ab1a:	d0c4      	beq.n	800aaa6 <HAL_SPI_Transmit+0xce>
 800ab1c:	1c6b      	adds	r3, r5, #1
 800ab1e:	d15e      	bne.n	800abde <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ab20:	6883      	ldr	r3, [r0, #8]
 800ab22:	079f      	lsls	r7, r3, #30
 800ab24:	d50f      	bpl.n	800ab46 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ab26:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ab28:	f832 3b02 	ldrh.w	r3, [r2], #2
 800ab2c:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800ab2e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ab30:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ab32:	3b01      	subs	r3, #1
 800ab34:	b29b      	uxth	r3, r3
 800ab36:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ab38:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab3a:	b29b      	uxth	r3, r3
 800ab3c:	2b00      	cmp	r3, #0
 800ab3e:	d0b1      	beq.n	800aaa4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ab40:	6883      	ldr	r3, [r0, #8]
 800ab42:	079f      	lsls	r7, r3, #30
 800ab44:	d4ef      	bmi.n	800ab26 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ab46:	f7fd f8a1 	bl	8007c8c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800ab4a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab4c:	b29b      	uxth	r3, r3
 800ab4e:	2b00      	cmp	r3, #0
 800ab50:	d0a8      	beq.n	800aaa4 <HAL_SPI_Transmit+0xcc>
 800ab52:	6820      	ldr	r0, [r4, #0]
 800ab54:	e7e4      	b.n	800ab20 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800ab56:	6803      	ldr	r3, [r0, #0]
 800ab58:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ab5c:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800ab5e:	6803      	ldr	r3, [r0, #0]
 800ab60:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800ab64:	6003      	str	r3, [r0, #0]
 800ab66:	e771      	b.n	800aa4c <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ab68:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ab6a:	7812      	ldrb	r2, [r2, #0]
 800ab6c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800ab6e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ab70:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ab72:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ab74:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ab76:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ab78:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ab7a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ab7c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab7e:	b29b      	uxth	r3, r3
 800ab80:	2b00      	cmp	r3, #0
 800ab82:	d08f      	beq.n	800aaa4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ab84:	6823      	ldr	r3, [r4, #0]
 800ab86:	689a      	ldr	r2, [r3, #8]
 800ab88:	0792      	lsls	r2, r2, #30
 800ab8a:	d4ed      	bmi.n	800ab68 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ab8c:	f7fd f87e 	bl	8007c8c <HAL_GetTick>
 800ab90:	1b80      	subs	r0, r0, r6
 800ab92:	42a8      	cmp	r0, r5
 800ab94:	d3f2      	bcc.n	800ab7c <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800ab96:	2003      	movs	r0, #3
 800ab98:	e736      	b.n	800aa08 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ab9a:	f898 3000 	ldrb.w	r3, [r8]
 800ab9e:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800aba0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800aba2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800aba4:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800aba6:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800aba8:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800abaa:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800abac:	86e3      	strh	r3, [r4, #54]	; 0x36
 800abae:	e760      	b.n	800aa72 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800abb0:	f7fd f86c 	bl	8007c8c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800abb4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800abb6:	b29b      	uxth	r3, r3
 800abb8:	2b00      	cmp	r3, #0
 800abba:	f47f af60 	bne.w	800aa7e <HAL_SPI_Transmit+0xa6>
 800abbe:	e771      	b.n	800aaa4 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800abc0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800abc2:	f831 3b02 	ldrh.w	r3, [r1], #2
 800abc6:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800abc8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800abca:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800abcc:	3b01      	subs	r3, #1
 800abce:	b29b      	uxth	r3, r3
 800abd0:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800abd2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800abd4:	b29b      	uxth	r3, r3
 800abd6:	2b00      	cmp	r3, #0
 800abd8:	f43f af64 	beq.w	800aaa4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800abdc:	6822      	ldr	r2, [r4, #0]
 800abde:	6893      	ldr	r3, [r2, #8]
 800abe0:	0799      	lsls	r1, r3, #30
 800abe2:	d4ed      	bmi.n	800abc0 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800abe4:	f7fd f852 	bl	8007c8c <HAL_GetTick>
 800abe8:	1b80      	subs	r0, r0, r6
 800abea:	42a8      	cmp	r0, r5
 800abec:	d3f1      	bcc.n	800abd2 <HAL_SPI_Transmit+0x1fa>
 800abee:	e7d2      	b.n	800ab96 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800abf0:	2f01      	cmp	r7, #1
 800abf2:	d18f      	bne.n	800ab14 <HAL_SPI_Transmit+0x13c>
 800abf4:	e785      	b.n	800ab02 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800abf6:	4633      	mov	r3, r6
 800abf8:	462a      	mov	r2, r5
 800abfa:	2180      	movs	r1, #128	; 0x80
 800abfc:	4620      	mov	r0, r4
 800abfe:	f7ff fdef 	bl	800a7e0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ac02:	2800      	cmp	r0, #0
 800ac04:	f43f af68 	beq.w	800aad8 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ac08:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ac0a:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ac0c:	4313      	orrs	r3, r2
 800ac0e:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ac10:	6562      	str	r2, [r4, #84]	; 0x54
 800ac12:	e761      	b.n	800aad8 <HAL_SPI_Transmit+0x100>
 800ac14:	20000078 	.word	0x20000078
 800ac18:	165e9f81 	.word	0x165e9f81

0800ac1c <HAL_SPI_TransmitReceive>:
{
 800ac1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac20:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800ac22:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800ac26:	2801      	cmp	r0, #1
{
 800ac28:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800ac2a:	f000 80ac 	beq.w	800ad86 <HAL_SPI_TransmitReceive+0x16a>
 800ac2e:	461e      	mov	r6, r3
 800ac30:	2301      	movs	r3, #1
 800ac32:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800ac36:	4690      	mov	r8, r2
 800ac38:	460f      	mov	r7, r1
 800ac3a:	f7fd f827 	bl	8007c8c <HAL_GetTick>
 800ac3e:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800ac40:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800ac44:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ac46:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800ac48:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ac4a:	d011      	beq.n	800ac70 <HAL_SPI_TransmitReceive+0x54>
 800ac4c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800ac50:	d009      	beq.n	800ac66 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800ac52:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ac54:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ac56:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ac58:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ac5c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ac60:	b002      	add	sp, #8
 800ac62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800ac66:	68a1      	ldr	r1, [r4, #8]
 800ac68:	2900      	cmp	r1, #0
 800ac6a:	d1f2      	bne.n	800ac52 <HAL_SPI_TransmitReceive+0x36>
 800ac6c:	2a04      	cmp	r2, #4
 800ac6e:	d1f0      	bne.n	800ac52 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800ac70:	2f00      	cmp	r7, #0
 800ac72:	f000 808c 	beq.w	800ad8e <HAL_SPI_TransmitReceive+0x172>
 800ac76:	f1b8 0f00 	cmp.w	r8, #0
 800ac7a:	f000 8088 	beq.w	800ad8e <HAL_SPI_TransmitReceive+0x172>
 800ac7e:	2e00      	cmp	r6, #0
 800ac80:	f000 8085 	beq.w	800ad8e <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800ac84:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800ac88:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800ac8c:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800ac8e:	bf1c      	itt	ne
 800ac90:	2205      	movne	r2, #5
 800ac92:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ac96:	2200      	movs	r2, #0
 800ac98:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800ac9a:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ac9e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800aca0:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800aca2:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800aca4:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800aca6:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800aca8:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800acaa:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800acac:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800acae:	d403      	bmi.n	800acb8 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800acb0:	6811      	ldr	r1, [r2, #0]
 800acb2:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800acb6:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800acb8:	68e1      	ldr	r1, [r4, #12]
 800acba:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800acbe:	f000 809e 	beq.w	800adfe <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800acc2:	2b00      	cmp	r3, #0
 800acc4:	f000 8091 	beq.w	800adea <HAL_SPI_TransmitReceive+0x1ce>
 800acc8:	2e01      	cmp	r6, #1
 800acca:	f000 808e 	beq.w	800adea <HAL_SPI_TransmitReceive+0x1ce>
 800acce:	9b08      	ldr	r3, [sp, #32]
 800acd0:	3301      	adds	r3, #1
        txallowed = 1U;
 800acd2:	f04f 0601 	mov.w	r6, #1
 800acd6:	d028      	beq.n	800ad2a <HAL_SPI_TransmitReceive+0x10e>
 800acd8:	e05b      	b.n	800ad92 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800acda:	6821      	ldr	r1, [r4, #0]
 800acdc:	688b      	ldr	r3, [r1, #8]
 800acde:	0798      	lsls	r0, r3, #30
 800ace0:	d50f      	bpl.n	800ad02 <HAL_SPI_TransmitReceive+0xe6>
 800ace2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ace4:	b29b      	uxth	r3, r3
 800ace6:	b163      	cbz	r3, 800ad02 <HAL_SPI_TransmitReceive+0xe6>
 800ace8:	b15e      	cbz	r6, 800ad02 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800acea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800acec:	781b      	ldrb	r3, [r3, #0]
 800acee:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800acf0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800acf2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800acf4:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800acf6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800acf8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800acfa:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800acfc:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800acfe:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ad00:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ad02:	688a      	ldr	r2, [r1, #8]
 800ad04:	f012 0201 	ands.w	r2, r2, #1
 800ad08:	d00d      	beq.n	800ad26 <HAL_SPI_TransmitReceive+0x10a>
 800ad0a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ad0c:	b29b      	uxth	r3, r3
 800ad0e:	b153      	cbz	r3, 800ad26 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800ad10:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ad12:	68c9      	ldr	r1, [r1, #12]
 800ad14:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800ad16:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800ad18:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ad1a:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800ad1c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800ad1e:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800ad20:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ad22:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800ad24:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ad26:	f7fc ffb1 	bl	8007c8c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ad2a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ad2c:	b292      	uxth	r2, r2
 800ad2e:	2a00      	cmp	r2, #0
 800ad30:	d1d3      	bne.n	800acda <HAL_SPI_TransmitReceive+0xbe>
 800ad32:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ad34:	b29b      	uxth	r3, r3
 800ad36:	2b00      	cmp	r3, #0
 800ad38:	d1cf      	bne.n	800acda <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ad3a:	4b79      	ldr	r3, [pc, #484]	; (800af20 <HAL_SPI_TransmitReceive+0x304>)
 800ad3c:	4a79      	ldr	r2, [pc, #484]	; (800af24 <HAL_SPI_TransmitReceive+0x308>)
 800ad3e:	681b      	ldr	r3, [r3, #0]
 800ad40:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ad44:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ad46:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ad4a:	0d5b      	lsrs	r3, r3, #21
 800ad4c:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ad50:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ad54:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ad56:	d107      	bne.n	800ad68 <HAL_SPI_TransmitReceive+0x14c>
 800ad58:	e0d2      	b.n	800af00 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800ad5a:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ad5c:	6822      	ldr	r2, [r4, #0]
      count--;
 800ad5e:	3b01      	subs	r3, #1
 800ad60:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ad62:	6893      	ldr	r3, [r2, #8]
 800ad64:	061b      	lsls	r3, r3, #24
 800ad66:	d502      	bpl.n	800ad6e <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800ad68:	9b01      	ldr	r3, [sp, #4]
 800ad6a:	2b00      	cmp	r3, #0
 800ad6c:	d1f5      	bne.n	800ad5a <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ad6e:	68a0      	ldr	r0, [r4, #8]
 800ad70:	2800      	cmp	r0, #0
 800ad72:	f040 8082 	bne.w	800ae7a <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800ad76:	6823      	ldr	r3, [r4, #0]
 800ad78:	9000      	str	r0, [sp, #0]
 800ad7a:	68da      	ldr	r2, [r3, #12]
 800ad7c:	9200      	str	r2, [sp, #0]
 800ad7e:	689b      	ldr	r3, [r3, #8]
 800ad80:	9300      	str	r3, [sp, #0]
 800ad82:	9b00      	ldr	r3, [sp, #0]
 800ad84:	e766      	b.n	800ac54 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800ad86:	2002      	movs	r0, #2
}
 800ad88:	b002      	add	sp, #8
 800ad8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800ad8e:	2001      	movs	r0, #1
 800ad90:	e760      	b.n	800ac54 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ad92:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ad94:	b29b      	uxth	r3, r3
 800ad96:	b91b      	cbnz	r3, 800ada0 <HAL_SPI_TransmitReceive+0x184>
 800ad98:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ad9a:	b29b      	uxth	r3, r3
 800ad9c:	2b00      	cmp	r3, #0
 800ad9e:	d0cc      	beq.n	800ad3a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ada0:	6822      	ldr	r2, [r4, #0]
 800ada2:	6893      	ldr	r3, [r2, #8]
 800ada4:	0799      	lsls	r1, r3, #30
 800ada6:	d50f      	bpl.n	800adc8 <HAL_SPI_TransmitReceive+0x1ac>
 800ada8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800adaa:	b29b      	uxth	r3, r3
 800adac:	b163      	cbz	r3, 800adc8 <HAL_SPI_TransmitReceive+0x1ac>
 800adae:	b15e      	cbz	r6, 800adc8 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800adb0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800adb2:	781b      	ldrb	r3, [r3, #0]
 800adb4:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800adb6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800adb8:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800adba:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800adbc:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800adbe:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800adc0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800adc2:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800adc4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800adc6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800adc8:	6893      	ldr	r3, [r2, #8]
 800adca:	f013 0301 	ands.w	r3, r3, #1
 800adce:	d004      	beq.n	800adda <HAL_SPI_TransmitReceive+0x1be>
 800add0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800add2:	b289      	uxth	r1, r1
 800add4:	2900      	cmp	r1, #0
 800add6:	f040 8087 	bne.w	800aee8 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800adda:	f7fc ff57 	bl	8007c8c <HAL_GetTick>
 800adde:	9b08      	ldr	r3, [sp, #32]
 800ade0:	1b40      	subs	r0, r0, r5
 800ade2:	4298      	cmp	r0, r3
 800ade4:	d3d5      	bcc.n	800ad92 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800ade6:	2003      	movs	r0, #3
 800ade8:	e734      	b.n	800ac54 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800adea:	783b      	ldrb	r3, [r7, #0]
 800adec:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800adee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800adf0:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800adf2:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800adf4:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800adf6:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800adf8:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800adfa:	86e3      	strh	r3, [r4, #54]	; 0x36
 800adfc:	e767      	b.n	800acce <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800adfe:	2b00      	cmp	r3, #0
 800ae00:	d13d      	bne.n	800ae7e <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ae02:	f837 3b02 	ldrh.w	r3, [r7], #2
 800ae06:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800ae08:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ae0a:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ae0c:	3b01      	subs	r3, #1
 800ae0e:	b29b      	uxth	r3, r3
 800ae10:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ae12:	9b08      	ldr	r3, [sp, #32]
 800ae14:	3301      	adds	r3, #1
{
 800ae16:	f04f 0601 	mov.w	r6, #1
 800ae1a:	d025      	beq.n	800ae68 <HAL_SPI_TransmitReceive+0x24c>
 800ae1c:	e032      	b.n	800ae84 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ae1e:	6823      	ldr	r3, [r4, #0]
 800ae20:	689a      	ldr	r2, [r3, #8]
 800ae22:	0792      	lsls	r2, r2, #30
 800ae24:	d50d      	bpl.n	800ae42 <HAL_SPI_TransmitReceive+0x226>
 800ae26:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ae28:	b292      	uxth	r2, r2
 800ae2a:	b152      	cbz	r2, 800ae42 <HAL_SPI_TransmitReceive+0x226>
 800ae2c:	b14e      	cbz	r6, 800ae42 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ae2e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ae30:	f831 2b02 	ldrh.w	r2, [r1], #2
 800ae34:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800ae36:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ae38:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ae3a:	3a01      	subs	r2, #1
 800ae3c:	b292      	uxth	r2, r2
        txallowed = 0U;
 800ae3e:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ae40:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ae42:	689a      	ldr	r2, [r3, #8]
 800ae44:	f012 0201 	ands.w	r2, r2, #1
 800ae48:	d00c      	beq.n	800ae64 <HAL_SPI_TransmitReceive+0x248>
 800ae4a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ae4c:	b289      	uxth	r1, r1
 800ae4e:	b149      	cbz	r1, 800ae64 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ae50:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ae52:	68db      	ldr	r3, [r3, #12]
 800ae54:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800ae58:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ae5a:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ae5c:	3b01      	subs	r3, #1
 800ae5e:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800ae60:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800ae62:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800ae64:	f7fc ff12 	bl	8007c8c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ae68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ae6a:	b29b      	uxth	r3, r3
 800ae6c:	2b00      	cmp	r3, #0
 800ae6e:	d1d6      	bne.n	800ae1e <HAL_SPI_TransmitReceive+0x202>
 800ae70:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ae72:	b29b      	uxth	r3, r3
 800ae74:	2b00      	cmp	r3, #0
 800ae76:	d1d2      	bne.n	800ae1e <HAL_SPI_TransmitReceive+0x202>
 800ae78:	e75f      	b.n	800ad3a <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800ae7a:	2000      	movs	r0, #0
 800ae7c:	e6ea      	b.n	800ac54 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ae7e:	2e01      	cmp	r6, #1
 800ae80:	d1c7      	bne.n	800ae12 <HAL_SPI_TransmitReceive+0x1f6>
 800ae82:	e7be      	b.n	800ae02 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ae84:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ae86:	b29b      	uxth	r3, r3
 800ae88:	b923      	cbnz	r3, 800ae94 <HAL_SPI_TransmitReceive+0x278>
 800ae8a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ae8c:	b29b      	uxth	r3, r3
 800ae8e:	2b00      	cmp	r3, #0
 800ae90:	f43f af53 	beq.w	800ad3a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ae94:	6822      	ldr	r2, [r4, #0]
 800ae96:	6893      	ldr	r3, [r2, #8]
 800ae98:	079f      	lsls	r7, r3, #30
 800ae9a:	d50d      	bpl.n	800aeb8 <HAL_SPI_TransmitReceive+0x29c>
 800ae9c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ae9e:	b29b      	uxth	r3, r3
 800aea0:	b153      	cbz	r3, 800aeb8 <HAL_SPI_TransmitReceive+0x29c>
 800aea2:	b14e      	cbz	r6, 800aeb8 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800aea4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800aea6:	f831 3b02 	ldrh.w	r3, [r1], #2
 800aeaa:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800aeac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800aeae:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800aeb0:	3b01      	subs	r3, #1
 800aeb2:	b29b      	uxth	r3, r3
 800aeb4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800aeb6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800aeb8:	6893      	ldr	r3, [r2, #8]
 800aeba:	f013 0301 	ands.w	r3, r3, #1
 800aebe:	d00c      	beq.n	800aeda <HAL_SPI_TransmitReceive+0x2be>
 800aec0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800aec2:	b289      	uxth	r1, r1
 800aec4:	b149      	cbz	r1, 800aeda <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800aec6:	68d1      	ldr	r1, [r2, #12]
 800aec8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800aeca:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800aece:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800aed0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800aed2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800aed4:	3b01      	subs	r3, #1
 800aed6:	b29b      	uxth	r3, r3
 800aed8:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800aeda:	f7fc fed7 	bl	8007c8c <HAL_GetTick>
 800aede:	9b08      	ldr	r3, [sp, #32]
 800aee0:	1b40      	subs	r0, r0, r5
 800aee2:	4298      	cmp	r0, r3
 800aee4:	d3ce      	bcc.n	800ae84 <HAL_SPI_TransmitReceive+0x268>
 800aee6:	e77e      	b.n	800ade6 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800aee8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800aeea:	68d2      	ldr	r2, [r2, #12]
 800aeec:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800aeee:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800aef0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800aef2:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800aef4:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800aef6:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800aef8:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800aefa:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800aefc:	461e      	mov	r6, r3
 800aefe:	e76c      	b.n	800adda <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800af00:	9a08      	ldr	r2, [sp, #32]
 800af02:	462b      	mov	r3, r5
 800af04:	2180      	movs	r1, #128	; 0x80
 800af06:	4620      	mov	r0, r4
 800af08:	f7ff fc6a 	bl	800a7e0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800af0c:	2800      	cmp	r0, #0
 800af0e:	f43f af2e 	beq.w	800ad6e <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800af12:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800af14:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800af16:	4313      	orrs	r3, r2
 800af18:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800af1a:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800af1c:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800af1e:	e699      	b.n	800ac54 <HAL_SPI_TransmitReceive+0x38>
 800af20:	20000078 	.word	0x20000078
 800af24:	165e9f81 	.word	0x165e9f81

0800af28 <HAL_SPI_Receive>:
{
 800af28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800af2c:	6846      	ldr	r6, [r0, #4]
 800af2e:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800af32:	b082      	sub	sp, #8
 800af34:	4604      	mov	r4, r0
 800af36:	4690      	mov	r8, r2
 800af38:	461d      	mov	r5, r3
 800af3a:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800af3c:	d06e      	beq.n	800b01c <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800af3e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800af42:	2b01      	cmp	r3, #1
 800af44:	d076      	beq.n	800b034 <HAL_SPI_Receive+0x10c>
 800af46:	2301      	movs	r3, #1
 800af48:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800af4c:	f7fc fe9e 	bl	8007c8c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800af50:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800af54:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800af58:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800af5a:	fa5f f08c 	uxtb.w	r0, ip
 800af5e:	d009      	beq.n	800af74 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800af60:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800af62:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800af64:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800af66:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800af6a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800af6e:	b002      	add	sp, #8
 800af70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800af74:	2f00      	cmp	r7, #0
 800af76:	d0f4      	beq.n	800af62 <HAL_SPI_Receive+0x3a>
 800af78:	f1b8 0f00 	cmp.w	r8, #0
 800af7c:	d0f1      	beq.n	800af62 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800af7e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800af80:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800af82:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800af86:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800af88:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800af8c:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800af90:	f04f 0104 	mov.w	r1, #4
 800af94:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800af98:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800af9c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800af9e:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800afa0:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800afa2:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800afa6:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800afa8:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800afaa:	d107      	bne.n	800afbc <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800afac:	6811      	ldr	r1, [r2, #0]
 800afae:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800afb2:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800afb4:	6811      	ldr	r1, [r2, #0]
 800afb6:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800afba:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800afbc:	6811      	ldr	r1, [r2, #0]
 800afbe:	0648      	lsls	r0, r1, #25
 800afc0:	d403      	bmi.n	800afca <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800afc2:	6811      	ldr	r1, [r2, #0]
 800afc4:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800afc8:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800afca:	68e1      	ldr	r1, [r4, #12]
 800afcc:	2900      	cmp	r1, #0
 800afce:	d054      	beq.n	800b07a <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800afd0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800afd2:	b289      	uxth	r1, r1
 800afd4:	b1a9      	cbz	r1, 800b002 <HAL_SPI_Receive+0xda>
 800afd6:	1c69      	adds	r1, r5, #1
 800afd8:	d13e      	bne.n	800b058 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800afda:	6893      	ldr	r3, [r2, #8]
 800afdc:	07db      	lsls	r3, r3, #31
 800afde:	d544      	bpl.n	800b06a <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800afe0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800afe2:	68d1      	ldr	r1, [r2, #12]
 800afe4:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800afe8:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800afec:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800afee:	f10c 3cff 	add.w	ip, ip, #4294967295
 800aff2:	fa1f fc8c 	uxth.w	ip, ip
 800aff6:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800affa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800affc:	b29b      	uxth	r3, r3
 800affe:	2b00      	cmp	r3, #0
 800b000:	d1eb      	bne.n	800afda <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800b002:	4632      	mov	r2, r6
 800b004:	4629      	mov	r1, r5
 800b006:	4620      	mov	r0, r4
 800b008:	f7ff fc48 	bl	800a89c <SPI_EndRxTransaction>
 800b00c:	b108      	cbz	r0, 800b012 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b00e:	2320      	movs	r3, #32
 800b010:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b012:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800b014:	3800      	subs	r0, #0
 800b016:	bf18      	it	ne
 800b018:	2001      	movne	r0, #1
error :
 800b01a:	e7a2      	b.n	800af62 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800b01c:	6883      	ldr	r3, [r0, #8]
 800b01e:	2b00      	cmp	r3, #0
 800b020:	d18d      	bne.n	800af3e <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800b022:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800b024:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800b026:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800b028:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800b02c:	460a      	mov	r2, r1
 800b02e:	f7ff fdf5 	bl	800ac1c <HAL_SPI_TransmitReceive>
 800b032:	e79c      	b.n	800af6e <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800b034:	2002      	movs	r0, #2
}
 800b036:	b002      	add	sp, #8
 800b038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800b03c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b03e:	68db      	ldr	r3, [r3, #12]
 800b040:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800b044:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b046:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b048:	3b01      	subs	r3, #1
 800b04a:	b29b      	uxth	r3, r3
 800b04c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b04e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b050:	b29b      	uxth	r3, r3
 800b052:	2b00      	cmp	r3, #0
 800b054:	d0d5      	beq.n	800b002 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b056:	6823      	ldr	r3, [r4, #0]
 800b058:	689a      	ldr	r2, [r3, #8]
 800b05a:	07d2      	lsls	r2, r2, #31
 800b05c:	d4ee      	bmi.n	800b03c <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b05e:	f7fc fe15 	bl	8007c8c <HAL_GetTick>
 800b062:	1b80      	subs	r0, r0, r6
 800b064:	42a8      	cmp	r0, r5
 800b066:	d243      	bcs.n	800b0f0 <HAL_SPI_Receive+0x1c8>
 800b068:	e7f1      	b.n	800b04e <HAL_SPI_Receive+0x126>
 800b06a:	f7fc fe0f 	bl	8007c8c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800b06e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b070:	b29b      	uxth	r3, r3
 800b072:	2b00      	cmp	r3, #0
 800b074:	d0c5      	beq.n	800b002 <HAL_SPI_Receive+0xda>
 800b076:	6822      	ldr	r2, [r4, #0]
 800b078:	e7af      	b.n	800afda <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800b07a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800b07c:	b292      	uxth	r2, r2
 800b07e:	2a00      	cmp	r2, #0
 800b080:	d0bf      	beq.n	800b002 <HAL_SPI_Receive+0xda>
 800b082:	1c6f      	adds	r7, r5, #1
 800b084:	d013      	beq.n	800b0ae <HAL_SPI_Receive+0x186>
 800b086:	e02b      	b.n	800b0e0 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800b088:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b08a:	7b1b      	ldrb	r3, [r3, #12]
 800b08c:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800b08e:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b092:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b094:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b098:	fa1f fc8c 	uxth.w	ip, ip
 800b09c:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b0a0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b0a2:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800b0a4:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b0a6:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800b0a8:	2b00      	cmp	r3, #0
 800b0aa:	d0aa      	beq.n	800b002 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b0ac:	6823      	ldr	r3, [r4, #0]
 800b0ae:	689a      	ldr	r2, [r3, #8]
 800b0b0:	07d0      	lsls	r0, r2, #31
 800b0b2:	d4e9      	bmi.n	800b088 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b0b4:	f7fc fdea 	bl	8007c8c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800b0b8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b0ba:	b29b      	uxth	r3, r3
 800b0bc:	2b00      	cmp	r3, #0
 800b0be:	d1f5      	bne.n	800b0ac <HAL_SPI_Receive+0x184>
 800b0c0:	e79f      	b.n	800b002 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800b0c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b0c4:	7b1b      	ldrb	r3, [r3, #12]
 800b0c6:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800b0c8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b0ca:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b0cc:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b0ce:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800b0d0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b0d2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800b0d4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800b0d6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800b0d8:	b29b      	uxth	r3, r3
 800b0da:	2b00      	cmp	r3, #0
 800b0dc:	d091      	beq.n	800b002 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b0de:	6823      	ldr	r3, [r4, #0]
 800b0e0:	689a      	ldr	r2, [r3, #8]
 800b0e2:	07d1      	lsls	r1, r2, #31
 800b0e4:	d4ed      	bmi.n	800b0c2 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b0e6:	f7fc fdd1 	bl	8007c8c <HAL_GetTick>
 800b0ea:	1b80      	subs	r0, r0, r6
 800b0ec:	42a8      	cmp	r0, r5
 800b0ee:	d3f2      	bcc.n	800b0d6 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800b0f0:	2003      	movs	r0, #3
 800b0f2:	e736      	b.n	800af62 <HAL_SPI_Receive+0x3a>

0800b0f4 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800b0f4:	2800      	cmp	r0, #0
 800b0f6:	f000 8087 	beq.w	800b208 <HAL_TIM_Base_Init+0x114>
{
 800b0fa:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800b0fc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b100:	4604      	mov	r4, r0
 800b102:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b106:	2b00      	cmp	r3, #0
 800b108:	d079      	beq.n	800b1fe <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800b10a:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b10c:	493f      	ldr	r1, [pc, #252]	; (800b20c <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800b10e:	2302      	movs	r3, #2
 800b110:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b114:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800b116:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b118:	d05d      	beq.n	800b1d6 <HAL_TIM_Base_Init+0xe2>
 800b11a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800b11e:	d031      	beq.n	800b184 <HAL_TIM_Base_Init+0x90>
 800b120:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800b124:	428a      	cmp	r2, r1
 800b126:	d02d      	beq.n	800b184 <HAL_TIM_Base_Init+0x90>
 800b128:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b12c:	428a      	cmp	r2, r1
 800b12e:	d029      	beq.n	800b184 <HAL_TIM_Base_Init+0x90>
 800b130:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b134:	428a      	cmp	r2, r1
 800b136:	d025      	beq.n	800b184 <HAL_TIM_Base_Init+0x90>
 800b138:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800b13c:	428a      	cmp	r2, r1
 800b13e:	d04a      	beq.n	800b1d6 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800b140:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800b144:	428a      	cmp	r2, r1
 800b146:	d021      	beq.n	800b18c <HAL_TIM_Base_Init+0x98>
 800b148:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b14c:	428a      	cmp	r2, r1
 800b14e:	d01d      	beq.n	800b18c <HAL_TIM_Base_Init+0x98>
 800b150:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b154:	428a      	cmp	r2, r1
 800b156:	d019      	beq.n	800b18c <HAL_TIM_Base_Init+0x98>
 800b158:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800b15c:	428a      	cmp	r2, r1
 800b15e:	d015      	beq.n	800b18c <HAL_TIM_Base_Init+0x98>
 800b160:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b164:	428a      	cmp	r2, r1
 800b166:	d011      	beq.n	800b18c <HAL_TIM_Base_Init+0x98>
 800b168:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800b16c:	428a      	cmp	r2, r1
 800b16e:	d00d      	beq.n	800b18c <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b170:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b172:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b174:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b178:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800b17a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800b17c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b17e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800b180:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800b182:	e010      	b.n	800b1a6 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800b184:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b186:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800b18a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b18c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b18e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800b190:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b194:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b196:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b19a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b19c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800b19e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800b1a0:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b1a2:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800b1a4:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800b1a6:	2301      	movs	r3, #1
 800b1a8:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800b1aa:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800b1ae:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800b1b2:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800b1b6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800b1ba:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800b1be:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800b1c2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b1c6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b1ca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800b1ce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800b1d2:	2000      	movs	r0, #0
}
 800b1d4:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800b1d6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b1d8:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b1da:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800b1de:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800b1e0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b1e4:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b1e6:	69a1      	ldr	r1, [r4, #24]
 800b1e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b1ec:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800b1ee:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b1f0:	68e3      	ldr	r3, [r4, #12]
 800b1f2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800b1f4:	6863      	ldr	r3, [r4, #4]
 800b1f6:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800b1f8:	6963      	ldr	r3, [r4, #20]
 800b1fa:	6313      	str	r3, [r2, #48]	; 0x30
 800b1fc:	e7d3      	b.n	800b1a6 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800b1fe:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800b202:	f7f6 fea1 	bl	8001f48 <HAL_TIM_Base_MspInit>
 800b206:	e780      	b.n	800b10a <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800b208:	2001      	movs	r0, #1
}
 800b20a:	4770      	bx	lr
 800b20c:	40010000 	.word	0x40010000

0800b210 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800b210:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b214:	2b01      	cmp	r3, #1
 800b216:	d12f      	bne.n	800b278 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b218:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b21a:	4919      	ldr	r1, [pc, #100]	; (800b280 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800b21c:	2202      	movs	r2, #2
 800b21e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b222:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b224:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b226:	f042 0201 	orr.w	r2, r2, #1
 800b22a:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b22c:	d019      	beq.n	800b262 <HAL_TIM_Base_Start_IT+0x52>
 800b22e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b232:	d016      	beq.n	800b262 <HAL_TIM_Base_Start_IT+0x52>
 800b234:	4a13      	ldr	r2, [pc, #76]	; (800b284 <HAL_TIM_Base_Start_IT+0x74>)
 800b236:	4293      	cmp	r3, r2
 800b238:	d013      	beq.n	800b262 <HAL_TIM_Base_Start_IT+0x52>
 800b23a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b23e:	4293      	cmp	r3, r2
 800b240:	d00f      	beq.n	800b262 <HAL_TIM_Base_Start_IT+0x52>
 800b242:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b246:	4293      	cmp	r3, r2
 800b248:	d00b      	beq.n	800b262 <HAL_TIM_Base_Start_IT+0x52>
 800b24a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800b24e:	4293      	cmp	r3, r2
 800b250:	d007      	beq.n	800b262 <HAL_TIM_Base_Start_IT+0x52>
 800b252:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800b256:	4293      	cmp	r3, r2
 800b258:	d003      	beq.n	800b262 <HAL_TIM_Base_Start_IT+0x52>
 800b25a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800b25e:	4293      	cmp	r3, r2
 800b260:	d104      	bne.n	800b26c <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800b262:	689a      	ldr	r2, [r3, #8]
 800b264:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800b268:	2a06      	cmp	r2, #6
 800b26a:	d007      	beq.n	800b27c <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800b26c:	681a      	ldr	r2, [r3, #0]
 800b26e:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800b272:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800b274:	601a      	str	r2, [r3, #0]
 800b276:	4770      	bx	lr
    return HAL_ERROR;
 800b278:	2001      	movs	r0, #1
 800b27a:	4770      	bx	lr
  return HAL_OK;
 800b27c:	2000      	movs	r0, #0
}
 800b27e:	4770      	bx	lr
 800b280:	40010000 	.word	0x40010000
 800b284:	40000400 	.word	0x40000400

0800b288 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800b288:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800b28c:	2b01      	cmp	r3, #1
 800b28e:	d075      	beq.n	800b37c <HAL_TIM_ConfigClockSource+0xf4>
 800b290:	4602      	mov	r2, r0
{
 800b292:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800b294:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800b296:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800b298:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800b29c:	2001      	movs	r0, #1
 800b29e:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800b2a2:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b2a4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b2a8:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800b2ac:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800b2ae:	680b      	ldr	r3, [r1, #0]
 800b2b0:	2b60      	cmp	r3, #96	; 0x60
 800b2b2:	d065      	beq.n	800b380 <HAL_TIM_ConfigClockSource+0xf8>
 800b2b4:	d824      	bhi.n	800b300 <HAL_TIM_ConfigClockSource+0x78>
 800b2b6:	2b40      	cmp	r3, #64	; 0x40
 800b2b8:	d07c      	beq.n	800b3b4 <HAL_TIM_ConfigClockSource+0x12c>
 800b2ba:	d94b      	bls.n	800b354 <HAL_TIM_ConfigClockSource+0xcc>
 800b2bc:	2b50      	cmp	r3, #80	; 0x50
 800b2be:	d117      	bne.n	800b2f0 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800b2c0:	684b      	ldr	r3, [r1, #4]
 800b2c2:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800b2c4:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b2c6:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800b2ca:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b2cc:	6a23      	ldr	r3, [r4, #32]
 800b2ce:	f023 0301 	bic.w	r3, r3, #1
 800b2d2:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b2d4:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b2d6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b2da:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800b2de:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800b2e0:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800b2e2:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800b2e4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b2e8:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800b2ec:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800b2ee:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800b2f0:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800b2f2:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800b2f4:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800b2f8:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800b2fc:	bc30      	pop	{r4, r5}
 800b2fe:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800b300:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b304:	d038      	beq.n	800b378 <HAL_TIM_ConfigClockSource+0xf0>
 800b306:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b30a:	d110      	bne.n	800b32e <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b30c:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800b310:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b312:	432b      	orrs	r3, r5
 800b314:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b316:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b31a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800b31e:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800b320:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800b322:	68a3      	ldr	r3, [r4, #8]
 800b324:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800b328:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800b32a:	60a3      	str	r3, [r4, #8]
      break;
 800b32c:	e7e0      	b.n	800b2f0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800b32e:	2b70      	cmp	r3, #112	; 0x70
 800b330:	d1de      	bne.n	800b2f0 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b332:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800b336:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b338:	432b      	orrs	r3, r5
 800b33a:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b33c:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b340:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800b344:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800b346:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800b348:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800b34a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800b34e:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800b350:	60a3      	str	r3, [r4, #8]
      break;
 800b352:	e7cd      	b.n	800b2f0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800b354:	2b20      	cmp	r3, #32
 800b356:	d002      	beq.n	800b35e <HAL_TIM_ConfigClockSource+0xd6>
 800b358:	d90a      	bls.n	800b370 <HAL_TIM_ConfigClockSource+0xe8>
 800b35a:	2b30      	cmp	r3, #48	; 0x30
 800b35c:	d1c8      	bne.n	800b2f0 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800b35e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800b360:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b364:	430b      	orrs	r3, r1
 800b366:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800b36a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800b36c:	60a3      	str	r3, [r4, #8]
}
 800b36e:	e7bf      	b.n	800b2f0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800b370:	f033 0110 	bics.w	r1, r3, #16
 800b374:	d1bc      	bne.n	800b2f0 <HAL_TIM_ConfigClockSource+0x68>
 800b376:	e7f2      	b.n	800b35e <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800b378:	2000      	movs	r0, #0
 800b37a:	e7b9      	b.n	800b2f0 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800b37c:	2002      	movs	r0, #2
}
 800b37e:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b380:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800b382:	6848      	ldr	r0, [r1, #4]
 800b384:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b386:	f023 0310 	bic.w	r3, r3, #16
 800b38a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b38c:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800b38e:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800b390:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800b394:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800b398:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800b39c:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800b3a0:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800b3a2:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800b3a4:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800b3a6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b3aa:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800b3ae:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800b3b0:	60a3      	str	r3, [r4, #8]
}
 800b3b2:	e79d      	b.n	800b2f0 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800b3b4:	684b      	ldr	r3, [r1, #4]
 800b3b6:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800b3b8:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b3ba:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800b3be:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b3c0:	6a23      	ldr	r3, [r4, #32]
 800b3c2:	f023 0301 	bic.w	r3, r3, #1
 800b3c6:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b3c8:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b3ca:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b3ce:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800b3d2:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800b3d4:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800b3d6:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800b3d8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b3dc:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800b3e0:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800b3e2:	60a3      	str	r3, [r4, #8]
}
 800b3e4:	e784      	b.n	800b2f0 <HAL_TIM_ConfigClockSource+0x68>
 800b3e6:	bf00      	nop

0800b3e8 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800b3e8:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800b3ec:	2a01      	cmp	r2, #1
 800b3ee:	d050      	beq.n	800b492 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800b3f0:	4603      	mov	r3, r0
{
 800b3f2:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800b3f4:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800b3f6:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800b3f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800b3fc:	2001      	movs	r0, #1
 800b3fe:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800b402:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800b404:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800b406:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800b408:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800b40c:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800b40e:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800b412:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800b414:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800b416:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800b418:	d060      	beq.n	800b4dc <HAL_TIM_SlaveConfigSynchro+0xf4>
 800b41a:	d90f      	bls.n	800b43c <HAL_TIM_SlaveConfigSynchro+0x54>
 800b41c:	2860      	cmp	r0, #96	; 0x60
 800b41e:	d03a      	beq.n	800b496 <HAL_TIM_SlaveConfigSynchro+0xae>
 800b420:	2870      	cmp	r0, #112	; 0x70
 800b422:	d10e      	bne.n	800b442 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b424:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800b428:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b42a:	432a      	orrs	r2, r5
 800b42c:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b42e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b432:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800b436:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800b438:	60a2      	str	r2, [r4, #8]
 800b43a:	e00f      	b.n	800b45c <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800b43c:	2840      	cmp	r0, #64	; 0x40
 800b43e:	d03d      	beq.n	800b4bc <HAL_TIM_SlaveConfigSynchro+0xd4>
 800b440:	d907      	bls.n	800b452 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800b442:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800b444:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800b446:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800b44a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800b44e:	bc30      	pop	{r4, r5}
 800b450:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800b452:	2820      	cmp	r0, #32
 800b454:	d002      	beq.n	800b45c <HAL_TIM_SlaveConfigSynchro+0x74>
 800b456:	d912      	bls.n	800b47e <HAL_TIM_SlaveConfigSynchro+0x96>
 800b458:	2830      	cmp	r0, #48	; 0x30
 800b45a:	d1f2      	bne.n	800b442 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800b45c:	68e2      	ldr	r2, [r4, #12]
 800b45e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b462:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800b464:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800b466:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800b468:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800b46a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800b46e:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800b470:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800b474:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800b478:	4608      	mov	r0, r1
}
 800b47a:	bc30      	pop	{r4, r5}
 800b47c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800b47e:	f030 0210 	bics.w	r2, r0, #16
 800b482:	d0eb      	beq.n	800b45c <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800b484:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800b486:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800b488:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800b48c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800b490:	e7dd      	b.n	800b44e <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800b492:	2002      	movs	r0, #2
}
 800b494:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b496:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800b498:	6888      	ldr	r0, [r1, #8]
 800b49a:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b49c:	f022 0210 	bic.w	r2, r2, #16
 800b4a0:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b4a2:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800b4a4:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800b4a6:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800b4aa:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800b4ae:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800b4b2:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800b4b6:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800b4b8:	6222      	str	r2, [r4, #32]
 800b4ba:	e7cf      	b.n	800b45c <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800b4bc:	2d05      	cmp	r5, #5
 800b4be:	d0c0      	beq.n	800b442 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800b4c0:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800b4c2:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800b4c4:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800b4c6:	f022 0201 	bic.w	r2, r2, #1
 800b4ca:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800b4cc:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b4ce:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800b4d2:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800b4d6:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800b4d8:	6220      	str	r0, [r4, #32]
      break;
 800b4da:	e7bf      	b.n	800b45c <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800b4dc:	688a      	ldr	r2, [r1, #8]
 800b4de:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800b4e0:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b4e2:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800b4e6:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b4e8:	6a22      	ldr	r2, [r4, #32]
 800b4ea:	f022 0201 	bic.w	r2, r2, #1
 800b4ee:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b4f0:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b4f2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b4f6:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800b4fa:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800b4fc:	6221      	str	r1, [r4, #32]
 800b4fe:	e7ad      	b.n	800b45c <HAL_TIM_SlaveConfigSynchro+0x74>

0800b500 <HAL_TIM_OC_DelayElapsedCallback>:
 800b500:	4770      	bx	lr
 800b502:	bf00      	nop

0800b504 <HAL_TIM_IC_CaptureCallback>:
 800b504:	4770      	bx	lr
 800b506:	bf00      	nop

0800b508 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b508:	4770      	bx	lr
 800b50a:	bf00      	nop

0800b50c <HAL_TIM_TriggerCallback>:
 800b50c:	4770      	bx	lr
 800b50e:	bf00      	nop

0800b510 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800b510:	6803      	ldr	r3, [r0, #0]
 800b512:	691a      	ldr	r2, [r3, #16]
 800b514:	0791      	lsls	r1, r2, #30
{
 800b516:	b510      	push	{r4, lr}
 800b518:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800b51a:	d502      	bpl.n	800b522 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800b51c:	68da      	ldr	r2, [r3, #12]
 800b51e:	0792      	lsls	r2, r2, #30
 800b520:	d45f      	bmi.n	800b5e2 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800b522:	691a      	ldr	r2, [r3, #16]
 800b524:	0750      	lsls	r0, r2, #29
 800b526:	d502      	bpl.n	800b52e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800b528:	68da      	ldr	r2, [r3, #12]
 800b52a:	0751      	lsls	r1, r2, #29
 800b52c:	d446      	bmi.n	800b5bc <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800b52e:	691a      	ldr	r2, [r3, #16]
 800b530:	0712      	lsls	r2, r2, #28
 800b532:	d502      	bpl.n	800b53a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800b534:	68da      	ldr	r2, [r3, #12]
 800b536:	0710      	lsls	r0, r2, #28
 800b538:	d42e      	bmi.n	800b598 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800b53a:	691a      	ldr	r2, [r3, #16]
 800b53c:	06d2      	lsls	r2, r2, #27
 800b53e:	d502      	bpl.n	800b546 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800b540:	68da      	ldr	r2, [r3, #12]
 800b542:	06d0      	lsls	r0, r2, #27
 800b544:	d418      	bmi.n	800b578 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800b546:	691a      	ldr	r2, [r3, #16]
 800b548:	07d1      	lsls	r1, r2, #31
 800b54a:	d502      	bpl.n	800b552 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800b54c:	68da      	ldr	r2, [r3, #12]
 800b54e:	07d2      	lsls	r2, r2, #31
 800b550:	d45d      	bmi.n	800b60e <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800b552:	691a      	ldr	r2, [r3, #16]
 800b554:	0610      	lsls	r0, r2, #24
 800b556:	d502      	bpl.n	800b55e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800b558:	68da      	ldr	r2, [r3, #12]
 800b55a:	0611      	lsls	r1, r2, #24
 800b55c:	d45f      	bmi.n	800b61e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800b55e:	691a      	ldr	r2, [r3, #16]
 800b560:	0652      	lsls	r2, r2, #25
 800b562:	d502      	bpl.n	800b56a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800b564:	68da      	ldr	r2, [r3, #12]
 800b566:	0650      	lsls	r0, r2, #25
 800b568:	d461      	bmi.n	800b62e <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800b56a:	691a      	ldr	r2, [r3, #16]
 800b56c:	0691      	lsls	r1, r2, #26
 800b56e:	d502      	bpl.n	800b576 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800b570:	68da      	ldr	r2, [r3, #12]
 800b572:	0692      	lsls	r2, r2, #26
 800b574:	d443      	bmi.n	800b5fe <HAL_TIM_IRQHandler+0xee>
}
 800b576:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800b578:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800b57c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800b57e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800b580:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800b582:	69db      	ldr	r3, [r3, #28]
 800b584:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800b588:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800b58a:	d064      	beq.n	800b656 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800b58c:	f7ff ffba 	bl	800b504 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b590:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800b592:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b594:	7722      	strb	r2, [r4, #28]
 800b596:	e7d6      	b.n	800b546 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800b598:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800b59c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800b59e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800b5a0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800b5a2:	69db      	ldr	r3, [r3, #28]
 800b5a4:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800b5a6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800b5a8:	d152      	bne.n	800b650 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b5aa:	f7ff ffa9 	bl	800b500 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b5ae:	4620      	mov	r0, r4
 800b5b0:	f7ff ffaa 	bl	800b508 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b5b4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800b5b6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b5b8:	7722      	strb	r2, [r4, #28]
 800b5ba:	e7be      	b.n	800b53a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800b5bc:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800b5c0:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800b5c2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800b5c4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800b5c6:	699b      	ldr	r3, [r3, #24]
 800b5c8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800b5cc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800b5ce:	d13c      	bne.n	800b64a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b5d0:	f7ff ff96 	bl	800b500 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b5d4:	4620      	mov	r0, r4
 800b5d6:	f7ff ff97 	bl	800b508 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b5da:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800b5dc:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b5de:	7722      	strb	r2, [r4, #28]
 800b5e0:	e7a5      	b.n	800b52e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800b5e2:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800b5e6:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800b5e8:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800b5ea:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800b5ec:	699b      	ldr	r3, [r3, #24]
 800b5ee:	079b      	lsls	r3, r3, #30
 800b5f0:	d025      	beq.n	800b63e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800b5f2:	f7ff ff87 	bl	800b504 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b5f6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800b5f8:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b5fa:	7722      	strb	r2, [r4, #28]
 800b5fc:	e791      	b.n	800b522 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800b5fe:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800b602:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800b604:	611a      	str	r2, [r3, #16]
}
 800b606:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800b60a:	f000 b86b 	b.w	800b6e4 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800b60e:	f06f 0201 	mvn.w	r2, #1
 800b612:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800b614:	4620      	mov	r0, r4
 800b616:	f7f6 fa9f 	bl	8001b58 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800b61a:	6823      	ldr	r3, [r4, #0]
 800b61c:	e799      	b.n	800b552 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800b61e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800b622:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800b624:	4620      	mov	r0, r4
 800b626:	f000 f85f 	bl	800b6e8 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800b62a:	6823      	ldr	r3, [r4, #0]
 800b62c:	e797      	b.n	800b55e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800b62e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800b632:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800b634:	4620      	mov	r0, r4
 800b636:	f7ff ff69 	bl	800b50c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800b63a:	6823      	ldr	r3, [r4, #0]
 800b63c:	e795      	b.n	800b56a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800b63e:	f7ff ff5f 	bl	800b500 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b642:	4620      	mov	r0, r4
 800b644:	f7ff ff60 	bl	800b508 <HAL_TIM_PWM_PulseFinishedCallback>
 800b648:	e7d5      	b.n	800b5f6 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800b64a:	f7ff ff5b 	bl	800b504 <HAL_TIM_IC_CaptureCallback>
 800b64e:	e7c4      	b.n	800b5da <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800b650:	f7ff ff58 	bl	800b504 <HAL_TIM_IC_CaptureCallback>
 800b654:	e7ae      	b.n	800b5b4 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b656:	f7ff ff53 	bl	800b500 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b65a:	4620      	mov	r0, r4
 800b65c:	f7ff ff54 	bl	800b508 <HAL_TIM_PWM_PulseFinishedCallback>
 800b660:	e796      	b.n	800b590 <HAL_TIM_IRQHandler+0x80>
 800b662:	bf00      	nop

0800b664 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800b664:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800b668:	2b01      	cmp	r3, #1
 800b66a:	d037      	beq.n	800b6dc <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800b66c:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800b66e:	2202      	movs	r2, #2
{
 800b670:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800b672:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800b676:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800b678:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800b67a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800b67c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800b680:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800b682:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b684:	4a16      	ldr	r2, [pc, #88]	; (800b6e0 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800b686:	4293      	cmp	r3, r2
 800b688:	d01a      	beq.n	800b6c0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b68a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b68e:	d017      	beq.n	800b6c0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b690:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800b694:	4293      	cmp	r3, r2
 800b696:	d013      	beq.n	800b6c0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b698:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b69c:	4293      	cmp	r3, r2
 800b69e:	d00f      	beq.n	800b6c0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b6a0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b6a4:	4293      	cmp	r3, r2
 800b6a6:	d00b      	beq.n	800b6c0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b6a8:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800b6ac:	4293      	cmp	r3, r2
 800b6ae:	d007      	beq.n	800b6c0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b6b0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800b6b4:	4293      	cmp	r3, r2
 800b6b6:	d003      	beq.n	800b6c0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b6b8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800b6bc:	4293      	cmp	r3, r2
 800b6be:	d104      	bne.n	800b6ca <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800b6c0:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800b6c2:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800b6c6:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800b6c8:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800b6ca:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800b6cc:	2201      	movs	r2, #1
 800b6ce:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800b6d2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800b6d6:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800b6d8:	4618      	mov	r0, r3
}
 800b6da:	4770      	bx	lr
  __HAL_LOCK(htim);
 800b6dc:	2002      	movs	r0, #2
}
 800b6de:	4770      	bx	lr
 800b6e0:	40010000 	.word	0x40010000

0800b6e4 <HAL_TIMEx_CommutCallback>:
 800b6e4:	4770      	bx	lr
 800b6e6:	bf00      	nop

0800b6e8 <HAL_TIMEx_BreakCallback>:
 800b6e8:	4770      	bx	lr
 800b6ea:	bf00      	nop

0800b6ec <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800b6ec:	680b      	ldr	r3, [r1, #0]
{
 800b6ee:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800b6f0:	b9d3      	cbnz	r3, 800b728 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b6f2:	6803      	ldr	r3, [r0, #0]
 800b6f4:	684c      	ldr	r4, [r1, #4]
 800b6f6:	688a      	ldr	r2, [r1, #8]
 800b6f8:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800b6fc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800b700:	4323      	orrs	r3, r4
 800b702:	4313      	orrs	r3, r2
 800b704:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800b708:	4323      	orrs	r3, r4
 800b70a:	4313      	orrs	r3, r2
 800b70c:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800b710:	4323      	orrs	r3, r4
 800b712:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800b716:	4313      	orrs	r3, r2
 800b718:	432b      	orrs	r3, r5
 800b71a:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800b71c:	4323      	orrs	r3, r4
 800b71e:	4313      	orrs	r3, r2
 800b720:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800b722:	bc30      	pop	{r4, r5}
 800b724:	2000      	movs	r0, #0
 800b726:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b728:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800b72c:	6803      	ldr	r3, [r0, #0]
 800b72e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800b732:	4323      	orrs	r3, r4
 800b734:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800b736:	4313      	orrs	r3, r2
 800b738:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800b73a:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b73c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800b73e:	6843      	ldr	r3, [r0, #4]
 800b740:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800b744:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800b748:	4313      	orrs	r3, r2
 800b74a:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800b74e:	4323      	orrs	r3, r4
 800b750:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800b754:	4313      	orrs	r3, r2
 800b756:	432b      	orrs	r3, r5
 800b758:	698a      	ldr	r2, [r1, #24]
 800b75a:	4323      	orrs	r3, r4
 800b75c:	4313      	orrs	r3, r2
 800b75e:	6043      	str	r3, [r0, #4]
}
 800b760:	bc30      	pop	{r4, r5}
 800b762:	2000      	movs	r0, #0
 800b764:	4770      	bx	lr
 800b766:	bf00      	nop

0800b768 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800b768:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b76a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800b76c:	bb02      	cbnz	r2, 800b7b0 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b76e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800b772:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800b776:	3c01      	subs	r4, #1
 800b778:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800b77c:	3a01      	subs	r2, #1
 800b77e:	4313      	orrs	r3, r2
 800b780:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800b784:	3c01      	subs	r4, #1
 800b786:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b78a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800b78e:	3a01      	subs	r2, #1
 800b790:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800b794:	698a      	ldr	r2, [r1, #24]
 800b796:	1e69      	subs	r1, r5, #1
 800b798:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b79c:	1e61      	subs	r1, r4, #1
 800b79e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800b7a2:	3a01      	subs	r2, #1
 800b7a4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800b7a8:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800b7aa:	bc30      	pop	{r4, r5}
 800b7ac:	2000      	movs	r0, #0
 800b7ae:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b7b0:	68cc      	ldr	r4, [r1, #12]
 800b7b2:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800b7b4:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b7b6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800b7ba:	3c01      	subs	r4, #1
 800b7bc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b7c0:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800b7c4:	3a01      	subs	r2, #1
 800b7c6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800b7ca:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800b7cc:	e9d1 2400 	ldrd	r2, r4, [r1]
 800b7d0:	68c3      	ldr	r3, [r0, #12]
 800b7d2:	3c01      	subs	r4, #1
 800b7d4:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800b7d8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800b7dc:	3a01      	subs	r2, #1
 800b7de:	690c      	ldr	r4, [r1, #16]
 800b7e0:	4313      	orrs	r3, r2
 800b7e2:	698a      	ldr	r2, [r1, #24]
 800b7e4:	1e69      	subs	r1, r5, #1
 800b7e6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b7ea:	1e61      	subs	r1, r4, #1
 800b7ec:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b7f0:	3a01      	subs	r2, #1
 800b7f2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800b7f6:	60c3      	str	r3, [r0, #12]
}
 800b7f8:	bc30      	pop	{r4, r5}
 800b7fa:	2000      	movs	r0, #0
 800b7fc:	4770      	bx	lr
 800b7fe:	bf00      	nop

0800b800 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800b800:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b802:	680b      	ldr	r3, [r1, #0]
{
 800b804:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b806:	684a      	ldr	r2, [r1, #4]
{
 800b808:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b80a:	4313      	orrs	r3, r2
 800b80c:	6900      	ldr	r0, [r0, #16]
 800b80e:	68ca      	ldr	r2, [r1, #12]
 800b810:	0d80      	lsrs	r0, r0, #22
 800b812:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800b816:	688a      	ldr	r2, [r1, #8]
 800b818:	0580      	lsls	r0, r0, #22
 800b81a:	4303      	orrs	r3, r0
 800b81c:	3a01      	subs	r2, #1
 800b81e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800b822:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800b824:	f7fc fa32 	bl	8007c8c <HAL_GetTick>
 800b828:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800b82a:	1c6b      	adds	r3, r5, #1
 800b82c:	d105      	bne.n	800b83a <FMC_SDRAM_SendCommand+0x3a>
 800b82e:	69a3      	ldr	r3, [r4, #24]
 800b830:	f013 0320 	ands.w	r3, r3, #32
 800b834:	d1fb      	bne.n	800b82e <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800b836:	4618      	mov	r0, r3
}
 800b838:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800b83a:	69a3      	ldr	r3, [r4, #24]
 800b83c:	f013 0320 	ands.w	r3, r3, #32
 800b840:	d0f9      	beq.n	800b836 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b842:	b125      	cbz	r5, 800b84e <FMC_SDRAM_SendCommand+0x4e>
 800b844:	f7fc fa22 	bl	8007c8c <HAL_GetTick>
 800b848:	1b80      	subs	r0, r0, r6
 800b84a:	42a8      	cmp	r0, r5
 800b84c:	d9ed      	bls.n	800b82a <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800b84e:	2003      	movs	r0, #3
}
 800b850:	bd70      	pop	{r4, r5, r6, pc}
 800b852:	bf00      	nop

0800b854 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b854:	6943      	ldr	r3, [r0, #20]
 800b856:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800b85a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b85c:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800b860:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800b864:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b866:	6151      	str	r1, [r2, #20]
}
 800b868:	4770      	bx	lr
 800b86a:	bf00      	nop

0800b86c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800b86c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800b86e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b872:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800b874:	f002 fafe 	bl	800de74 <xTaskGetSchedulerState>
 800b878:	2801      	cmp	r0, #1
 800b87a:	d100      	bne.n	800b87e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800b87c:	bd08      	pop	{r3, pc}
 800b87e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800b882:	f000 bc3f 	b.w	800c104 <xPortSysTickHandler>
 800b886:	bf00      	nop

0800b888 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800b888:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800b88c:	b92b      	cbnz	r3, 800b89a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800b88e:	4b06      	ldr	r3, [pc, #24]	; (800b8a8 <osKernelInitialize+0x20>)
 800b890:	6818      	ldr	r0, [r3, #0]
 800b892:	b928      	cbnz	r0, 800b8a0 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800b894:	2201      	movs	r2, #1
 800b896:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800b898:	4770      	bx	lr
    stat = osErrorISR;
 800b89a:	f06f 0005 	mvn.w	r0, #5
 800b89e:	4770      	bx	lr
    } else {
      stat = osError;
 800b8a0:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800b8a4:	4770      	bx	lr
 800b8a6:	bf00      	nop
 800b8a8:	20002c70 	.word	0x20002c70

0800b8ac <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800b8ac:	b510      	push	{r4, lr}
 800b8ae:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800b8b2:	b974      	cbnz	r4, 800b8d2 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800b8b4:	4b08      	ldr	r3, [pc, #32]	; (800b8d8 <osKernelStart+0x2c>)
 800b8b6:	681a      	ldr	r2, [r3, #0]
 800b8b8:	2a01      	cmp	r2, #1
 800b8ba:	d107      	bne.n	800b8cc <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b8bc:	4907      	ldr	r1, [pc, #28]	; (800b8dc <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800b8be:	2202      	movs	r2, #2
 800b8c0:	77cc      	strb	r4, [r1, #31]
 800b8c2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800b8c4:	f002 f8b0 	bl	800da28 <vTaskStartScheduler>
      stat = osOK;
 800b8c8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800b8ca:	bd10      	pop	{r4, pc}
      stat = osError;
 800b8cc:	f04f 30ff 	mov.w	r0, #4294967295
}
 800b8d0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800b8d2:	f06f 0005 	mvn.w	r0, #5
}
 800b8d6:	bd10      	pop	{r4, pc}
 800b8d8:	20002c70 	.word	0x20002c70
 800b8dc:	e000ed00 	.word	0xe000ed00

0800b8e0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800b8e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b8e2:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800b8e4:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800b8e6:	4615      	mov	r5, r2
  hTask = NULL;
 800b8e8:	9405      	str	r4, [sp, #20]
 800b8ea:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800b8ee:	b9ea      	cbnz	r2, 800b92c <osThreadNew+0x4c>
 800b8f0:	b350      	cbz	r0, 800b948 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800b8f2:	b1f5      	cbz	r5, 800b932 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800b8f4:	69ab      	ldr	r3, [r5, #24]
 800b8f6:	bb5b      	cbnz	r3, 800b950 <osThreadNew+0x70>
 800b8f8:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800b8fa:	686a      	ldr	r2, [r5, #4]
 800b8fc:	07d2      	lsls	r2, r2, #31
 800b8fe:	d423      	bmi.n	800b948 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800b900:	696e      	ldr	r6, [r5, #20]
 800b902:	b34e      	cbz	r6, 800b958 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800b904:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b908:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800b90a:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b90c:	b34c      	cbz	r4, 800b962 <osThreadNew+0x82>
 800b90e:	68ea      	ldr	r2, [r5, #12]
 800b910:	2aab      	cmp	r2, #171	; 0xab
 800b912:	d919      	bls.n	800b948 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800b914:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b916:	b1bd      	cbz	r5, 800b948 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800b918:	b1b6      	cbz	r6, 800b948 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800b91a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800b91e:	9300      	str	r3, [sp, #0]
 800b920:	4662      	mov	r2, ip
 800b922:	460b      	mov	r3, r1
 800b924:	4639      	mov	r1, r7
 800b926:	f001 ffbd 	bl	800d8a4 <xTaskCreateStatic>
 800b92a:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800b92c:	4620      	mov	r0, r4
 800b92e:	b007      	add	sp, #28
 800b930:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b932:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800b934:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800b936:	ac05      	add	r4, sp, #20
 800b938:	9300      	str	r3, [sp, #0]
 800b93a:	9401      	str	r4, [sp, #4]
 800b93c:	460b      	mov	r3, r1
 800b93e:	4629      	mov	r1, r5
 800b940:	f001 ffea 	bl	800d918 <xTaskCreate>
 800b944:	2801      	cmp	r0, #1
 800b946:	d00a      	beq.n	800b95e <osThreadNew+0x7e>
        return (NULL);
 800b948:	2400      	movs	r4, #0
}
 800b94a:	4620      	mov	r0, r4
 800b94c:	b007      	add	sp, #28
 800b94e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800b950:	1e5c      	subs	r4, r3, #1
 800b952:	2c37      	cmp	r4, #55	; 0x37
 800b954:	d9d1      	bls.n	800b8fa <osThreadNew+0x1a>
 800b956:	e7f7      	b.n	800b948 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800b958:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800b95c:	e7d4      	b.n	800b908 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800b95e:	9c05      	ldr	r4, [sp, #20]
 800b960:	e7e4      	b.n	800b92c <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800b962:	68ee      	ldr	r6, [r5, #12]
 800b964:	2e00      	cmp	r6, #0
 800b966:	d1e1      	bne.n	800b92c <osThreadNew+0x4c>
 800b968:	692d      	ldr	r5, [r5, #16]
 800b96a:	2d00      	cmp	r5, #0
 800b96c:	d1de      	bne.n	800b92c <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800b96e:	fa1f f28c 	uxth.w	r2, ip
 800b972:	463d      	mov	r5, r7
 800b974:	e7df      	b.n	800b936 <osThreadNew+0x56>
 800b976:	bf00      	nop

0800b978 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800b978:	b510      	push	{r4, lr}
 800b97a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800b97e:	b92c      	cbnz	r4, 800b98c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800b980:	b900      	cbnz	r0, 800b984 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800b982:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800b984:	f001 fffa 	bl	800d97c <vTaskDelay>
    stat = osOK;
 800b988:	4620      	mov	r0, r4
}
 800b98a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800b98c:	f06f 0005 	mvn.w	r0, #5
}
 800b990:	bd10      	pop	{r4, pc}
 800b992:	bf00      	nop

0800b994 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800b994:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b996:	b083      	sub	sp, #12
 800b998:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800b99c:	b9fe      	cbnz	r6, 800b9de <osSemaphoreNew+0x4a>
 800b99e:	b1f0      	cbz	r0, 800b9de <osSemaphoreNew+0x4a>
 800b9a0:	4288      	cmp	r0, r1
 800b9a2:	460f      	mov	r7, r1
 800b9a4:	d31b      	bcc.n	800b9de <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800b9a6:	4615      	mov	r5, r2
 800b9a8:	b192      	cbz	r2, 800b9d0 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800b9aa:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800b9ae:	b1d2      	cbz	r2, 800b9e6 <osSemaphoreNew+0x52>
 800b9b0:	2b4f      	cmp	r3, #79	; 0x4f
 800b9b2:	d914      	bls.n	800b9de <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800b9b4:	2801      	cmp	r0, #1
 800b9b6:	d038      	beq.n	800ba2a <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800b9b8:	f000 fd8a 	bl	800c4d0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800b9bc:	4604      	mov	r4, r0
 800b9be:	b170      	cbz	r0, 800b9de <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800b9c0:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800b9c2:	4620      	mov	r0, r4
 800b9c4:	4629      	mov	r1, r5
 800b9c6:	f001 fc35 	bl	800d234 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800b9ca:	4620      	mov	r0, r4
 800b9cc:	b003      	add	sp, #12
 800b9ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800b9d0:	2801      	cmp	r0, #1
 800b9d2:	d012      	beq.n	800b9fa <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800b9d4:	f000 fddc 	bl	800c590 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800b9d8:	4604      	mov	r4, r0
 800b9da:	2800      	cmp	r0, #0
 800b9dc:	d1f1      	bne.n	800b9c2 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800b9de:	2400      	movs	r4, #0
}
 800b9e0:	4620      	mov	r0, r4
 800b9e2:	b003      	add	sp, #12
 800b9e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800b9e6:	2b00      	cmp	r3, #0
 800b9e8:	d1f9      	bne.n	800b9de <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800b9ea:	2801      	cmp	r0, #1
 800b9ec:	d005      	beq.n	800b9fa <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800b9ee:	f000 fdcf 	bl	800c590 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800b9f2:	4604      	mov	r4, r0
 800b9f4:	2800      	cmp	r0, #0
 800b9f6:	d1e3      	bne.n	800b9c0 <osSemaphoreNew+0x2c>
 800b9f8:	e7f1      	b.n	800b9de <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800b9fa:	2203      	movs	r2, #3
 800b9fc:	2100      	movs	r1, #0
 800b9fe:	2001      	movs	r0, #1
 800ba00:	f000 fd24 	bl	800c44c <xQueueGenericCreate>
 800ba04:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800ba06:	2c00      	cmp	r4, #0
 800ba08:	d0e9      	beq.n	800b9de <osSemaphoreNew+0x4a>
 800ba0a:	b917      	cbnz	r7, 800ba12 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800ba0c:	2d00      	cmp	r5, #0
 800ba0e:	d1d7      	bne.n	800b9c0 <osSemaphoreNew+0x2c>
 800ba10:	e7d7      	b.n	800b9c2 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800ba12:	2300      	movs	r3, #0
 800ba14:	461a      	mov	r2, r3
 800ba16:	4619      	mov	r1, r3
 800ba18:	4620      	mov	r0, r4
 800ba1a:	f000 fdff 	bl	800c61c <xQueueGenericSend>
 800ba1e:	2801      	cmp	r0, #1
 800ba20:	d0f4      	beq.n	800ba0c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800ba22:	4620      	mov	r0, r4
 800ba24:	f001 fbc0 	bl	800d1a8 <vQueueDelete>
 800ba28:	e7d9      	b.n	800b9de <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800ba2a:	4613      	mov	r3, r2
 800ba2c:	2203      	movs	r2, #3
 800ba2e:	9200      	str	r2, [sp, #0]
 800ba30:	4631      	mov	r1, r6
 800ba32:	4632      	mov	r2, r6
 800ba34:	f000 fc9c 	bl	800c370 <xQueueGenericCreateStatic>
 800ba38:	4604      	mov	r4, r0
 800ba3a:	e7e4      	b.n	800ba06 <osSemaphoreNew+0x72>

0800ba3c <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ba3c:	b370      	cbz	r0, 800ba9c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800ba3e:	b510      	push	{r4, lr}
 800ba40:	460c      	mov	r4, r1
 800ba42:	b082      	sub	sp, #8
 800ba44:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ba48:	b1c3      	cbz	r3, 800ba7c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800ba4a:	bb21      	cbnz	r1, 800ba96 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ba4c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ba4e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ba50:	f001 fb28 	bl	800d0a4 <xQueueReceiveFromISR>
 800ba54:	2801      	cmp	r0, #1
 800ba56:	d11a      	bne.n	800ba8e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ba58:	9b01      	ldr	r3, [sp, #4]
 800ba5a:	b913      	cbnz	r3, 800ba62 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800ba5c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800ba5e:	b002      	add	sp, #8
 800ba60:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800ba62:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ba66:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ba6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ba6e:	f3bf 8f4f 	dsb	sy
 800ba72:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ba76:	4620      	mov	r0, r4
}
 800ba78:	b002      	add	sp, #8
 800ba7a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800ba7c:	f001 f988 	bl	800cd90 <xQueueSemaphoreTake>
 800ba80:	2801      	cmp	r0, #1
 800ba82:	d0eb      	beq.n	800ba5c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800ba84:	b11c      	cbz	r4, 800ba8e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800ba86:	f06f 0001 	mvn.w	r0, #1
}
 800ba8a:	b002      	add	sp, #8
 800ba8c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800ba8e:	f06f 0002 	mvn.w	r0, #2
}
 800ba92:	b002      	add	sp, #8
 800ba94:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800ba96:	f06f 0003 	mvn.w	r0, #3
 800ba9a:	e7e0      	b.n	800ba5e <osSemaphoreAcquire+0x22>
 800ba9c:	f06f 0003 	mvn.w	r0, #3
}
 800baa0:	4770      	bx	lr
 800baa2:	bf00      	nop

0800baa4 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800baa4:	b330      	cbz	r0, 800baf4 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800baa6:	b510      	push	{r4, lr}
 800baa8:	b082      	sub	sp, #8
 800baaa:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800baae:	b1ab      	cbz	r3, 800badc <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800bab0:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800bab2:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800bab4:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800bab6:	f000 ff95 	bl	800c9e4 <xQueueGiveFromISR>
 800baba:	2801      	cmp	r0, #1
 800babc:	d117      	bne.n	800baee <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800babe:	9b01      	ldr	r3, [sp, #4]
 800bac0:	b193      	cbz	r3, 800bae8 <osSemaphoreRelease+0x44>
 800bac2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bac6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800baca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bace:	f3bf 8f4f 	dsb	sy
 800bad2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800bad6:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800bad8:	b002      	add	sp, #8
 800bada:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800badc:	461a      	mov	r2, r3
 800bade:	4619      	mov	r1, r3
 800bae0:	f000 fd9c 	bl	800c61c <xQueueGenericSend>
 800bae4:	2801      	cmp	r0, #1
 800bae6:	d102      	bne.n	800baee <osSemaphoreRelease+0x4a>
  stat = osOK;
 800bae8:	2000      	movs	r0, #0
}
 800baea:	b002      	add	sp, #8
 800baec:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800baee:	f06f 0002 	mvn.w	r0, #2
 800baf2:	e7fa      	b.n	800baea <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800baf4:	f06f 0003 	mvn.w	r0, #3
}
 800baf8:	4770      	bx	lr
 800bafa:	bf00      	nop

0800bafc <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800bafc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bafe:	b085      	sub	sp, #20
 800bb00:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800bb04:	b987      	cbnz	r7, 800bb28 <osMessageQueueNew+0x2c>
 800bb06:	4605      	mov	r5, r0
 800bb08:	b170      	cbz	r0, 800bb28 <osMessageQueueNew+0x2c>
 800bb0a:	b169      	cbz	r1, 800bb28 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800bb0c:	4614      	mov	r4, r2
 800bb0e:	b1ea      	cbz	r2, 800bb4c <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800bb10:	6893      	ldr	r3, [r2, #8]
 800bb12:	b163      	cbz	r3, 800bb2e <osMessageQueueNew+0x32>
 800bb14:	68d2      	ldr	r2, [r2, #12]
 800bb16:	2a4f      	cmp	r2, #79	; 0x4f
 800bb18:	d906      	bls.n	800bb28 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800bb1a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800bb1c:	b122      	cbz	r2, 800bb28 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800bb1e:	6966      	ldr	r6, [r4, #20]
 800bb20:	fb01 f505 	mul.w	r5, r1, r5
 800bb24:	42ae      	cmp	r6, r5
 800bb26:	d21c      	bcs.n	800bb62 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800bb28:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800bb2a:	b005      	add	sp, #20
 800bb2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800bb2e:	68d3      	ldr	r3, [r2, #12]
 800bb30:	2b00      	cmp	r3, #0
 800bb32:	d1f9      	bne.n	800bb28 <osMessageQueueNew+0x2c>
 800bb34:	6913      	ldr	r3, [r2, #16]
 800bb36:	2b00      	cmp	r3, #0
 800bb38:	d1f6      	bne.n	800bb28 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800bb3a:	6952      	ldr	r2, [r2, #20]
 800bb3c:	2a00      	cmp	r2, #0
 800bb3e:	d1f3      	bne.n	800bb28 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800bb40:	f000 fc84 	bl	800c44c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800bb44:	2800      	cmp	r0, #0
 800bb46:	d0ef      	beq.n	800bb28 <osMessageQueueNew+0x2c>
        name = attr->name;
 800bb48:	6824      	ldr	r4, [r4, #0]
 800bb4a:	e003      	b.n	800bb54 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800bb4c:	f000 fc7e 	bl	800c44c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800bb50:	2800      	cmp	r0, #0
 800bb52:	d0e9      	beq.n	800bb28 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800bb54:	4621      	mov	r1, r4
 800bb56:	9003      	str	r0, [sp, #12]
 800bb58:	f001 fb6c 	bl	800d234 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800bb5c:	9803      	ldr	r0, [sp, #12]
}
 800bb5e:	b005      	add	sp, #20
 800bb60:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800bb62:	9700      	str	r7, [sp, #0]
 800bb64:	f000 fc04 	bl	800c370 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800bb68:	2800      	cmp	r0, #0
 800bb6a:	d1ed      	bne.n	800bb48 <osMessageQueueNew+0x4c>
 800bb6c:	e7dc      	b.n	800bb28 <osMessageQueueNew+0x2c>
 800bb6e:	bf00      	nop

0800bb70 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800bb70:	b570      	push	{r4, r5, r6, lr}
 800bb72:	461c      	mov	r4, r3
 800bb74:	b082      	sub	sp, #8
 800bb76:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800bb7a:	b1be      	cbz	r6, 800bbac <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800bb7c:	b350      	cbz	r0, 800bbd4 <osMessageQueuePut+0x64>
 800bb7e:	b349      	cbz	r1, 800bbd4 <osMessageQueuePut+0x64>
 800bb80:	bb43      	cbnz	r3, 800bbd4 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800bb82:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800bb84:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800bb86:	f000 fec7 	bl	800c918 <xQueueGenericSendFromISR>
 800bb8a:	2801      	cmp	r0, #1
 800bb8c:	d11e      	bne.n	800bbcc <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800bb8e:	9b01      	ldr	r3, [sp, #4]
 800bb90:	b1cb      	cbz	r3, 800bbc6 <osMessageQueuePut+0x56>
 800bb92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bb96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bb9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bb9e:	f3bf 8f4f 	dsb	sy
 800bba2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800bba6:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800bba8:	b002      	add	sp, #8
 800bbaa:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800bbac:	b190      	cbz	r0, 800bbd4 <osMessageQueuePut+0x64>
 800bbae:	b189      	cbz	r1, 800bbd4 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800bbb0:	4633      	mov	r3, r6
 800bbb2:	4622      	mov	r2, r4
 800bbb4:	f000 fd32 	bl	800c61c <xQueueGenericSend>
 800bbb8:	2801      	cmp	r0, #1
 800bbba:	d004      	beq.n	800bbc6 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800bbbc:	b134      	cbz	r4, 800bbcc <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800bbbe:	f06f 0001 	mvn.w	r0, #1
}
 800bbc2:	b002      	add	sp, #8
 800bbc4:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800bbc6:	2000      	movs	r0, #0
}
 800bbc8:	b002      	add	sp, #8
 800bbca:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800bbcc:	f06f 0002 	mvn.w	r0, #2
}
 800bbd0:	b002      	add	sp, #8
 800bbd2:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800bbd4:	f06f 0003 	mvn.w	r0, #3
 800bbd8:	e7e6      	b.n	800bba8 <osMessageQueuePut+0x38>
 800bbda:	bf00      	nop

0800bbdc <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800bbdc:	b530      	push	{r4, r5, lr}
 800bbde:	461c      	mov	r4, r3
 800bbe0:	b083      	sub	sp, #12
 800bbe2:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800bbe6:	b1bb      	cbz	r3, 800bc18 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800bbe8:	b348      	cbz	r0, 800bc3e <osMessageQueueGet+0x62>
 800bbea:	b341      	cbz	r1, 800bc3e <osMessageQueueGet+0x62>
 800bbec:	bb3c      	cbnz	r4, 800bc3e <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800bbee:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800bbf0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800bbf2:	f001 fa57 	bl	800d0a4 <xQueueReceiveFromISR>
 800bbf6:	2801      	cmp	r0, #1
 800bbf8:	d11d      	bne.n	800bc36 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800bbfa:	9b01      	ldr	r3, [sp, #4]
 800bbfc:	b1c3      	cbz	r3, 800bc30 <osMessageQueueGet+0x54>
 800bbfe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bc02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bc06:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bc0a:	f3bf 8f4f 	dsb	sy
 800bc0e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800bc12:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800bc14:	b003      	add	sp, #12
 800bc16:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800bc18:	b188      	cbz	r0, 800bc3e <osMessageQueueGet+0x62>
 800bc1a:	b181      	cbz	r1, 800bc3e <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800bc1c:	4622      	mov	r2, r4
 800bc1e:	f000 ff39 	bl	800ca94 <xQueueReceive>
 800bc22:	2801      	cmp	r0, #1
 800bc24:	d004      	beq.n	800bc30 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800bc26:	b134      	cbz	r4, 800bc36 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800bc28:	f06f 0001 	mvn.w	r0, #1
}
 800bc2c:	b003      	add	sp, #12
 800bc2e:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800bc30:	2000      	movs	r0, #0
}
 800bc32:	b003      	add	sp, #12
 800bc34:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800bc36:	f06f 0002 	mvn.w	r0, #2
}
 800bc3a:	b003      	add	sp, #12
 800bc3c:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800bc3e:	f06f 0003 	mvn.w	r0, #3
 800bc42:	e7e7      	b.n	800bc14 <osMessageQueueGet+0x38>

0800bc44 <osMessageQueueGetCount>:
 800bc44:	b130      	cbz	r0, 800bc54 <osMessageQueueGetCount+0x10>
 800bc46:	f3ef 8305 	mrs	r3, IPSR
 800bc4a:	b10b      	cbz	r3, 800bc50 <osMessageQueueGetCount+0xc>
 800bc4c:	f001 ba9e 	b.w	800d18c <uxQueueMessagesWaitingFromISR>
 800bc50:	f001 ba86 	b.w	800d160 <uxQueueMessagesWaiting>
 800bc54:	4770      	bx	lr
 800bc56:	bf00      	nop

0800bc58 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800bc58:	4b04      	ldr	r3, [pc, #16]	; (800bc6c <vApplicationGetIdleTaskMemory+0x14>)
 800bc5a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800bc5c:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800bc5e:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800bc60:	4c03      	ldr	r4, [pc, #12]	; (800bc70 <vApplicationGetIdleTaskMemory+0x18>)
 800bc62:	600c      	str	r4, [r1, #0]
}
 800bc64:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800bc68:	6013      	str	r3, [r2, #0]
}
 800bc6a:	4770      	bx	lr
 800bc6c:	20002bc4 	.word	0x20002bc4
 800bc70:	200029c4 	.word	0x200029c4

0800bc74 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800bc74:	4b05      	ldr	r3, [pc, #20]	; (800bc8c <vApplicationGetTimerTaskMemory+0x18>)
 800bc76:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800bc78:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800bc7a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800bc7e:	4c04      	ldr	r4, [pc, #16]	; (800bc90 <vApplicationGetTimerTaskMemory+0x1c>)
 800bc80:	600c      	str	r4, [r1, #0]
}
 800bc82:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800bc86:	6013      	str	r3, [r2, #0]
}
 800bc88:	4770      	bx	lr
 800bc8a:	bf00      	nop
 800bc8c:	20003074 	.word	0x20003074
 800bc90:	20002c74 	.word	0x20002c74

0800bc94 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800bc94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc98:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800bc9a:	f001 ff41 	bl	800db20 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800bc9e:	4a54      	ldr	r2, [pc, #336]	; (800bdf0 <pvPortMalloc+0x15c>)
 800bca0:	6816      	ldr	r6, [r2, #0]
 800bca2:	2e00      	cmp	r6, #0
 800bca4:	d06e      	beq.n	800bd84 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800bca6:	4b53      	ldr	r3, [pc, #332]	; (800bdf4 <pvPortMalloc+0x160>)
 800bca8:	681f      	ldr	r7, [r3, #0]
 800bcaa:	423d      	tst	r5, r7
 800bcac:	d12e      	bne.n	800bd0c <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800bcae:	b36d      	cbz	r5, 800bd0c <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800bcb0:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800bcb4:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800bcb6:	bf1c      	itt	ne
 800bcb8:	f024 0407 	bicne.w	r4, r4, #7
 800bcbc:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800bcbe:	b32c      	cbz	r4, 800bd0c <pvPortMalloc+0x78>
 800bcc0:	f8df c144 	ldr.w	ip, [pc, #324]	; 800be08 <pvPortMalloc+0x174>
 800bcc4:	f8dc 5000 	ldr.w	r5, [ip]
 800bcc8:	42a5      	cmp	r5, r4
 800bcca:	d31f      	bcc.n	800bd0c <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800bccc:	484a      	ldr	r0, [pc, #296]	; (800bdf8 <pvPortMalloc+0x164>)
 800bcce:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800bcd0:	e003      	b.n	800bcda <pvPortMalloc+0x46>
 800bcd2:	681a      	ldr	r2, [r3, #0]
 800bcd4:	b122      	cbz	r2, 800bce0 <pvPortMalloc+0x4c>
 800bcd6:	4618      	mov	r0, r3
 800bcd8:	4613      	mov	r3, r2
 800bcda:	6859      	ldr	r1, [r3, #4]
 800bcdc:	42a1      	cmp	r1, r4
 800bcde:	d3f8      	bcc.n	800bcd2 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800bce0:	42b3      	cmp	r3, r6
 800bce2:	d013      	beq.n	800bd0c <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800bce4:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800bce6:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800bce8:	f858 eb08 	ldr.w	lr, [r8], #8
 800bcec:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800bcf0:	2a10      	cmp	r2, #16
 800bcf2:	d929      	bls.n	800bd48 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800bcf4:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800bcf6:	0748      	lsls	r0, r1, #29
 800bcf8:	d00f      	beq.n	800bd1a <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800bcfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bcfe:	f383 8811 	msr	BASEPRI, r3
 800bd02:	f3bf 8f6f 	isb	sy
 800bd06:	f3bf 8f4f 	dsb	sy
 800bd0a:	e7fe      	b.n	800bd0a <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800bd0c:	f001 ff10 	bl	800db30 <xTaskResumeAll>
 800bd10:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800bd14:	4640      	mov	r0, r8
 800bd16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800bd1a:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800bd1c:	4a36      	ldr	r2, [pc, #216]	; (800bdf8 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800bd1e:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800bd20:	4614      	mov	r4, r2
 800bd22:	6812      	ldr	r2, [r2, #0]
 800bd24:	4291      	cmp	r1, r2
 800bd26:	d8fb      	bhi.n	800bd20 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800bd28:	6860      	ldr	r0, [r4, #4]
 800bd2a:	eb04 0e00 	add.w	lr, r4, r0
 800bd2e:	4571      	cmp	r1, lr
 800bd30:	d04b      	beq.n	800bdca <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bd32:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bd36:	eb01 000e 	add.w	r0, r1, lr
 800bd3a:	4282      	cmp	r2, r0
 800bd3c:	d051      	beq.n	800bde2 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800bd3e:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bd40:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800bd42:	bf18      	it	ne
 800bd44:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bd46:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bd48:	4a2c      	ldr	r2, [pc, #176]	; (800bdfc <pvPortMalloc+0x168>)
 800bd4a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bd4c:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bd4e:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800bd50:	bf38      	it	cc
 800bd52:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800bd54:	4a2a      	ldr	r2, [pc, #168]	; (800be00 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bd56:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800bd5a:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800bd5c:	2000      	movs	r0, #0
 800bd5e:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800bd62:	6813      	ldr	r3, [r2, #0]
 800bd64:	3301      	adds	r3, #1
 800bd66:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800bd68:	f001 fee2 	bl	800db30 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800bd6c:	f018 0f07 	tst.w	r8, #7
 800bd70:	d0d0      	beq.n	800bd14 <pvPortMalloc+0x80>
 800bd72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd76:	f383 8811 	msr	BASEPRI, r3
 800bd7a:	f3bf 8f6f 	isb	sy
 800bd7e:	f3bf 8f4f 	dsb	sy
 800bd82:	e7fe      	b.n	800bd82 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800bd84:	4b1f      	ldr	r3, [pc, #124]	; (800be04 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800bd86:	075e      	lsls	r6, r3, #29
 800bd88:	d118      	bne.n	800bdbc <pvPortMalloc+0x128>
 800bd8a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800bd8e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800bd90:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800bd92:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800bd96:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800bd98:	4a18      	ldr	r2, [pc, #96]	; (800bdfc <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800bd9a:	4817      	ldr	r0, [pc, #92]	; (800bdf8 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800bd9c:	4c15      	ldr	r4, [pc, #84]	; (800bdf4 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800bd9e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800bda0:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800bda2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800bda4:	4a18      	ldr	r2, [pc, #96]	; (800be08 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800bda6:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800bdaa:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800bdac:	2200      	movs	r2, #0
 800bdae:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800bdb0:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800bdb2:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800bdb6:	e9c1 6300 	strd	r6, r3, [r1]
}
 800bdba:	e776      	b.n	800bcaa <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800bdbc:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800bdbe:	f021 0107 	bic.w	r1, r1, #7
 800bdc2:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800bdc6:	460b      	mov	r3, r1
 800bdc8:	e7e2      	b.n	800bd90 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bdca:	6849      	ldr	r1, [r1, #4]
 800bdcc:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bdd0:	eb04 010e 	add.w	r1, r4, lr
 800bdd4:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bdd6:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bdda:	d001      	beq.n	800bde0 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bddc:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800bdde:	e7b2      	b.n	800bd46 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bde0:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800bde2:	42b2      	cmp	r2, r6
 800bde4:	d0ab      	beq.n	800bd3e <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800bde6:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bde8:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800bdea:	4470      	add	r0, lr
 800bdec:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bdee:	e7a6      	b.n	800bd3e <pvPortMalloc+0xaa>
 800bdf0:	20003120 	.word	0x20003120
 800bdf4:	20013124 	.word	0x20013124
 800bdf8:	20013138 	.word	0x20013138
 800bdfc:	2001312c 	.word	0x2001312c
 800be00:	20013130 	.word	0x20013130
 800be04:	20003124 	.word	0x20003124
 800be08:	20013128 	.word	0x20013128

0800be0c <vPortFree>:
	if( pv != NULL )
 800be0c:	b1d0      	cbz	r0, 800be44 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800be0e:	4a2c      	ldr	r2, [pc, #176]	; (800bec0 <vPortFree+0xb4>)
 800be10:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800be14:	6812      	ldr	r2, [r2, #0]
 800be16:	4213      	tst	r3, r2
 800be18:	d00b      	beq.n	800be32 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800be1a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800be1e:	b191      	cbz	r1, 800be46 <vPortFree+0x3a>
 800be20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800be24:	f383 8811 	msr	BASEPRI, r3
 800be28:	f3bf 8f6f 	isb	sy
 800be2c:	f3bf 8f4f 	dsb	sy
 800be30:	e7fe      	b.n	800be30 <vPortFree+0x24>
 800be32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800be36:	f383 8811 	msr	BASEPRI, r3
 800be3a:	f3bf 8f6f 	isb	sy
 800be3e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800be42:	e7fe      	b.n	800be42 <vPortFree+0x36>
 800be44:	4770      	bx	lr
{
 800be46:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800be48:	ea23 0302 	bic.w	r3, r3, r2
{
 800be4c:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800be4e:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800be52:	4c1c      	ldr	r4, [pc, #112]	; (800bec4 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800be54:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800be56:	f001 fe63 	bl	800db20 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800be5a:	9801      	ldr	r0, [sp, #4]
 800be5c:	6822      	ldr	r2, [r4, #0]
 800be5e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800be62:	4b19      	ldr	r3, [pc, #100]	; (800bec8 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800be64:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800be66:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800be68:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800be6a:	461a      	mov	r2, r3
 800be6c:	681b      	ldr	r3, [r3, #0]
 800be6e:	4298      	cmp	r0, r3
 800be70:	d8fb      	bhi.n	800be6a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800be72:	6854      	ldr	r4, [r2, #4]
 800be74:	eb02 0e04 	add.w	lr, r2, r4
 800be78:	4570      	cmp	r0, lr
 800be7a:	d010      	beq.n	800be9e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800be7c:	eb00 0c01 	add.w	ip, r0, r1
 800be80:	4563      	cmp	r3, ip
 800be82:	d014      	beq.n	800beae <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800be84:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800be86:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800be88:	bf18      	it	ne
 800be8a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800be8c:	4a0f      	ldr	r2, [pc, #60]	; (800becc <vPortFree+0xc0>)
 800be8e:	6813      	ldr	r3, [r2, #0]
 800be90:	3301      	adds	r3, #1
 800be92:	6013      	str	r3, [r2, #0]
}
 800be94:	b002      	add	sp, #8
 800be96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800be9a:	f001 be49 	b.w	800db30 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800be9e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bea0:	1850      	adds	r0, r2, r1
 800bea2:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bea4:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bea6:	d001      	beq.n	800beac <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bea8:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800beaa:	e7ef      	b.n	800be8c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800beac:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800beae:	4c08      	ldr	r4, [pc, #32]	; (800bed0 <vPortFree+0xc4>)
 800beb0:	6824      	ldr	r4, [r4, #0]
 800beb2:	42a3      	cmp	r3, r4
 800beb4:	d0e6      	beq.n	800be84 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800beb6:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800beba:	4421      	add	r1, r4
 800bebc:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bebe:	e7e1      	b.n	800be84 <vPortFree+0x78>
 800bec0:	20013124 	.word	0x20013124
 800bec4:	20013128 	.word	0x20013128
 800bec8:	20013138 	.word	0x20013138
 800becc:	20013134 	.word	0x20013134
 800bed0:	20003120 	.word	0x20003120

0800bed4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bed4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800bed8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800bedc:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800bede:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bee2:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800bee6:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800bee8:	4770      	bx	lr
 800beea:	bf00      	nop

0800beec <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800beec:	2300      	movs	r3, #0
 800beee:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800bef0:	4770      	bx	lr
 800bef2:	bf00      	nop

0800bef4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800bef4:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800bef6:	689a      	ldr	r2, [r3, #8]
 800bef8:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800befa:	6802      	ldr	r2, [r0, #0]
{
 800befc:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800befe:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800bf00:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800bf02:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800bf04:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800bf06:	6099      	str	r1, [r3, #8]
}
 800bf08:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800bf0c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800bf0e:	6002      	str	r2, [r0, #0]
}
 800bf10:	4770      	bx	lr
 800bf12:	bf00      	nop

0800bf14 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800bf14:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800bf16:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800bf18:	1c6b      	adds	r3, r5, #1
 800bf1a:	d010      	beq.n	800bf3e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800bf1c:	f100 0308 	add.w	r3, r0, #8
 800bf20:	461c      	mov	r4, r3
 800bf22:	685b      	ldr	r3, [r3, #4]
 800bf24:	681a      	ldr	r2, [r3, #0]
 800bf26:	42aa      	cmp	r2, r5
 800bf28:	d9fa      	bls.n	800bf20 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800bf2a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800bf2c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800bf2e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800bf30:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800bf32:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800bf34:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800bf36:	6108      	str	r0, [r1, #16]
}
 800bf38:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800bf3a:	6002      	str	r2, [r0, #0]
}
 800bf3c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800bf3e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800bf40:	6863      	ldr	r3, [r4, #4]
 800bf42:	e7f2      	b.n	800bf2a <vListInsert+0x16>

0800bf44 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800bf44:	6903      	ldr	r3, [r0, #16]
{
 800bf46:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800bf48:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800bf4c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800bf4e:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800bf50:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800bf52:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800bf54:	bf08      	it	eq
 800bf56:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800bf58:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800bf5a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800bf5e:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800bf60:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800bf62:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800bf64:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800bf66:	6818      	ldr	r0, [r3, #0]
}
 800bf68:	4770      	bx	lr
 800bf6a:	bf00      	nop

0800bf6c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800bf6c:	4808      	ldr	r0, [pc, #32]	; (800bf90 <prvPortStartFirstTask+0x24>)
 800bf6e:	6800      	ldr	r0, [r0, #0]
 800bf70:	6800      	ldr	r0, [r0, #0]
 800bf72:	f380 8808 	msr	MSP, r0
 800bf76:	f04f 0000 	mov.w	r0, #0
 800bf7a:	f380 8814 	msr	CONTROL, r0
 800bf7e:	b662      	cpsie	i
 800bf80:	b661      	cpsie	f
 800bf82:	f3bf 8f4f 	dsb	sy
 800bf86:	f3bf 8f6f 	isb	sy
 800bf8a:	df00      	svc	0
 800bf8c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800bf8e:	0000      	.short	0x0000
 800bf90:	e000ed08 	.word	0xe000ed08

0800bf94 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800bf94:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800bfa4 <vPortEnableVFP+0x10>
 800bf98:	6801      	ldr	r1, [r0, #0]
 800bf9a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800bf9e:	6001      	str	r1, [r0, #0]
 800bfa0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800bfa2:	0000      	.short	0x0000
 800bfa4:	e000ed88 	.word	0xe000ed88

0800bfa8 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800bfa8:	4b0e      	ldr	r3, [pc, #56]	; (800bfe4 <prvTaskExitError+0x3c>)
 800bfaa:	681b      	ldr	r3, [r3, #0]
{
 800bfac:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800bfae:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800bfb0:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800bfb2:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800bfb4:	d008      	beq.n	800bfc8 <prvTaskExitError+0x20>
 800bfb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bfba:	f383 8811 	msr	BASEPRI, r3
 800bfbe:	f3bf 8f6f 	isb	sy
 800bfc2:	f3bf 8f4f 	dsb	sy
 800bfc6:	e7fe      	b.n	800bfc6 <prvTaskExitError+0x1e>
 800bfc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bfcc:	f383 8811 	msr	BASEPRI, r3
 800bfd0:	f3bf 8f6f 	isb	sy
 800bfd4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800bfd8:	9b01      	ldr	r3, [sp, #4]
 800bfda:	2b00      	cmp	r3, #0
 800bfdc:	d0fc      	beq.n	800bfd8 <prvTaskExitError+0x30>
}
 800bfde:	b002      	add	sp, #8
 800bfe0:	4770      	bx	lr
 800bfe2:	bf00      	nop
 800bfe4:	20000084 	.word	0x20000084

0800bfe8 <pxPortInitialiseStack>:
{
 800bfe8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800bfea:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800bfee:	4c07      	ldr	r4, [pc, #28]	; (800c00c <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800bff0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800bff4:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800bff8:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800bffc:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800c000:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800c004:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c008:	3844      	subs	r0, #68	; 0x44
 800c00a:	4770      	bx	lr
 800c00c:	0800bfa9 	.word	0x0800bfa9

0800c010 <SVC_Handler>:
	__asm volatile (
 800c010:	4b07      	ldr	r3, [pc, #28]	; (800c030 <pxCurrentTCBConst2>)
 800c012:	6819      	ldr	r1, [r3, #0]
 800c014:	6808      	ldr	r0, [r1, #0]
 800c016:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c01a:	f380 8809 	msr	PSP, r0
 800c01e:	f3bf 8f6f 	isb	sy
 800c022:	f04f 0000 	mov.w	r0, #0
 800c026:	f380 8811 	msr	BASEPRI, r0
 800c02a:	4770      	bx	lr
 800c02c:	f3af 8000 	nop.w

0800c030 <pxCurrentTCBConst2>:
 800c030:	20013188 	.word	0x20013188

0800c034 <vPortEnterCritical>:
 800c034:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c038:	f383 8811 	msr	BASEPRI, r3
 800c03c:	f3bf 8f6f 	isb	sy
 800c040:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800c044:	4a0b      	ldr	r2, [pc, #44]	; (800c074 <vPortEnterCritical+0x40>)
 800c046:	6813      	ldr	r3, [r2, #0]
 800c048:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800c04a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800c04c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800c04e:	d000      	beq.n	800c052 <vPortEnterCritical+0x1e>
}
 800c050:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800c052:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c056:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800c05a:	b2db      	uxtb	r3, r3
 800c05c:	2b00      	cmp	r3, #0
 800c05e:	d0f7      	beq.n	800c050 <vPortEnterCritical+0x1c>
 800c060:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c064:	f383 8811 	msr	BASEPRI, r3
 800c068:	f3bf 8f6f 	isb	sy
 800c06c:	f3bf 8f4f 	dsb	sy
 800c070:	e7fe      	b.n	800c070 <vPortEnterCritical+0x3c>
 800c072:	bf00      	nop
 800c074:	20000084 	.word	0x20000084

0800c078 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800c078:	4a08      	ldr	r2, [pc, #32]	; (800c09c <vPortExitCritical+0x24>)
 800c07a:	6813      	ldr	r3, [r2, #0]
 800c07c:	b943      	cbnz	r3, 800c090 <vPortExitCritical+0x18>
 800c07e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c082:	f383 8811 	msr	BASEPRI, r3
 800c086:	f3bf 8f6f 	isb	sy
 800c08a:	f3bf 8f4f 	dsb	sy
 800c08e:	e7fe      	b.n	800c08e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800c090:	3b01      	subs	r3, #1
 800c092:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800c094:	b90b      	cbnz	r3, 800c09a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800c096:	f383 8811 	msr	BASEPRI, r3
}
 800c09a:	4770      	bx	lr
 800c09c:	20000084 	.word	0x20000084

0800c0a0 <PendSV_Handler>:
	__asm volatile
 800c0a0:	f3ef 8009 	mrs	r0, PSP
 800c0a4:	f3bf 8f6f 	isb	sy
 800c0a8:	4b15      	ldr	r3, [pc, #84]	; (800c100 <pxCurrentTCBConst>)
 800c0aa:	681a      	ldr	r2, [r3, #0]
 800c0ac:	f01e 0f10 	tst.w	lr, #16
 800c0b0:	bf08      	it	eq
 800c0b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800c0b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0ba:	6010      	str	r0, [r2, #0]
 800c0bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800c0c0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800c0c4:	f380 8811 	msr	BASEPRI, r0
 800c0c8:	f3bf 8f4f 	dsb	sy
 800c0cc:	f3bf 8f6f 	isb	sy
 800c0d0:	f001 fd54 	bl	800db7c <vTaskSwitchContext>
 800c0d4:	f04f 0000 	mov.w	r0, #0
 800c0d8:	f380 8811 	msr	BASEPRI, r0
 800c0dc:	bc09      	pop	{r0, r3}
 800c0de:	6819      	ldr	r1, [r3, #0]
 800c0e0:	6808      	ldr	r0, [r1, #0]
 800c0e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0e6:	f01e 0f10 	tst.w	lr, #16
 800c0ea:	bf08      	it	eq
 800c0ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800c0f0:	f380 8809 	msr	PSP, r0
 800c0f4:	f3bf 8f6f 	isb	sy
 800c0f8:	4770      	bx	lr
 800c0fa:	bf00      	nop
 800c0fc:	f3af 8000 	nop.w

0800c100 <pxCurrentTCBConst>:
 800c100:	20013188 	.word	0x20013188

0800c104 <xPortSysTickHandler>:
{
 800c104:	b508      	push	{r3, lr}
	__asm volatile
 800c106:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c10a:	f383 8811 	msr	BASEPRI, r3
 800c10e:	f3bf 8f6f 	isb	sy
 800c112:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800c116:	f001 fd21 	bl	800db5c <xTaskIncrementTick>
 800c11a:	b128      	cbz	r0, 800c128 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800c11c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c120:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c124:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800c128:	2300      	movs	r3, #0
 800c12a:	f383 8811 	msr	BASEPRI, r3
}
 800c12e:	bd08      	pop	{r3, pc}

0800c130 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800c130:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800c134:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c136:	4906      	ldr	r1, [pc, #24]	; (800c150 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800c138:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800c13a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c13c:	680b      	ldr	r3, [r1, #0]
 800c13e:	4905      	ldr	r1, [pc, #20]	; (800c154 <vPortSetupTimerInterrupt+0x24>)
 800c140:	fba1 1303 	umull	r1, r3, r1, r3
 800c144:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800c146:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c148:	3b01      	subs	r3, #1
 800c14a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800c14c:	6110      	str	r0, [r2, #16]
}
 800c14e:	4770      	bx	lr
 800c150:	20000078 	.word	0x20000078
 800c154:	10624dd3 	.word	0x10624dd3

0800c158 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800c158:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c15c:	4a49      	ldr	r2, [pc, #292]	; (800c284 <xPortStartScheduler+0x12c>)
 800c15e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800c162:	4291      	cmp	r1, r2
 800c164:	d043      	beq.n	800c1ee <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800c166:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800c16a:	4b47      	ldr	r3, [pc, #284]	; (800c288 <xPortStartScheduler+0x130>)
 800c16c:	429a      	cmp	r2, r3
 800c16e:	d035      	beq.n	800c1dc <xPortStartScheduler+0x84>
{
 800c170:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c172:	4b46      	ldr	r3, [pc, #280]	; (800c28c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c174:	4846      	ldr	r0, [pc, #280]	; (800c290 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c176:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c178:	4c46      	ldr	r4, [pc, #280]	; (800c294 <xPortStartScheduler+0x13c>)
{
 800c17a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800c17c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c17e:	b2d2      	uxtb	r2, r2
 800c180:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800c182:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800c184:	781b      	ldrb	r3, [r3, #0]
 800c186:	b2db      	uxtb	r3, r3
 800c188:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c18c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c190:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c194:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c198:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c19a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c19c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c19e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c1a0:	bf48      	it	mi
 800c1a2:	2206      	movmi	r2, #6
 800c1a4:	d511      	bpl.n	800c1ca <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800c1a6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800c1aa:	005b      	lsls	r3, r3, #1
 800c1ac:	b2db      	uxtb	r3, r3
 800c1ae:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c1b2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c1b6:	0609      	lsls	r1, r1, #24
 800c1b8:	4610      	mov	r0, r2
 800c1ba:	f102 32ff 	add.w	r2, r2, #4294967295
 800c1be:	d4f2      	bmi.n	800c1a6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800c1c0:	2803      	cmp	r0, #3
 800c1c2:	6020      	str	r0, [r4, #0]
 800c1c4:	f88d 3007 	strb.w	r3, [sp, #7]
 800c1c8:	d01a      	beq.n	800c200 <xPortStartScheduler+0xa8>
	__asm volatile
 800c1ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c1ce:	f383 8811 	msr	BASEPRI, r3
 800c1d2:	f3bf 8f6f 	isb	sy
 800c1d6:	f3bf 8f4f 	dsb	sy
 800c1da:	e7fe      	b.n	800c1da <xPortStartScheduler+0x82>
 800c1dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c1e0:	f383 8811 	msr	BASEPRI, r3
 800c1e4:	f3bf 8f6f 	isb	sy
 800c1e8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800c1ec:	e7fe      	b.n	800c1ec <xPortStartScheduler+0x94>
 800c1ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c1f2:	f383 8811 	msr	BASEPRI, r3
 800c1f6:	f3bf 8f6f 	isb	sy
 800c1fa:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800c1fe:	e7fe      	b.n	800c1fe <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c200:	9b02      	ldr	r3, [sp, #8]
 800c202:	4a22      	ldr	r2, [pc, #136]	; (800c28c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c204:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800c208:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c20c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800c20e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c210:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c212:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800c216:	4c20      	ldr	r4, [pc, #128]	; (800c298 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c218:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800c21c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800c220:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800c224:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800c228:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800c22c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800c22e:	f7ff ff7f 	bl	800c130 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800c232:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800c234:	f7ff feae 	bl	800bf94 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800c238:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800c23c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800c240:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800c244:	f7ff fe92 	bl	800bf6c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800c248:	f001 fc98 	bl	800db7c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800c24c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800c24e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800c250:	3301      	adds	r3, #1
 800c252:	d008      	beq.n	800c266 <xPortStartScheduler+0x10e>
 800c254:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c258:	f383 8811 	msr	BASEPRI, r3
 800c25c:	f3bf 8f6f 	isb	sy
 800c260:	f3bf 8f4f 	dsb	sy
 800c264:	e7fe      	b.n	800c264 <xPortStartScheduler+0x10c>
 800c266:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c26a:	f383 8811 	msr	BASEPRI, r3
 800c26e:	f3bf 8f6f 	isb	sy
 800c272:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800c276:	9b03      	ldr	r3, [sp, #12]
 800c278:	2b00      	cmp	r3, #0
 800c27a:	d0fc      	beq.n	800c276 <xPortStartScheduler+0x11e>
}
 800c27c:	2000      	movs	r0, #0
 800c27e:	b004      	add	sp, #16
 800c280:	bd70      	pop	{r4, r5, r6, pc}
 800c282:	bf00      	nop
 800c284:	410fc271 	.word	0x410fc271
 800c288:	410fc270 	.word	0x410fc270
 800c28c:	e000e400 	.word	0xe000e400
 800c290:	20013140 	.word	0x20013140
 800c294:	20013144 	.word	0x20013144
 800c298:	20000084 	.word	0x20000084

0800c29c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800c29c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800c2a0:	2b0f      	cmp	r3, #15
 800c2a2:	d90e      	bls.n	800c2c2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800c2a4:	4911      	ldr	r1, [pc, #68]	; (800c2ec <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800c2a6:	4a12      	ldr	r2, [pc, #72]	; (800c2f0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800c2a8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800c2aa:	7812      	ldrb	r2, [r2, #0]
 800c2ac:	429a      	cmp	r2, r3
 800c2ae:	d908      	bls.n	800c2c2 <vPortValidateInterruptPriority+0x26>
 800c2b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c2b4:	f383 8811 	msr	BASEPRI, r3
 800c2b8:	f3bf 8f6f 	isb	sy
 800c2bc:	f3bf 8f4f 	dsb	sy
 800c2c0:	e7fe      	b.n	800c2c0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800c2c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c2c6:	4a0b      	ldr	r2, [pc, #44]	; (800c2f4 <vPortValidateInterruptPriority+0x58>)
 800c2c8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800c2cc:	6812      	ldr	r2, [r2, #0]
 800c2ce:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800c2d2:	4293      	cmp	r3, r2
 800c2d4:	d908      	bls.n	800c2e8 <vPortValidateInterruptPriority+0x4c>
 800c2d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c2da:	f383 8811 	msr	BASEPRI, r3
 800c2de:	f3bf 8f6f 	isb	sy
 800c2e2:	f3bf 8f4f 	dsb	sy
 800c2e6:	e7fe      	b.n	800c2e6 <vPortValidateInterruptPriority+0x4a>
	}
 800c2e8:	4770      	bx	lr
 800c2ea:	bf00      	nop
 800c2ec:	e000e3f0 	.word	0xe000e3f0
 800c2f0:	20013140 	.word	0x20013140
 800c2f4:	20013144 	.word	0x20013144

0800c2f8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800c2f8:	b570      	push	{r4, r5, r6, lr}
 800c2fa:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800c2fc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c2fe:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800c300:	b920      	cbnz	r0, 800c30c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800c302:	6825      	ldr	r5, [r4, #0]
 800c304:	b34d      	cbz	r5, 800c35a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c306:	3601      	adds	r6, #1
 800c308:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800c30a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800c30c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c30e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800c310:	b97d      	cbnz	r5, 800c332 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c312:	6860      	ldr	r0, [r4, #4]
 800c314:	f01b fbaf 	bl	8027a76 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c318:	6863      	ldr	r3, [r4, #4]
 800c31a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c31c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c31e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c320:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c322:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800c324:	bf24      	itt	cs
 800c326:	6823      	ldrcs	r3, [r4, #0]
 800c328:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c32a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800c32c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c32e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800c330:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800c332:	68e0      	ldr	r0, [r4, #12]
 800c334:	f01b fb9f 	bl	8027a76 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800c338:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c33a:	68e3      	ldr	r3, [r4, #12]
 800c33c:	4251      	negs	r1, r2
 800c33e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c340:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800c342:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c344:	4293      	cmp	r3, r2
 800c346:	d202      	bcs.n	800c34e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800c348:	68a3      	ldr	r3, [r4, #8]
 800c34a:	440b      	add	r3, r1
 800c34c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800c34e:	2d02      	cmp	r5, #2
 800c350:	d008      	beq.n	800c364 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c352:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800c354:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c356:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800c358:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800c35a:	68a0      	ldr	r0, [r4, #8]
 800c35c:	f001 fde0 	bl	800df20 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800c360:	60a5      	str	r5, [r4, #8]
 800c362:	e7d0      	b.n	800c306 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800c364:	2e01      	cmp	r6, #1
 800c366:	bf38      	it	cc
 800c368:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800c36a:	2000      	movs	r0, #0
 800c36c:	e7cc      	b.n	800c308 <prvCopyDataToQueue+0x10>
 800c36e:	bf00      	nop

0800c370 <xQueueGenericCreateStatic>:
	{
 800c370:	b530      	push	{r4, r5, lr}
 800c372:	b083      	sub	sp, #12
 800c374:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800c378:	b940      	cbnz	r0, 800c38c <xQueueGenericCreateStatic+0x1c>
 800c37a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c37e:	f383 8811 	msr	BASEPRI, r3
 800c382:	f3bf 8f6f 	isb	sy
 800c386:	f3bf 8f4f 	dsb	sy
 800c38a:	e7fe      	b.n	800c38a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800c38c:	461d      	mov	r5, r3
 800c38e:	b17b      	cbz	r3, 800c3b0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800c390:	b302      	cbz	r2, 800c3d4 <xQueueGenericCreateStatic+0x64>
 800c392:	b1b1      	cbz	r1, 800c3c2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800c394:	2350      	movs	r3, #80	; 0x50
 800c396:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800c398:	9b01      	ldr	r3, [sp, #4]
 800c39a:	2b50      	cmp	r3, #80	; 0x50
 800c39c:	d023      	beq.n	800c3e6 <xQueueGenericCreateStatic+0x76>
 800c39e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c3a2:	f383 8811 	msr	BASEPRI, r3
 800c3a6:	f3bf 8f6f 	isb	sy
 800c3aa:	f3bf 8f4f 	dsb	sy
 800c3ae:	e7fe      	b.n	800c3ae <xQueueGenericCreateStatic+0x3e>
 800c3b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c3b4:	f383 8811 	msr	BASEPRI, r3
 800c3b8:	f3bf 8f6f 	isb	sy
 800c3bc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800c3c0:	e7fe      	b.n	800c3c0 <xQueueGenericCreateStatic+0x50>
 800c3c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c3c6:	f383 8811 	msr	BASEPRI, r3
 800c3ca:	f3bf 8f6f 	isb	sy
 800c3ce:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800c3d2:	e7fe      	b.n	800c3d2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800c3d4:	bb89      	cbnz	r1, 800c43a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800c3d6:	2250      	movs	r2, #80	; 0x50
 800c3d8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800c3da:	9a01      	ldr	r2, [sp, #4]
 800c3dc:	2a50      	cmp	r2, #80	; 0x50
 800c3de:	d1de      	bne.n	800c39e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800c3e0:	9a01      	ldr	r2, [sp, #4]
 800c3e2:	462a      	mov	r2, r5
 800c3e4:	e000      	b.n	800c3e8 <xQueueGenericCreateStatic+0x78>
 800c3e6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800c3e8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c3ea:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800c3ec:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c3f0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800c3f4:	f7ff fe1e 	bl	800c034 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c3f8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800c3fc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c3fe:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c400:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c404:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c406:	4401      	add	r1, r0
 800c408:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c40a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c40c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c40e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800c410:	21ff      	movs	r1, #255	; 0xff
 800c412:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c416:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800c418:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c41c:	f105 0010 	add.w	r0, r5, #16
 800c420:	f7ff fd58 	bl	800bed4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c424:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800c428:	f7ff fd54 	bl	800bed4 <vListInitialise>
	taskEXIT_CRITICAL();
 800c42c:	f7ff fe24 	bl	800c078 <vPortExitCritical>
	}
 800c430:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800c432:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800c436:	b003      	add	sp, #12
 800c438:	bd30      	pop	{r4, r5, pc}
 800c43a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c43e:	f383 8811 	msr	BASEPRI, r3
 800c442:	f3bf 8f6f 	isb	sy
 800c446:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800c44a:	e7fe      	b.n	800c44a <xQueueGenericCreateStatic+0xda>

0800c44c <xQueueGenericCreate>:
	{
 800c44c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800c44e:	b940      	cbnz	r0, 800c462 <xQueueGenericCreate+0x16>
 800c450:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c454:	f383 8811 	msr	BASEPRI, r3
 800c458:	f3bf 8f6f 	isb	sy
 800c45c:	f3bf 8f4f 	dsb	sy
 800c460:	e7fe      	b.n	800c460 <xQueueGenericCreate+0x14>
 800c462:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c464:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800c468:	3050      	adds	r0, #80	; 0x50
 800c46a:	460e      	mov	r6, r1
 800c46c:	4617      	mov	r7, r2
 800c46e:	f7ff fc11 	bl	800bc94 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800c472:	4604      	mov	r4, r0
 800c474:	b340      	cbz	r0, 800c4c8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c476:	2300      	movs	r3, #0
 800c478:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800c47c:	b336      	cbz	r6, 800c4cc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c47e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800c482:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800c484:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800c488:	f7ff fdd4 	bl	800c034 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c48c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800c490:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c492:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c494:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c498:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c49a:	440a      	add	r2, r1
 800c49c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c49e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c4a0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c4a2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800c4a4:	22ff      	movs	r2, #255	; 0xff
 800c4a6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c4aa:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800c4ac:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c4b0:	f104 0010 	add.w	r0, r4, #16
 800c4b4:	f7ff fd0e 	bl	800bed4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c4b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800c4bc:	f7ff fd0a 	bl	800bed4 <vListInitialise>
	taskEXIT_CRITICAL();
 800c4c0:	f7ff fdda 	bl	800c078 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800c4c4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800c4c8:	4620      	mov	r0, r4
 800c4ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c4cc:	4603      	mov	r3, r0
 800c4ce:	e7d8      	b.n	800c482 <xQueueGenericCreate+0x36>

0800c4d0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800c4d0:	b940      	cbnz	r0, 800c4e4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800c4d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c4d6:	f383 8811 	msr	BASEPRI, r3
 800c4da:	f3bf 8f6f 	isb	sy
 800c4de:	f3bf 8f4f 	dsb	sy
 800c4e2:	e7fe      	b.n	800c4e2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800c4e4:	4288      	cmp	r0, r1
 800c4e6:	d208      	bcs.n	800c4fa <xQueueCreateCountingSemaphoreStatic+0x2a>
 800c4e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c4ec:	f383 8811 	msr	BASEPRI, r3
 800c4f0:	f3bf 8f6f 	isb	sy
 800c4f4:	f3bf 8f4f 	dsb	sy
 800c4f8:	e7fe      	b.n	800c4f8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800c4fa:	b530      	push	{r4, r5, lr}
 800c4fc:	4615      	mov	r5, r2
 800c4fe:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800c500:	2a00      	cmp	r2, #0
 800c502:	d03c      	beq.n	800c57e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800c504:	2350      	movs	r3, #80	; 0x50
 800c506:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800c508:	9b03      	ldr	r3, [sp, #12]
 800c50a:	2b50      	cmp	r3, #80	; 0x50
 800c50c:	d008      	beq.n	800c520 <xQueueCreateCountingSemaphoreStatic+0x50>
 800c50e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c512:	f383 8811 	msr	BASEPRI, r3
 800c516:	f3bf 8f6f 	isb	sy
 800c51a:	f3bf 8f4f 	dsb	sy
 800c51e:	e7fe      	b.n	800c51e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800c520:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c522:	2301      	movs	r3, #1
 800c524:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800c528:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800c52a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800c52e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800c530:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800c532:	f7ff fd7f 	bl	800c034 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c536:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800c53a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c53c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c53e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c542:	1ac3      	subs	r3, r0, r3
 800c544:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c546:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800c548:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800c54c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c550:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c552:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800c554:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c558:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c55a:	f105 0010 	add.w	r0, r5, #16
 800c55e:	f7ff fcb9 	bl	800bed4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c562:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800c566:	f7ff fcb5 	bl	800bed4 <vListInitialise>
	taskEXIT_CRITICAL();
 800c56a:	f7ff fd85 	bl	800c078 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800c56e:	9901      	ldr	r1, [sp, #4]
 800c570:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800c572:	2302      	movs	r3, #2
	}
 800c574:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800c576:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800c57a:	b005      	add	sp, #20
 800c57c:	bd30      	pop	{r4, r5, pc}
 800c57e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c582:	f383 8811 	msr	BASEPRI, r3
 800c586:	f3bf 8f6f 	isb	sy
 800c58a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800c58e:	e7fe      	b.n	800c58e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800c590 <xQueueCreateCountingSemaphore>:
	{
 800c590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800c592:	b940      	cbnz	r0, 800c5a6 <xQueueCreateCountingSemaphore+0x16>
 800c594:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c598:	f383 8811 	msr	BASEPRI, r3
 800c59c:	f3bf 8f6f 	isb	sy
 800c5a0:	f3bf 8f4f 	dsb	sy
 800c5a4:	e7fe      	b.n	800c5a4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800c5a6:	4288      	cmp	r0, r1
 800c5a8:	460e      	mov	r6, r1
 800c5aa:	4604      	mov	r4, r0
 800c5ac:	d208      	bcs.n	800c5c0 <xQueueCreateCountingSemaphore+0x30>
 800c5ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c5b2:	f383 8811 	msr	BASEPRI, r3
 800c5b6:	f3bf 8f6f 	isb	sy
 800c5ba:	f3bf 8f4f 	dsb	sy
 800c5be:	e7fe      	b.n	800c5be <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800c5c0:	2050      	movs	r0, #80	; 0x50
 800c5c2:	f7ff fb67 	bl	800bc94 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800c5c6:	4605      	mov	r5, r0
 800c5c8:	b330      	cbz	r0, 800c618 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c5ca:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800c5cc:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c5d0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800c5d4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800c5d6:	f7ff fd2d 	bl	800c034 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5da:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800c5de:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c5e0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5e2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5e6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5e8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5ea:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5ec:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800c5ee:	22ff      	movs	r2, #255	; 0xff
 800c5f0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c5f4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c5f6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800c5f8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c5fc:	f105 0010 	add.w	r0, r5, #16
 800c600:	f7ff fc68 	bl	800bed4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c604:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800c608:	f7ff fc64 	bl	800bed4 <vListInitialise>
	taskEXIT_CRITICAL();
 800c60c:	f7ff fd34 	bl	800c078 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800c610:	2302      	movs	r3, #2
 800c612:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800c616:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800c618:	4628      	mov	r0, r5
 800c61a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c61c <xQueueGenericSend>:
{
 800c61c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c620:	b085      	sub	sp, #20
 800c622:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800c624:	2800      	cmp	r0, #0
 800c626:	f000 80a4 	beq.w	800c772 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c62a:	4688      	mov	r8, r1
 800c62c:	461f      	mov	r7, r3
 800c62e:	4604      	mov	r4, r0
 800c630:	2900      	cmp	r1, #0
 800c632:	f000 8091 	beq.w	800c758 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800c636:	2f02      	cmp	r7, #2
 800c638:	d10b      	bne.n	800c652 <xQueueGenericSend+0x36>
 800c63a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c63c:	2b01      	cmp	r3, #1
 800c63e:	d008      	beq.n	800c652 <xQueueGenericSend+0x36>
 800c640:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c644:	f383 8811 	msr	BASEPRI, r3
 800c648:	f3bf 8f6f 	isb	sy
 800c64c:	f3bf 8f4f 	dsb	sy
 800c650:	e7fe      	b.n	800c650 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c652:	f001 fc0f 	bl	800de74 <xTaskGetSchedulerState>
 800c656:	4605      	mov	r5, r0
 800c658:	2800      	cmp	r0, #0
 800c65a:	f000 8093 	beq.w	800c784 <xQueueGenericSend+0x168>
 800c65e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c660:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800c664:	f7ff fce6 	bl	800c034 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c668:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c66a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c66c:	429a      	cmp	r2, r3
 800c66e:	f0c0 80ef 	bcc.w	800c850 <xQueueGenericSend+0x234>
 800c672:	2f02      	cmp	r7, #2
 800c674:	f000 80ec 	beq.w	800c850 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800c678:	9801      	ldr	r0, [sp, #4]
 800c67a:	2800      	cmp	r0, #0
 800c67c:	f000 8101 	beq.w	800c882 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800c680:	2d00      	cmp	r5, #0
 800c682:	f000 80e1 	beq.w	800c848 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800c686:	f7ff fcf7 	bl	800c078 <vPortExitCritical>
		vTaskSuspendAll();
 800c68a:	f001 fa49 	bl	800db20 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800c68e:	f7ff fcd1 	bl	800c034 <vPortEnterCritical>
 800c692:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c696:	2bff      	cmp	r3, #255	; 0xff
 800c698:	bf04      	itt	eq
 800c69a:	2300      	moveq	r3, #0
 800c69c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800c6a0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c6a4:	2bff      	cmp	r3, #255	; 0xff
 800c6a6:	bf04      	itt	eq
 800c6a8:	2300      	moveq	r3, #0
 800c6aa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800c6ae:	f7ff fce3 	bl	800c078 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800c6b2:	a901      	add	r1, sp, #4
 800c6b4:	a802      	add	r0, sp, #8
 800c6b6:	f001 fb8f 	bl	800ddd8 <xTaskCheckForTimeOut>
 800c6ba:	2800      	cmp	r0, #0
 800c6bc:	f040 80e6 	bne.w	800c88c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800c6c0:	f7ff fcb8 	bl	800c034 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800c6c4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c6c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c6c8:	429a      	cmp	r2, r3
 800c6ca:	d068      	beq.n	800c79e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800c6cc:	f7ff fcd4 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c6d0:	f7ff fcb0 	bl	800c034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c6d4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800c6d8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c6da:	2d00      	cmp	r5, #0
 800c6dc:	dc04      	bgt.n	800c6e8 <xQueueGenericSend+0xcc>
 800c6de:	e011      	b.n	800c704 <xQueueGenericSend+0xe8>
			--cTxLock;
 800c6e0:	1e6a      	subs	r2, r5, #1
 800c6e2:	b2d3      	uxtb	r3, r2
 800c6e4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c6e6:	b16b      	cbz	r3, 800c704 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c6e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c6ea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c6ec:	b153      	cbz	r3, 800c704 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c6ee:	f001 fb1f 	bl	800dd30 <xTaskRemoveFromEventList>
 800c6f2:	2800      	cmp	r0, #0
 800c6f4:	d0f4      	beq.n	800c6e0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800c6f6:	f001 fbb7 	bl	800de68 <vTaskMissedYield>
			--cTxLock;
 800c6fa:	1e6a      	subs	r2, r5, #1
 800c6fc:	b2d3      	uxtb	r3, r2
 800c6fe:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c700:	2b00      	cmp	r3, #0
 800c702:	d1f1      	bne.n	800c6e8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800c704:	23ff      	movs	r3, #255	; 0xff
 800c706:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c70a:	f7ff fcb5 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c70e:	f7ff fc91 	bl	800c034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c712:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800c716:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c718:	2d00      	cmp	r5, #0
 800c71a:	dd14      	ble.n	800c746 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c71c:	f104 0910 	add.w	r9, r4, #16
 800c720:	e003      	b.n	800c72a <xQueueGenericSend+0x10e>
				--cRxLock;
 800c722:	1e6a      	subs	r2, r5, #1
 800c724:	b2d3      	uxtb	r3, r2
 800c726:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c728:	b16b      	cbz	r3, 800c746 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c72a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c72c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c72e:	b153      	cbz	r3, 800c746 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c730:	f001 fafe 	bl	800dd30 <xTaskRemoveFromEventList>
 800c734:	2800      	cmp	r0, #0
 800c736:	d0f4      	beq.n	800c722 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800c738:	f001 fb96 	bl	800de68 <vTaskMissedYield>
				--cRxLock;
 800c73c:	1e6a      	subs	r2, r5, #1
 800c73e:	b2d3      	uxtb	r3, r2
 800c740:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c742:	2b00      	cmp	r3, #0
 800c744:	d1f1      	bne.n	800c72a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800c746:	23ff      	movs	r3, #255	; 0xff
 800c748:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c74c:	f7ff fc94 	bl	800c078 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800c750:	f001 f9ee 	bl	800db30 <xTaskResumeAll>
 800c754:	2501      	movs	r5, #1
 800c756:	e785      	b.n	800c664 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c758:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800c75a:	2b00      	cmp	r3, #0
 800c75c:	f43f af6b 	beq.w	800c636 <xQueueGenericSend+0x1a>
 800c760:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c764:	f383 8811 	msr	BASEPRI, r3
 800c768:	f3bf 8f6f 	isb	sy
 800c76c:	f3bf 8f4f 	dsb	sy
 800c770:	e7fe      	b.n	800c770 <xQueueGenericSend+0x154>
 800c772:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c776:	f383 8811 	msr	BASEPRI, r3
 800c77a:	f3bf 8f6f 	isb	sy
 800c77e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800c782:	e7fe      	b.n	800c782 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c784:	9b01      	ldr	r3, [sp, #4]
 800c786:	2b00      	cmp	r3, #0
 800c788:	f43f af6a 	beq.w	800c660 <xQueueGenericSend+0x44>
 800c78c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c790:	f383 8811 	msr	BASEPRI, r3
 800c794:	f3bf 8f6f 	isb	sy
 800c798:	f3bf 8f4f 	dsb	sy
 800c79c:	e7fe      	b.n	800c79c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800c79e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800c7a2:	f7ff fc69 	bl	800c078 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800c7a6:	9901      	ldr	r1, [sp, #4]
 800c7a8:	4648      	mov	r0, r9
 800c7aa:	f001 fa33 	bl	800dc14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800c7ae:	f7ff fc41 	bl	800c034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c7b2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c7b6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c7b8:	2d00      	cmp	r5, #0
 800c7ba:	dc04      	bgt.n	800c7c6 <xQueueGenericSend+0x1aa>
 800c7bc:	e011      	b.n	800c7e2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800c7be:	1e6b      	subs	r3, r5, #1
 800c7c0:	b2da      	uxtb	r2, r3
 800c7c2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c7c4:	b16a      	cbz	r2, 800c7e2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c7c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c7c8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c7ca:	b153      	cbz	r3, 800c7e2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c7cc:	f001 fab0 	bl	800dd30 <xTaskRemoveFromEventList>
 800c7d0:	2800      	cmp	r0, #0
 800c7d2:	d0f4      	beq.n	800c7be <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800c7d4:	f001 fb48 	bl	800de68 <vTaskMissedYield>
			--cTxLock;
 800c7d8:	1e6b      	subs	r3, r5, #1
 800c7da:	b2da      	uxtb	r2, r3
 800c7dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c7de:	2a00      	cmp	r2, #0
 800c7e0:	d1f1      	bne.n	800c7c6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800c7e2:	23ff      	movs	r3, #255	; 0xff
 800c7e4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c7e8:	f7ff fc46 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c7ec:	f7ff fc22 	bl	800c034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c7f0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c7f4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c7f6:	2d00      	cmp	r5, #0
 800c7f8:	dc04      	bgt.n	800c804 <xQueueGenericSend+0x1e8>
 800c7fa:	e011      	b.n	800c820 <xQueueGenericSend+0x204>
				--cRxLock;
 800c7fc:	1e6b      	subs	r3, r5, #1
 800c7fe:	b2da      	uxtb	r2, r3
 800c800:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c802:	b16a      	cbz	r2, 800c820 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c804:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c806:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c808:	b153      	cbz	r3, 800c820 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c80a:	f001 fa91 	bl	800dd30 <xTaskRemoveFromEventList>
 800c80e:	2800      	cmp	r0, #0
 800c810:	d0f4      	beq.n	800c7fc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800c812:	f001 fb29 	bl	800de68 <vTaskMissedYield>
				--cRxLock;
 800c816:	1e6b      	subs	r3, r5, #1
 800c818:	b2da      	uxtb	r2, r3
 800c81a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c81c:	2a00      	cmp	r2, #0
 800c81e:	d1f1      	bne.n	800c804 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800c820:	23ff      	movs	r3, #255	; 0xff
 800c822:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c826:	f7ff fc27 	bl	800c078 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800c82a:	f001 f981 	bl	800db30 <xTaskResumeAll>
 800c82e:	2800      	cmp	r0, #0
 800c830:	d190      	bne.n	800c754 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800c832:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c836:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c83a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c83e:	f3bf 8f4f 	dsb	sy
 800c842:	f3bf 8f6f 	isb	sy
 800c846:	e785      	b.n	800c754 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800c848:	a802      	add	r0, sp, #8
 800c84a:	f001 fab9 	bl	800ddc0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800c84e:	e71a      	b.n	800c686 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c850:	463a      	mov	r2, r7
 800c852:	4641      	mov	r1, r8
 800c854:	4620      	mov	r0, r4
 800c856:	f7ff fd4f 	bl	800c2f8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c85a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c85c:	2b00      	cmp	r3, #0
 800c85e:	d153      	bne.n	800c908 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800c860:	b148      	cbz	r0, 800c876 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800c862:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c866:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c86a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c86e:	f3bf 8f4f 	dsb	sy
 800c872:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800c876:	f7ff fbff 	bl	800c078 <vPortExitCritical>
				return pdPASS;
 800c87a:	2001      	movs	r0, #1
}
 800c87c:	b005      	add	sp, #20
 800c87e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c882:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800c884:	f7ff fbf8 	bl	800c078 <vPortExitCritical>
					return errQUEUE_FULL;
 800c888:	9800      	ldr	r0, [sp, #0]
 800c88a:	e7f7      	b.n	800c87c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800c88c:	f7ff fbd2 	bl	800c034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c890:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c894:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c896:	2d00      	cmp	r5, #0
 800c898:	dd10      	ble.n	800c8bc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c89a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800c89e:	e003      	b.n	800c8a8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800c8a0:	1e6b      	subs	r3, r5, #1
 800c8a2:	b2da      	uxtb	r2, r3
 800c8a4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c8a6:	b14a      	cbz	r2, 800c8bc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c8a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c8aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c8ac:	b133      	cbz	r3, 800c8bc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c8ae:	f001 fa3f 	bl	800dd30 <xTaskRemoveFromEventList>
 800c8b2:	2800      	cmp	r0, #0
 800c8b4:	d0f4      	beq.n	800c8a0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800c8b6:	f001 fad7 	bl	800de68 <vTaskMissedYield>
 800c8ba:	e7f1      	b.n	800c8a0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800c8bc:	23ff      	movs	r3, #255	; 0xff
 800c8be:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c8c2:	f7ff fbd9 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c8c6:	f7ff fbb5 	bl	800c034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c8ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c8ce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c8d0:	2d00      	cmp	r5, #0
 800c8d2:	dd10      	ble.n	800c8f6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c8d4:	f104 0610 	add.w	r6, r4, #16
 800c8d8:	e003      	b.n	800c8e2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800c8da:	1e6b      	subs	r3, r5, #1
 800c8dc:	b2da      	uxtb	r2, r3
 800c8de:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c8e0:	b14a      	cbz	r2, 800c8f6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c8e2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c8e4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c8e6:	b133      	cbz	r3, 800c8f6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c8e8:	f001 fa22 	bl	800dd30 <xTaskRemoveFromEventList>
 800c8ec:	2800      	cmp	r0, #0
 800c8ee:	d0f4      	beq.n	800c8da <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800c8f0:	f001 faba 	bl	800de68 <vTaskMissedYield>
 800c8f4:	e7f1      	b.n	800c8da <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800c8f6:	23ff      	movs	r3, #255	; 0xff
 800c8f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c8fc:	f7ff fbbc 	bl	800c078 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800c900:	f001 f916 	bl	800db30 <xTaskResumeAll>
			return errQUEUE_FULL;
 800c904:	2000      	movs	r0, #0
 800c906:	e7b9      	b.n	800c87c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c908:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800c90c:	f001 fa10 	bl	800dd30 <xTaskRemoveFromEventList>
 800c910:	2800      	cmp	r0, #0
 800c912:	d0b0      	beq.n	800c876 <xQueueGenericSend+0x25a>
 800c914:	e7a5      	b.n	800c862 <xQueueGenericSend+0x246>
 800c916:	bf00      	nop

0800c918 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800c918:	2800      	cmp	r0, #0
 800c91a:	d04b      	beq.n	800c9b4 <xQueueGenericSendFromISR+0x9c>
{
 800c91c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c920:	460e      	mov	r6, r1
 800c922:	4617      	mov	r7, r2
 800c924:	461d      	mov	r5, r3
 800c926:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c928:	b321      	cbz	r1, 800c974 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800c92a:	2d02      	cmp	r5, #2
 800c92c:	d10b      	bne.n	800c946 <xQueueGenericSendFromISR+0x2e>
 800c92e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c930:	2b01      	cmp	r3, #1
 800c932:	d008      	beq.n	800c946 <xQueueGenericSendFromISR+0x2e>
 800c934:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c938:	f383 8811 	msr	BASEPRI, r3
 800c93c:	f3bf 8f6f 	isb	sy
 800c940:	f3bf 8f4f 	dsb	sy
 800c944:	e7fe      	b.n	800c944 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800c946:	f7ff fca9 	bl	800c29c <vPortValidateInterruptPriority>
	__asm volatile
 800c94a:	f3ef 8811 	mrs	r8, BASEPRI
 800c94e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c952:	f383 8811 	msr	BASEPRI, r3
 800c956:	f3bf 8f6f 	isb	sy
 800c95a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c95e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c960:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c962:	429a      	cmp	r2, r3
 800c964:	d312      	bcc.n	800c98c <xQueueGenericSendFromISR+0x74>
 800c966:	2d02      	cmp	r5, #2
 800c968:	d010      	beq.n	800c98c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800c96a:	2000      	movs	r0, #0
	__asm volatile
 800c96c:	f388 8811 	msr	BASEPRI, r8
}
 800c970:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c974:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800c976:	2b00      	cmp	r3, #0
 800c978:	d0d7      	beq.n	800c92a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800c97a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c97e:	f383 8811 	msr	BASEPRI, r3
 800c982:	f3bf 8f6f 	isb	sy
 800c986:	f3bf 8f4f 	dsb	sy
 800c98a:	e7fe      	b.n	800c98a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c98c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800c98e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c992:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c994:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800c996:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c998:	4620      	mov	r0, r4
 800c99a:	f7ff fcad 	bl	800c2f8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800c99e:	1c6b      	adds	r3, r5, #1
 800c9a0:	d011      	beq.n	800c9c6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800c9a2:	1c6b      	adds	r3, r5, #1
 800c9a4:	b25b      	sxtb	r3, r3
 800c9a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800c9aa:	2001      	movs	r0, #1
	__asm volatile
 800c9ac:	f388 8811 	msr	BASEPRI, r8
}
 800c9b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800c9b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c9b8:	f383 8811 	msr	BASEPRI, r3
 800c9bc:	f3bf 8f6f 	isb	sy
 800c9c0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800c9c4:	e7fe      	b.n	800c9c4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c9c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c9c8:	2b00      	cmp	r3, #0
 800c9ca:	d0ee      	beq.n	800c9aa <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c9cc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800c9d0:	f001 f9ae 	bl	800dd30 <xTaskRemoveFromEventList>
 800c9d4:	2800      	cmp	r0, #0
 800c9d6:	d0e8      	beq.n	800c9aa <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800c9d8:	2f00      	cmp	r7, #0
 800c9da:	d0e6      	beq.n	800c9aa <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800c9dc:	2001      	movs	r0, #1
 800c9de:	6038      	str	r0, [r7, #0]
 800c9e0:	e7c4      	b.n	800c96c <xQueueGenericSendFromISR+0x54>
 800c9e2:	bf00      	nop

0800c9e4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800c9e4:	b370      	cbz	r0, 800ca44 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800c9e6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800c9e8:	b570      	push	{r4, r5, r6, lr}
 800c9ea:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800c9ec:	b143      	cbz	r3, 800ca00 <xQueueGiveFromISR+0x1c>
 800c9ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c9f2:	f383 8811 	msr	BASEPRI, r3
 800c9f6:	f3bf 8f6f 	isb	sy
 800c9fa:	f3bf 8f4f 	dsb	sy
 800c9fe:	e7fe      	b.n	800c9fe <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ca00:	6803      	ldr	r3, [r0, #0]
 800ca02:	460c      	mov	r4, r1
 800ca04:	b33b      	cbz	r3, 800ca56 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ca06:	f7ff fc49 	bl	800c29c <vPortValidateInterruptPriority>
	__asm volatile
 800ca0a:	f3ef 8511 	mrs	r5, BASEPRI
 800ca0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca12:	f383 8811 	msr	BASEPRI, r3
 800ca16:	f3bf 8f6f 	isb	sy
 800ca1a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ca1e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800ca20:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800ca22:	429a      	cmp	r2, r3
 800ca24:	d923      	bls.n	800ca6e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ca26:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ca2a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800ca2c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ca2e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800ca30:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800ca32:	d020      	beq.n	800ca76 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ca34:	3301      	adds	r3, #1
 800ca36:	b25b      	sxtb	r3, r3
 800ca38:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800ca3c:	2001      	movs	r0, #1
	__asm volatile
 800ca3e:	f385 8811 	msr	BASEPRI, r5
}
 800ca42:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800ca44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca48:	f383 8811 	msr	BASEPRI, r3
 800ca4c:	f3bf 8f6f 	isb	sy
 800ca50:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ca54:	e7fe      	b.n	800ca54 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ca56:	6883      	ldr	r3, [r0, #8]
 800ca58:	2b00      	cmp	r3, #0
 800ca5a:	d0d4      	beq.n	800ca06 <xQueueGiveFromISR+0x22>
 800ca5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca60:	f383 8811 	msr	BASEPRI, r3
 800ca64:	f3bf 8f6f 	isb	sy
 800ca68:	f3bf 8f4f 	dsb	sy
 800ca6c:	e7fe      	b.n	800ca6c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800ca6e:	2000      	movs	r0, #0
	__asm volatile
 800ca70:	f385 8811 	msr	BASEPRI, r5
}
 800ca74:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ca76:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800ca78:	2b00      	cmp	r3, #0
 800ca7a:	d0df      	beq.n	800ca3c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ca7c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800ca80:	f001 f956 	bl	800dd30 <xTaskRemoveFromEventList>
 800ca84:	2800      	cmp	r0, #0
 800ca86:	d0d9      	beq.n	800ca3c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800ca88:	2c00      	cmp	r4, #0
 800ca8a:	d0d7      	beq.n	800ca3c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ca8c:	2001      	movs	r0, #1
 800ca8e:	6020      	str	r0, [r4, #0]
 800ca90:	e7ee      	b.n	800ca70 <xQueueGiveFromISR+0x8c>
 800ca92:	bf00      	nop

0800ca94 <xQueueReceive>:
{
 800ca94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ca98:	b085      	sub	sp, #20
 800ca9a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ca9c:	2800      	cmp	r0, #0
 800ca9e:	f000 815c 	beq.w	800cd5a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800caa2:	460f      	mov	r7, r1
 800caa4:	4604      	mov	r4, r0
 800caa6:	2900      	cmp	r1, #0
 800caa8:	d079      	beq.n	800cb9e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800caaa:	f001 f9e3 	bl	800de74 <xTaskGetSchedulerState>
 800caae:	2800      	cmp	r0, #0
 800cab0:	f000 8081 	beq.w	800cbb6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800cab4:	f7ff fabe 	bl	800c034 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800cab8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800caba:	2d00      	cmp	r5, #0
 800cabc:	f040 8138 	bne.w	800cd30 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800cac0:	9b01      	ldr	r3, [sp, #4]
 800cac2:	2b00      	cmp	r3, #0
 800cac4:	f000 80d5 	beq.w	800cc72 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800cac8:	a802      	add	r0, sp, #8
 800caca:	f001 f979 	bl	800ddc0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800cace:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cad0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800cad4:	f7ff fad0 	bl	800c078 <vPortExitCritical>
		vTaskSuspendAll();
 800cad8:	f001 f822 	bl	800db20 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800cadc:	f7ff faaa 	bl	800c034 <vPortEnterCritical>
 800cae0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cae4:	2bff      	cmp	r3, #255	; 0xff
 800cae6:	bf08      	it	eq
 800cae8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800caec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800caf0:	2bff      	cmp	r3, #255	; 0xff
 800caf2:	bf08      	it	eq
 800caf4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800caf8:	f7ff fabe 	bl	800c078 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800cafc:	a901      	add	r1, sp, #4
 800cafe:	a802      	add	r0, sp, #8
 800cb00:	f001 f96a 	bl	800ddd8 <xTaskCheckForTimeOut>
 800cb04:	2800      	cmp	r0, #0
 800cb06:	d163      	bne.n	800cbd0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800cb08:	f7ff fa94 	bl	800c034 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800cb0c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cb0e:	2b00      	cmp	r3, #0
 800cb10:	f000 80b5 	beq.w	800cc7e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800cb14:	f7ff fab0 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cb18:	f7ff fa8c 	bl	800c034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cb1c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cb20:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cb22:	2d00      	cmp	r5, #0
 800cb24:	dc04      	bgt.n	800cb30 <xQueueReceive+0x9c>
 800cb26:	e011      	b.n	800cb4c <xQueueReceive+0xb8>
			--cTxLock;
 800cb28:	1e6b      	subs	r3, r5, #1
 800cb2a:	b2da      	uxtb	r2, r3
 800cb2c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cb2e:	b16a      	cbz	r2, 800cb4c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cb30:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cb32:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cb34:	b153      	cbz	r3, 800cb4c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cb36:	f001 f8fb 	bl	800dd30 <xTaskRemoveFromEventList>
 800cb3a:	2800      	cmp	r0, #0
 800cb3c:	d0f4      	beq.n	800cb28 <xQueueReceive+0x94>
						vTaskMissedYield();
 800cb3e:	f001 f993 	bl	800de68 <vTaskMissedYield>
			--cTxLock;
 800cb42:	1e6b      	subs	r3, r5, #1
 800cb44:	b2da      	uxtb	r2, r3
 800cb46:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cb48:	2a00      	cmp	r2, #0
 800cb4a:	d1f1      	bne.n	800cb30 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800cb4c:	23ff      	movs	r3, #255	; 0xff
 800cb4e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cb52:	f7ff fa91 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cb56:	f7ff fa6d 	bl	800c034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cb5a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cb5e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cb60:	2d00      	cmp	r5, #0
 800cb62:	dd14      	ble.n	800cb8e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cb64:	f104 0910 	add.w	r9, r4, #16
 800cb68:	e003      	b.n	800cb72 <xQueueReceive+0xde>
				--cRxLock;
 800cb6a:	1e6b      	subs	r3, r5, #1
 800cb6c:	b2da      	uxtb	r2, r3
 800cb6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cb70:	b16a      	cbz	r2, 800cb8e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cb72:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cb74:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cb76:	b153      	cbz	r3, 800cb8e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cb78:	f001 f8da 	bl	800dd30 <xTaskRemoveFromEventList>
 800cb7c:	2800      	cmp	r0, #0
 800cb7e:	d0f4      	beq.n	800cb6a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800cb80:	f001 f972 	bl	800de68 <vTaskMissedYield>
				--cRxLock;
 800cb84:	1e6b      	subs	r3, r5, #1
 800cb86:	b2da      	uxtb	r2, r3
 800cb88:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cb8a:	2a00      	cmp	r2, #0
 800cb8c:	d1f1      	bne.n	800cb72 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800cb8e:	23ff      	movs	r3, #255	; 0xff
 800cb90:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cb94:	f7ff fa70 	bl	800c078 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800cb98:	f000 ffca 	bl	800db30 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800cb9c:	e060      	b.n	800cc60 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800cb9e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800cba0:	2b00      	cmp	r3, #0
 800cba2:	d082      	beq.n	800caaa <xQueueReceive+0x16>
	__asm volatile
 800cba4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cba8:	f383 8811 	msr	BASEPRI, r3
 800cbac:	f3bf 8f6f 	isb	sy
 800cbb0:	f3bf 8f4f 	dsb	sy
 800cbb4:	e7fe      	b.n	800cbb4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800cbb6:	9b01      	ldr	r3, [sp, #4]
 800cbb8:	2b00      	cmp	r3, #0
 800cbba:	f43f af7b 	beq.w	800cab4 <xQueueReceive+0x20>
 800cbbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cbc2:	f383 8811 	msr	BASEPRI, r3
 800cbc6:	f3bf 8f6f 	isb	sy
 800cbca:	f3bf 8f4f 	dsb	sy
 800cbce:	e7fe      	b.n	800cbce <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800cbd0:	f7ff fa30 	bl	800c034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cbd4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cbd8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cbda:	2d00      	cmp	r5, #0
 800cbdc:	dc04      	bgt.n	800cbe8 <xQueueReceive+0x154>
 800cbde:	e011      	b.n	800cc04 <xQueueReceive+0x170>
			--cTxLock;
 800cbe0:	1e6b      	subs	r3, r5, #1
 800cbe2:	b2da      	uxtb	r2, r3
 800cbe4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cbe6:	b16a      	cbz	r2, 800cc04 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cbe8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cbea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cbec:	b153      	cbz	r3, 800cc04 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cbee:	f001 f89f 	bl	800dd30 <xTaskRemoveFromEventList>
 800cbf2:	2800      	cmp	r0, #0
 800cbf4:	d0f4      	beq.n	800cbe0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800cbf6:	f001 f937 	bl	800de68 <vTaskMissedYield>
			--cTxLock;
 800cbfa:	1e6b      	subs	r3, r5, #1
 800cbfc:	b2da      	uxtb	r2, r3
 800cbfe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cc00:	2a00      	cmp	r2, #0
 800cc02:	d1f1      	bne.n	800cbe8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800cc04:	23ff      	movs	r3, #255	; 0xff
 800cc06:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cc0a:	f7ff fa35 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cc0e:	f7ff fa11 	bl	800c034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cc12:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cc16:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cc18:	2d00      	cmp	r5, #0
 800cc1a:	dd14      	ble.n	800cc46 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cc1c:	f104 0910 	add.w	r9, r4, #16
 800cc20:	e003      	b.n	800cc2a <xQueueReceive+0x196>
				--cRxLock;
 800cc22:	1e6b      	subs	r3, r5, #1
 800cc24:	b2da      	uxtb	r2, r3
 800cc26:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cc28:	b16a      	cbz	r2, 800cc46 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cc2a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cc2c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cc2e:	b153      	cbz	r3, 800cc46 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cc30:	f001 f87e 	bl	800dd30 <xTaskRemoveFromEventList>
 800cc34:	2800      	cmp	r0, #0
 800cc36:	d0f4      	beq.n	800cc22 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800cc38:	f001 f916 	bl	800de68 <vTaskMissedYield>
				--cRxLock;
 800cc3c:	1e6b      	subs	r3, r5, #1
 800cc3e:	b2da      	uxtb	r2, r3
 800cc40:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cc42:	2a00      	cmp	r2, #0
 800cc44:	d1f1      	bne.n	800cc2a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800cc46:	23ff      	movs	r3, #255	; 0xff
 800cc48:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cc4c:	f7ff fa14 	bl	800c078 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800cc50:	f000 ff6e 	bl	800db30 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800cc54:	f7ff f9ee 	bl	800c034 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800cc58:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cc5a:	b153      	cbz	r3, 800cc72 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800cc5c:	f7ff fa0c 	bl	800c078 <vPortExitCritical>
		taskENTER_CRITICAL();
 800cc60:	f7ff f9e8 	bl	800c034 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800cc64:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800cc66:	2d00      	cmp	r5, #0
 800cc68:	d162      	bne.n	800cd30 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800cc6a:	9b01      	ldr	r3, [sp, #4]
 800cc6c:	2b00      	cmp	r3, #0
 800cc6e:	f47f af31 	bne.w	800cad4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800cc72:	f7ff fa01 	bl	800c078 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800cc76:	2000      	movs	r0, #0
}
 800cc78:	b005      	add	sp, #20
 800cc7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800cc7e:	f7ff f9fb 	bl	800c078 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800cc82:	9901      	ldr	r1, [sp, #4]
 800cc84:	4630      	mov	r0, r6
 800cc86:	f000 ffc5 	bl	800dc14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800cc8a:	f7ff f9d3 	bl	800c034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cc8e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cc92:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cc94:	2d00      	cmp	r5, #0
 800cc96:	dc04      	bgt.n	800cca2 <xQueueReceive+0x20e>
 800cc98:	e011      	b.n	800ccbe <xQueueReceive+0x22a>
			--cTxLock;
 800cc9a:	1e6b      	subs	r3, r5, #1
 800cc9c:	b2da      	uxtb	r2, r3
 800cc9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cca0:	b16a      	cbz	r2, 800ccbe <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cca2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cca4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cca6:	b153      	cbz	r3, 800ccbe <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cca8:	f001 f842 	bl	800dd30 <xTaskRemoveFromEventList>
 800ccac:	2800      	cmp	r0, #0
 800ccae:	d0f4      	beq.n	800cc9a <xQueueReceive+0x206>
						vTaskMissedYield();
 800ccb0:	f001 f8da 	bl	800de68 <vTaskMissedYield>
			--cTxLock;
 800ccb4:	1e6b      	subs	r3, r5, #1
 800ccb6:	b2da      	uxtb	r2, r3
 800ccb8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ccba:	2a00      	cmp	r2, #0
 800ccbc:	d1f1      	bne.n	800cca2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ccbe:	23ff      	movs	r3, #255	; 0xff
 800ccc0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ccc4:	f7ff f9d8 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ccc8:	f7ff f9b4 	bl	800c034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cccc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ccd0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ccd2:	2d00      	cmp	r5, #0
 800ccd4:	dd14      	ble.n	800cd00 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ccd6:	f104 0910 	add.w	r9, r4, #16
 800ccda:	e003      	b.n	800cce4 <xQueueReceive+0x250>
				--cRxLock;
 800ccdc:	1e6b      	subs	r3, r5, #1
 800ccde:	b2da      	uxtb	r2, r3
 800cce0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cce2:	b16a      	cbz	r2, 800cd00 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cce4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cce6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cce8:	b153      	cbz	r3, 800cd00 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ccea:	f001 f821 	bl	800dd30 <xTaskRemoveFromEventList>
 800ccee:	2800      	cmp	r0, #0
 800ccf0:	d0f4      	beq.n	800ccdc <xQueueReceive+0x248>
					vTaskMissedYield();
 800ccf2:	f001 f8b9 	bl	800de68 <vTaskMissedYield>
				--cRxLock;
 800ccf6:	1e6b      	subs	r3, r5, #1
 800ccf8:	b2da      	uxtb	r2, r3
 800ccfa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ccfc:	2a00      	cmp	r2, #0
 800ccfe:	d1f1      	bne.n	800cce4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800cd00:	23ff      	movs	r3, #255	; 0xff
 800cd02:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cd06:	f7ff f9b7 	bl	800c078 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800cd0a:	f000 ff11 	bl	800db30 <xTaskResumeAll>
 800cd0e:	2800      	cmp	r0, #0
 800cd10:	d1a6      	bne.n	800cc60 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800cd12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd1e:	f3bf 8f4f 	dsb	sy
 800cd22:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800cd26:	f7ff f985 	bl	800c034 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800cd2a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800cd2c:	2d00      	cmp	r5, #0
 800cd2e:	d09c      	beq.n	800cc6a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800cd30:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cd32:	b152      	cbz	r2, 800cd4a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800cd34:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800cd36:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800cd38:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800cd3a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800cd3c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800cd3e:	bf24      	itt	cs
 800cd40:	6821      	ldrcs	r1, [r4, #0]
 800cd42:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800cd44:	4638      	mov	r0, r7
 800cd46:	f01a fe96 	bl	8027a76 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800cd4a:	3d01      	subs	r5, #1
 800cd4c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cd4e:	6923      	ldr	r3, [r4, #16]
 800cd50:	b963      	cbnz	r3, 800cd6c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800cd52:	f7ff f991 	bl	800c078 <vPortExitCritical>
				return pdPASS;
 800cd56:	2001      	movs	r0, #1
 800cd58:	e78e      	b.n	800cc78 <xQueueReceive+0x1e4>
 800cd5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd5e:	f383 8811 	msr	BASEPRI, r3
 800cd62:	f3bf 8f6f 	isb	sy
 800cd66:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800cd6a:	e7fe      	b.n	800cd6a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cd6c:	f104 0010 	add.w	r0, r4, #16
 800cd70:	f000 ffde 	bl	800dd30 <xTaskRemoveFromEventList>
 800cd74:	2800      	cmp	r0, #0
 800cd76:	d0ec      	beq.n	800cd52 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800cd78:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd80:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd84:	f3bf 8f4f 	dsb	sy
 800cd88:	f3bf 8f6f 	isb	sy
 800cd8c:	e7e1      	b.n	800cd52 <xQueueReceive+0x2be>
 800cd8e:	bf00      	nop

0800cd90 <xQueueSemaphoreTake>:
{
 800cd90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd94:	b084      	sub	sp, #16
 800cd96:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800cd98:	2800      	cmp	r0, #0
 800cd9a:	d05c      	beq.n	800ce56 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800cd9c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800cd9e:	4604      	mov	r4, r0
 800cda0:	b147      	cbz	r7, 800cdb4 <xQueueSemaphoreTake+0x24>
 800cda2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cda6:	f383 8811 	msr	BASEPRI, r3
 800cdaa:	f3bf 8f6f 	isb	sy
 800cdae:	f3bf 8f4f 	dsb	sy
 800cdb2:	e7fe      	b.n	800cdb2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800cdb4:	f001 f85e 	bl	800de74 <xTaskGetSchedulerState>
 800cdb8:	4605      	mov	r5, r0
 800cdba:	2800      	cmp	r0, #0
 800cdbc:	d054      	beq.n	800ce68 <xQueueSemaphoreTake+0xd8>
 800cdbe:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cdc0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800cdc4:	f7ff f936 	bl	800c034 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800cdc8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800cdca:	2b00      	cmp	r3, #0
 800cdcc:	f040 8148 	bne.w	800d060 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800cdd0:	9b01      	ldr	r3, [sp, #4]
 800cdd2:	2b00      	cmp	r3, #0
 800cdd4:	f000 813a 	beq.w	800d04c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800cdd8:	2d00      	cmp	r5, #0
 800cdda:	f000 809d 	beq.w	800cf18 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800cdde:	f7ff f94b 	bl	800c078 <vPortExitCritical>
		vTaskSuspendAll();
 800cde2:	f000 fe9d 	bl	800db20 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800cde6:	f7ff f925 	bl	800c034 <vPortEnterCritical>
 800cdea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cdee:	2bff      	cmp	r3, #255	; 0xff
 800cdf0:	bf04      	itt	eq
 800cdf2:	2300      	moveq	r3, #0
 800cdf4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800cdf8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cdfc:	2bff      	cmp	r3, #255	; 0xff
 800cdfe:	bf04      	itt	eq
 800ce00:	2300      	moveq	r3, #0
 800ce02:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ce06:	f7ff f937 	bl	800c078 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ce0a:	a901      	add	r1, sp, #4
 800ce0c:	a802      	add	r0, sp, #8
 800ce0e:	f000 ffe3 	bl	800ddd8 <xTaskCheckForTimeOut>
 800ce12:	2800      	cmp	r0, #0
 800ce14:	d135      	bne.n	800ce82 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800ce16:	f7ff f90d 	bl	800c034 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ce1a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ce1c:	2b00      	cmp	r3, #0
 800ce1e:	f000 80a4 	beq.w	800cf6a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800ce22:	f7ff f929 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ce26:	f7ff f905 	bl	800c034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ce2a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ce2e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ce30:	2d00      	cmp	r5, #0
 800ce32:	dc05      	bgt.n	800ce40 <xQueueSemaphoreTake+0xb0>
 800ce34:	e074      	b.n	800cf20 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800ce36:	1e6b      	subs	r3, r5, #1
 800ce38:	b2da      	uxtb	r2, r3
 800ce3a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ce3c:	2a00      	cmp	r2, #0
 800ce3e:	d06f      	beq.n	800cf20 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ce40:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ce42:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ce44:	2b00      	cmp	r3, #0
 800ce46:	d06b      	beq.n	800cf20 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ce48:	f000 ff72 	bl	800dd30 <xTaskRemoveFromEventList>
 800ce4c:	2800      	cmp	r0, #0
 800ce4e:	d0f2      	beq.n	800ce36 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ce50:	f001 f80a 	bl	800de68 <vTaskMissedYield>
 800ce54:	e7ef      	b.n	800ce36 <xQueueSemaphoreTake+0xa6>
 800ce56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce5a:	f383 8811 	msr	BASEPRI, r3
 800ce5e:	f3bf 8f6f 	isb	sy
 800ce62:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ce66:	e7fe      	b.n	800ce66 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ce68:	9b01      	ldr	r3, [sp, #4]
 800ce6a:	2b00      	cmp	r3, #0
 800ce6c:	f000 80d4 	beq.w	800d018 <xQueueSemaphoreTake+0x288>
 800ce70:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce74:	f383 8811 	msr	BASEPRI, r3
 800ce78:	f3bf 8f6f 	isb	sy
 800ce7c:	f3bf 8f4f 	dsb	sy
 800ce80:	e7fe      	b.n	800ce80 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800ce82:	f7ff f8d7 	bl	800c034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ce86:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ce8a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ce8c:	2d00      	cmp	r5, #0
 800ce8e:	dc04      	bgt.n	800ce9a <xQueueSemaphoreTake+0x10a>
 800ce90:	e011      	b.n	800ceb6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800ce92:	1e6b      	subs	r3, r5, #1
 800ce94:	b2da      	uxtb	r2, r3
 800ce96:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ce98:	b16a      	cbz	r2, 800ceb6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ce9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ce9c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ce9e:	b153      	cbz	r3, 800ceb6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cea0:	f000 ff46 	bl	800dd30 <xTaskRemoveFromEventList>
 800cea4:	2800      	cmp	r0, #0
 800cea6:	d0f4      	beq.n	800ce92 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800cea8:	f000 ffde 	bl	800de68 <vTaskMissedYield>
			--cTxLock;
 800ceac:	1e6b      	subs	r3, r5, #1
 800ceae:	b2da      	uxtb	r2, r3
 800ceb0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ceb2:	2a00      	cmp	r2, #0
 800ceb4:	d1f1      	bne.n	800ce9a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800ceb6:	23ff      	movs	r3, #255	; 0xff
 800ceb8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cebc:	f7ff f8dc 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cec0:	f7ff f8b8 	bl	800c034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cec4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cec8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ceca:	2d00      	cmp	r5, #0
 800cecc:	dd14      	ble.n	800cef8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cece:	f104 0810 	add.w	r8, r4, #16
 800ced2:	e003      	b.n	800cedc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800ced4:	1e6b      	subs	r3, r5, #1
 800ced6:	b2da      	uxtb	r2, r3
 800ced8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ceda:	b16a      	cbz	r2, 800cef8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cedc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cede:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cee0:	b153      	cbz	r3, 800cef8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cee2:	f000 ff25 	bl	800dd30 <xTaskRemoveFromEventList>
 800cee6:	2800      	cmp	r0, #0
 800cee8:	d0f4      	beq.n	800ced4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ceea:	f000 ffbd 	bl	800de68 <vTaskMissedYield>
				--cRxLock;
 800ceee:	1e6b      	subs	r3, r5, #1
 800cef0:	b2da      	uxtb	r2, r3
 800cef2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cef4:	2a00      	cmp	r2, #0
 800cef6:	d1f1      	bne.n	800cedc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800cef8:	23ff      	movs	r3, #255	; 0xff
 800cefa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cefe:	f7ff f8bb 	bl	800c078 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800cf02:	f000 fe15 	bl	800db30 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800cf06:	f7ff f895 	bl	800c034 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800cf0a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cf0c:	2b00      	cmp	r3, #0
 800cf0e:	d07c      	beq.n	800d00a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800cf10:	f7ff f8b2 	bl	800c078 <vPortExitCritical>
	return xReturn;
 800cf14:	2501      	movs	r5, #1
 800cf16:	e755      	b.n	800cdc4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800cf18:	a802      	add	r0, sp, #8
 800cf1a:	f000 ff51 	bl	800ddc0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800cf1e:	e75e      	b.n	800cdde <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800cf20:	23ff      	movs	r3, #255	; 0xff
 800cf22:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cf26:	f7ff f8a7 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cf2a:	f7ff f883 	bl	800c034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cf2e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cf32:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cf34:	2d00      	cmp	r5, #0
 800cf36:	dd10      	ble.n	800cf5a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cf38:	f104 0810 	add.w	r8, r4, #16
 800cf3c:	e003      	b.n	800cf46 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800cf3e:	1e6b      	subs	r3, r5, #1
 800cf40:	b2da      	uxtb	r2, r3
 800cf42:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cf44:	b14a      	cbz	r2, 800cf5a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cf46:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cf48:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cf4a:	b133      	cbz	r3, 800cf5a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cf4c:	f000 fef0 	bl	800dd30 <xTaskRemoveFromEventList>
 800cf50:	2800      	cmp	r0, #0
 800cf52:	d0f4      	beq.n	800cf3e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800cf54:	f000 ff88 	bl	800de68 <vTaskMissedYield>
 800cf58:	e7f1      	b.n	800cf3e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800cf5a:	23ff      	movs	r3, #255	; 0xff
 800cf5c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cf60:	f7ff f88a 	bl	800c078 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800cf64:	f000 fde4 	bl	800db30 <xTaskResumeAll>
 800cf68:	e7d4      	b.n	800cf14 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800cf6a:	f7ff f885 	bl	800c078 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800cf6e:	6823      	ldr	r3, [r4, #0]
 800cf70:	2b00      	cmp	r3, #0
 800cf72:	d062      	beq.n	800d03a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800cf74:	9901      	ldr	r1, [sp, #4]
 800cf76:	4630      	mov	r0, r6
 800cf78:	f000 fe4c 	bl	800dc14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800cf7c:	f7ff f85a 	bl	800c034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cf80:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cf84:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cf86:	2d00      	cmp	r5, #0
 800cf88:	dc04      	bgt.n	800cf94 <xQueueSemaphoreTake+0x204>
 800cf8a:	e00d      	b.n	800cfa8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800cf8c:	1e6b      	subs	r3, r5, #1
 800cf8e:	b2da      	uxtb	r2, r3
 800cf90:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cf92:	b14a      	cbz	r2, 800cfa8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cf94:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cf96:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cf98:	b133      	cbz	r3, 800cfa8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cf9a:	f000 fec9 	bl	800dd30 <xTaskRemoveFromEventList>
 800cf9e:	2800      	cmp	r0, #0
 800cfa0:	d0f4      	beq.n	800cf8c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800cfa2:	f000 ff61 	bl	800de68 <vTaskMissedYield>
 800cfa6:	e7f1      	b.n	800cf8c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800cfa8:	23ff      	movs	r3, #255	; 0xff
 800cfaa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cfae:	f7ff f863 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cfb2:	f7ff f83f 	bl	800c034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cfb6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cfba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cfbc:	2d00      	cmp	r5, #0
 800cfbe:	dd10      	ble.n	800cfe2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cfc0:	f104 0810 	add.w	r8, r4, #16
 800cfc4:	e003      	b.n	800cfce <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800cfc6:	1e6b      	subs	r3, r5, #1
 800cfc8:	b2da      	uxtb	r2, r3
 800cfca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cfcc:	b14a      	cbz	r2, 800cfe2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cfce:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cfd0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cfd2:	b133      	cbz	r3, 800cfe2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cfd4:	f000 feac 	bl	800dd30 <xTaskRemoveFromEventList>
 800cfd8:	2800      	cmp	r0, #0
 800cfda:	d0f4      	beq.n	800cfc6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800cfdc:	f000 ff44 	bl	800de68 <vTaskMissedYield>
 800cfe0:	e7f1      	b.n	800cfc6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800cfe2:	23ff      	movs	r3, #255	; 0xff
 800cfe4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cfe8:	f7ff f846 	bl	800c078 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800cfec:	f000 fda0 	bl	800db30 <xTaskResumeAll>
 800cff0:	2800      	cmp	r0, #0
 800cff2:	d18f      	bne.n	800cf14 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800cff4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cff8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cffc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d000:	f3bf 8f4f 	dsb	sy
 800d004:	f3bf 8f6f 	isb	sy
 800d008:	e784      	b.n	800cf14 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800d00a:	f7ff f835 	bl	800c078 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800d00e:	b92f      	cbnz	r7, 800d01c <xQueueSemaphoreTake+0x28c>
}
 800d010:	4638      	mov	r0, r7
 800d012:	b004      	add	sp, #16
 800d014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d018:	4607      	mov	r7, r0
 800d01a:	e6d1      	b.n	800cdc0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800d01c:	f7ff f80a 	bl	800c034 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800d020:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d022:	b119      	cbz	r1, 800d02c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800d024:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d026:	6819      	ldr	r1, [r3, #0]
 800d028:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800d02c:	68a0      	ldr	r0, [r4, #8]
 800d02e:	f000 ffbd 	bl	800dfac <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800d032:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800d034:	f7ff f820 	bl	800c078 <vPortExitCritical>
 800d038:	e7ea      	b.n	800d010 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800d03a:	f7fe fffb 	bl	800c034 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d03e:	68a0      	ldr	r0, [r4, #8]
 800d040:	f000 ff28 	bl	800de94 <xTaskPriorityInherit>
 800d044:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800d046:	f7ff f817 	bl	800c078 <vPortExitCritical>
 800d04a:	e793      	b.n	800cf74 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800d04c:	b197      	cbz	r7, 800d074 <xQueueSemaphoreTake+0x2e4>
 800d04e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d052:	f383 8811 	msr	BASEPRI, r3
 800d056:	f3bf 8f6f 	isb	sy
 800d05a:	f3bf 8f4f 	dsb	sy
 800d05e:	e7fe      	b.n	800d05e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d060:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800d062:	3b01      	subs	r3, #1
 800d064:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d066:	b1ca      	cbz	r2, 800d09c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d068:	6923      	ldr	r3, [r4, #16]
 800d06a:	b933      	cbnz	r3, 800d07a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800d06c:	f7ff f804 	bl	800c078 <vPortExitCritical>
				return pdPASS;
 800d070:	2701      	movs	r7, #1
 800d072:	e7cd      	b.n	800d010 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800d074:	f7ff f800 	bl	800c078 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800d078:	e7ca      	b.n	800d010 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d07a:	f104 0010 	add.w	r0, r4, #16
 800d07e:	f000 fe57 	bl	800dd30 <xTaskRemoveFromEventList>
 800d082:	2800      	cmp	r0, #0
 800d084:	d0f2      	beq.n	800d06c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800d086:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d08a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d08e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d092:	f3bf 8f4f 	dsb	sy
 800d096:	f3bf 8f6f 	isb	sy
 800d09a:	e7e7      	b.n	800d06c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800d09c:	f000 ffda 	bl	800e054 <pvTaskIncrementMutexHeldCount>
 800d0a0:	60a0      	str	r0, [r4, #8]
 800d0a2:	e7e1      	b.n	800d068 <xQueueSemaphoreTake+0x2d8>

0800d0a4 <xQueueReceiveFromISR>:
{
 800d0a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800d0a8:	b310      	cbz	r0, 800d0f0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d0aa:	460e      	mov	r6, r1
 800d0ac:	4617      	mov	r7, r2
 800d0ae:	4604      	mov	r4, r0
 800d0b0:	b191      	cbz	r1, 800d0d8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d0b2:	f7ff f8f3 	bl	800c29c <vPortValidateInterruptPriority>
	__asm volatile
 800d0b6:	f3ef 8911 	mrs	r9, BASEPRI
 800d0ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0be:	f383 8811 	msr	BASEPRI, r3
 800d0c2:	f3bf 8f6f 	isb	sy
 800d0c6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d0ca:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d0cc:	b9cd      	cbnz	r5, 800d102 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800d0ce:	4628      	mov	r0, r5
	__asm volatile
 800d0d0:	f389 8811 	msr	BASEPRI, r9
}
 800d0d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d0d8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d0da:	2b00      	cmp	r3, #0
 800d0dc:	d0e9      	beq.n	800d0b2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800d0de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0e2:	f383 8811 	msr	BASEPRI, r3
 800d0e6:	f3bf 8f6f 	isb	sy
 800d0ea:	f3bf 8f4f 	dsb	sy
 800d0ee:	e7fe      	b.n	800d0ee <xQueueReceiveFromISR+0x4a>
 800d0f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0f4:	f383 8811 	msr	BASEPRI, r3
 800d0f8:	f3bf 8f6f 	isb	sy
 800d0fc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d100:	e7fe      	b.n	800d100 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800d102:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d106:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800d108:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d10c:	b152      	cbz	r2, 800d124 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d10e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d110:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d112:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d114:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d116:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d118:	bf24      	itt	cs
 800d11a:	6821      	ldrcs	r1, [r4, #0]
 800d11c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d11e:	4630      	mov	r0, r6
 800d120:	f01a fca9 	bl	8027a76 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800d124:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800d126:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800d12a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800d12c:	d009      	beq.n	800d142 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800d12e:	f108 0301 	add.w	r3, r8, #1
 800d132:	b25b      	sxtb	r3, r3
 800d134:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800d138:	2001      	movs	r0, #1
	__asm volatile
 800d13a:	f389 8811 	msr	BASEPRI, r9
}
 800d13e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d142:	6923      	ldr	r3, [r4, #16]
 800d144:	2b00      	cmp	r3, #0
 800d146:	d0f7      	beq.n	800d138 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d148:	f104 0010 	add.w	r0, r4, #16
 800d14c:	f000 fdf0 	bl	800dd30 <xTaskRemoveFromEventList>
 800d150:	2800      	cmp	r0, #0
 800d152:	d0f1      	beq.n	800d138 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800d154:	2f00      	cmp	r7, #0
 800d156:	d0ef      	beq.n	800d138 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800d158:	2001      	movs	r0, #1
 800d15a:	6038      	str	r0, [r7, #0]
 800d15c:	e7b8      	b.n	800d0d0 <xQueueReceiveFromISR+0x2c>
 800d15e:	bf00      	nop

0800d160 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800d160:	b158      	cbz	r0, 800d17a <uxQueueMessagesWaiting+0x1a>
{
 800d162:	b510      	push	{r4, lr}
 800d164:	4604      	mov	r4, r0
 800d166:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800d168:	f7fe ff64 	bl	800c034 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800d16c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d16e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800d170:	f7fe ff82 	bl	800c078 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800d174:	9801      	ldr	r0, [sp, #4]
 800d176:	b002      	add	sp, #8
 800d178:	bd10      	pop	{r4, pc}
	__asm volatile
 800d17a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d17e:	f383 8811 	msr	BASEPRI, r3
 800d182:	f3bf 8f6f 	isb	sy
 800d186:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800d18a:	e7fe      	b.n	800d18a <uxQueueMessagesWaiting+0x2a>

0800d18c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800d18c:	b108      	cbz	r0, 800d192 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800d18e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800d190:	4770      	bx	lr
 800d192:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d196:	f383 8811 	msr	BASEPRI, r3
 800d19a:	f3bf 8f6f 	isb	sy
 800d19e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d1a2:	e7fe      	b.n	800d1a2 <uxQueueMessagesWaitingFromISR+0x16>
 800d1a4:	0000      	movs	r0, r0
	...

0800d1a8 <vQueueDelete>:
	configASSERT( pxQueue );
 800d1a8:	b1f0      	cbz	r0, 800d1e8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800d1aa:	4b21      	ldr	r3, [pc, #132]	; (800d230 <vQueueDelete+0x88>)
 800d1ac:	685a      	ldr	r2, [r3, #4]
 800d1ae:	4290      	cmp	r0, r2
 800d1b0:	d025      	beq.n	800d1fe <vQueueDelete+0x56>
 800d1b2:	68da      	ldr	r2, [r3, #12]
 800d1b4:	4290      	cmp	r0, r2
 800d1b6:	d02c      	beq.n	800d212 <vQueueDelete+0x6a>
 800d1b8:	695a      	ldr	r2, [r3, #20]
 800d1ba:	4290      	cmp	r0, r2
 800d1bc:	d02b      	beq.n	800d216 <vQueueDelete+0x6e>
 800d1be:	69da      	ldr	r2, [r3, #28]
 800d1c0:	4290      	cmp	r0, r2
 800d1c2:	d02a      	beq.n	800d21a <vQueueDelete+0x72>
 800d1c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d1c6:	4290      	cmp	r0, r2
 800d1c8:	d029      	beq.n	800d21e <vQueueDelete+0x76>
 800d1ca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800d1cc:	4290      	cmp	r0, r2
 800d1ce:	d01e      	beq.n	800d20e <vQueueDelete+0x66>
 800d1d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d1d2:	4290      	cmp	r0, r2
 800d1d4:	d025      	beq.n	800d222 <vQueueDelete+0x7a>
 800d1d6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800d1d8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d1da:	bf08      	it	eq
 800d1dc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800d1de:	d00f      	beq.n	800d200 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800d1e0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800d1e4:	b14b      	cbz	r3, 800d1fa <vQueueDelete+0x52>
}
 800d1e6:	4770      	bx	lr
 800d1e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1ec:	f383 8811 	msr	BASEPRI, r3
 800d1f0:	f3bf 8f6f 	isb	sy
 800d1f4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d1f8:	e7fe      	b.n	800d1f8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800d1fa:	f7fe be07 	b.w	800be0c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d1fe:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800d200:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800d228 <vQueueDelete+0x80>
 800d204:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d208:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800d20c:	e7e8      	b.n	800d1e0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d20e:	2205      	movs	r2, #5
 800d210:	e7f6      	b.n	800d200 <vQueueDelete+0x58>
 800d212:	2201      	movs	r2, #1
 800d214:	e7f4      	b.n	800d200 <vQueueDelete+0x58>
 800d216:	2202      	movs	r2, #2
 800d218:	e7f2      	b.n	800d200 <vQueueDelete+0x58>
 800d21a:	2203      	movs	r2, #3
 800d21c:	e7f0      	b.n	800d200 <vQueueDelete+0x58>
 800d21e:	2204      	movs	r2, #4
 800d220:	e7ee      	b.n	800d200 <vQueueDelete+0x58>
 800d222:	2206      	movs	r2, #6
 800d224:	e7ec      	b.n	800d200 <vQueueDelete+0x58>
 800d226:	bf00      	nop
	...
 800d230:	20013148 	.word	0x20013148

0800d234 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800d234:	4b12      	ldr	r3, [pc, #72]	; (800d280 <vQueueAddToRegistry+0x4c>)
 800d236:	681a      	ldr	r2, [r3, #0]
 800d238:	b17a      	cbz	r2, 800d25a <vQueueAddToRegistry+0x26>
 800d23a:	689a      	ldr	r2, [r3, #8]
 800d23c:	b162      	cbz	r2, 800d258 <vQueueAddToRegistry+0x24>
 800d23e:	691a      	ldr	r2, [r3, #16]
 800d240:	b192      	cbz	r2, 800d268 <vQueueAddToRegistry+0x34>
 800d242:	699a      	ldr	r2, [r3, #24]
 800d244:	b192      	cbz	r2, 800d26c <vQueueAddToRegistry+0x38>
 800d246:	6a1a      	ldr	r2, [r3, #32]
 800d248:	b192      	cbz	r2, 800d270 <vQueueAddToRegistry+0x3c>
 800d24a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800d24c:	b192      	cbz	r2, 800d274 <vQueueAddToRegistry+0x40>
 800d24e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d250:	b192      	cbz	r2, 800d278 <vQueueAddToRegistry+0x44>
 800d252:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800d254:	b192      	cbz	r2, 800d27c <vQueueAddToRegistry+0x48>
	}
 800d256:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d258:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800d25a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800d25e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800d262:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800d266:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800d268:	2202      	movs	r2, #2
 800d26a:	e7f6      	b.n	800d25a <vQueueAddToRegistry+0x26>
 800d26c:	2203      	movs	r2, #3
 800d26e:	e7f4      	b.n	800d25a <vQueueAddToRegistry+0x26>
 800d270:	2204      	movs	r2, #4
 800d272:	e7f2      	b.n	800d25a <vQueueAddToRegistry+0x26>
 800d274:	2205      	movs	r2, #5
 800d276:	e7f0      	b.n	800d25a <vQueueAddToRegistry+0x26>
 800d278:	2206      	movs	r2, #6
 800d27a:	e7ee      	b.n	800d25a <vQueueAddToRegistry+0x26>
 800d27c:	2207      	movs	r2, #7
 800d27e:	e7ec      	b.n	800d25a <vQueueAddToRegistry+0x26>
 800d280:	20013148 	.word	0x20013148

0800d284 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800d284:	b570      	push	{r4, r5, r6, lr}
 800d286:	4605      	mov	r5, r0
 800d288:	460e      	mov	r6, r1
 800d28a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800d28c:	f7fe fed2 	bl	800c034 <vPortEnterCritical>
 800d290:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800d294:	2bff      	cmp	r3, #255	; 0xff
 800d296:	bf04      	itt	eq
 800d298:	2300      	moveq	r3, #0
 800d29a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800d29e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800d2a2:	2bff      	cmp	r3, #255	; 0xff
 800d2a4:	bf04      	itt	eq
 800d2a6:	2300      	moveq	r3, #0
 800d2a8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800d2ac:	f7fe fee4 	bl	800c078 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800d2b0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800d2b2:	2b00      	cmp	r3, #0
 800d2b4:	d043      	beq.n	800d33e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800d2b6:	f7fe febd 	bl	800c034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d2ba:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800d2be:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d2c0:	2c00      	cmp	r4, #0
 800d2c2:	dd14      	ble.n	800d2ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d2c4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800d2c8:	e003      	b.n	800d2d2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800d2ca:	1e63      	subs	r3, r4, #1
 800d2cc:	b2da      	uxtb	r2, r3
 800d2ce:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d2d0:	b16a      	cbz	r2, 800d2ee <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d2d2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d2d4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d2d6:	b153      	cbz	r3, 800d2ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d2d8:	f000 fd2a 	bl	800dd30 <xTaskRemoveFromEventList>
 800d2dc:	2800      	cmp	r0, #0
 800d2de:	d0f4      	beq.n	800d2ca <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800d2e0:	f000 fdc2 	bl	800de68 <vTaskMissedYield>
			--cTxLock;
 800d2e4:	1e63      	subs	r3, r4, #1
 800d2e6:	b2da      	uxtb	r2, r3
 800d2e8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d2ea:	2a00      	cmp	r2, #0
 800d2ec:	d1f1      	bne.n	800d2d2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800d2ee:	23ff      	movs	r3, #255	; 0xff
 800d2f0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d2f4:	f7fe fec0 	bl	800c078 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d2f8:	f7fe fe9c 	bl	800c034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d2fc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800d300:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d302:	2c00      	cmp	r4, #0
 800d304:	dd14      	ble.n	800d330 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d306:	f105 0610 	add.w	r6, r5, #16
 800d30a:	e003      	b.n	800d314 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800d30c:	1e63      	subs	r3, r4, #1
 800d30e:	b2da      	uxtb	r2, r3
 800d310:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d312:	b16a      	cbz	r2, 800d330 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d314:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d316:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d318:	b153      	cbz	r3, 800d330 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d31a:	f000 fd09 	bl	800dd30 <xTaskRemoveFromEventList>
 800d31e:	2800      	cmp	r0, #0
 800d320:	d0f4      	beq.n	800d30c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800d322:	f000 fda1 	bl	800de68 <vTaskMissedYield>
				--cRxLock;
 800d326:	1e63      	subs	r3, r4, #1
 800d328:	b2da      	uxtb	r2, r3
 800d32a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d32c:	2a00      	cmp	r2, #0
 800d32e:	d1f1      	bne.n	800d314 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800d330:	23ff      	movs	r3, #255	; 0xff
 800d332:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800d336:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800d33a:	f7fe be9d 	b.w	800c078 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800d33e:	4622      	mov	r2, r4
 800d340:	4631      	mov	r1, r6
 800d342:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d346:	f000 fca9 	bl	800dc9c <vTaskPlaceOnEventListRestricted>
 800d34a:	e7b4      	b.n	800d2b6 <vQueueWaitForMessageRestricted+0x32>

0800d34c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800d34c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d350:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800d352:	f7fe fe6f 	bl	800c034 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800d356:	4a34      	ldr	r2, [pc, #208]	; (800d428 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800d358:	4e34      	ldr	r6, [pc, #208]	; (800d42c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800d35a:	6813      	ldr	r3, [r2, #0]
 800d35c:	3301      	adds	r3, #1
 800d35e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800d360:	6833      	ldr	r3, [r6, #0]
 800d362:	2b00      	cmp	r3, #0
 800d364:	d032      	beq.n	800d3cc <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800d366:	4c32      	ldr	r4, [pc, #200]	; (800d430 <prvAddNewTaskToReadyList+0xe4>)
 800d368:	6823      	ldr	r3, [r4, #0]
 800d36a:	b33b      	cbz	r3, 800d3bc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800d36c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800d36e:	4f31      	ldr	r7, [pc, #196]	; (800d434 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800d370:	4a31      	ldr	r2, [pc, #196]	; (800d438 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800d372:	4932      	ldr	r1, [pc, #200]	; (800d43c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800d374:	6813      	ldr	r3, [r2, #0]
 800d376:	3301      	adds	r3, #1
 800d378:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800d37a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800d37c:	680b      	ldr	r3, [r1, #0]
 800d37e:	4283      	cmp	r3, r0
 800d380:	bf38      	it	cc
 800d382:	6008      	strcc	r0, [r1, #0]
 800d384:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800d388:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800d38c:	1d29      	adds	r1, r5, #4
 800d38e:	f7fe fdb1 	bl	800bef4 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800d392:	f7fe fe71 	bl	800c078 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800d396:	6823      	ldr	r3, [r4, #0]
 800d398:	b173      	cbz	r3, 800d3b8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800d39a:	6832      	ldr	r2, [r6, #0]
 800d39c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800d39e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800d3a0:	429a      	cmp	r2, r3
 800d3a2:	d209      	bcs.n	800d3b8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800d3a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d3a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d3ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d3b0:	f3bf 8f4f 	dsb	sy
 800d3b4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800d3b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800d3bc:	6833      	ldr	r3, [r6, #0]
 800d3be:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800d3c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d3c2:	4f1c      	ldr	r7, [pc, #112]	; (800d434 <prvAddNewTaskToReadyList+0xe8>)
 800d3c4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800d3c6:	bf98      	it	ls
 800d3c8:	6035      	strls	r5, [r6, #0]
 800d3ca:	e7d1      	b.n	800d370 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800d3cc:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800d3ce:	6813      	ldr	r3, [r2, #0]
 800d3d0:	2b01      	cmp	r3, #1
 800d3d2:	d003      	beq.n	800d3dc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800d3d4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800d3d6:	4f17      	ldr	r7, [pc, #92]	; (800d434 <prvAddNewTaskToReadyList+0xe8>)
 800d3d8:	4c15      	ldr	r4, [pc, #84]	; (800d430 <prvAddNewTaskToReadyList+0xe4>)
 800d3da:	e7c9      	b.n	800d370 <prvAddNewTaskToReadyList+0x24>
 800d3dc:	4f15      	ldr	r7, [pc, #84]	; (800d434 <prvAddNewTaskToReadyList+0xe8>)
 800d3de:	463c      	mov	r4, r7
 800d3e0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800d3e4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800d3e6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800d3e8:	f7fe fd74 	bl	800bed4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800d3ec:	45a0      	cmp	r8, r4
 800d3ee:	d1f9      	bne.n	800d3e4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800d3f0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800d454 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800d3f4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800d458 <prvAddNewTaskToReadyList+0x10c>
 800d3f8:	4c0d      	ldr	r4, [pc, #52]	; (800d430 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800d3fa:	4648      	mov	r0, r9
 800d3fc:	f7fe fd6a 	bl	800bed4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800d400:	4640      	mov	r0, r8
 800d402:	f7fe fd67 	bl	800bed4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800d406:	480e      	ldr	r0, [pc, #56]	; (800d440 <prvAddNewTaskToReadyList+0xf4>)
 800d408:	f7fe fd64 	bl	800bed4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800d40c:	480d      	ldr	r0, [pc, #52]	; (800d444 <prvAddNewTaskToReadyList+0xf8>)
 800d40e:	f7fe fd61 	bl	800bed4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800d412:	480d      	ldr	r0, [pc, #52]	; (800d448 <prvAddNewTaskToReadyList+0xfc>)
 800d414:	f7fe fd5e 	bl	800bed4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800d418:	4b0c      	ldr	r3, [pc, #48]	; (800d44c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800d41a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800d41c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800d420:	4b0b      	ldr	r3, [pc, #44]	; (800d450 <prvAddNewTaskToReadyList+0x104>)
 800d422:	f8c3 8000 	str.w	r8, [r3]
}
 800d426:	e7a3      	b.n	800d370 <prvAddNewTaskToReadyList+0x24>
 800d428:	200135f4 	.word	0x200135f4
 800d42c:	20013188 	.word	0x20013188
 800d430:	20013650 	.word	0x20013650
 800d434:	20013194 	.word	0x20013194
 800d438:	20013600 	.word	0x20013600
 800d43c:	20013604 	.word	0x20013604
 800d440:	2001363c 	.word	0x2001363c
 800d444:	20013668 	.word	0x20013668
 800d448:	20013654 	.word	0x20013654
 800d44c:	2001318c 	.word	0x2001318c
 800d450:	20013190 	.word	0x20013190
 800d454:	20013608 	.word	0x20013608
 800d458:	2001361c 	.word	0x2001361c

0800d45c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800d45c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d460:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d462:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800d466:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800d46a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800d46c:	4606      	mov	r6, r0
 800d46e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800d470:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d472:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800d474:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800d476:	f01a f9d8 	bl	802782a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800d47a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d47c:	f1a9 0904 	sub.w	r9, r9, #4
 800d480:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800d482:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800d486:	2d00      	cmp	r5, #0
 800d488:	d079      	beq.n	800d57e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d48a:	782b      	ldrb	r3, [r5, #0]
 800d48c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800d490:	2b00      	cmp	r3, #0
 800d492:	d03b      	beq.n	800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d494:	786b      	ldrb	r3, [r5, #1]
 800d496:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800d49a:	2b00      	cmp	r3, #0
 800d49c:	d036      	beq.n	800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d49e:	78ab      	ldrb	r3, [r5, #2]
 800d4a0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800d4a4:	b393      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4a6:	78eb      	ldrb	r3, [r5, #3]
 800d4a8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800d4ac:	b373      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4ae:	792b      	ldrb	r3, [r5, #4]
 800d4b0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800d4b4:	b353      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4b6:	796b      	ldrb	r3, [r5, #5]
 800d4b8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800d4bc:	b333      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4be:	79ab      	ldrb	r3, [r5, #6]
 800d4c0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800d4c4:	b313      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4c6:	79eb      	ldrb	r3, [r5, #7]
 800d4c8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800d4cc:	b1f3      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4ce:	7a2b      	ldrb	r3, [r5, #8]
 800d4d0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800d4d4:	b1d3      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4d6:	7a6b      	ldrb	r3, [r5, #9]
 800d4d8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800d4dc:	b1b3      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4de:	7aab      	ldrb	r3, [r5, #10]
 800d4e0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800d4e4:	b193      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4e6:	7aeb      	ldrb	r3, [r5, #11]
 800d4e8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800d4ec:	b173      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4ee:	7b2b      	ldrb	r3, [r5, #12]
 800d4f0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800d4f4:	b153      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4f6:	7b6b      	ldrb	r3, [r5, #13]
 800d4f8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800d4fc:	b133      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d4fe:	7bab      	ldrb	r3, [r5, #14]
 800d500:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800d504:	b113      	cbz	r3, 800d50c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d506:	7beb      	ldrb	r3, [r5, #15]
 800d508:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800d50c:	2300      	movs	r3, #0
 800d50e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800d512:	9d08      	ldr	r5, [sp, #32]
 800d514:	2d37      	cmp	r5, #55	; 0x37
 800d516:	bf28      	it	cs
 800d518:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800d51a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800d51e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800d520:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800d522:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800d524:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800d528:	f7fe fce0 	bl	800beec <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d52c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800d530:	f104 0018 	add.w	r0, r4, #24
 800d534:	f7fe fcda 	bl	800beec <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d538:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800d53a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800d53e:	4651      	mov	r1, sl
 800d540:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800d542:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800d544:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800d546:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800d54a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800d54e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800d552:	f01a f96a 	bl	802782a <memset>
 800d556:	4b0b      	ldr	r3, [pc, #44]	; (800d584 <prvInitialiseNewTask.constprop.0+0x128>)
 800d558:	65e3      	str	r3, [r4, #92]	; 0x5c
 800d55a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800d55e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800d560:	463a      	mov	r2, r7
 800d562:	4631      	mov	r1, r6
 800d564:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800d566:	6625      	str	r5, [r4, #96]	; 0x60
 800d568:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800d56a:	f7fe fd3d 	bl	800bfe8 <pxPortInitialiseStack>
 800d56e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800d570:	f1b8 0f00 	cmp.w	r8, #0
 800d574:	d001      	beq.n	800d57a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800d576:	f8c8 4000 	str.w	r4, [r8]
}
 800d57a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800d57e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800d582:	e7c6      	b.n	800d512 <prvInitialiseNewTask.constprop.0+0xb6>
 800d584:	20014118 	.word	0x20014118

0800d588 <prvIdleTask>:
{
 800d588:	b580      	push	{r7, lr}
 800d58a:	4d23      	ldr	r5, [pc, #140]	; (800d618 <prvIdleTask+0x90>)
 800d58c:	4f23      	ldr	r7, [pc, #140]	; (800d61c <prvIdleTask+0x94>)
 800d58e:	4e24      	ldr	r6, [pc, #144]	; (800d620 <prvIdleTask+0x98>)
 800d590:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800d624 <prvIdleTask+0x9c>
				taskYIELD();
 800d594:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800d598:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800d59c:	682b      	ldr	r3, [r5, #0]
 800d59e:	b35b      	cbz	r3, 800d5f8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800d5a0:	f7fe fd48 	bl	800c034 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d5a4:	68fb      	ldr	r3, [r7, #12]
 800d5a6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d5a8:	1d20      	adds	r0, r4, #4
 800d5aa:	f7fe fccb 	bl	800bf44 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800d5ae:	6833      	ldr	r3, [r6, #0]
 800d5b0:	3b01      	subs	r3, #1
 800d5b2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800d5b4:	682b      	ldr	r3, [r5, #0]
 800d5b6:	3b01      	subs	r3, #1
 800d5b8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800d5ba:	f7fe fd5d 	bl	800c078 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800d5be:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800d5c2:	f01a f97b 	bl	80278bc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800d5c6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800d5ca:	b163      	cbz	r3, 800d5e6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800d5cc:	2b01      	cmp	r3, #1
 800d5ce:	d01e      	beq.n	800d60e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800d5d0:	2b02      	cmp	r3, #2
 800d5d2:	d0e3      	beq.n	800d59c <prvIdleTask+0x14>
 800d5d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5d8:	f383 8811 	msr	BASEPRI, r3
 800d5dc:	f3bf 8f6f 	isb	sy
 800d5e0:	f3bf 8f4f 	dsb	sy
 800d5e4:	e7fe      	b.n	800d5e4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800d5e6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d5e8:	f7fe fc10 	bl	800be0c <vPortFree>
				vPortFree( pxTCB );
 800d5ec:	4620      	mov	r0, r4
 800d5ee:	f7fe fc0d 	bl	800be0c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800d5f2:	682b      	ldr	r3, [r5, #0]
 800d5f4:	2b00      	cmp	r3, #0
 800d5f6:	d1d3      	bne.n	800d5a0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800d5f8:	f8d8 3000 	ldr.w	r3, [r8]
 800d5fc:	2b01      	cmp	r3, #1
 800d5fe:	d9cd      	bls.n	800d59c <prvIdleTask+0x14>
				taskYIELD();
 800d600:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800d604:	f3bf 8f4f 	dsb	sy
 800d608:	f3bf 8f6f 	isb	sy
 800d60c:	e7c6      	b.n	800d59c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800d60e:	4620      	mov	r0, r4
 800d610:	f7fe fbfc 	bl	800be0c <vPortFree>
 800d614:	e7c2      	b.n	800d59c <prvIdleTask+0x14>
 800d616:	bf00      	nop
 800d618:	200135f8 	.word	0x200135f8
 800d61c:	20013668 	.word	0x20013668
 800d620:	200135f4 	.word	0x200135f4
 800d624:	20013194 	.word	0x20013194

0800d628 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800d628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800d62c:	4b47      	ldr	r3, [pc, #284]	; (800d74c <xTaskIncrementTick.part.0+0x124>)
 800d62e:	681e      	ldr	r6, [r3, #0]
 800d630:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800d632:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800d634:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800d636:	2e00      	cmp	r6, #0
 800d638:	d040      	beq.n	800d6bc <xTaskIncrementTick.part.0+0x94>
 800d63a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800d760 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800d63e:	f8db 3000 	ldr.w	r3, [fp]
 800d642:	429e      	cmp	r6, r3
 800d644:	d347      	bcc.n	800d6d6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d646:	4f42      	ldr	r7, [pc, #264]	; (800d750 <xTaskIncrementTick.part.0+0x128>)
 800d648:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800d764 <xTaskIncrementTick.part.0+0x13c>
 800d64c:	683b      	ldr	r3, [r7, #0]
 800d64e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800d768 <xTaskIncrementTick.part.0+0x140>
 800d652:	681d      	ldr	r5, [r3, #0]
 800d654:	2d00      	cmp	r5, #0
 800d656:	d073      	beq.n	800d740 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800d658:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800d76c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800d65c:	2500      	movs	r5, #0
 800d65e:	e022      	b.n	800d6a6 <xTaskIncrementTick.part.0+0x7e>
 800d660:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d662:	f7fe fc6f 	bl	800bf44 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800d666:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800d668:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d66a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800d66e:	b113      	cbz	r3, 800d676 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d670:	f7fe fc68 	bl	800bf44 <uxListRemove>
 800d674:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800d676:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d678:	f8d8 2000 	ldr.w	r2, [r8]
 800d67c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800d680:	4293      	cmp	r3, r2
 800d682:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800d686:	bf88      	it	hi
 800d688:	f8c8 3000 	strhi.w	r3, [r8]
 800d68c:	f7fe fc32 	bl	800bef4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d690:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d694:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d696:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d698:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d69a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800d69c:	4291      	cmp	r1, r2
 800d69e:	bf28      	it	cs
 800d6a0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d6a2:	2b00      	cmp	r3, #0
 800d6a4:	d04c      	beq.n	800d740 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d6a6:	683b      	ldr	r3, [r7, #0]
 800d6a8:	68db      	ldr	r3, [r3, #12]
 800d6aa:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800d6ac:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d6ae:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800d6b0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d6b2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800d6b4:	d2d4      	bcs.n	800d660 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800d6b6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800d6ba:	e011      	b.n	800d6e0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800d6bc:	4b24      	ldr	r3, [pc, #144]	; (800d750 <xTaskIncrementTick.part.0+0x128>)
 800d6be:	681a      	ldr	r2, [r3, #0]
 800d6c0:	6812      	ldr	r2, [r2, #0]
 800d6c2:	b30a      	cbz	r2, 800d708 <xTaskIncrementTick.part.0+0xe0>
 800d6c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6c8:	f383 8811 	msr	BASEPRI, r3
 800d6cc:	f3bf 8f6f 	isb	sy
 800d6d0:	f3bf 8f4f 	dsb	sy
 800d6d4:	e7fe      	b.n	800d6d4 <xTaskIncrementTick.part.0+0xac>
 800d6d6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800d764 <xTaskIncrementTick.part.0+0x13c>
 800d6da:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800d768 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800d6de:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800d6e0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800d6e4:	491b      	ldr	r1, [pc, #108]	; (800d754 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800d6e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d6e8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800d6ec:	009b      	lsls	r3, r3, #2
 800d6ee:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800d6f2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800d6f4:	2a02      	cmp	r2, #2
 800d6f6:	bf28      	it	cs
 800d6f8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800d6fa:	2b00      	cmp	r3, #0
}
 800d6fc:	bf0c      	ite	eq
 800d6fe:	4628      	moveq	r0, r5
 800d700:	2001      	movne	r0, #1
 800d702:	b003      	add	sp, #12
 800d704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800d708:	4a13      	ldr	r2, [pc, #76]	; (800d758 <xTaskIncrementTick.part.0+0x130>)
 800d70a:	6818      	ldr	r0, [r3, #0]
 800d70c:	6811      	ldr	r1, [r2, #0]
 800d70e:	6019      	str	r1, [r3, #0]
 800d710:	4912      	ldr	r1, [pc, #72]	; (800d75c <xTaskIncrementTick.part.0+0x134>)
 800d712:	6010      	str	r0, [r2, #0]
 800d714:	680a      	ldr	r2, [r1, #0]
 800d716:	3201      	adds	r2, #1
 800d718:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d71a:	681a      	ldr	r2, [r3, #0]
 800d71c:	6812      	ldr	r2, [r2, #0]
 800d71e:	b932      	cbnz	r2, 800d72e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800d720:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800d760 <xTaskIncrementTick.part.0+0x138>
 800d724:	f04f 33ff 	mov.w	r3, #4294967295
 800d728:	f8cb 3000 	str.w	r3, [fp]
 800d72c:	e787      	b.n	800d63e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d72e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d730:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800d760 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d734:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d736:	68db      	ldr	r3, [r3, #12]
 800d738:	685b      	ldr	r3, [r3, #4]
 800d73a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800d73e:	e77e      	b.n	800d63e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d740:	f04f 33ff 	mov.w	r3, #4294967295
 800d744:	f8cb 3000 	str.w	r3, [fp]
					break;
 800d748:	e7ca      	b.n	800d6e0 <xTaskIncrementTick.part.0+0xb8>
 800d74a:	bf00      	nop
 800d74c:	2001367c 	.word	0x2001367c
 800d750:	2001318c 	.word	0x2001318c
 800d754:	20013680 	.word	0x20013680
 800d758:	20013190 	.word	0x20013190
 800d75c:	20013634 	.word	0x20013634
 800d760:	20013630 	.word	0x20013630
 800d764:	20013194 	.word	0x20013194
 800d768:	20013188 	.word	0x20013188
 800d76c:	20013604 	.word	0x20013604

0800d770 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800d770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800d774:	4d41      	ldr	r5, [pc, #260]	; (800d87c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800d776:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800d778:	f7fe fc5c 	bl	800c034 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800d77c:	682b      	ldr	r3, [r5, #0]
 800d77e:	3b01      	subs	r3, #1
 800d780:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d782:	682b      	ldr	r3, [r5, #0]
 800d784:	2b00      	cmp	r3, #0
 800d786:	d161      	bne.n	800d84c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800d788:	4b3d      	ldr	r3, [pc, #244]	; (800d880 <xTaskResumeAll.part.0+0x110>)
 800d78a:	681b      	ldr	r3, [r3, #0]
 800d78c:	2b00      	cmp	r3, #0
 800d78e:	d05d      	beq.n	800d84c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d790:	4e3c      	ldr	r6, [pc, #240]	; (800d884 <xTaskResumeAll.part.0+0x114>)
 800d792:	6833      	ldr	r3, [r6, #0]
 800d794:	2b00      	cmp	r3, #0
 800d796:	d06e      	beq.n	800d876 <xTaskResumeAll.part.0+0x106>
 800d798:	4f3b      	ldr	r7, [pc, #236]	; (800d888 <xTaskResumeAll.part.0+0x118>)
 800d79a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800d898 <xTaskResumeAll.part.0+0x128>
 800d79e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800d89c <xTaskResumeAll.part.0+0x12c>
 800d7a2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800d8a0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d7a6:	68f3      	ldr	r3, [r6, #12]
 800d7a8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d7aa:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d7ae:	f104 0018 	add.w	r0, r4, #24
 800d7b2:	f7fe fbc7 	bl	800bf44 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d7b6:	4658      	mov	r0, fp
 800d7b8:	f7fe fbc4 	bl	800bf44 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800d7bc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d7be:	683a      	ldr	r2, [r7, #0]
 800d7c0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800d7c4:	4293      	cmp	r3, r2
 800d7c6:	4659      	mov	r1, fp
 800d7c8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800d7cc:	bf88      	it	hi
 800d7ce:	603b      	strhi	r3, [r7, #0]
 800d7d0:	f7fe fb90 	bl	800bef4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d7d4:	f8d8 3000 	ldr.w	r3, [r8]
 800d7d8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d7da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d7dc:	429a      	cmp	r2, r3
 800d7de:	d33d      	bcc.n	800d85c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800d7e0:	2301      	movs	r3, #1
 800d7e2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d7e6:	6833      	ldr	r3, [r6, #0]
 800d7e8:	2b00      	cmp	r3, #0
 800d7ea:	d1dc      	bne.n	800d7a6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d7ec:	4b27      	ldr	r3, [pc, #156]	; (800d88c <xTaskResumeAll.part.0+0x11c>)
 800d7ee:	681a      	ldr	r2, [r3, #0]
 800d7f0:	6812      	ldr	r2, [r2, #0]
 800d7f2:	2a00      	cmp	r2, #0
 800d7f4:	d03a      	beq.n	800d86c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d7f6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d7f8:	4b25      	ldr	r3, [pc, #148]	; (800d890 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d7fa:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d7fc:	68d2      	ldr	r2, [r2, #12]
 800d7fe:	6852      	ldr	r2, [r2, #4]
 800d800:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800d802:	4e24      	ldr	r6, [pc, #144]	; (800d894 <xTaskResumeAll.part.0+0x124>)
 800d804:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800d806:	b194      	cbz	r4, 800d82e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800d808:	2701      	movs	r7, #1
 800d80a:	e006      	b.n	800d81a <xTaskResumeAll.part.0+0xaa>
 800d80c:	f7ff ff0c 	bl	800d628 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800d810:	b108      	cbz	r0, 800d816 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800d812:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d816:	3c01      	subs	r4, #1
 800d818:	d008      	beq.n	800d82c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d81a:	682b      	ldr	r3, [r5, #0]
 800d81c:	2b00      	cmp	r3, #0
 800d81e:	d0f5      	beq.n	800d80c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800d820:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d822:	3c01      	subs	r4, #1
		++xPendedTicks;
 800d824:	f103 0301 	add.w	r3, r3, #1
 800d828:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d82a:	d1f6      	bne.n	800d81a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800d82c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800d82e:	f8da 3000 	ldr.w	r3, [sl]
 800d832:	b15b      	cbz	r3, 800d84c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800d834:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d838:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d83c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d840:	f3bf 8f4f 	dsb	sy
 800d844:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800d848:	2001      	movs	r0, #1
 800d84a:	e000      	b.n	800d84e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800d84c:	2000      	movs	r0, #0
 800d84e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800d850:	f7fe fc12 	bl	800c078 <vPortExitCritical>
}
 800d854:	9801      	ldr	r0, [sp, #4]
 800d856:	b003      	add	sp, #12
 800d858:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d85c:	6833      	ldr	r3, [r6, #0]
 800d85e:	2b00      	cmp	r3, #0
 800d860:	d1a1      	bne.n	800d7a6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d862:	4b0a      	ldr	r3, [pc, #40]	; (800d88c <xTaskResumeAll.part.0+0x11c>)
 800d864:	681a      	ldr	r2, [r3, #0]
 800d866:	6812      	ldr	r2, [r2, #0]
 800d868:	2a00      	cmp	r2, #0
 800d86a:	d1c4      	bne.n	800d7f6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800d86c:	4b08      	ldr	r3, [pc, #32]	; (800d890 <xTaskResumeAll.part.0+0x120>)
 800d86e:	f04f 32ff 	mov.w	r2, #4294967295
 800d872:	601a      	str	r2, [r3, #0]
 800d874:	e7c5      	b.n	800d802 <xTaskResumeAll.part.0+0x92>
 800d876:	f8df a028 	ldr.w	sl, [pc, #40]	; 800d8a0 <xTaskResumeAll.part.0+0x130>
 800d87a:	e7c2      	b.n	800d802 <xTaskResumeAll.part.0+0x92>
 800d87c:	200135fc 	.word	0x200135fc
 800d880:	200135f4 	.word	0x200135f4
 800d884:	2001363c 	.word	0x2001363c
 800d888:	20013604 	.word	0x20013604
 800d88c:	2001318c 	.word	0x2001318c
 800d890:	20013630 	.word	0x20013630
 800d894:	20013638 	.word	0x20013638
 800d898:	20013194 	.word	0x20013194
 800d89c:	20013188 	.word	0x20013188
 800d8a0:	20013680 	.word	0x20013680

0800d8a4 <xTaskCreateStatic>:
	{
 800d8a4:	b530      	push	{r4, r5, lr}
 800d8a6:	b087      	sub	sp, #28
 800d8a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800d8aa:	b1c4      	cbz	r4, 800d8de <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800d8ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d8ae:	b16d      	cbz	r5, 800d8cc <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800d8b0:	25ac      	movs	r5, #172	; 0xac
 800d8b2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800d8b4:	9d05      	ldr	r5, [sp, #20]
 800d8b6:	2dac      	cmp	r5, #172	; 0xac
 800d8b8:	d01a      	beq.n	800d8f0 <xTaskCreateStatic+0x4c>
 800d8ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8be:	f383 8811 	msr	BASEPRI, r3
 800d8c2:	f3bf 8f6f 	isb	sy
 800d8c6:	f3bf 8f4f 	dsb	sy
 800d8ca:	e7fe      	b.n	800d8ca <xTaskCreateStatic+0x26>
 800d8cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8d0:	f383 8811 	msr	BASEPRI, r3
 800d8d4:	f3bf 8f6f 	isb	sy
 800d8d8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800d8dc:	e7fe      	b.n	800d8dc <xTaskCreateStatic+0x38>
 800d8de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8e2:	f383 8811 	msr	BASEPRI, r3
 800d8e6:	f3bf 8f6f 	isb	sy
 800d8ea:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800d8ee:	e7fe      	b.n	800d8ee <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800d8f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d8f2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800d8f4:	2402      	movs	r4, #2
 800d8f6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d8fa:	ac04      	add	r4, sp, #16
 800d8fc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800d900:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d902:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800d904:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d906:	f7ff fda9 	bl	800d45c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800d90a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d90c:	f7ff fd1e 	bl	800d34c <prvAddNewTaskToReadyList>
	}
 800d910:	9804      	ldr	r0, [sp, #16]
 800d912:	b007      	add	sp, #28
 800d914:	bd30      	pop	{r4, r5, pc}
 800d916:	bf00      	nop

0800d918 <xTaskCreate>:
	{
 800d918:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d91c:	4607      	mov	r7, r0
 800d91e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800d920:	0090      	lsls	r0, r2, #2
	{
 800d922:	4615      	mov	r5, r2
 800d924:	4688      	mov	r8, r1
 800d926:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800d928:	f7fe f9b4 	bl	800bc94 <pvPortMalloc>
			if( pxStack != NULL )
 800d92c:	b1d8      	cbz	r0, 800d966 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800d92e:	4604      	mov	r4, r0
 800d930:	20ac      	movs	r0, #172	; 0xac
 800d932:	f7fe f9af 	bl	800bc94 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800d936:	4606      	mov	r6, r0
 800d938:	b1d0      	cbz	r0, 800d970 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800d93a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800d93c:	2400      	movs	r4, #0
 800d93e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800d942:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800d944:	9401      	str	r4, [sp, #4]
 800d946:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800d948:	9602      	str	r6, [sp, #8]
 800d94a:	464b      	mov	r3, r9
 800d94c:	462a      	mov	r2, r5
 800d94e:	4641      	mov	r1, r8
 800d950:	4638      	mov	r0, r7
 800d952:	9400      	str	r4, [sp, #0]
 800d954:	f7ff fd82 	bl	800d45c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800d958:	4630      	mov	r0, r6
 800d95a:	f7ff fcf7 	bl	800d34c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800d95e:	2001      	movs	r0, #1
	}
 800d960:	b005      	add	sp, #20
 800d962:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800d966:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800d96a:	b005      	add	sp, #20
 800d96c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800d970:	4620      	mov	r0, r4
 800d972:	f7fe fa4b 	bl	800be0c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800d976:	f04f 30ff 	mov.w	r0, #4294967295
 800d97a:	e7f1      	b.n	800d960 <xTaskCreate+0x48>

0800d97c <vTaskDelay>:
	{
 800d97c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800d97e:	b950      	cbnz	r0, 800d996 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800d980:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d984:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d988:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d98c:	f3bf 8f4f 	dsb	sy
 800d990:	f3bf 8f6f 	isb	sy
	}
 800d994:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800d996:	4d1e      	ldr	r5, [pc, #120]	; (800da10 <vTaskDelay+0x94>)
 800d998:	682b      	ldr	r3, [r5, #0]
 800d99a:	b143      	cbz	r3, 800d9ae <vTaskDelay+0x32>
 800d99c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9a0:	f383 8811 	msr	BASEPRI, r3
 800d9a4:	f3bf 8f6f 	isb	sy
 800d9a8:	f3bf 8f4f 	dsb	sy
 800d9ac:	e7fe      	b.n	800d9ac <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800d9ae:	682b      	ldr	r3, [r5, #0]
 800d9b0:	3301      	adds	r3, #1
 800d9b2:	4604      	mov	r4, r0
 800d9b4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800d9b6:	4b17      	ldr	r3, [pc, #92]	; (800da14 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d9b8:	4e17      	ldr	r6, [pc, #92]	; (800da18 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800d9ba:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d9bc:	6830      	ldr	r0, [r6, #0]
 800d9be:	3004      	adds	r0, #4
 800d9c0:	f7fe fac0 	bl	800bf44 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800d9c4:	6833      	ldr	r3, [r6, #0]
 800d9c6:	19e4      	adds	r4, r4, r7
 800d9c8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800d9ca:	d310      	bcc.n	800d9ee <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d9cc:	4b13      	ldr	r3, [pc, #76]	; (800da1c <vTaskDelay+0xa0>)
 800d9ce:	6818      	ldr	r0, [r3, #0]
 800d9d0:	6831      	ldr	r1, [r6, #0]
 800d9d2:	3104      	adds	r1, #4
 800d9d4:	f7fe fa9e 	bl	800bf14 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800d9d8:	682b      	ldr	r3, [r5, #0]
 800d9da:	b9a3      	cbnz	r3, 800da06 <vTaskDelay+0x8a>
 800d9dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9e0:	f383 8811 	msr	BASEPRI, r3
 800d9e4:	f3bf 8f6f 	isb	sy
 800d9e8:	f3bf 8f4f 	dsb	sy
 800d9ec:	e7fe      	b.n	800d9ec <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d9ee:	4b0c      	ldr	r3, [pc, #48]	; (800da20 <vTaskDelay+0xa4>)
 800d9f0:	6818      	ldr	r0, [r3, #0]
 800d9f2:	6831      	ldr	r1, [r6, #0]
 800d9f4:	3104      	adds	r1, #4
 800d9f6:	f7fe fa8d 	bl	800bf14 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800d9fa:	4b0a      	ldr	r3, [pc, #40]	; (800da24 <vTaskDelay+0xa8>)
 800d9fc:	681a      	ldr	r2, [r3, #0]
 800d9fe:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800da00:	bf38      	it	cc
 800da02:	601c      	strcc	r4, [r3, #0]
 800da04:	e7e8      	b.n	800d9d8 <vTaskDelay+0x5c>
 800da06:	f7ff feb3 	bl	800d770 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800da0a:	2800      	cmp	r0, #0
 800da0c:	d0b8      	beq.n	800d980 <vTaskDelay+0x4>
	}
 800da0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800da10:	200135fc 	.word	0x200135fc
 800da14:	2001367c 	.word	0x2001367c
 800da18:	20013188 	.word	0x20013188
 800da1c:	20013190 	.word	0x20013190
 800da20:	2001318c 	.word	0x2001318c
 800da24:	20013630 	.word	0x20013630

0800da28 <vTaskStartScheduler>:
{
 800da28:	b530      	push	{r4, r5, lr}
 800da2a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800da2c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800da2e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800da30:	a906      	add	r1, sp, #24
 800da32:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800da34:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800da38:	f7fe f90e 	bl	800bc58 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800da3c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800da40:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800da42:	b1bb      	cbz	r3, 800da74 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800da44:	b16d      	cbz	r5, 800da62 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800da46:	21ac      	movs	r1, #172	; 0xac
 800da48:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800da4a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800da4c:	29ac      	cmp	r1, #172	; 0xac
 800da4e:	d01a      	beq.n	800da86 <vTaskStartScheduler+0x5e>
 800da50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da54:	f383 8811 	msr	BASEPRI, r3
 800da58:	f3bf 8f6f 	isb	sy
 800da5c:	f3bf 8f4f 	dsb	sy
 800da60:	e7fe      	b.n	800da60 <vTaskStartScheduler+0x38>
 800da62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da66:	f383 8811 	msr	BASEPRI, r3
 800da6a:	f3bf 8f6f 	isb	sy
 800da6e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800da72:	e7fe      	b.n	800da72 <vTaskStartScheduler+0x4a>
 800da74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da78:	f383 8811 	msr	BASEPRI, r3
 800da7c:	f3bf 8f6f 	isb	sy
 800da80:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800da84:	e7fe      	b.n	800da84 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800da86:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800da88:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800da8a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800da8c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800da90:	4623      	mov	r3, r4
 800da92:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800da96:	491b      	ldr	r1, [pc, #108]	; (800db04 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800da98:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800da9a:	9400      	str	r4, [sp, #0]
 800da9c:	481a      	ldr	r0, [pc, #104]	; (800db08 <vTaskStartScheduler+0xe0>)
 800da9e:	f7ff fcdd 	bl	800d45c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800daa2:	4628      	mov	r0, r5
 800daa4:	f7ff fc52 	bl	800d34c <prvAddNewTaskToReadyList>
		return xReturn;
 800daa8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800daaa:	b1eb      	cbz	r3, 800dae8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800daac:	f000 fc6e 	bl	800e38c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800dab0:	2801      	cmp	r0, #1
 800dab2:	d11b      	bne.n	800daec <vTaskStartScheduler+0xc4>
 800dab4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dab8:	f383 8811 	msr	BASEPRI, r3
 800dabc:	f3bf 8f6f 	isb	sy
 800dac0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800dac4:	4b11      	ldr	r3, [pc, #68]	; (800db0c <vTaskStartScheduler+0xe4>)
 800dac6:	4a12      	ldr	r2, [pc, #72]	; (800db10 <vTaskStartScheduler+0xe8>)
 800dac8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800daca:	4912      	ldr	r1, [pc, #72]	; (800db14 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800dacc:	3358      	adds	r3, #88	; 0x58
 800dace:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800dad0:	4a11      	ldr	r2, [pc, #68]	; (800db18 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800dad2:	4b12      	ldr	r3, [pc, #72]	; (800db1c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800dad4:	f04f 35ff 	mov.w	r5, #4294967295
 800dad8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800dada:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800dadc:	601c      	str	r4, [r3, #0]
}
 800dade:	b00b      	add	sp, #44	; 0x2c
 800dae0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800dae4:	f7fe bb38 	b.w	800c158 <xPortStartScheduler>
}
 800dae8:	b00b      	add	sp, #44	; 0x2c
 800daea:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800daec:	3001      	adds	r0, #1
 800daee:	d1fb      	bne.n	800dae8 <vTaskStartScheduler+0xc0>
 800daf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daf4:	f383 8811 	msr	BASEPRI, r3
 800daf8:	f3bf 8f6f 	isb	sy
 800dafc:	f3bf 8f4f 	dsb	sy
 800db00:	e7fe      	b.n	800db00 <vTaskStartScheduler+0xd8>
 800db02:	bf00      	nop
 800db04:	0802afd8 	.word	0x0802afd8
 800db08:	0800d589 	.word	0x0800d589
 800db0c:	20013188 	.word	0x20013188
 800db10:	20000160 	.word	0x20000160
 800db14:	20013630 	.word	0x20013630
 800db18:	20013650 	.word	0x20013650
 800db1c:	2001367c 	.word	0x2001367c

0800db20 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800db20:	4a02      	ldr	r2, [pc, #8]	; (800db2c <vTaskSuspendAll+0xc>)
 800db22:	6813      	ldr	r3, [r2, #0]
 800db24:	3301      	adds	r3, #1
 800db26:	6013      	str	r3, [r2, #0]
}
 800db28:	4770      	bx	lr
 800db2a:	bf00      	nop
 800db2c:	200135fc 	.word	0x200135fc

0800db30 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800db30:	4b06      	ldr	r3, [pc, #24]	; (800db4c <xTaskResumeAll+0x1c>)
 800db32:	681b      	ldr	r3, [r3, #0]
 800db34:	b943      	cbnz	r3, 800db48 <xTaskResumeAll+0x18>
 800db36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db3a:	f383 8811 	msr	BASEPRI, r3
 800db3e:	f3bf 8f6f 	isb	sy
 800db42:	f3bf 8f4f 	dsb	sy
 800db46:	e7fe      	b.n	800db46 <xTaskResumeAll+0x16>
 800db48:	f7ff be12 	b.w	800d770 <xTaskResumeAll.part.0>
 800db4c:	200135fc 	.word	0x200135fc

0800db50 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800db50:	4b01      	ldr	r3, [pc, #4]	; (800db58 <xTaskGetTickCount+0x8>)
 800db52:	6818      	ldr	r0, [r3, #0]
}
 800db54:	4770      	bx	lr
 800db56:	bf00      	nop
 800db58:	2001367c 	.word	0x2001367c

0800db5c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800db5c:	4b05      	ldr	r3, [pc, #20]	; (800db74 <xTaskIncrementTick+0x18>)
 800db5e:	681b      	ldr	r3, [r3, #0]
 800db60:	b90b      	cbnz	r3, 800db66 <xTaskIncrementTick+0xa>
 800db62:	f7ff bd61 	b.w	800d628 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800db66:	4a04      	ldr	r2, [pc, #16]	; (800db78 <xTaskIncrementTick+0x1c>)
 800db68:	6813      	ldr	r3, [r2, #0]
 800db6a:	3301      	adds	r3, #1
}
 800db6c:	2000      	movs	r0, #0
		++xPendedTicks;
 800db6e:	6013      	str	r3, [r2, #0]
}
 800db70:	4770      	bx	lr
 800db72:	bf00      	nop
 800db74:	200135fc 	.word	0x200135fc
 800db78:	20013638 	.word	0x20013638

0800db7c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800db7c:	4b1f      	ldr	r3, [pc, #124]	; (800dbfc <vTaskSwitchContext+0x80>)
 800db7e:	681b      	ldr	r3, [r3, #0]
 800db80:	b11b      	cbz	r3, 800db8a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800db82:	4b1f      	ldr	r3, [pc, #124]	; (800dc00 <vTaskSwitchContext+0x84>)
 800db84:	2201      	movs	r2, #1
 800db86:	601a      	str	r2, [r3, #0]
 800db88:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800db8a:	4a1d      	ldr	r2, [pc, #116]	; (800dc00 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800db8c:	491d      	ldr	r1, [pc, #116]	; (800dc04 <vTaskSwitchContext+0x88>)
{
 800db8e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800db90:	4c1d      	ldr	r4, [pc, #116]	; (800dc08 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800db92:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800db94:	6823      	ldr	r3, [r4, #0]
 800db96:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800db9a:	0092      	lsls	r2, r2, #2
 800db9c:	0098      	lsls	r0, r3, #2
 800db9e:	588a      	ldr	r2, [r1, r2]
 800dba0:	b942      	cbnz	r2, 800dbb4 <vTaskSwitchContext+0x38>
 800dba2:	b313      	cbz	r3, 800dbea <vTaskSwitchContext+0x6e>
 800dba4:	3b01      	subs	r3, #1
 800dba6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800dbaa:	0098      	lsls	r0, r3, #2
 800dbac:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800dbb0:	2a00      	cmp	r2, #0
 800dbb2:	d0f6      	beq.n	800dba2 <vTaskSwitchContext+0x26>
 800dbb4:	4418      	add	r0, r3
 800dbb6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800dbba:	4662      	mov	r2, ip
 800dbbc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800dbc0:	6849      	ldr	r1, [r1, #4]
 800dbc2:	f8cc 1004 	str.w	r1, [ip, #4]
 800dbc6:	3208      	adds	r2, #8
 800dbc8:	4291      	cmp	r1, r2
 800dbca:	bf08      	it	eq
 800dbcc:	6849      	ldreq	r1, [r1, #4]
 800dbce:	4a0f      	ldr	r2, [pc, #60]	; (800dc0c <vTaskSwitchContext+0x90>)
 800dbd0:	bf08      	it	eq
 800dbd2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800dbd6:	68c9      	ldr	r1, [r1, #12]
 800dbd8:	6011      	str	r1, [r2, #0]
 800dbda:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800dbdc:	6813      	ldr	r3, [r2, #0]
 800dbde:	4a0c      	ldr	r2, [pc, #48]	; (800dc10 <vTaskSwitchContext+0x94>)
}
 800dbe0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800dbe4:	3358      	adds	r3, #88	; 0x58
 800dbe6:	6013      	str	r3, [r2, #0]
}
 800dbe8:	4770      	bx	lr
 800dbea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbee:	f383 8811 	msr	BASEPRI, r3
 800dbf2:	f3bf 8f6f 	isb	sy
 800dbf6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dbfa:	e7fe      	b.n	800dbfa <vTaskSwitchContext+0x7e>
 800dbfc:	200135fc 	.word	0x200135fc
 800dc00:	20013680 	.word	0x20013680
 800dc04:	20013194 	.word	0x20013194
 800dc08:	20013604 	.word	0x20013604
 800dc0c:	20013188 	.word	0x20013188
 800dc10:	20000160 	.word	0x20000160

0800dc14 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800dc14:	b1d0      	cbz	r0, 800dc4c <vTaskPlaceOnEventList+0x38>
{
 800dc16:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800dc18:	4d1a      	ldr	r5, [pc, #104]	; (800dc84 <vTaskPlaceOnEventList+0x70>)
 800dc1a:	460c      	mov	r4, r1
 800dc1c:	6829      	ldr	r1, [r5, #0]
 800dc1e:	3118      	adds	r1, #24
 800dc20:	f7fe f978 	bl	800bf14 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800dc24:	4b18      	ldr	r3, [pc, #96]	; (800dc88 <vTaskPlaceOnEventList+0x74>)
 800dc26:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800dc28:	6828      	ldr	r0, [r5, #0]
 800dc2a:	3004      	adds	r0, #4
 800dc2c:	f7fe f98a 	bl	800bf44 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800dc30:	1c63      	adds	r3, r4, #1
 800dc32:	d014      	beq.n	800dc5e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800dc34:	682b      	ldr	r3, [r5, #0]
 800dc36:	19a4      	adds	r4, r4, r6
 800dc38:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800dc3a:	d317      	bcc.n	800dc6c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dc3c:	4b13      	ldr	r3, [pc, #76]	; (800dc8c <vTaskPlaceOnEventList+0x78>)
 800dc3e:	6818      	ldr	r0, [r3, #0]
 800dc40:	6829      	ldr	r1, [r5, #0]
}
 800dc42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dc46:	3104      	adds	r1, #4
 800dc48:	f7fe b964 	b.w	800bf14 <vListInsert>
 800dc4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc50:	f383 8811 	msr	BASEPRI, r3
 800dc54:	f3bf 8f6f 	isb	sy
 800dc58:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800dc5c:	e7fe      	b.n	800dc5c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dc5e:	6829      	ldr	r1, [r5, #0]
 800dc60:	480b      	ldr	r0, [pc, #44]	; (800dc90 <vTaskPlaceOnEventList+0x7c>)
}
 800dc62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dc66:	3104      	adds	r1, #4
 800dc68:	f7fe b944 	b.w	800bef4 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dc6c:	4b09      	ldr	r3, [pc, #36]	; (800dc94 <vTaskPlaceOnEventList+0x80>)
 800dc6e:	6818      	ldr	r0, [r3, #0]
 800dc70:	6829      	ldr	r1, [r5, #0]
 800dc72:	3104      	adds	r1, #4
 800dc74:	f7fe f94e 	bl	800bf14 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800dc78:	4b07      	ldr	r3, [pc, #28]	; (800dc98 <vTaskPlaceOnEventList+0x84>)
 800dc7a:	681a      	ldr	r2, [r3, #0]
 800dc7c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800dc7e:	bf38      	it	cc
 800dc80:	601c      	strcc	r4, [r3, #0]
}
 800dc82:	bd70      	pop	{r4, r5, r6, pc}
 800dc84:	20013188 	.word	0x20013188
 800dc88:	2001367c 	.word	0x2001367c
 800dc8c:	20013190 	.word	0x20013190
 800dc90:	20013654 	.word	0x20013654
 800dc94:	2001318c 	.word	0x2001318c
 800dc98:	20013630 	.word	0x20013630

0800dc9c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800dc9c:	b330      	cbz	r0, 800dcec <vTaskPlaceOnEventListRestricted+0x50>
	{
 800dc9e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800dca0:	4e1d      	ldr	r6, [pc, #116]	; (800dd18 <vTaskPlaceOnEventListRestricted+0x7c>)
 800dca2:	460c      	mov	r4, r1
 800dca4:	6831      	ldr	r1, [r6, #0]
 800dca6:	4615      	mov	r5, r2
 800dca8:	3118      	adds	r1, #24
 800dcaa:	f7fe f923 	bl	800bef4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800dcae:	4b1b      	ldr	r3, [pc, #108]	; (800dd1c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800dcb0:	b985      	cbnz	r5, 800dcd4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800dcb2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800dcb4:	6830      	ldr	r0, [r6, #0]
 800dcb6:	3004      	adds	r0, #4
 800dcb8:	f7fe f944 	bl	800bf44 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800dcbc:	6833      	ldr	r3, [r6, #0]
 800dcbe:	1964      	adds	r4, r4, r5
 800dcc0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800dcc2:	d31c      	bcc.n	800dcfe <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dcc4:	4b16      	ldr	r3, [pc, #88]	; (800dd20 <vTaskPlaceOnEventListRestricted+0x84>)
 800dcc6:	6818      	ldr	r0, [r3, #0]
 800dcc8:	6831      	ldr	r1, [r6, #0]
	}
 800dcca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dcce:	3104      	adds	r1, #4
 800dcd0:	f7fe b920 	b.w	800bf14 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800dcd4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800dcd6:	6830      	ldr	r0, [r6, #0]
 800dcd8:	3004      	adds	r0, #4
 800dcda:	f7fe f933 	bl	800bf44 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dcde:	6831      	ldr	r1, [r6, #0]
 800dce0:	4810      	ldr	r0, [pc, #64]	; (800dd24 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800dce2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dce6:	3104      	adds	r1, #4
 800dce8:	f7fe b904 	b.w	800bef4 <vListInsertEnd>
 800dcec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcf0:	f383 8811 	msr	BASEPRI, r3
 800dcf4:	f3bf 8f6f 	isb	sy
 800dcf8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800dcfc:	e7fe      	b.n	800dcfc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800dcfe:	4b0a      	ldr	r3, [pc, #40]	; (800dd28 <vTaskPlaceOnEventListRestricted+0x8c>)
 800dd00:	6818      	ldr	r0, [r3, #0]
 800dd02:	6831      	ldr	r1, [r6, #0]
 800dd04:	3104      	adds	r1, #4
 800dd06:	f7fe f905 	bl	800bf14 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800dd0a:	4b08      	ldr	r3, [pc, #32]	; (800dd2c <vTaskPlaceOnEventListRestricted+0x90>)
 800dd0c:	681a      	ldr	r2, [r3, #0]
 800dd0e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800dd10:	bf38      	it	cc
 800dd12:	601c      	strcc	r4, [r3, #0]
	}
 800dd14:	bd70      	pop	{r4, r5, r6, pc}
 800dd16:	bf00      	nop
 800dd18:	20013188 	.word	0x20013188
 800dd1c:	2001367c 	.word	0x2001367c
 800dd20:	20013190 	.word	0x20013190
 800dd24:	20013654 	.word	0x20013654
 800dd28:	2001318c 	.word	0x2001318c
 800dd2c:	20013630 	.word	0x20013630

0800dd30 <xTaskRemoveFromEventList>:
{
 800dd30:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dd32:	68c3      	ldr	r3, [r0, #12]
 800dd34:	68dc      	ldr	r4, [r3, #12]
{
 800dd36:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800dd38:	2c00      	cmp	r4, #0
 800dd3a:	d02b      	beq.n	800dd94 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800dd3c:	f104 0518 	add.w	r5, r4, #24
 800dd40:	4628      	mov	r0, r5
 800dd42:	f7fe f8ff 	bl	800bf44 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800dd46:	4b18      	ldr	r3, [pc, #96]	; (800dda8 <xTaskRemoveFromEventList+0x78>)
 800dd48:	681b      	ldr	r3, [r3, #0]
 800dd4a:	b17b      	cbz	r3, 800dd6c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800dd4c:	4817      	ldr	r0, [pc, #92]	; (800ddac <xTaskRemoveFromEventList+0x7c>)
 800dd4e:	4629      	mov	r1, r5
 800dd50:	f7fe f8d0 	bl	800bef4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800dd54:	4b16      	ldr	r3, [pc, #88]	; (800ddb0 <xTaskRemoveFromEventList+0x80>)
 800dd56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dd58:	681b      	ldr	r3, [r3, #0]
 800dd5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd5c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800dd5e:	bf85      	ittet	hi
 800dd60:	4b14      	ldrhi	r3, [pc, #80]	; (800ddb4 <xTaskRemoveFromEventList+0x84>)
 800dd62:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800dd64:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800dd66:	6018      	strhi	r0, [r3, #0]
}
 800dd68:	b003      	add	sp, #12
 800dd6a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800dd6c:	1d21      	adds	r1, r4, #4
 800dd6e:	4608      	mov	r0, r1
 800dd70:	9101      	str	r1, [sp, #4]
 800dd72:	f7fe f8e7 	bl	800bf44 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800dd76:	4a10      	ldr	r2, [pc, #64]	; (800ddb8 <xTaskRemoveFromEventList+0x88>)
 800dd78:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800dd7a:	6810      	ldr	r0, [r2, #0]
 800dd7c:	9901      	ldr	r1, [sp, #4]
 800dd7e:	4283      	cmp	r3, r0
 800dd80:	480e      	ldr	r0, [pc, #56]	; (800ddbc <xTaskRemoveFromEventList+0x8c>)
 800dd82:	bf88      	it	hi
 800dd84:	6013      	strhi	r3, [r2, #0]
 800dd86:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800dd8a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800dd8e:	f7fe f8b1 	bl	800bef4 <vListInsertEnd>
 800dd92:	e7df      	b.n	800dd54 <xTaskRemoveFromEventList+0x24>
 800dd94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd98:	f383 8811 	msr	BASEPRI, r3
 800dd9c:	f3bf 8f6f 	isb	sy
 800dda0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800dda4:	e7fe      	b.n	800dda4 <xTaskRemoveFromEventList+0x74>
 800dda6:	bf00      	nop
 800dda8:	200135fc 	.word	0x200135fc
 800ddac:	2001363c 	.word	0x2001363c
 800ddb0:	20013188 	.word	0x20013188
 800ddb4:	20013680 	.word	0x20013680
 800ddb8:	20013604 	.word	0x20013604
 800ddbc:	20013194 	.word	0x20013194

0800ddc0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ddc0:	4a03      	ldr	r2, [pc, #12]	; (800ddd0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ddc2:	4b04      	ldr	r3, [pc, #16]	; (800ddd4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ddc4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ddc6:	681b      	ldr	r3, [r3, #0]
 800ddc8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800ddcc:	4770      	bx	lr
 800ddce:	bf00      	nop
 800ddd0:	20013634 	.word	0x20013634
 800ddd4:	2001367c 	.word	0x2001367c

0800ddd8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800ddd8:	b328      	cbz	r0, 800de26 <xTaskCheckForTimeOut+0x4e>
{
 800ddda:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dddc:	460d      	mov	r5, r1
 800ddde:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800dde0:	b1c1      	cbz	r1, 800de14 <xTaskCheckForTimeOut+0x3c>
 800dde2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800dde4:	f7fe f926 	bl	800c034 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800dde8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800ddea:	4a1d      	ldr	r2, [pc, #116]	; (800de60 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800ddec:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800ddee:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800ddf0:	d030      	beq.n	800de54 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800ddf2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800de64 <xTaskCheckForTimeOut+0x8c>
 800ddf6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800ddfa:	f8dc 7000 	ldr.w	r7, [ip]
 800ddfe:	42be      	cmp	r6, r7
 800de00:	d01a      	beq.n	800de38 <xTaskCheckForTimeOut+0x60>
 800de02:	4288      	cmp	r0, r1
 800de04:	d818      	bhi.n	800de38 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800de06:	2001      	movs	r0, #1
 800de08:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800de0a:	f7fe f935 	bl	800c078 <vPortExitCritical>
}
 800de0e:	9801      	ldr	r0, [sp, #4]
 800de10:	b003      	add	sp, #12
 800de12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de18:	f383 8811 	msr	BASEPRI, r3
 800de1c:	f3bf 8f6f 	isb	sy
 800de20:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800de24:	e7fe      	b.n	800de24 <xTaskCheckForTimeOut+0x4c>
 800de26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de2a:	f383 8811 	msr	BASEPRI, r3
 800de2e:	f3bf 8f6f 	isb	sy
 800de32:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800de36:	e7fe      	b.n	800de36 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800de38:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800de3c:	4573      	cmp	r3, lr
 800de3e:	d90b      	bls.n	800de58 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800de40:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800de42:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800de46:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800de48:	4403      	add	r3, r0
 800de4a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800de4c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800de4e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800de52:	e7d9      	b.n	800de08 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800de54:	2000      	movs	r0, #0
 800de56:	e7d7      	b.n	800de08 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800de58:	2300      	movs	r3, #0
 800de5a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800de5c:	2001      	movs	r0, #1
 800de5e:	e7d3      	b.n	800de08 <xTaskCheckForTimeOut+0x30>
 800de60:	2001367c 	.word	0x2001367c
 800de64:	20013634 	.word	0x20013634

0800de68 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800de68:	4b01      	ldr	r3, [pc, #4]	; (800de70 <vTaskMissedYield+0x8>)
 800de6a:	2201      	movs	r2, #1
 800de6c:	601a      	str	r2, [r3, #0]
}
 800de6e:	4770      	bx	lr
 800de70:	20013680 	.word	0x20013680

0800de74 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800de74:	4b05      	ldr	r3, [pc, #20]	; (800de8c <xTaskGetSchedulerState+0x18>)
 800de76:	681b      	ldr	r3, [r3, #0]
 800de78:	b133      	cbz	r3, 800de88 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800de7a:	4b05      	ldr	r3, [pc, #20]	; (800de90 <xTaskGetSchedulerState+0x1c>)
 800de7c:	6818      	ldr	r0, [r3, #0]
 800de7e:	fab0 f080 	clz	r0, r0
 800de82:	0940      	lsrs	r0, r0, #5
 800de84:	0040      	lsls	r0, r0, #1
 800de86:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800de88:	2001      	movs	r0, #1
	}
 800de8a:	4770      	bx	lr
 800de8c:	20013650 	.word	0x20013650
 800de90:	200135fc 	.word	0x200135fc

0800de94 <xTaskPriorityInherit>:
	{
 800de94:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800de96:	4604      	mov	r4, r0
	{
 800de98:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800de9a:	b1c8      	cbz	r0, 800ded0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800de9c:	4d1d      	ldr	r5, [pc, #116]	; (800df14 <xTaskPriorityInherit+0x80>)
 800de9e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800dea0:	682a      	ldr	r2, [r5, #0]
 800dea2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800dea4:	4293      	cmp	r3, r2
 800dea6:	d215      	bcs.n	800ded4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800dea8:	6982      	ldr	r2, [r0, #24]
 800deaa:	2a00      	cmp	r2, #0
 800deac:	db04      	blt.n	800deb8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800deae:	682a      	ldr	r2, [r5, #0]
 800deb0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800deb2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800deb6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800deb8:	4e17      	ldr	r6, [pc, #92]	; (800df18 <xTaskPriorityInherit+0x84>)
 800deba:	6962      	ldr	r2, [r4, #20]
 800debc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800dec0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800dec4:	429a      	cmp	r2, r3
 800dec6:	d00e      	beq.n	800dee6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800dec8:	682b      	ldr	r3, [r5, #0]
 800deca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800decc:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800dece:	2001      	movs	r0, #1
	}
 800ded0:	b002      	add	sp, #8
 800ded2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800ded4:	682b      	ldr	r3, [r5, #0]
 800ded6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ded8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800deda:	4298      	cmp	r0, r3
 800dedc:	bf2c      	ite	cs
 800dede:	2000      	movcs	r0, #0
 800dee0:	2001      	movcc	r0, #1
	}
 800dee2:	b002      	add	sp, #8
 800dee4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800dee6:	1d21      	adds	r1, r4, #4
 800dee8:	4608      	mov	r0, r1
 800deea:	9101      	str	r1, [sp, #4]
 800deec:	f7fe f82a 	bl	800bf44 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800def0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800def2:	4b0a      	ldr	r3, [pc, #40]	; (800df1c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800def4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800def6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800def8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800defa:	4290      	cmp	r0, r2
 800defc:	bf88      	it	hi
 800defe:	6018      	strhi	r0, [r3, #0]
 800df00:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800df04:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800df08:	9901      	ldr	r1, [sp, #4]
 800df0a:	f7fd fff3 	bl	800bef4 <vListInsertEnd>
				xReturn = pdTRUE;
 800df0e:	2001      	movs	r0, #1
 800df10:	e7de      	b.n	800ded0 <xTaskPriorityInherit+0x3c>
 800df12:	bf00      	nop
 800df14:	20013188 	.word	0x20013188
 800df18:	20013194 	.word	0x20013194
 800df1c:	20013604 	.word	0x20013604

0800df20 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800df20:	b318      	cbz	r0, 800df6a <xTaskPriorityDisinherit+0x4a>
	{
 800df22:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800df24:	4b1e      	ldr	r3, [pc, #120]	; (800dfa0 <xTaskPriorityDisinherit+0x80>)
 800df26:	681c      	ldr	r4, [r3, #0]
 800df28:	4284      	cmp	r4, r0
	{
 800df2a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800df2c:	d008      	beq.n	800df40 <xTaskPriorityDisinherit+0x20>
 800df2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df32:	f383 8811 	msr	BASEPRI, r3
 800df36:	f3bf 8f6f 	isb	sy
 800df3a:	f3bf 8f4f 	dsb	sy
 800df3e:	e7fe      	b.n	800df3e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800df40:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800df42:	b14b      	cbz	r3, 800df58 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800df44:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800df46:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800df48:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800df4a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800df4c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800df4e:	d000      	beq.n	800df52 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800df50:	b16b      	cbz	r3, 800df6e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800df52:	2000      	movs	r0, #0
	}
 800df54:	b002      	add	sp, #8
 800df56:	bd10      	pop	{r4, pc}
 800df58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df5c:	f383 8811 	msr	BASEPRI, r3
 800df60:	f3bf 8f6f 	isb	sy
 800df64:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800df68:	e7fe      	b.n	800df68 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800df6a:	2000      	movs	r0, #0
	}
 800df6c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800df6e:	1d21      	adds	r1, r4, #4
 800df70:	4608      	mov	r0, r1
 800df72:	9101      	str	r1, [sp, #4]
 800df74:	f7fd ffe6 	bl	800bf44 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800df78:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800df7a:	4a0a      	ldr	r2, [pc, #40]	; (800dfa4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800df7c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800df7e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800df82:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800df84:	6810      	ldr	r0, [r2, #0]
 800df86:	9901      	ldr	r1, [sp, #4]
 800df88:	4283      	cmp	r3, r0
 800df8a:	4807      	ldr	r0, [pc, #28]	; (800dfa8 <xTaskPriorityDisinherit+0x88>)
 800df8c:	bf88      	it	hi
 800df8e:	6013      	strhi	r3, [r2, #0]
 800df90:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800df94:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800df98:	f7fd ffac 	bl	800bef4 <vListInsertEnd>
					xReturn = pdTRUE;
 800df9c:	2001      	movs	r0, #1
		return xReturn;
 800df9e:	e7d9      	b.n	800df54 <xTaskPriorityDisinherit+0x34>
 800dfa0:	20013188 	.word	0x20013188
 800dfa4:	20013604 	.word	0x20013604
 800dfa8:	20013194 	.word	0x20013194

0800dfac <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800dfac:	2800      	cmp	r0, #0
 800dfae:	d041      	beq.n	800e034 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800dfb0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800dfb2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800dfb4:	b083      	sub	sp, #12
 800dfb6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800dfb8:	b153      	cbz	r3, 800dfd0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800dfba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800dfbc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dfbe:	4281      	cmp	r1, r0
 800dfc0:	bf38      	it	cc
 800dfc2:	4601      	movcc	r1, r0
 800dfc4:	428a      	cmp	r2, r1
 800dfc6:	d001      	beq.n	800dfcc <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800dfc8:	2b01      	cmp	r3, #1
 800dfca:	d00a      	beq.n	800dfe2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800dfcc:	b003      	add	sp, #12
 800dfce:	bd30      	pop	{r4, r5, pc}
 800dfd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfd4:	f383 8811 	msr	BASEPRI, r3
 800dfd8:	f3bf 8f6f 	isb	sy
 800dfdc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800dfe0:	e7fe      	b.n	800dfe0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800dfe2:	4b19      	ldr	r3, [pc, #100]	; (800e048 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800dfe4:	681b      	ldr	r3, [r3, #0]
 800dfe6:	42a3      	cmp	r3, r4
 800dfe8:	d025      	beq.n	800e036 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800dfea:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800dfec:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800dfee:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dff0:	bfa8      	it	ge
 800dff2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800dff6:	4d15      	ldr	r5, [pc, #84]	; (800e04c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dff8:	bfa8      	it	ge
 800dffa:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800dffc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800e000:	6961      	ldr	r1, [r4, #20]
 800e002:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800e006:	4299      	cmp	r1, r3
 800e008:	d1e0      	bne.n	800dfcc <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e00a:	1d21      	adds	r1, r4, #4
 800e00c:	4608      	mov	r0, r1
 800e00e:	9101      	str	r1, [sp, #4]
 800e010:	f7fd ff98 	bl	800bf44 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800e014:	4b0e      	ldr	r3, [pc, #56]	; (800e050 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800e016:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800e018:	681a      	ldr	r2, [r3, #0]
 800e01a:	9901      	ldr	r1, [sp, #4]
 800e01c:	4290      	cmp	r0, r2
 800e01e:	bf88      	it	hi
 800e020:	6018      	strhi	r0, [r3, #0]
 800e022:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e026:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800e02a:	b003      	add	sp, #12
 800e02c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800e030:	f7fd bf60 	b.w	800bef4 <vListInsertEnd>
 800e034:	4770      	bx	lr
 800e036:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e03a:	f383 8811 	msr	BASEPRI, r3
 800e03e:	f3bf 8f6f 	isb	sy
 800e042:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800e046:	e7fe      	b.n	800e046 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800e048:	20013188 	.word	0x20013188
 800e04c:	20013194 	.word	0x20013194
 800e050:	20013604 	.word	0x20013604

0800e054 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800e054:	4b04      	ldr	r3, [pc, #16]	; (800e068 <pvTaskIncrementMutexHeldCount+0x14>)
 800e056:	681a      	ldr	r2, [r3, #0]
 800e058:	b11a      	cbz	r2, 800e062 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800e05a:	6819      	ldr	r1, [r3, #0]
 800e05c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800e05e:	3201      	adds	r2, #1
 800e060:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800e062:	6818      	ldr	r0, [r3, #0]
	}
 800e064:	4770      	bx	lr
 800e066:	bf00      	nop
 800e068:	20013188 	.word	0x20013188

0800e06c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800e06c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e070:	4e22      	ldr	r6, [pc, #136]	; (800e0fc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800e072:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800e104 <prvSwitchTimerLists+0x98>
{
 800e076:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800e078:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800e07c:	e00d      	b.n	800e09a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800e07e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e080:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800e082:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800e084:	1d25      	adds	r5, r4, #4
 800e086:	4628      	mov	r0, r5
 800e088:	f7fd ff5c 	bl	800bf44 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800e08c:	6a23      	ldr	r3, [r4, #32]
 800e08e:	4620      	mov	r0, r4
 800e090:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800e092:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800e096:	075b      	lsls	r3, r3, #29
 800e098:	d40a      	bmi.n	800e0b0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800e09a:	6833      	ldr	r3, [r6, #0]
 800e09c:	681a      	ldr	r2, [r3, #0]
 800e09e:	2a00      	cmp	r2, #0
 800e0a0:	d1ed      	bne.n	800e07e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800e0a2:	4a17      	ldr	r2, [pc, #92]	; (800e100 <prvSwitchTimerLists+0x94>)
 800e0a4:	6811      	ldr	r1, [r2, #0]
 800e0a6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800e0a8:	6013      	str	r3, [r2, #0]
}
 800e0aa:	b005      	add	sp, #20
 800e0ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800e0b0:	69a3      	ldr	r3, [r4, #24]
 800e0b2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800e0b4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e0b6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800e0b8:	d205      	bcs.n	800e0c6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e0ba:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800e0bc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e0be:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e0c0:	f7fd ff28 	bl	800bf14 <vListInsert>
 800e0c4:	e7e9      	b.n	800e09a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800e0c6:	f8d9 3000 	ldr.w	r3, [r9]
 800e0ca:	b16b      	cbz	r3, 800e0e8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800e0cc:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800e0d0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800e0d2:	f7ff fecf 	bl	800de74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800e0d6:	2300      	movs	r3, #0
 800e0d8:	f8d9 0000 	ldr.w	r0, [r9]
 800e0dc:	461a      	mov	r2, r3
 800e0de:	4669      	mov	r1, sp
 800e0e0:	f7fe fa9c 	bl	800c61c <xQueueGenericSend>
				configASSERT( xResult );
 800e0e4:	2800      	cmp	r0, #0
 800e0e6:	d1d8      	bne.n	800e09a <prvSwitchTimerLists+0x2e>
 800e0e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0ec:	f383 8811 	msr	BASEPRI, r3
 800e0f0:	f3bf 8f6f 	isb	sy
 800e0f4:	f3bf 8f4f 	dsb	sy
 800e0f8:	e7fe      	b.n	800e0f8 <prvSwitchTimerLists+0x8c>
 800e0fa:	bf00      	nop
 800e0fc:	20013684 	.word	0x20013684
 800e100:	20013688 	.word	0x20013688
 800e104:	200137a8 	.word	0x200137a8

0800e108 <prvTimerTask>:
{
 800e108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e10c:	4e9b      	ldr	r6, [pc, #620]	; (800e37c <prvTimerTask+0x274>)
 800e10e:	4d9c      	ldr	r5, [pc, #624]	; (800e380 <prvTimerTask+0x278>)
 800e110:	4c9c      	ldr	r4, [pc, #624]	; (800e384 <prvTimerTask+0x27c>)
 800e112:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800e114:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800e118:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800e11c:	6833      	ldr	r3, [r6, #0]
 800e11e:	681f      	ldr	r7, [r3, #0]
 800e120:	2f00      	cmp	r7, #0
 800e122:	f000 80a8 	beq.w	800e276 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800e126:	68db      	ldr	r3, [r3, #12]
 800e128:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800e12a:	f7ff fcf9 	bl	800db20 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800e12e:	f7ff fd0f 	bl	800db50 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800e132:	682a      	ldr	r2, [r5, #0]
 800e134:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800e136:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800e138:	f0c0 80ae 	bcc.w	800e298 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800e13c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800e13e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800e140:	f240 80b4 	bls.w	800e2ac <prvTimerTask+0x1a4>
 800e144:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800e146:	6820      	ldr	r0, [r4, #0]
 800e148:	eba7 010a 	sub.w	r1, r7, sl
 800e14c:	f7ff f89a 	bl	800d284 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800e150:	f7ff fcee 	bl	800db30 <xTaskResumeAll>
 800e154:	b928      	cbnz	r0, 800e162 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800e156:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800e15a:	f3bf 8f4f 	dsb	sy
 800e15e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800e162:	6820      	ldr	r0, [r4, #0]
 800e164:	2200      	movs	r2, #0
 800e166:	a902      	add	r1, sp, #8
 800e168:	f7fe fc94 	bl	800ca94 <xQueueReceive>
 800e16c:	2800      	cmp	r0, #0
 800e16e:	d0d5      	beq.n	800e11c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800e170:	9b02      	ldr	r3, [sp, #8]
 800e172:	2b00      	cmp	r3, #0
 800e174:	db76      	blt.n	800e264 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800e176:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800e178:	697b      	ldr	r3, [r7, #20]
 800e17a:	b113      	cbz	r3, 800e182 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800e17c:	1d38      	adds	r0, r7, #4
 800e17e:	f7fd fee1 	bl	800bf44 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800e182:	f7ff fce5 	bl	800db50 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800e186:	682b      	ldr	r3, [r5, #0]
 800e188:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800e18a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800e18c:	f0c0 808b 	bcc.w	800e2a6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800e190:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800e192:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800e196:	2b09      	cmp	r3, #9
 800e198:	d8e3      	bhi.n	800e162 <prvTimerTask+0x5a>
 800e19a:	e8df f003 	tbb	[pc, r3]
 800e19e:	0505      	.short	0x0505
 800e1a0:	5a3d5305 	.word	0x5a3d5305
 800e1a4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800e1a8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800e1ac:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e1ae:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800e1b0:	f043 0301 	orr.w	r3, r3, #1
 800e1b4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800e1b8:	9b03      	ldr	r3, [sp, #12]
 800e1ba:	1899      	adds	r1, r3, r2
 800e1bc:	bf2c      	ite	cs
 800e1be:	2001      	movcs	r0, #1
 800e1c0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800e1c2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800e1c4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800e1c6:	f200 808c 	bhi.w	800e2e2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e1ca:	ebaa 0303 	sub.w	r3, sl, r3
 800e1ce:	429a      	cmp	r2, r3
 800e1d0:	d832      	bhi.n	800e238 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800e1d2:	6a3b      	ldr	r3, [r7, #32]
 800e1d4:	4638      	mov	r0, r7
 800e1d6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800e1d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e1dc:	075b      	lsls	r3, r3, #29
 800e1de:	d5c0      	bpl.n	800e162 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800e1e0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800e1e2:	9903      	ldr	r1, [sp, #12]
 800e1e4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800e1e6:	b172      	cbz	r2, 800e206 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800e1e8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800e1ea:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800e1ee:	2300      	movs	r3, #0
 800e1f0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800e1f2:	f7ff fe3f 	bl	800de74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800e1f6:	2300      	movs	r3, #0
 800e1f8:	6820      	ldr	r0, [r4, #0]
 800e1fa:	461a      	mov	r2, r3
 800e1fc:	a906      	add	r1, sp, #24
 800e1fe:	f7fe fa0d 	bl	800c61c <xQueueGenericSend>
							configASSERT( xResult );
 800e202:	2800      	cmp	r0, #0
 800e204:	d1ad      	bne.n	800e162 <prvTimerTask+0x5a>
 800e206:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e20a:	f383 8811 	msr	BASEPRI, r3
 800e20e:	f3bf 8f6f 	isb	sy
 800e212:	f3bf 8f4f 	dsb	sy
 800e216:	e7fe      	b.n	800e216 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800e218:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e21c:	f043 0301 	orr.w	r3, r3, #1
 800e220:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800e224:	9b03      	ldr	r3, [sp, #12]
 800e226:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800e228:	2b00      	cmp	r3, #0
 800e22a:	f000 809d 	beq.w	800e368 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800e22e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800e230:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800e232:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e234:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800e236:	d85e      	bhi.n	800e2f6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800e238:	4b53      	ldr	r3, [pc, #332]	; (800e388 <prvTimerTask+0x280>)
 800e23a:	1d39      	adds	r1, r7, #4
 800e23c:	6818      	ldr	r0, [r3, #0]
 800e23e:	f7fd fe69 	bl	800bf14 <vListInsert>
	return xProcessTimerNow;
 800e242:	e78e      	b.n	800e162 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800e244:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e248:	f023 0301 	bic.w	r3, r3, #1
 800e24c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800e250:	e787      	b.n	800e162 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800e252:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800e256:	079a      	lsls	r2, r3, #30
 800e258:	d552      	bpl.n	800e300 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800e25a:	f023 0301 	bic.w	r3, r3, #1
 800e25e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800e262:	e77e      	b.n	800e162 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800e264:	9b03      	ldr	r3, [sp, #12]
 800e266:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800e26a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800e26c:	9b02      	ldr	r3, [sp, #8]
 800e26e:	2b00      	cmp	r3, #0
 800e270:	f6ff af77 	blt.w	800e162 <prvTimerTask+0x5a>
 800e274:	e77f      	b.n	800e176 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800e276:	f7ff fc53 	bl	800db20 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800e27a:	f7ff fc69 	bl	800db50 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800e27e:	682a      	ldr	r2, [r5, #0]
 800e280:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800e282:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800e284:	d808      	bhi.n	800e298 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800e286:	4b40      	ldr	r3, [pc, #256]	; (800e388 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800e288:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800e28c:	681a      	ldr	r2, [r3, #0]
 800e28e:	6812      	ldr	r2, [r2, #0]
 800e290:	fab2 f282 	clz	r2, r2
 800e294:	0952      	lsrs	r2, r2, #5
 800e296:	e756      	b.n	800e146 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800e298:	f7ff fee8 	bl	800e06c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800e29c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800e2a0:	f7ff fc46 	bl	800db30 <xTaskResumeAll>
 800e2a4:	e75d      	b.n	800e162 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800e2a6:	f7ff fee1 	bl	800e06c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800e2aa:	e771      	b.n	800e190 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800e2ac:	f7ff fc40 	bl	800db30 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e2b0:	6832      	ldr	r2, [r6, #0]
 800e2b2:	68d2      	ldr	r2, [r2, #12]
 800e2b4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800e2b8:	f10b 0104 	add.w	r1, fp, #4
 800e2bc:	4608      	mov	r0, r1
 800e2be:	9101      	str	r1, [sp, #4]
 800e2c0:	f7fd fe40 	bl	800bf44 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800e2c4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800e2c8:	9901      	ldr	r1, [sp, #4]
 800e2ca:	f010 0f04 	tst.w	r0, #4
 800e2ce:	d11b      	bne.n	800e308 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800e2d0:	f020 0001 	bic.w	r0, r0, #1
 800e2d4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800e2d8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800e2dc:	4658      	mov	r0, fp
 800e2de:	4798      	blx	r3
}
 800e2e0:	e73f      	b.n	800e162 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800e2e2:	4553      	cmp	r3, sl
 800e2e4:	d902      	bls.n	800e2ec <prvTimerTask+0x1e4>
 800e2e6:	2800      	cmp	r0, #0
 800e2e8:	f43f af73 	beq.w	800e1d2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e2ec:	6830      	ldr	r0, [r6, #0]
 800e2ee:	1d39      	adds	r1, r7, #4
 800e2f0:	f7fd fe10 	bl	800bf14 <vListInsert>
	return xProcessTimerNow;
 800e2f4:	e735      	b.n	800e162 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e2f6:	6830      	ldr	r0, [r6, #0]
 800e2f8:	1d39      	adds	r1, r7, #4
 800e2fa:	f7fd fe0b 	bl	800bf14 <vListInsert>
 800e2fe:	e730      	b.n	800e162 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800e300:	4638      	mov	r0, r7
 800e302:	f7fd fd83 	bl	800be0c <vPortFree>
 800e306:	e72c      	b.n	800e162 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800e308:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e30c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800e310:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800e312:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800e314:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800e318:	d903      	bls.n	800e322 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e31a:	6830      	ldr	r0, [r6, #0]
 800e31c:	f7fd fdfa 	bl	800bf14 <vListInsert>
	return xProcessTimerNow;
 800e320:	e7da      	b.n	800e2d8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e322:	ebaa 0307 	sub.w	r3, sl, r7
 800e326:	429a      	cmp	r2, r3
 800e328:	d819      	bhi.n	800e35e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800e32a:	6823      	ldr	r3, [r4, #0]
 800e32c:	b173      	cbz	r3, 800e34c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800e32e:	2300      	movs	r3, #0
 800e330:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800e332:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800e334:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800e338:	f7ff fd9c 	bl	800de74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800e33c:	2300      	movs	r3, #0
 800e33e:	6820      	ldr	r0, [r4, #0]
 800e340:	461a      	mov	r2, r3
 800e342:	a906      	add	r1, sp, #24
 800e344:	f7fe f96a 	bl	800c61c <xQueueGenericSend>
			configASSERT( xResult );
 800e348:	2800      	cmp	r0, #0
 800e34a:	d1c5      	bne.n	800e2d8 <prvTimerTask+0x1d0>
 800e34c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e350:	f383 8811 	msr	BASEPRI, r3
 800e354:	f3bf 8f6f 	isb	sy
 800e358:	f3bf 8f4f 	dsb	sy
 800e35c:	e7fe      	b.n	800e35c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800e35e:	4b0a      	ldr	r3, [pc, #40]	; (800e388 <prvTimerTask+0x280>)
 800e360:	6818      	ldr	r0, [r3, #0]
 800e362:	f7fd fdd7 	bl	800bf14 <vListInsert>
	return xProcessTimerNow;
 800e366:	e7b7      	b.n	800e2d8 <prvTimerTask+0x1d0>
 800e368:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e36c:	f383 8811 	msr	BASEPRI, r3
 800e370:	f3bf 8f6f 	isb	sy
 800e374:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800e378:	e7fe      	b.n	800e378 <prvTimerTask+0x270>
 800e37a:	bf00      	nop
 800e37c:	20013684 	.word	0x20013684
 800e380:	20013754 	.word	0x20013754
 800e384:	200137a8 	.word	0x200137a8
 800e388:	20013688 	.word	0x20013688

0800e38c <xTimerCreateTimerTask>:
{
 800e38c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800e38e:	4c23      	ldr	r4, [pc, #140]	; (800e41c <xTimerCreateTimerTask+0x90>)
{
 800e390:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800e392:	f7fd fe4f 	bl	800c034 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800e396:	6825      	ldr	r5, [r4, #0]
 800e398:	b335      	cbz	r5, 800e3e8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800e39a:	f7fd fe6d 	bl	800c078 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800e39e:	6823      	ldr	r3, [r4, #0]
 800e3a0:	b1cb      	cbz	r3, 800e3d6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800e3a2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800e3a4:	aa07      	add	r2, sp, #28
 800e3a6:	a906      	add	r1, sp, #24
 800e3a8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800e3aa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800e3ae:	f7fd fc61 	bl	800bc74 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800e3b2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800e3b6:	2302      	movs	r3, #2
 800e3b8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800e3bc:	9300      	str	r3, [sp, #0]
 800e3be:	9a07      	ldr	r2, [sp, #28]
 800e3c0:	4917      	ldr	r1, [pc, #92]	; (800e420 <xTimerCreateTimerTask+0x94>)
 800e3c2:	4818      	ldr	r0, [pc, #96]	; (800e424 <xTimerCreateTimerTask+0x98>)
 800e3c4:	4623      	mov	r3, r4
 800e3c6:	f7ff fa6d 	bl	800d8a4 <xTaskCreateStatic>
 800e3ca:	4b17      	ldr	r3, [pc, #92]	; (800e428 <xTimerCreateTimerTask+0x9c>)
 800e3cc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800e3ce:	b110      	cbz	r0, 800e3d6 <xTimerCreateTimerTask+0x4a>
}
 800e3d0:	2001      	movs	r0, #1
 800e3d2:	b009      	add	sp, #36	; 0x24
 800e3d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e3d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3da:	f383 8811 	msr	BASEPRI, r3
 800e3de:	f3bf 8f6f 	isb	sy
 800e3e2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800e3e6:	e7fe      	b.n	800e3e6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800e3e8:	4f10      	ldr	r7, [pc, #64]	; (800e42c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800e3ea:	4e11      	ldr	r6, [pc, #68]	; (800e430 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800e3ec:	4638      	mov	r0, r7
 800e3ee:	f7fd fd71 	bl	800bed4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800e3f2:	4630      	mov	r0, r6
 800e3f4:	f7fd fd6e 	bl	800bed4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800e3f8:	4a0e      	ldr	r2, [pc, #56]	; (800e434 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e3fa:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800e3fc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800e3fe:	4a0e      	ldr	r2, [pc, #56]	; (800e438 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e400:	4b0e      	ldr	r3, [pc, #56]	; (800e43c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800e402:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e404:	2110      	movs	r1, #16
 800e406:	4a0e      	ldr	r2, [pc, #56]	; (800e440 <xTimerCreateTimerTask+0xb4>)
 800e408:	200a      	movs	r0, #10
 800e40a:	f7fd ffb1 	bl	800c370 <xQueueGenericCreateStatic>
 800e40e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800e410:	2800      	cmp	r0, #0
 800e412:	d0c2      	beq.n	800e39a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800e414:	490b      	ldr	r1, [pc, #44]	; (800e444 <xTimerCreateTimerTask+0xb8>)
 800e416:	f7fe ff0d 	bl	800d234 <vQueueAddToRegistry>
 800e41a:	e7be      	b.n	800e39a <xTimerCreateTimerTask+0xe>
 800e41c:	200137a8 	.word	0x200137a8
 800e420:	0802afe8 	.word	0x0802afe8
 800e424:	0800e109 	.word	0x0800e109
 800e428:	200137ac 	.word	0x200137ac
 800e42c:	2001372c 	.word	0x2001372c
 800e430:	20013740 	.word	0x20013740
 800e434:	20013684 	.word	0x20013684
 800e438:	20013688 	.word	0x20013688
 800e43c:	20013758 	.word	0x20013758
 800e440:	2001368c 	.word	0x2001368c
 800e444:	0802afe0 	.word	0x0802afe0

0800e448 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800e448:	8880      	ldrh	r0, [r0, #4]
 800e44a:	4770      	bx	lr

0800e44c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800e44c:	b570      	push	{r4, r5, r6, lr}
 800e44e:	6803      	ldr	r3, [r0, #0]
 800e450:	4605      	mov	r5, r0
 800e452:	460c      	mov	r4, r1
 800e454:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e456:	2100      	movs	r1, #0
 800e458:	4798      	blx	r3
 800e45a:	682b      	ldr	r3, [r5, #0]
 800e45c:	4606      	mov	r6, r0
 800e45e:	6a1b      	ldr	r3, [r3, #32]
 800e460:	4628      	mov	r0, r5
 800e462:	4798      	blx	r3
 800e464:	1ba4      	subs	r4, r4, r6
 800e466:	b2a4      	uxth	r4, r4
 800e468:	fbb4 f0f0 	udiv	r0, r4, r0
 800e46c:	bd70      	pop	{r4, r5, r6, pc}

0800e46e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800e46e:	2300      	movs	r3, #0
 800e470:	8083      	strh	r3, [r0, #4]
 800e472:	4770      	bx	lr

0800e474 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800e474:	b510      	push	{r4, lr}
 800e476:	6803      	ldr	r3, [r0, #0]
 800e478:	8881      	ldrh	r1, [r0, #4]
 800e47a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e47c:	4604      	mov	r4, r0
 800e47e:	4798      	blx	r3
 800e480:	88a3      	ldrh	r3, [r4, #4]
 800e482:	3301      	adds	r3, #1
 800e484:	80a3      	strh	r3, [r4, #4]
 800e486:	bd10      	pop	{r4, pc}

0800e488 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800e488:	6803      	ldr	r3, [r0, #0]
 800e48a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e48c:	4718      	bx	r3

0800e48e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800e48e:	4770      	bx	lr

0800e490 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800e490:	4a02      	ldr	r2, [pc, #8]	; (800e49c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800e492:	6002      	str	r2, [r0, #0]
 800e494:	2200      	movs	r2, #0
 800e496:	8082      	strh	r2, [r0, #4]
 800e498:	4770      	bx	lr
 800e49a:	bf00      	nop
 800e49c:	0802aff8 	.word	0x0802aff8

0800e4a0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800e4a0:	b510      	push	{r4, lr}
 800e4a2:	6803      	ldr	r3, [r0, #0]
 800e4a4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800e4a8:	4604      	mov	r4, r0
 800e4aa:	4798      	blx	r3
 800e4ac:	b110      	cbz	r0, 800e4b4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800e4ae:	4620      	mov	r0, r4
 800e4b0:	f7f2 fee0 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800e4b4:	bd10      	pop	{r4, pc}

0800e4b6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800e4b6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800e4ba:	4770      	bx	lr

0800e4bc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800e4bc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800e4c0:	4770      	bx	lr

0800e4c2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800e4c2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800e4c6:	4770      	bx	lr

0800e4c8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800e4c8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800e4cc:	4770      	bx	lr

0800e4ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800e4ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e4d0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800e4d4:	461e      	mov	r6, r3
 800e4d6:	6803      	ldr	r3, [r0, #0]
 800e4d8:	460f      	mov	r7, r1
 800e4da:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800e4de:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800e4e2:	4604      	mov	r4, r0
 800e4e4:	4615      	mov	r5, r2
 800e4e6:	4798      	blx	r3
 800e4e8:	b93e      	cbnz	r6, 800e4fa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800e4ea:	1bed      	subs	r5, r5, r7
 800e4ec:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800e4f0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e4f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800e4f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e4fa:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800e4fe:	e7f7      	b.n	800e4f0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800e500 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800e500:	b510      	push	{r4, lr}
 800e502:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800e506:	600c      	str	r4, [r1, #0]
 800e508:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800e50c:	6011      	str	r1, [r2, #0]
 800e50e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800e512:	801a      	strh	r2, [r3, #0]
 800e514:	9b02      	ldr	r3, [sp, #8]
 800e516:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800e51a:	801a      	strh	r2, [r3, #0]
 800e51c:	bd10      	pop	{r4, pc}

0800e51e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800e51e:	b510      	push	{r4, lr}
 800e520:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800e524:	600c      	str	r4, [r1, #0]
 800e526:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800e52a:	6011      	str	r1, [r2, #0]
 800e52c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800e530:	801a      	strh	r2, [r3, #0]
 800e532:	bd10      	pop	{r4, pc}

0800e534 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800e534:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800e538:	600b      	str	r3, [r1, #0]
 800e53a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800e53e:	6013      	str	r3, [r2, #0]
 800e540:	4770      	bx	lr

0800e542 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800e542:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800e546:	4770      	bx	lr

0800e548 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800e548:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800e54c:	4770      	bx	lr

0800e54e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800e54e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800e552:	4770      	bx	lr

0800e554 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800e554:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800e558:	4770      	bx	lr

0800e55a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800e55a:	4770      	bx	lr

0800e55c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800e55c:	b510      	push	{r4, lr}
 800e55e:	21b4      	movs	r1, #180	; 0xb4
 800e560:	4604      	mov	r4, r0
 800e562:	f018 f96c 	bl	802683e <_ZdlPvj>
 800e566:	4620      	mov	r0, r4
 800e568:	bd10      	pop	{r4, pc}

0800e56a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800e56a:	b570      	push	{r4, r5, r6, lr}
 800e56c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800e570:	428d      	cmp	r5, r1
 800e572:	bfb8      	it	lt
 800e574:	460d      	movlt	r5, r1
 800e576:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800e57a:	428d      	cmp	r5, r1
 800e57c:	4604      	mov	r4, r0
 800e57e:	bfa8      	it	ge
 800e580:	460d      	movge	r5, r1
 800e582:	4616      	mov	r6, r2
 800e584:	b99a      	cbnz	r2, 800e5ae <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800e586:	6803      	ldr	r3, [r0, #0]
 800e588:	4629      	mov	r1, r5
 800e58a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800e58e:	4798      	blx	r3
 800e590:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e594:	b368      	cbz	r0, 800e5f2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800e596:	6803      	ldr	r3, [r0, #0]
 800e598:	68db      	ldr	r3, [r3, #12]
 800e59a:	4798      	blx	r3
 800e59c:	b348      	cbz	r0, 800e5f2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800e59e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e5a2:	6803      	ldr	r3, [r0, #0]
 800e5a4:	4621      	mov	r1, r4
 800e5a6:	689b      	ldr	r3, [r3, #8]
 800e5a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e5ac:	4718      	bx	r3
 800e5ae:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800e5b2:	2b00      	cmp	r3, #0
 800e5b4:	dd08      	ble.n	800e5c8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800e5b6:	f005 fbe3 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
 800e5ba:	4621      	mov	r1, r4
 800e5bc:	3004      	adds	r0, #4
 800e5be:	f005 fc2c 	bl	8013e1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800e5c2:	2300      	movs	r3, #0
 800e5c4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800e5c8:	6823      	ldr	r3, [r4, #0]
 800e5ca:	4620      	mov	r0, r4
 800e5cc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800e5d0:	4798      	blx	r3
 800e5d2:	2300      	movs	r3, #0
 800e5d4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800e5d8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800e5dc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800e5e0:	f005 fbce 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
 800e5e4:	4621      	mov	r1, r4
 800e5e6:	3004      	adds	r0, #4
 800e5e8:	f005 fcc0 	bl	8013f6c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800e5ec:	2301      	movs	r3, #1
 800e5ee:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800e5f2:	bd70      	pop	{r4, r5, r6, pc}

0800e5f4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800e5f4:	b510      	push	{r4, lr}
 800e5f6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800e5fa:	4299      	cmp	r1, r3
 800e5fc:	bfb8      	it	lt
 800e5fe:	4619      	movlt	r1, r3
 800e600:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800e604:	4299      	cmp	r1, r3
 800e606:	bfa8      	it	ge
 800e608:	4619      	movge	r1, r3
 800e60a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800e60e:	428b      	cmp	r3, r1
 800e610:	4604      	mov	r4, r0
 800e612:	d010      	beq.n	800e636 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800e614:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800e618:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800e61c:	b158      	cbz	r0, 800e636 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800e61e:	6803      	ldr	r3, [r0, #0]
 800e620:	68db      	ldr	r3, [r3, #12]
 800e622:	4798      	blx	r3
 800e624:	b138      	cbz	r0, 800e636 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800e626:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800e62a:	6803      	ldr	r3, [r0, #0]
 800e62c:	4621      	mov	r1, r4
 800e62e:	689b      	ldr	r3, [r3, #8]
 800e630:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e634:	4718      	bx	r3
 800e636:	bd10      	pop	{r4, pc}

0800e638 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800e638:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e63a:	4604      	mov	r4, r0
 800e63c:	460d      	mov	r5, r1
 800e63e:	b1a9      	cbz	r1, 800e66c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800e640:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800e644:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800e648:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800e64c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800e650:	ab01      	add	r3, sp, #4
 800e652:	1a12      	subs	r2, r2, r0
 800e654:	1b89      	subs	r1, r1, r6
 800e656:	1a38      	subs	r0, r7, r0
 800e658:	f006 fe48 	bl	80152ec <_ZN8touchgfx6muldivElllRl>
 800e65c:	4629      	mov	r1, r5
 800e65e:	ab01      	add	r3, sp, #4
 800e660:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800e664:	4430      	add	r0, r6
 800e666:	f006 fe41 	bl	80152ec <_ZN8touchgfx6muldivElllRl>
 800e66a:	b285      	uxth	r5, r0
 800e66c:	4628      	mov	r0, r5
 800e66e:	b003      	add	sp, #12
 800e670:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e672 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800e672:	b570      	push	{r4, r5, r6, lr}
 800e674:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800e678:	4604      	mov	r4, r0
 800e67a:	2b00      	cmp	r3, #0
 800e67c:	d035      	beq.n	800e6ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e67e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800e682:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800e686:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800e68a:	3001      	adds	r0, #1
 800e68c:	1ad2      	subs	r2, r2, r3
 800e68e:	b212      	sxth	r2, r2
 800e690:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800e694:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800e698:	2100      	movs	r1, #0
 800e69a:	b280      	uxth	r0, r0
 800e69c:	47a8      	blx	r5
 800e69e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800e6a2:	6823      	ldr	r3, [r4, #0]
 800e6a4:	4401      	add	r1, r0
 800e6a6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800e6aa:	4620      	mov	r0, r4
 800e6ac:	4798      	blx	r3
 800e6ae:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800e6b2:	429a      	cmp	r2, r3
 800e6b4:	db19      	blt.n	800e6ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e6b6:	2500      	movs	r5, #0
 800e6b8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800e6bc:	f005 fb60 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
 800e6c0:	4621      	mov	r1, r4
 800e6c2:	3004      	adds	r0, #4
 800e6c4:	f005 fba9 	bl	8013e1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800e6c8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e6cc:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800e6d0:	b158      	cbz	r0, 800e6ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e6d2:	6803      	ldr	r3, [r0, #0]
 800e6d4:	68db      	ldr	r3, [r3, #12]
 800e6d6:	4798      	blx	r3
 800e6d8:	b138      	cbz	r0, 800e6ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e6da:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e6de:	6803      	ldr	r3, [r0, #0]
 800e6e0:	4621      	mov	r1, r4
 800e6e2:	689b      	ldr	r3, [r3, #8]
 800e6e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e6e8:	4718      	bx	r3
 800e6ea:	bd70      	pop	{r4, r5, r6, pc}

0800e6ec <_ZN8touchgfx8DrawableC1Ev>:
 800e6ec:	4a0a      	ldr	r2, [pc, #40]	; (800e718 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800e6ee:	6002      	str	r2, [r0, #0]
 800e6f0:	2200      	movs	r2, #0
 800e6f2:	8082      	strh	r2, [r0, #4]
 800e6f4:	80c2      	strh	r2, [r0, #6]
 800e6f6:	8102      	strh	r2, [r0, #8]
 800e6f8:	8142      	strh	r2, [r0, #10]
 800e6fa:	8182      	strh	r2, [r0, #12]
 800e6fc:	81c2      	strh	r2, [r0, #14]
 800e6fe:	8202      	strh	r2, [r0, #16]
 800e700:	8242      	strh	r2, [r0, #18]
 800e702:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e706:	61c2      	str	r2, [r0, #28]
 800e708:	8402      	strh	r2, [r0, #32]
 800e70a:	8442      	strh	r2, [r0, #34]	; 0x22
 800e70c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800e710:	2201      	movs	r2, #1
 800e712:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800e716:	4770      	bx	lr
 800e718:	0802b798 	.word	0x0802b798

0800e71c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800e71c:	b570      	push	{r4, r5, r6, lr}
 800e71e:	6803      	ldr	r3, [r0, #0]
 800e720:	4604      	mov	r4, r0
 800e722:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e724:	4615      	mov	r5, r2
 800e726:	4798      	blx	r3
 800e728:	6823      	ldr	r3, [r4, #0]
 800e72a:	4629      	mov	r1, r5
 800e72c:	4620      	mov	r0, r4
 800e72e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e730:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e734:	4718      	bx	r3

0800e736 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800e736:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e73a:	4604      	mov	r4, r0
 800e73c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800e740:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800e744:	460e      	mov	r6, r1
 800e746:	4615      	mov	r5, r2
 800e748:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800e74c:	4619      	mov	r1, r3
 800e74e:	463a      	mov	r2, r7
 800e750:	3058      	adds	r0, #88	; 0x58
 800e752:	4698      	mov	r8, r3
 800e754:	f7ff ffe2 	bl	800e71c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e758:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e75c:	4446      	add	r6, r8
 800e75e:	42b3      	cmp	r3, r6
 800e760:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e764:	bfb8      	it	lt
 800e766:	8126      	strhlt	r6, [r4, #8]
 800e768:	443d      	add	r5, r7
 800e76a:	42ab      	cmp	r3, r5
 800e76c:	bfb8      	it	lt
 800e76e:	8165      	strhlt	r5, [r4, #10]
 800e770:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e774 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800e774:	b510      	push	{r4, lr}
 800e776:	4604      	mov	r4, r0
 800e778:	302c      	adds	r0, #44	; 0x2c
 800e77a:	f002 fdf8 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800e77e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800e782:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800e786:	4620      	mov	r0, r4
 800e788:	f7ff ffc8 	bl	800e71c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e78c:	bd10      	pop	{r4, pc}
	...

0800e790 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800e790:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e792:	4604      	mov	r4, r0
 800e794:	4626      	mov	r6, r4
 800e796:	2500      	movs	r5, #0
 800e798:	f7ff ffa8 	bl	800e6ec <_ZN8touchgfx8DrawableC1Ev>
 800e79c:	4b23      	ldr	r3, [pc, #140]	; (800e82c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800e79e:	62a5      	str	r5, [r4, #40]	; 0x28
 800e7a0:	f846 3b2c 	str.w	r3, [r6], #44
 800e7a4:	2226      	movs	r2, #38	; 0x26
 800e7a6:	4629      	mov	r1, r5
 800e7a8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800e7ac:	4630      	mov	r0, r6
 800e7ae:	f8ad 7004 	strh.w	r7, [sp, #4]
 800e7b2:	f019 f83a 	bl	802782a <memset>
 800e7b6:	4630      	mov	r0, r6
 800e7b8:	f7ff ff98 	bl	800e6ec <_ZN8touchgfx8DrawableC1Ev>
 800e7bc:	a902      	add	r1, sp, #8
 800e7be:	4b1c      	ldr	r3, [pc, #112]	; (800e830 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800e7c0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800e7c2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800e7c6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e7ca:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800e7ce:	4630      	mov	r0, r6
 800e7d0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800e7d4:	f002 fdcb 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800e7d8:	4638      	mov	r0, r7
 800e7da:	f7ff ff87 	bl	800e6ec <_ZN8touchgfx8DrawableC1Ev>
 800e7de:	4b15      	ldr	r3, [pc, #84]	; (800e834 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800e7e0:	65a3      	str	r3, [r4, #88]	; 0x58
 800e7e2:	2364      	movs	r3, #100	; 0x64
 800e7e4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800e7e8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800e7ec:	4b12      	ldr	r3, [pc, #72]	; (800e838 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800e7ee:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800e7f2:	4629      	mov	r1, r5
 800e7f4:	4630      	mov	r0, r6
 800e7f6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800e7fa:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800e7fe:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800e802:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800e806:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800e80a:	f7f2 fc95 	bl	8001138 <_ZN8touchgfx8Drawable4setXEs>
 800e80e:	4629      	mov	r1, r5
 800e810:	4630      	mov	r0, r6
 800e812:	f7f2 fc93 	bl	800113c <_ZN8touchgfx8Drawable4setYEs>
 800e816:	4631      	mov	r1, r6
 800e818:	4620      	mov	r0, r4
 800e81a:	f000 f819 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e81e:	4620      	mov	r0, r4
 800e820:	4639      	mov	r1, r7
 800e822:	f000 f815 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e826:	4620      	mov	r0, r4
 800e828:	b003      	add	sp, #12
 800e82a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e82c:	0802b02c 	.word	0x0802b02c
 800e830:	0802b654 	.word	0x0802b654
 800e834:	0802b100 	.word	0x0802b100
 800e838:	08015a4b 	.word	0x08015a4b

0800e83c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800e83c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e83e:	2000      	movs	r0, #0
 800e840:	b12b      	cbz	r3, 800e84e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e842:	b920      	cbnz	r0, 800e84e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e844:	1a5a      	subs	r2, r3, r1
 800e846:	4250      	negs	r0, r2
 800e848:	4150      	adcs	r0, r2
 800e84a:	699b      	ldr	r3, [r3, #24]
 800e84c:	e7f8      	b.n	800e840 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800e84e:	4770      	bx	lr

0800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800e850:	2300      	movs	r3, #0
 800e852:	6148      	str	r0, [r1, #20]
 800e854:	618b      	str	r3, [r1, #24]
 800e856:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e858:	b913      	cbnz	r3, 800e860 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800e85a:	6281      	str	r1, [r0, #40]	; 0x28
 800e85c:	4770      	bx	lr
 800e85e:	4613      	mov	r3, r2
 800e860:	699a      	ldr	r2, [r3, #24]
 800e862:	2a00      	cmp	r2, #0
 800e864:	d1fb      	bne.n	800e85e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800e866:	6199      	str	r1, [r3, #24]
 800e868:	4770      	bx	lr

0800e86a <_ZN8touchgfx9Container9removeAllEv>:
 800e86a:	2200      	movs	r2, #0
 800e86c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e86e:	b123      	cbz	r3, 800e87a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800e870:	6999      	ldr	r1, [r3, #24]
 800e872:	6281      	str	r1, [r0, #40]	; 0x28
 800e874:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800e878:	e7f8      	b.n	800e86c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800e87a:	4770      	bx	lr

0800e87c <_ZN8touchgfx9Container6unlinkEv>:
 800e87c:	2300      	movs	r3, #0
 800e87e:	6283      	str	r3, [r0, #40]	; 0x28
 800e880:	4770      	bx	lr

0800e882 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800e882:	2200      	movs	r2, #0
 800e884:	8002      	strh	r2, [r0, #0]
 800e886:	8042      	strh	r2, [r0, #2]
 800e888:	8082      	strh	r2, [r0, #4]
 800e88a:	80c2      	strh	r2, [r0, #6]
 800e88c:	4770      	bx	lr

0800e88e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800e88e:	b570      	push	{r4, r5, r6, lr}
 800e890:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e892:	460d      	mov	r5, r1
 800e894:	4616      	mov	r6, r2
 800e896:	b13c      	cbz	r4, 800e8a8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800e898:	6823      	ldr	r3, [r4, #0]
 800e89a:	4620      	mov	r0, r4
 800e89c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800e89e:	4632      	mov	r2, r6
 800e8a0:	4629      	mov	r1, r5
 800e8a2:	4798      	blx	r3
 800e8a4:	69a4      	ldr	r4, [r4, #24]
 800e8a6:	e7f6      	b.n	800e896 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800e8a8:	bd70      	pop	{r4, r5, r6, pc}

0800e8aa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800e8aa:	b538      	push	{r3, r4, r5, lr}
 800e8ac:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e8ae:	460d      	mov	r5, r1
 800e8b0:	b134      	cbz	r4, 800e8c0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800e8b2:	682b      	ldr	r3, [r5, #0]
 800e8b4:	4621      	mov	r1, r4
 800e8b6:	689b      	ldr	r3, [r3, #8]
 800e8b8:	4628      	mov	r0, r5
 800e8ba:	4798      	blx	r3
 800e8bc:	69a4      	ldr	r4, [r4, #24]
 800e8be:	e7f7      	b.n	800e8b0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800e8c0:	bd38      	pop	{r3, r4, r5, pc}

0800e8c2 <_ZN8touchgfx9ContainerD1Ev>:
 800e8c2:	4770      	bx	lr

0800e8c4 <_ZN8touchgfx9ContainerD0Ev>:
 800e8c4:	b510      	push	{r4, lr}
 800e8c6:	212c      	movs	r1, #44	; 0x2c
 800e8c8:	4604      	mov	r4, r0
 800e8ca:	f017 ffb8 	bl	802683e <_ZdlPvj>
 800e8ce:	4620      	mov	r0, r4
 800e8d0:	bd10      	pop	{r4, pc}

0800e8d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800e8d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e8d4:	b19b      	cbz	r3, 800e8fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e8d6:	428b      	cmp	r3, r1
 800e8d8:	d109      	bne.n	800e8ee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800e8da:	699a      	ldr	r2, [r3, #24]
 800e8dc:	2100      	movs	r1, #0
 800e8de:	6159      	str	r1, [r3, #20]
 800e8e0:	6282      	str	r2, [r0, #40]	; 0x28
 800e8e2:	b902      	cbnz	r2, 800e8e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800e8e4:	4770      	bx	lr
 800e8e6:	6199      	str	r1, [r3, #24]
 800e8e8:	4770      	bx	lr
 800e8ea:	4613      	mov	r3, r2
 800e8ec:	b13a      	cbz	r2, 800e8fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e8ee:	699a      	ldr	r2, [r3, #24]
 800e8f0:	428a      	cmp	r2, r1
 800e8f2:	d1fa      	bne.n	800e8ea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800e8f4:	698a      	ldr	r2, [r1, #24]
 800e8f6:	619a      	str	r2, [r3, #24]
 800e8f8:	2300      	movs	r3, #0
 800e8fa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800e8fe:	4770      	bx	lr

0800e900 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800e900:	b410      	push	{r4}
 800e902:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e904:	4604      	mov	r4, r0
 800e906:	b92b      	cbnz	r3, 800e914 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800e908:	6803      	ldr	r3, [r0, #0]
 800e90a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e90e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800e910:	4611      	mov	r1, r2
 800e912:	4718      	bx	r3
 800e914:	b941      	cbnz	r1, 800e928 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800e916:	6193      	str	r3, [r2, #24]
 800e918:	6282      	str	r2, [r0, #40]	; 0x28
 800e91a:	6154      	str	r4, [r2, #20]
 800e91c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e920:	4770      	bx	lr
 800e922:	4603      	mov	r3, r0
 800e924:	2800      	cmp	r0, #0
 800e926:	d0f9      	beq.n	800e91c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800e928:	4299      	cmp	r1, r3
 800e92a:	6998      	ldr	r0, [r3, #24]
 800e92c:	d1f9      	bne.n	800e922 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800e92e:	6190      	str	r0, [r2, #24]
 800e930:	618a      	str	r2, [r1, #24]
 800e932:	e7f2      	b.n	800e91a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800e934 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800e934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e938:	461f      	mov	r7, r3
 800e93a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800e93e:	460d      	mov	r5, r1
 800e940:	4616      	mov	r6, r2
 800e942:	b103      	cbz	r3, 800e946 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800e944:	6038      	str	r0, [r7, #0]
 800e946:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e948:	b314      	cbz	r4, 800e990 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800e94a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800e94e:	b1eb      	cbz	r3, 800e98c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e950:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e954:	428d      	cmp	r5, r1
 800e956:	db19      	blt.n	800e98c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e958:	8923      	ldrh	r3, [r4, #8]
 800e95a:	b289      	uxth	r1, r1
 800e95c:	440b      	add	r3, r1
 800e95e:	b21b      	sxth	r3, r3
 800e960:	429d      	cmp	r5, r3
 800e962:	da13      	bge.n	800e98c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e964:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e968:	4296      	cmp	r6, r2
 800e96a:	db0f      	blt.n	800e98c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e96c:	8963      	ldrh	r3, [r4, #10]
 800e96e:	b292      	uxth	r2, r2
 800e970:	4413      	add	r3, r2
 800e972:	b21b      	sxth	r3, r3
 800e974:	429e      	cmp	r6, r3
 800e976:	da09      	bge.n	800e98c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e978:	6823      	ldr	r3, [r4, #0]
 800e97a:	1ab2      	subs	r2, r6, r2
 800e97c:	1a69      	subs	r1, r5, r1
 800e97e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800e982:	b212      	sxth	r2, r2
 800e984:	463b      	mov	r3, r7
 800e986:	b209      	sxth	r1, r1
 800e988:	4620      	mov	r0, r4
 800e98a:	47c0      	blx	r8
 800e98c:	69a4      	ldr	r4, [r4, #24]
 800e98e:	e7db      	b.n	800e948 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800e990:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e994 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800e994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e998:	4c6e      	ldr	r4, [pc, #440]	; (800eb54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800e99a:	b0a1      	sub	sp, #132	; 0x84
 800e99c:	6824      	ldr	r4, [r4, #0]
 800e99e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800e9a0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800e9a4:	9303      	str	r3, [sp, #12]
 800e9a6:	2400      	movs	r4, #0
 800e9a8:	802c      	strh	r4, [r5, #0]
 800e9aa:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800e9ac:	802c      	strh	r4, [r5, #0]
 800e9ae:	601c      	str	r4, [r3, #0]
 800e9b0:	4606      	mov	r6, r0
 800e9b2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800e9b6:	f7ff ffbd 	bl	800e934 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e9ba:	f1b9 0f03 	cmp.w	r9, #3
 800e9be:	f340 80c2 	ble.w	800eb46 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800e9c2:	4631      	mov	r1, r6
 800e9c4:	a80c      	add	r0, sp, #48	; 0x30
 800e9c6:	f006 fb5f 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e9ca:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800e9ce:	9306      	str	r3, [sp, #24]
 800e9d0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800e9d4:	9307      	str	r3, [sp, #28]
 800e9d6:	9b03      	ldr	r3, [sp, #12]
 800e9d8:	f8d3 a000 	ldr.w	sl, [r3]
 800e9dc:	f1ba 0f00 	cmp.w	sl, #0
 800e9e0:	f000 80b4 	beq.w	800eb4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800e9e4:	4651      	mov	r1, sl
 800e9e6:	a810      	add	r0, sp, #64	; 0x40
 800e9e8:	f006 fb4e 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e9ec:	9b01      	ldr	r3, [sp, #4]
 800e9ee:	9a06      	ldr	r2, [sp, #24]
 800e9f0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800e9f4:	189d      	adds	r5, r3, r2
 800e9f6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800e9fa:	9a07      	ldr	r2, [sp, #28]
 800e9fc:	2002      	movs	r0, #2
 800e9fe:	fb91 f1f0 	sdiv	r1, r1, r0
 800ea02:	4419      	add	r1, r3
 800ea04:	1a6d      	subs	r5, r5, r1
 800ea06:	9b02      	ldr	r3, [sp, #8]
 800ea08:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ea0c:	4413      	add	r3, r2
 800ea0e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ea12:	fb92 f2f0 	sdiv	r2, r2, r0
 800ea16:	440a      	add	r2, r1
 800ea18:	1a9b      	subs	r3, r3, r2
 800ea1a:	435b      	muls	r3, r3
 800ea1c:	fb05 3505 	mla	r5, r5, r5, r3
 800ea20:	4f4d      	ldr	r7, [pc, #308]	; (800eb58 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ea22:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ea24:	ac10      	add	r4, sp, #64	; 0x40
 800ea26:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ea28:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ea2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ea2c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ea2e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ea30:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ea34:	f1b9 0f0c 	cmp.w	r9, #12
 800ea38:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ea3c:	f04f 0303 	mov.w	r3, #3
 800ea40:	bfc8      	it	gt
 800ea42:	4698      	movgt	r8, r3
 800ea44:	f8cd 9000 	str.w	r9, [sp]
 800ea48:	f04f 0400 	mov.w	r4, #0
 800ea4c:	bfdc      	itt	le
 800ea4e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ea52:	fb92 f8f3 	sdivle	r8, r2, r3
 800ea56:	1c63      	adds	r3, r4, #1
 800ea58:	aa10      	add	r2, sp, #64	; 0x40
 800ea5a:	f004 0401 	and.w	r4, r4, #1
 800ea5e:	9308      	str	r3, [sp, #32]
 800ea60:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ea64:	9b00      	ldr	r3, [sp, #0]
 800ea66:	fb93 f3f8 	sdiv	r3, r3, r8
 800ea6a:	b29b      	uxth	r3, r3
 800ea6c:	3404      	adds	r4, #4
 800ea6e:	f04f 0b00 	mov.w	fp, #0
 800ea72:	9304      	str	r3, [sp, #16]
 800ea74:	9a04      	ldr	r2, [sp, #16]
 800ea76:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ea7a:	fb13 f302 	smulbb	r3, r3, r2
 800ea7e:	9a01      	ldr	r2, [sp, #4]
 800ea80:	b29b      	uxth	r3, r3
 800ea82:	1899      	adds	r1, r3, r2
 800ea84:	9305      	str	r3, [sp, #20]
 800ea86:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ea8a:	b209      	sxth	r1, r1
 800ea8c:	4299      	cmp	r1, r3
 800ea8e:	db4d      	blt.n	800eb2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ea90:	8932      	ldrh	r2, [r6, #8]
 800ea92:	4413      	add	r3, r2
 800ea94:	b21b      	sxth	r3, r3
 800ea96:	4299      	cmp	r1, r3
 800ea98:	da48      	bge.n	800eb2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ea9a:	9b04      	ldr	r3, [sp, #16]
 800ea9c:	6827      	ldr	r7, [r4, #0]
 800ea9e:	fb17 f703 	smulbb	r7, r7, r3
 800eaa2:	9b02      	ldr	r3, [sp, #8]
 800eaa4:	b2bf      	uxth	r7, r7
 800eaa6:	18fa      	adds	r2, r7, r3
 800eaa8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800eaac:	b212      	sxth	r2, r2
 800eaae:	429a      	cmp	r2, r3
 800eab0:	db3c      	blt.n	800eb2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eab2:	8970      	ldrh	r0, [r6, #10]
 800eab4:	4403      	add	r3, r0
 800eab6:	b21b      	sxth	r3, r3
 800eab8:	429a      	cmp	r2, r3
 800eaba:	da37      	bge.n	800eb2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eabc:	2300      	movs	r3, #0
 800eabe:	930b      	str	r3, [sp, #44]	; 0x2c
 800eac0:	4630      	mov	r0, r6
 800eac2:	ab0b      	add	r3, sp, #44	; 0x2c
 800eac4:	f7ff ff36 	bl	800e934 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800eac8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800eaca:	b37a      	cbz	r2, 800eb2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eacc:	4552      	cmp	r2, sl
 800eace:	d02d      	beq.n	800eb2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ead0:	4611      	mov	r1, r2
 800ead2:	a80e      	add	r0, sp, #56	; 0x38
 800ead4:	9209      	str	r2, [sp, #36]	; 0x24
 800ead6:	f006 fad7 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eada:	9a06      	ldr	r2, [sp, #24]
 800eadc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800eae0:	9b01      	ldr	r3, [sp, #4]
 800eae2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800eae6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800eaea:	4413      	add	r3, r2
 800eaec:	f04f 0e02 	mov.w	lr, #2
 800eaf0:	fb91 f1fe 	sdiv	r1, r1, lr
 800eaf4:	4401      	add	r1, r0
 800eaf6:	1a58      	subs	r0, r3, r1
 800eaf8:	9a07      	ldr	r2, [sp, #28]
 800eafa:	9b02      	ldr	r3, [sp, #8]
 800eafc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800eb00:	fb9c fcfe 	sdiv	ip, ip, lr
 800eb04:	4413      	add	r3, r2
 800eb06:	448c      	add	ip, r1
 800eb08:	eba3 030c 	sub.w	r3, r3, ip
 800eb0c:	435b      	muls	r3, r3
 800eb0e:	fb00 3300 	mla	r3, r0, r0, r3
 800eb12:	42ab      	cmp	r3, r5
 800eb14:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800eb16:	d208      	bcs.n	800eb2a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800eb18:	9803      	ldr	r0, [sp, #12]
 800eb1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800eb1c:	6001      	str	r1, [r0, #0]
 800eb1e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800eb20:	9805      	ldr	r0, [sp, #20]
 800eb22:	8008      	strh	r0, [r1, #0]
 800eb24:	992b      	ldr	r1, [sp, #172]	; 0xac
 800eb26:	461d      	mov	r5, r3
 800eb28:	800f      	strh	r7, [r1, #0]
 800eb2a:	4692      	mov	sl, r2
 800eb2c:	f10b 0b01 	add.w	fp, fp, #1
 800eb30:	f1bb 0f04 	cmp.w	fp, #4
 800eb34:	f104 0408 	add.w	r4, r4, #8
 800eb38:	d19c      	bne.n	800ea74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800eb3a:	9b00      	ldr	r3, [sp, #0]
 800eb3c:	9c08      	ldr	r4, [sp, #32]
 800eb3e:	444b      	add	r3, r9
 800eb40:	4544      	cmp	r4, r8
 800eb42:	9300      	str	r3, [sp, #0]
 800eb44:	d187      	bne.n	800ea56 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800eb46:	b021      	add	sp, #132	; 0x84
 800eb48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eb4c:	f04f 35ff 	mov.w	r5, #4294967295
 800eb50:	e766      	b.n	800ea20 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800eb52:	bf00      	nop
 800eb54:	200137bc 	.word	0x200137bc
 800eb58:	08028538 	.word	0x08028538

0800eb5c <_ZN8touchgfx4RectaNERKS0_>:
 800eb5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eb60:	f9b1 7000 	ldrsh.w	r7, [r1]
 800eb64:	888c      	ldrh	r4, [r1, #4]
 800eb66:	f9b0 9000 	ldrsh.w	r9, [r0]
 800eb6a:	443c      	add	r4, r7
 800eb6c:	b2a4      	uxth	r4, r4
 800eb6e:	fa0f f884 	sxth.w	r8, r4
 800eb72:	45c1      	cmp	r9, r8
 800eb74:	da2f      	bge.n	800ebd6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800eb76:	8882      	ldrh	r2, [r0, #4]
 800eb78:	444a      	add	r2, r9
 800eb7a:	b292      	uxth	r2, r2
 800eb7c:	fa0f fe82 	sxth.w	lr, r2
 800eb80:	4577      	cmp	r7, lr
 800eb82:	da28      	bge.n	800ebd6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800eb84:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800eb88:	88cb      	ldrh	r3, [r1, #6]
 800eb8a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800eb8e:	442b      	add	r3, r5
 800eb90:	b21b      	sxth	r3, r3
 800eb92:	429e      	cmp	r6, r3
 800eb94:	da1f      	bge.n	800ebd6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800eb96:	88c3      	ldrh	r3, [r0, #6]
 800eb98:	4433      	add	r3, r6
 800eb9a:	b29b      	uxth	r3, r3
 800eb9c:	fa0f fc83 	sxth.w	ip, r3
 800eba0:	4565      	cmp	r5, ip
 800eba2:	da18      	bge.n	800ebd6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800eba4:	454f      	cmp	r7, r9
 800eba6:	bfb8      	it	lt
 800eba8:	464f      	movlt	r7, r9
 800ebaa:	42b5      	cmp	r5, r6
 800ebac:	bfb8      	it	lt
 800ebae:	4635      	movlt	r5, r6
 800ebb0:	45f0      	cmp	r8, lr
 800ebb2:	bfd8      	it	le
 800ebb4:	4622      	movle	r2, r4
 800ebb6:	1bd2      	subs	r2, r2, r7
 800ebb8:	8082      	strh	r2, [r0, #4]
 800ebba:	884a      	ldrh	r2, [r1, #2]
 800ebbc:	88c9      	ldrh	r1, [r1, #6]
 800ebbe:	8007      	strh	r7, [r0, #0]
 800ebc0:	440a      	add	r2, r1
 800ebc2:	b292      	uxth	r2, r2
 800ebc4:	b211      	sxth	r1, r2
 800ebc6:	458c      	cmp	ip, r1
 800ebc8:	bfa8      	it	ge
 800ebca:	4613      	movge	r3, r2
 800ebcc:	1b5b      	subs	r3, r3, r5
 800ebce:	80c3      	strh	r3, [r0, #6]
 800ebd0:	8045      	strh	r5, [r0, #2]
 800ebd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ebd6:	2300      	movs	r3, #0
 800ebd8:	8003      	strh	r3, [r0, #0]
 800ebda:	8043      	strh	r3, [r0, #2]
 800ebdc:	8083      	strh	r3, [r0, #4]
 800ebde:	80c3      	strh	r3, [r0, #6]
 800ebe0:	e7f7      	b.n	800ebd2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ebe2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ebe6:	2b00      	cmp	r3, #0
 800ebe8:	dd06      	ble.n	800ebf8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ebea:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ebee:	2800      	cmp	r0, #0
 800ebf0:	bfcc      	ite	gt
 800ebf2:	2000      	movgt	r0, #0
 800ebf4:	2001      	movle	r0, #1
 800ebf6:	4770      	bx	lr
 800ebf8:	2001      	movs	r0, #1
 800ebfa:	4770      	bx	lr

0800ebfc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ebfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec00:	2300      	movs	r3, #0
 800ec02:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ec04:	8003      	strh	r3, [r0, #0]
 800ec06:	4604      	mov	r4, r0
 800ec08:	8043      	strh	r3, [r0, #2]
 800ec0a:	8083      	strh	r3, [r0, #4]
 800ec0c:	80c3      	strh	r3, [r0, #6]
 800ec0e:	2d00      	cmp	r5, #0
 800ec10:	d040      	beq.n	800ec94 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ec12:	1d28      	adds	r0, r5, #4
 800ec14:	f7ff ffe5 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec18:	b988      	cbnz	r0, 800ec3e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ec1a:	4620      	mov	r0, r4
 800ec1c:	f7ff ffe1 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec20:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ec24:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ec28:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ec2c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ec30:	b138      	cbz	r0, 800ec42 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ec32:	8022      	strh	r2, [r4, #0]
 800ec34:	8063      	strh	r3, [r4, #2]
 800ec36:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ec3a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ec3e:	69ad      	ldr	r5, [r5, #24]
 800ec40:	e7e5      	b.n	800ec0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ec42:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ec46:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ec4a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ec4e:	4290      	cmp	r0, r2
 800ec50:	4607      	mov	r7, r0
 800ec52:	bfa8      	it	ge
 800ec54:	4617      	movge	r7, r2
 800ec56:	4472      	add	r2, lr
 800ec58:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ec5c:	8027      	strh	r7, [r4, #0]
 800ec5e:	4299      	cmp	r1, r3
 800ec60:	460e      	mov	r6, r1
 800ec62:	4440      	add	r0, r8
 800ec64:	bfa8      	it	ge
 800ec66:	461e      	movge	r6, r3
 800ec68:	4471      	add	r1, lr
 800ec6a:	4463      	add	r3, ip
 800ec6c:	b200      	sxth	r0, r0
 800ec6e:	b212      	sxth	r2, r2
 800ec70:	b209      	sxth	r1, r1
 800ec72:	b21b      	sxth	r3, r3
 800ec74:	4290      	cmp	r0, r2
 800ec76:	bfac      	ite	ge
 800ec78:	ebc7 0200 	rsbge	r2, r7, r0
 800ec7c:	ebc7 0202 	rsblt	r2, r7, r2
 800ec80:	4299      	cmp	r1, r3
 800ec82:	bfac      	ite	ge
 800ec84:	ebc6 0301 	rsbge	r3, r6, r1
 800ec88:	ebc6 0303 	rsblt	r3, r6, r3
 800ec8c:	8066      	strh	r6, [r4, #2]
 800ec8e:	80a2      	strh	r2, [r4, #4]
 800ec90:	80e3      	strh	r3, [r4, #6]
 800ec92:	e7d4      	b.n	800ec3e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ec94:	4620      	mov	r0, r4
 800ec96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ec9a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ec9a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ec9e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800eca2:	b383      	cbz	r3, 800ed06 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800eca4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800eca6:	b374      	cbz	r4, 800ed06 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800eca8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ecac:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ecb0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ecb4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ecb8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ecbc:	b303      	cbz	r3, 800ed00 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ecbe:	4668      	mov	r0, sp
 800ecc0:	1d21      	adds	r1, r4, #4
 800ecc2:	f8ad 5000 	strh.w	r5, [sp]
 800ecc6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ecca:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ecce:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ecd2:	f7ff ff43 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 800ecd6:	4668      	mov	r0, sp
 800ecd8:	f7ff ff83 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ecdc:	b980      	cbnz	r0, 800ed00 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ecde:	f8bd 3000 	ldrh.w	r3, [sp]
 800ece2:	88a2      	ldrh	r2, [r4, #4]
 800ece4:	1a9b      	subs	r3, r3, r2
 800ece6:	f8ad 3000 	strh.w	r3, [sp]
 800ecea:	88e2      	ldrh	r2, [r4, #6]
 800ecec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ecf0:	1a9b      	subs	r3, r3, r2
 800ecf2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ecf6:	6823      	ldr	r3, [r4, #0]
 800ecf8:	4669      	mov	r1, sp
 800ecfa:	689b      	ldr	r3, [r3, #8]
 800ecfc:	4620      	mov	r0, r4
 800ecfe:	4798      	blx	r3
 800ed00:	69a4      	ldr	r4, [r4, #24]
 800ed02:	2c00      	cmp	r4, #0
 800ed04:	d1d8      	bne.n	800ecb8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ed06:	b002      	add	sp, #8
 800ed08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ed0c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ed0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ed0e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ed12:	460d      	mov	r5, r1
 800ed14:	4616      	mov	r6, r2
 800ed16:	b323      	cbz	r3, 800ed62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ed18:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ed1a:	b314      	cbz	r4, 800ed62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ed1c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ed20:	b1eb      	cbz	r3, 800ed5e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ed22:	6828      	ldr	r0, [r5, #0]
 800ed24:	6869      	ldr	r1, [r5, #4]
 800ed26:	466b      	mov	r3, sp
 800ed28:	c303      	stmia	r3!, {r0, r1}
 800ed2a:	4668      	mov	r0, sp
 800ed2c:	1d21      	adds	r1, r4, #4
 800ed2e:	f7ff ff15 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 800ed32:	4668      	mov	r0, sp
 800ed34:	f7ff ff55 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ed38:	b988      	cbnz	r0, 800ed5e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ed3a:	f8bd 3000 	ldrh.w	r3, [sp]
 800ed3e:	88a2      	ldrh	r2, [r4, #4]
 800ed40:	1a9b      	subs	r3, r3, r2
 800ed42:	f8ad 3000 	strh.w	r3, [sp]
 800ed46:	88e2      	ldrh	r2, [r4, #6]
 800ed48:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ed4c:	1a9b      	subs	r3, r3, r2
 800ed4e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ed52:	6823      	ldr	r3, [r4, #0]
 800ed54:	4632      	mov	r2, r6
 800ed56:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ed58:	4669      	mov	r1, sp
 800ed5a:	4620      	mov	r0, r4
 800ed5c:	4798      	blx	r3
 800ed5e:	69a4      	ldr	r4, [r4, #24]
 800ed60:	e7db      	b.n	800ed1a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ed62:	b002      	add	sp, #8
 800ed64:	bd70      	pop	{r4, r5, r6, pc}

0800ed66 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ed66:	b513      	push	{r0, r1, r4, lr}
 800ed68:	6803      	ldr	r3, [r0, #0]
 800ed6a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800ed6e:	2300      	movs	r3, #0
 800ed70:	e9cd 3300 	strd	r3, r3, [sp]
 800ed74:	466b      	mov	r3, sp
 800ed76:	47a0      	blx	r4
 800ed78:	b002      	add	sp, #8
 800ed7a:	bd10      	pop	{r4, pc}

0800ed7c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ed7c:	2301      	movs	r3, #1
 800ed7e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ed82:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800ed86:	4770      	bx	lr

0800ed88 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ed88:	2301      	movs	r3, #1
 800ed8a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ed8e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800ed92:	4770      	bx	lr

0800ed94 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ed94:	6843      	ldr	r3, [r0, #4]
 800ed96:	2201      	movs	r2, #1
 800ed98:	725a      	strb	r2, [r3, #9]
 800ed9a:	6840      	ldr	r0, [r0, #4]
 800ed9c:	6803      	ldr	r3, [r0, #0]
 800ed9e:	691b      	ldr	r3, [r3, #16]
 800eda0:	4718      	bx	r3

0800eda2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800eda2:	6840      	ldr	r0, [r0, #4]
 800eda4:	6803      	ldr	r3, [r0, #0]
 800eda6:	689b      	ldr	r3, [r3, #8]
 800eda8:	4718      	bx	r3

0800edaa <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800edaa:	b530      	push	{r4, r5, lr}
 800edac:	b08b      	sub	sp, #44	; 0x2c
 800edae:	6804      	ldr	r4, [r0, #0]
 800edb0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800edb4:	9509      	str	r5, [sp, #36]	; 0x24
 800edb6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800edba:	9508      	str	r5, [sp, #32]
 800edbc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800edc0:	9507      	str	r5, [sp, #28]
 800edc2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800edc6:	9506      	str	r5, [sp, #24]
 800edc8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800edcc:	9505      	str	r5, [sp, #20]
 800edce:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800edd2:	9504      	str	r5, [sp, #16]
 800edd4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800edd8:	9503      	str	r5, [sp, #12]
 800edda:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800edde:	9502      	str	r5, [sp, #8]
 800ede0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ede4:	e9cd 3500 	strd	r3, r5, [sp]
 800ede8:	4613      	mov	r3, r2
 800edea:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800edec:	2200      	movs	r2, #0
 800edee:	47a0      	blx	r4
 800edf0:	b00b      	add	sp, #44	; 0x2c
 800edf2:	bd30      	pop	{r4, r5, pc}

0800edf4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800edf4:	4b04      	ldr	r3, [pc, #16]	; (800ee08 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800edf6:	781b      	ldrb	r3, [r3, #0]
 800edf8:	b123      	cbz	r3, 800ee04 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800edfa:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800edfe:	f080 0001 	eor.w	r0, r0, #1
 800ee02:	4770      	bx	lr
 800ee04:	2001      	movs	r0, #1
 800ee06:	4770      	bx	lr
 800ee08:	200137ba 	.word	0x200137ba

0800ee0c <_ZN8touchgfx3HAL8endFrameEv>:
 800ee0c:	b510      	push	{r4, lr}
 800ee0e:	4604      	mov	r4, r0
 800ee10:	6840      	ldr	r0, [r0, #4]
 800ee12:	6803      	ldr	r3, [r0, #0]
 800ee14:	689b      	ldr	r3, [r3, #8]
 800ee16:	4798      	blx	r3
 800ee18:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800ee1c:	b113      	cbz	r3, 800ee24 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ee1e:	2301      	movs	r3, #1
 800ee20:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800ee24:	bd10      	pop	{r4, pc}

0800ee26 <_ZN8touchgfx3HAL10initializeEv>:
 800ee26:	b510      	push	{r4, lr}
 800ee28:	4604      	mov	r4, r0
 800ee2a:	f7f1 fddf 	bl	80009ec <_ZN8touchgfx10OSWrappers10initializeEv>
 800ee2e:	f7f1 fceb 	bl	8000808 <_ZN8touchgfx4GPIO4initEv>
 800ee32:	6860      	ldr	r0, [r4, #4]
 800ee34:	6803      	ldr	r3, [r0, #0]
 800ee36:	68db      	ldr	r3, [r3, #12]
 800ee38:	4798      	blx	r3
 800ee3a:	68e0      	ldr	r0, [r4, #12]
 800ee3c:	6803      	ldr	r3, [r0, #0]
 800ee3e:	689b      	ldr	r3, [r3, #8]
 800ee40:	4798      	blx	r3
 800ee42:	6823      	ldr	r3, [r4, #0]
 800ee44:	4620      	mov	r0, r4
 800ee46:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ee48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ee4c:	4718      	bx	r3
	...

0800ee50 <_ZN8touchgfx3HAL4tickEv>:
 800ee50:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ee52:	6803      	ldr	r3, [r0, #0]
 800ee54:	4d5b      	ldr	r5, [pc, #364]	; (800efc4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800ee56:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ee5a:	4604      	mov	r4, r0
 800ee5c:	4798      	blx	r3
 800ee5e:	2800      	cmp	r0, #0
 800ee60:	f000 8095 	beq.w	800ef8e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ee64:	2001      	movs	r0, #1
 800ee66:	f7f1 fc81 	bl	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ee6a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800ee6e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ee72:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800ee76:	2600      	movs	r6, #0
 800ee78:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800ee7c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ee80:	b133      	cbz	r3, 800ee90 <_ZN8touchgfx3HAL4tickEv+0x40>
 800ee82:	6823      	ldr	r3, [r4, #0]
 800ee84:	4620      	mov	r0, r4
 800ee86:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ee8a:	4798      	blx	r3
 800ee8c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800ee90:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ee94:	6862      	ldr	r2, [r4, #4]
 800ee96:	f083 0301 	eor.w	r3, r3, #1
 800ee9a:	7253      	strb	r3, [r2, #9]
 800ee9c:	2601      	movs	r6, #1
 800ee9e:	702e      	strb	r6, [r5, #0]
 800eea0:	f004 ff6e 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
 800eea4:	6803      	ldr	r3, [r0, #0]
 800eea6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eea8:	4798      	blx	r3
 800eeaa:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800eeae:	b90b      	cbnz	r3, 800eeb4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800eeb0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800eeb4:	f004 ff64 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
 800eeb8:	6803      	ldr	r3, [r0, #0]
 800eeba:	695b      	ldr	r3, [r3, #20]
 800eebc:	4798      	blx	r3
 800eebe:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800eec0:	6803      	ldr	r3, [r0, #0]
 800eec2:	691b      	ldr	r3, [r3, #16]
 800eec4:	4798      	blx	r3
 800eec6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800eeca:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800eece:	3b01      	subs	r3, #1
 800eed0:	b2db      	uxtb	r3, r3
 800eed2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800eed6:	b10a      	cbz	r2, 800eedc <_ZN8touchgfx3HAL4tickEv+0x8c>
 800eed8:	2b00      	cmp	r3, #0
 800eeda:	d1eb      	bne.n	800eeb4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800eedc:	4a3a      	ldr	r2, [pc, #232]	; (800efc8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800eede:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800eee2:	7813      	ldrb	r3, [r2, #0]
 800eee4:	3301      	adds	r3, #1
 800eee6:	b25b      	sxtb	r3, r3
 800eee8:	4299      	cmp	r1, r3
 800eeea:	7013      	strb	r3, [r2, #0]
 800eeec:	dc10      	bgt.n	800ef10 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800eeee:	68e0      	ldr	r0, [r4, #12]
 800eef0:	2300      	movs	r3, #0
 800eef2:	7013      	strb	r3, [r2, #0]
 800eef4:	6803      	ldr	r3, [r0, #0]
 800eef6:	aa03      	add	r2, sp, #12
 800eef8:	68db      	ldr	r3, [r3, #12]
 800eefa:	a902      	add	r1, sp, #8
 800eefc:	4798      	blx	r3
 800eefe:	6823      	ldr	r3, [r4, #0]
 800ef00:	2800      	cmp	r0, #0
 800ef02:	d050      	beq.n	800efa6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800ef04:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ef08:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ef0c:	4620      	mov	r0, r4
 800ef0e:	4798      	blx	r3
 800ef10:	6960      	ldr	r0, [r4, #20]
 800ef12:	2300      	movs	r3, #0
 800ef14:	f88d 3007 	strb.w	r3, [sp, #7]
 800ef18:	b158      	cbz	r0, 800ef32 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ef1a:	6803      	ldr	r3, [r0, #0]
 800ef1c:	f10d 0107 	add.w	r1, sp, #7
 800ef20:	68db      	ldr	r3, [r3, #12]
 800ef22:	4798      	blx	r3
 800ef24:	b128      	cbz	r0, 800ef32 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ef26:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800ef28:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800ef2c:	6803      	ldr	r3, [r0, #0]
 800ef2e:	68db      	ldr	r3, [r3, #12]
 800ef30:	4798      	blx	r3
 800ef32:	f104 001c 	add.w	r0, r4, #28
 800ef36:	f015 fcc5 	bl	80248c4 <_ZN8touchgfx8Gestures4tickEv>
 800ef3a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800ef3e:	b30b      	cbz	r3, 800ef84 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ef40:	6920      	ldr	r0, [r4, #16]
 800ef42:	6803      	ldr	r3, [r0, #0]
 800ef44:	691b      	ldr	r3, [r3, #16]
 800ef46:	4798      	blx	r3
 800ef48:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800ef4a:	4606      	mov	r6, r0
 800ef4c:	b903      	cbnz	r3, 800ef50 <_ZN8touchgfx3HAL4tickEv+0x100>
 800ef4e:	6760      	str	r0, [r4, #116]	; 0x74
 800ef50:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800ef52:	4a1e      	ldr	r2, [pc, #120]	; (800efcc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800ef54:	1af3      	subs	r3, r6, r3
 800ef56:	4293      	cmp	r3, r2
 800ef58:	d914      	bls.n	800ef84 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ef5a:	6920      	ldr	r0, [r4, #16]
 800ef5c:	6803      	ldr	r3, [r0, #0]
 800ef5e:	699b      	ldr	r3, [r3, #24]
 800ef60:	4798      	blx	r3
 800ef62:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800ef64:	2264      	movs	r2, #100	; 0x64
 800ef66:	1af3      	subs	r3, r6, r3
 800ef68:	fbb3 f3f2 	udiv	r3, r3, r2
 800ef6c:	fbb0 f0f3 	udiv	r0, r0, r3
 800ef70:	2800      	cmp	r0, #0
 800ef72:	dc1d      	bgt.n	800efb0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800ef74:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800ef78:	6920      	ldr	r0, [r4, #16]
 800ef7a:	6803      	ldr	r3, [r0, #0]
 800ef7c:	2100      	movs	r1, #0
 800ef7e:	69db      	ldr	r3, [r3, #28]
 800ef80:	4798      	blx	r3
 800ef82:	6766      	str	r6, [r4, #116]	; 0x74
 800ef84:	f004 fefc 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
 800ef88:	6803      	ldr	r3, [r0, #0]
 800ef8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ef8c:	4798      	blx	r3
 800ef8e:	6823      	ldr	r3, [r4, #0]
 800ef90:	4620      	mov	r0, r4
 800ef92:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ef96:	4798      	blx	r3
 800ef98:	2001      	movs	r0, #1
 800ef9a:	f7f1 fbff 	bl	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ef9e:	2300      	movs	r3, #0
 800efa0:	702b      	strb	r3, [r5, #0]
 800efa2:	b004      	add	sp, #16
 800efa4:	bd70      	pop	{r4, r5, r6, pc}
 800efa6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800efaa:	4620      	mov	r0, r4
 800efac:	4798      	blx	r3
 800efae:	e7af      	b.n	800ef10 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800efb0:	2863      	cmp	r0, #99	; 0x63
 800efb2:	bfcb      	itete	gt
 800efb4:	2300      	movgt	r3, #0
 800efb6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800efba:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800efbe:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800efc2:	e7d9      	b.n	800ef78 <_ZN8touchgfx3HAL4tickEv+0x128>
 800efc4:	200137c0 	.word	0x200137c0
 800efc8:	200137c1 	.word	0x200137c1
 800efcc:	05f5e100 	.word	0x05f5e100

0800efd0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800efd0:	b510      	push	{r4, lr}
 800efd2:	4604      	mov	r4, r0
 800efd4:	f7f1 fd3a 	bl	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800efd8:	6863      	ldr	r3, [r4, #4]
 800efda:	2200      	movs	r2, #0
 800efdc:	729a      	strb	r2, [r3, #10]
 800efde:	bd10      	pop	{r4, pc}

0800efe0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800efe0:	65c1      	str	r1, [r0, #92]	; 0x5c
 800efe2:	301c      	adds	r0, #28
 800efe4:	f015 bc6c 	b.w	80248c0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800efe8 <_ZN8touchgfx3HAL5touchEll>:
 800efe8:	b530      	push	{r4, r5, lr}
 800efea:	b087      	sub	sp, #28
 800efec:	4604      	mov	r4, r0
 800efee:	a804      	add	r0, sp, #16
 800eff0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800eff4:	f004 fc90 	bl	8013918 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800eff8:	9b04      	ldr	r3, [sp, #16]
 800effa:	f8ad 300c 	strh.w	r3, [sp, #12]
 800effe:	a906      	add	r1, sp, #24
 800f000:	9b05      	ldr	r3, [sp, #20]
 800f002:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800f006:	a803      	add	r0, sp, #12
 800f008:	f004 fcd8 	bl	80139bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800f00c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800f010:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800f014:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800f018:	f104 001c 	add.w	r0, r4, #28
 800f01c:	b189      	cbz	r1, 800f042 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800f01e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800f022:	9300      	str	r3, [sp, #0]
 800f024:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800f028:	4613      	mov	r3, r2
 800f02a:	462a      	mov	r2, r5
 800f02c:	f015 fc58 	bl	80248e0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800f030:	b128      	cbz	r0, 800f03e <_ZN8touchgfx3HAL5touchEll+0x56>
 800f032:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800f036:	6623      	str	r3, [r4, #96]	; 0x60
 800f038:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f03c:	6663      	str	r3, [r4, #100]	; 0x64
 800f03e:	b007      	add	sp, #28
 800f040:	bd30      	pop	{r4, r5, pc}
 800f042:	f015 fc8d 	bl	8024960 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f046:	2301      	movs	r3, #1
 800f048:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800f04c:	e7f1      	b.n	800f032 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800f04e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800f04e:	b510      	push	{r4, lr}
 800f050:	2b00      	cmp	r3, #0
 800f052:	d046      	beq.n	800f0e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f054:	ea81 0002 	eor.w	r0, r1, r2
 800f058:	07c4      	lsls	r4, r0, #31
 800f05a:	d508      	bpl.n	800f06e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800f05c:	440b      	add	r3, r1
 800f05e:	3a01      	subs	r2, #1
 800f060:	428b      	cmp	r3, r1
 800f062:	d93e      	bls.n	800f0e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f064:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f068:	f801 0b01 	strb.w	r0, [r1], #1
 800f06c:	e7f8      	b.n	800f060 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800f06e:	07d0      	lsls	r0, r2, #31
 800f070:	bf42      	ittt	mi
 800f072:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800f076:	f801 0b01 	strbmi.w	r0, [r1], #1
 800f07a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800f07e:	2b01      	cmp	r3, #1
 800f080:	d911      	bls.n	800f0a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f082:	ea81 0402 	eor.w	r4, r1, r2
 800f086:	07a4      	lsls	r4, r4, #30
 800f088:	4610      	mov	r0, r2
 800f08a:	d022      	beq.n	800f0d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800f08c:	f023 0401 	bic.w	r4, r3, #1
 800f090:	440c      	add	r4, r1
 800f092:	428c      	cmp	r4, r1
 800f094:	4602      	mov	r2, r0
 800f096:	d904      	bls.n	800f0a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800f098:	8812      	ldrh	r2, [r2, #0]
 800f09a:	f821 2b02 	strh.w	r2, [r1], #2
 800f09e:	3002      	adds	r0, #2
 800f0a0:	e7f7      	b.n	800f092 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800f0a2:	f003 0301 	and.w	r3, r3, #1
 800f0a6:	f023 0003 	bic.w	r0, r3, #3
 800f0aa:	4408      	add	r0, r1
 800f0ac:	4288      	cmp	r0, r1
 800f0ae:	4614      	mov	r4, r2
 800f0b0:	d904      	bls.n	800f0bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800f0b2:	6824      	ldr	r4, [r4, #0]
 800f0b4:	f841 4b04 	str.w	r4, [r1], #4
 800f0b8:	3204      	adds	r2, #4
 800f0ba:	e7f7      	b.n	800f0ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800f0bc:	f003 0303 	and.w	r3, r3, #3
 800f0c0:	440b      	add	r3, r1
 800f0c2:	3a01      	subs	r2, #1
 800f0c4:	428b      	cmp	r3, r1
 800f0c6:	d90c      	bls.n	800f0e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f0c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f0cc:	f801 0b01 	strb.w	r0, [r1], #1
 800f0d0:	e7f8      	b.n	800f0c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800f0d2:	0790      	lsls	r0, r2, #30
 800f0d4:	d0e7      	beq.n	800f0a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f0d6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800f0da:	f821 0b02 	strh.w	r0, [r1], #2
 800f0de:	3b02      	subs	r3, #2
 800f0e0:	e7e1      	b.n	800f0a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f0e2:	2001      	movs	r0, #1
 800f0e4:	bd10      	pop	{r4, pc}

0800f0e6 <_ZN8touchgfx3HAL7noTouchEv>:
 800f0e6:	b510      	push	{r4, lr}
 800f0e8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800f0ec:	4604      	mov	r4, r0
 800f0ee:	b153      	cbz	r3, 800f106 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800f0f0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800f0f4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800f0f8:	2101      	movs	r1, #1
 800f0fa:	301c      	adds	r0, #28
 800f0fc:	f015 fc30 	bl	8024960 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f100:	2300      	movs	r3, #0
 800f102:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800f106:	bd10      	pop	{r4, pc}

0800f108 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800f108:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f10c:	b085      	sub	sp, #20
 800f10e:	ad04      	add	r5, sp, #16
 800f110:	4604      	mov	r4, r0
 800f112:	2000      	movs	r0, #0
 800f114:	f845 0d04 	str.w	r0, [r5, #-4]!
 800f118:	69a0      	ldr	r0, [r4, #24]
 800f11a:	6806      	ldr	r6, [r0, #0]
 800f11c:	9501      	str	r5, [sp, #4]
 800f11e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800f122:	9500      	str	r5, [sp, #0]
 800f124:	6835      	ldr	r5, [r6, #0]
 800f126:	4699      	mov	r9, r3
 800f128:	460f      	mov	r7, r1
 800f12a:	4690      	mov	r8, r2
 800f12c:	47a8      	blx	r5
 800f12e:	4d10      	ldr	r5, [pc, #64]	; (800f170 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800f130:	4606      	mov	r6, r0
 800f132:	f8a5 9000 	strh.w	r9, [r5]
 800f136:	f7f3 fec9 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f13a:	6803      	ldr	r3, [r0, #0]
 800f13c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f13e:	4798      	blx	r3
 800f140:	b128      	cbz	r0, 800f14e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800f142:	2801      	cmp	r0, #1
 800f144:	d00b      	beq.n	800f15e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800f146:	4630      	mov	r0, r6
 800f148:	b005      	add	sp, #20
 800f14a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f14e:	882b      	ldrh	r3, [r5, #0]
 800f150:	fb08 7203 	mla	r2, r8, r3, r7
 800f154:	9b03      	ldr	r3, [sp, #12]
 800f156:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800f15a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f15c:	e7f3      	b.n	800f146 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f15e:	882a      	ldrh	r2, [r5, #0]
 800f160:	9b03      	ldr	r3, [sp, #12]
 800f162:	fb08 7202 	mla	r2, r8, r2, r7
 800f166:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800f16a:	1a9a      	subs	r2, r3, r2
 800f16c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800f16e:	e7ea      	b.n	800f146 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f170:	200137b6 	.word	0x200137b6

0800f174 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800f174:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f176:	b08b      	sub	sp, #44	; 0x2c
 800f178:	4617      	mov	r7, r2
 800f17a:	4604      	mov	r4, r0
 800f17c:	460e      	mov	r6, r1
 800f17e:	461d      	mov	r5, r3
 800f180:	f7f3 fea4 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f184:	6803      	ldr	r3, [r0, #0]
 800f186:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f188:	4798      	blx	r3
 800f18a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800f18e:	9007      	str	r0, [sp, #28]
 800f190:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800f194:	4b0d      	ldr	r3, [pc, #52]	; (800f1cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800f196:	6822      	ldr	r2, [r4, #0]
 800f198:	881b      	ldrh	r3, [r3, #0]
 800f19a:	9306      	str	r3, [sp, #24]
 800f19c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800f1a0:	9305      	str	r3, [sp, #20]
 800f1a2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800f1a6:	9304      	str	r3, [sp, #16]
 800f1a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f1ac:	9303      	str	r3, [sp, #12]
 800f1ae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f1b2:	9302      	str	r3, [sp, #8]
 800f1b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f1b8:	e9cd 5300 	strd	r5, r3, [sp]
 800f1bc:	4631      	mov	r1, r6
 800f1be:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800f1c0:	463b      	mov	r3, r7
 800f1c2:	2200      	movs	r2, #0
 800f1c4:	4620      	mov	r0, r4
 800f1c6:	47a8      	blx	r5
 800f1c8:	b00b      	add	sp, #44	; 0x2c
 800f1ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f1cc:	200137b6 	.word	0x200137b6

0800f1d0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800f1d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f1d4:	4698      	mov	r8, r3
 800f1d6:	6803      	ldr	r3, [r0, #0]
 800f1d8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800f1da:	4b15      	ldr	r3, [pc, #84]	; (800f230 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800f1dc:	b08b      	sub	sp, #44	; 0x2c
 800f1de:	4617      	mov	r7, r2
 800f1e0:	f8b3 9000 	ldrh.w	r9, [r3]
 800f1e4:	460e      	mov	r6, r1
 800f1e6:	4604      	mov	r4, r0
 800f1e8:	f7f3 fe70 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f1ec:	6803      	ldr	r3, [r0, #0]
 800f1ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f1f0:	4798      	blx	r3
 800f1f2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800f1f6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800f1fa:	2302      	movs	r3, #2
 800f1fc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800f200:	2301      	movs	r3, #1
 800f202:	9305      	str	r3, [sp, #20]
 800f204:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800f208:	9304      	str	r3, [sp, #16]
 800f20a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800f20e:	9303      	str	r3, [sp, #12]
 800f210:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f214:	9302      	str	r3, [sp, #8]
 800f216:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f21a:	2200      	movs	r2, #0
 800f21c:	e9cd 8300 	strd	r8, r3, [sp]
 800f220:	4631      	mov	r1, r6
 800f222:	463b      	mov	r3, r7
 800f224:	4620      	mov	r0, r4
 800f226:	47a8      	blx	r5
 800f228:	b00b      	add	sp, #44	; 0x2c
 800f22a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f22e:	bf00      	nop
 800f230:	200137b6 	.word	0x200137b6

0800f234 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800f234:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f238:	4698      	mov	r8, r3
 800f23a:	6803      	ldr	r3, [r0, #0]
 800f23c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800f23e:	4b11      	ldr	r3, [pc, #68]	; (800f284 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800f240:	b087      	sub	sp, #28
 800f242:	f8b3 9000 	ldrh.w	r9, [r3]
 800f246:	460e      	mov	r6, r1
 800f248:	4617      	mov	r7, r2
 800f24a:	4604      	mov	r4, r0
 800f24c:	f7f3 fe3e 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f250:	6803      	ldr	r3, [r0, #0]
 800f252:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f254:	4798      	blx	r3
 800f256:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800f25a:	f8cd 900c 	str.w	r9, [sp, #12]
 800f25e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800f262:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800f266:	9302      	str	r3, [sp, #8]
 800f268:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800f26c:	9301      	str	r3, [sp, #4]
 800f26e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800f272:	9300      	str	r3, [sp, #0]
 800f274:	463a      	mov	r2, r7
 800f276:	4643      	mov	r3, r8
 800f278:	4631      	mov	r1, r6
 800f27a:	4620      	mov	r0, r4
 800f27c:	47a8      	blx	r5
 800f27e:	b007      	add	sp, #28
 800f280:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f284:	200137b6 	.word	0x200137b6

0800f288 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800f288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f28c:	4604      	mov	r4, r0
 800f28e:	b08f      	sub	sp, #60	; 0x3c
 800f290:	4610      	mov	r0, r2
 800f292:	460d      	mov	r5, r1
 800f294:	4691      	mov	r9, r2
 800f296:	461e      	mov	r6, r3
 800f298:	f007 fefc 	bl	8017094 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800f29c:	2800      	cmp	r0, #0
 800f29e:	f000 809d 	beq.w	800f3dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800f2a2:	6823      	ldr	r3, [r4, #0]
 800f2a4:	f8df b198 	ldr.w	fp, [pc, #408]	; 800f440 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800f2a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f2aa:	f8df a198 	ldr.w	sl, [pc, #408]	; 800f444 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800f2ae:	4f61      	ldr	r7, [pc, #388]	; (800f434 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f2b0:	4620      	mov	r0, r4
 800f2b2:	4798      	blx	r3
 800f2b4:	6823      	ldr	r3, [r4, #0]
 800f2b6:	4620      	mov	r0, r4
 800f2b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2ba:	4798      	blx	r3
 800f2bc:	f8bb 3000 	ldrh.w	r3, [fp]
 800f2c0:	9301      	str	r3, [sp, #4]
 800f2c2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800f2c6:	f8ba 3000 	ldrh.w	r3, [sl]
 800f2ca:	9302      	str	r3, [sp, #8]
 800f2cc:	883b      	ldrh	r3, [r7, #0]
 800f2ce:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800f2d2:	9303      	str	r3, [sp, #12]
 800f2d4:	4b58      	ldr	r3, [pc, #352]	; (800f438 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f2d6:	9305      	str	r3, [sp, #20]
 800f2d8:	881a      	ldrh	r2, [r3, #0]
 800f2da:	9204      	str	r2, [sp, #16]
 800f2dc:	4640      	mov	r0, r8
 800f2de:	f007 ff6d 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f2e2:	8038      	strh	r0, [r7, #0]
 800f2e4:	4640      	mov	r0, r8
 800f2e6:	f007 ff9d 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f2ea:	9b05      	ldr	r3, [sp, #20]
 800f2ec:	b280      	uxth	r0, r0
 800f2ee:	8018      	strh	r0, [r3, #0]
 800f2f0:	4b52      	ldr	r3, [pc, #328]	; (800f43c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800f2f2:	781b      	ldrb	r3, [r3, #0]
 800f2f4:	2b00      	cmp	r3, #0
 800f2f6:	d174      	bne.n	800f3e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800f2f8:	883b      	ldrh	r3, [r7, #0]
 800f2fa:	f8ab 3000 	strh.w	r3, [fp]
 800f2fe:	f8aa 0000 	strh.w	r0, [sl]
 800f302:	4648      	mov	r0, r9
 800f304:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800f308:	f007 fec4 	bl	8017094 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800f30c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800f310:	2200      	movs	r2, #0
 800f312:	4611      	mov	r1, r2
 800f314:	4628      	mov	r0, r5
 800f316:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800f31a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800f31e:	f7f3 f8ac 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800f322:	2301      	movs	r3, #1
 800f324:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800f328:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800f32c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f330:	2b00      	cmp	r3, #0
 800f332:	dd5c      	ble.n	800f3ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800f334:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f338:	2b00      	cmp	r3, #0
 800f33a:	dd58      	ble.n	800f3ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800f33c:	462a      	mov	r2, r5
 800f33e:	ab0a      	add	r3, sp, #40	; 0x28
 800f340:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800f344:	6851      	ldr	r1, [r2, #4]
 800f346:	c303      	stmia	r3!, {r0, r1}
 800f348:	4631      	mov	r1, r6
 800f34a:	a80a      	add	r0, sp, #40	; 0x28
 800f34c:	f7ff fc06 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 800f350:	4b38      	ldr	r3, [pc, #224]	; (800f434 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f352:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f356:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800f35a:	2100      	movs	r1, #0
 800f35c:	aa0a      	add	r2, sp, #40	; 0x28
 800f35e:	4b36      	ldr	r3, [pc, #216]	; (800f438 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f360:	910c      	str	r1, [sp, #48]	; 0x30
 800f362:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f366:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f36a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f36e:	ab08      	add	r3, sp, #32
 800f370:	e883 0003 	stmia.w	r3, {r0, r1}
 800f374:	4618      	mov	r0, r3
 800f376:	a90c      	add	r1, sp, #48	; 0x30
 800f378:	f7ff fbf0 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 800f37c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800f37e:	2b00      	cmp	r3, #0
 800f380:	d13c      	bne.n	800f3fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800f382:	2000      	movs	r0, #0
 800f384:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800f388:	2600      	movs	r6, #0
 800f38a:	682a      	ldr	r2, [r5, #0]
 800f38c:	696b      	ldr	r3, [r5, #20]
 800f38e:	616e      	str	r6, [r5, #20]
 800f390:	9305      	str	r3, [sp, #20]
 800f392:	6892      	ldr	r2, [r2, #8]
 800f394:	a908      	add	r1, sp, #32
 800f396:	4628      	mov	r0, r5
 800f398:	4790      	blx	r2
 800f39a:	9b05      	ldr	r3, [sp, #20]
 800f39c:	616b      	str	r3, [r5, #20]
 800f39e:	4652      	mov	r2, sl
 800f3a0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800f3a4:	4649      	mov	r1, r9
 800f3a6:	4628      	mov	r0, r5
 800f3a8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800f3ac:	f7f3 f865 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 800f3b0:	4b23      	ldr	r3, [pc, #140]	; (800f440 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800f3b2:	9a01      	ldr	r2, [sp, #4]
 800f3b4:	801a      	strh	r2, [r3, #0]
 800f3b6:	4b23      	ldr	r3, [pc, #140]	; (800f444 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800f3b8:	9a02      	ldr	r2, [sp, #8]
 800f3ba:	801a      	strh	r2, [r3, #0]
 800f3bc:	4b1d      	ldr	r3, [pc, #116]	; (800f434 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f3be:	9a03      	ldr	r2, [sp, #12]
 800f3c0:	801a      	strh	r2, [r3, #0]
 800f3c2:	4b1d      	ldr	r3, [pc, #116]	; (800f438 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f3c4:	9a04      	ldr	r2, [sp, #16]
 800f3c6:	801a      	strh	r2, [r3, #0]
 800f3c8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800f3cc:	6823      	ldr	r3, [r4, #0]
 800f3ce:	4620      	mov	r0, r4
 800f3d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f3d2:	4798      	blx	r3
 800f3d4:	6823      	ldr	r3, [r4, #0]
 800f3d6:	4620      	mov	r0, r4
 800f3d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f3da:	4798      	blx	r3
 800f3dc:	b00f      	add	sp, #60	; 0x3c
 800f3de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3e2:	883b      	ldrh	r3, [r7, #0]
 800f3e4:	f8ab 0000 	strh.w	r0, [fp]
 800f3e8:	f8aa 3000 	strh.w	r3, [sl]
 800f3ec:	e789      	b.n	800f302 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800f3ee:	462a      	mov	r2, r5
 800f3f0:	ab0a      	add	r3, sp, #40	; 0x28
 800f3f2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800f3f6:	6851      	ldr	r1, [r2, #4]
 800f3f8:	c303      	stmia	r3!, {r0, r1}
 800f3fa:	e7a9      	b.n	800f350 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800f3fc:	a807      	add	r0, sp, #28
 800f3fe:	f008 f84d 	bl	801749c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f402:	4606      	mov	r6, r0
 800f404:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800f406:	6803      	ldr	r3, [r0, #0]
 800f408:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f40a:	4798      	blx	r3
 800f40c:	4286      	cmp	r6, r0
 800f40e:	d1b8      	bne.n	800f382 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800f410:	f7f3 fd5c 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f414:	6803      	ldr	r3, [r0, #0]
 800f416:	4606      	mov	r6, r0
 800f418:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f41a:	9305      	str	r3, [sp, #20]
 800f41c:	a807      	add	r0, sp, #28
 800f41e:	f008 f83d 	bl	801749c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f422:	9b05      	ldr	r3, [sp, #20]
 800f424:	4601      	mov	r1, r0
 800f426:	4630      	mov	r0, r6
 800f428:	4798      	blx	r3
 800f42a:	f080 0001 	eor.w	r0, r0, #1
 800f42e:	b2c0      	uxtb	r0, r0
 800f430:	e7a8      	b.n	800f384 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800f432:	bf00      	nop
 800f434:	200137b0 	.word	0x200137b0
 800f438:	200137b2 	.word	0x200137b2
 800f43c:	200137b4 	.word	0x200137b4
 800f440:	200137b6 	.word	0x200137b6
 800f444:	200137b8 	.word	0x200137b8

0800f448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800f448:	b510      	push	{r4, lr}
 800f44a:	4b07      	ldr	r3, [pc, #28]	; (800f468 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800f44c:	781b      	ldrb	r3, [r3, #0]
 800f44e:	4604      	mov	r4, r0
 800f450:	b13b      	cbz	r3, 800f462 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800f452:	6803      	ldr	r3, [r0, #0]
 800f454:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f456:	4798      	blx	r3
 800f458:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f45a:	4283      	cmp	r3, r0
 800f45c:	d101      	bne.n	800f462 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800f45e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800f460:	bd10      	pop	{r4, pc}
 800f462:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800f464:	e7fc      	b.n	800f460 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800f466:	bf00      	nop
 800f468:	200137ba 	.word	0x200137ba

0800f46c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800f46c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f470:	b08a      	sub	sp, #40	; 0x28
 800f472:	461d      	mov	r5, r3
 800f474:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f478:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f47c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f480:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f484:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f488:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f48c:	2400      	movs	r4, #0
 800f48e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f492:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800f496:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f49a:	4690      	mov	r8, r2
 800f49c:	4607      	mov	r7, r0
 800f49e:	9404      	str	r4, [sp, #16]
 800f4a0:	f88d 4020 	strb.w	r4, [sp, #32]
 800f4a4:	f7ff ffd0 	bl	800f448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f4a8:	fb06 8505 	mla	r5, r6, r5, r8
 800f4ac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f4b0:	6878      	ldr	r0, [r7, #4]
 800f4b2:	9505      	str	r5, [sp, #20]
 800f4b4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800f4b8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f4bc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800f4c0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800f4c4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800f4c8:	6803      	ldr	r3, [r0, #0]
 800f4ca:	a901      	add	r1, sp, #4
 800f4cc:	685b      	ldr	r3, [r3, #4]
 800f4ce:	4798      	blx	r3
 800f4d0:	b00a      	add	sp, #40	; 0x28
 800f4d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f4d6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800f4d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f4da:	b08b      	sub	sp, #44	; 0x2c
 800f4dc:	2400      	movs	r4, #0
 800f4de:	461d      	mov	r5, r3
 800f4e0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800f4e4:	4688      	mov	r8, r1
 800f4e6:	4691      	mov	r9, r2
 800f4e8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800f4ec:	9404      	str	r4, [sp, #16]
 800f4ee:	4607      	mov	r7, r0
 800f4f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f4f4:	f7ff ffa8 	bl	800f448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f4f8:	fb06 9505 	mla	r5, r6, r5, r9
 800f4fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f500:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f504:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f508:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f50c:	6878      	ldr	r0, [r7, #4]
 800f50e:	9505      	str	r5, [sp, #20]
 800f510:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f514:	f8ad 401c 	strh.w	r4, [sp, #28]
 800f518:	f8ad 601e 	strh.w	r6, [sp, #30]
 800f51c:	f8cd 8010 	str.w	r8, [sp, #16]
 800f520:	f8ad 4020 	strh.w	r4, [sp, #32]
 800f524:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f528:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800f52c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800f530:	6803      	ldr	r3, [r0, #0]
 800f532:	a901      	add	r1, sp, #4
 800f534:	685b      	ldr	r3, [r3, #4]
 800f536:	4798      	blx	r3
 800f538:	b00b      	add	sp, #44	; 0x2c
 800f53a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800f540 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800f540:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f544:	b08a      	sub	sp, #40	; 0x28
 800f546:	4698      	mov	r8, r3
 800f548:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800f54c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800f550:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800f554:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800f558:	2300      	movs	r3, #0
 800f55a:	2d0b      	cmp	r5, #11
 800f55c:	4606      	mov	r6, r0
 800f55e:	9304      	str	r3, [sp, #16]
 800f560:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800f564:	d138      	bne.n	800f5d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800f566:	2380      	movs	r3, #128	; 0x80
 800f568:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f56c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f570:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f574:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f578:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f57c:	f88d 0020 	strb.w	r0, [sp, #32]
 800f580:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f584:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f588:	4630      	mov	r0, r6
 800f58a:	9203      	str	r2, [sp, #12]
 800f58c:	f7ff ff5c 	bl	800f448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f590:	2c0b      	cmp	r4, #11
 800f592:	bf98      	it	ls
 800f594:	4b1b      	ldrls	r3, [pc, #108]	; (800f604 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800f596:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800f59a:	bf98      	it	ls
 800f59c:	5d19      	ldrbls	r1, [r3, r4]
 800f59e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800f5a2:	bf88      	it	hi
 800f5a4:	2100      	movhi	r1, #0
 800f5a6:	fb02 8307 	mla	r3, r2, r7, r8
 800f5aa:	10c9      	asrs	r1, r1, #3
 800f5ac:	fb01 0003 	mla	r0, r1, r3, r0
 800f5b0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800f5b4:	9005      	str	r0, [sp, #20]
 800f5b6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800f5ba:	6870      	ldr	r0, [r6, #4]
 800f5bc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800f5c0:	2300      	movs	r3, #0
 800f5c2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f5c6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800f5ca:	6803      	ldr	r3, [r0, #0]
 800f5cc:	a901      	add	r1, sp, #4
 800f5ce:	685b      	ldr	r3, [r3, #4]
 800f5d0:	4798      	blx	r3
 800f5d2:	b00a      	add	sp, #40	; 0x28
 800f5d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f5d8:	2d02      	cmp	r5, #2
 800f5da:	d109      	bne.n	800f5f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800f5dc:	28ff      	cmp	r0, #255	; 0xff
 800f5de:	d105      	bne.n	800f5ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800f5e0:	f1bc 0f00 	cmp.w	ip, #0
 800f5e4:	bf14      	ite	ne
 800f5e6:	2340      	movne	r3, #64	; 0x40
 800f5e8:	2320      	moveq	r3, #32
 800f5ea:	e7bd      	b.n	800f568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f5ec:	2340      	movs	r3, #64	; 0x40
 800f5ee:	e7bb      	b.n	800f568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f5f0:	28ff      	cmp	r0, #255	; 0xff
 800f5f2:	d105      	bne.n	800f600 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800f5f4:	f1bc 0f00 	cmp.w	ip, #0
 800f5f8:	bf14      	ite	ne
 800f5fa:	2304      	movne	r3, #4
 800f5fc:	2301      	moveq	r3, #1
 800f5fe:	e7b3      	b.n	800f568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f600:	2304      	movs	r3, #4
 800f602:	e7b1      	b.n	800f568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f604:	0802b188 	.word	0x0802b188

0800f608 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800f608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f60c:	b08b      	sub	sp, #44	; 0x2c
 800f60e:	461d      	mov	r5, r3
 800f610:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800f614:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800f618:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800f61c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800f620:	bf14      	ite	ne
 800f622:	2308      	movne	r3, #8
 800f624:	2302      	moveq	r3, #2
 800f626:	2400      	movs	r4, #0
 800f628:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f62c:	4688      	mov	r8, r1
 800f62e:	4693      	mov	fp, r2
 800f630:	9404      	str	r4, [sp, #16]
 800f632:	4607      	mov	r7, r0
 800f634:	f7ff ff08 	bl	800f448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f638:	2e0b      	cmp	r6, #11
 800f63a:	bf98      	it	ls
 800f63c:	4b15      	ldrls	r3, [pc, #84]	; (800f694 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800f63e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f642:	bf98      	it	ls
 800f644:	5d9c      	ldrbls	r4, [r3, r6]
 800f646:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800f64a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f64e:	fb05 b50a 	mla	r5, r5, sl, fp
 800f652:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800f656:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f65a:	10e4      	asrs	r4, r4, #3
 800f65c:	fb04 0405 	mla	r4, r4, r5, r0
 800f660:	2300      	movs	r3, #0
 800f662:	6878      	ldr	r0, [r7, #4]
 800f664:	9405      	str	r4, [sp, #20]
 800f666:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f66a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800f66e:	f8cd 8010 	str.w	r8, [sp, #16]
 800f672:	f88d 9020 	strb.w	r9, [sp, #32]
 800f676:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800f67a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800f67e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800f682:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800f686:	6803      	ldr	r3, [r0, #0]
 800f688:	a901      	add	r1, sp, #4
 800f68a:	685b      	ldr	r3, [r3, #4]
 800f68c:	4798      	blx	r3
 800f68e:	b00b      	add	sp, #44	; 0x2c
 800f690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f694:	0802b188 	.word	0x0802b188

0800f698 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800f698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f69c:	461e      	mov	r6, r3
 800f69e:	4b0a      	ldr	r3, [pc, #40]	; (800f6c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800f6a0:	460f      	mov	r7, r1
 800f6a2:	881d      	ldrh	r5, [r3, #0]
 800f6a4:	4690      	mov	r8, r2
 800f6a6:	f7f3 fc11 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f6aa:	6803      	ldr	r3, [r0, #0]
 800f6ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f6ae:	4798      	blx	r3
 800f6b0:	280b      	cmp	r0, #11
 800f6b2:	bf9a      	itte	ls
 800f6b4:	4b05      	ldrls	r3, [pc, #20]	; (800f6cc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800f6b6:	5c1c      	ldrbls	r4, [r3, r0]
 800f6b8:	2400      	movhi	r4, #0
 800f6ba:	fb08 7005 	mla	r0, r8, r5, r7
 800f6be:	10e4      	asrs	r4, r4, #3
 800f6c0:	fb04 6000 	mla	r0, r4, r0, r6
 800f6c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f6c8:	200137b6 	.word	0x200137b6
 800f6cc:	0802b188 	.word	0x0802b188

0800f6d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800f6d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f6d2:	b08b      	sub	sp, #44	; 0x2c
 800f6d4:	461f      	mov	r7, r3
 800f6d6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800f6da:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f6de:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f6e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f6e6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f6ea:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f6ee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f6f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f6f6:	2500      	movs	r5, #0
 800f6f8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800f6fc:	f88d 3020 	strb.w	r3, [sp, #32]
 800f700:	4604      	mov	r4, r0
 800f702:	4616      	mov	r6, r2
 800f704:	9504      	str	r5, [sp, #16]
 800f706:	f7ff fe9f 	bl	800f448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f70a:	463a      	mov	r2, r7
 800f70c:	4631      	mov	r1, r6
 800f70e:	4603      	mov	r3, r0
 800f710:	4620      	mov	r0, r4
 800f712:	f7ff ffc1 	bl	800f698 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f716:	4b0e      	ldr	r3, [pc, #56]	; (800f750 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800f718:	9005      	str	r0, [sp, #20]
 800f71a:	881b      	ldrh	r3, [r3, #0]
 800f71c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800f720:	f7f3 fbd4 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f724:	6803      	ldr	r3, [r0, #0]
 800f726:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f728:	4798      	blx	r3
 800f72a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f72c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800f730:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800f734:	9304      	str	r3, [sp, #16]
 800f736:	6860      	ldr	r0, [r4, #4]
 800f738:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800f73c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800f740:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800f744:	6803      	ldr	r3, [r0, #0]
 800f746:	a901      	add	r1, sp, #4
 800f748:	685b      	ldr	r3, [r3, #4]
 800f74a:	4798      	blx	r3
 800f74c:	b00b      	add	sp, #44	; 0x2c
 800f74e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f750:	200137b6 	.word	0x200137b6

0800f754 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800f754:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f756:	b08d      	sub	sp, #52	; 0x34
 800f758:	466b      	mov	r3, sp
 800f75a:	e883 0006 	stmia.w	r3, {r1, r2}
 800f75e:	2300      	movs	r3, #0
 800f760:	9306      	str	r3, [sp, #24]
 800f762:	6803      	ldr	r3, [r0, #0]
 800f764:	f8bd 6000 	ldrh.w	r6, [sp]
 800f768:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f76a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800f76e:	2501      	movs	r5, #1
 800f770:	9503      	str	r5, [sp, #12]
 800f772:	4604      	mov	r4, r0
 800f774:	4798      	blx	r3
 800f776:	463a      	mov	r2, r7
 800f778:	4631      	mov	r1, r6
 800f77a:	4603      	mov	r3, r0
 800f77c:	4620      	mov	r0, r4
 800f77e:	f7ff ff8b 	bl	800f698 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f782:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f784:	9307      	str	r3, [sp, #28]
 800f786:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f78a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f78e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f792:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f796:	4b0f      	ldr	r3, [pc, #60]	; (800f7d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800f798:	9004      	str	r0, [sp, #16]
 800f79a:	881b      	ldrh	r3, [r3, #0]
 800f79c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f7a0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f7a4:	f7f3 fb92 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f7a8:	6803      	ldr	r3, [r0, #0]
 800f7aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f7ac:	4798      	blx	r3
 800f7ae:	23ff      	movs	r3, #255	; 0xff
 800f7b0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800f7b4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800f7b8:	6860      	ldr	r0, [r4, #4]
 800f7ba:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800f7be:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f7c2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800f7c6:	6803      	ldr	r3, [r0, #0]
 800f7c8:	a903      	add	r1, sp, #12
 800f7ca:	685b      	ldr	r3, [r3, #4]
 800f7cc:	4798      	blx	r3
 800f7ce:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800f7d0:	b00d      	add	sp, #52	; 0x34
 800f7d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7d4:	200137b6 	.word	0x200137b6

0800f7d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800f7d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f7dc:	b08c      	sub	sp, #48	; 0x30
 800f7de:	461e      	mov	r6, r3
 800f7e0:	466d      	mov	r5, sp
 800f7e2:	2300      	movs	r3, #0
 800f7e4:	e885 0006 	stmia.w	r5, {r1, r2}
 800f7e8:	9306      	str	r3, [sp, #24]
 800f7ea:	6803      	ldr	r3, [r0, #0]
 800f7ec:	f8bd 7000 	ldrh.w	r7, [sp]
 800f7f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f7f2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800f7f6:	2501      	movs	r5, #1
 800f7f8:	9503      	str	r5, [sp, #12]
 800f7fa:	4604      	mov	r4, r0
 800f7fc:	4798      	blx	r3
 800f7fe:	4642      	mov	r2, r8
 800f800:	4639      	mov	r1, r7
 800f802:	4603      	mov	r3, r0
 800f804:	4620      	mov	r0, r4
 800f806:	f7ff ff47 	bl	800f698 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f80a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f80e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f812:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f816:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f81a:	4b11      	ldr	r3, [pc, #68]	; (800f860 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800f81c:	9004      	str	r0, [sp, #16]
 800f81e:	881b      	ldrh	r3, [r3, #0]
 800f820:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f824:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f826:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f82a:	9607      	str	r6, [sp, #28]
 800f82c:	f7f3 fb4e 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 800f830:	6803      	ldr	r3, [r0, #0]
 800f832:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f834:	4798      	blx	r3
 800f836:	23ff      	movs	r3, #255	; 0xff
 800f838:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800f83c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800f840:	6860      	ldr	r0, [r4, #4]
 800f842:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800f846:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f84a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800f84e:	6803      	ldr	r3, [r0, #0]
 800f850:	a903      	add	r1, sp, #12
 800f852:	685b      	ldr	r3, [r3, #4]
 800f854:	4798      	blx	r3
 800f856:	4630      	mov	r0, r6
 800f858:	b00c      	add	sp, #48	; 0x30
 800f85a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f85e:	bf00      	nop
 800f860:	200137b6 	.word	0x200137b6

0800f864 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800f864:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f866:	b085      	sub	sp, #20
 800f868:	ac02      	add	r4, sp, #8
 800f86a:	e884 0006 	stmia.w	r4, {r1, r2}
 800f86e:	4605      	mov	r5, r0
 800f870:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800f874:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800f878:	f7ff fde6 	bl	800f448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f87c:	463a      	mov	r2, r7
 800f87e:	4603      	mov	r3, r0
 800f880:	4631      	mov	r1, r6
 800f882:	4628      	mov	r0, r5
 800f884:	f7ff ff08 	bl	800f698 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f888:	4a05      	ldr	r2, [pc, #20]	; (800f8a0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800f88a:	682b      	ldr	r3, [r5, #0]
 800f88c:	8812      	ldrh	r2, [r2, #0]
 800f88e:	9200      	str	r2, [sp, #0]
 800f890:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800f892:	e894 0006 	ldmia.w	r4, {r1, r2}
 800f896:	4603      	mov	r3, r0
 800f898:	4628      	mov	r0, r5
 800f89a:	47b0      	blx	r6
 800f89c:	b005      	add	sp, #20
 800f89e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f8a0:	200137b6 	.word	0x200137b6

0800f8a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800f8a4:	b570      	push	{r4, r5, r6, lr}
 800f8a6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800f8aa:	4604      	mov	r4, r0
 800f8ac:	b19b      	cbz	r3, 800f8d6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800f8ae:	2002      	movs	r0, #2
 800f8b0:	f7f0 ff8c 	bl	80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800f8b4:	2300      	movs	r3, #0
 800f8b6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800f8ba:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800f8be:	6823      	ldr	r3, [r4, #0]
 800f8c0:	4620      	mov	r0, r4
 800f8c2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800f8c6:	f7ff fdbf 	bl	800f448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f8ca:	462b      	mov	r3, r5
 800f8cc:	4601      	mov	r1, r0
 800f8ce:	4620      	mov	r0, r4
 800f8d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f8d4:	4718      	bx	r3
 800f8d6:	bd70      	pop	{r4, r5, r6, pc}

0800f8d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800f8d8:	b538      	push	{r3, r4, r5, lr}
 800f8da:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800f8de:	428b      	cmp	r3, r1
 800f8e0:	4604      	mov	r4, r0
 800f8e2:	460d      	mov	r5, r1
 800f8e4:	d006      	beq.n	800f8f4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800f8e6:	6803      	ldr	r3, [r0, #0]
 800f8e8:	b929      	cbnz	r1, 800f8f6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800f8ea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f8ee:	4798      	blx	r3
 800f8f0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800f8f4:	bd38      	pop	{r3, r4, r5, pc}
 800f8f6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800f8fa:	e7f8      	b.n	800f8ee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800f8fc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800f8fc:	b510      	push	{r4, lr}
 800f8fe:	4b0d      	ldr	r3, [pc, #52]	; (800f934 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800f900:	781b      	ldrb	r3, [r3, #0]
 800f902:	4604      	mov	r4, r0
 800f904:	b95b      	cbnz	r3, 800f91e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f906:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800f90a:	2b02      	cmp	r3, #2
 800f90c:	d007      	beq.n	800f91e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f90e:	6840      	ldr	r0, [r0, #4]
 800f910:	f000 f92c 	bl	800fb6c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800f914:	b118      	cbz	r0, 800f91e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f916:	6862      	ldr	r2, [r4, #4]
 800f918:	7a53      	ldrb	r3, [r2, #9]
 800f91a:	2b00      	cmp	r3, #0
 800f91c:	d0fc      	beq.n	800f918 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800f91e:	f7f1 f88d 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800f922:	4620      	mov	r0, r4
 800f924:	2100      	movs	r1, #0
 800f926:	f7ff ffd7 	bl	800f8d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f92a:	4620      	mov	r0, r4
 800f92c:	f7ff fd8c 	bl	800f448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f930:	bd10      	pop	{r4, pc}
 800f932:	bf00      	nop
 800f934:	200137ba 	.word	0x200137ba

0800f938 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800f938:	b570      	push	{r4, r5, r6, lr}
 800f93a:	4604      	mov	r4, r0
 800f93c:	6803      	ldr	r3, [r0, #0]
 800f93e:	b919      	cbnz	r1, 800f948 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800f940:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f942:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f946:	4718      	bx	r3
 800f948:	2200      	movs	r2, #0
 800f94a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 800f94e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 800f952:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f954:	4798      	blx	r3
 800f956:	6863      	ldr	r3, [r4, #4]
 800f958:	2101      	movs	r1, #1
 800f95a:	4605      	mov	r5, r0
 800f95c:	7299      	strb	r1, [r3, #10]
 800f95e:	4620      	mov	r0, r4
 800f960:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 800f964:	f7ff ffb8 	bl	800f8d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f968:	4628      	mov	r0, r5
 800f96a:	bd70      	pop	{r4, r5, r6, pc}

0800f96c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800f96c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800f970:	1a13      	subs	r3, r2, r0
 800f972:	4258      	negs	r0, r3
 800f974:	4158      	adcs	r0, r3
 800f976:	4770      	bx	lr

0800f978 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800f978:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800f97c:	1a9b      	subs	r3, r3, r2
 800f97e:	2b00      	cmp	r3, #0
 800f980:	bfdc      	itt	le
 800f982:	6882      	ldrle	r2, [r0, #8]
 800f984:	189b      	addle	r3, r3, r2
 800f986:	2b01      	cmp	r3, #1
 800f988:	bfcc      	ite	gt
 800f98a:	2000      	movgt	r0, #0
 800f98c:	2001      	movle	r0, #1
 800f98e:	4770      	bx	lr

0800f990 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800f990:	6902      	ldr	r2, [r0, #16]
 800f992:	6843      	ldr	r3, [r0, #4]
 800f994:	2024      	movs	r0, #36	; 0x24
 800f996:	fb00 3002 	mla	r0, r0, r2, r3
 800f99a:	4770      	bx	lr

0800f99c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800f99c:	6803      	ldr	r3, [r0, #0]
 800f99e:	691b      	ldr	r3, [r3, #16]
 800f9a0:	4718      	bx	r3

0800f9a2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800f9a2:	b570      	push	{r4, r5, r6, lr}
 800f9a4:	2301      	movs	r3, #1
 800f9a6:	7203      	strb	r3, [r0, #8]
 800f9a8:	4604      	mov	r4, r0
 800f9aa:	6840      	ldr	r0, [r0, #4]
 800f9ac:	6803      	ldr	r3, [r0, #0]
 800f9ae:	699b      	ldr	r3, [r3, #24]
 800f9b0:	4798      	blx	r3
 800f9b2:	6803      	ldr	r3, [r0, #0]
 800f9b4:	2b40      	cmp	r3, #64	; 0x40
 800f9b6:	4605      	mov	r5, r0
 800f9b8:	d00c      	beq.n	800f9d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f9ba:	d810      	bhi.n	800f9de <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800f9bc:	2b04      	cmp	r3, #4
 800f9be:	d01d      	beq.n	800f9fc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800f9c0:	d804      	bhi.n	800f9cc <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800f9c2:	2b01      	cmp	r3, #1
 800f9c4:	d006      	beq.n	800f9d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f9c6:	2b02      	cmp	r3, #2
 800f9c8:	d02c      	beq.n	800fa24 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800f9ca:	bd70      	pop	{r4, r5, r6, pc}
 800f9cc:	2b08      	cmp	r3, #8
 800f9ce:	d01d      	beq.n	800fa0c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800f9d0:	2b20      	cmp	r3, #32
 800f9d2:	d1fa      	bne.n	800f9ca <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800f9d4:	6823      	ldr	r3, [r4, #0]
 800f9d6:	4620      	mov	r0, r4
 800f9d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f9da:	4798      	blx	r3
 800f9dc:	e013      	b.n	800fa06 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800f9de:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f9e2:	d0f7      	beq.n	800f9d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f9e4:	d804      	bhi.n	800f9f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800f9e6:	2b80      	cmp	r3, #128	; 0x80
 800f9e8:	d0f4      	beq.n	800f9d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f9ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800f9ee:	e7f0      	b.n	800f9d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800f9f0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800f9f4:	d0ee      	beq.n	800f9d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f9f6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800f9fa:	e7e5      	b.n	800f9c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800f9fc:	6823      	ldr	r3, [r4, #0]
 800f9fe:	7f01      	ldrb	r1, [r0, #28]
 800fa00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa02:	4620      	mov	r0, r4
 800fa04:	4798      	blx	r3
 800fa06:	6823      	ldr	r3, [r4, #0]
 800fa08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fa0a:	e006      	b.n	800fa1a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800fa0c:	6823      	ldr	r3, [r4, #0]
 800fa0e:	7f01      	ldrb	r1, [r0, #28]
 800fa10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa12:	4620      	mov	r0, r4
 800fa14:	4798      	blx	r3
 800fa16:	6823      	ldr	r3, [r4, #0]
 800fa18:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fa1a:	4629      	mov	r1, r5
 800fa1c:	4620      	mov	r0, r4
 800fa1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa22:	4718      	bx	r3
 800fa24:	6823      	ldr	r3, [r4, #0]
 800fa26:	4620      	mov	r0, r4
 800fa28:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fa2a:	4798      	blx	r3
 800fa2c:	e7f3      	b.n	800fa16 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800fa2e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800fa2e:	4770      	bx	lr

0800fa30 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800fa30:	4770      	bx	lr

0800fa32 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800fa32:	4770      	bx	lr

0800fa34 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800fa34:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800fa38:	1ad2      	subs	r2, r2, r3
 800fa3a:	2a00      	cmp	r2, #0
 800fa3c:	b510      	push	{r4, lr}
 800fa3e:	bfdc      	itt	le
 800fa40:	6884      	ldrle	r4, [r0, #8]
 800fa42:	1912      	addle	r2, r2, r4
 800fa44:	2a01      	cmp	r2, #1
 800fa46:	dd16      	ble.n	800fa76 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800fa48:	6842      	ldr	r2, [r0, #4]
 800fa4a:	2424      	movs	r4, #36	; 0x24
 800fa4c:	fb04 2303 	mla	r3, r4, r3, r2
 800fa50:	f101 0220 	add.w	r2, r1, #32
 800fa54:	f851 4b04 	ldr.w	r4, [r1], #4
 800fa58:	f843 4b04 	str.w	r4, [r3], #4
 800fa5c:	4291      	cmp	r1, r2
 800fa5e:	d1f9      	bne.n	800fa54 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800fa60:	780a      	ldrb	r2, [r1, #0]
 800fa62:	701a      	strb	r2, [r3, #0]
 800fa64:	68c3      	ldr	r3, [r0, #12]
 800fa66:	6882      	ldr	r2, [r0, #8]
 800fa68:	f3bf 8f5b 	dmb	ish
 800fa6c:	3301      	adds	r3, #1
 800fa6e:	429a      	cmp	r2, r3
 800fa70:	bfd8      	it	le
 800fa72:	1a9b      	suble	r3, r3, r2
 800fa74:	60c3      	str	r3, [r0, #12]
 800fa76:	bd10      	pop	{r4, pc}

0800fa78 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800fa78:	6903      	ldr	r3, [r0, #16]
 800fa7a:	6882      	ldr	r2, [r0, #8]
 800fa7c:	f3bf 8f5b 	dmb	ish
 800fa80:	3301      	adds	r3, #1
 800fa82:	429a      	cmp	r2, r3
 800fa84:	bfd8      	it	le
 800fa86:	1a9b      	suble	r3, r3, r2
 800fa88:	6103      	str	r3, [r0, #16]
 800fa8a:	4770      	bx	lr

0800fa8c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800fa8c:	b570      	push	{r4, r5, r6, lr}
 800fa8e:	4604      	mov	r4, r0
 800fa90:	460e      	mov	r6, r1
 800fa92:	6860      	ldr	r0, [r4, #4]
 800fa94:	6803      	ldr	r3, [r0, #0]
 800fa96:	685b      	ldr	r3, [r3, #4]
 800fa98:	4798      	blx	r3
 800fa9a:	2800      	cmp	r0, #0
 800fa9c:	d1f9      	bne.n	800fa92 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800fa9e:	4d0d      	ldr	r5, [pc, #52]	; (800fad4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800faa0:	6828      	ldr	r0, [r5, #0]
 800faa2:	6803      	ldr	r3, [r0, #0]
 800faa4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800faa6:	4798      	blx	r3
 800faa8:	f7f0 ffd6 	bl	8000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800faac:	6828      	ldr	r0, [r5, #0]
 800faae:	2101      	movs	r1, #1
 800fab0:	f7ff ff12 	bl	800f8d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800fab4:	6860      	ldr	r0, [r4, #4]
 800fab6:	6803      	ldr	r3, [r0, #0]
 800fab8:	4631      	mov	r1, r6
 800faba:	689b      	ldr	r3, [r3, #8]
 800fabc:	4798      	blx	r3
 800fabe:	6823      	ldr	r3, [r4, #0]
 800fac0:	4620      	mov	r0, r4
 800fac2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fac4:	4798      	blx	r3
 800fac6:	6828      	ldr	r0, [r5, #0]
 800fac8:	6803      	ldr	r3, [r0, #0]
 800faca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800face:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800fad0:	4718      	bx	r3
 800fad2:	bf00      	nop
 800fad4:	200137bc 	.word	0x200137bc

0800fad8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800fad8:	b508      	push	{r3, lr}
 800fada:	f7f0 ffaf 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800fade:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fae2:	f7f0 bfb3 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800fae6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800fae6:	b510      	push	{r4, lr}
 800fae8:	2114      	movs	r1, #20
 800faea:	4604      	mov	r4, r0
 800faec:	f016 fea7 	bl	802683e <_ZdlPvj>
 800faf0:	4620      	mov	r0, r4
 800faf2:	bd10      	pop	{r4, pc}

0800faf4 <_ZN8touchgfx13DMA_Interface5startEv>:
 800faf4:	b510      	push	{r4, lr}
 800faf6:	4604      	mov	r4, r0
 800faf8:	6840      	ldr	r0, [r0, #4]
 800fafa:	6803      	ldr	r3, [r0, #0]
 800fafc:	681b      	ldr	r3, [r3, #0]
 800fafe:	4798      	blx	r3
 800fb00:	b948      	cbnz	r0, 800fb16 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fb02:	7a63      	ldrb	r3, [r4, #9]
 800fb04:	b13b      	cbz	r3, 800fb16 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fb06:	7a23      	ldrb	r3, [r4, #8]
 800fb08:	b92b      	cbnz	r3, 800fb16 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fb0a:	6823      	ldr	r3, [r4, #0]
 800fb0c:	4620      	mov	r0, r4
 800fb0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb14:	4718      	bx	r3
 800fb16:	bd10      	pop	{r4, pc}

0800fb18 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800fb18:	b570      	push	{r4, r5, r6, lr}
 800fb1a:	4604      	mov	r4, r0
 800fb1c:	6840      	ldr	r0, [r0, #4]
 800fb1e:	6803      	ldr	r3, [r0, #0]
 800fb20:	681b      	ldr	r3, [r3, #0]
 800fb22:	4798      	blx	r3
 800fb24:	4605      	mov	r5, r0
 800fb26:	b930      	cbnz	r0, 800fb36 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800fb28:	7a23      	ldrb	r3, [r4, #8]
 800fb2a:	b123      	cbz	r3, 800fb36 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800fb2c:	6860      	ldr	r0, [r4, #4]
 800fb2e:	6803      	ldr	r3, [r0, #0]
 800fb30:	695b      	ldr	r3, [r3, #20]
 800fb32:	4798      	blx	r3
 800fb34:	7225      	strb	r5, [r4, #8]
 800fb36:	6860      	ldr	r0, [r4, #4]
 800fb38:	6803      	ldr	r3, [r0, #0]
 800fb3a:	681b      	ldr	r3, [r3, #0]
 800fb3c:	4798      	blx	r3
 800fb3e:	b928      	cbnz	r0, 800fb4c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800fb40:	6823      	ldr	r3, [r4, #0]
 800fb42:	4620      	mov	r0, r4
 800fb44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb4a:	4718      	bx	r3
 800fb4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb50:	f7f0 bf8a 	b.w	8000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800fb54 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800fb54:	b510      	push	{r4, lr}
 800fb56:	4c04      	ldr	r4, [pc, #16]	; (800fb68 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800fb58:	6082      	str	r2, [r0, #8]
 800fb5a:	2200      	movs	r2, #0
 800fb5c:	e9c0 4100 	strd	r4, r1, [r0]
 800fb60:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800fb64:	bd10      	pop	{r4, pc}
 800fb66:	bf00      	nop
 800fb68:	0802b19c 	.word	0x0802b19c

0800fb6c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800fb6c:	6840      	ldr	r0, [r0, #4]
 800fb6e:	6803      	ldr	r3, [r0, #0]
 800fb70:	681b      	ldr	r3, [r3, #0]
 800fb72:	4718      	bx	r3

0800fb74 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800fb74:	4b06      	ldr	r3, [pc, #24]	; (800fb90 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800fb76:	60c1      	str	r1, [r0, #12]
 800fb78:	094a      	lsrs	r2, r1, #5
 800fb7a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800fb7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800fb82:	4313      	orrs	r3, r2
 800fb84:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800fb88:	4319      	orrs	r1, r3
 800fb8a:	8201      	strh	r1, [r0, #16]
 800fb8c:	4770      	bx	lr
 800fb8e:	bf00      	nop
 800fb90:	fffff800 	.word	0xfffff800

0800fb94 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800fb94:	f1a0 0008 	sub.w	r0, r0, #8
 800fb98:	e7ec      	b.n	800fb74 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800fb9a:	bf00      	nop

0800fb9c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800fb9c:	b508      	push	{r3, lr}
 800fb9e:	4b05      	ldr	r3, [pc, #20]	; (800fbb4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800fba0:	6818      	ldr	r0, [r3, #0]
 800fba2:	6803      	ldr	r3, [r0, #0]
 800fba4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800fba8:	4798      	blx	r3
 800fbaa:	1e43      	subs	r3, r0, #1
 800fbac:	4258      	negs	r0, r3
 800fbae:	4158      	adcs	r0, r3
 800fbb0:	bd08      	pop	{r3, pc}
 800fbb2:	bf00      	nop
 800fbb4:	200137bc 	.word	0x200137bc

0800fbb8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800fbb8:	4770      	bx	lr

0800fbba <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800fbba:	3808      	subs	r0, #8
 800fbbc:	4770      	bx	lr

0800fbbe <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800fbbe:	b430      	push	{r4, r5}
 800fbc0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800fbc4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800fbc8:	8a02      	ldrh	r2, [r0, #16]
 800fbca:	9202      	str	r2, [sp, #8]
 800fbcc:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800fbd0:	68c2      	ldr	r2, [r0, #12]
 800fbd2:	4629      	mov	r1, r5
 800fbd4:	4620      	mov	r0, r4
 800fbd6:	bc30      	pop	{r4, r5}
 800fbd8:	f7f1 b90a 	b.w	8000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800fbdc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800fbdc:	f7f1 b8fe 	b.w	8000ddc <_ZN8touchgfx5paint8tearDownEv>

0800fbe0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800fbe0:	b510      	push	{r4, lr}
 800fbe2:	2114      	movs	r1, #20
 800fbe4:	4604      	mov	r4, r0
 800fbe6:	f016 fe2a 	bl	802683e <_ZdlPvj>
 800fbea:	4620      	mov	r0, r4
 800fbec:	bd10      	pop	{r4, pc}

0800fbee <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800fbee:	f1a0 0008 	sub.w	r0, r0, #8
 800fbf2:	e7f5      	b.n	800fbe0 <_ZN8touchgfx13PainterRGB565D0Ev>

0800fbf4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800fbf4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fbf6:	6803      	ldr	r3, [r0, #0]
 800fbf8:	460d      	mov	r5, r1
 800fbfa:	4604      	mov	r4, r0
 800fbfc:	4601      	mov	r1, r0
 800fbfe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800fc00:	a802      	add	r0, sp, #8
 800fc02:	4798      	blx	r3
 800fc04:	6828      	ldr	r0, [r5, #0]
 800fc06:	6869      	ldr	r1, [r5, #4]
 800fc08:	466b      	mov	r3, sp
 800fc0a:	c303      	stmia	r3!, {r0, r1}
 800fc0c:	4668      	mov	r0, sp
 800fc0e:	4619      	mov	r1, r3
 800fc10:	f7fe ffa4 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 800fc14:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800fc16:	b188      	cbz	r0, 800fc3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fc18:	6803      	ldr	r3, [r0, #0]
 800fc1a:	1d21      	adds	r1, r4, #4
 800fc1c:	68db      	ldr	r3, [r3, #12]
 800fc1e:	4798      	blx	r3
 800fc20:	b160      	cbz	r0, 800fc3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fc22:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800fc26:	2b00      	cmp	r3, #0
 800fc28:	dd08      	ble.n	800fc3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fc2a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800fc2e:	2d00      	cmp	r5, #0
 800fc30:	dd04      	ble.n	800fc3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fc32:	4a2b      	ldr	r2, [pc, #172]	; (800fce0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800fc34:	7812      	ldrb	r2, [r2, #0]
 800fc36:	b11a      	cbz	r2, 800fc40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800fc38:	2a01      	cmp	r2, #1
 800fc3a:	d029      	beq.n	800fc90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800fc3c:	b004      	add	sp, #16
 800fc3e:	bd70      	pop	{r4, r5, r6, pc}
 800fc40:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fc44:	441d      	add	r5, r3
 800fc46:	b2ad      	uxth	r5, r5
 800fc48:	b22e      	sxth	r6, r5
 800fc4a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800fc4e:	42b3      	cmp	r3, r6
 800fc50:	daf4      	bge.n	800fc3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fc52:	6823      	ldr	r3, [r4, #0]
 800fc54:	4669      	mov	r1, sp
 800fc56:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800fc58:	4620      	mov	r0, r4
 800fc5a:	4798      	blx	r3
 800fc5c:	b940      	cbnz	r0, 800fc70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800fc5e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800fc62:	2b01      	cmp	r3, #1
 800fc64:	d004      	beq.n	800fc70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800fc66:	3301      	adds	r3, #1
 800fc68:	105b      	asrs	r3, r3, #1
 800fc6a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fc6e:	e7f0      	b.n	800fc52 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800fc70:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800fc74:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fc78:	4413      	add	r3, r2
 800fc7a:	b29b      	uxth	r3, r3
 800fc7c:	441a      	add	r2, r3
 800fc7e:	b212      	sxth	r2, r2
 800fc80:	4296      	cmp	r6, r2
 800fc82:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fc86:	dae0      	bge.n	800fc4a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800fc88:	1aeb      	subs	r3, r5, r3
 800fc8a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fc8e:	e7dc      	b.n	800fc4a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800fc90:	f8bd 5000 	ldrh.w	r5, [sp]
 800fc94:	441d      	add	r5, r3
 800fc96:	b2ad      	uxth	r5, r5
 800fc98:	b22e      	sxth	r6, r5
 800fc9a:	f9bd 3000 	ldrsh.w	r3, [sp]
 800fc9e:	42b3      	cmp	r3, r6
 800fca0:	dacc      	bge.n	800fc3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800fca2:	6823      	ldr	r3, [r4, #0]
 800fca4:	4669      	mov	r1, sp
 800fca6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800fca8:	4620      	mov	r0, r4
 800fcaa:	4798      	blx	r3
 800fcac:	b940      	cbnz	r0, 800fcc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800fcae:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800fcb2:	2b01      	cmp	r3, #1
 800fcb4:	d004      	beq.n	800fcc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800fcb6:	3301      	adds	r3, #1
 800fcb8:	105b      	asrs	r3, r3, #1
 800fcba:	f8ad 3004 	strh.w	r3, [sp, #4]
 800fcbe:	e7f0      	b.n	800fca2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800fcc0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800fcc4:	f8bd 3000 	ldrh.w	r3, [sp]
 800fcc8:	4413      	add	r3, r2
 800fcca:	b29b      	uxth	r3, r3
 800fccc:	441a      	add	r2, r3
 800fcce:	b212      	sxth	r2, r2
 800fcd0:	4296      	cmp	r6, r2
 800fcd2:	f8ad 3000 	strh.w	r3, [sp]
 800fcd6:	dae0      	bge.n	800fc9a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800fcd8:	1aeb      	subs	r3, r5, r3
 800fcda:	f8ad 3004 	strh.w	r3, [sp, #4]
 800fcde:	e7dc      	b.n	800fc9a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800fce0:	200137b4 	.word	0x200137b4

0800fce4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800fce4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fce6:	6803      	ldr	r3, [r0, #0]
 800fce8:	4604      	mov	r4, r0
 800fcea:	4601      	mov	r1, r0
 800fcec:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800fcee:	4668      	mov	r0, sp
 800fcf0:	4798      	blx	r3
 800fcf2:	2100      	movs	r1, #0
 800fcf4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800fcf8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fcfc:	9102      	str	r1, [sp, #8]
 800fcfe:	4668      	mov	r0, sp
 800fd00:	a902      	add	r1, sp, #8
 800fd02:	f8ad 200c 	strh.w	r2, [sp, #12]
 800fd06:	f8ad 300e 	strh.w	r3, [sp, #14]
 800fd0a:	f7fe ff27 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 800fd0e:	6823      	ldr	r3, [r4, #0]
 800fd10:	4669      	mov	r1, sp
 800fd12:	691b      	ldr	r3, [r3, #16]
 800fd14:	4620      	mov	r0, r4
 800fd16:	4798      	blx	r3
 800fd18:	b004      	add	sp, #16
 800fd1a:	bd10      	pop	{r4, pc}

0800fd1c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800fd1c:	2101      	movs	r1, #1
 800fd1e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800fd22:	490b      	ldr	r1, [pc, #44]	; (800fd50 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800fd24:	6001      	str	r1, [r0, #0]
 800fd26:	2200      	movs	r2, #0
 800fd28:	21ff      	movs	r1, #255	; 0xff
 800fd2a:	8082      	strh	r2, [r0, #4]
 800fd2c:	80c2      	strh	r2, [r0, #6]
 800fd2e:	8102      	strh	r2, [r0, #8]
 800fd30:	8142      	strh	r2, [r0, #10]
 800fd32:	8182      	strh	r2, [r0, #12]
 800fd34:	81c2      	strh	r2, [r0, #14]
 800fd36:	8202      	strh	r2, [r0, #16]
 800fd38:	8242      	strh	r2, [r0, #18]
 800fd3a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fd3e:	61c2      	str	r2, [r0, #28]
 800fd40:	8402      	strh	r2, [r0, #32]
 800fd42:	8442      	strh	r2, [r0, #34]	; 0x22
 800fd44:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fd48:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800fd4c:	6282      	str	r2, [r0, #40]	; 0x28
 800fd4e:	4770      	bx	lr
 800fd50:	0802b1f8 	.word	0x0802b1f8

0800fd54 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 800fd54:	f101 0364 	add.w	r3, r1, #100	; 0x64
 800fd58:	4602      	mov	r2, r0
 800fd5a:	cb03      	ldmia	r3!, {r0, r1}
 800fd5c:	6010      	str	r0, [r2, #0]
 800fd5e:	6051      	str	r1, [r2, #4]
 800fd60:	4610      	mov	r0, r2
 800fd62:	4770      	bx	lr

0800fd64 <_ZN8touchgfx4LineD1Ev>:
 800fd64:	4770      	bx	lr

0800fd66 <_ZN8touchgfx4LineD0Ev>:
 800fd66:	b510      	push	{r4, lr}
 800fd68:	2170      	movs	r1, #112	; 0x70
 800fd6a:	4604      	mov	r4, r0
 800fd6c:	f016 fd67 	bl	802683e <_ZdlPvj>
 800fd70:	4620      	mov	r0, r4
 800fd72:	bd10      	pop	{r4, pc}

0800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800fd74:	b507      	push	{r0, r1, r2, lr}
 800fd76:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800fd7a:	ab01      	add	r3, sp, #4
 800fd7c:	6809      	ldr	r1, [r1, #0]
 800fd7e:	6800      	ldr	r0, [r0, #0]
 800fd80:	f005 fab4 	bl	80152ec <_ZN8touchgfx6muldivElllRl>
 800fd84:	b003      	add	sp, #12
 800fd86:	f85d fb04 	ldr.w	pc, [sp], #4

0800fd8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800fd8a:	6800      	ldr	r0, [r0, #0]
 800fd8c:	2800      	cmp	r0, #0
 800fd8e:	bfb9      	ittee	lt
 800fd90:	2320      	movlt	r3, #32
 800fd92:	fb90 f0f3 	sdivlt	r0, r0, r3
 800fd96:	301f      	addge	r0, #31
 800fd98:	1140      	asrge	r0, r0, #5
 800fd9a:	4770      	bx	lr

0800fd9c <_ZNK8touchgfx4Line17invalidateContentEv>:
 800fd9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fda0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800fda4:	b089      	sub	sp, #36	; 0x24
 800fda6:	4604      	mov	r4, r0
 800fda8:	b353      	cbz	r3, 800fe00 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 800fdaa:	6803      	ldr	r3, [r0, #0]
 800fdac:	4601      	mov	r1, r0
 800fdae:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800fdb0:	a802      	add	r0, sp, #8
 800fdb2:	4798      	blx	r3
 800fdb4:	2220      	movs	r2, #32
 800fdb6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 800fdba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800fdbc:	fb9a f0f2 	sdiv	r0, sl, r2
 800fdc0:	fb91 f5f2 	sdiv	r5, r1, r2
 800fdc4:	1b40      	subs	r0, r0, r5
 800fdc6:	2800      	cmp	r0, #0
 800fdc8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fdca:	fb93 f6f2 	sdiv	r6, r3, r2
 800fdce:	bfb8      	it	lt
 800fdd0:	4240      	neglt	r0, r0
 800fdd2:	0076      	lsls	r6, r6, #1
 800fdd4:	4286      	cmp	r6, r0
 800fdd6:	f8d4 b000 	ldr.w	fp, [r4]
 800fdda:	dc0c      	bgt.n	800fdf6 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 800fddc:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800fdde:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 800fde2:	fb95 f0f2 	sdiv	r0, r5, r2
 800fde6:	fb98 f7f2 	sdiv	r7, r8, r2
 800fdea:	1bc0      	subs	r0, r0, r7
 800fdec:	2800      	cmp	r0, #0
 800fdee:	bfb8      	it	lt
 800fdf0:	4240      	neglt	r0, r0
 800fdf2:	4286      	cmp	r6, r0
 800fdf4:	dd07      	ble.n	800fe06 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 800fdf6:	f8db 3010 	ldr.w	r3, [fp, #16]
 800fdfa:	a902      	add	r1, sp, #8
 800fdfc:	4620      	mov	r0, r4
 800fdfe:	4798      	blx	r3
 800fe00:	b009      	add	sp, #36	; 0x24
 800fe02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe06:	3301      	adds	r3, #1
 800fe08:	2002      	movs	r0, #2
 800fe0a:	f10d 0920 	add.w	r9, sp, #32
 800fe0e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800fe12:	4103      	asrs	r3, r0
 800fe14:	f849 3d08 	str.w	r3, [r9, #-8]!
 800fe18:	eb01 060a 	add.w	r6, r1, sl
 800fe1c:	eb08 0705 	add.w	r7, r8, r5
 800fe20:	fb96 f6f0 	sdiv	r6, r6, r0
 800fe24:	fb97 f7f0 	sdiv	r7, r7, r0
 800fe28:	4648      	mov	r0, r9
 800fe2a:	9101      	str	r1, [sp, #4]
 800fe2c:	b236      	sxth	r6, r6
 800fe2e:	b23f      	sxth	r7, r7
 800fe30:	fb96 f6f2 	sdiv	r6, r6, r2
 800fe34:	fb97 f7f2 	sdiv	r7, r7, r2
 800fe38:	f7ff ffa7 	bl	800fd8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800fe3c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fe40:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800fe44:	9901      	ldr	r1, [sp, #4]
 800fe46:	4293      	cmp	r3, r2
 800fe48:	fa1f fe87 	uxth.w	lr, r7
 800fe4c:	fa1f fc86 	uxth.w	ip, r6
 800fe50:	eba1 0a0a 	sub.w	sl, r1, sl
 800fe54:	b280      	uxth	r0, r0
 800fe56:	da54      	bge.n	800ff02 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 800fe58:	ebac 0100 	sub.w	r1, ip, r0
 800fe5c:	b289      	uxth	r1, r1
 800fe5e:	4460      	add	r0, ip
 800fe60:	f1ba 0f00 	cmp.w	sl, #0
 800fe64:	b20e      	sxth	r6, r1
 800fe66:	b280      	uxth	r0, r0
 800fe68:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800fe6c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 800fe70:	da29      	bge.n	800fec6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 800fe72:	eba8 0505 	sub.w	r5, r8, r5
 800fe76:	2d00      	cmp	r5, #0
 800fe78:	da2a      	bge.n	800fed0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 800fe7a:	fa1f f88a 	uxth.w	r8, sl
 800fe7e:	eba0 0008 	sub.w	r0, r0, r8
 800fe82:	fa1f f58c 	uxth.w	r5, ip
 800fe86:	4443      	add	r3, r8
 800fe88:	f8ad 0014 	strh.w	r0, [sp, #20]
 800fe8c:	1a59      	subs	r1, r3, r1
 800fe8e:	ebae 0005 	sub.w	r0, lr, r5
 800fe92:	f8ad a010 	strh.w	sl, [sp, #16]
 800fe96:	f8ad c012 	strh.w	ip, [sp, #18]
 800fe9a:	f8ad 0016 	strh.w	r0, [sp, #22]
 800fe9e:	f8ad 6018 	strh.w	r6, [sp, #24]
 800fea2:	f8ad 701a 	strh.w	r7, [sp, #26]
 800fea6:	f8ad 101c 	strh.w	r1, [sp, #28]
 800feaa:	442a      	add	r2, r5
 800feac:	eba2 0e0e 	sub.w	lr, r2, lr
 800feb0:	f8ad e01e 	strh.w	lr, [sp, #30]
 800feb4:	f8db 3010 	ldr.w	r3, [fp, #16]
 800feb8:	a904      	add	r1, sp, #16
 800feba:	4620      	mov	r0, r4
 800febc:	4798      	blx	r3
 800febe:	6823      	ldr	r3, [r4, #0]
 800fec0:	4649      	mov	r1, r9
 800fec2:	691b      	ldr	r3, [r3, #16]
 800fec4:	e79a      	b.n	800fdfc <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 800fec6:	d003      	beq.n	800fed0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 800fec8:	eba8 0505 	sub.w	r5, r8, r5
 800fecc:	2d00      	cmp	r5, #0
 800fece:	dcd4      	bgt.n	800fe7a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 800fed0:	fa1f f88a 	uxth.w	r8, sl
 800fed4:	4443      	add	r3, r8
 800fed6:	fa1f f58c 	uxth.w	r5, ip
 800feda:	1a59      	subs	r1, r3, r1
 800fedc:	eba0 0008 	sub.w	r0, r0, r8
 800fee0:	ebae 0305 	sub.w	r3, lr, r5
 800fee4:	f8ad 6010 	strh.w	r6, [sp, #16]
 800fee8:	f8ad c012 	strh.w	ip, [sp, #18]
 800feec:	f8ad 1014 	strh.w	r1, [sp, #20]
 800fef0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800fef4:	f8ad a018 	strh.w	sl, [sp, #24]
 800fef8:	f8ad 701a 	strh.w	r7, [sp, #26]
 800fefc:	f8ad 001c 	strh.w	r0, [sp, #28]
 800ff00:	e7d3      	b.n	800feaa <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 800ff02:	ebae 0100 	sub.w	r1, lr, r0
 800ff06:	b289      	uxth	r1, r1
 800ff08:	4470      	add	r0, lr
 800ff0a:	f1ba 0f00 	cmp.w	sl, #0
 800ff0e:	b20f      	sxth	r7, r1
 800ff10:	b280      	uxth	r0, r0
 800ff12:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 800ff16:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 800ff1a:	da20      	bge.n	800ff5e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 800ff1c:	eba8 0505 	sub.w	r5, r8, r5
 800ff20:	2d00      	cmp	r5, #0
 800ff22:	da21      	bge.n	800ff68 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 800ff24:	fa1f f88e 	uxth.w	r8, lr
 800ff28:	fa1f f58a 	uxth.w	r5, sl
 800ff2c:	4443      	add	r3, r8
 800ff2e:	442a      	add	r2, r5
 800ff30:	f8ad e010 	strh.w	lr, [sp, #16]
 800ff34:	1b40      	subs	r0, r0, r5
 800ff36:	ebac 0e08 	sub.w	lr, ip, r8
 800ff3a:	1a51      	subs	r1, r2, r1
 800ff3c:	eba3 0c0c 	sub.w	ip, r3, ip
 800ff40:	f8ad a012 	strh.w	sl, [sp, #18]
 800ff44:	f8ad e014 	strh.w	lr, [sp, #20]
 800ff48:	f8ad 0016 	strh.w	r0, [sp, #22]
 800ff4c:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ff50:	f8ad 701a 	strh.w	r7, [sp, #26]
 800ff54:	f8ad c01c 	strh.w	ip, [sp, #28]
 800ff58:	f8ad 101e 	strh.w	r1, [sp, #30]
 800ff5c:	e7aa      	b.n	800feb4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 800ff5e:	d003      	beq.n	800ff68 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 800ff60:	eba8 0505 	sub.w	r5, r8, r5
 800ff64:	2d00      	cmp	r5, #0
 800ff66:	dcdd      	bgt.n	800ff24 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 800ff68:	fa1f f58e 	uxth.w	r5, lr
 800ff6c:	fa1f f88a 	uxth.w	r8, sl
 800ff70:	4442      	add	r2, r8
 800ff72:	442b      	add	r3, r5
 800ff74:	f8ad 7012 	strh.w	r7, [sp, #18]
 800ff78:	1a51      	subs	r1, r2, r1
 800ff7a:	ebac 0705 	sub.w	r7, ip, r5
 800ff7e:	eba0 0008 	sub.w	r0, r0, r8
 800ff82:	eba3 0c0c 	sub.w	ip, r3, ip
 800ff86:	f8ad e010 	strh.w	lr, [sp, #16]
 800ff8a:	f8ad 7014 	strh.w	r7, [sp, #20]
 800ff8e:	f8ad 1016 	strh.w	r1, [sp, #22]
 800ff92:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ff96:	f8ad a01a 	strh.w	sl, [sp, #26]
 800ff9a:	f8ad c01c 	strh.w	ip, [sp, #28]
 800ff9e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ffa2:	e787      	b.n	800feb4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0800ffa4 <_ZN8touchgfx7CWRUtil4sineEi>:
 800ffa4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800ffa8:	fb90 f2f3 	sdiv	r2, r0, r3
 800ffac:	fb02 0013 	mls	r0, r2, r3, r0
 800ffb0:	2800      	cmp	r0, #0
 800ffb2:	bfb8      	it	lt
 800ffb4:	18c0      	addlt	r0, r0, r3
 800ffb6:	285a      	cmp	r0, #90	; 0x5a
 800ffb8:	4b09      	ldr	r3, [pc, #36]	; (800ffe0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800ffba:	dc02      	bgt.n	800ffc2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800ffbc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800ffc0:	4770      	bx	lr
 800ffc2:	28b4      	cmp	r0, #180	; 0xb4
 800ffc4:	dc02      	bgt.n	800ffcc <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800ffc6:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800ffca:	e7f7      	b.n	800ffbc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800ffcc:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800ffd0:	bfd4      	ite	le
 800ffd2:	38b4      	suble	r0, #180	; 0xb4
 800ffd4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800ffd8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800ffdc:	4240      	negs	r0, r0
 800ffde:	4770      	bx	lr
 800ffe0:	0802b2c4 	.word	0x0802b2c4

0800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800ffe4:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 800ffe8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ffea:	fb90 f2f3 	sdiv	r2, r0, r3
 800ffee:	fb02 0013 	mls	r0, r2, r3, r0
 800fff2:	2800      	cmp	r0, #0
 800fff4:	bfb8      	it	lt
 800fff6:	18c0      	addlt	r0, r0, r3
 800fff8:	1144      	asrs	r4, r0, #5
 800fffa:	f000 061f 	and.w	r6, r0, #31
 800fffe:	4620      	mov	r0, r4
 8010000:	f7ff ffd0 	bl	800ffa4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010004:	4605      	mov	r5, r0
 8010006:	b90e      	cbnz	r6, 801000c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8010008:	b002      	add	sp, #8
 801000a:	bd70      	pop	{r4, r5, r6, pc}
 801000c:	1c60      	adds	r0, r4, #1
 801000e:	f7ff ffc9 	bl	800ffa4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010012:	ab01      	add	r3, sp, #4
 8010014:	2220      	movs	r2, #32
 8010016:	4631      	mov	r1, r6
 8010018:	1b40      	subs	r0, r0, r5
 801001a:	f005 f967 	bl	80152ec <_ZN8touchgfx6muldivElllRl>
 801001e:	4428      	add	r0, r5
 8010020:	e7f2      	b.n	8010008 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08010022 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8010022:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8010026:	bf2c      	ite	cs
 8010028:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 801002c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8010030:	2300      	movs	r3, #0
 8010032:	1899      	adds	r1, r3, r2
 8010034:	4288      	cmp	r0, r1
 8010036:	bf24      	itt	cs
 8010038:	1853      	addcs	r3, r2, r1
 801003a:	1a40      	subcs	r0, r0, r1
 801003c:	0892      	lsrs	r2, r2, #2
 801003e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8010042:	d1f6      	bne.n	8010032 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8010044:	4618      	mov	r0, r3
 8010046:	4770      	bx	lr

08010048 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8010048:	b510      	push	{r4, lr}
 801004a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801004e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8010052:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8010056:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801005a:	13a4      	asrs	r4, r4, #14
 801005c:	139b      	asrs	r3, r3, #14
 801005e:	429c      	cmp	r4, r3
 8010060:	bfb8      	it	lt
 8010062:	461c      	movlt	r4, r3
 8010064:	2c01      	cmp	r4, #1
 8010066:	dd07      	ble.n	8010078 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8010068:	fb91 f1f4 	sdiv	r1, r1, r4
 801006c:	fb90 f0f4 	sdiv	r0, r0, r4
 8010070:	f7ff ffea 	bl	8010048 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010074:	4360      	muls	r0, r4
 8010076:	bd10      	pop	{r4, pc}
 8010078:	4340      	muls	r0, r0
 801007a:	fb01 0001 	mla	r0, r1, r1, r0
 801007e:	f7ff ffd0 	bl	8010022 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010082:	e7f8      	b.n	8010076 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08010084 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8010084:	2800      	cmp	r0, #0
 8010086:	b508      	push	{r3, lr}
 8010088:	da05      	bge.n	8010096 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801008a:	4240      	negs	r0, r0
 801008c:	f7ff fffa 	bl	8010084 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010090:	4240      	negs	r0, r0
 8010092:	b240      	sxtb	r0, r0
 8010094:	bd08      	pop	{r3, pc}
 8010096:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 801009a:	dc11      	bgt.n	80100c0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801009c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80100a0:	dd09      	ble.n	80100b6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 80100a2:	4340      	muls	r0, r0
 80100a4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80100a8:	f7ff ffbb 	bl	8010022 <_ZN8touchgfx7CWRUtil5isqrtEm>
 80100ac:	f7ff ffea 	bl	8010084 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80100b0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80100b4:	e7ed      	b.n	8010092 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80100b6:	3003      	adds	r0, #3
 80100b8:	10c0      	asrs	r0, r0, #3
 80100ba:	4b02      	ldr	r3, [pc, #8]	; (80100c4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80100bc:	5618      	ldrsb	r0, [r3, r0]
 80100be:	e7e9      	b.n	8010094 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80100c0:	2000      	movs	r0, #0
 80100c2:	e7e7      	b.n	8010094 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80100c4:	0802b268 	.word	0x0802b268

080100c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 80100c8:	4281      	cmp	r1, r0
 80100ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80100cc:	460c      	mov	r4, r1
 80100ce:	4615      	mov	r5, r2
 80100d0:	dd07      	ble.n	80100e2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80100d2:	4601      	mov	r1, r0
 80100d4:	4620      	mov	r0, r4
 80100d6:	f7ff fff7 	bl	80100c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80100da:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80100de:	b003      	add	sp, #12
 80100e0:	bd30      	pop	{r4, r5, pc}
 80100e2:	f7ff ffb1 	bl	8010048 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80100e6:	6028      	str	r0, [r5, #0]
 80100e8:	2800      	cmp	r0, #0
 80100ea:	d0f8      	beq.n	80100de <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80100ec:	4602      	mov	r2, r0
 80100ee:	ab01      	add	r3, sp, #4
 80100f0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80100f4:	4620      	mov	r0, r4
 80100f6:	f005 f8f9 	bl	80152ec <_ZN8touchgfx6muldivElllRl>
 80100fa:	f7ff ffc3 	bl	8010084 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80100fe:	e7ee      	b.n	80100de <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08010100 <_ZN8touchgfx4LineC1Ev>:
 8010100:	b510      	push	{r4, lr}
 8010102:	4604      	mov	r4, r0
 8010104:	f7ff fe0a 	bl	800fd1c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8010108:	4b0c      	ldr	r3, [pc, #48]	; (801013c <_ZN8touchgfx4LineC1Ev+0x3c>)
 801010a:	6023      	str	r3, [r4, #0]
 801010c:	2220      	movs	r2, #32
 801010e:	2300      	movs	r3, #0
 8010110:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010112:	2212      	movs	r2, #18
 8010114:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8010118:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801011c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010120:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8010124:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8010128:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 801012c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8010130:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8010134:	66e2      	str	r2, [r4, #108]	; 0x6c
 8010136:	60a3      	str	r3, [r4, #8]
 8010138:	4620      	mov	r0, r4
 801013a:	bd10      	pop	{r4, pc}
 801013c:	0802b384 	.word	0x0802b384

08010140 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8010140:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010144:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8010146:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010148:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801014a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801014c:	1aff      	subs	r7, r7, r3
 801014e:	4604      	mov	r4, r0
 8010150:	eba5 0502 	sub.w	r5, r5, r2
 8010154:	d142      	bne.n	80101dc <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8010156:	b955      	cbnz	r5, 801016e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8010158:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801015c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8010160:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8010164:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8010168:	b002      	add	sp, #8
 801016a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801016e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8010172:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8010176:	4629      	mov	r1, r5
 8010178:	4642      	mov	r2, r8
 801017a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801017c:	f005 f8d5 	bl	801532a <_ZN8touchgfx6muldivElll>
 8010180:	2502      	movs	r5, #2
 8010182:	4642      	mov	r2, r8
 8010184:	fb90 f6f5 	sdiv	r6, r0, r5
 8010188:	4639      	mov	r1, r7
 801018a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801018c:	f005 f8cd 	bl	801532a <_ZN8touchgfx6muldivElll>
 8010190:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8010194:	fb90 f5f5 	sdiv	r5, r0, r5
 8010198:	f1b9 0f00 	cmp.w	r9, #0
 801019c:	d067      	beq.n	801026e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801019e:	f1b9 0f02 	cmp.w	r9, #2
 80101a2:	d878      	bhi.n	8010296 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80101a4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80101a6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80101a8:	1b93      	subs	r3, r2, r6
 80101aa:	1b5b      	subs	r3, r3, r5
 80101ac:	6463      	str	r3, [r4, #68]	; 0x44
 80101ae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80101b0:	18e9      	adds	r1, r5, r3
 80101b2:	1b89      	subs	r1, r1, r6
 80101b4:	6561      	str	r1, [r4, #84]	; 0x54
 80101b6:	1b81      	subs	r1, r0, r6
 80101b8:	4429      	add	r1, r5
 80101ba:	64a1      	str	r1, [r4, #72]	; 0x48
 80101bc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80101be:	4430      	add	r0, r6
 80101c0:	186f      	adds	r7, r5, r1
 80101c2:	4432      	add	r2, r6
 80101c4:	1b49      	subs	r1, r1, r5
 80101c6:	4437      	add	r7, r6
 80101c8:	4428      	add	r0, r5
 80101ca:	4431      	add	r1, r6
 80101cc:	1b52      	subs	r2, r2, r5
 80101ce:	1b5b      	subs	r3, r3, r5
 80101d0:	65a7      	str	r7, [r4, #88]	; 0x58
 80101d2:	64e0      	str	r0, [r4, #76]	; 0x4c
 80101d4:	65e1      	str	r1, [r4, #92]	; 0x5c
 80101d6:	6522      	str	r2, [r4, #80]	; 0x50
 80101d8:	1b9b      	subs	r3, r3, r6
 80101da:	e05b      	b.n	8010294 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80101dc:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80101e0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80101e4:	2d00      	cmp	r5, #0
 80101e6:	d0c6      	beq.n	8010176 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80101e8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80101ec:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80101f0:	fb93 f2f8 	sdiv	r2, r3, r8
 80101f4:	fb08 3312 	mls	r3, r8, r2, r3
 80101f8:	b353      	cbz	r3, 8010250 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80101fa:	fb98 f2f3 	sdiv	r2, r8, r3
 80101fe:	fb03 8812 	mls	r8, r3, r2, r8
 8010202:	f1b8 0f00 	cmp.w	r8, #0
 8010206:	d1f3      	bne.n	80101f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8010208:	2b01      	cmp	r3, #1
 801020a:	bf1c      	itt	ne
 801020c:	fb95 f5f3 	sdivne	r5, r5, r3
 8010210:	fb97 f7f3 	sdivne	r7, r7, r3
 8010214:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8010218:	f24b 5104 	movw	r1, #46340	; 0xb504
 801021c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8010220:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8010224:	428b      	cmp	r3, r1
 8010226:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801022a:	4608      	mov	r0, r1
 801022c:	dd01      	ble.n	8010232 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801022e:	428a      	cmp	r2, r1
 8010230:	dc10      	bgt.n	8010254 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8010232:	fb90 f3f3 	sdiv	r3, r0, r3
 8010236:	fb90 f2f2 	sdiv	r2, r0, r2
 801023a:	4293      	cmp	r3, r2
 801023c:	bfa8      	it	ge
 801023e:	4613      	movge	r3, r2
 8010240:	435f      	muls	r7, r3
 8010242:	435d      	muls	r5, r3
 8010244:	4629      	mov	r1, r5
 8010246:	4638      	mov	r0, r7
 8010248:	f7ff fefe 	bl	8010048 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801024c:	4680      	mov	r8, r0
 801024e:	e792      	b.n	8010176 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8010250:	4643      	mov	r3, r8
 8010252:	e7d9      	b.n	8010208 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8010254:	fb93 f3f1 	sdiv	r3, r3, r1
 8010258:	fb92 f2f1 	sdiv	r2, r2, r1
 801025c:	4293      	cmp	r3, r2
 801025e:	bfcc      	ite	gt
 8010260:	3301      	addgt	r3, #1
 8010262:	1c53      	addle	r3, r2, #1
 8010264:	fb97 f7f3 	sdiv	r7, r7, r3
 8010268:	fb95 f5f3 	sdiv	r5, r5, r3
 801026c:	e7ea      	b.n	8010244 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801026e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010270:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010272:	1b93      	subs	r3, r2, r6
 8010274:	6463      	str	r3, [r4, #68]	; 0x44
 8010276:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010278:	18e9      	adds	r1, r5, r3
 801027a:	6561      	str	r1, [r4, #84]	; 0x54
 801027c:	1b81      	subs	r1, r0, r6
 801027e:	64a1      	str	r1, [r4, #72]	; 0x48
 8010280:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8010282:	4430      	add	r0, r6
 8010284:	186f      	adds	r7, r5, r1
 8010286:	4432      	add	r2, r6
 8010288:	1b49      	subs	r1, r1, r5
 801028a:	65a7      	str	r7, [r4, #88]	; 0x58
 801028c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801028e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010290:	6522      	str	r2, [r4, #80]	; 0x50
 8010292:	1b5b      	subs	r3, r3, r5
 8010294:	6623      	str	r3, [r4, #96]	; 0x60
 8010296:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8010298:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801029a:	9200      	str	r2, [sp, #0]
 801029c:	9301      	str	r3, [sp, #4]
 801029e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80102a2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80102a6:	680f      	ldr	r7, [r1, #0]
 80102a8:	9800      	ldr	r0, [sp, #0]
 80102aa:	42ba      	cmp	r2, r7
 80102ac:	bfa8      	it	ge
 80102ae:	463a      	movge	r2, r7
 80102b0:	4287      	cmp	r7, r0
 80102b2:	bfc8      	it	gt
 80102b4:	9700      	strgt	r7, [sp, #0]
 80102b6:	690f      	ldr	r7, [r1, #16]
 80102b8:	9801      	ldr	r0, [sp, #4]
 80102ba:	42bb      	cmp	r3, r7
 80102bc:	bfa8      	it	ge
 80102be:	463b      	movge	r3, r7
 80102c0:	3104      	adds	r1, #4
 80102c2:	4287      	cmp	r7, r0
 80102c4:	bfc8      	it	gt
 80102c6:	9701      	strgt	r7, [sp, #4]
 80102c8:	458c      	cmp	ip, r1
 80102ca:	d1ec      	bne.n	80102a6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80102cc:	4668      	mov	r0, sp
 80102ce:	2720      	movs	r7, #32
 80102d0:	fb92 f8f7 	sdiv	r8, r2, r7
 80102d4:	fb93 f7f7 	sdiv	r7, r3, r7
 80102d8:	f7ff fd57 	bl	800fd8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80102dc:	4682      	mov	sl, r0
 80102de:	a801      	add	r0, sp, #4
 80102e0:	f7ff fd53 	bl	800fd8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80102e4:	ebaa 0208 	sub.w	r2, sl, r8
 80102e8:	1bc0      	subs	r0, r0, r7
 80102ea:	f1b9 0f01 	cmp.w	r9, #1
 80102ee:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80102f2:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80102f6:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80102fa:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80102fe:	f47f af33 	bne.w	8010168 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8010302:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8010304:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010306:	1b83      	subs	r3, r0, r6
 8010308:	6463      	str	r3, [r4, #68]	; 0x44
 801030a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801030c:	18ea      	adds	r2, r5, r3
 801030e:	6562      	str	r2, [r4, #84]	; 0x54
 8010310:	1b8a      	subs	r2, r1, r6
 8010312:	64a2      	str	r2, [r4, #72]	; 0x48
 8010314:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010316:	4431      	add	r1, r6
 8010318:	18af      	adds	r7, r5, r2
 801031a:	4406      	add	r6, r0
 801031c:	1b52      	subs	r2, r2, r5
 801031e:	1b5d      	subs	r5, r3, r5
 8010320:	65a7      	str	r7, [r4, #88]	; 0x58
 8010322:	64e1      	str	r1, [r4, #76]	; 0x4c
 8010324:	65e2      	str	r2, [r4, #92]	; 0x5c
 8010326:	6526      	str	r6, [r4, #80]	; 0x50
 8010328:	6625      	str	r5, [r4, #96]	; 0x60
 801032a:	e71d      	b.n	8010168 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801032c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801032c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801032e:	428b      	cmp	r3, r1
 8010330:	d102      	bne.n	8010338 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8010332:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8010334:	4293      	cmp	r3, r2
 8010336:	d003      	beq.n	8010340 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8010338:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801033c:	f7ff bf00 	b.w	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8010340:	4770      	bx	lr

08010342 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8010342:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8010344:	428b      	cmp	r3, r1
 8010346:	d102      	bne.n	801034e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8010348:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801034a:	4293      	cmp	r3, r2
 801034c:	d003      	beq.n	8010356 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801034e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8010352:	f7ff bef5 	b.w	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8010356:	4770      	bx	lr

08010358 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8010358:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801035c:	f7ff bef0 	b.w	8010140 <_ZN8touchgfx4Line17updateCachedShapeEv>

08010360 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8010360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010364:	b0a0      	sub	sp, #128	; 0x80
 8010366:	4604      	mov	r4, r0
 8010368:	460a      	mov	r2, r1
 801036a:	4601      	mov	r1, r0
 801036c:	a804      	add	r0, sp, #16
 801036e:	f014 fc47 	bl	8024c00 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8010372:	2300      	movs	r3, #0
 8010374:	9301      	str	r3, [sp, #4]
 8010376:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801037a:	2b01      	cmp	r3, #1
 801037c:	d17c      	bne.n	8010478 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801037e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010380:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010382:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8010384:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8010386:	1ac0      	subs	r0, r0, r3
 8010388:	eba1 0102 	sub.w	r1, r1, r2
 801038c:	d437      	bmi.n	80103fe <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801038e:	2900      	cmp	r1, #0
 8010390:	aa01      	add	r2, sp, #4
 8010392:	db2e      	blt.n	80103f2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8010394:	f7ff fe98 	bl	80100c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010398:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801039c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801039e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80103a0:	a804      	add	r0, sp, #16
 80103a2:	f014 fdad 	bl	8024f00 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80103a6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80103a8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80103aa:	a804      	add	r0, sp, #16
 80103ac:	f014 fdf5 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80103b0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80103b2:	2db3      	cmp	r5, #179	; 0xb3
 80103b4:	dc33      	bgt.n	801041e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80103b6:	eba6 0805 	sub.w	r8, r6, r5
 80103ba:	4640      	mov	r0, r8
 80103bc:	f7ff fdf2 	bl	800ffa4 <_ZN8touchgfx7CWRUtil4sineEi>
 80103c0:	a902      	add	r1, sp, #8
 80103c2:	9002      	str	r0, [sp, #8]
 80103c4:	a801      	add	r0, sp, #4
 80103c6:	f7ff fcd5 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80103ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80103cc:	1847      	adds	r7, r0, r1
 80103ce:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80103d2:	f7ff fde7 	bl	800ffa4 <_ZN8touchgfx7CWRUtil4sineEi>
 80103d6:	a903      	add	r1, sp, #12
 80103d8:	9003      	str	r0, [sp, #12]
 80103da:	a801      	add	r0, sp, #4
 80103dc:	f7ff fcca 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80103e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80103e2:	4639      	mov	r1, r7
 80103e4:	1a12      	subs	r2, r2, r0
 80103e6:	a804      	add	r0, sp, #16
 80103e8:	f014 fdd7 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80103ec:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80103ee:	441d      	add	r5, r3
 80103f0:	e7df      	b.n	80103b2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80103f2:	4249      	negs	r1, r1
 80103f4:	f7ff fe68 	bl	80100c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80103f8:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 80103fc:	e7ce      	b.n	801039c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80103fe:	2900      	cmp	r1, #0
 8010400:	f1c0 0000 	rsb	r0, r0, #0
 8010404:	aa01      	add	r2, sp, #4
 8010406:	db04      	blt.n	8010412 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8010408:	f7ff fe5e 	bl	80100c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801040c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8010410:	e7c4      	b.n	801039c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8010412:	4249      	negs	r1, r1
 8010414:	f7ff fe58 	bl	80100c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010418:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801041c:	e7be      	b.n	801039c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801041e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8010420:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8010422:	a804      	add	r0, sp, #16
 8010424:	f014 fdb9 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010428:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801042a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801042c:	a804      	add	r0, sp, #16
 801042e:	f014 fdb4 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010432:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8010434:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8010438:	2d00      	cmp	r5, #0
 801043a:	dd31      	ble.n	80104a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801043c:	eb05 0806 	add.w	r8, r5, r6
 8010440:	4640      	mov	r0, r8
 8010442:	f7ff fdaf 	bl	800ffa4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010446:	a902      	add	r1, sp, #8
 8010448:	9002      	str	r0, [sp, #8]
 801044a:	a801      	add	r0, sp, #4
 801044c:	f7ff fc92 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010450:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8010452:	1847      	adds	r7, r0, r1
 8010454:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8010458:	f7ff fda4 	bl	800ffa4 <_ZN8touchgfx7CWRUtil4sineEi>
 801045c:	a903      	add	r1, sp, #12
 801045e:	9003      	str	r0, [sp, #12]
 8010460:	a801      	add	r0, sp, #4
 8010462:	f7ff fc87 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010466:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8010468:	4639      	mov	r1, r7
 801046a:	1a12      	subs	r2, r2, r0
 801046c:	a804      	add	r0, sp, #16
 801046e:	f014 fd94 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010472:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8010474:	1aed      	subs	r5, r5, r3
 8010476:	e7df      	b.n	8010438 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8010478:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801047a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801047c:	a804      	add	r0, sp, #16
 801047e:	f014 fd3f 	bl	8024f00 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8010482:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8010484:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8010486:	a804      	add	r0, sp, #16
 8010488:	f014 fd87 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801048c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801048e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8010490:	a804      	add	r0, sp, #16
 8010492:	f014 fd82 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010496:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8010498:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801049a:	a804      	add	r0, sp, #16
 801049c:	f014 fd7d 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80104a0:	21ff      	movs	r1, #255	; 0xff
 80104a2:	a804      	add	r0, sp, #16
 80104a4:	f014 fc68 	bl	8024d78 <_ZN8touchgfx6Canvas6renderEh>
 80104a8:	4b04      	ldr	r3, [pc, #16]	; (80104bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80104aa:	9304      	str	r3, [sp, #16]
 80104ac:	4604      	mov	r4, r0
 80104ae:	a80c      	add	r0, sp, #48	; 0x30
 80104b0:	f001 f8cc 	bl	801164c <_ZN8touchgfx7OutlineD1Ev>
 80104b4:	4620      	mov	r0, r4
 80104b6:	b020      	add	sp, #128	; 0x80
 80104b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80104bc:	0802bbac 	.word	0x0802bbac

080104c0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80104c0:	2000      	movs	r0, #0
 80104c2:	4770      	bx	lr

080104c4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80104c4:	4b07      	ldr	r3, [pc, #28]	; (80104e4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80104c6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80104c8:	881b      	ldrh	r3, [r3, #0]
 80104ca:	4293      	cmp	r3, r2
 80104cc:	bf81      	itttt	hi
 80104ce:	4b06      	ldrhi	r3, [pc, #24]	; (80104e8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80104d0:	681b      	ldrhi	r3, [r3, #0]
 80104d2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80104d6:	7858      	ldrbhi	r0, [r3, #1]
 80104d8:	bf8c      	ite	hi
 80104da:	f000 0003 	andhi.w	r0, r0, #3
 80104de:	2000      	movls	r0, #0
 80104e0:	4770      	bx	lr
 80104e2:	bf00      	nop
 80104e4:	20013818 	.word	0x20013818
 80104e8:	20013814 	.word	0x20013814

080104ec <_ZN8touchgfx8TextAreaD1Ev>:
 80104ec:	4770      	bx	lr
	...

080104f0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80104f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80104f4:	4b10      	ldr	r3, [pc, #64]	; (8010538 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80104f6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80104f8:	881b      	ldrh	r3, [r3, #0]
 80104fa:	428b      	cmp	r3, r1
 80104fc:	4604      	mov	r4, r0
 80104fe:	d918      	bls.n	8010532 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8010500:	6803      	ldr	r3, [r0, #0]
 8010502:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8010504:	4b0d      	ldr	r3, [pc, #52]	; (801053c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8010506:	6818      	ldr	r0, [r3, #0]
 8010508:	f7f6 fd58 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 801050c:	6823      	ldr	r3, [r4, #0]
 801050e:	4606      	mov	r6, r0
 8010510:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010512:	4620      	mov	r0, r4
 8010514:	4798      	blx	r3
 8010516:	6823      	ldr	r3, [r4, #0]
 8010518:	4607      	mov	r7, r0
 801051a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801051e:	4620      	mov	r0, r4
 8010520:	4798      	blx	r3
 8010522:	463a      	mov	r2, r7
 8010524:	4603      	mov	r3, r0
 8010526:	4631      	mov	r1, r6
 8010528:	4620      	mov	r0, r4
 801052a:	46ac      	mov	ip, r5
 801052c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010530:	4760      	bx	ip
 8010532:	2000      	movs	r0, #0
 8010534:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010538:	20013818 	.word	0x20013818
 801053c:	20013820 	.word	0x20013820

08010540 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8010540:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010544:	4b17      	ldr	r3, [pc, #92]	; (80105a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8010546:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010548:	881b      	ldrh	r3, [r3, #0]
 801054a:	428b      	cmp	r3, r1
 801054c:	4604      	mov	r4, r0
 801054e:	d926      	bls.n	801059e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8010550:	4b15      	ldr	r3, [pc, #84]	; (80105a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8010552:	681b      	ldr	r3, [r3, #0]
 8010554:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8010558:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801055c:	4b13      	ldr	r3, [pc, #76]	; (80105ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801055e:	7855      	ldrb	r5, [r2, #1]
 8010560:	681b      	ldr	r3, [r3, #0]
 8010562:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8010566:	6833      	ldr	r3, [r6, #0]
 8010568:	69df      	ldr	r7, [r3, #28]
 801056a:	4b11      	ldr	r3, [pc, #68]	; (80105b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801056c:	6818      	ldr	r0, [r3, #0]
 801056e:	f7f6 fd25 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8010572:	6823      	ldr	r3, [r4, #0]
 8010574:	4680      	mov	r8, r0
 8010576:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010578:	4620      	mov	r0, r4
 801057a:	4798      	blx	r3
 801057c:	6823      	ldr	r3, [r4, #0]
 801057e:	4681      	mov	r9, r0
 8010580:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010584:	4620      	mov	r0, r4
 8010586:	4798      	blx	r3
 8010588:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801058c:	9000      	str	r0, [sp, #0]
 801058e:	464b      	mov	r3, r9
 8010590:	4642      	mov	r2, r8
 8010592:	4629      	mov	r1, r5
 8010594:	4630      	mov	r0, r6
 8010596:	47b8      	blx	r7
 8010598:	b003      	add	sp, #12
 801059a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801059e:	2000      	movs	r0, #0
 80105a0:	e7fa      	b.n	8010598 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80105a2:	bf00      	nop
 80105a4:	20013818 	.word	0x20013818
 80105a8:	20013814 	.word	0x20013814
 80105ac:	2001381c 	.word	0x2001381c
 80105b0:	20013820 	.word	0x20013820

080105b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80105b4:	b40e      	push	{r1, r2, r3}
 80105b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80105ba:	4b2f      	ldr	r3, [pc, #188]	; (8010678 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80105bc:	881a      	ldrh	r2, [r3, #0]
 80105be:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80105c0:	429a      	cmp	r2, r3
 80105c2:	b09d      	sub	sp, #116	; 0x74
 80105c4:	4604      	mov	r4, r0
 80105c6:	d954      	bls.n	8010672 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80105c8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801067c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80105cc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8010680 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80105d0:	aa26      	add	r2, sp, #152	; 0x98
 80105d2:	9202      	str	r2, [sp, #8]
 80105d4:	f8d9 2000 	ldr.w	r2, [r9]
 80105d8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80105dc:	f8d8 3000 	ldr.w	r3, [r8]
 80105e0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80105e4:	682b      	ldr	r3, [r5, #0]
 80105e6:	4628      	mov	r0, r5
 80105e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80105ea:	4798      	blx	r3
 80105ec:	b207      	sxth	r7, r0
 80105ee:	4606      	mov	r6, r0
 80105f0:	a803      	add	r0, sp, #12
 80105f2:	f005 fa57 	bl	8015aa4 <_ZN8touchgfx12TextProviderC1Ev>
 80105f6:	682b      	ldr	r3, [r5, #0]
 80105f8:	4628      	mov	r0, r5
 80105fa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80105fc:	4798      	blx	r3
 80105fe:	682b      	ldr	r3, [r5, #0]
 8010600:	4682      	mov	sl, r0
 8010602:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010604:	4628      	mov	r0, r5
 8010606:	4798      	blx	r3
 8010608:	4653      	mov	r3, sl
 801060a:	9000      	str	r0, [sp, #0]
 801060c:	9a02      	ldr	r2, [sp, #8]
 801060e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8010610:	a803      	add	r0, sp, #12
 8010612:	f005 faa2 	bl	8015b5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010616:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010618:	f8d9 3000 	ldr.w	r3, [r9]
 801061c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8010620:	8925      	ldrh	r5, [r4, #8]
 8010622:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8010626:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801062a:	eba5 050c 	sub.w	r5, r5, ip
 801062e:	784a      	ldrb	r2, [r1, #1]
 8010630:	f8d8 3000 	ldr.w	r3, [r8]
 8010634:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8010638:	b22d      	sxth	r5, r5
 801063a:	9500      	str	r5, [sp, #0]
 801063c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8010640:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8010644:	a803      	add	r0, sp, #12
 8010646:	f002 feed 	bl	8013424 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801064a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801064e:	18b9      	adds	r1, r7, r2
 8010650:	2900      	cmp	r1, #0
 8010652:	b203      	sxth	r3, r0
 8010654:	dd0b      	ble.n	801066e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8010656:	3b01      	subs	r3, #1
 8010658:	fb13 f302 	smulbb	r3, r3, r2
 801065c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8010660:	b21f      	sxth	r7, r3
 8010662:	4638      	mov	r0, r7
 8010664:	b01d      	add	sp, #116	; 0x74
 8010666:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801066a:	b003      	add	sp, #12
 801066c:	4770      	bx	lr
 801066e:	2b00      	cmp	r3, #0
 8010670:	dcf7      	bgt.n	8010662 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8010672:	2700      	movs	r7, #0
 8010674:	e7f5      	b.n	8010662 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8010676:	bf00      	nop
 8010678:	20013818 	.word	0x20013818
 801067c:	20013814 	.word	0x20013814
 8010680:	2001381c 	.word	0x2001381c

08010684 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8010684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010688:	4bbc      	ldr	r3, [pc, #752]	; (801097c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801068a:	460c      	mov	r4, r1
 801068c:	881b      	ldrh	r3, [r3, #0]
 801068e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8010690:	428b      	cmp	r3, r1
 8010692:	b0a9      	sub	sp, #164	; 0xa4
 8010694:	4680      	mov	r8, r0
 8010696:	d809      	bhi.n	80106ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8010698:	2300      	movs	r3, #0
 801069a:	f04f 32ff 	mov.w	r2, #4294967295
 801069e:	e9c0 3200 	strd	r3, r2, [r0]
 80106a2:	6083      	str	r3, [r0, #8]
 80106a4:	4640      	mov	r0, r8
 80106a6:	b029      	add	sp, #164	; 0xa4
 80106a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106ac:	4eb4      	ldr	r6, [pc, #720]	; (8010980 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80106ae:	6833      	ldr	r3, [r6, #0]
 80106b0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80106b4:	4bb3      	ldr	r3, [pc, #716]	; (8010984 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80106b6:	681b      	ldr	r3, [r3, #0]
 80106b8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80106bc:	4bb2      	ldr	r3, [pc, #712]	; (8010988 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80106be:	6818      	ldr	r0, [r3, #0]
 80106c0:	f7f6 fc7c 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 80106c4:	682b      	ldr	r3, [r5, #0]
 80106c6:	4681      	mov	r9, r0
 80106c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80106ca:	4628      	mov	r0, r5
 80106cc:	4798      	blx	r3
 80106ce:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80106d0:	b203      	sxth	r3, r0
 80106d2:	4407      	add	r7, r0
 80106d4:	9304      	str	r3, [sp, #16]
 80106d6:	b2bb      	uxth	r3, r7
 80106d8:	9303      	str	r3, [sp, #12]
 80106da:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80106de:	4682      	mov	sl, r0
 80106e0:	a80f      	add	r0, sp, #60	; 0x3c
 80106e2:	2b00      	cmp	r3, #0
 80106e4:	f040 80a6 	bne.w	8010834 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80106e8:	f005 f9dc 	bl	8015aa4 <_ZN8touchgfx12TextProviderC1Ev>
 80106ec:	682b      	ldr	r3, [r5, #0]
 80106ee:	4628      	mov	r0, r5
 80106f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80106f2:	4798      	blx	r3
 80106f4:	682b      	ldr	r3, [r5, #0]
 80106f6:	4606      	mov	r6, r0
 80106f8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80106fa:	4628      	mov	r0, r5
 80106fc:	4798      	blx	r3
 80106fe:	6823      	ldr	r3, [r4, #0]
 8010700:	4607      	mov	r7, r0
 8010702:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010704:	4620      	mov	r0, r4
 8010706:	4798      	blx	r3
 8010708:	6823      	ldr	r3, [r4, #0]
 801070a:	4683      	mov	fp, r0
 801070c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010710:	4620      	mov	r0, r4
 8010712:	4798      	blx	r3
 8010714:	463b      	mov	r3, r7
 8010716:	e9cd b000 	strd	fp, r0, [sp]
 801071a:	4649      	mov	r1, r9
 801071c:	4632      	mov	r2, r6
 801071e:	a80f      	add	r0, sp, #60	; 0x3c
 8010720:	f005 fa30 	bl	8015b84 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8010724:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010728:	f8df b254 	ldr.w	fp, [pc, #596]	; 8010980 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801072c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010730:	f04f 0600 	mov.w	r6, #0
 8010734:	bf0c      	ite	eq
 8010736:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801073a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801073e:	4637      	mov	r7, r6
 8010740:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010742:	f8db 3000 	ldr.w	r3, [fp]
 8010746:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801074a:	4629      	mov	r1, r5
 801074c:	785b      	ldrb	r3, [r3, #1]
 801074e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010752:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010756:	a80f      	add	r0, sp, #60	; 0x3c
 8010758:	f002 fb7f 	bl	8012e5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801075c:	9b03      	ldr	r3, [sp, #12]
 801075e:	4286      	cmp	r6, r0
 8010760:	bfb8      	it	lt
 8010762:	4606      	movlt	r6, r0
 8010764:	3701      	adds	r7, #1
 8010766:	eba9 0903 	sub.w	r9, r9, r3
 801076a:	a80f      	add	r0, sp, #60	; 0x3c
 801076c:	b236      	sxth	r6, r6
 801076e:	b2bf      	uxth	r7, r7
 8010770:	fa0f f989 	sxth.w	r9, r9
 8010774:	f005 f9bd 	bl	8015af2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8010778:	b918      	cbnz	r0, 8010782 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801077a:	7a2b      	ldrb	r3, [r5, #8]
 801077c:	444b      	add	r3, r9
 801077e:	2b00      	cmp	r3, #0
 8010780:	dcde      	bgt.n	8010740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8010782:	9b03      	ldr	r3, [sp, #12]
 8010784:	9a04      	ldr	r2, [sp, #16]
 8010786:	f895 9009 	ldrb.w	r9, [r5, #9]
 801078a:	fb13 f707 	smulbb	r7, r3, r7
 801078e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8010790:	1aff      	subs	r7, r7, r3
 8010792:	b2bf      	uxth	r7, r7
 8010794:	b23b      	sxth	r3, r7
 8010796:	429a      	cmp	r2, r3
 8010798:	bfa8      	it	ge
 801079a:	4657      	movge	r7, sl
 801079c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80107a0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80107a4:	6823      	ldr	r3, [r4, #0]
 80107a6:	bf08      	it	eq
 80107a8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80107ac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80107ae:	bf18      	it	ne
 80107b0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80107b4:	4620      	mov	r0, r4
 80107b6:	4798      	blx	r3
 80107b8:	444f      	add	r7, r9
 80107ba:	fa1f f987 	uxth.w	r9, r7
 80107be:	2801      	cmp	r0, #1
 80107c0:	fa0f f789 	sxth.w	r7, r9
 80107c4:	b2b3      	uxth	r3, r6
 80107c6:	f000 80e1 	beq.w	801098c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80107ca:	2802      	cmp	r0, #2
 80107cc:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80107d0:	f000 80e2 	beq.w	8010998 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80107d4:	7aea      	ldrb	r2, [r5, #11]
 80107d6:	7b2d      	ldrb	r5, [r5, #12]
 80107d8:	b236      	sxth	r6, r6
 80107da:	1ab6      	subs	r6, r6, r2
 80107dc:	442a      	add	r2, r5
 80107de:	4413      	add	r3, r2
 80107e0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80107e4:	fa1f fa86 	uxth.w	sl, r6
 80107e8:	b29b      	uxth	r3, r3
 80107ea:	2a02      	cmp	r2, #2
 80107ec:	fa0f fb8a 	sxth.w	fp, sl
 80107f0:	b21e      	sxth	r6, r3
 80107f2:	f000 80d5 	beq.w	80109a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80107f6:	2a03      	cmp	r2, #3
 80107f8:	f000 80dd 	beq.w	80109b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80107fc:	2a01      	cmp	r2, #1
 80107fe:	f040 80e5 	bne.w	80109cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8010802:	8925      	ldrh	r5, [r4, #8]
 8010804:	4633      	mov	r3, r6
 8010806:	eba5 0909 	sub.w	r9, r5, r9
 801080a:	463e      	mov	r6, r7
 801080c:	465d      	mov	r5, fp
 801080e:	461f      	mov	r7, r3
 8010810:	fa0f fb89 	sxth.w	fp, r9
 8010814:	4b5c      	ldr	r3, [pc, #368]	; (8010988 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8010816:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010818:	6818      	ldr	r0, [r3, #0]
 801081a:	f7f6 fbcf 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 801081e:	f8a8 b000 	strh.w	fp, [r8]
 8010822:	f8a8 5002 	strh.w	r5, [r8, #2]
 8010826:	f8a8 6004 	strh.w	r6, [r8, #4]
 801082a:	f8a8 7006 	strh.w	r7, [r8, #6]
 801082e:	f8c8 0008 	str.w	r0, [r8, #8]
 8010832:	e737      	b.n	80106a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8010834:	f005 f936 	bl	8015aa4 <_ZN8touchgfx12TextProviderC1Ev>
 8010838:	682b      	ldr	r3, [r5, #0]
 801083a:	4628      	mov	r0, r5
 801083c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801083e:	4798      	blx	r3
 8010840:	682b      	ldr	r3, [r5, #0]
 8010842:	4607      	mov	r7, r0
 8010844:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010846:	4628      	mov	r0, r5
 8010848:	4798      	blx	r3
 801084a:	6823      	ldr	r3, [r4, #0]
 801084c:	4683      	mov	fp, r0
 801084e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010850:	4620      	mov	r0, r4
 8010852:	4798      	blx	r3
 8010854:	6822      	ldr	r2, [r4, #0]
 8010856:	9005      	str	r0, [sp, #20]
 8010858:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801085c:	4620      	mov	r0, r4
 801085e:	4790      	blx	r2
 8010860:	9b05      	ldr	r3, [sp, #20]
 8010862:	9001      	str	r0, [sp, #4]
 8010864:	463a      	mov	r2, r7
 8010866:	4649      	mov	r1, r9
 8010868:	9300      	str	r3, [sp, #0]
 801086a:	a80f      	add	r0, sp, #60	; 0x3c
 801086c:	465b      	mov	r3, fp
 801086e:	f005 f989 	bl	8015b84 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8010872:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010876:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801087a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801087c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8010880:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010884:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010888:	bf0a      	itet	eq
 801088a:	464a      	moveq	r2, r9
 801088c:	461a      	movne	r2, r3
 801088e:	4699      	moveq	r9, r3
 8010890:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8010894:	1ad2      	subs	r2, r2, r3
 8010896:	6833      	ldr	r3, [r6, #0]
 8010898:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 801089c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80108a0:	af0f      	add	r7, sp, #60	; 0x3c
 80108a2:	7859      	ldrb	r1, [r3, #1]
 80108a4:	9707      	str	r7, [sp, #28]
 80108a6:	2300      	movs	r3, #0
 80108a8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80108ac:	f8ad 3018 	strh.w	r3, [sp, #24]
 80108b0:	f88d 1020 	strb.w	r1, [sp, #32]
 80108b4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80108b8:	9509      	str	r5, [sp, #36]	; 0x24
 80108ba:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80108be:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80108c2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80108c6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80108ca:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80108ce:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80108d2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80108d6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80108da:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80108de:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80108e2:	b350      	cbz	r0, 801093a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80108e4:	682b      	ldr	r3, [r5, #0]
 80108e6:	4628      	mov	r0, r5
 80108e8:	695b      	ldr	r3, [r3, #20]
 80108ea:	4798      	blx	r3
 80108ec:	4607      	mov	r7, r0
 80108ee:	b320      	cbz	r0, 801093a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80108f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80108f2:	6803      	ldr	r3, [r0, #0]
 80108f4:	4639      	mov	r1, r7
 80108f6:	68db      	ldr	r3, [r3, #12]
 80108f8:	4798      	blx	r3
 80108fa:	4606      	mov	r6, r0
 80108fc:	b1e8      	cbz	r0, 801093a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80108fe:	7b43      	ldrb	r3, [r0, #13]
 8010900:	7a82      	ldrb	r2, [r0, #10]
 8010902:	005b      	lsls	r3, r3, #1
 8010904:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010908:	4313      	orrs	r3, r2
 801090a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801090e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8010912:	2b06      	cmp	r3, #6
 8010914:	d111      	bne.n	801093a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010916:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010918:	6803      	ldr	r3, [r0, #0]
 801091a:	4632      	mov	r2, r6
 801091c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801091e:	4639      	mov	r1, r7
 8010920:	4798      	blx	r3
 8010922:	7b73      	ldrb	r3, [r6, #13]
 8010924:	005b      	lsls	r3, r3, #1
 8010926:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801092a:	7ab3      	ldrb	r3, [r6, #10]
 801092c:	4313      	orrs	r3, r2
 801092e:	4418      	add	r0, r3
 8010930:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010934:	4418      	add	r0, r3
 8010936:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801093a:	2600      	movs	r6, #0
 801093c:	4637      	mov	r7, r6
 801093e:	a806      	add	r0, sp, #24
 8010940:	f002 fc6c 	bl	801321c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010944:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8010948:	9b03      	ldr	r3, [sp, #12]
 801094a:	4286      	cmp	r6, r0
 801094c:	eba9 0903 	sub.w	r9, r9, r3
 8010950:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8010954:	bfb8      	it	lt
 8010956:	4606      	movlt	r6, r0
 8010958:	3701      	adds	r7, #1
 801095a:	b236      	sxth	r6, r6
 801095c:	b2bf      	uxth	r7, r7
 801095e:	fa0f f989 	sxth.w	r9, r9
 8010962:	2b00      	cmp	r3, #0
 8010964:	f43f af0d 	beq.w	8010782 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8010968:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801096c:	2b00      	cmp	r3, #0
 801096e:	f47f af08 	bne.w	8010782 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8010972:	7a2b      	ldrb	r3, [r5, #8]
 8010974:	444b      	add	r3, r9
 8010976:	2b00      	cmp	r3, #0
 8010978:	dce1      	bgt.n	801093e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801097a:	e702      	b.n	8010782 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801097c:	20013818 	.word	0x20013818
 8010980:	20013814 	.word	0x20013814
 8010984:	2001381c 	.word	0x2001381c
 8010988:	20013820 	.word	0x20013820
 801098c:	ebaa 0606 	sub.w	r6, sl, r6
 8010990:	2002      	movs	r0, #2
 8010992:	fb96 f6f0 	sdiv	r6, r6, r0
 8010996:	e71d      	b.n	80107d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8010998:	441e      	add	r6, r3
 801099a:	ebaa 0606 	sub.w	r6, sl, r6
 801099e:	e719      	b.n	80107d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80109a0:	8925      	ldrh	r5, [r4, #8]
 80109a2:	1aed      	subs	r5, r5, r3
 80109a4:	eba5 050a 	sub.w	r5, r5, sl
 80109a8:	fa0f fb85 	sxth.w	fp, r5
 80109ac:	8965      	ldrh	r5, [r4, #10]
 80109ae:	eba5 0509 	sub.w	r5, r5, r9
 80109b2:	b22d      	sxth	r5, r5
 80109b4:	e72e      	b.n	8010814 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80109b6:	8965      	ldrh	r5, [r4, #10]
 80109b8:	1aed      	subs	r5, r5, r3
 80109ba:	eba5 050a 	sub.w	r5, r5, sl
 80109be:	4633      	mov	r3, r6
 80109c0:	b22d      	sxth	r5, r5
 80109c2:	463e      	mov	r6, r7
 80109c4:	f04f 0b00 	mov.w	fp, #0
 80109c8:	461f      	mov	r7, r3
 80109ca:	e723      	b.n	8010814 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80109cc:	2500      	movs	r5, #0
 80109ce:	e721      	b.n	8010814 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080109d0 <_ZN8touchgfx8TextAreaD0Ev>:
 80109d0:	b510      	push	{r4, lr}
 80109d2:	2148      	movs	r1, #72	; 0x48
 80109d4:	4604      	mov	r4, r0
 80109d6:	f015 ff32 	bl	802683e <_ZdlPvj>
 80109da:	4620      	mov	r0, r4
 80109dc:	bd10      	pop	{r4, pc}
	...

080109e0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80109e0:	b513      	push	{r0, r1, r4, lr}
 80109e2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80109e6:	4604      	mov	r4, r0
 80109e8:	b1fb      	cbz	r3, 8010a2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80109ea:	4b16      	ldr	r3, [pc, #88]	; (8010a44 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80109ec:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80109ee:	881b      	ldrh	r3, [r3, #0]
 80109f0:	428b      	cmp	r3, r1
 80109f2:	d91a      	bls.n	8010a2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80109f4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80109f8:	2b00      	cmp	r3, #0
 80109fa:	dd16      	ble.n	8010a2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80109fc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010a00:	2b00      	cmp	r3, #0
 8010a02:	dd12      	ble.n	8010a2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010a04:	4b10      	ldr	r3, [pc, #64]	; (8010a48 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8010a06:	6818      	ldr	r0, [r3, #0]
 8010a08:	f7f6 fad8 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8010a0c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8010a10:	6822      	ldr	r2, [r4, #0]
 8010a12:	2b00      	cmp	r3, #0
 8010a14:	db06      	blt.n	8010a24 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8010a16:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8010a1a:	2b00      	cmp	r3, #0
 8010a1c:	db02      	blt.n	8010a24 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8010a1e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010a20:	4298      	cmp	r0, r3
 8010a22:	d004      	beq.n	8010a2e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8010a24:	6953      	ldr	r3, [r2, #20]
 8010a26:	4620      	mov	r0, r4
 8010a28:	4798      	blx	r3
 8010a2a:	b002      	add	sp, #8
 8010a2c:	bd10      	pop	{r4, pc}
 8010a2e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8010a32:	c903      	ldmia	r1, {r0, r1}
 8010a34:	466b      	mov	r3, sp
 8010a36:	e883 0003 	stmia.w	r3, {r0, r1}
 8010a3a:	6912      	ldr	r2, [r2, #16]
 8010a3c:	4619      	mov	r1, r3
 8010a3e:	4620      	mov	r0, r4
 8010a40:	4790      	blx	r2
 8010a42:	e7f2      	b.n	8010a2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010a44:	20013818 	.word	0x20013818
 8010a48:	20013820 	.word	0x20013820

08010a4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8010a4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a50:	4b44      	ldr	r3, [pc, #272]	; (8010b64 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8010a52:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010a54:	881b      	ldrh	r3, [r3, #0]
 8010a56:	4293      	cmp	r3, r2
 8010a58:	b08e      	sub	sp, #56	; 0x38
 8010a5a:	4604      	mov	r4, r0
 8010a5c:	d97e      	bls.n	8010b5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010a5e:	6808      	ldr	r0, [r1, #0]
 8010a60:	4d41      	ldr	r5, [pc, #260]	; (8010b68 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8010a62:	6849      	ldr	r1, [r1, #4]
 8010a64:	ab05      	add	r3, sp, #20
 8010a66:	c303      	stmia	r3!, {r0, r1}
 8010a68:	4611      	mov	r1, r2
 8010a6a:	6828      	ldr	r0, [r5, #0]
 8010a6c:	f7f6 faa6 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8010a70:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8010a74:	2b00      	cmp	r3, #0
 8010a76:	db11      	blt.n	8010a9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010a78:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8010a7c:	2b00      	cmp	r3, #0
 8010a7e:	db0d      	blt.n	8010a9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010a80:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010a82:	4298      	cmp	r0, r3
 8010a84:	d10a      	bne.n	8010a9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010a86:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8010a8a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010a8e:	ab09      	add	r3, sp, #36	; 0x24
 8010a90:	e883 0003 	stmia.w	r3, {r0, r1}
 8010a94:	4619      	mov	r1, r3
 8010a96:	a805      	add	r0, sp, #20
 8010a98:	f7fe f860 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 8010a9c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010aa0:	2b00      	cmp	r3, #0
 8010aa2:	dd5b      	ble.n	8010b5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010aa4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010aa8:	2b00      	cmp	r3, #0
 8010aaa:	dd57      	ble.n	8010b5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010aac:	4f2f      	ldr	r7, [pc, #188]	; (8010b6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8010aae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010ab0:	683b      	ldr	r3, [r7, #0]
 8010ab2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8010ab6:	4b2e      	ldr	r3, [pc, #184]	; (8010b70 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8010ab8:	681b      	ldr	r3, [r3, #0]
 8010aba:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8010abe:	2e00      	cmp	r6, #0
 8010ac0:	d04c      	beq.n	8010b5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010ac2:	6823      	ldr	r3, [r4, #0]
 8010ac4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8010ac8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010aca:	4620      	mov	r0, r4
 8010acc:	4798      	blx	r3
 8010ace:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010ad0:	683b      	ldr	r3, [r7, #0]
 8010ad2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8010ad6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8010ada:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8010ade:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010ae0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010ae4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8010ae8:	785b      	ldrb	r3, [r3, #1]
 8010aea:	9609      	str	r6, [sp, #36]	; 0x24
 8010aec:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010af0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8010af4:	4b1f      	ldr	r3, [pc, #124]	; (8010b74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8010af6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8010afa:	681b      	ldr	r3, [r3, #0]
 8010afc:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8010b00:	910b      	str	r1, [sp, #44]	; 0x2c
 8010b02:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8010b06:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8010b0a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8010b0e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8010b12:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8010b16:	b10a      	cbz	r2, 8010b1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8010b18:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8010b1a:	b906      	cbnz	r6, 8010b1e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8010b1c:	689e      	ldr	r6, [r3, #8]
 8010b1e:	af07      	add	r7, sp, #28
 8010b20:	4621      	mov	r1, r4
 8010b22:	4638      	mov	r0, r7
 8010b24:	f004 fab0 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010b28:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010b2a:	6828      	ldr	r0, [r5, #0]
 8010b2c:	f7f6 fa46 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8010b30:	6823      	ldr	r3, [r4, #0]
 8010b32:	4605      	mov	r5, r0
 8010b34:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010b36:	4620      	mov	r0, r4
 8010b38:	4798      	blx	r3
 8010b3a:	6823      	ldr	r3, [r4, #0]
 8010b3c:	4680      	mov	r8, r0
 8010b3e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010b42:	4620      	mov	r0, r4
 8010b44:	4798      	blx	r3
 8010b46:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8010b4a:	ab09      	add	r3, sp, #36	; 0x24
 8010b4c:	9300      	str	r3, [sp, #0]
 8010b4e:	9501      	str	r5, [sp, #4]
 8010b50:	ab05      	add	r3, sp, #20
 8010b52:	e897 0006 	ldmia.w	r7, {r1, r2}
 8010b56:	4630      	mov	r0, r6
 8010b58:	f7f6 f9e2 	bl	8006f20 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8010b5c:	b00e      	add	sp, #56	; 0x38
 8010b5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010b62:	bf00      	nop
 8010b64:	20013818 	.word	0x20013818
 8010b68:	20013820 	.word	0x20013820
 8010b6c:	20013814 	.word	0x20013814
 8010b70:	2001381c 	.word	0x2001381c
 8010b74:	200137bc 	.word	0x200137bc

08010b78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8010b78:	b538      	push	{r3, r4, r5, lr}
 8010b7a:	4b0e      	ldr	r3, [pc, #56]	; (8010bb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8010b7c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010b7e:	881b      	ldrh	r3, [r3, #0]
 8010b80:	429a      	cmp	r2, r3
 8010b82:	4604      	mov	r4, r0
 8010b84:	d214      	bcs.n	8010bb0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8010b86:	6803      	ldr	r3, [r0, #0]
 8010b88:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010b8a:	4798      	blx	r3
 8010b8c:	6823      	ldr	r3, [r4, #0]
 8010b8e:	4605      	mov	r5, r0
 8010b90:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8010b92:	4620      	mov	r0, r4
 8010b94:	4798      	blx	r3
 8010b96:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010b9a:	b22d      	sxth	r5, r5
 8010b9c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010ba0:	4601      	mov	r1, r0
 8010ba2:	bf06      	itte	eq
 8010ba4:	4602      	moveq	r2, r0
 8010ba6:	4629      	moveq	r1, r5
 8010ba8:	462a      	movne	r2, r5
 8010baa:	4620      	mov	r0, r4
 8010bac:	f7fd fdb6 	bl	800e71c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010bb0:	bd38      	pop	{r3, r4, r5, pc}
 8010bb2:	bf00      	nop
 8010bb4:	20013818 	.word	0x20013818

08010bb8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8010bb8:	b530      	push	{r4, r5, lr}
 8010bba:	888b      	ldrh	r3, [r1, #4]
 8010bbc:	8583      	strh	r3, [r0, #44]	; 0x2c
 8010bbe:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010bc2:	b085      	sub	sp, #20
 8010bc4:	4604      	mov	r4, r0
 8010bc6:	b923      	cbnz	r3, 8010bd2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8010bc8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010bcc:	b90b      	cbnz	r3, 8010bd2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8010bce:	f7ff ffd3 	bl	8010b78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8010bd2:	6823      	ldr	r3, [r4, #0]
 8010bd4:	466d      	mov	r5, sp
 8010bd6:	4621      	mov	r1, r4
 8010bd8:	4628      	mov	r0, r5
 8010bda:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8010bde:	4798      	blx	r3
 8010be0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8010be4:	343c      	adds	r4, #60	; 0x3c
 8010be6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8010bea:	b005      	add	sp, #20
 8010bec:	bd30      	pop	{r4, r5, pc}

08010bee <_ZNK8touchgfx3Box12getSolidRectEv>:
 8010bee:	2300      	movs	r3, #0
 8010bf0:	8083      	strh	r3, [r0, #4]
 8010bf2:	80c3      	strh	r3, [r0, #6]
 8010bf4:	8003      	strh	r3, [r0, #0]
 8010bf6:	8043      	strh	r3, [r0, #2]
 8010bf8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8010bfc:	2bff      	cmp	r3, #255	; 0xff
 8010bfe:	bf01      	itttt	eq
 8010c00:	890b      	ldrheq	r3, [r1, #8]
 8010c02:	8083      	strheq	r3, [r0, #4]
 8010c04:	894b      	ldrheq	r3, [r1, #10]
 8010c06:	80c3      	strheq	r3, [r0, #6]
 8010c08:	4770      	bx	lr
	...

08010c0c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8010c0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010c0e:	4604      	mov	r4, r0
 8010c10:	6808      	ldr	r0, [r1, #0]
 8010c12:	6849      	ldr	r1, [r1, #4]
 8010c14:	466b      	mov	r3, sp
 8010c16:	c303      	stmia	r3!, {r0, r1}
 8010c18:	6823      	ldr	r3, [r4, #0]
 8010c1a:	4669      	mov	r1, sp
 8010c1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c1e:	4620      	mov	r0, r4
 8010c20:	4798      	blx	r3
 8010c22:	4b08      	ldr	r3, [pc, #32]	; (8010c44 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8010c24:	681b      	ldr	r3, [r3, #0]
 8010c26:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8010c2a:	b10a      	cbz	r2, 8010c30 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8010c2c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010c2e:	b900      	cbnz	r0, 8010c32 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8010c30:	6898      	ldr	r0, [r3, #8]
 8010c32:	6803      	ldr	r3, [r0, #0]
 8010c34:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8010c36:	6a1d      	ldr	r5, [r3, #32]
 8010c38:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8010c3c:	4669      	mov	r1, sp
 8010c3e:	47a8      	blx	r5
 8010c40:	b003      	add	sp, #12
 8010c42:	bd30      	pop	{r4, r5, pc}
 8010c44:	200137bc 	.word	0x200137bc

08010c48 <_ZN8touchgfx3BoxD1Ev>:
 8010c48:	4770      	bx	lr

08010c4a <_ZN8touchgfx3BoxD0Ev>:
 8010c4a:	b510      	push	{r4, lr}
 8010c4c:	212c      	movs	r1, #44	; 0x2c
 8010c4e:	4604      	mov	r4, r0
 8010c50:	f015 fdf5 	bl	802683e <_ZdlPvj>
 8010c54:	4620      	mov	r0, r4
 8010c56:	bd10      	pop	{r4, pc}

08010c58 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8010c58:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8010c5c:	b12a      	cbz	r2, 8010c6a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8010c5e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8010c62:	b112      	cbz	r2, 8010c6a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8010c64:	6803      	ldr	r3, [r0, #0]
 8010c66:	695b      	ldr	r3, [r3, #20]
 8010c68:	4718      	bx	r3
 8010c6a:	4770      	bx	lr

08010c6c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8010c6c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8010c70:	600b      	str	r3, [r1, #0]
 8010c72:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8010c76:	6013      	str	r3, [r2, #0]
 8010c78:	4770      	bx	lr

08010c7a <_ZN8touchgfx5Gauge8setWidthEs>:
 8010c7a:	8101      	strh	r1, [r0, #8]
 8010c7c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8010c80:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8010c84:	4770      	bx	lr

08010c86 <_ZN8touchgfx5Gauge9setHeightEs>:
 8010c86:	8141      	strh	r1, [r0, #10]
 8010c88:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8010c8c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8010c90:	4770      	bx	lr

08010c92 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8010c92:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8010c96:	4770      	bx	lr

08010c98 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8010c98:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8010c9c:	4770      	bx	lr

08010c9e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8010c9e:	4770      	bx	lr

08010ca0 <_ZN8touchgfx5GaugeD1Ev>:
 8010ca0:	4770      	bx	lr

08010ca2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8010ca2:	b538      	push	{r3, r4, r5, lr}
 8010ca4:	4604      	mov	r4, r0
 8010ca6:	460d      	mov	r5, r1
 8010ca8:	f7fd fc51 	bl	800e54e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8010cac:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8010cb0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8010cb4:	bd38      	pop	{r3, r4, r5, pc}

08010cb6 <_ZN8touchgfx5GaugeD0Ev>:
 8010cb6:	b510      	push	{r4, lr}
 8010cb8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8010cbc:	4604      	mov	r4, r0
 8010cbe:	f015 fdbe 	bl	802683e <_ZdlPvj>
 8010cc2:	4620      	mov	r0, r4
 8010cc4:	bd10      	pop	{r4, pc}

08010cc6 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8010cc6:	b510      	push	{r4, lr}
 8010cc8:	6803      	ldr	r3, [r0, #0]
 8010cca:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010cce:	4604      	mov	r4, r0
 8010cd0:	4798      	blx	r3
 8010cd2:	b170      	cbz	r0, 8010cf2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8010cd4:	6823      	ldr	r3, [r4, #0]
 8010cd6:	4620      	mov	r0, r4
 8010cd8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010cdc:	4798      	blx	r3
 8010cde:	b140      	cbz	r0, 8010cf2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8010ce0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010ce4:	b12b      	cbz	r3, 8010cf2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8010ce6:	6823      	ldr	r3, [r4, #0]
 8010ce8:	4620      	mov	r0, r4
 8010cea:	695b      	ldr	r3, [r3, #20]
 8010cec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cf0:	4718      	bx	r3
 8010cf2:	bd10      	pop	{r4, pc}

08010cf4 <_ZN8touchgfx5GaugeC1Ev>:
 8010cf4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010cf6:	4604      	mov	r4, r0
 8010cf8:	4626      	mov	r6, r4
 8010cfa:	f7fd fd49 	bl	800e790 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8010cfe:	4b18      	ldr	r3, [pc, #96]	; (8010d60 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8010d00:	f846 3bb4 	str.w	r3, [r6], #180
 8010d04:	a902      	add	r1, sp, #8
 8010d06:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010d0a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8010d0e:	4630      	mov	r0, r6
 8010d10:	f014 ff7c 	bl	8025c0c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8010d14:	2500      	movs	r5, #0
 8010d16:	2301      	movs	r3, #1
 8010d18:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8010d1c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8010d20:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8010d24:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8010d28:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8010d2c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8010d30:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8010d34:	4638      	mov	r0, r7
 8010d36:	f014 f9ad 	bl	8025094 <_ZN8touchgfx6CircleC1Ev>
 8010d3a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8010d3e:	4620      	mov	r0, r4
 8010d40:	f7fd fdc7 	bl	800e8d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8010d44:	4639      	mov	r1, r7
 8010d46:	4620      	mov	r0, r4
 8010d48:	f7fd fd82 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010d4c:	4620      	mov	r0, r4
 8010d4e:	4631      	mov	r1, r6
 8010d50:	f7fd fd7e 	bl	800e850 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010d54:	4620      	mov	r0, r4
 8010d56:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8010d5a:	b003      	add	sp, #12
 8010d5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010d5e:	bf00      	nop
 8010d60:	0802b4f4 	.word	0x0802b4f4

08010d64 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8010d64:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8010d68:	4770      	bx	lr

08010d6a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8010d6a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8010d6e:	4770      	bx	lr

08010d70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8010d70:	b538      	push	{r3, r4, r5, lr}
 8010d72:	8902      	ldrh	r2, [r0, #8]
 8010d74:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010d78:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8010d7c:	4604      	mov	r4, r0
 8010d7e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8010d82:	2200      	movs	r2, #0
 8010d84:	4611      	mov	r1, r2
 8010d86:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8010d8a:	4628      	mov	r0, r5
 8010d8c:	f7f1 fb75 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 8010d90:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8010d94:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8010d98:	1a9b      	subs	r3, r3, r2
 8010d9a:	ee07 3a90 	vmov	s15, r3
 8010d9e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8010da2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8010da6:	1a9b      	subs	r3, r3, r2
 8010da8:	ee07 3a10 	vmov	s14, r3
 8010dac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010db0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010db4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8010db8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8010dbc:	4628      	mov	r0, r5
 8010dbe:	f014 ff71 	bl	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010dc2:	4b16      	ldr	r3, [pc, #88]	; (8010e1c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8010dc4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8010dc8:	4628      	mov	r0, r5
 8010dca:	f014 ff6b 	bl	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010dce:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8010dd2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8010dd6:	ee07 3a90 	vmov	s15, r3
 8010dda:	ee07 2a10 	vmov	s14, r2
 8010dde:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010de2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010de6:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8010dea:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8010dee:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8010df2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8010df6:	4628      	mov	r0, r5
 8010df8:	f014 ff54 	bl	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010dfc:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8010e00:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8010e04:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8010e08:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8010e0c:	4628      	mov	r0, r5
 8010e0e:	f014 ff49 	bl	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010e12:	2301      	movs	r3, #1
 8010e14:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8010e18:	bd38      	pop	{r3, r4, r5, pc}
 8010e1a:	bf00      	nop
 8010e1c:	43960000 	.word	0x43960000

08010e20 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8010e20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010e22:	4604      	mov	r4, r0
 8010e24:	a802      	add	r0, sp, #8
 8010e26:	4616      	mov	r6, r2
 8010e28:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8010e2c:	461d      	mov	r5, r3
 8010e2e:	4601      	mov	r1, r0
 8010e30:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8010e34:	f015 f88c 	bl	8025f50 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8010e38:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8010e3c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8010e40:	4620      	mov	r0, r4
 8010e42:	f7ff ff95 	bl	8010d70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8010e46:	b002      	add	sp, #8
 8010e48:	bd70      	pop	{r4, r5, r6, pc}

08010e4a <_ZN8touchgfx5Gauge9setCenterEii>:
 8010e4a:	b570      	push	{r4, r5, r6, lr}
 8010e4c:	4606      	mov	r6, r0
 8010e4e:	460d      	mov	r5, r1
 8010e50:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8010e54:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8010e58:	4614      	mov	r4, r2
 8010e5a:	f7ff ff89 	bl	8010d70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8010e5e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8010e62:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8010e66:	1aa4      	subs	r4, r4, r2
 8010e68:	1a6d      	subs	r5, r5, r1
 8010e6a:	0164      	lsls	r4, r4, #5
 8010e6c:	016d      	lsls	r5, r5, #5
 8010e6e:	3410      	adds	r4, #16
 8010e70:	3510      	adds	r5, #16
 8010e72:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8010e76:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8010e7a:	bd70      	pop	{r4, r5, r6, pc}

08010e7c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8010e7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010e7e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8010e80:	0149      	lsls	r1, r1, #5
 8010e82:	4299      	cmp	r1, r3
 8010e84:	4604      	mov	r4, r0
 8010e86:	9101      	str	r1, [sp, #4]
 8010e88:	d00b      	beq.n	8010ea2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8010e8a:	4601      	mov	r1, r0
 8010e8c:	aa01      	add	r2, sp, #4
 8010e8e:	a802      	add	r0, sp, #8
 8010e90:	f014 fafe 	bl	8025490 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8010e94:	9b01      	ldr	r3, [sp, #4]
 8010e96:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010e98:	6823      	ldr	r3, [r4, #0]
 8010e9a:	a902      	add	r1, sp, #8
 8010e9c:	691b      	ldr	r3, [r3, #16]
 8010e9e:	4620      	mov	r0, r4
 8010ea0:	4798      	blx	r3
 8010ea2:	b004      	add	sp, #16
 8010ea4:	bd10      	pop	{r4, pc}
	...

08010ea8 <_ZN8touchgfx5Gauge8setValueEi>:
 8010ea8:	b570      	push	{r4, r5, r6, lr}
 8010eaa:	4604      	mov	r4, r0
 8010eac:	f7fd fba2 	bl	800e5f4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8010eb0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010eb4:	429a      	cmp	r2, r3
 8010eb6:	bfac      	ite	ge
 8010eb8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8010ebc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8010ec0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8010ec4:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8010ec8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8010ecc:	1ac9      	subs	r1, r1, r3
 8010ece:	2900      	cmp	r1, #0
 8010ed0:	bfb8      	it	lt
 8010ed2:	4249      	neglt	r1, r1
 8010ed4:	b289      	uxth	r1, r1
 8010ed6:	4620      	mov	r0, r4
 8010ed8:	f7fd fbae 	bl	800e638 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8010edc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8010ee0:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8010ee4:	eddf 6a19 	vldr	s13, [pc, #100]	; 8010f4c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8010ee8:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8010f50 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8010eec:	429a      	cmp	r2, r3
 8010eee:	4605      	mov	r5, r0
 8010ef0:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8010ef4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8010ef8:	da15      	bge.n	8010f26 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8010efa:	1b5b      	subs	r3, r3, r5
 8010efc:	ee07 3a90 	vmov	s15, r3
 8010f00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010f04:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8010f08:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8010f0c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8010f10:	ee21 1a07 	vmul.f32	s2, s2, s14
 8010f14:	f014 fe35 	bl	8025b82 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8010f18:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8010f1c:	1b49      	subs	r1, r1, r5
 8010f1e:	4630      	mov	r0, r6
 8010f20:	f7ff ffac 	bl	8010e7c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8010f24:	bd70      	pop	{r4, r5, r6, pc}
 8010f26:	442b      	add	r3, r5
 8010f28:	ee07 3a90 	vmov	s15, r3
 8010f2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010f30:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8010f34:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8010f38:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8010f3c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8010f40:	f014 fe1f 	bl	8025b82 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8010f44:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8010f48:	4429      	add	r1, r5
 8010f4a:	e7e8      	b.n	8010f1e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8010f4c:	43340000 	.word	0x43340000
 8010f50:	40490fdb 	.word	0x40490fdb

08010f54 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8010f54:	b510      	push	{r4, lr}
 8010f56:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8010f5a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8010f5e:	0149      	lsls	r1, r1, #5
 8010f60:	0152      	lsls	r2, r2, #5
 8010f62:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8010f66:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8010f6a:	4604      	mov	r4, r0
 8010f6c:	f7fd faec 	bl	800e548 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8010f70:	4601      	mov	r1, r0
 8010f72:	4620      	mov	r0, r4
 8010f74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010f78:	f7ff bf96 	b.w	8010ea8 <_ZN8touchgfx5Gauge8setValueEi>

08010f7c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8010f7c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8010f80:	4770      	bx	lr

08010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8010f82:	b570      	push	{r4, r5, r6, lr}
 8010f84:	880b      	ldrh	r3, [r1, #0]
 8010f86:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8010f88:	4605      	mov	r5, r0
 8010f8a:	8813      	ldrh	r3, [r2, #0]
 8010f8c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8010f90:	4604      	mov	r4, r0
 8010f92:	4628      	mov	r0, r5
 8010f94:	f006 f912 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010f98:	4606      	mov	r6, r0
 8010f9a:	4628      	mov	r0, r5
 8010f9c:	f006 f942 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010fa0:	6823      	ldr	r3, [r4, #0]
 8010fa2:	4605      	mov	r5, r0
 8010fa4:	4631      	mov	r1, r6
 8010fa6:	4620      	mov	r0, r4
 8010fa8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010faa:	4798      	blx	r3
 8010fac:	6823      	ldr	r3, [r4, #0]
 8010fae:	4629      	mov	r1, r5
 8010fb0:	4620      	mov	r0, r4
 8010fb2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010fb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010fb8:	4718      	bx	r3

08010fba <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8010fba:	b510      	push	{r4, lr}
 8010fbc:	4604      	mov	r4, r0
 8010fbe:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010fc0:	b150      	cbz	r0, 8010fd8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8010fc2:	6803      	ldr	r3, [r0, #0]
 8010fc4:	68db      	ldr	r3, [r3, #12]
 8010fc6:	4798      	blx	r3
 8010fc8:	b130      	cbz	r0, 8010fd8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8010fca:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010fcc:	6803      	ldr	r3, [r0, #0]
 8010fce:	4621      	mov	r1, r4
 8010fd0:	689b      	ldr	r3, [r3, #8]
 8010fd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010fd6:	4718      	bx	r3
 8010fd8:	bd10      	pop	{r4, pc}

08010fda <_ZNK8touchgfx6Button12getSolidRectEv>:
 8010fda:	b510      	push	{r4, lr}
 8010fdc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8010fe0:	2bff      	cmp	r3, #255	; 0xff
 8010fe2:	4604      	mov	r4, r0
 8010fe4:	d006      	beq.n	8010ff4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8010fe6:	2300      	movs	r3, #0
 8010fe8:	8003      	strh	r3, [r0, #0]
 8010fea:	8043      	strh	r3, [r0, #2]
 8010fec:	8083      	strh	r3, [r0, #4]
 8010fee:	80c3      	strh	r3, [r0, #6]
 8010ff0:	4620      	mov	r0, r4
 8010ff2:	bd10      	pop	{r4, pc}
 8010ff4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8010ff8:	b11b      	cbz	r3, 8011002 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8010ffa:	3130      	adds	r1, #48	; 0x30
 8010ffc:	f006 f946 	bl	801728c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011000:	e7f6      	b.n	8010ff0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011002:	312e      	adds	r1, #46	; 0x2e
 8011004:	e7fa      	b.n	8010ffc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08011008 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011008:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801100c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011010:	b08a      	sub	sp, #40	; 0x28
 8011012:	4604      	mov	r4, r0
 8011014:	4688      	mov	r8, r1
 8011016:	2b00      	cmp	r3, #0
 8011018:	d066      	beq.n	80110e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801101a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801101c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011020:	a805      	add	r0, sp, #20
 8011022:	f006 f8cb 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011026:	4607      	mov	r7, r0
 8011028:	a805      	add	r0, sp, #20
 801102a:	f006 f8fb 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801102e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011032:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011036:	4432      	add	r2, r6
 8011038:	b292      	uxth	r2, r2
 801103a:	2300      	movs	r3, #0
 801103c:	fa0f fc82 	sxth.w	ip, r2
 8011040:	459c      	cmp	ip, r3
 8011042:	9306      	str	r3, [sp, #24]
 8011044:	dd52      	ble.n	80110ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011046:	42b7      	cmp	r7, r6
 8011048:	dd50      	ble.n	80110ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801104a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801104e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011052:	442b      	add	r3, r5
 8011054:	b29b      	uxth	r3, r3
 8011056:	b219      	sxth	r1, r3
 8011058:	2900      	cmp	r1, #0
 801105a:	dd47      	ble.n	80110ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801105c:	42a8      	cmp	r0, r5
 801105e:	dd45      	ble.n	80110ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011060:	4567      	cmp	r7, ip
 8011062:	bfb8      	it	lt
 8011064:	b2ba      	uxthlt	r2, r7
 8011066:	4288      	cmp	r0, r1
 8011068:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801106c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8011070:	bfb8      	it	lt
 8011072:	b283      	uxthlt	r3, r0
 8011074:	1b92      	subs	r2, r2, r6
 8011076:	1b5b      	subs	r3, r3, r5
 8011078:	f8ad 201c 	strh.w	r2, [sp, #28]
 801107c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011080:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011084:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011088:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801108c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011090:	429a      	cmp	r2, r3
 8011092:	d026      	beq.n	80110e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011094:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011098:	2b00      	cmp	r3, #0
 801109a:	dd22      	ble.n	80110e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801109c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80110a0:	2b00      	cmp	r3, #0
 80110a2:	dd1e      	ble.n	80110e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80110a4:	2300      	movs	r3, #0
 80110a6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80110aa:	6823      	ldr	r3, [r4, #0]
 80110ac:	a908      	add	r1, sp, #32
 80110ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80110b0:	4620      	mov	r0, r4
 80110b2:	4798      	blx	r3
 80110b4:	4b0f      	ldr	r3, [pc, #60]	; (80110f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80110b6:	681b      	ldr	r3, [r3, #0]
 80110b8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80110bc:	b10a      	cbz	r2, 80110c2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80110be:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80110c0:	b900      	cbnz	r0, 80110c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80110c2:	6898      	ldr	r0, [r3, #8]
 80110c4:	6801      	ldr	r1, [r0, #0]
 80110c6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80110ca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80110ce:	2501      	movs	r5, #1
 80110d0:	9502      	str	r5, [sp, #8]
 80110d2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80110d6:	9401      	str	r4, [sp, #4]
 80110d8:	ac06      	add	r4, sp, #24
 80110da:	9400      	str	r4, [sp, #0]
 80110dc:	688c      	ldr	r4, [r1, #8]
 80110de:	a905      	add	r1, sp, #20
 80110e0:	47a0      	blx	r4
 80110e2:	b00a      	add	sp, #40	; 0x28
 80110e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80110e8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80110ea:	e797      	b.n	801101c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80110ec:	2300      	movs	r3, #0
 80110ee:	9307      	str	r3, [sp, #28]
 80110f0:	e7ca      	b.n	8011088 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80110f2:	bf00      	nop
 80110f4:	200137bc 	.word	0x200137bc

080110f8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 80110f8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80110fc:	b12a      	cbz	r2, 801110a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80110fe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011102:	b112      	cbz	r2, 801110a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011104:	6803      	ldr	r3, [r0, #0]
 8011106:	695b      	ldr	r3, [r3, #20]
 8011108:	4718      	bx	r3
 801110a:	4770      	bx	lr

0801110c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801110c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011110:	4b2f      	ldr	r3, [pc, #188]	; (80111d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8011112:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011114:	881b      	ldrh	r3, [r3, #0]
 8011116:	4293      	cmp	r3, r2
 8011118:	b08d      	sub	sp, #52	; 0x34
 801111a:	4604      	mov	r4, r0
 801111c:	460f      	mov	r7, r1
 801111e:	d954      	bls.n	80111ca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011120:	4b2c      	ldr	r3, [pc, #176]	; (80111d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8011122:	6819      	ldr	r1, [r3, #0]
 8011124:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8011128:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801112c:	4a2a      	ldr	r2, [pc, #168]	; (80111d8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801112e:	6812      	ldr	r2, [r2, #0]
 8011130:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8011134:	2900      	cmp	r1, #0
 8011136:	d048      	beq.n	80111ca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011138:	785a      	ldrb	r2, [r3, #1]
 801113a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801113e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8011142:	4b26      	ldr	r3, [pc, #152]	; (80111dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8011144:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8011148:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801114c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8011150:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8011152:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8011156:	9107      	str	r1, [sp, #28]
 8011158:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801115c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011160:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8011164:	681a      	ldr	r2, [r3, #0]
 8011166:	f88d 8020 	strb.w	r8, [sp, #32]
 801116a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801116e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8011172:	9609      	str	r6, [sp, #36]	; 0x24
 8011174:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8011178:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801117c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8011180:	b10b      	cbz	r3, 8011186 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8011182:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8011184:	b905      	cbnz	r5, 8011188 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8011186:	6895      	ldr	r5, [r2, #8]
 8011188:	ae05      	add	r6, sp, #20
 801118a:	4621      	mov	r1, r4
 801118c:	4630      	mov	r0, r6
 801118e:	f003 ff7b 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011192:	4b13      	ldr	r3, [pc, #76]	; (80111e0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8011194:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011196:	6818      	ldr	r0, [r3, #0]
 8011198:	f7f5 ff10 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 801119c:	6823      	ldr	r3, [r4, #0]
 801119e:	4680      	mov	r8, r0
 80111a0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80111a2:	4620      	mov	r0, r4
 80111a4:	4798      	blx	r3
 80111a6:	6823      	ldr	r3, [r4, #0]
 80111a8:	4681      	mov	r9, r0
 80111aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80111ae:	4620      	mov	r0, r4
 80111b0:	4798      	blx	r3
 80111b2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80111b6:	ab07      	add	r3, sp, #28
 80111b8:	9300      	str	r3, [sp, #0]
 80111ba:	f8cd 8004 	str.w	r8, [sp, #4]
 80111be:	463b      	mov	r3, r7
 80111c0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80111c4:	4628      	mov	r0, r5
 80111c6:	f7f5 feab 	bl	8006f20 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80111ca:	b00d      	add	sp, #52	; 0x34
 80111cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80111d0:	20013818 	.word	0x20013818
 80111d4:	20013814 	.word	0x20013814
 80111d8:	2001381c 	.word	0x2001381c
 80111dc:	200137bc 	.word	0x200137bc
 80111e0:	20013820 	.word	0x20013820

080111e4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80111e4:	4770      	bx	lr

080111e6 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80111e6:	4770      	bx	lr

080111e8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80111e8:	b510      	push	{r4, lr}
 80111ea:	213c      	movs	r1, #60	; 0x3c
 80111ec:	4604      	mov	r4, r0
 80111ee:	f015 fb26 	bl	802683e <_ZdlPvj>
 80111f2:	4620      	mov	r0, r4
 80111f4:	bd10      	pop	{r4, pc}

080111f6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80111f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111fa:	461c      	mov	r4, r3
 80111fc:	4606      	mov	r6, r0
 80111fe:	9f06      	ldr	r7, [sp, #24]
 8011200:	f7ff febf 	bl	8010f82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8011204:	8823      	ldrh	r3, [r4, #0]
 8011206:	86b3      	strh	r3, [r6, #52]	; 0x34
 8011208:	883b      	ldrh	r3, [r7, #0]
 801120a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801120c:	4638      	mov	r0, r7
 801120e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8011212:	f005 ffd3 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011216:	f04f 0802 	mov.w	r8, #2
 801121a:	fb95 f5f8 	sdiv	r5, r5, r8
 801121e:	b2ad      	uxth	r5, r5
 8011220:	fb90 f0f8 	sdiv	r0, r0, r8
 8011224:	1a2d      	subs	r5, r5, r0
 8011226:	8735      	strh	r5, [r6, #56]	; 0x38
 8011228:	4638      	mov	r0, r7
 801122a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801122e:	fb94 f4f8 	sdiv	r4, r4, r8
 8011232:	f005 fff7 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011236:	b2a4      	uxth	r4, r4
 8011238:	fb90 f0f8 	sdiv	r0, r0, r8
 801123c:	1a24      	subs	r4, r4, r0
 801123e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8011240:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011244 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8011244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011248:	4604      	mov	r4, r0
 801124a:	b08c      	sub	sp, #48	; 0x30
 801124c:	460d      	mov	r5, r1
 801124e:	f7ff fedb 	bl	8011008 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8011252:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8011256:	2b00      	cmp	r3, #0
 8011258:	d05d      	beq.n	8011316 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801125a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801125c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011260:	a805      	add	r0, sp, #20
 8011262:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8011266:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801126a:	f005 ffa7 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801126e:	4606      	mov	r6, r0
 8011270:	a805      	add	r0, sp, #20
 8011272:	f005 ffd7 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011276:	6869      	ldr	r1, [r5, #4]
 8011278:	f8ad 001e 	strh.w	r0, [sp, #30]
 801127c:	6828      	ldr	r0, [r5, #0]
 801127e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8011282:	ab08      	add	r3, sp, #32
 8011284:	ad08      	add	r5, sp, #32
 8011286:	c303      	stmia	r3!, {r0, r1}
 8011288:	a906      	add	r1, sp, #24
 801128a:	4628      	mov	r0, r5
 801128c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011290:	f8ad 601c 	strh.w	r6, [sp, #28]
 8011294:	f7fd fc62 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 8011298:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801129c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80112a0:	429a      	cmp	r2, r3
 80112a2:	d035      	beq.n	8011310 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80112a4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80112a8:	2b00      	cmp	r3, #0
 80112aa:	dd31      	ble.n	8011310 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80112ac:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80112b0:	2b00      	cmp	r3, #0
 80112b2:	dd2d      	ble.n	8011310 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80112b4:	2300      	movs	r3, #0
 80112b6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80112ba:	6823      	ldr	r3, [r4, #0]
 80112bc:	a90a      	add	r1, sp, #40	; 0x28
 80112be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112c0:	4620      	mov	r0, r4
 80112c2:	4798      	blx	r3
 80112c4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80112c8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80112ca:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80112ce:	1a9b      	subs	r3, r3, r2
 80112d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80112d4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80112d6:	1ac9      	subs	r1, r1, r3
 80112d8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80112dc:	490f      	ldr	r1, [pc, #60]	; (801131c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80112de:	6809      	ldr	r1, [r1, #0]
 80112e0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80112e4:	b108      	cbz	r0, 80112ea <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80112e6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80112e8:	b900      	cbnz	r0, 80112ec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80112ea:	6888      	ldr	r0, [r1, #8]
 80112ec:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80112f0:	440b      	add	r3, r1
 80112f2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80112f6:	2601      	movs	r6, #1
 80112f8:	440a      	add	r2, r1
 80112fa:	6801      	ldr	r1, [r0, #0]
 80112fc:	9602      	str	r6, [sp, #8]
 80112fe:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8011302:	e9cd 5400 	strd	r5, r4, [sp]
 8011306:	b21b      	sxth	r3, r3
 8011308:	688c      	ldr	r4, [r1, #8]
 801130a:	b212      	sxth	r2, r2
 801130c:	a905      	add	r1, sp, #20
 801130e:	47a0      	blx	r4
 8011310:	b00c      	add	sp, #48	; 0x30
 8011312:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011316:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011318:	e7a0      	b.n	801125c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801131a:	bf00      	nop
 801131c:	200137bc 	.word	0x200137bc

08011320 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8011320:	b510      	push	{r4, lr}
 8011322:	2101      	movs	r1, #1
 8011324:	2200      	movs	r2, #0
 8011326:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801132a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801132e:	4c0e      	ldr	r4, [pc, #56]	; (8011368 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8011330:	8082      	strh	r2, [r0, #4]
 8011332:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011336:	80c2      	strh	r2, [r0, #6]
 8011338:	8102      	strh	r2, [r0, #8]
 801133a:	8142      	strh	r2, [r0, #10]
 801133c:	8182      	strh	r2, [r0, #12]
 801133e:	81c2      	strh	r2, [r0, #14]
 8011340:	8202      	strh	r2, [r0, #16]
 8011342:	8242      	strh	r2, [r0, #18]
 8011344:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011348:	61c2      	str	r2, [r0, #28]
 801134a:	8402      	strh	r2, [r0, #32]
 801134c:	8442      	strh	r2, [r0, #34]	; 0x22
 801134e:	6282      	str	r2, [r0, #40]	; 0x28
 8011350:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8011354:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8011356:	8601      	strh	r1, [r0, #48]	; 0x30
 8011358:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801135c:	6004      	str	r4, [r0, #0]
 801135e:	8681      	strh	r1, [r0, #52]	; 0x34
 8011360:	86c1      	strh	r1, [r0, #54]	; 0x36
 8011362:	8702      	strh	r2, [r0, #56]	; 0x38
 8011364:	8742      	strh	r2, [r0, #58]	; 0x3a
 8011366:	bd10      	pop	{r4, pc}
 8011368:	0802b5dc 	.word	0x0802b5dc

0801136c <_ZN8touchgfx5ImageD1Ev>:
 801136c:	4770      	bx	lr

0801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801136e:	b570      	push	{r4, r5, r6, lr}
 8011370:	880b      	ldrh	r3, [r1, #0]
 8011372:	84c3      	strh	r3, [r0, #38]	; 0x26
 8011374:	4604      	mov	r4, r0
 8011376:	4608      	mov	r0, r1
 8011378:	460d      	mov	r5, r1
 801137a:	f005 ff1f 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801137e:	4606      	mov	r6, r0
 8011380:	4628      	mov	r0, r5
 8011382:	f005 ff4f 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011386:	6823      	ldr	r3, [r4, #0]
 8011388:	4605      	mov	r5, r0
 801138a:	4631      	mov	r1, r6
 801138c:	4620      	mov	r0, r4
 801138e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011390:	4798      	blx	r3
 8011392:	6823      	ldr	r3, [r4, #0]
 8011394:	4629      	mov	r1, r5
 8011396:	4620      	mov	r0, r4
 8011398:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801139a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801139e:	4718      	bx	r3

080113a0 <_ZN8touchgfx5ImageD0Ev>:
 80113a0:	b510      	push	{r4, lr}
 80113a2:	212c      	movs	r1, #44	; 0x2c
 80113a4:	4604      	mov	r4, r0
 80113a6:	f015 fa4a 	bl	802683e <_ZdlPvj>
 80113aa:	4620      	mov	r0, r4
 80113ac:	bd10      	pop	{r4, pc}

080113ae <_ZNK8touchgfx5Image12getSolidRectEv>:
 80113ae:	b510      	push	{r4, lr}
 80113b0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80113b4:	2bff      	cmp	r3, #255	; 0xff
 80113b6:	4604      	mov	r4, r0
 80113b8:	d006      	beq.n	80113c8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80113ba:	2300      	movs	r3, #0
 80113bc:	8003      	strh	r3, [r0, #0]
 80113be:	8043      	strh	r3, [r0, #2]
 80113c0:	8083      	strh	r3, [r0, #4]
 80113c2:	80c3      	strh	r3, [r0, #6]
 80113c4:	4620      	mov	r0, r4
 80113c6:	bd10      	pop	{r4, pc}
 80113c8:	3126      	adds	r1, #38	; 0x26
 80113ca:	f005 ff5f 	bl	801728c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80113ce:	e7f9      	b.n	80113c4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080113d0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80113d0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80113d4:	b12a      	cbz	r2, 80113e2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80113d6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80113da:	b112      	cbz	r2, 80113e2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80113dc:	6803      	ldr	r3, [r0, #0]
 80113de:	695b      	ldr	r3, [r3, #20]
 80113e0:	4718      	bx	r3
 80113e2:	4770      	bx	lr

080113e4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80113e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113e8:	4604      	mov	r4, r0
 80113ea:	b088      	sub	sp, #32
 80113ec:	f854 3b26 	ldr.w	r3, [r4], #38
 80113f0:	2500      	movs	r5, #0
 80113f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80113f4:	460f      	mov	r7, r1
 80113f6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80113fa:	a904      	add	r1, sp, #16
 80113fc:	4606      	mov	r6, r0
 80113fe:	4798      	blx	r3
 8011400:	4620      	mov	r0, r4
 8011402:	f005 fedb 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011406:	4680      	mov	r8, r0
 8011408:	4620      	mov	r0, r4
 801140a:	f005 ff0b 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801140e:	9506      	str	r5, [sp, #24]
 8011410:	ad06      	add	r5, sp, #24
 8011412:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011416:	4639      	mov	r1, r7
 8011418:	4628      	mov	r0, r5
 801141a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801141e:	f7fd fb9d 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 8011422:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011426:	2b00      	cmp	r3, #0
 8011428:	dd19      	ble.n	801145e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801142a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801142e:	2b00      	cmp	r3, #0
 8011430:	dd15      	ble.n	801145e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8011432:	4b0c      	ldr	r3, [pc, #48]	; (8011464 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8011434:	681b      	ldr	r3, [r3, #0]
 8011436:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801143a:	b10a      	cbz	r2, 8011440 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801143c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801143e:	b900      	cbnz	r0, 8011442 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8011440:	6898      	ldr	r0, [r3, #8]
 8011442:	6801      	ldr	r1, [r0, #0]
 8011444:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011448:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801144c:	2701      	movs	r7, #1
 801144e:	9702      	str	r7, [sp, #8]
 8011450:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8011454:	e9cd 5600 	strd	r5, r6, [sp]
 8011458:	688d      	ldr	r5, [r1, #8]
 801145a:	4621      	mov	r1, r4
 801145c:	47a8      	blx	r5
 801145e:	b008      	add	sp, #32
 8011460:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011464:	200137bc 	.word	0x200137bc

08011468 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8011468:	4770      	bx	lr

0801146a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801146a:	b510      	push	{r4, lr}
 801146c:	2148      	movs	r1, #72	; 0x48
 801146e:	4604      	mov	r4, r0
 8011470:	f015 f9e5 	bl	802683e <_ZdlPvj>
 8011474:	4620      	mov	r0, r4
 8011476:	bd10      	pop	{r4, pc}

08011478 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8011478:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801147c:	b08d      	sub	sp, #52	; 0x34
 801147e:	4604      	mov	r4, r0
 8011480:	460f      	mov	r7, r1
 8011482:	f7ff fdc1 	bl	8011008 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8011486:	4a55      	ldr	r2, [pc, #340]	; (80115dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8011488:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801148a:	8812      	ldrh	r2, [r2, #0]
 801148c:	429a      	cmp	r2, r3
 801148e:	f240 8082 	bls.w	8011596 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011492:	4d53      	ldr	r5, [pc, #332]	; (80115e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8011494:	682a      	ldr	r2, [r5, #0]
 8011496:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801149a:	4b52      	ldr	r3, [pc, #328]	; (80115e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801149c:	681b      	ldr	r3, [r3, #0]
 801149e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80114a2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80114a6:	2200      	movs	r2, #0
 80114a8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80114ac:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80114b0:	2a03      	cmp	r2, #3
 80114b2:	d811      	bhi.n	80114d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80114b4:	e8df f002 	tbb	[pc, r2]
 80114b8:	89727902 	.word	0x89727902
 80114bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80114c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80114c4:	1ad2      	subs	r2, r2, r3
 80114c6:	2002      	movs	r0, #2
 80114c8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80114cc:	fb92 f2f0 	sdiv	r2, r2, r0
 80114d0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80114d4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80114d8:	f10d 080c 	add.w	r8, sp, #12
 80114dc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80114e0:	f10d 0914 	add.w	r9, sp, #20
 80114e4:	e889 0003 	stmia.w	r9, {r0, r1}
 80114e8:	4639      	mov	r1, r7
 80114ea:	4648      	mov	r0, r9
 80114ec:	f7fd fb36 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 80114f0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80114f4:	2b00      	cmp	r3, #0
 80114f6:	dd4e      	ble.n	8011596 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80114f8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80114fc:	2b00      	cmp	r3, #0
 80114fe:	dd4a      	ble.n	8011596 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011500:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8011504:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011508:	1a9b      	subs	r3, r3, r2
 801150a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801150e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8011512:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8011516:	1a9b      	subs	r3, r3, r2
 8011518:	f8ad 3016 	strh.w	r3, [sp, #22]
 801151c:	6823      	ldr	r3, [r4, #0]
 801151e:	4641      	mov	r1, r8
 8011520:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011522:	4620      	mov	r0, r4
 8011524:	4798      	blx	r3
 8011526:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801152a:	2b00      	cmp	r3, #0
 801152c:	d053      	beq.n	80115d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801152e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8011530:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8011532:	682b      	ldr	r3, [r5, #0]
 8011534:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8011538:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801153c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011540:	785b      	ldrb	r3, [r3, #1]
 8011542:	9209      	str	r2, [sp, #36]	; 0x24
 8011544:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8011548:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801154c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8011550:	2300      	movs	r3, #0
 8011552:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8011556:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801155a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801155e:	4b22      	ldr	r3, [pc, #136]	; (80115e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8011560:	9607      	str	r6, [sp, #28]
 8011562:	681b      	ldr	r3, [r3, #0]
 8011564:	f88d 5020 	strb.w	r5, [sp, #32]
 8011568:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801156c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011570:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011574:	b10a      	cbz	r2, 801157a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8011576:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8011578:	b904      	cbnz	r4, 801157c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801157a:	689c      	ldr	r4, [r3, #8]
 801157c:	4b1b      	ldr	r3, [pc, #108]	; (80115ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801157e:	6818      	ldr	r0, [r3, #0]
 8011580:	f7f5 fd1c 	bl	8006fbc <_ZNK8touchgfx5Texts7getTextEt>
 8011584:	ab07      	add	r3, sp, #28
 8011586:	9001      	str	r0, [sp, #4]
 8011588:	9300      	str	r3, [sp, #0]
 801158a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801158e:	464b      	mov	r3, r9
 8011590:	4620      	mov	r0, r4
 8011592:	f7f5 fcc5 	bl	8006f20 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011596:	b00d      	add	sp, #52	; 0x34
 8011598:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801159c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80115a0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80115a4:	1ad2      	subs	r2, r2, r3
 80115a6:	3201      	adds	r2, #1
 80115a8:	e78d      	b.n	80114c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80115aa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80115ae:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80115b2:	1ad2      	subs	r2, r2, r3
 80115b4:	3201      	adds	r2, #1
 80115b6:	2002      	movs	r0, #2
 80115b8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80115bc:	fb92 f2f0 	sdiv	r2, r2, r0
 80115c0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80115c4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80115c8:	e786      	b.n	80114d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80115ca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80115ce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80115d2:	1ad2      	subs	r2, r2, r3
 80115d4:	e7ef      	b.n	80115b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80115d6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80115d8:	e7aa      	b.n	8011530 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80115da:	bf00      	nop
 80115dc:	20013818 	.word	0x20013818
 80115e0:	20013814 	.word	0x20013814
 80115e4:	2001381c 	.word	0x2001381c
 80115e8:	200137bc 	.word	0x200137bc
 80115ec:	20013820 	.word	0x20013820

080115f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80115f0:	b510      	push	{r4, lr}
 80115f2:	2101      	movs	r1, #1
 80115f4:	4c13      	ldr	r4, [pc, #76]	; (8011644 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80115f6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80115fa:	2200      	movs	r2, #0
 80115fc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8011600:	6004      	str	r4, [r0, #0]
 8011602:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011606:	4c10      	ldr	r4, [pc, #64]	; (8011648 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8011608:	8082      	strh	r2, [r0, #4]
 801160a:	80c2      	strh	r2, [r0, #6]
 801160c:	8102      	strh	r2, [r0, #8]
 801160e:	8142      	strh	r2, [r0, #10]
 8011610:	8182      	strh	r2, [r0, #12]
 8011612:	81c2      	strh	r2, [r0, #14]
 8011614:	8202      	strh	r2, [r0, #16]
 8011616:	8242      	strh	r2, [r0, #18]
 8011618:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801161c:	61c2      	str	r2, [r0, #28]
 801161e:	8402      	strh	r2, [r0, #32]
 8011620:	8442      	strh	r2, [r0, #34]	; 0x22
 8011622:	6282      	str	r2, [r0, #40]	; 0x28
 8011624:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8011628:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801162a:	8601      	strh	r1, [r0, #48]	; 0x30
 801162c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8011630:	6344      	str	r4, [r0, #52]	; 0x34
 8011632:	8701      	strh	r1, [r0, #56]	; 0x38
 8011634:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8011638:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801163c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8011640:	bd10      	pop	{r4, pc}
 8011642:	bf00      	nop
 8011644:	0802b6c0 	.word	0x0802b6c0
 8011648:	0802902c 	.word	0x0802902c

0801164c <_ZN8touchgfx7OutlineD1Ev>:
 801164c:	4770      	bx	lr

0801164e <_ZN8touchgfx7OutlineD0Ev>:
 801164e:	b510      	push	{r4, lr}
 8011650:	2130      	movs	r1, #48	; 0x30
 8011652:	4604      	mov	r4, r0
 8011654:	f015 f8f3 	bl	802683e <_ZdlPvj>
 8011658:	4620      	mov	r0, r4
 801165a:	bd10      	pop	{r4, pc}

0801165c <_ZN8touchgfx7Outline5resetEv>:
 801165c:	b510      	push	{r4, lr}
 801165e:	4604      	mov	r4, r0
 8011660:	f000 fe96 	bl	8012390 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8011664:	60e0      	str	r0, [r4, #12]
 8011666:	f000 fe99 	bl	801239c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801166a:	68e3      	ldr	r3, [r4, #12]
 801166c:	6123      	str	r3, [r4, #16]
 801166e:	08c0      	lsrs	r0, r0, #3
 8011670:	2200      	movs	r2, #0
 8011672:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8011676:	3801      	subs	r0, #1
 8011678:	6060      	str	r0, [r4, #4]
 801167a:	60a2      	str	r2, [r4, #8]
 801167c:	8019      	strh	r1, [r3, #0]
 801167e:	8059      	strh	r1, [r3, #2]
 8011680:	809a      	strh	r2, [r3, #4]
 8011682:	80da      	strh	r2, [r3, #6]
 8011684:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011686:	f023 0301 	bic.w	r3, r3, #1
 801168a:	f043 0302 	orr.w	r3, r3, #2
 801168e:	6263      	str	r3, [r4, #36]	; 0x24
 8011690:	bd10      	pop	{r4, pc}
	...

08011694 <_ZN8touchgfx7OutlineC1Ev>:
 8011694:	b510      	push	{r4, lr}
 8011696:	4b0a      	ldr	r3, [pc, #40]	; (80116c0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8011698:	6003      	str	r3, [r0, #0]
 801169a:	2300      	movs	r3, #0
 801169c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80116a0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80116a4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80116a8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80116ac:	6243      	str	r3, [r0, #36]	; 0x24
 80116ae:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80116b2:	4604      	mov	r4, r0
 80116b4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80116b8:	f7ff ffd0 	bl	801165c <_ZN8touchgfx7Outline5resetEv>
 80116bc:	4620      	mov	r0, r4
 80116be:	bd10      	pop	{r4, pc}
 80116c0:	0802b734 	.word	0x0802b734

080116c4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80116c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116c8:	b093      	sub	sp, #76	; 0x4c
 80116ca:	1156      	asrs	r6, r2, #5
 80116cc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80116ce:	9305      	str	r3, [sp, #20]
 80116d0:	f004 051f 	and.w	r5, r4, #31
 80116d4:	1153      	asrs	r3, r2, #5
 80116d6:	9504      	str	r5, [sp, #16]
 80116d8:	1165      	asrs	r5, r4, #5
 80116da:	9303      	str	r3, [sp, #12]
 80116dc:	42ae      	cmp	r6, r5
 80116de:	ea4f 1364 	mov.w	r3, r4, asr #5
 80116e2:	9306      	str	r3, [sp, #24]
 80116e4:	f002 031f 	and.w	r3, r2, #31
 80116e8:	f040 80f8 	bne.w	80118dc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80116ec:	9c04      	ldr	r4, [sp, #16]
 80116ee:	9a05      	ldr	r2, [sp, #20]
 80116f0:	42a3      	cmp	r3, r4
 80116f2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80116f6:	6902      	ldr	r2, [r0, #16]
 80116f8:	d125      	bne.n	8011746 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80116fa:	f9b2 3000 	ldrsh.w	r3, [r2]
 80116fe:	459e      	cmp	lr, r3
 8011700:	d103      	bne.n	801170a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8011702:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011706:	429e      	cmp	r6, r3
 8011708:	d035      	beq.n	8011776 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801170a:	88d1      	ldrh	r1, [r2, #6]
 801170c:	8893      	ldrh	r3, [r2, #4]
 801170e:	430b      	orrs	r3, r1
 8011710:	d010      	beq.n	8011734 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011712:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011716:	2b00      	cmp	r3, #0
 8011718:	db0c      	blt.n	8011734 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801171a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801171c:	428b      	cmp	r3, r1
 801171e:	da09      	bge.n	8011734 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011720:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8011724:	428b      	cmp	r3, r1
 8011726:	bf38      	it	cc
 8011728:	3208      	addcc	r2, #8
 801172a:	f103 0301 	add.w	r3, r3, #1
 801172e:	bf38      	it	cc
 8011730:	6102      	strcc	r2, [r0, #16]
 8011732:	6083      	str	r3, [r0, #8]
 8011734:	6903      	ldr	r3, [r0, #16]
 8011736:	9a03      	ldr	r2, [sp, #12]
 8011738:	f8a3 e000 	strh.w	lr, [r3]
 801173c:	805a      	strh	r2, [r3, #2]
 801173e:	2200      	movs	r2, #0
 8011740:	809a      	strh	r2, [r3, #4]
 8011742:	80da      	strh	r2, [r3, #6]
 8011744:	e017      	b.n	8011776 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011746:	9c05      	ldr	r4, [sp, #20]
 8011748:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801174c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8011750:	f004 041f 	and.w	r4, r4, #31
 8011754:	114e      	asrs	r6, r1, #5
 8011756:	9402      	str	r4, [sp, #8]
 8011758:	9c04      	ldr	r4, [sp, #16]
 801175a:	4576      	cmp	r6, lr
 801175c:	f001 0c1f 	and.w	ip, r1, #31
 8011760:	eba4 0403 	sub.w	r4, r4, r3
 8011764:	d10a      	bne.n	801177c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8011766:	9b02      	ldr	r3, [sp, #8]
 8011768:	449c      	add	ip, r3
 801176a:	44a0      	add	r8, r4
 801176c:	fb04 a40c 	mla	r4, r4, ip, sl
 8011770:	f8a2 8004 	strh.w	r8, [r2, #4]
 8011774:	80d4      	strh	r4, [r2, #6]
 8011776:	b013      	add	sp, #76	; 0x4c
 8011778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801177c:	9d05      	ldr	r5, [sp, #20]
 801177e:	1a69      	subs	r1, r5, r1
 8011780:	bf5b      	ittet	pl
 8011782:	f1cc 0520 	rsbpl	r5, ip, #32
 8011786:	436c      	mulpl	r4, r5
 8011788:	2500      	movmi	r5, #0
 801178a:	2520      	movpl	r5, #32
 801178c:	bf44      	itt	mi
 801178e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8011792:	4249      	negmi	r1, r1
 8011794:	9501      	str	r5, [sp, #4]
 8011796:	9f01      	ldr	r7, [sp, #4]
 8011798:	fb94 f5f1 	sdiv	r5, r4, r1
 801179c:	fb01 4415 	mls	r4, r1, r5, r4
 80117a0:	bf54      	ite	pl
 80117a2:	f04f 0901 	movpl.w	r9, #1
 80117a6:	f04f 39ff 	movmi.w	r9, #4294967295
 80117aa:	2c00      	cmp	r4, #0
 80117ac:	bfb8      	it	lt
 80117ae:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80117b2:	44bc      	add	ip, r7
 80117b4:	44a8      	add	r8, r5
 80117b6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80117ba:	f8a2 8004 	strh.w	r8, [r2, #4]
 80117be:	f8a2 c006 	strh.w	ip, [r2, #6]
 80117c2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80117c6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80117ca:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80117ce:	bfb8      	it	lt
 80117d0:	1864      	addlt	r4, r4, r1
 80117d2:	ea58 0202 	orrs.w	r2, r8, r2
 80117d6:	444e      	add	r6, r9
 80117d8:	d011      	beq.n	80117fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80117da:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80117de:	f1b8 0f00 	cmp.w	r8, #0
 80117e2:	db0c      	blt.n	80117fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80117e4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80117e6:	4590      	cmp	r8, r2
 80117e8:	da09      	bge.n	80117fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80117ea:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80117ee:	4590      	cmp	r8, r2
 80117f0:	bf3c      	itt	cc
 80117f2:	f10c 0208 	addcc.w	r2, ip, #8
 80117f6:	6102      	strcc	r2, [r0, #16]
 80117f8:	f108 0201 	add.w	r2, r8, #1
 80117fc:	6082      	str	r2, [r0, #8]
 80117fe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011802:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011806:	f8ac 6000 	strh.w	r6, [ip]
 801180a:	2700      	movs	r7, #0
 801180c:	45b6      	cmp	lr, r6
 801180e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8011812:	f8ac 7004 	strh.w	r7, [ip, #4]
 8011816:	f8ac 7006 	strh.w	r7, [ip, #6]
 801181a:	442b      	add	r3, r5
 801181c:	d04d      	beq.n	80118ba <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801181e:	9f04      	ldr	r7, [sp, #16]
 8011820:	1aff      	subs	r7, r7, r3
 8011822:	443d      	add	r5, r7
 8011824:	016d      	lsls	r5, r5, #5
 8011826:	fb95 f8f1 	sdiv	r8, r5, r1
 801182a:	fb01 5518 	mls	r5, r1, r8, r5
 801182e:	2d00      	cmp	r5, #0
 8011830:	bfb8      	it	lt
 8011832:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8011836:	f108 0701 	add.w	r7, r8, #1
 801183a:	bfb8      	it	lt
 801183c:	186d      	addlt	r5, r5, r1
 801183e:	1a64      	subs	r4, r4, r1
 8011840:	9703      	str	r7, [sp, #12]
 8011842:	f04f 0a00 	mov.w	sl, #0
 8011846:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801184a:	1964      	adds	r4, r4, r5
 801184c:	bf58      	it	pl
 801184e:	9f03      	ldrpl	r7, [sp, #12]
 8011850:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8011854:	bf48      	it	mi
 8011856:	4647      	movmi	r7, r8
 8011858:	44bb      	add	fp, r7
 801185a:	f8ac b004 	strh.w	fp, [ip, #4]
 801185e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8011862:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8011866:	f8ac b006 	strh.w	fp, [ip, #6]
 801186a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801186e:	443b      	add	r3, r7
 8011870:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8011874:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8011878:	bf58      	it	pl
 801187a:	1a64      	subpl	r4, r4, r1
 801187c:	ea5b 0707 	orrs.w	r7, fp, r7
 8011880:	444e      	add	r6, r9
 8011882:	d011      	beq.n	80118a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8011884:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8011888:	f1bb 0f00 	cmp.w	fp, #0
 801188c:	db0c      	blt.n	80118a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801188e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011890:	45bb      	cmp	fp, r7
 8011892:	da09      	bge.n	80118a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8011894:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8011898:	45bb      	cmp	fp, r7
 801189a:	bf3c      	itt	cc
 801189c:	f10c 0708 	addcc.w	r7, ip, #8
 80118a0:	6107      	strcc	r7, [r0, #16]
 80118a2:	f10b 0701 	add.w	r7, fp, #1
 80118a6:	6087      	str	r7, [r0, #8]
 80118a8:	6907      	ldr	r7, [r0, #16]
 80118aa:	45b6      	cmp	lr, r6
 80118ac:	803e      	strh	r6, [r7, #0]
 80118ae:	807a      	strh	r2, [r7, #2]
 80118b0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80118b4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80118b8:	d1c5      	bne.n	8011846 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80118ba:	9a04      	ldr	r2, [sp, #16]
 80118bc:	1ad3      	subs	r3, r2, r3
 80118be:	6902      	ldr	r2, [r0, #16]
 80118c0:	8891      	ldrh	r1, [r2, #4]
 80118c2:	88d6      	ldrh	r6, [r2, #6]
 80118c4:	4419      	add	r1, r3
 80118c6:	8091      	strh	r1, [r2, #4]
 80118c8:	9902      	ldr	r1, [sp, #8]
 80118ca:	f101 0c20 	add.w	ip, r1, #32
 80118ce:	9901      	ldr	r1, [sp, #4]
 80118d0:	ebac 0c01 	sub.w	ip, ip, r1
 80118d4:	fb03 630c 	mla	r3, r3, ip, r6
 80118d8:	80d3      	strh	r3, [r2, #6]
 80118da:	e74c      	b.n	8011776 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80118dc:	9d05      	ldr	r5, [sp, #20]
 80118de:	1aa2      	subs	r2, r4, r2
 80118e0:	eba5 0501 	sub.w	r5, r5, r1
 80118e4:	9508      	str	r5, [sp, #32]
 80118e6:	9202      	str	r2, [sp, #8]
 80118e8:	f140 8128 	bpl.w	8011b3c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80118ec:	9a03      	ldr	r2, [sp, #12]
 80118ee:	2a00      	cmp	r2, #0
 80118f0:	f6ff af41 	blt.w	8011776 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80118f4:	9a02      	ldr	r2, [sp, #8]
 80118f6:	4252      	negs	r2, r2
 80118f8:	9202      	str	r2, [sp, #8]
 80118fa:	9a06      	ldr	r2, [sp, #24]
 80118fc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8011900:	f04f 34ff 	mov.w	r4, #4294967295
 8011904:	9206      	str	r2, [sp, #24]
 8011906:	462a      	mov	r2, r5
 8011908:	940b      	str	r4, [sp, #44]	; 0x2c
 801190a:	435a      	muls	r2, r3
 801190c:	2400      	movs	r4, #0
 801190e:	9d02      	ldr	r5, [sp, #8]
 8011910:	9401      	str	r4, [sp, #4]
 8011912:	9c02      	ldr	r4, [sp, #8]
 8011914:	fb92 f4f4 	sdiv	r4, r2, r4
 8011918:	fb05 2214 	mls	r2, r5, r4, r2
 801191c:	2a00      	cmp	r2, #0
 801191e:	9207      	str	r2, [sp, #28]
 8011920:	bfbc      	itt	lt
 8011922:	1952      	addlt	r2, r2, r5
 8011924:	9207      	strlt	r2, [sp, #28]
 8011926:	9a01      	ldr	r2, [sp, #4]
 8011928:	6905      	ldr	r5, [r0, #16]
 801192a:	bfb8      	it	lt
 801192c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8011930:	eb04 0901 	add.w	r9, r4, r1
 8011934:	429a      	cmp	r2, r3
 8011936:	ea4f 1669 	mov.w	r6, r9, asr #5
 801193a:	f040 8112 	bne.w	8011b62 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801193e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8011942:	429e      	cmp	r6, r3
 8011944:	d104      	bne.n	8011950 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8011946:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801194a:	9a03      	ldr	r2, [sp, #12]
 801194c:	429a      	cmp	r2, r3
 801194e:	d01b      	beq.n	8011988 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8011950:	88ea      	ldrh	r2, [r5, #6]
 8011952:	88ab      	ldrh	r3, [r5, #4]
 8011954:	4313      	orrs	r3, r2
 8011956:	d010      	beq.n	801197a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8011958:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801195c:	2a00      	cmp	r2, #0
 801195e:	db0c      	blt.n	801197a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8011960:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011962:	429a      	cmp	r2, r3
 8011964:	da09      	bge.n	801197a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8011966:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801196a:	429a      	cmp	r2, r3
 801196c:	bf38      	it	cc
 801196e:	3508      	addcc	r5, #8
 8011970:	f102 0201 	add.w	r2, r2, #1
 8011974:	bf38      	it	cc
 8011976:	6105      	strcc	r5, [r0, #16]
 8011978:	6082      	str	r2, [r0, #8]
 801197a:	6903      	ldr	r3, [r0, #16]
 801197c:	9a03      	ldr	r2, [sp, #12]
 801197e:	805a      	strh	r2, [r3, #2]
 8011980:	2200      	movs	r2, #0
 8011982:	801e      	strh	r6, [r3, #0]
 8011984:	809a      	strh	r2, [r3, #4]
 8011986:	80da      	strh	r2, [r3, #6]
 8011988:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801198a:	9a03      	ldr	r2, [sp, #12]
 801198c:	6901      	ldr	r1, [r0, #16]
 801198e:	441a      	add	r2, r3
 8011990:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011994:	42b3      	cmp	r3, r6
 8011996:	d103      	bne.n	80119a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8011998:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801199c:	429a      	cmp	r2, r3
 801199e:	d01a      	beq.n	80119d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80119a0:	88cc      	ldrh	r4, [r1, #6]
 80119a2:	888b      	ldrh	r3, [r1, #4]
 80119a4:	4323      	orrs	r3, r4
 80119a6:	d010      	beq.n	80119ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80119a8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80119ac:	2c00      	cmp	r4, #0
 80119ae:	db0c      	blt.n	80119ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80119b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80119b2:	429c      	cmp	r4, r3
 80119b4:	da09      	bge.n	80119ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80119b6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80119ba:	429c      	cmp	r4, r3
 80119bc:	bf38      	it	cc
 80119be:	3108      	addcc	r1, #8
 80119c0:	f104 0401 	add.w	r4, r4, #1
 80119c4:	bf38      	it	cc
 80119c6:	6101      	strcc	r1, [r0, #16]
 80119c8:	6084      	str	r4, [r0, #8]
 80119ca:	6903      	ldr	r3, [r0, #16]
 80119cc:	2100      	movs	r1, #0
 80119ce:	801e      	strh	r6, [r3, #0]
 80119d0:	805a      	strh	r2, [r3, #2]
 80119d2:	8099      	strh	r1, [r3, #4]
 80119d4:	80d9      	strh	r1, [r3, #6]
 80119d6:	9b06      	ldr	r3, [sp, #24]
 80119d8:	4293      	cmp	r3, r2
 80119da:	f000 8082 	beq.w	8011ae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80119de:	9b08      	ldr	r3, [sp, #32]
 80119e0:	9c02      	ldr	r4, [sp, #8]
 80119e2:	9902      	ldr	r1, [sp, #8]
 80119e4:	015b      	lsls	r3, r3, #5
 80119e6:	fb93 f1f1 	sdiv	r1, r3, r1
 80119ea:	fb04 3311 	mls	r3, r4, r1, r3
 80119ee:	2b00      	cmp	r3, #0
 80119f0:	9103      	str	r1, [sp, #12]
 80119f2:	9308      	str	r3, [sp, #32]
 80119f4:	da04      	bge.n	8011a00 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80119f6:	1e4b      	subs	r3, r1, #1
 80119f8:	9303      	str	r3, [sp, #12]
 80119fa:	9b08      	ldr	r3, [sp, #32]
 80119fc:	4423      	add	r3, r4
 80119fe:	9308      	str	r3, [sp, #32]
 8011a00:	9b07      	ldr	r3, [sp, #28]
 8011a02:	9902      	ldr	r1, [sp, #8]
 8011a04:	1a5b      	subs	r3, r3, r1
 8011a06:	9307      	str	r3, [sp, #28]
 8011a08:	9b01      	ldr	r3, [sp, #4]
 8011a0a:	f1c3 0320 	rsb	r3, r3, #32
 8011a0e:	930e      	str	r3, [sp, #56]	; 0x38
 8011a10:	990e      	ldr	r1, [sp, #56]	; 0x38
 8011a12:	9b01      	ldr	r3, [sp, #4]
 8011a14:	1a5b      	subs	r3, r3, r1
 8011a16:	464f      	mov	r7, r9
 8011a18:	930a      	str	r3, [sp, #40]	; 0x28
 8011a1a:	2600      	movs	r6, #0
 8011a1c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8011a20:	185b      	adds	r3, r3, r1
 8011a22:	bf58      	it	pl
 8011a24:	9902      	ldrpl	r1, [sp, #8]
 8011a26:	9307      	str	r3, [sp, #28]
 8011a28:	bf5d      	ittte	pl
 8011a2a:	1a5b      	subpl	r3, r3, r1
 8011a2c:	9307      	strpl	r3, [sp, #28]
 8011a2e:	9b03      	ldrpl	r3, [sp, #12]
 8011a30:	9903      	ldrmi	r1, [sp, #12]
 8011a32:	bf58      	it	pl
 8011a34:	1c59      	addpl	r1, r3, #1
 8011a36:	4489      	add	r9, r1
 8011a38:	2a00      	cmp	r2, #0
 8011a3a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8011a3e:	db2e      	blt.n	8011a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011a40:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011a42:	4293      	cmp	r3, r2
 8011a44:	dd2b      	ble.n	8011a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011a46:	9c01      	ldr	r4, [sp, #4]
 8011a48:	6905      	ldr	r5, [r0, #16]
 8011a4a:	46a0      	mov	r8, r4
 8011a4c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8011a4e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8011a52:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8011a56:	45a0      	cmp	r8, r4
 8011a58:	f040 814f 	bne.w	8011cfa <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8011a5c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8011a60:	4551      	cmp	r1, sl
 8011a62:	d103      	bne.n	8011a6c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8011a64:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8011a68:	4291      	cmp	r1, r2
 8011a6a:	d018      	beq.n	8011a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011a6c:	ea5c 010e 	orrs.w	r1, ip, lr
 8011a70:	d00f      	beq.n	8011a92 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8011a72:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8011a76:	2900      	cmp	r1, #0
 8011a78:	db0b      	blt.n	8011a92 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8011a7a:	428b      	cmp	r3, r1
 8011a7c:	dd09      	ble.n	8011a92 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8011a7e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8011a82:	4299      	cmp	r1, r3
 8011a84:	bf38      	it	cc
 8011a86:	3508      	addcc	r5, #8
 8011a88:	f101 0101 	add.w	r1, r1, #1
 8011a8c:	bf38      	it	cc
 8011a8e:	6105      	strcc	r5, [r0, #16]
 8011a90:	6081      	str	r1, [r0, #8]
 8011a92:	6903      	ldr	r3, [r0, #16]
 8011a94:	f8a3 a000 	strh.w	sl, [r3]
 8011a98:	805a      	strh	r2, [r3, #2]
 8011a9a:	809e      	strh	r6, [r3, #4]
 8011a9c:	80de      	strh	r6, [r3, #6]
 8011a9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011aa0:	6901      	ldr	r1, [r0, #16]
 8011aa2:	441a      	add	r2, r3
 8011aa4:	88cc      	ldrh	r4, [r1, #6]
 8011aa6:	888b      	ldrh	r3, [r1, #4]
 8011aa8:	4323      	orrs	r3, r4
 8011aaa:	d010      	beq.n	8011ace <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8011aac:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8011ab0:	2c00      	cmp	r4, #0
 8011ab2:	db0c      	blt.n	8011ace <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8011ab4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011ab6:	429c      	cmp	r4, r3
 8011ab8:	da09      	bge.n	8011ace <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8011aba:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8011abe:	429c      	cmp	r4, r3
 8011ac0:	bf38      	it	cc
 8011ac2:	3108      	addcc	r1, #8
 8011ac4:	f104 0401 	add.w	r4, r4, #1
 8011ac8:	bf38      	it	cc
 8011aca:	6101      	strcc	r1, [r0, #16]
 8011acc:	6084      	str	r4, [r0, #8]
 8011ace:	6903      	ldr	r3, [r0, #16]
 8011ad0:	f8a3 a000 	strh.w	sl, [r3]
 8011ad4:	805a      	strh	r2, [r3, #2]
 8011ad6:	809e      	strh	r6, [r3, #4]
 8011ad8:	80de      	strh	r6, [r3, #6]
 8011ada:	9b06      	ldr	r3, [sp, #24]
 8011adc:	4293      	cmp	r3, r2
 8011ade:	464f      	mov	r7, r9
 8011ae0:	d19c      	bne.n	8011a1c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8011ae2:	9b01      	ldr	r3, [sp, #4]
 8011ae4:	6907      	ldr	r7, [r0, #16]
 8011ae6:	f1c3 0620 	rsb	r6, r3, #32
 8011aea:	9b05      	ldr	r3, [sp, #20]
 8011aec:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8011af0:	9b04      	ldr	r3, [sp, #16]
 8011af2:	429e      	cmp	r6, r3
 8011af4:	f040 81cc 	bne.w	8011e90 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8011af8:	f9b7 3000 	ldrsh.w	r3, [r7]
 8011afc:	459e      	cmp	lr, r3
 8011afe:	d104      	bne.n	8011b0a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8011b00:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8011b04:	429a      	cmp	r2, r3
 8011b06:	f43f ae36 	beq.w	8011776 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011b0a:	88f9      	ldrh	r1, [r7, #6]
 8011b0c:	88bb      	ldrh	r3, [r7, #4]
 8011b0e:	430b      	orrs	r3, r1
 8011b10:	d010      	beq.n	8011b34 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8011b12:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8011b16:	2b00      	cmp	r3, #0
 8011b18:	db0c      	blt.n	8011b34 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8011b1a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8011b1c:	428b      	cmp	r3, r1
 8011b1e:	da09      	bge.n	8011b34 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8011b20:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8011b24:	428b      	cmp	r3, r1
 8011b26:	bf38      	it	cc
 8011b28:	3708      	addcc	r7, #8
 8011b2a:	f103 0301 	add.w	r3, r3, #1
 8011b2e:	bf38      	it	cc
 8011b30:	6107      	strcc	r7, [r0, #16]
 8011b32:	6083      	str	r3, [r0, #8]
 8011b34:	6903      	ldr	r3, [r0, #16]
 8011b36:	f8a3 e000 	strh.w	lr, [r3]
 8011b3a:	e5ff      	b.n	801173c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8011b3c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8011b3e:	9c03      	ldr	r4, [sp, #12]
 8011b40:	42a2      	cmp	r2, r4
 8011b42:	f6ff ae18 	blt.w	8011776 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011b46:	9c06      	ldr	r4, [sp, #24]
 8011b48:	42a2      	cmp	r2, r4
 8011b4a:	bfb8      	it	lt
 8011b4c:	3201      	addlt	r2, #1
 8011b4e:	9c08      	ldr	r4, [sp, #32]
 8011b50:	bfb8      	it	lt
 8011b52:	9206      	strlt	r2, [sp, #24]
 8011b54:	f1c3 0220 	rsb	r2, r3, #32
 8011b58:	4362      	muls	r2, r4
 8011b5a:	2401      	movs	r4, #1
 8011b5c:	940b      	str	r4, [sp, #44]	; 0x2c
 8011b5e:	2420      	movs	r4, #32
 8011b60:	e6d5      	b.n	801190e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8011b62:	f009 021f 	and.w	r2, r9, #31
 8011b66:	ea4f 1861 	mov.w	r8, r1, asr #5
 8011b6a:	920c      	str	r2, [sp, #48]	; 0x30
 8011b6c:	9a01      	ldr	r2, [sp, #4]
 8011b6e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8011b72:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8011b76:	45b0      	cmp	r8, r6
 8011b78:	f001 011f 	and.w	r1, r1, #31
 8011b7c:	eba2 0203 	sub.w	r2, r2, r3
 8011b80:	d108      	bne.n	8011b94 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8011b82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011b84:	4419      	add	r1, r3
 8011b86:	4496      	add	lr, r2
 8011b88:	fb02 a101 	mla	r1, r2, r1, sl
 8011b8c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8011b90:	80e9      	strh	r1, [r5, #6]
 8011b92:	e6f9      	b.n	8011988 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8011b94:	2c00      	cmp	r4, #0
 8011b96:	f2c0 80a9 	blt.w	8011cec <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8011b9a:	2701      	movs	r7, #1
 8011b9c:	f1c1 0c20 	rsb	ip, r1, #32
 8011ba0:	970a      	str	r7, [sp, #40]	; 0x28
 8011ba2:	fb02 f20c 	mul.w	r2, r2, ip
 8011ba6:	2720      	movs	r7, #32
 8011ba8:	9709      	str	r7, [sp, #36]	; 0x24
 8011baa:	fb92 fcf4 	sdiv	ip, r2, r4
 8011bae:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8011bb0:	fb04 221c 	mls	r2, r4, ip, r2
 8011bb4:	2a00      	cmp	r2, #0
 8011bb6:	bfb8      	it	lt
 8011bb8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8011bbc:	4439      	add	r1, r7
 8011bbe:	fb0c a101 	mla	r1, ip, r1, sl
 8011bc2:	80e9      	strh	r1, [r5, #6]
 8011bc4:	44e6      	add	lr, ip
 8011bc6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011bc8:	f8a5 e004 	strh.w	lr, [r5, #4]
 8011bcc:	eb08 0501 	add.w	r5, r8, r1
 8011bd0:	6901      	ldr	r1, [r0, #16]
 8011bd2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8011bd6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8011bda:	bfb8      	it	lt
 8011bdc:	1912      	addlt	r2, r2, r4
 8011bde:	ea58 070e 	orrs.w	r7, r8, lr
 8011be2:	d010      	beq.n	8011c06 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8011be4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8011be8:	f1be 0f00 	cmp.w	lr, #0
 8011bec:	db0b      	blt.n	8011c06 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8011bee:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011bf0:	45be      	cmp	lr, r7
 8011bf2:	da08      	bge.n	8011c06 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8011bf4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8011bf8:	45be      	cmp	lr, r7
 8011bfa:	bf3c      	itt	cc
 8011bfc:	3108      	addcc	r1, #8
 8011bfe:	6101      	strcc	r1, [r0, #16]
 8011c00:	f10e 0101 	add.w	r1, lr, #1
 8011c04:	6081      	str	r1, [r0, #8]
 8011c06:	6901      	ldr	r1, [r0, #16]
 8011c08:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8011c0c:	800d      	strh	r5, [r1, #0]
 8011c0e:	f04f 0e00 	mov.w	lr, #0
 8011c12:	42ae      	cmp	r6, r5
 8011c14:	f8a1 8002 	strh.w	r8, [r1, #2]
 8011c18:	f8a1 e004 	strh.w	lr, [r1, #4]
 8011c1c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8011c20:	4463      	add	r3, ip
 8011c22:	d054      	beq.n	8011cce <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8011c24:	9901      	ldr	r1, [sp, #4]
 8011c26:	1ac9      	subs	r1, r1, r3
 8011c28:	4461      	add	r1, ip
 8011c2a:	0149      	lsls	r1, r1, #5
 8011c2c:	fb91 fef4 	sdiv	lr, r1, r4
 8011c30:	fb04 111e 	mls	r1, r4, lr, r1
 8011c34:	2900      	cmp	r1, #0
 8011c36:	bfb8      	it	lt
 8011c38:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8011c3c:	f10e 0701 	add.w	r7, lr, #1
 8011c40:	bfb8      	it	lt
 8011c42:	1909      	addlt	r1, r1, r4
 8011c44:	1b12      	subs	r2, r2, r4
 8011c46:	970d      	str	r7, [sp, #52]	; 0x34
 8011c48:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8011c4c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8011c4e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8011c52:	1852      	adds	r2, r2, r1
 8011c54:	bf54      	ite	pl
 8011c56:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8011c5a:	46f4      	movmi	ip, lr
 8011c5c:	44e3      	add	fp, ip
 8011c5e:	f8aa b004 	strh.w	fp, [sl, #4]
 8011c62:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8011c66:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8011c6a:	f8aa b006 	strh.w	fp, [sl, #6]
 8011c6e:	4463      	add	r3, ip
 8011c70:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011c74:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8011c78:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8011c7c:	bf58      	it	pl
 8011c7e:	1b12      	subpl	r2, r2, r4
 8011c80:	443d      	add	r5, r7
 8011c82:	ea5b 070a 	orrs.w	r7, fp, sl
 8011c86:	d014      	beq.n	8011cb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8011c88:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8011c8c:	f1ba 0f00 	cmp.w	sl, #0
 8011c90:	db0f      	blt.n	8011cb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8011c92:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011c94:	45ba      	cmp	sl, r7
 8011c96:	da0c      	bge.n	8011cb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8011c98:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8011c9c:	45ba      	cmp	sl, r7
 8011c9e:	bf38      	it	cc
 8011ca0:	f10c 0c08 	addcc.w	ip, ip, #8
 8011ca4:	f10a 0a01 	add.w	sl, sl, #1
 8011ca8:	bf38      	it	cc
 8011caa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8011cae:	f8c0 a008 	str.w	sl, [r0, #8]
 8011cb2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011cb6:	f04f 0700 	mov.w	r7, #0
 8011cba:	42ae      	cmp	r6, r5
 8011cbc:	f8ac 5000 	strh.w	r5, [ip]
 8011cc0:	f8ac 8002 	strh.w	r8, [ip, #2]
 8011cc4:	f8ac 7004 	strh.w	r7, [ip, #4]
 8011cc8:	f8ac 7006 	strh.w	r7, [ip, #6]
 8011ccc:	d1bc      	bne.n	8011c48 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8011cce:	6904      	ldr	r4, [r0, #16]
 8011cd0:	9a01      	ldr	r2, [sp, #4]
 8011cd2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011cd4:	1ad3      	subs	r3, r2, r3
 8011cd6:	88a2      	ldrh	r2, [r4, #4]
 8011cd8:	441a      	add	r2, r3
 8011cda:	80a2      	strh	r2, [r4, #4]
 8011cdc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011cde:	3120      	adds	r1, #32
 8011ce0:	1a89      	subs	r1, r1, r2
 8011ce2:	88e2      	ldrh	r2, [r4, #6]
 8011ce4:	fb03 2301 	mla	r3, r3, r1, r2
 8011ce8:	80e3      	strh	r3, [r4, #6]
 8011cea:	e64d      	b.n	8011988 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8011cec:	f04f 37ff 	mov.w	r7, #4294967295
 8011cf0:	970a      	str	r7, [sp, #40]	; 0x28
 8011cf2:	434a      	muls	r2, r1
 8011cf4:	4264      	negs	r4, r4
 8011cf6:	2700      	movs	r7, #0
 8011cf8:	e756      	b.n	8011ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8011cfa:	ea4f 1867 	mov.w	r8, r7, asr #5
 8011cfe:	f009 031f 	and.w	r3, r9, #31
 8011d02:	45d0      	cmp	r8, sl
 8011d04:	f007 071f 	and.w	r7, r7, #31
 8011d08:	930f      	str	r3, [sp, #60]	; 0x3c
 8011d0a:	fa1f fc8c 	uxth.w	ip, ip
 8011d0e:	fa1f fe8e 	uxth.w	lr, lr
 8011d12:	d10a      	bne.n	8011d2a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8011d14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011d16:	449c      	add	ip, r3
 8011d18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011d1a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8011d1e:	441f      	add	r7, r3
 8011d20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011d22:	fb03 e707 	mla	r7, r3, r7, lr
 8011d26:	80ef      	strh	r7, [r5, #6]
 8011d28:	e6b9      	b.n	8011a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011d2a:	2900      	cmp	r1, #0
 8011d2c:	f2c0 80a8 	blt.w	8011e80 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8011d30:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011d32:	f1c7 0320 	rsb	r3, r7, #32
 8011d36:	4363      	muls	r3, r4
 8011d38:	2401      	movs	r4, #1
 8011d3a:	940d      	str	r4, [sp, #52]	; 0x34
 8011d3c:	2420      	movs	r4, #32
 8011d3e:	940c      	str	r4, [sp, #48]	; 0x30
 8011d40:	fb93 f4f1 	sdiv	r4, r3, r1
 8011d44:	fb01 3b14 	mls	fp, r1, r4, r3
 8011d48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011d4a:	f1bb 0f00 	cmp.w	fp, #0
 8011d4e:	bfb8      	it	lt
 8011d50:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8011d54:	441f      	add	r7, r3
 8011d56:	fb04 e707 	mla	r7, r4, r7, lr
 8011d5a:	44a4      	add	ip, r4
 8011d5c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8011d60:	80ef      	strh	r7, [r5, #6]
 8011d62:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011d66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011d68:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8011d6c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8011d70:	bfb8      	it	lt
 8011d72:	448b      	addlt	fp, r1
 8011d74:	eb08 0503 	add.w	r5, r8, r3
 8011d78:	ea5e 0307 	orrs.w	r3, lr, r7
 8011d7c:	d011      	beq.n	8011da2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8011d7e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8011d82:	f1be 0f00 	cmp.w	lr, #0
 8011d86:	db0c      	blt.n	8011da2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8011d88:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011d8a:	45be      	cmp	lr, r7
 8011d8c:	da09      	bge.n	8011da2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8011d8e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8011d92:	45be      	cmp	lr, r7
 8011d94:	bf3c      	itt	cc
 8011d96:	f10c 0708 	addcc.w	r7, ip, #8
 8011d9a:	6107      	strcc	r7, [r0, #16]
 8011d9c:	f10e 0701 	add.w	r7, lr, #1
 8011da0:	6087      	str	r7, [r0, #8]
 8011da2:	6907      	ldr	r7, [r0, #16]
 8011da4:	b213      	sxth	r3, r2
 8011da6:	9310      	str	r3, [sp, #64]	; 0x40
 8011da8:	807b      	strh	r3, [r7, #2]
 8011daa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011dac:	803d      	strh	r5, [r7, #0]
 8011dae:	4555      	cmp	r5, sl
 8011db0:	80be      	strh	r6, [r7, #4]
 8011db2:	80fe      	strh	r6, [r7, #6]
 8011db4:	eb04 0c03 	add.w	ip, r4, r3
 8011db8:	d051      	beq.n	8011e5e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8011dba:	9b01      	ldr	r3, [sp, #4]
 8011dbc:	eba3 070c 	sub.w	r7, r3, ip
 8011dc0:	443c      	add	r4, r7
 8011dc2:	0164      	lsls	r4, r4, #5
 8011dc4:	fb94 f8f1 	sdiv	r8, r4, r1
 8011dc8:	fb01 4418 	mls	r4, r1, r8, r4
 8011dcc:	2c00      	cmp	r4, #0
 8011dce:	bfb8      	it	lt
 8011dd0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8011dd4:	ebab 0301 	sub.w	r3, fp, r1
 8011dd8:	f108 0701 	add.w	r7, r8, #1
 8011ddc:	bfb8      	it	lt
 8011dde:	1864      	addlt	r4, r4, r1
 8011de0:	9309      	str	r3, [sp, #36]	; 0x24
 8011de2:	9711      	str	r7, [sp, #68]	; 0x44
 8011de4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011de6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8011dea:	191b      	adds	r3, r3, r4
 8011dec:	bf58      	it	pl
 8011dee:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8011df0:	f8be b004 	ldrh.w	fp, [lr, #4]
 8011df4:	9309      	str	r3, [sp, #36]	; 0x24
 8011df6:	bf48      	it	mi
 8011df8:	4647      	movmi	r7, r8
 8011dfa:	44bb      	add	fp, r7
 8011dfc:	f8ae b004 	strh.w	fp, [lr, #4]
 8011e00:	f8be b006 	ldrh.w	fp, [lr, #6]
 8011e04:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8011e08:	f8ae b006 	strh.w	fp, [lr, #6]
 8011e0c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8011e10:	44bc      	add	ip, r7
 8011e12:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8011e14:	f8be b006 	ldrh.w	fp, [lr, #6]
 8011e18:	443d      	add	r5, r7
 8011e1a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8011e1e:	bf5c      	itt	pl
 8011e20:	1a5b      	subpl	r3, r3, r1
 8011e22:	9309      	strpl	r3, [sp, #36]	; 0x24
 8011e24:	ea5b 0307 	orrs.w	r3, fp, r7
 8011e28:	d011      	beq.n	8011e4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8011e2a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8011e2e:	f1bb 0f00 	cmp.w	fp, #0
 8011e32:	db0c      	blt.n	8011e4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8011e34:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011e36:	45bb      	cmp	fp, r7
 8011e38:	da09      	bge.n	8011e4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8011e3a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8011e3e:	45bb      	cmp	fp, r7
 8011e40:	bf3c      	itt	cc
 8011e42:	f10e 0708 	addcc.w	r7, lr, #8
 8011e46:	6107      	strcc	r7, [r0, #16]
 8011e48:	f10b 0701 	add.w	r7, fp, #1
 8011e4c:	6087      	str	r7, [r0, #8]
 8011e4e:	6907      	ldr	r7, [r0, #16]
 8011e50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e52:	803d      	strh	r5, [r7, #0]
 8011e54:	4555      	cmp	r5, sl
 8011e56:	807b      	strh	r3, [r7, #2]
 8011e58:	80be      	strh	r6, [r7, #4]
 8011e5a:	80fe      	strh	r6, [r7, #6]
 8011e5c:	d1c2      	bne.n	8011de4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8011e5e:	9b01      	ldr	r3, [sp, #4]
 8011e60:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8011e62:	eba3 0c0c 	sub.w	ip, r3, ip
 8011e66:	6903      	ldr	r3, [r0, #16]
 8011e68:	8899      	ldrh	r1, [r3, #4]
 8011e6a:	4461      	add	r1, ip
 8011e6c:	8099      	strh	r1, [r3, #4]
 8011e6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011e70:	3720      	adds	r7, #32
 8011e72:	1a7f      	subs	r7, r7, r1
 8011e74:	88d9      	ldrh	r1, [r3, #6]
 8011e76:	fb0c 1c07 	mla	ip, ip, r7, r1
 8011e7a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8011e7e:	e60e      	b.n	8011a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011e80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011e82:	f04f 34ff 	mov.w	r4, #4294967295
 8011e86:	940d      	str	r4, [sp, #52]	; 0x34
 8011e88:	437b      	muls	r3, r7
 8011e8a:	4249      	negs	r1, r1
 8011e8c:	2400      	movs	r4, #0
 8011e8e:	e756      	b.n	8011d3e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8011e90:	9905      	ldr	r1, [sp, #20]
 8011e92:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8011e96:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8011e9a:	f001 011f 	and.w	r1, r1, #31
 8011e9e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8011ea2:	9102      	str	r1, [sp, #8]
 8011ea4:	9904      	ldr	r1, [sp, #16]
 8011ea6:	45f3      	cmp	fp, lr
 8011ea8:	f009 0c1f 	and.w	ip, r9, #31
 8011eac:	eba1 0406 	sub.w	r4, r1, r6
 8011eb0:	d108      	bne.n	8011ec4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8011eb2:	9b02      	ldr	r3, [sp, #8]
 8011eb4:	449c      	add	ip, r3
 8011eb6:	44a0      	add	r8, r4
 8011eb8:	fb04 a40c 	mla	r4, r4, ip, sl
 8011ebc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8011ec0:	80fc      	strh	r4, [r7, #6]
 8011ec2:	e458      	b.n	8011776 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011ec4:	9905      	ldr	r1, [sp, #20]
 8011ec6:	ebb1 0109 	subs.w	r1, r1, r9
 8011eca:	bf5b      	ittet	pl
 8011ecc:	f1cc 0520 	rsbpl	r5, ip, #32
 8011ed0:	436c      	mulpl	r4, r5
 8011ed2:	2500      	movmi	r5, #0
 8011ed4:	2520      	movpl	r5, #32
 8011ed6:	bf44      	itt	mi
 8011ed8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8011edc:	4249      	negmi	r1, r1
 8011ede:	9501      	str	r5, [sp, #4]
 8011ee0:	9b01      	ldr	r3, [sp, #4]
 8011ee2:	fb94 f5f1 	sdiv	r5, r4, r1
 8011ee6:	fb01 4415 	mls	r4, r1, r5, r4
 8011eea:	bf54      	ite	pl
 8011eec:	f04f 0901 	movpl.w	r9, #1
 8011ef0:	f04f 39ff 	movmi.w	r9, #4294967295
 8011ef4:	2c00      	cmp	r4, #0
 8011ef6:	bfb8      	it	lt
 8011ef8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8011efc:	449c      	add	ip, r3
 8011efe:	44a8      	add	r8, r5
 8011f00:	fb05 ac0c 	mla	ip, r5, ip, sl
 8011f04:	f8a7 8004 	strh.w	r8, [r7, #4]
 8011f08:	f8a7 c006 	strh.w	ip, [r7, #6]
 8011f0c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011f10:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8011f14:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8011f18:	bfb8      	it	lt
 8011f1a:	1864      	addlt	r4, r4, r1
 8011f1c:	ea58 0707 	orrs.w	r7, r8, r7
 8011f20:	eb0b 0309 	add.w	r3, fp, r9
 8011f24:	d011      	beq.n	8011f4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8011f26:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8011f2a:	f1b8 0f00 	cmp.w	r8, #0
 8011f2e:	db0c      	blt.n	8011f4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8011f30:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011f32:	45b8      	cmp	r8, r7
 8011f34:	da09      	bge.n	8011f4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8011f36:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8011f3a:	45b8      	cmp	r8, r7
 8011f3c:	bf3c      	itt	cc
 8011f3e:	f10c 0708 	addcc.w	r7, ip, #8
 8011f42:	6107      	strcc	r7, [r0, #16]
 8011f44:	f108 0701 	add.w	r7, r8, #1
 8011f48:	6087      	str	r7, [r0, #8]
 8011f4a:	6907      	ldr	r7, [r0, #16]
 8011f4c:	f04f 0c00 	mov.w	ip, #0
 8011f50:	b212      	sxth	r2, r2
 8011f52:	459e      	cmp	lr, r3
 8011f54:	803b      	strh	r3, [r7, #0]
 8011f56:	807a      	strh	r2, [r7, #2]
 8011f58:	f8a7 c004 	strh.w	ip, [r7, #4]
 8011f5c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8011f60:	442e      	add	r6, r5
 8011f62:	d04d      	beq.n	8012000 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8011f64:	9f04      	ldr	r7, [sp, #16]
 8011f66:	1bbf      	subs	r7, r7, r6
 8011f68:	443d      	add	r5, r7
 8011f6a:	016d      	lsls	r5, r5, #5
 8011f6c:	fb95 f8f1 	sdiv	r8, r5, r1
 8011f70:	fb01 5518 	mls	r5, r1, r8, r5
 8011f74:	4565      	cmp	r5, ip
 8011f76:	bfb8      	it	lt
 8011f78:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8011f7c:	f108 0701 	add.w	r7, r8, #1
 8011f80:	bfb8      	it	lt
 8011f82:	186d      	addlt	r5, r5, r1
 8011f84:	1a64      	subs	r4, r4, r1
 8011f86:	9703      	str	r7, [sp, #12]
 8011f88:	f04f 0a00 	mov.w	sl, #0
 8011f8c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011f90:	1964      	adds	r4, r4, r5
 8011f92:	bf58      	it	pl
 8011f94:	9f03      	ldrpl	r7, [sp, #12]
 8011f96:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8011f9a:	bf48      	it	mi
 8011f9c:	4647      	movmi	r7, r8
 8011f9e:	44bb      	add	fp, r7
 8011fa0:	f8ac b004 	strh.w	fp, [ip, #4]
 8011fa4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8011fa8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8011fac:	f8ac b006 	strh.w	fp, [ip, #6]
 8011fb0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011fb4:	443e      	add	r6, r7
 8011fb6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8011fba:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8011fbe:	bf58      	it	pl
 8011fc0:	1a64      	subpl	r4, r4, r1
 8011fc2:	ea5b 0707 	orrs.w	r7, fp, r7
 8011fc6:	444b      	add	r3, r9
 8011fc8:	d011      	beq.n	8011fee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8011fca:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8011fce:	f1bb 0f00 	cmp.w	fp, #0
 8011fd2:	db0c      	blt.n	8011fee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8011fd4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011fd6:	45bb      	cmp	fp, r7
 8011fd8:	da09      	bge.n	8011fee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8011fda:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8011fde:	45bb      	cmp	fp, r7
 8011fe0:	bf3c      	itt	cc
 8011fe2:	f10c 0708 	addcc.w	r7, ip, #8
 8011fe6:	6107      	strcc	r7, [r0, #16]
 8011fe8:	f10b 0701 	add.w	r7, fp, #1
 8011fec:	6087      	str	r7, [r0, #8]
 8011fee:	6907      	ldr	r7, [r0, #16]
 8011ff0:	459e      	cmp	lr, r3
 8011ff2:	803b      	strh	r3, [r7, #0]
 8011ff4:	807a      	strh	r2, [r7, #2]
 8011ff6:	f8a7 a004 	strh.w	sl, [r7, #4]
 8011ffa:	f8a7 a006 	strh.w	sl, [r7, #6]
 8011ffe:	d1c5      	bne.n	8011f8c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8012000:	9b04      	ldr	r3, [sp, #16]
 8012002:	1b9e      	subs	r6, r3, r6
 8012004:	6903      	ldr	r3, [r0, #16]
 8012006:	889a      	ldrh	r2, [r3, #4]
 8012008:	4432      	add	r2, r6
 801200a:	809a      	strh	r2, [r3, #4]
 801200c:	9a02      	ldr	r2, [sp, #8]
 801200e:	f102 0c20 	add.w	ip, r2, #32
 8012012:	9a01      	ldr	r2, [sp, #4]
 8012014:	ebac 0c02 	sub.w	ip, ip, r2
 8012018:	88da      	ldrh	r2, [r3, #6]
 801201a:	fb06 260c 	mla	r6, r6, ip, r2
 801201e:	80de      	strh	r6, [r3, #6]
 8012020:	f7ff bba9 	b.w	8011776 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08012024 <_ZN8touchgfx7Outline6lineToEii>:
 8012024:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012026:	079b      	lsls	r3, r3, #30
 8012028:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801202a:	460e      	mov	r6, r1
 801202c:	4615      	mov	r5, r2
 801202e:	d511      	bpl.n	8012054 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012030:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8012034:	ea86 0701 	eor.w	r7, r6, r1
 8012038:	ea85 0302 	eor.w	r3, r5, r2
 801203c:	433b      	orrs	r3, r7
 801203e:	d009      	beq.n	8012054 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012040:	4633      	mov	r3, r6
 8012042:	9500      	str	r5, [sp, #0]
 8012044:	f7ff fb3e 	bl	80116c4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8012048:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801204a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801204e:	f043 0301 	orr.w	r3, r3, #1
 8012052:	6243      	str	r3, [r0, #36]	; 0x24
 8012054:	b003      	add	sp, #12
 8012056:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012058 <_ZN8touchgfx7Outline6moveToEii>:
 8012058:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801205a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801205c:	4615      	mov	r5, r2
 801205e:	079a      	lsls	r2, r3, #30
 8012060:	4604      	mov	r4, r0
 8012062:	460e      	mov	r6, r1
 8012064:	d401      	bmi.n	801206a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8012066:	f7ff faf9 	bl	801165c <_ZN8touchgfx7Outline5resetEv>
 801206a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801206c:	07db      	lsls	r3, r3, #31
 801206e:	d504      	bpl.n	801207a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8012070:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8012074:	4620      	mov	r0, r4
 8012076:	f7ff ffd5 	bl	8012024 <_ZN8touchgfx7Outline6lineToEii>
 801207a:	6923      	ldr	r3, [r4, #16]
 801207c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012080:	1170      	asrs	r0, r6, #5
 8012082:	4290      	cmp	r0, r2
 8012084:	ea4f 1165 	mov.w	r1, r5, asr #5
 8012088:	d103      	bne.n	8012092 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801208a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801208e:	4291      	cmp	r1, r2
 8012090:	d01a      	beq.n	80120c8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8012092:	88df      	ldrh	r7, [r3, #6]
 8012094:	889a      	ldrh	r2, [r3, #4]
 8012096:	433a      	orrs	r2, r7
 8012098:	d010      	beq.n	80120bc <_ZN8touchgfx7Outline6moveToEii+0x64>
 801209a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801209e:	2a00      	cmp	r2, #0
 80120a0:	db0c      	blt.n	80120bc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80120a2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80120a4:	42ba      	cmp	r2, r7
 80120a6:	da09      	bge.n	80120bc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80120a8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80120ac:	42ba      	cmp	r2, r7
 80120ae:	bf38      	it	cc
 80120b0:	3308      	addcc	r3, #8
 80120b2:	f102 0201 	add.w	r2, r2, #1
 80120b6:	bf38      	it	cc
 80120b8:	6123      	strcc	r3, [r4, #16]
 80120ba:	60a2      	str	r2, [r4, #8]
 80120bc:	6923      	ldr	r3, [r4, #16]
 80120be:	2200      	movs	r2, #0
 80120c0:	8018      	strh	r0, [r3, #0]
 80120c2:	8059      	strh	r1, [r3, #2]
 80120c4:	809a      	strh	r2, [r3, #4]
 80120c6:	80da      	strh	r2, [r3, #6]
 80120c8:	6166      	str	r6, [r4, #20]
 80120ca:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80120ce:	6225      	str	r5, [r4, #32]
 80120d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080120d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80120d2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80120d6:	b0d0      	sub	sp, #320	; 0x140
 80120d8:	466c      	mov	r4, sp
 80120da:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80120de:	4627      	mov	r7, r4
 80120e0:	1a0d      	subs	r5, r1, r0
 80120e2:	2d48      	cmp	r5, #72	; 0x48
 80120e4:	f100 0308 	add.w	r3, r0, #8
 80120e8:	f340 80d5 	ble.w	8012296 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80120ec:	112d      	asrs	r5, r5, #4
 80120ee:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80120f2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80120f6:	6816      	ldr	r6, [r2, #0]
 80120f8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80120fc:	6006      	str	r6, [r0, #0]
 80120fe:	6856      	ldr	r6, [r2, #4]
 8012100:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012104:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012108:	6046      	str	r6, [r0, #4]
 801210a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801210e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8012112:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012116:	f8a2 c006 	strh.w	ip, [r2, #6]
 801211a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801211e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8012122:	4565      	cmp	r5, ip
 8012124:	f1a1 0208 	sub.w	r2, r1, #8
 8012128:	db06      	blt.n	8012138 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801212a:	d119      	bne.n	8012160 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801212c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8012130:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8012134:	42ae      	cmp	r6, r5
 8012136:	dd13      	ble.n	8012160 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012138:	460e      	mov	r6, r1
 801213a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801213e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012142:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8012146:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801214a:	601d      	str	r5, [r3, #0]
 801214c:	6875      	ldr	r5, [r6, #4]
 801214e:	605d      	str	r5, [r3, #4]
 8012150:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012154:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012158:	f821 8c04 	strh.w	r8, [r1, #-4]
 801215c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012160:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012164:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8012168:	42ae      	cmp	r6, r5
 801216a:	db06      	blt.n	801217a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801216c:	d116      	bne.n	801219c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801216e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8012172:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8012176:	45ac      	cmp	ip, r5
 8012178:	da10      	bge.n	801219c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801217a:	681d      	ldr	r5, [r3, #0]
 801217c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012180:	6005      	str	r5, [r0, #0]
 8012182:	685d      	ldr	r5, [r3, #4]
 8012184:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012188:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801218c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8012190:	6045      	str	r5, [r0, #4]
 8012192:	8146      	strh	r6, [r0, #10]
 8012194:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8012198:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801219c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80121a0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80121a4:	4565      	cmp	r5, ip
 80121a6:	db06      	blt.n	80121b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80121a8:	d119      	bne.n	80121de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80121aa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80121ae:	f9b0 5000 	ldrsh.w	r5, [r0]
 80121b2:	42ae      	cmp	r6, r5
 80121b4:	da13      	bge.n	80121de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80121b6:	460e      	mov	r6, r1
 80121b8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80121bc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80121c0:	6005      	str	r5, [r0, #0]
 80121c2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80121c6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80121ca:	6875      	ldr	r5, [r6, #4]
 80121cc:	6045      	str	r5, [r0, #4]
 80121ce:	f821 9c08 	strh.w	r9, [r1, #-8]
 80121d2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80121d6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80121da:	f821 ec02 	strh.w	lr, [r1, #-2]
 80121de:	3308      	adds	r3, #8
 80121e0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80121e4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80121e8:	45e6      	cmp	lr, ip
 80121ea:	dbf8      	blt.n	80121de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80121ec:	d105      	bne.n	80121fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80121ee:	f9b3 6000 	ldrsh.w	r6, [r3]
 80121f2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80121f6:	42ae      	cmp	r6, r5
 80121f8:	dbf1      	blt.n	80121de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80121fa:	4615      	mov	r5, r2
 80121fc:	3a08      	subs	r2, #8
 80121fe:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8012202:	45b4      	cmp	ip, r6
 8012204:	dbf9      	blt.n	80121fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012206:	d105      	bne.n	8012214 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8012208:	f9b0 8000 	ldrsh.w	r8, [r0]
 801220c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8012210:	45b0      	cmp	r8, r6
 8012212:	dbf2      	blt.n	80121fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012214:	4293      	cmp	r3, r2
 8012216:	f1a5 0608 	sub.w	r6, r5, #8
 801221a:	d816      	bhi.n	801224a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801221c:	f8d6 c000 	ldr.w	ip, [r6]
 8012220:	f9b3 a000 	ldrsh.w	sl, [r3]
 8012224:	f8c3 c000 	str.w	ip, [r3]
 8012228:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801222c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8012230:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8012234:	f8c3 c004 	str.w	ip, [r3, #4]
 8012238:	f825 ac08 	strh.w	sl, [r5, #-8]
 801223c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8012240:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012244:	f825 8c02 	strh.w	r8, [r5, #-2]
 8012248:	e7c9      	b.n	80121de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801224a:	f8d6 e000 	ldr.w	lr, [r6]
 801224e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8012252:	f8c0 e000 	str.w	lr, [r0]
 8012256:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801225a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801225e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8012262:	f8c0 e004 	str.w	lr, [r0, #4]
 8012266:	f825 ac08 	strh.w	sl, [r5, #-8]
 801226a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801226e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012272:	f825 8c02 	strh.w	r8, [r5, #-2]
 8012276:	1acd      	subs	r5, r1, r3
 8012278:	1a16      	subs	r6, r2, r0
 801227a:	10ed      	asrs	r5, r5, #3
 801227c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8012280:	bfb5      	itete	lt
 8012282:	e9c4 0200 	strdlt	r0, r2, [r4]
 8012286:	e9c4 3100 	strdge	r3, r1, [r4]
 801228a:	460a      	movlt	r2, r1
 801228c:	4603      	movge	r3, r0
 801228e:	3408      	adds	r4, #8
 8012290:	4618      	mov	r0, r3
 8012292:	4611      	mov	r1, r2
 8012294:	e724      	b.n	80120e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8012296:	4299      	cmp	r1, r3
 8012298:	d928      	bls.n	80122ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801229a:	f1a3 0210 	sub.w	r2, r3, #16
 801229e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80122a2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80122a6:	45ac      	cmp	ip, r5
 80122a8:	db06      	blt.n	80122b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80122aa:	d11d      	bne.n	80122e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80122ac:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80122b0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80122b4:	42ae      	cmp	r6, r5
 80122b6:	da17      	bge.n	80122e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80122b8:	4615      	mov	r5, r2
 80122ba:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80122be:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80122c2:	6116      	str	r6, [r2, #16]
 80122c4:	686e      	ldr	r6, [r5, #4]
 80122c6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80122ca:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80122ce:	f8a2 9008 	strh.w	r9, [r2, #8]
 80122d2:	42a8      	cmp	r0, r5
 80122d4:	6156      	str	r6, [r2, #20]
 80122d6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80122da:	f8a2 800c 	strh.w	r8, [r2, #12]
 80122de:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80122e2:	f1a2 0208 	sub.w	r2, r2, #8
 80122e6:	d1da      	bne.n	801229e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80122e8:	3308      	adds	r3, #8
 80122ea:	e7d4      	b.n	8012296 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80122ec:	42bc      	cmp	r4, r7
 80122ee:	d903      	bls.n	80122f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80122f0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80122f4:	3c08      	subs	r4, #8
 80122f6:	e6f3      	b.n	80120e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80122f8:	b050      	add	sp, #320	; 0x140
 80122fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080122fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80122fe:	b510      	push	{r4, lr}
 8012300:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012302:	07da      	lsls	r2, r3, #31
 8012304:	4604      	mov	r4, r0
 8012306:	d507      	bpl.n	8012318 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8012308:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801230c:	f7ff fe8a 	bl	8012024 <_ZN8touchgfx7Outline6lineToEii>
 8012310:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012312:	f023 0301 	bic.w	r3, r3, #1
 8012316:	6243      	str	r3, [r0, #36]	; 0x24
 8012318:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801231a:	079b      	lsls	r3, r3, #30
 801231c:	d521      	bpl.n	8012362 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801231e:	6923      	ldr	r3, [r4, #16]
 8012320:	88d9      	ldrh	r1, [r3, #6]
 8012322:	889a      	ldrh	r2, [r3, #4]
 8012324:	430a      	orrs	r2, r1
 8012326:	d010      	beq.n	801234a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012328:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801232c:	2a00      	cmp	r2, #0
 801232e:	db0c      	blt.n	801234a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012330:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012332:	428a      	cmp	r2, r1
 8012334:	da09      	bge.n	801234a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012336:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801233a:	4291      	cmp	r1, r2
 801233c:	bf88      	it	hi
 801233e:	3308      	addhi	r3, #8
 8012340:	f102 0201 	add.w	r2, r2, #1
 8012344:	bf88      	it	hi
 8012346:	6123      	strhi	r3, [r4, #16]
 8012348:	60a2      	str	r2, [r4, #8]
 801234a:	68a1      	ldr	r1, [r4, #8]
 801234c:	b129      	cbz	r1, 801235a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801234e:	6863      	ldr	r3, [r4, #4]
 8012350:	4299      	cmp	r1, r3
 8012352:	d802      	bhi.n	801235a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8012354:	68e0      	ldr	r0, [r4, #12]
 8012356:	f7ff febc 	bl	80120d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801235a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801235c:	f023 0302 	bic.w	r3, r3, #2
 8012360:	6263      	str	r3, [r4, #36]	; 0x24
 8012362:	68e0      	ldr	r0, [r4, #12]
 8012364:	bd10      	pop	{r4, pc}
	...

08012368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8012368:	4b02      	ldr	r3, [pc, #8]	; (8012374 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801236a:	6018      	str	r0, [r3, #0]
 801236c:	4b02      	ldr	r3, [pc, #8]	; (8012378 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801236e:	6019      	str	r1, [r3, #0]
 8012370:	4770      	bx	lr
 8012372:	bf00      	nop
 8012374:	200137c4 	.word	0x200137c4
 8012378:	200137c8 	.word	0x200137c8

0801237c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801237c:	4a02      	ldr	r2, [pc, #8]	; (8012388 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801237e:	2300      	movs	r3, #0
 8012380:	6013      	str	r3, [r2, #0]
 8012382:	4a02      	ldr	r2, [pc, #8]	; (801238c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8012384:	6013      	str	r3, [r2, #0]
 8012386:	4770      	bx	lr
 8012388:	200137c4 	.word	0x200137c4
 801238c:	200137c8 	.word	0x200137c8

08012390 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8012390:	4b01      	ldr	r3, [pc, #4]	; (8012398 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8012392:	6818      	ldr	r0, [r3, #0]
 8012394:	4770      	bx	lr
 8012396:	bf00      	nop
 8012398:	200137c4 	.word	0x200137c4

0801239c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801239c:	4b01      	ldr	r3, [pc, #4]	; (80123a4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801239e:	6818      	ldr	r0, [r3, #0]
 80123a0:	4770      	bx	lr
 80123a2:	bf00      	nop
 80123a4:	200137c8 	.word	0x200137c8

080123a8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80123a8:	b510      	push	{r4, lr}
 80123aa:	6803      	ldr	r3, [r0, #0]
 80123ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80123ae:	460c      	mov	r4, r1
 80123b0:	4798      	blx	r3
 80123b2:	1b03      	subs	r3, r0, r4
 80123b4:	4258      	negs	r0, r3
 80123b6:	4158      	adcs	r0, r3
 80123b8:	bd10      	pop	{r4, pc}
	...

080123bc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80123bc:	4b01      	ldr	r3, [pc, #4]	; (80123c4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80123be:	6019      	str	r1, [r3, #0]
 80123c0:	4770      	bx	lr
 80123c2:	bf00      	nop
 80123c4:	200137cc 	.word	0x200137cc

080123c8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80123c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123cc:	4696      	mov	lr, r2
 80123ce:	4605      	mov	r5, r0
 80123d0:	4614      	mov	r4, r2
 80123d2:	460e      	mov	r6, r1
 80123d4:	461f      	mov	r7, r3
 80123d6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80123da:	b097      	sub	sp, #92	; 0x5c
 80123dc:	f10d 0c1c 	add.w	ip, sp, #28
 80123e0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80123e4:	f8de 3000 	ldr.w	r3, [lr]
 80123e8:	f8cc 3000 	str.w	r3, [ip]
 80123ec:	f104 0e14 	add.w	lr, r4, #20
 80123f0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80123f4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80123f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80123fc:	f8de 3000 	ldr.w	r3, [lr]
 8012400:	f8cc 3000 	str.w	r3, [ip]
 8012404:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8012408:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801240c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8012410:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012414:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8012418:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801241c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8012420:	f8de 3000 	ldr.w	r3, [lr]
 8012424:	f8cc 3000 	str.w	r3, [ip]
 8012428:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801242a:	682b      	ldr	r3, [r5, #0]
 801242c:	9201      	str	r2, [sp, #4]
 801242e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012432:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8012434:	9200      	str	r2, [sp, #0]
 8012436:	f8cd 8008 	str.w	r8, [sp, #8]
 801243a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801243e:	aa07      	add	r2, sp, #28
 8012440:	463b      	mov	r3, r7
 8012442:	4631      	mov	r1, r6
 8012444:	4628      	mov	r0, r5
 8012446:	47d8      	blx	fp
 8012448:	46a6      	mov	lr, r4
 801244a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801244e:	f10d 0c1c 	add.w	ip, sp, #28
 8012452:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012456:	f8de 3000 	ldr.w	r3, [lr]
 801245a:	f8cc 3000 	str.w	r3, [ip]
 801245e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8012462:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012466:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801246a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801246e:	343c      	adds	r4, #60	; 0x3c
 8012470:	f8de 3000 	ldr.w	r3, [lr]
 8012474:	f8cc 3000 	str.w	r3, [ip]
 8012478:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801247a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801247e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012482:	6823      	ldr	r3, [r4, #0]
 8012484:	f8cc 3000 	str.w	r3, [ip]
 8012488:	682b      	ldr	r3, [r5, #0]
 801248a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801248e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8012490:	9201      	str	r2, [sp, #4]
 8012492:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8012494:	9200      	str	r2, [sp, #0]
 8012496:	f8cd 8008 	str.w	r8, [sp, #8]
 801249a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801249c:	aa07      	add	r2, sp, #28
 801249e:	463b      	mov	r3, r7
 80124a0:	4631      	mov	r1, r6
 80124a2:	4628      	mov	r0, r5
 80124a4:	47a0      	blx	r4
 80124a6:	b017      	add	sp, #92	; 0x5c
 80124a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080124ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80124ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124b0:	b08d      	sub	sp, #52	; 0x34
 80124b2:	4688      	mov	r8, r1
 80124b4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80124b6:	f8d3 c000 	ldr.w	ip, [r3]
 80124ba:	680f      	ldr	r7, [r1, #0]
 80124bc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80124c0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80124c4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80124c8:	edd3 6a07 	vldr	s13, [r3, #28]
 80124cc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80124ce:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80124d2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80124d6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80124da:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80124de:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80124e2:	eba7 070c 	sub.w	r7, r7, ip
 80124e6:	42bc      	cmp	r4, r7
 80124e8:	bfa8      	it	ge
 80124ea:	463c      	movge	r4, r7
 80124ec:	ee07 4a90 	vmov	s15, r4
 80124f0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80124f4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80124f8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80124fc:	ee65 4a24 	vmul.f32	s9, s10, s9
 8012500:	ee25 5a27 	vmul.f32	s10, s10, s15
 8012504:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8012508:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801250c:	eb09 0e0c 	add.w	lr, r9, ip
 8012510:	4571      	cmp	r1, lr
 8012512:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8012516:	ee32 1a05 	vadd.f32	s2, s4, s10
 801251a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801251e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012522:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012526:	f340 808d 	ble.w	8012644 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801252a:	eba1 060e 	sub.w	r6, r1, lr
 801252e:	fb96 f5f4 	sdiv	r5, r6, r4
 8012532:	ee07 5a10 	vmov	s14, r5
 8012536:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801253a:	2d00      	cmp	r5, #0
 801253c:	fb04 6615 	mls	r6, r4, r5, r6
 8012540:	eea7 0a04 	vfma.f32	s0, s14, s8
 8012544:	eee7 0a24 	vfma.f32	s1, s14, s9
 8012548:	eea7 1a05 	vfma.f32	s2, s14, s10
 801254c:	dd13      	ble.n	8012576 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801254e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8012552:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8012556:	eef5 6a40 	vcmp.f32	s13, #0.0
 801255a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801255e:	bf18      	it	ne
 8012560:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8012564:	ee31 2a45 	vsub.f32	s4, s2, s10
 8012568:	bf08      	it	eq
 801256a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801256e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012572:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012576:	fb05 f204 	mul.w	r2, r5, r4
 801257a:	1abf      	subs	r7, r7, r2
 801257c:	4494      	add	ip, r2
 801257e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8012582:	4411      	add	r1, r2
 8012584:	eb09 020c 	add.w	r2, r9, ip
 8012588:	443a      	add	r2, r7
 801258a:	b209      	sxth	r1, r1
 801258c:	428a      	cmp	r2, r1
 801258e:	bfc4      	itt	gt
 8012590:	eba1 0209 	subgt.w	r2, r1, r9
 8012594:	eba2 070c 	subgt.w	r7, r2, ip
 8012598:	2f00      	cmp	r7, #0
 801259a:	dd50      	ble.n	801263e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801259c:	fb97 f1f4 	sdiv	r1, r7, r4
 80125a0:	fb04 7211 	mls	r2, r4, r1, r7
 80125a4:	b90a      	cbnz	r2, 80125aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80125a6:	3901      	subs	r1, #1
 80125a8:	4622      	mov	r2, r4
 80125aa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80125ae:	6840      	ldr	r0, [r0, #4]
 80125b0:	900b      	str	r0, [sp, #44]	; 0x2c
 80125b2:	f8d0 a000 	ldr.w	sl, [r0]
 80125b6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80125b8:	9008      	str	r0, [sp, #32]
 80125ba:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80125be:	9818      	ldr	r0, [sp, #96]	; 0x60
 80125c0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80125c4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80125c8:	695b      	ldr	r3, [r3, #20]
 80125ca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80125cc:	445b      	add	r3, fp
 80125ce:	eef0 6a42 	vmov.f32	s13, s4
 80125d2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80125d6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80125da:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80125de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80125e2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80125e6:	9307      	str	r3, [sp, #28]
 80125e8:	ee17 7a90 	vmov	r7, s15
 80125ec:	ee73 7a42 	vsub.f32	s15, s6, s4
 80125f0:	eeb0 7a61 	vmov.f32	s14, s3
 80125f4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80125f8:	ee16 3a90 	vmov	r3, s13
 80125fc:	fb97 f7f4 	sdiv	r7, r7, r4
 8012600:	ee17 ca90 	vmov	ip, s15
 8012604:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8012608:	fb9c fcf4 	sdiv	ip, ip, r4
 801260c:	fb0c 3306 	mla	r3, ip, r6, r3
 8012610:	9302      	str	r3, [sp, #8]
 8012612:	ee17 3a10 	vmov	r3, s14
 8012616:	44b6      	add	lr, r6
 8012618:	fb04 e505 	mla	r5, r4, r5, lr
 801261c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8012620:	fb07 3706 	mla	r7, r7, r6, r3
 8012624:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8012628:	e9cd 4700 	strd	r4, r7, [sp]
 801262c:	2900      	cmp	r1, #0
 801262e:	bfcc      	ite	gt
 8012630:	46a1      	movgt	r9, r4
 8012632:	4691      	movle	r9, r2
 8012634:	eba9 0306 	sub.w	r3, r9, r6
 8012638:	f8da 4008 	ldr.w	r4, [sl, #8]
 801263c:	47a0      	blx	r4
 801263e:	b00d      	add	sp, #52	; 0x34
 8012640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012644:	2500      	movs	r5, #0
 8012646:	462e      	mov	r6, r5
 8012648:	e799      	b.n	801257e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801264c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801264c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012650:	b0db      	sub	sp, #364	; 0x16c
 8012652:	461d      	mov	r5, r3
 8012654:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8012658:	930a      	str	r3, [sp, #40]	; 0x28
 801265a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801265e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012660:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8012664:	9310      	str	r3, [sp, #64]	; 0x40
 8012666:	6803      	ldr	r3, [r0, #0]
 8012668:	910f      	str	r1, [sp, #60]	; 0x3c
 801266a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801266c:	9009      	str	r0, [sp, #36]	; 0x24
 801266e:	4614      	mov	r4, r2
 8012670:	4629      	mov	r1, r5
 8012672:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8012676:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801267a:	47b8      	blx	r7
 801267c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801267e:	6058      	str	r0, [r3, #4]
 8012680:	2800      	cmp	r0, #0
 8012682:	f000 83a1 	beq.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012686:	682b      	ldr	r3, [r5, #0]
 8012688:	9314      	str	r3, [sp, #80]	; 0x50
 801268a:	686b      	ldr	r3, [r5, #4]
 801268c:	9315      	str	r3, [sp, #84]	; 0x54
 801268e:	4bc4      	ldr	r3, [pc, #784]	; (80129a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8012690:	ed94 7a02 	vldr	s14, [r4, #8]
 8012694:	7819      	ldrb	r1, [r3, #0]
 8012696:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801269a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801269e:	2900      	cmp	r1, #0
 80126a0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80126a4:	bf16      	itet	ne
 80126a6:	4619      	movne	r1, r3
 80126a8:	4611      	moveq	r1, r2
 80126aa:	4613      	movne	r3, r2
 80126ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126b0:	9116      	str	r1, [sp, #88]	; 0x58
 80126b2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80126b6:	f240 8387 	bls.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80126ba:	ed94 7a07 	vldr	s14, [r4, #28]
 80126be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80126c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126c6:	f240 837f 	bls.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80126ca:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80126ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80126d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126d6:	f240 8377 	bls.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80126da:	6822      	ldr	r2, [r4, #0]
 80126dc:	4bb1      	ldr	r3, [pc, #708]	; (80129a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80126de:	429a      	cmp	r2, r3
 80126e0:	f2c0 8372 	blt.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80126e4:	49b0      	ldr	r1, [pc, #704]	; (80129a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80126e6:	6963      	ldr	r3, [r4, #20]
 80126e8:	428a      	cmp	r2, r1
 80126ea:	f300 836d 	bgt.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80126ee:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80126f2:	48ae      	ldr	r0, [pc, #696]	; (80129ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80126f4:	33ff      	adds	r3, #255	; 0xff
 80126f6:	4283      	cmp	r3, r0
 80126f8:	f200 8366 	bhi.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80126fc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80126fe:	4dac      	ldr	r5, [pc, #688]	; (80129b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8012700:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8012704:	33ff      	adds	r3, #255	; 0xff
 8012706:	42ab      	cmp	r3, r5
 8012708:	f200 835e 	bhi.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801270c:	6862      	ldr	r2, [r4, #4]
 801270e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8012712:	33ff      	adds	r3, #255	; 0xff
 8012714:	4283      	cmp	r3, r0
 8012716:	f200 8357 	bhi.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801271a:	69a1      	ldr	r1, [r4, #24]
 801271c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8012720:	33ff      	adds	r3, #255	; 0xff
 8012722:	4283      	cmp	r3, r0
 8012724:	f200 8350 	bhi.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012728:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801272a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801272e:	30ff      	adds	r0, #255	; 0xff
 8012730:	42a8      	cmp	r0, r5
 8012732:	f200 8349 	bhi.w	8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012736:	428a      	cmp	r2, r1
 8012738:	f280 8110 	bge.w	801295c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801273c:	429a      	cmp	r2, r3
 801273e:	f300 8119 	bgt.w	8012974 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8012742:	4299      	cmp	r1, r3
 8012744:	f280 811d 	bge.w	8012982 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8012748:	2502      	movs	r5, #2
 801274a:	2701      	movs	r7, #1
 801274c:	46a9      	mov	r9, r5
 801274e:	46b8      	mov	r8, r7
 8012750:	f04f 0a00 	mov.w	sl, #0
 8012754:	4621      	mov	r1, r4
 8012756:	a849      	add	r0, sp, #292	; 0x124
 8012758:	f003 feec 	bl	8016534 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801275c:	4622      	mov	r2, r4
 801275e:	4653      	mov	r3, sl
 8012760:	a949      	add	r1, sp, #292	; 0x124
 8012762:	f8cd 9000 	str.w	r9, [sp]
 8012766:	a819      	add	r0, sp, #100	; 0x64
 8012768:	f004 f814 	bl	8016794 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801276c:	4622      	mov	r2, r4
 801276e:	4653      	mov	r3, sl
 8012770:	a949      	add	r1, sp, #292	; 0x124
 8012772:	f8cd 8000 	str.w	r8, [sp]
 8012776:	a829      	add	r0, sp, #164	; 0xa4
 8012778:	f004 f80c 	bl	8016794 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801277c:	4643      	mov	r3, r8
 801277e:	4622      	mov	r2, r4
 8012780:	a949      	add	r1, sp, #292	; 0x124
 8012782:	f8cd 9000 	str.w	r9, [sp]
 8012786:	a839      	add	r0, sp, #228	; 0xe4
 8012788:	f004 f804 	bl	8016794 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801278c:	42af      	cmp	r7, r5
 801278e:	bfb5      	itete	lt
 8012790:	2300      	movlt	r3, #0
 8012792:	2301      	movge	r3, #1
 8012794:	930e      	strlt	r3, [sp, #56]	; 0x38
 8012796:	930e      	strge	r3, [sp, #56]	; 0x38
 8012798:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801279a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801279e:	af12      	add	r7, sp, #72	; 0x48
 80127a0:	bfb9      	ittee	lt
 80127a2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80127a4:	ac19      	addlt	r4, sp, #100	; 0x64
 80127a6:	ad19      	addge	r5, sp, #100	; 0x64
 80127a8:	ac29      	addge	r4, sp, #164	; 0xa4
 80127aa:	e887 0003 	stmia.w	r7, {r0, r1}
 80127ae:	b928      	cbnz	r0, 80127bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80127b0:	4b80      	ldr	r3, [pc, #512]	; (80129b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80127b2:	6818      	ldr	r0, [r3, #0]
 80127b4:	6803      	ldr	r3, [r0, #0]
 80127b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80127b8:	4798      	blx	r3
 80127ba:	6038      	str	r0, [r7, #0]
 80127bc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80127be:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80127c2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80127c6:	930c      	str	r3, [sp, #48]	; 0x30
 80127c8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80127ca:	6963      	ldr	r3, [r4, #20]
 80127cc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80127ce:	440b      	add	r3, r1
 80127d0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80127d4:	4408      	add	r0, r1
 80127d6:	b200      	sxth	r0, r0
 80127d8:	4283      	cmp	r3, r0
 80127da:	900d      	str	r0, [sp, #52]	; 0x34
 80127dc:	f280 80dd 	bge.w	801299a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80127e0:	428b      	cmp	r3, r1
 80127e2:	da08      	bge.n	80127f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80127e4:	2a00      	cmp	r2, #0
 80127e6:	dd06      	ble.n	80127f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80127e8:	1acb      	subs	r3, r1, r3
 80127ea:	429a      	cmp	r2, r3
 80127ec:	f2c0 80e4 	blt.w	80129b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80127f0:	2b00      	cmp	r3, #0
 80127f2:	f300 80e2 	bgt.w	80129ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80127f6:	6967      	ldr	r7, [r4, #20]
 80127f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80127fa:	443b      	add	r3, r7
 80127fc:	461f      	mov	r7, r3
 80127fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012800:	1bdf      	subs	r7, r3, r7
 8012802:	4297      	cmp	r7, r2
 8012804:	bfa8      	it	ge
 8012806:	4617      	movge	r7, r2
 8012808:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801280c:	2f00      	cmp	r7, #0
 801280e:	f340 8166 	ble.w	8012ade <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8012812:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012814:	6829      	ldr	r1, [r5, #0]
 8012816:	f9b3 2000 	ldrsh.w	r2, [r3]
 801281a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801281e:	6820      	ldr	r0, [r4, #0]
 8012820:	4411      	add	r1, r2
 8012822:	4299      	cmp	r1, r3
 8012824:	dd1a      	ble.n	801285c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012826:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801282a:	440b      	add	r3, r1
 801282c:	4402      	add	r2, r0
 801282e:	b21b      	sxth	r3, r3
 8012830:	429a      	cmp	r2, r3
 8012832:	dc13      	bgt.n	801285c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012834:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012836:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012838:	681b      	ldr	r3, [r3, #0]
 801283a:	9206      	str	r2, [sp, #24]
 801283c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801283e:	9205      	str	r2, [sp, #20]
 8012840:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012842:	9500      	str	r5, [sp, #0]
 8012844:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012848:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801284a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801284c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012850:	a912      	add	r1, sp, #72	; 0x48
 8012852:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8012856:	aa49      	add	r2, sp, #292	; 0x124
 8012858:	4623      	mov	r3, r4
 801285a:	47c8      	blx	r9
 801285c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012860:	441a      	add	r2, r3
 8012862:	6963      	ldr	r3, [r4, #20]
 8012864:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8012868:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801286c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8012870:	68a1      	ldr	r1, [r4, #8]
 8012872:	ed94 6a08 	vldr	s12, [r4, #32]
 8012876:	6022      	str	r2, [r4, #0]
 8012878:	3301      	adds	r3, #1
 801287a:	6163      	str	r3, [r4, #20]
 801287c:	69a3      	ldr	r3, [r4, #24]
 801287e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012882:	3b01      	subs	r3, #1
 8012884:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8012888:	61a3      	str	r3, [r4, #24]
 801288a:	6923      	ldr	r3, [r4, #16]
 801288c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012890:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012894:	edd4 6a07 	vldr	s13, [r4, #28]
 8012898:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801289c:	440b      	add	r3, r1
 801289e:	68e1      	ldr	r1, [r4, #12]
 80128a0:	6123      	str	r3, [r4, #16]
 80128a2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80128a6:	428b      	cmp	r3, r1
 80128a8:	edc4 6a07 	vstr	s13, [r4, #28]
 80128ac:	db15      	blt.n	80128da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80128ae:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80128b2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80128b6:	3201      	adds	r2, #1
 80128b8:	edc4 6a07 	vstr	s13, [r4, #28]
 80128bc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80128c0:	6022      	str	r2, [r4, #0]
 80128c2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80128c6:	1a5b      	subs	r3, r3, r1
 80128c8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80128cc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80128d0:	6123      	str	r3, [r4, #16]
 80128d2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80128d6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80128da:	e9d5 2300 	ldrd	r2, r3, [r5]
 80128de:	441a      	add	r2, r3
 80128e0:	696b      	ldr	r3, [r5, #20]
 80128e2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80128e6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80128ea:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80128ee:	68a9      	ldr	r1, [r5, #8]
 80128f0:	ed95 6a08 	vldr	s12, [r5, #32]
 80128f4:	602a      	str	r2, [r5, #0]
 80128f6:	3301      	adds	r3, #1
 80128f8:	616b      	str	r3, [r5, #20]
 80128fa:	69ab      	ldr	r3, [r5, #24]
 80128fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012900:	3b01      	subs	r3, #1
 8012902:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8012906:	61ab      	str	r3, [r5, #24]
 8012908:	692b      	ldr	r3, [r5, #16]
 801290a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801290e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012912:	edd5 6a07 	vldr	s13, [r5, #28]
 8012916:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801291a:	440b      	add	r3, r1
 801291c:	68e9      	ldr	r1, [r5, #12]
 801291e:	612b      	str	r3, [r5, #16]
 8012920:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012924:	428b      	cmp	r3, r1
 8012926:	edc5 6a07 	vstr	s13, [r5, #28]
 801292a:	db15      	blt.n	8012958 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801292c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8012930:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012934:	3201      	adds	r2, #1
 8012936:	edc5 6a07 	vstr	s13, [r5, #28]
 801293a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801293e:	602a      	str	r2, [r5, #0]
 8012940:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012944:	1a5b      	subs	r3, r3, r1
 8012946:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801294a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801294e:	612b      	str	r3, [r5, #16]
 8012950:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012954:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8012958:	3f01      	subs	r7, #1
 801295a:	e757      	b.n	801280c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801295c:	4299      	cmp	r1, r3
 801295e:	dc13      	bgt.n	8012988 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8012960:	429a      	cmp	r2, r3
 8012962:	da14      	bge.n	801298e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8012964:	2502      	movs	r5, #2
 8012966:	2703      	movs	r7, #3
 8012968:	46a9      	mov	r9, r5
 801296a:	f04f 0800 	mov.w	r8, #0
 801296e:	f04f 0a01 	mov.w	sl, #1
 8012972:	e6ef      	b.n	8012754 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012974:	2501      	movs	r5, #1
 8012976:	2700      	movs	r7, #0
 8012978:	46a9      	mov	r9, r5
 801297a:	46b8      	mov	r8, r7
 801297c:	f04f 0a02 	mov.w	sl, #2
 8012980:	e6e8      	b.n	8012754 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012982:	2501      	movs	r5, #1
 8012984:	2702      	movs	r7, #2
 8012986:	e6e1      	b.n	801274c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8012988:	2500      	movs	r5, #0
 801298a:	2701      	movs	r7, #1
 801298c:	e7f4      	b.n	8012978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801298e:	2702      	movs	r7, #2
 8012990:	2503      	movs	r5, #3
 8012992:	f04f 0900 	mov.w	r9, #0
 8012996:	46b8      	mov	r8, r7
 8012998:	e7e9      	b.n	801296e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801299a:	4613      	mov	r3, r2
 801299c:	e728      	b.n	80127f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801299e:	bf00      	nop
 80129a0:	200137b4 	.word	0x200137b4
 80129a4:	fffd8f01 	.word	0xfffd8f01
 80129a8:	00027100 	.word	0x00027100
 80129ac:	0004e1ff 	.word	0x0004e1ff
 80129b0:	0004e1fe 	.word	0x0004e1fe
 80129b4:	200137bc 	.word	0x200137bc
 80129b8:	4613      	mov	r3, r2
 80129ba:	992b      	ldr	r1, [sp, #172]	; 0xac
 80129bc:	9111      	str	r1, [sp, #68]	; 0x44
 80129be:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80129c2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80129c6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80129c8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80129cc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80129d0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80129d4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80129d8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80129dc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80129e0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80129e4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80129e8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80129ec:	469e      	mov	lr, r3
 80129ee:	469c      	mov	ip, r3
 80129f0:	f04f 0900 	mov.w	r9, #0
 80129f4:	f1bc 0f00 	cmp.w	ip, #0
 80129f8:	d147      	bne.n	8012a8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80129fa:	eb03 0c07 	add.w	ip, r3, r7
 80129fe:	1ad7      	subs	r7, r2, r3
 8012a00:	f1b9 0f00 	cmp.w	r9, #0
 8012a04:	d009      	beq.n	8012a1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8012a06:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8012a0a:	9029      	str	r0, [sp, #164]	; 0xa4
 8012a0c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8012a10:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8012a14:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8012a18:	912d      	str	r1, [sp, #180]	; 0xb4
 8012a1a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8012a1c:	9111      	str	r1, [sp, #68]	; 0x44
 8012a1e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8012a22:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8012a26:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8012a2a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8012a2e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8012a32:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8012a36:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8012a3a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8012a3e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8012a42:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8012a46:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8012a4a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8012a4e:	f04f 0800 	mov.w	r8, #0
 8012a52:	f1be 0f00 	cmp.w	lr, #0
 8012a56:	d031      	beq.n	8012abc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8012a58:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8012a5a:	4431      	add	r1, r6
 8012a5c:	4549      	cmp	r1, r9
 8012a5e:	4450      	add	r0, sl
 8012a60:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012a64:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012a68:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012a6c:	db08      	blt.n	8012a80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8012a6e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012a72:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012a76:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012a7a:	3001      	adds	r0, #1
 8012a7c:	eba1 0109 	sub.w	r1, r1, r9
 8012a80:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012a84:	f04f 0801 	mov.w	r8, #1
 8012a88:	e7e3      	b.n	8012a52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8012a8a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8012a8c:	4431      	add	r1, r6
 8012a8e:	4541      	cmp	r1, r8
 8012a90:	4450      	add	r0, sl
 8012a92:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012a96:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012a9a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012a9e:	db08      	blt.n	8012ab2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8012aa0:	ee76 6a85 	vadd.f32	s13, s13, s10
 8012aa4:	ee37 7a25 	vadd.f32	s14, s14, s11
 8012aa8:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012aac:	3001      	adds	r0, #1
 8012aae:	eba1 0108 	sub.w	r1, r1, r8
 8012ab2:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012ab6:	f04f 0901 	mov.w	r9, #1
 8012aba:	e79b      	b.n	80129f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8012abc:	449c      	add	ip, r3
 8012abe:	1aff      	subs	r7, r7, r3
 8012ac0:	f1b8 0f00 	cmp.w	r8, #0
 8012ac4:	d009      	beq.n	8012ada <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8012ac6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8012aca:	9019      	str	r0, [sp, #100]	; 0x64
 8012acc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8012ad0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8012ad4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8012ad8:	911d      	str	r1, [sp, #116]	; 0x74
 8012ada:	1ad2      	subs	r2, r2, r3
 8012adc:	e68b      	b.n	80127f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012ade:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ae0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8012ae2:	2b00      	cmp	r3, #0
 8012ae4:	f000 80d1 	beq.w	8012c8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8012ae8:	ad19      	add	r5, sp, #100	; 0x64
 8012aea:	ac39      	add	r4, sp, #228	; 0xe4
 8012aec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012aee:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012af2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012af6:	930c      	str	r3, [sp, #48]	; 0x30
 8012af8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012afa:	6963      	ldr	r3, [r4, #20]
 8012afc:	440b      	add	r3, r1
 8012afe:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012b02:	4408      	add	r0, r1
 8012b04:	b200      	sxth	r0, r0
 8012b06:	4283      	cmp	r3, r0
 8012b08:	900d      	str	r0, [sp, #52]	; 0x34
 8012b0a:	f280 80c1 	bge.w	8012c90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8012b0e:	428b      	cmp	r3, r1
 8012b10:	da08      	bge.n	8012b24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012b12:	2a00      	cmp	r2, #0
 8012b14:	dd06      	ble.n	8012b24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012b16:	1acb      	subs	r3, r1, r3
 8012b18:	429a      	cmp	r2, r3
 8012b1a:	f2c0 80bb 	blt.w	8012c94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8012b1e:	2b00      	cmp	r3, #0
 8012b20:	f300 80b9 	bgt.w	8012c96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8012b24:	6967      	ldr	r7, [r4, #20]
 8012b26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012b28:	443b      	add	r3, r7
 8012b2a:	461f      	mov	r7, r3
 8012b2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012b2e:	1bdf      	subs	r7, r3, r7
 8012b30:	4297      	cmp	r7, r2
 8012b32:	bfa8      	it	ge
 8012b34:	4617      	movge	r7, r2
 8012b36:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8012b3a:	2f00      	cmp	r7, #0
 8012b3c:	f340 813c 	ble.w	8012db8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8012b40:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012b42:	6829      	ldr	r1, [r5, #0]
 8012b44:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012b48:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012b4c:	6820      	ldr	r0, [r4, #0]
 8012b4e:	4411      	add	r1, r2
 8012b50:	4299      	cmp	r1, r3
 8012b52:	dd1a      	ble.n	8012b8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8012b54:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012b58:	440b      	add	r3, r1
 8012b5a:	4402      	add	r2, r0
 8012b5c:	b21b      	sxth	r3, r3
 8012b5e:	429a      	cmp	r2, r3
 8012b60:	dc13      	bgt.n	8012b8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8012b62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012b64:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012b66:	681b      	ldr	r3, [r3, #0]
 8012b68:	9206      	str	r2, [sp, #24]
 8012b6a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012b6c:	9205      	str	r2, [sp, #20]
 8012b6e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012b70:	9500      	str	r5, [sp, #0]
 8012b72:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012b76:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8012b78:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012b7a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012b7e:	a912      	add	r1, sp, #72	; 0x48
 8012b80:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8012b84:	aa49      	add	r2, sp, #292	; 0x124
 8012b86:	4623      	mov	r3, r4
 8012b88:	47c8      	blx	r9
 8012b8a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012b8e:	441a      	add	r2, r3
 8012b90:	6963      	ldr	r3, [r4, #20]
 8012b92:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8012b96:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8012b9a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8012b9e:	68a1      	ldr	r1, [r4, #8]
 8012ba0:	ed94 6a08 	vldr	s12, [r4, #32]
 8012ba4:	6022      	str	r2, [r4, #0]
 8012ba6:	3301      	adds	r3, #1
 8012ba8:	6163      	str	r3, [r4, #20]
 8012baa:	69a3      	ldr	r3, [r4, #24]
 8012bac:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012bb0:	3b01      	subs	r3, #1
 8012bb2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8012bb6:	61a3      	str	r3, [r4, #24]
 8012bb8:	6923      	ldr	r3, [r4, #16]
 8012bba:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012bbe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012bc2:	edd4 6a07 	vldr	s13, [r4, #28]
 8012bc6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012bca:	440b      	add	r3, r1
 8012bcc:	68e1      	ldr	r1, [r4, #12]
 8012bce:	6123      	str	r3, [r4, #16]
 8012bd0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012bd4:	428b      	cmp	r3, r1
 8012bd6:	edc4 6a07 	vstr	s13, [r4, #28]
 8012bda:	db15      	blt.n	8012c08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8012bdc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8012be0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012be4:	3201      	adds	r2, #1
 8012be6:	edc4 6a07 	vstr	s13, [r4, #28]
 8012bea:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8012bee:	6022      	str	r2, [r4, #0]
 8012bf0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012bf4:	1a5b      	subs	r3, r3, r1
 8012bf6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012bfa:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8012bfe:	6123      	str	r3, [r4, #16]
 8012c00:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012c04:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012c08:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012c0c:	441a      	add	r2, r3
 8012c0e:	696b      	ldr	r3, [r5, #20]
 8012c10:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8012c14:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8012c18:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8012c1c:	68a9      	ldr	r1, [r5, #8]
 8012c1e:	ed95 6a08 	vldr	s12, [r5, #32]
 8012c22:	602a      	str	r2, [r5, #0]
 8012c24:	3301      	adds	r3, #1
 8012c26:	616b      	str	r3, [r5, #20]
 8012c28:	69ab      	ldr	r3, [r5, #24]
 8012c2a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012c2e:	3b01      	subs	r3, #1
 8012c30:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8012c34:	61ab      	str	r3, [r5, #24]
 8012c36:	692b      	ldr	r3, [r5, #16]
 8012c38:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8012c3c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012c40:	edd5 6a07 	vldr	s13, [r5, #28]
 8012c44:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8012c48:	440b      	add	r3, r1
 8012c4a:	68e9      	ldr	r1, [r5, #12]
 8012c4c:	612b      	str	r3, [r5, #16]
 8012c4e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012c52:	428b      	cmp	r3, r1
 8012c54:	edc5 6a07 	vstr	s13, [r5, #28]
 8012c58:	db15      	blt.n	8012c86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8012c5a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8012c5e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012c62:	3201      	adds	r2, #1
 8012c64:	edc5 6a07 	vstr	s13, [r5, #28]
 8012c68:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8012c6c:	602a      	str	r2, [r5, #0]
 8012c6e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012c72:	1a5b      	subs	r3, r3, r1
 8012c74:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8012c78:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8012c7c:	612b      	str	r3, [r5, #16]
 8012c7e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012c82:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8012c86:	3f01      	subs	r7, #1
 8012c88:	e757      	b.n	8012b3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8012c8a:	ad39      	add	r5, sp, #228	; 0xe4
 8012c8c:	ac19      	add	r4, sp, #100	; 0x64
 8012c8e:	e72d      	b.n	8012aec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8012c90:	4613      	mov	r3, r2
 8012c92:	e744      	b.n	8012b1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8012c94:	4613      	mov	r3, r2
 8012c96:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8012c9a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8012c9c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8012ca0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8012ca4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8012ca8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8012cac:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8012cb0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8012cb4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8012cb8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8012cba:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8012cbe:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8012cc2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8012cc6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8012cca:	960e      	str	r6, [sp, #56]	; 0x38
 8012ccc:	469e      	mov	lr, r3
 8012cce:	461f      	mov	r7, r3
 8012cd0:	f04f 0900 	mov.w	r9, #0
 8012cd4:	2f00      	cmp	r7, #0
 8012cd6:	d146      	bne.n	8012d66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8012cd8:	449c      	add	ip, r3
 8012cda:	1ad7      	subs	r7, r2, r3
 8012cdc:	f1b9 0f00 	cmp.w	r9, #0
 8012ce0:	d009      	beq.n	8012cf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8012ce2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8012ce6:	9039      	str	r0, [sp, #228]	; 0xe4
 8012ce8:	913d      	str	r1, [sp, #244]	; 0xf4
 8012cea:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8012cee:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8012cf2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8012cf6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8012cf8:	910e      	str	r1, [sp, #56]	; 0x38
 8012cfa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8012cfe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8012d02:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8012d06:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8012d0a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8012d0e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8012d12:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8012d16:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8012d1a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8012d1e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8012d22:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8012d26:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8012d2a:	f04f 0800 	mov.w	r8, #0
 8012d2e:	f1be 0f00 	cmp.w	lr, #0
 8012d32:	d030      	beq.n	8012d96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8012d34:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8012d36:	4431      	add	r1, r6
 8012d38:	4549      	cmp	r1, r9
 8012d3a:	4450      	add	r0, sl
 8012d3c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012d40:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012d44:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012d48:	db08      	blt.n	8012d5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8012d4a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012d4e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012d52:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012d56:	3001      	adds	r0, #1
 8012d58:	eba1 0109 	sub.w	r1, r1, r9
 8012d5c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012d60:	f04f 0801 	mov.w	r8, #1
 8012d64:	e7e3      	b.n	8012d2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8012d66:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8012d68:	4431      	add	r1, r6
 8012d6a:	4541      	cmp	r1, r8
 8012d6c:	4450      	add	r0, sl
 8012d6e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012d72:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012d76:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012d7a:	db08      	blt.n	8012d8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8012d7c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8012d80:	ee37 7a25 	vadd.f32	s14, s14, s11
 8012d84:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012d88:	3001      	adds	r0, #1
 8012d8a:	eba1 0108 	sub.w	r1, r1, r8
 8012d8e:	3f01      	subs	r7, #1
 8012d90:	f04f 0901 	mov.w	r9, #1
 8012d94:	e79e      	b.n	8012cd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8012d96:	449c      	add	ip, r3
 8012d98:	1aff      	subs	r7, r7, r3
 8012d9a:	f1b8 0f00 	cmp.w	r8, #0
 8012d9e:	d009      	beq.n	8012db4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8012da0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8012da4:	9019      	str	r0, [sp, #100]	; 0x64
 8012da6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8012daa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8012dae:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8012db2:	911d      	str	r1, [sp, #116]	; 0x74
 8012db4:	1ad2      	subs	r2, r2, r3
 8012db6:	e6b5      	b.n	8012b24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012db8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012dba:	681b      	ldr	r3, [r3, #0]
 8012dbc:	b923      	cbnz	r3, 8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012dbe:	4b04      	ldr	r3, [pc, #16]	; (8012dd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8012dc0:	6818      	ldr	r0, [r3, #0]
 8012dc2:	6803      	ldr	r3, [r0, #0]
 8012dc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012dc6:	4798      	blx	r3
 8012dc8:	b05b      	add	sp, #364	; 0x16c
 8012dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012dce:	bf00      	nop
 8012dd0:	200137bc 	.word	0x200137bc

08012dd4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8012dd4:	b570      	push	{r4, r5, r6, lr}
 8012dd6:	4604      	mov	r4, r0
 8012dd8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8012ddc:	9805      	ldr	r0, [sp, #20]
 8012dde:	6061      	str	r1, [r4, #4]
 8012de0:	2500      	movs	r5, #0
 8012de2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8012de6:	8263      	strh	r3, [r4, #18]
 8012de8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012dec:	8025      	strh	r5, [r4, #0]
 8012dee:	7221      	strb	r1, [r4, #8]
 8012df0:	7266      	strb	r6, [r4, #9]
 8012df2:	60e0      	str	r0, [r4, #12]
 8012df4:	8222      	strh	r2, [r4, #16]
 8012df6:	82a3      	strh	r3, [r4, #20]
 8012df8:	82e5      	strh	r5, [r4, #22]
 8012dfa:	8325      	strh	r5, [r4, #24]
 8012dfc:	8365      	strh	r5, [r4, #26]
 8012dfe:	83a5      	strh	r5, [r4, #28]
 8012e00:	83e5      	strh	r5, [r4, #30]
 8012e02:	8425      	strh	r5, [r4, #32]
 8012e04:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8012e08:	b32e      	cbz	r6, 8012e56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012e0a:	6803      	ldr	r3, [r0, #0]
 8012e0c:	695b      	ldr	r3, [r3, #20]
 8012e0e:	4798      	blx	r3
 8012e10:	4606      	mov	r6, r0
 8012e12:	b300      	cbz	r0, 8012e56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012e14:	68e0      	ldr	r0, [r4, #12]
 8012e16:	6803      	ldr	r3, [r0, #0]
 8012e18:	4631      	mov	r1, r6
 8012e1a:	68db      	ldr	r3, [r3, #12]
 8012e1c:	4798      	blx	r3
 8012e1e:	4605      	mov	r5, r0
 8012e20:	b1c8      	cbz	r0, 8012e56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012e22:	7b43      	ldrb	r3, [r0, #13]
 8012e24:	7a82      	ldrb	r2, [r0, #10]
 8012e26:	005b      	lsls	r3, r3, #1
 8012e28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012e2c:	4313      	orrs	r3, r2
 8012e2e:	8423      	strh	r3, [r4, #32]
 8012e30:	7a63      	ldrb	r3, [r4, #9]
 8012e32:	2b06      	cmp	r3, #6
 8012e34:	d10f      	bne.n	8012e56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012e36:	68e0      	ldr	r0, [r4, #12]
 8012e38:	6803      	ldr	r3, [r0, #0]
 8012e3a:	462a      	mov	r2, r5
 8012e3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012e3e:	4631      	mov	r1, r6
 8012e40:	4798      	blx	r3
 8012e42:	7b6b      	ldrb	r3, [r5, #13]
 8012e44:	005b      	lsls	r3, r3, #1
 8012e46:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012e4a:	7aab      	ldrb	r3, [r5, #10]
 8012e4c:	4313      	orrs	r3, r2
 8012e4e:	4418      	add	r0, r3
 8012e50:	8c23      	ldrh	r3, [r4, #32]
 8012e52:	4418      	add	r0, r3
 8012e54:	8420      	strh	r0, [r4, #32]
 8012e56:	4620      	mov	r0, r4
 8012e58:	bd70      	pop	{r4, r5, r6, pc}

08012e5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8012e5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e5e:	2400      	movs	r4, #0
 8012e60:	b085      	sub	sp, #20
 8012e62:	4681      	mov	r9, r0
 8012e64:	4688      	mov	r8, r1
 8012e66:	4692      	mov	sl, r2
 8012e68:	469b      	mov	fp, r3
 8012e6a:	4627      	mov	r7, r4
 8012e6c:	4625      	mov	r5, r4
 8012e6e:	4626      	mov	r6, r4
 8012e70:	4554      	cmp	r4, sl
 8012e72:	da2a      	bge.n	8012eca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012e74:	2300      	movs	r3, #0
 8012e76:	9303      	str	r3, [sp, #12]
 8012e78:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012e7c:	429d      	cmp	r5, r3
 8012e7e:	d004      	beq.n	8012e8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8012e80:	f242 030b 	movw	r3, #8203	; 0x200b
 8012e84:	429d      	cmp	r5, r3
 8012e86:	bf18      	it	ne
 8012e88:	462f      	movne	r7, r5
 8012e8a:	ab03      	add	r3, sp, #12
 8012e8c:	4642      	mov	r2, r8
 8012e8e:	4659      	mov	r1, fp
 8012e90:	4648      	mov	r0, r9
 8012e92:	f003 f965 	bl	8016160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012e96:	4605      	mov	r5, r0
 8012e98:	b1b8      	cbz	r0, 8012eca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012e9a:	280a      	cmp	r0, #10
 8012e9c:	d015      	beq.n	8012eca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012e9e:	9a03      	ldr	r2, [sp, #12]
 8012ea0:	b18a      	cbz	r2, 8012ec6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8012ea2:	7b50      	ldrb	r0, [r2, #13]
 8012ea4:	7a93      	ldrb	r3, [r2, #10]
 8012ea6:	8895      	ldrh	r5, [r2, #4]
 8012ea8:	0040      	lsls	r0, r0, #1
 8012eaa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012eae:	4303      	orrs	r3, r0
 8012eb0:	9301      	str	r3, [sp, #4]
 8012eb2:	f8d8 3000 	ldr.w	r3, [r8]
 8012eb6:	4639      	mov	r1, r7
 8012eb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012eba:	4640      	mov	r0, r8
 8012ebc:	4798      	blx	r3
 8012ebe:	9b01      	ldr	r3, [sp, #4]
 8012ec0:	4418      	add	r0, r3
 8012ec2:	4406      	add	r6, r0
 8012ec4:	b2b6      	uxth	r6, r6
 8012ec6:	3401      	adds	r4, #1
 8012ec8:	e7d2      	b.n	8012e70 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8012eca:	4630      	mov	r0, r6
 8012ecc:	b005      	add	sp, #20
 8012ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012ed2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8012ed2:	2a02      	cmp	r2, #2
 8012ed4:	b530      	push	{r4, r5, lr}
 8012ed6:	d011      	beq.n	8012efc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8012ed8:	2a03      	cmp	r2, #3
 8012eda:	d01c      	beq.n	8012f16 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8012edc:	2a01      	cmp	r2, #1
 8012ede:	d10c      	bne.n	8012efa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8012ee0:	888b      	ldrh	r3, [r1, #4]
 8012ee2:	8801      	ldrh	r1, [r0, #0]
 8012ee4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8012ee8:	8844      	ldrh	r4, [r0, #2]
 8012eea:	8004      	strh	r4, [r0, #0]
 8012eec:	1a5b      	subs	r3, r3, r1
 8012eee:	1a9b      	subs	r3, r3, r2
 8012ef0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8012ef4:	8043      	strh	r3, [r0, #2]
 8012ef6:	8081      	strh	r1, [r0, #4]
 8012ef8:	80c2      	strh	r2, [r0, #6]
 8012efa:	bd30      	pop	{r4, r5, pc}
 8012efc:	88cb      	ldrh	r3, [r1, #6]
 8012efe:	8842      	ldrh	r2, [r0, #2]
 8012f00:	1a9b      	subs	r3, r3, r2
 8012f02:	88c2      	ldrh	r2, [r0, #6]
 8012f04:	1a9b      	subs	r3, r3, r2
 8012f06:	888a      	ldrh	r2, [r1, #4]
 8012f08:	8801      	ldrh	r1, [r0, #0]
 8012f0a:	8043      	strh	r3, [r0, #2]
 8012f0c:	1a52      	subs	r2, r2, r1
 8012f0e:	8881      	ldrh	r1, [r0, #4]
 8012f10:	1a52      	subs	r2, r2, r1
 8012f12:	8002      	strh	r2, [r0, #0]
 8012f14:	e7f1      	b.n	8012efa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8012f16:	88cb      	ldrh	r3, [r1, #6]
 8012f18:	8841      	ldrh	r1, [r0, #2]
 8012f1a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8012f1e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012f22:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8012f26:	8045      	strh	r5, [r0, #2]
 8012f28:	1a5b      	subs	r3, r3, r1
 8012f2a:	1a9b      	subs	r3, r3, r2
 8012f2c:	8003      	strh	r3, [r0, #0]
 8012f2e:	8082      	strh	r2, [r0, #4]
 8012f30:	80c4      	strh	r4, [r0, #6]
 8012f32:	e7e2      	b.n	8012efa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08012f34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8012f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f38:	b09f      	sub	sp, #124	; 0x7c
 8012f3a:	9116      	str	r1, [sp, #88]	; 0x58
 8012f3c:	9317      	str	r3, [sp, #92]	; 0x5c
 8012f3e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8012f40:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012f42:	8809      	ldrh	r1, [r1, #0]
 8012f44:	889b      	ldrh	r3, [r3, #4]
 8012f46:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8012f4a:	9212      	str	r2, [sp, #72]	; 0x48
 8012f4c:	440b      	add	r3, r1
 8012f4e:	b21b      	sxth	r3, r3
 8012f50:	9310      	str	r3, [sp, #64]	; 0x40
 8012f52:	f8d8 3000 	ldr.w	r3, [r8]
 8012f56:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8012f5a:	7b19      	ldrb	r1, [r3, #12]
 8012f5c:	7adb      	ldrb	r3, [r3, #11]
 8012f5e:	9011      	str	r0, [sp, #68]	; 0x44
 8012f60:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8012f64:	9114      	str	r1, [sp, #80]	; 0x50
 8012f66:	9315      	str	r3, [sp, #84]	; 0x54
 8012f68:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8012f6c:	2a00      	cmp	r2, #0
 8012f6e:	d06a      	beq.n	8013046 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8012f70:	f898 3010 	ldrb.w	r3, [r8, #16]
 8012f74:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8012f76:	2b06      	cmp	r3, #6
 8012f78:	bf14      	ite	ne
 8012f7a:	2301      	movne	r3, #1
 8012f7c:	2302      	moveq	r3, #2
 8012f7e:	4413      	add	r3, r2
 8012f80:	f04f 0900 	mov.w	r9, #0
 8012f84:	930f      	str	r3, [sp, #60]	; 0x3c
 8012f86:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8012f8a:	464c      	mov	r4, r9
 8012f8c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8012f90:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8012f94:	4293      	cmp	r3, r2
 8012f96:	f280 808f 	bge.w	80130b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8012f9a:	2300      	movs	r3, #0
 8012f9c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8012fa0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8012fa4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012fa8:	429c      	cmp	r4, r3
 8012faa:	d006      	beq.n	8012fba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8012fac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012fae:	f242 020b 	movw	r2, #8203	; 0x200b
 8012fb2:	4294      	cmp	r4, r2
 8012fb4:	bf18      	it	ne
 8012fb6:	4623      	movne	r3, r4
 8012fb8:	930d      	str	r3, [sp, #52]	; 0x34
 8012fba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012fbc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8012fbe:	f8d8 2000 	ldr.w	r2, [r8]
 8012fc2:	428b      	cmp	r3, r1
 8012fc4:	db41      	blt.n	801304a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8012fc6:	6813      	ldr	r3, [r2, #0]
 8012fc8:	4610      	mov	r0, r2
 8012fca:	695b      	ldr	r3, [r3, #20]
 8012fcc:	4798      	blx	r3
 8012fce:	4604      	mov	r4, r0
 8012fd0:	f8d8 0000 	ldr.w	r0, [r8]
 8012fd4:	6803      	ldr	r3, [r0, #0]
 8012fd6:	aa1d      	add	r2, sp, #116	; 0x74
 8012fd8:	689d      	ldr	r5, [r3, #8]
 8012fda:	4621      	mov	r1, r4
 8012fdc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8012fe0:	47a8      	blx	r5
 8012fe2:	901c      	str	r0, [sp, #112]	; 0x70
 8012fe4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012fe8:	429c      	cmp	r4, r3
 8012fea:	f000 80eb 	beq.w	80131c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012fee:	f242 030b 	movw	r3, #8203	; 0x200b
 8012ff2:	429c      	cmp	r4, r3
 8012ff4:	f000 80e6 	beq.w	80131c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012ff8:	2c00      	cmp	r4, #0
 8012ffa:	f000 80f8 	beq.w	80131ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8012ffe:	2c0a      	cmp	r4, #10
 8013000:	d060      	beq.n	80130c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8013002:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013004:	b36a      	cbz	r2, 8013062 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8013006:	8894      	ldrh	r4, [r2, #4]
 8013008:	f1bb 0f00 	cmp.w	fp, #0
 801300c:	d03b      	beq.n	8013086 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801300e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013012:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8013016:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801301a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801301e:	f1bb 0f01 	cmp.w	fp, #1
 8013022:	ea49 0903 	orr.w	r9, r9, r3
 8013026:	d134      	bne.n	8013092 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8013028:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801302a:	eba6 0609 	sub.w	r6, r6, r9
 801302e:	2b00      	cmp	r3, #0
 8013030:	d14f      	bne.n	80130d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013032:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013034:	eb09 0306 	add.w	r3, r9, r6
 8013038:	4413      	add	r3, r2
 801303a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801303c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013040:	4293      	cmp	r3, r2
 8013042:	da51      	bge.n	80130e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013044:	e038      	b.n	80130b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013046:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013048:	e79a      	b.n	8012f80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801304a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801304e:	9301      	str	r3, [sp, #4]
 8013050:	ab1d      	add	r3, sp, #116	; 0x74
 8013052:	9300      	str	r3, [sp, #0]
 8013054:	4659      	mov	r1, fp
 8013056:	ab1c      	add	r3, sp, #112	; 0x70
 8013058:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801305a:	f003 f8ca 	bl	80161f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801305e:	4604      	mov	r4, r0
 8013060:	e7c0      	b.n	8012fe4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013062:	f8d8 0000 	ldr.w	r0, [r8]
 8013066:	6803      	ldr	r3, [r0, #0]
 8013068:	691b      	ldr	r3, [r3, #16]
 801306a:	4798      	blx	r3
 801306c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013070:	4298      	cmp	r0, r3
 8013072:	f000 80a7 	beq.w	80131c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013076:	f242 030b 	movw	r3, #8203	; 0x200b
 801307a:	4298      	cmp	r0, r3
 801307c:	f000 80a2 	beq.w	80131c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013080:	f1bb 0f00 	cmp.w	fp, #0
 8013084:	d100      	bne.n	8013088 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8013086:	444e      	add	r6, r9
 8013088:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801308a:	2a00      	cmp	r2, #0
 801308c:	d1bf      	bne.n	801300e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801308e:	4691      	mov	r9, r2
 8013090:	e098      	b.n	80131c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013092:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013094:	2b00      	cmp	r3, #0
 8013096:	f000 80ac 	beq.w	80131f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801309a:	f1bb 0f00 	cmp.w	fp, #0
 801309e:	d118      	bne.n	80130d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80130a0:	f8d8 0000 	ldr.w	r0, [r8]
 80130a4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80130a6:	6803      	ldr	r3, [r0, #0]
 80130a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80130aa:	4798      	blx	r3
 80130ac:	4406      	add	r6, r0
 80130ae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80130b0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80130b2:	1af3      	subs	r3, r6, r3
 80130b4:	4293      	cmp	r3, r2
 80130b6:	dd17      	ble.n	80130e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80130b8:	2c00      	cmp	r4, #0
 80130ba:	f000 8098 	beq.w	80131ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80130be:	2c0a      	cmp	r4, #10
 80130c0:	f040 8086 	bne.w	80131d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80130c4:	240a      	movs	r4, #10
 80130c6:	fab4 f084 	clz	r0, r4
 80130ca:	0940      	lsrs	r0, r0, #5
 80130cc:	b01f      	add	sp, #124	; 0x7c
 80130ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130d2:	f8d8 0000 	ldr.w	r0, [r8]
 80130d6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80130d8:	6803      	ldr	r3, [r0, #0]
 80130da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80130dc:	4798      	blx	r3
 80130de:	f1bb 0f01 	cmp.w	fp, #1
 80130e2:	eba6 0600 	sub.w	r6, r6, r0
 80130e6:	d0a4      	beq.n	8013032 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80130e8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80130ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80130ec:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80130f0:	f9b3 7000 	ldrsh.w	r7, [r3]
 80130f4:	7b43      	ldrb	r3, [r0, #13]
 80130f6:	015b      	lsls	r3, r3, #5
 80130f8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80130fc:	7983      	ldrb	r3, [r0, #6]
 80130fe:	4431      	add	r1, r6
 8013100:	4313      	orrs	r3, r2
 8013102:	440b      	add	r3, r1
 8013104:	42bb      	cmp	r3, r7
 8013106:	db5d      	blt.n	80131c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013108:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801310a:	4299      	cmp	r1, r3
 801310c:	da5a      	bge.n	80131c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801310e:	f8d8 0000 	ldr.w	r0, [r8]
 8013112:	6803      	ldr	r3, [r0, #0]
 8013114:	42b7      	cmp	r7, r6
 8013116:	bfc8      	it	gt
 8013118:	1bbf      	subgt	r7, r7, r6
 801311a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801311c:	bfcc      	ite	gt
 801311e:	b2bf      	uxthgt	r7, r7
 8013120:	2700      	movle	r7, #0
 8013122:	4798      	blx	r3
 8013124:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013126:	7b5a      	ldrb	r2, [r3, #13]
 8013128:	00d1      	lsls	r1, r2, #3
 801312a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801312e:	7a19      	ldrb	r1, [r3, #8]
 8013130:	4329      	orrs	r1, r5
 8013132:	0655      	lsls	r5, r2, #25
 8013134:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8013136:	bf44      	itt	mi
 8013138:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801313c:	b209      	sxthmi	r1, r1
 801313e:	1945      	adds	r5, r0, r5
 8013140:	1a6d      	subs	r5, r5, r1
 8013142:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013144:	b2ad      	uxth	r5, r5
 8013146:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801314a:	fa0f fa85 	sxth.w	sl, r5
 801314e:	4551      	cmp	r1, sl
 8013150:	dd3c      	ble.n	80131cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8013152:	0112      	lsls	r2, r2, #4
 8013154:	79d8      	ldrb	r0, [r3, #7]
 8013156:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801315a:	4302      	orrs	r2, r0
 801315c:	4492      	add	sl, r2
 801315e:	4551      	cmp	r1, sl
 8013160:	dc30      	bgt.n	80131c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013162:	1b4d      	subs	r5, r1, r5
 8013164:	b22d      	sxth	r5, r5
 8013166:	468a      	mov	sl, r1
 8013168:	9319      	str	r3, [sp, #100]	; 0x64
 801316a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801316c:	f8d8 0000 	ldr.w	r0, [r8]
 8013170:	681a      	ldr	r2, [r3, #0]
 8013172:	6801      	ldr	r1, [r0, #0]
 8013174:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8013176:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8013178:	9313      	str	r3, [sp, #76]	; 0x4c
 801317a:	9218      	str	r2, [sp, #96]	; 0x60
 801317c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801317e:	4788      	blx	r1
 8013180:	f898 1006 	ldrb.w	r1, [r8, #6]
 8013184:	910b      	str	r1, [sp, #44]	; 0x2c
 8013186:	f898 100e 	ldrb.w	r1, [r8, #14]
 801318a:	910a      	str	r1, [sp, #40]	; 0x28
 801318c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8013190:	9109      	str	r1, [sp, #36]	; 0x24
 8013192:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8013196:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8013198:	9305      	str	r3, [sp, #20]
 801319a:	b2ad      	uxth	r5, r5
 801319c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80131a0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80131a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80131a6:	9304      	str	r3, [sp, #16]
 80131a8:	4437      	add	r7, r6
 80131aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80131ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80131ae:	9206      	str	r2, [sp, #24]
 80131b0:	b23f      	sxth	r7, r7
 80131b2:	f8cd a004 	str.w	sl, [sp, #4]
 80131b6:	9700      	str	r7, [sp, #0]
 80131b8:	681a      	ldr	r2, [r3, #0]
 80131ba:	9916      	ldr	r1, [sp, #88]	; 0x58
 80131bc:	685b      	ldr	r3, [r3, #4]
 80131be:	9811      	ldr	r0, [sp, #68]	; 0x44
 80131c0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80131c2:	47a8      	blx	r5
 80131c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80131c6:	3301      	adds	r3, #1
 80131c8:	930e      	str	r3, [sp, #56]	; 0x38
 80131ca:	e6e1      	b.n	8012f90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80131cc:	2500      	movs	r5, #0
 80131ce:	e7cb      	b.n	8013168 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80131d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80131d2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80131d4:	3501      	adds	r5, #1
 80131d6:	429d      	cmp	r5, r3
 80131d8:	f6bf af75 	bge.w	80130c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80131dc:	4659      	mov	r1, fp
 80131de:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80131e0:	f7f3 fe5a 	bl	8006e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80131e4:	4604      	mov	r4, r0
 80131e6:	b110      	cbz	r0, 80131ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80131e8:	280a      	cmp	r0, #10
 80131ea:	d1f2      	bne.n	80131d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80131ec:	e76a      	b.n	80130c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80131ee:	2400      	movs	r4, #0
 80131f0:	e769      	b.n	80130c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80131f2:	f1bb 0f00 	cmp.w	fp, #0
 80131f6:	f43f af5a 	beq.w	80130ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80131fa:	e775      	b.n	80130e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080131fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80131fc:	b530      	push	{r4, r5, lr}
 80131fe:	8ac4      	ldrh	r4, [r0, #22]
 8013200:	8b45      	ldrh	r5, [r0, #26]
 8013202:	8343      	strh	r3, [r0, #26]
 8013204:	442c      	add	r4, r5
 8013206:	1ae4      	subs	r4, r4, r3
 8013208:	82c4      	strh	r4, [r0, #22]
 801320a:	8b83      	ldrh	r3, [r0, #28]
 801320c:	8b04      	ldrh	r4, [r0, #24]
 801320e:	4422      	add	r2, r4
 8013210:	440c      	add	r4, r1
 8013212:	1a59      	subs	r1, r3, r1
 8013214:	83c2      	strh	r2, [r0, #30]
 8013216:	8304      	strh	r4, [r0, #24]
 8013218:	8381      	strh	r1, [r0, #28]
 801321a:	bd30      	pop	{r4, r5, pc}

0801321c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801321c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013220:	4604      	mov	r4, r0
 8013222:	8a47      	ldrh	r7, [r0, #18]
 8013224:	68c0      	ldr	r0, [r0, #12]
 8013226:	6803      	ldr	r3, [r0, #0]
 8013228:	b085      	sub	sp, #20
 801322a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801322c:	4798      	blx	r3
 801322e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8013232:	7a63      	ldrb	r3, [r4, #9]
 8013234:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8013238:	42b7      	cmp	r7, r6
 801323a:	f103 33ff 	add.w	r3, r3, #4294967295
 801323e:	bfac      	ite	ge
 8013240:	f04f 0900 	movge.w	r9, #0
 8013244:	f04f 0901 	movlt.w	r9, #1
 8013248:	2b05      	cmp	r3, #5
 801324a:	d804      	bhi.n	8013256 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801324c:	e8df f003 	tbb	[pc, r3]
 8013250:	470e0854 	.word	0x470e0854
 8013254:	4c4c      	.short	0x4c4c
 8013256:	2500      	movs	r5, #0
 8013258:	46a9      	mov	r9, r5
 801325a:	462e      	mov	r6, r5
 801325c:	462f      	mov	r7, r5
 801325e:	e00d      	b.n	801327c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013260:	42b7      	cmp	r7, r6
 8013262:	bfb4      	ite	lt
 8013264:	2600      	movlt	r6, #0
 8013266:	2601      	movge	r6, #1
 8013268:	2500      	movs	r5, #0
 801326a:	e7f7      	b.n	801325c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801326c:	42b7      	cmp	r7, r6
 801326e:	464d      	mov	r5, r9
 8013270:	f04f 0900 	mov.w	r9, #0
 8013274:	bfb4      	ite	lt
 8013276:	2600      	movlt	r6, #0
 8013278:	2601      	movge	r6, #1
 801327a:	464f      	mov	r7, r9
 801327c:	f04f 0800 	mov.w	r8, #0
 8013280:	f8a4 8016 	strh.w	r8, [r4, #22]
 8013284:	f8a4 8018 	strh.w	r8, [r4, #24]
 8013288:	f8cd 8004 	str.w	r8, [sp, #4]
 801328c:	2300      	movs	r3, #0
 801328e:	9303      	str	r3, [sp, #12]
 8013290:	8823      	ldrh	r3, [r4, #0]
 8013292:	2b20      	cmp	r3, #32
 8013294:	d034      	beq.n	8013300 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8013296:	f242 010b 	movw	r1, #8203	; 0x200b
 801329a:	1a5a      	subs	r2, r3, r1
 801329c:	f1d2 0a00 	rsbs	sl, r2, #0
 80132a0:	eb4a 0a02 	adc.w	sl, sl, r2
 80132a4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80132a8:	4293      	cmp	r3, r2
 80132aa:	d009      	beq.n	80132c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80132ac:	428b      	cmp	r3, r1
 80132ae:	9a01      	ldr	r2, [sp, #4]
 80132b0:	bf18      	it	ne
 80132b2:	461a      	movne	r2, r3
 80132b4:	9201      	str	r2, [sp, #4]
 80132b6:	bf0c      	ite	eq
 80132b8:	f04f 0a01 	moveq.w	sl, #1
 80132bc:	f04f 0a00 	movne.w	sl, #0
 80132c0:	ab03      	add	r3, sp, #12
 80132c2:	68e2      	ldr	r2, [r4, #12]
 80132c4:	7a21      	ldrb	r1, [r4, #8]
 80132c6:	6860      	ldr	r0, [r4, #4]
 80132c8:	f002 ff4a 	bl	8016160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80132cc:	8020      	strh	r0, [r4, #0]
 80132ce:	b9d8      	cbnz	r0, 8013308 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80132d0:	8ba2      	ldrh	r2, [r4, #28]
 80132d2:	2300      	movs	r3, #0
 80132d4:	4611      	mov	r1, r2
 80132d6:	4620      	mov	r0, r4
 80132d8:	f7ff ff90 	bl	80131fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80132dc:	e06e      	b.n	80133bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80132de:	2500      	movs	r5, #0
 80132e0:	46a9      	mov	r9, r5
 80132e2:	462e      	mov	r6, r5
 80132e4:	2701      	movs	r7, #1
 80132e6:	e7c9      	b.n	801327c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80132e8:	42b7      	cmp	r7, r6
 80132ea:	f04f 0500 	mov.w	r5, #0
 80132ee:	bfb4      	ite	lt
 80132f0:	2700      	movlt	r7, #0
 80132f2:	2701      	movge	r7, #1
 80132f4:	462e      	mov	r6, r5
 80132f6:	e7c1      	b.n	801327c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80132f8:	2500      	movs	r5, #0
 80132fa:	46a9      	mov	r9, r5
 80132fc:	2601      	movs	r6, #1
 80132fe:	e7ad      	b.n	801325c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013300:	9301      	str	r3, [sp, #4]
 8013302:	f04f 0a01 	mov.w	sl, #1
 8013306:	e7db      	b.n	80132c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013308:	8b63      	ldrh	r3, [r4, #26]
 801330a:	280a      	cmp	r0, #10
 801330c:	f103 0301 	add.w	r3, r3, #1
 8013310:	8363      	strh	r3, [r4, #26]
 8013312:	d0dd      	beq.n	80132d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8013314:	9a03      	ldr	r2, [sp, #12]
 8013316:	bb62      	cbnz	r2, 8013372 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8013318:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801331c:	4298      	cmp	r0, r3
 801331e:	d003      	beq.n	8013328 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8013320:	f242 030b 	movw	r3, #8203	; 0x200b
 8013324:	4298      	cmp	r0, r3
 8013326:	d1b1      	bne.n	801328c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013328:	8823      	ldrh	r3, [r4, #0]
 801332a:	8ba1      	ldrh	r1, [r4, #28]
 801332c:	2b20      	cmp	r3, #32
 801332e:	d003      	beq.n	8013338 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8013330:	f242 000b 	movw	r0, #8203	; 0x200b
 8013334:	4283      	cmp	r3, r0
 8013336:	d131      	bne.n	801339c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8013338:	f1ba 0f00 	cmp.w	sl, #0
 801333c:	bf0a      	itet	eq
 801333e:	4688      	moveq	r8, r1
 8013340:	4650      	movne	r0, sl
 8013342:	2001      	moveq	r0, #1
 8013344:	440a      	add	r2, r1
 8013346:	8b23      	ldrh	r3, [r4, #24]
 8013348:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801334c:	b292      	uxth	r2, r2
 801334e:	83a2      	strh	r2, [r4, #28]
 8013350:	4413      	add	r3, r2
 8013352:	f1b9 0f00 	cmp.w	r9, #0
 8013356:	d102      	bne.n	801335e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8013358:	2d00      	cmp	r5, #0
 801335a:	d042      	beq.n	80133e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801335c:	b300      	cbz	r0, 80133a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801335e:	8c21      	ldrh	r1, [r4, #32]
 8013360:	4419      	add	r1, r3
 8013362:	458c      	cmp	ip, r1
 8013364:	da37      	bge.n	80133d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013366:	8ae1      	ldrh	r1, [r4, #22]
 8013368:	2900      	cmp	r1, #0
 801336a:	d034      	beq.n	80133d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801336c:	4563      	cmp	r3, ip
 801336e:	dd8d      	ble.n	801328c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013370:	e01d      	b.n	80133ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8013372:	8893      	ldrh	r3, [r2, #4]
 8013374:	8023      	strh	r3, [r4, #0]
 8013376:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801337a:	9901      	ldr	r1, [sp, #4]
 801337c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8013380:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8013384:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8013388:	ea4b 0b00 	orr.w	fp, fp, r0
 801338c:	68e0      	ldr	r0, [r4, #12]
 801338e:	6803      	ldr	r3, [r0, #0]
 8013390:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013392:	4798      	blx	r3
 8013394:	eb0b 0200 	add.w	r2, fp, r0
 8013398:	b292      	uxth	r2, r2
 801339a:	e7c5      	b.n	8013328 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801339c:	2000      	movs	r0, #0
 801339e:	e7d1      	b.n	8013344 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80133a0:	4563      	cmp	r3, ip
 80133a2:	f77f af73 	ble.w	801328c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80133a6:	8ae3      	ldrh	r3, [r4, #22]
 80133a8:	2b00      	cmp	r3, #0
 80133aa:	f43f af6f 	beq.w	801328c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80133ae:	2301      	movs	r3, #1
 80133b0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80133b4:	8c22      	ldrh	r2, [r4, #32]
 80133b6:	8be3      	ldrh	r3, [r4, #30]
 80133b8:	4413      	add	r3, r2
 80133ba:	83e3      	strh	r3, [r4, #30]
 80133bc:	68e0      	ldr	r0, [r4, #12]
 80133be:	6803      	ldr	r3, [r0, #0]
 80133c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80133c2:	4798      	blx	r3
 80133c4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80133c8:	4418      	add	r0, r3
 80133ca:	8a63      	ldrh	r3, [r4, #18]
 80133cc:	1a18      	subs	r0, r3, r0
 80133ce:	8260      	strh	r0, [r4, #18]
 80133d0:	b005      	add	sp, #20
 80133d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133d6:	2300      	movs	r3, #0
 80133d8:	4611      	mov	r1, r2
 80133da:	4620      	mov	r0, r4
 80133dc:	f7ff ff0e 	bl	80131fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80133e0:	e754      	b.n	801328c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80133e2:	4563      	cmp	r3, ip
 80133e4:	dd14      	ble.n	8013410 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80133e6:	b117      	cbz	r7, 80133ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80133e8:	2301      	movs	r3, #1
 80133ea:	460a      	mov	r2, r1
 80133ec:	e772      	b.n	80132d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80133ee:	2e00      	cmp	r6, #0
 80133f0:	f43f af4c 	beq.w	801328c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80133f4:	2800      	cmp	r0, #0
 80133f6:	f47f af49 	bne.w	801328c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80133fa:	f1ba 0f00 	cmp.w	sl, #0
 80133fe:	d002      	beq.n	8013406 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8013400:	2301      	movs	r3, #1
 8013402:	4642      	mov	r2, r8
 8013404:	e767      	b.n	80132d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8013406:	8ae3      	ldrh	r3, [r4, #22]
 8013408:	2b00      	cmp	r3, #0
 801340a:	f43f af3f 	beq.w	801328c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801340e:	e7d5      	b.n	80133bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8013410:	2800      	cmp	r0, #0
 8013412:	f47f af3b 	bne.w	801328c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013416:	f1ba 0f00 	cmp.w	sl, #0
 801341a:	f43f af37 	beq.w	801328c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801341e:	2301      	movs	r3, #1
 8013420:	4642      	mov	r2, r8
 8013422:	e7da      	b.n	80133da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08013424 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8013424:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013426:	4605      	mov	r5, r0
 8013428:	b08f      	sub	sp, #60	; 0x3c
 801342a:	4617      	mov	r7, r2
 801342c:	461c      	mov	r4, r3
 801342e:	460e      	mov	r6, r1
 8013430:	b1d1      	cbz	r1, 8013468 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8013432:	681b      	ldr	r3, [r3, #0]
 8013434:	4620      	mov	r0, r4
 8013436:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013438:	4798      	blx	r3
 801343a:	4240      	negs	r0, r0
 801343c:	b200      	sxth	r0, r0
 801343e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8013442:	9603      	str	r6, [sp, #12]
 8013444:	9700      	str	r7, [sp, #0]
 8013446:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801344a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801344e:	4629      	mov	r1, r5
 8013450:	a805      	add	r0, sp, #20
 8013452:	f7ff fcbf 	bl	8012dd4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013456:	2401      	movs	r4, #1
 8013458:	a805      	add	r0, sp, #20
 801345a:	f7ff fedf 	bl	801321c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801345e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013462:	b163      	cbz	r3, 801347e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8013464:	3401      	adds	r4, #1
 8013466:	e7f7      	b.n	8013458 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8013468:	f002 ff48 	bl	80162fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801346c:	2401      	movs	r4, #1
 801346e:	280a      	cmp	r0, #10
 8013470:	4628      	mov	r0, r5
 8013472:	bf08      	it	eq
 8013474:	3401      	addeq	r4, #1
 8013476:	f002 ff41 	bl	80162fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801347a:	2800      	cmp	r0, #0
 801347c:	d1f7      	bne.n	801346e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801347e:	b2a0      	uxth	r0, r4
 8013480:	b00f      	add	sp, #60	; 0x3c
 8013482:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013484 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8013484:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013488:	b0e3      	sub	sp, #396	; 0x18c
 801348a:	461c      	mov	r4, r3
 801348c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801348e:	4683      	mov	fp, r0
 8013490:	4688      	mov	r8, r1
 8013492:	2b00      	cmp	r3, #0
 8013494:	f000 8112 	beq.w	80136bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013498:	6823      	ldr	r3, [r4, #0]
 801349a:	2b00      	cmp	r3, #0
 801349c:	f000 810e 	beq.w	80136bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80134a0:	7ba3      	ldrb	r3, [r4, #14]
 80134a2:	2b00      	cmp	r3, #0
 80134a4:	f000 810a 	beq.w	80136bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80134a8:	6810      	ldr	r0, [r2, #0]
 80134aa:	6851      	ldr	r1, [r2, #4]
 80134ac:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80134b0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80134b4:	ad0a      	add	r5, sp, #40	; 0x28
 80134b6:	462b      	mov	r3, r5
 80134b8:	c303      	stmia	r3!, {r0, r1}
 80134ba:	2100      	movs	r1, #0
 80134bc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80134c0:	910c      	str	r1, [sp, #48]	; 0x30
 80134c2:	79a2      	ldrb	r2, [r4, #6]
 80134c4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80134c8:	a90c      	add	r1, sp, #48	; 0x30
 80134ca:	4628      	mov	r0, r5
 80134cc:	f7ff fd01 	bl	8012ed2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80134d0:	a90c      	add	r1, sp, #48	; 0x30
 80134d2:	4608      	mov	r0, r1
 80134d4:	79a2      	ldrb	r2, [r4, #6]
 80134d6:	f7ff fcfc 	bl	8012ed2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80134da:	a817      	add	r0, sp, #92	; 0x5c
 80134dc:	f002 fae2 	bl	8015aa4 <_ZN8touchgfx12TextProviderC1Ev>
 80134e0:	6820      	ldr	r0, [r4, #0]
 80134e2:	6803      	ldr	r3, [r0, #0]
 80134e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80134e6:	4798      	blx	r3
 80134e8:	4606      	mov	r6, r0
 80134ea:	6820      	ldr	r0, [r4, #0]
 80134ec:	6803      	ldr	r3, [r0, #0]
 80134ee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80134f0:	4798      	blx	r3
 80134f2:	4633      	mov	r3, r6
 80134f4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80134f6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80134f8:	9000      	str	r0, [sp, #0]
 80134fa:	a817      	add	r0, sp, #92	; 0x5c
 80134fc:	f002 fb2d 	bl	8015b5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013500:	6820      	ldr	r0, [r4, #0]
 8013502:	f894 a004 	ldrb.w	sl, [r4, #4]
 8013506:	6803      	ldr	r3, [r0, #0]
 8013508:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801350a:	4798      	blx	r3
 801350c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8013510:	6823      	ldr	r3, [r4, #0]
 8013512:	4607      	mov	r7, r0
 8013514:	4406      	add	r6, r0
 8013516:	a830      	add	r0, sp, #192	; 0xc0
 8013518:	f893 9009 	ldrb.w	r9, [r3, #9]
 801351c:	f002 fac2 	bl	8015aa4 <_ZN8touchgfx12TextProviderC1Ev>
 8013520:	7c23      	ldrb	r3, [r4, #16]
 8013522:	b17b      	cbz	r3, 8013544 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8013524:	6820      	ldr	r0, [r4, #0]
 8013526:	6803      	ldr	r3, [r0, #0]
 8013528:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801352a:	4798      	blx	r3
 801352c:	9009      	str	r0, [sp, #36]	; 0x24
 801352e:	6820      	ldr	r0, [r4, #0]
 8013530:	6802      	ldr	r2, [r0, #0]
 8013532:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8013534:	4790      	blx	r2
 8013536:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013538:	9000      	str	r0, [sp, #0]
 801353a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801353c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801353e:	a830      	add	r0, sp, #192	; 0xc0
 8013540:	f002 fb0b 	bl	8015b5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013544:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8013548:	7be2      	ldrb	r2, [r4, #15]
 801354a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801354e:	1a8a      	subs	r2, r1, r2
 8013550:	7c21      	ldrb	r1, [r4, #16]
 8013552:	9103      	str	r1, [sp, #12]
 8013554:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8013558:	9102      	str	r1, [sp, #8]
 801355a:	6821      	ldr	r1, [r4, #0]
 801355c:	9101      	str	r1, [sp, #4]
 801355e:	7961      	ldrb	r1, [r4, #5]
 8013560:	9100      	str	r1, [sp, #0]
 8013562:	b292      	uxth	r2, r2
 8013564:	a930      	add	r1, sp, #192	; 0xc0
 8013566:	a80e      	add	r0, sp, #56	; 0x38
 8013568:	f7ff fc34 	bl	8012dd4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801356c:	2e00      	cmp	r6, #0
 801356e:	dc5b      	bgt.n	8013628 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8013570:	af17      	add	r7, sp, #92	; 0x5c
 8013572:	f04f 0900 	mov.w	r9, #0
 8013576:	7c23      	ldrb	r3, [r4, #16]
 8013578:	2b00      	cmp	r3, #0
 801357a:	f000 80b1 	beq.w	80136e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801357e:	a80e      	add	r0, sp, #56	; 0x38
 8013580:	f7ff fe4c 	bl	801321c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013584:	f1ba 0f00 	cmp.w	sl, #0
 8013588:	f000 80a5 	beq.w	80136d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801358c:	7c23      	ldrb	r3, [r4, #16]
 801358e:	9309      	str	r3, [sp, #36]	; 0x24
 8013590:	2264      	movs	r2, #100	; 0x64
 8013592:	4639      	mov	r1, r7
 8013594:	a849      	add	r0, sp, #292	; 0x124
 8013596:	f014 fa6e 	bl	8027a76 <memcpy>
 801359a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801359c:	2b00      	cmp	r3, #0
 801359e:	f000 80a7 	beq.w	80136f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80135a2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80135a6:	7922      	ldrb	r2, [r4, #4]
 80135a8:	2a01      	cmp	r2, #1
 80135aa:	f040 808a 	bne.w	80136c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80135ae:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80135b2:	1ac0      	subs	r0, r0, r3
 80135b4:	2302      	movs	r3, #2
 80135b6:	fb90 f0f3 	sdiv	r0, r0, r3
 80135ba:	b200      	sxth	r0, r0
 80135bc:	7c23      	ldrb	r3, [r4, #16]
 80135be:	2b00      	cmp	r3, #0
 80135c0:	f000 808b 	beq.w	80136da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80135c4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80135c8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80135cc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80135d0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80135d4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80135d8:	4410      	add	r0, r2
 80135da:	b200      	sxth	r0, r0
 80135dc:	9000      	str	r0, [sp, #0]
 80135de:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80135e2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80135e6:	4642      	mov	r2, r8
 80135e8:	2100      	movs	r1, #0
 80135ea:	4658      	mov	r0, fp
 80135ec:	f7ff fca2 	bl	8012f34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80135f0:	2800      	cmp	r0, #0
 80135f2:	d163      	bne.n	80136bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80135f4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80135f8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80135fc:	b2b2      	uxth	r2, r6
 80135fe:	4413      	add	r3, r2
 8013600:	1a8a      	subs	r2, r1, r2
 8013602:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8013606:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801360a:	b21b      	sxth	r3, r3
 801360c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013610:	2a00      	cmp	r2, #0
 8013612:	d153      	bne.n	80136bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013614:	6822      	ldr	r2, [r4, #0]
 8013616:	8869      	ldrh	r1, [r5, #2]
 8013618:	7a12      	ldrb	r2, [r2, #8]
 801361a:	1a9b      	subs	r3, r3, r2
 801361c:	88ea      	ldrh	r2, [r5, #6]
 801361e:	440a      	add	r2, r1
 8013620:	b212      	sxth	r2, r2
 8013622:	4293      	cmp	r3, r2
 8013624:	dda7      	ble.n	8013576 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8013626:	e049      	b.n	80136bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013628:	7c23      	ldrb	r3, [r4, #16]
 801362a:	444f      	add	r7, r9
 801362c:	b1c3      	cbz	r3, 8013660 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801362e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8013632:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013636:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801363a:	443b      	add	r3, r7
 801363c:	4293      	cmp	r3, r2
 801363e:	da97      	bge.n	8013570 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013640:	a80e      	add	r0, sp, #56	; 0x38
 8013642:	f7ff fdeb 	bl	801321c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013646:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801364a:	3b01      	subs	r3, #1
 801364c:	b29b      	uxth	r3, r3
 801364e:	454b      	cmp	r3, r9
 8013650:	9309      	str	r3, [sp, #36]	; 0x24
 8013652:	d021      	beq.n	8013698 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8013654:	7961      	ldrb	r1, [r4, #5]
 8013656:	a817      	add	r0, sp, #92	; 0x5c
 8013658:	f7f3 fc1e 	bl	8006e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801365c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801365e:	e7f4      	b.n	801364a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8013660:	fa1f f986 	uxth.w	r9, r6
 8013664:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013668:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801366c:	443b      	add	r3, r7
 801366e:	4293      	cmp	r3, r2
 8013670:	f6bf af7e 	bge.w	8013570 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013674:	a817      	add	r0, sp, #92	; 0x5c
 8013676:	f002 fe41 	bl	80162fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801367a:	b1f8      	cbz	r0, 80136bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801367c:	280a      	cmp	r0, #10
 801367e:	d1f1      	bne.n	8013664 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013680:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8013684:	444b      	add	r3, r9
 8013686:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801368a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801368e:	eba3 0309 	sub.w	r3, r3, r9
 8013692:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013696:	e7e5      	b.n	8013664 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013698:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801369c:	b2b3      	uxth	r3, r6
 801369e:	441a      	add	r2, r3
 80136a0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80136a4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80136a8:	1ad3      	subs	r3, r2, r3
 80136aa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80136ae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80136b2:	b11b      	cbz	r3, 80136bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80136b4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80136b8:	2b00      	cmp	r3, #0
 80136ba:	d0ba      	beq.n	8013632 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80136bc:	b063      	add	sp, #396	; 0x18c
 80136be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80136c2:	2a02      	cmp	r2, #2
 80136c4:	d105      	bne.n	80136d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80136c6:	7be2      	ldrb	r2, [r4, #15]
 80136c8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80136cc:	1a80      	subs	r0, r0, r2
 80136ce:	1ac0      	subs	r0, r0, r3
 80136d0:	e773      	b.n	80135ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80136d2:	2000      	movs	r0, #0
 80136d4:	e772      	b.n	80135bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80136d6:	7be0      	ldrb	r0, [r4, #15]
 80136d8:	e770      	b.n	80135bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80136da:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80136de:	e773      	b.n	80135c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80136e0:	f1ba 0f00 	cmp.w	sl, #0
 80136e4:	d0f7      	beq.n	80136d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80136e6:	2264      	movs	r2, #100	; 0x64
 80136e8:	4639      	mov	r1, r7
 80136ea:	a849      	add	r0, sp, #292	; 0x124
 80136ec:	f014 f9c3 	bl	8027a76 <memcpy>
 80136f0:	2300      	movs	r3, #0
 80136f2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80136f6:	6821      	ldr	r1, [r4, #0]
 80136f8:	a849      	add	r0, sp, #292	; 0x124
 80136fa:	f7ff fbae 	bl	8012e5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80136fe:	b203      	sxth	r3, r0
 8013700:	e751      	b.n	80135a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08013702 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8013702:	2b03      	cmp	r3, #3
 8013704:	d818      	bhi.n	8013738 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8013706:	e8df f003 	tbb	[pc, r3]
 801370a:	0602      	.short	0x0602
 801370c:	130d      	.short	0x130d
 801370e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013712:	1850      	adds	r0, r2, r1
 8013714:	4770      	bx	lr
 8013716:	8803      	ldrh	r3, [r0, #0]
 8013718:	8880      	ldrh	r0, [r0, #4]
 801371a:	4418      	add	r0, r3
 801371c:	b200      	sxth	r0, r0
 801371e:	1a80      	subs	r0, r0, r2
 8013720:	3801      	subs	r0, #1
 8013722:	4770      	bx	lr
 8013724:	8803      	ldrh	r3, [r0, #0]
 8013726:	8880      	ldrh	r0, [r0, #4]
 8013728:	4418      	add	r0, r3
 801372a:	b200      	sxth	r0, r0
 801372c:	1a40      	subs	r0, r0, r1
 801372e:	e7f7      	b.n	8013720 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8013730:	f9b0 0000 	ldrsh.w	r0, [r0]
 8013734:	4410      	add	r0, r2
 8013736:	4770      	bx	lr
 8013738:	2000      	movs	r0, #0
 801373a:	4770      	bx	lr

0801373c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801373c:	2b03      	cmp	r3, #3
 801373e:	d817      	bhi.n	8013770 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8013740:	e8df f003 	tbb	[pc, r3]
 8013744:	10090602 	.word	0x10090602
 8013748:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801374c:	1850      	adds	r0, r2, r1
 801374e:	4770      	bx	lr
 8013750:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013754:	e7fa      	b.n	801374c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8013756:	8843      	ldrh	r3, [r0, #2]
 8013758:	88c0      	ldrh	r0, [r0, #6]
 801375a:	4418      	add	r0, r3
 801375c:	b200      	sxth	r0, r0
 801375e:	1a80      	subs	r0, r0, r2
 8013760:	3801      	subs	r0, #1
 8013762:	4770      	bx	lr
 8013764:	8843      	ldrh	r3, [r0, #2]
 8013766:	88c0      	ldrh	r0, [r0, #6]
 8013768:	4418      	add	r0, r3
 801376a:	b200      	sxth	r0, r0
 801376c:	1a40      	subs	r0, r0, r1
 801376e:	e7f7      	b.n	8013760 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8013770:	2000      	movs	r0, #0
 8013772:	4770      	bx	lr

08013774 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8013774:	4b01      	ldr	r3, [pc, #4]	; (801377c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8013776:	2200      	movs	r2, #0
 8013778:	601a      	str	r2, [r3, #0]
 801377a:	4770      	bx	lr
 801377c:	200137cc 	.word	0x200137cc

08013780 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8013780:	4603      	mov	r3, r0
 8013782:	b1c8      	cbz	r0, 80137b8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8013784:	0c02      	lsrs	r2, r0, #16
 8013786:	0412      	lsls	r2, r2, #16
 8013788:	b9a2      	cbnz	r2, 80137b4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801378a:	0403      	lsls	r3, r0, #16
 801378c:	2010      	movs	r0, #16
 801378e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8013792:	bf04      	itt	eq
 8013794:	021b      	lsleq	r3, r3, #8
 8013796:	3008      	addeq	r0, #8
 8013798:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801379c:	bf04      	itt	eq
 801379e:	011b      	lsleq	r3, r3, #4
 80137a0:	3004      	addeq	r0, #4
 80137a2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80137a6:	bf04      	itt	eq
 80137a8:	009b      	lsleq	r3, r3, #2
 80137aa:	3002      	addeq	r0, #2
 80137ac:	2b00      	cmp	r3, #0
 80137ae:	db04      	blt.n	80137ba <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80137b0:	3001      	adds	r0, #1
 80137b2:	4770      	bx	lr
 80137b4:	2000      	movs	r0, #0
 80137b6:	e7ea      	b.n	801378e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80137b8:	2020      	movs	r0, #32
 80137ba:	4770      	bx	lr

080137bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80137bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137c0:	b087      	sub	sp, #28
 80137c2:	460d      	mov	r5, r1
 80137c4:	4616      	mov	r6, r2
 80137c6:	4698      	mov	r8, r3
 80137c8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80137cc:	4601      	mov	r1, r0
 80137ce:	b120      	cbz	r0, 80137da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80137d0:	b11a      	cbz	r2, 80137da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80137d2:	2d1f      	cmp	r5, #31
 80137d4:	d801      	bhi.n	80137da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80137d6:	2b1f      	cmp	r3, #31
 80137d8:	d904      	bls.n	80137e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80137da:	2000      	movs	r0, #0
 80137dc:	6038      	str	r0, [r7, #0]
 80137de:	b007      	add	sp, #28
 80137e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137e4:	b97d      	cbnz	r5, 8013806 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80137e6:	b143      	cbz	r3, 80137fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80137e8:	4602      	mov	r2, r0
 80137ea:	e9cd 4700 	strd	r4, r7, [sp]
 80137ee:	462b      	mov	r3, r5
 80137f0:	4641      	mov	r1, r8
 80137f2:	4630      	mov	r0, r6
 80137f4:	f7ff ffe2 	bl	80137bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80137f8:	e7f1      	b.n	80137de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80137fa:	f04f 33ff 	mov.w	r3, #4294967295
 80137fe:	603b      	str	r3, [r7, #0]
 8013800:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8013804:	e7eb      	b.n	80137de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013806:	fa32 fa05 	lsrs.w	sl, r2, r5
 801380a:	d106      	bne.n	801381a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801380c:	4346      	muls	r6, r0
 801380e:	fbb6 f0f4 	udiv	r0, r6, r4
 8013812:	fb04 6610 	mls	r6, r4, r0, r6
 8013816:	603e      	str	r6, [r7, #0]
 8013818:	e7e1      	b.n	80137de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801381a:	2201      	movs	r2, #1
 801381c:	40aa      	lsls	r2, r5
 801381e:	3a01      	subs	r2, #1
 8013820:	4016      	ands	r6, r2
 8013822:	fa00 fb05 	lsl.w	fp, r0, r5
 8013826:	4630      	mov	r0, r6
 8013828:	fbbb f9f4 	udiv	r9, fp, r4
 801382c:	fb0a f309 	mul.w	r3, sl, r9
 8013830:	9303      	str	r3, [sp, #12]
 8013832:	f7ff ffa5 	bl	8013780 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013836:	462b      	mov	r3, r5
 8013838:	460a      	mov	r2, r1
 801383a:	e9cd 4700 	strd	r4, r7, [sp]
 801383e:	4601      	mov	r1, r0
 8013840:	4630      	mov	r0, r6
 8013842:	f7ff ffbb 	bl	80137bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013846:	fb04 b919 	mls	r9, r4, r9, fp
 801384a:	4606      	mov	r6, r0
 801384c:	4648      	mov	r0, r9
 801384e:	eb05 0108 	add.w	r1, r5, r8
 8013852:	f7ff ff95 	bl	8013780 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013856:	ab05      	add	r3, sp, #20
 8013858:	e9cd 4300 	strd	r4, r3, [sp]
 801385c:	464a      	mov	r2, r9
 801385e:	4603      	mov	r3, r0
 8013860:	4650      	mov	r0, sl
 8013862:	f7ff ffab 	bl	80137bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013866:	6839      	ldr	r1, [r7, #0]
 8013868:	9a05      	ldr	r2, [sp, #20]
 801386a:	9b03      	ldr	r3, [sp, #12]
 801386c:	4411      	add	r1, r2
 801386e:	fbb1 f2f4 	udiv	r2, r1, r4
 8013872:	18d3      	adds	r3, r2, r3
 8013874:	441e      	add	r6, r3
 8013876:	fb04 1412 	mls	r4, r4, r2, r1
 801387a:	4430      	add	r0, r6
 801387c:	603c      	str	r4, [r7, #0]
 801387e:	e7ae      	b.n	80137de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08013880 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8013880:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013884:	b085      	sub	sp, #20
 8013886:	f1b0 0900 	subs.w	r9, r0, #0
 801388a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801388c:	461d      	mov	r5, r3
 801388e:	bfbf      	itttt	lt
 8013890:	6823      	ldrlt	r3, [r4, #0]
 8013892:	425b      	neglt	r3, r3
 8013894:	f1c9 0900 	rsblt	r9, r9, #0
 8013898:	6023      	strlt	r3, [r4, #0]
 801389a:	bfb4      	ite	lt
 801389c:	f04f 36ff 	movlt.w	r6, #4294967295
 80138a0:	2601      	movge	r6, #1
 80138a2:	2a00      	cmp	r2, #0
 80138a4:	4617      	mov	r7, r2
 80138a6:	da04      	bge.n	80138b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80138a8:	6823      	ldr	r3, [r4, #0]
 80138aa:	425b      	negs	r3, r3
 80138ac:	4257      	negs	r7, r2
 80138ae:	4276      	negs	r6, r6
 80138b0:	6023      	str	r3, [r4, #0]
 80138b2:	2d00      	cmp	r5, #0
 80138b4:	4638      	mov	r0, r7
 80138b6:	bfba      	itte	lt
 80138b8:	426d      	neglt	r5, r5
 80138ba:	f04f 38ff 	movlt.w	r8, #4294967295
 80138be:	f04f 0801 	movge.w	r8, #1
 80138c2:	f7ff ff5d 	bl	8013780 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80138c6:	ab03      	add	r3, sp, #12
 80138c8:	e9cd 5300 	strd	r5, r3, [sp]
 80138cc:	463a      	mov	r2, r7
 80138ce:	4603      	mov	r3, r0
 80138d0:	4648      	mov	r0, r9
 80138d2:	f7ff ff73 	bl	80137bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80138d6:	6823      	ldr	r3, [r4, #0]
 80138d8:	9a03      	ldr	r2, [sp, #12]
 80138da:	4546      	cmp	r6, r8
 80138dc:	441a      	add	r2, r3
 80138de:	fb92 f3f5 	sdiv	r3, r2, r5
 80138e2:	4418      	add	r0, r3
 80138e4:	bf18      	it	ne
 80138e6:	4240      	negne	r0, r0
 80138e8:	fb05 2313 	mls	r3, r5, r3, r2
 80138ec:	1c72      	adds	r2, r6, #1
 80138ee:	6023      	str	r3, [r4, #0]
 80138f0:	d105      	bne.n	80138fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80138f2:	2b00      	cmp	r3, #0
 80138f4:	f1c3 0200 	rsb	r2, r3, #0
 80138f8:	db0b      	blt.n	8013912 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80138fa:	6022      	str	r2, [r4, #0]
 80138fc:	e006      	b.n	801390c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80138fe:	2e01      	cmp	r6, #1
 8013900:	d104      	bne.n	801390c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013902:	2b00      	cmp	r3, #0
 8013904:	da02      	bge.n	801390c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013906:	442b      	add	r3, r5
 8013908:	3801      	subs	r0, #1
 801390a:	6023      	str	r3, [r4, #0]
 801390c:	b005      	add	sp, #20
 801390e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013912:	3801      	subs	r0, #1
 8013914:	1b52      	subs	r2, r2, r5
 8013916:	e7f0      	b.n	80138fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08013918 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8013918:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801391c:	4c1c      	ldr	r4, [pc, #112]	; (8013990 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801391e:	6807      	ldr	r7, [r0, #0]
 8013920:	69a3      	ldr	r3, [r4, #24]
 8013922:	4605      	mov	r5, r0
 8013924:	b92b      	cbnz	r3, 8013932 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8013926:	6840      	ldr	r0, [r0, #4]
 8013928:	e9c5 7000 	strd	r7, r0, [r5]
 801392c:	b004      	add	sp, #16
 801392e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013932:	68a2      	ldr	r2, [r4, #8]
 8013934:	6820      	ldr	r0, [r4, #0]
 8013936:	ae04      	add	r6, sp, #16
 8013938:	f04f 0802 	mov.w	r8, #2
 801393c:	fb93 f1f8 	sdiv	r1, r3, r8
 8013940:	440a      	add	r2, r1
 8013942:	f846 2d04 	str.w	r2, [r6, #-4]!
 8013946:	69e1      	ldr	r1, [r4, #28]
 8013948:	9600      	str	r6, [sp, #0]
 801394a:	463a      	mov	r2, r7
 801394c:	f7ff ff98 	bl	8013880 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013950:	69a3      	ldr	r3, [r4, #24]
 8013952:	686a      	ldr	r2, [r5, #4]
 8013954:	6a21      	ldr	r1, [r4, #32]
 8013956:	9600      	str	r6, [sp, #0]
 8013958:	4607      	mov	r7, r0
 801395a:	6860      	ldr	r0, [r4, #4]
 801395c:	f7ff ff90 	bl	8013880 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013960:	6962      	ldr	r2, [r4, #20]
 8013962:	69a3      	ldr	r3, [r4, #24]
 8013964:	fb93 f8f8 	sdiv	r8, r3, r8
 8013968:	4442      	add	r2, r8
 801396a:	9203      	str	r2, [sp, #12]
 801396c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801396e:	682a      	ldr	r2, [r5, #0]
 8013970:	9600      	str	r6, [sp, #0]
 8013972:	4407      	add	r7, r0
 8013974:	68e0      	ldr	r0, [r4, #12]
 8013976:	f7ff ff83 	bl	8013880 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801397a:	9600      	str	r6, [sp, #0]
 801397c:	4680      	mov	r8, r0
 801397e:	69a3      	ldr	r3, [r4, #24]
 8013980:	686a      	ldr	r2, [r5, #4]
 8013982:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8013984:	6920      	ldr	r0, [r4, #16]
 8013986:	f7ff ff7b 	bl	8013880 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801398a:	4440      	add	r0, r8
 801398c:	e7cc      	b.n	8013928 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801398e:	bf00      	nop
 8013990:	200137d0 	.word	0x200137d0

08013994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8013994:	4b07      	ldr	r3, [pc, #28]	; (80139b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8013996:	781b      	ldrb	r3, [r3, #0]
 8013998:	2b01      	cmp	r3, #1
 801399a:	d109      	bne.n	80139b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801399c:	f9b1 3000 	ldrsh.w	r3, [r1]
 80139a0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80139a4:	8003      	strh	r3, [r0, #0]
 80139a6:	4b04      	ldr	r3, [pc, #16]	; (80139b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80139a8:	881b      	ldrh	r3, [r3, #0]
 80139aa:	3b01      	subs	r3, #1
 80139ac:	1a9b      	subs	r3, r3, r2
 80139ae:	800b      	strh	r3, [r1, #0]
 80139b0:	4770      	bx	lr
 80139b2:	bf00      	nop
 80139b4:	200137b4 	.word	0x200137b4
 80139b8:	200137b0 	.word	0x200137b0

080139bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80139bc:	b510      	push	{r4, lr}
 80139be:	4b07      	ldr	r3, [pc, #28]	; (80139dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80139c0:	781b      	ldrb	r3, [r3, #0]
 80139c2:	2b01      	cmp	r3, #1
 80139c4:	d108      	bne.n	80139d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80139c6:	4b06      	ldr	r3, [pc, #24]	; (80139e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80139c8:	880c      	ldrh	r4, [r1, #0]
 80139ca:	881b      	ldrh	r3, [r3, #0]
 80139cc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80139d0:	3b01      	subs	r3, #1
 80139d2:	1b1b      	subs	r3, r3, r4
 80139d4:	8003      	strh	r3, [r0, #0]
 80139d6:	800a      	strh	r2, [r1, #0]
 80139d8:	bd10      	pop	{r4, pc}
 80139da:	bf00      	nop
 80139dc:	200137b4 	.word	0x200137b4
 80139e0:	200137b0 	.word	0x200137b0

080139e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80139e4:	b510      	push	{r4, lr}
 80139e6:	4b0a      	ldr	r3, [pc, #40]	; (8013a10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80139e8:	781b      	ldrb	r3, [r3, #0]
 80139ea:	2b01      	cmp	r3, #1
 80139ec:	d10e      	bne.n	8013a0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80139ee:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80139f2:	8843      	ldrh	r3, [r0, #2]
 80139f4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80139f8:	8044      	strh	r4, [r0, #2]
 80139fa:	18ca      	adds	r2, r1, r3
 80139fc:	4b05      	ldr	r3, [pc, #20]	; (8013a14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80139fe:	881b      	ldrh	r3, [r3, #0]
 8013a00:	1a9b      	subs	r3, r3, r2
 8013a02:	8003      	strh	r3, [r0, #0]
 8013a04:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013a08:	80c3      	strh	r3, [r0, #6]
 8013a0a:	8081      	strh	r1, [r0, #4]
 8013a0c:	bd10      	pop	{r4, pc}
 8013a0e:	bf00      	nop
 8013a10:	200137b4 	.word	0x200137b4
 8013a14:	200137b0 	.word	0x200137b0

08013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8013a18:	4b08      	ldr	r3, [pc, #32]	; (8013a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8013a1a:	781b      	ldrb	r3, [r3, #0]
 8013a1c:	2b01      	cmp	r3, #1
 8013a1e:	d10c      	bne.n	8013a3a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8013a20:	8803      	ldrh	r3, [r0, #0]
 8013a22:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8013a26:	8842      	ldrh	r2, [r0, #2]
 8013a28:	8002      	strh	r2, [r0, #0]
 8013a2a:	185a      	adds	r2, r3, r1
 8013a2c:	4b04      	ldr	r3, [pc, #16]	; (8013a40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8013a2e:	881b      	ldrh	r3, [r3, #0]
 8013a30:	1a9b      	subs	r3, r3, r2
 8013a32:	8043      	strh	r3, [r0, #2]
 8013a34:	88c3      	ldrh	r3, [r0, #6]
 8013a36:	8083      	strh	r3, [r0, #4]
 8013a38:	80c1      	strh	r1, [r0, #6]
 8013a3a:	4770      	bx	lr
 8013a3c:	200137b4 	.word	0x200137b4
 8013a40:	200137b0 	.word	0x200137b0

08013a44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8013a44:	b510      	push	{r4, lr}
 8013a46:	4b07      	ldr	r3, [pc, #28]	; (8013a64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8013a48:	781b      	ldrb	r3, [r3, #0]
 8013a4a:	2b01      	cmp	r3, #1
 8013a4c:	d108      	bne.n	8013a60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8013a4e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013a52:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013a56:	8003      	strh	r3, [r0, #0]
 8013a58:	8893      	ldrh	r3, [r2, #4]
 8013a5a:	3b01      	subs	r3, #1
 8013a5c:	1b1b      	subs	r3, r3, r4
 8013a5e:	800b      	strh	r3, [r1, #0]
 8013a60:	bd10      	pop	{r4, pc}
 8013a62:	bf00      	nop
 8013a64:	200137b4 	.word	0x200137b4

08013a68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8013a68:	4b0b      	ldr	r3, [pc, #44]	; (8013a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8013a6a:	781b      	ldrb	r3, [r3, #0]
 8013a6c:	2b01      	cmp	r3, #1
 8013a6e:	d111      	bne.n	8013a94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8013a70:	680b      	ldr	r3, [r1, #0]
 8013a72:	ed90 7a00 	vldr	s14, [r0]
 8013a76:	6003      	str	r3, [r0, #0]
 8013a78:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8013a7c:	eddf 6a07 	vldr	s13, [pc, #28]	; 8013a9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8013a80:	ee07 3a90 	vmov	s15, r3
 8013a84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013a88:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8013a8c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8013a90:	edc1 7a00 	vstr	s15, [r1]
 8013a94:	4770      	bx	lr
 8013a96:	bf00      	nop
 8013a98:	200137b4 	.word	0x200137b4
 8013a9c:	38d1b717 	.word	0x38d1b717

08013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8013aa0:	b510      	push	{r4, lr}
 8013aa2:	4b0a      	ldr	r3, [pc, #40]	; (8013acc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8013aa4:	781b      	ldrb	r3, [r3, #0]
 8013aa6:	2b01      	cmp	r3, #1
 8013aa8:	460a      	mov	r2, r1
 8013aaa:	d10d      	bne.n	8013ac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8013aac:	8881      	ldrh	r1, [r0, #4]
 8013aae:	8803      	ldrh	r3, [r0, #0]
 8013ab0:	440b      	add	r3, r1
 8013ab2:	4601      	mov	r1, r0
 8013ab4:	3b01      	subs	r3, #1
 8013ab6:	f821 3b02 	strh.w	r3, [r1], #2
 8013aba:	f7ff ffc3 	bl	8013a44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8013abe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013ac2:	88c2      	ldrh	r2, [r0, #6]
 8013ac4:	8082      	strh	r2, [r0, #4]
 8013ac6:	80c3      	strh	r3, [r0, #6]
 8013ac8:	bd10      	pop	{r4, pc}
 8013aca:	bf00      	nop
 8013acc:	200137b4 	.word	0x200137b4

08013ad0 <_ZN8touchgfx11Application13requestRedrawEv>:
 8013ad0:	4b06      	ldr	r3, [pc, #24]	; (8013aec <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8013ad2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013ad6:	4b06      	ldr	r3, [pc, #24]	; (8013af0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8013ad8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8013adc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013ae0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8013ae4:	2100      	movs	r1, #0
 8013ae6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8013aea:	4770      	bx	lr
 8013aec:	200137b0 	.word	0x200137b0
 8013af0:	200137b2 	.word	0x200137b2

08013af4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8013af4:	4b03      	ldr	r3, [pc, #12]	; (8013b04 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8013af6:	6818      	ldr	r0, [r3, #0]
 8013af8:	b110      	cbz	r0, 8013b00 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8013afa:	6803      	ldr	r3, [r0, #0]
 8013afc:	699b      	ldr	r3, [r3, #24]
 8013afe:	4718      	bx	r3
 8013b00:	4770      	bx	lr
 8013b02:	bf00      	nop
 8013b04:	20013800 	.word	0x20013800

08013b08 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8013b08:	4770      	bx	lr
	...

08013b0c <_ZN8touchgfx11Application4drawEv>:
 8013b0c:	b507      	push	{r0, r1, r2, lr}
 8013b0e:	4b09      	ldr	r3, [pc, #36]	; (8013b34 <_ZN8touchgfx11Application4drawEv+0x28>)
 8013b10:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013b14:	4b08      	ldr	r3, [pc, #32]	; (8013b38 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8013b16:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013b1a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013b1e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013b22:	6803      	ldr	r3, [r0, #0]
 8013b24:	2100      	movs	r1, #0
 8013b26:	9100      	str	r1, [sp, #0]
 8013b28:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8013b2a:	4669      	mov	r1, sp
 8013b2c:	4798      	blx	r3
 8013b2e:	b003      	add	sp, #12
 8013b30:	f85d fb04 	ldr.w	pc, [sp], #4
 8013b34:	200137b0 	.word	0x200137b0
 8013b38:	200137b2 	.word	0x200137b2

08013b3c <_ZN8touchgfx11Application10invalidateEv>:
 8013b3c:	4b09      	ldr	r3, [pc, #36]	; (8013b64 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8013b3e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013b42:	4b09      	ldr	r3, [pc, #36]	; (8013b68 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8013b44:	b082      	sub	sp, #8
 8013b46:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013b4a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013b4e:	2100      	movs	r1, #0
 8013b50:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013b54:	9100      	str	r1, [sp, #0]
 8013b56:	6803      	ldr	r3, [r0, #0]
 8013b58:	aa02      	add	r2, sp, #8
 8013b5a:	e912 0006 	ldmdb	r2, {r1, r2}
 8013b5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013b60:	b002      	add	sp, #8
 8013b62:	4718      	bx	r3
 8013b64:	200137b0 	.word	0x200137b0
 8013b68:	200137b2 	.word	0x200137b2

08013b6c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8013b6c:	4b03      	ldr	r3, [pc, #12]	; (8013b7c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8013b6e:	6818      	ldr	r0, [r3, #0]
 8013b70:	b110      	cbz	r0, 8013b78 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8013b72:	6803      	ldr	r3, [r0, #0]
 8013b74:	69db      	ldr	r3, [r3, #28]
 8013b76:	4718      	bx	r3
 8013b78:	4770      	bx	lr
 8013b7a:	bf00      	nop
 8013b7c:	20013800 	.word	0x20013800

08013b80 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8013b80:	4b03      	ldr	r3, [pc, #12]	; (8013b90 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8013b82:	6818      	ldr	r0, [r3, #0]
 8013b84:	b110      	cbz	r0, 8013b8c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8013b86:	6803      	ldr	r3, [r0, #0]
 8013b88:	6a1b      	ldr	r3, [r3, #32]
 8013b8a:	4718      	bx	r3
 8013b8c:	4770      	bx	lr
 8013b8e:	bf00      	nop
 8013b90:	20013800 	.word	0x20013800

08013b94 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8013b94:	2300      	movs	r3, #0
 8013b96:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8013b9a:	4770      	bx	lr

08013b9c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8013b9c:	4b03      	ldr	r3, [pc, #12]	; (8013bac <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8013b9e:	6818      	ldr	r0, [r3, #0]
 8013ba0:	b110      	cbz	r0, 8013ba8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8013ba2:	6803      	ldr	r3, [r0, #0]
 8013ba4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013ba6:	4718      	bx	r3
 8013ba8:	4770      	bx	lr
 8013baa:	bf00      	nop
 8013bac:	20013800 	.word	0x20013800

08013bb0 <_ZN8touchgfx11ApplicationD1Ev>:
 8013bb0:	4770      	bx	lr

08013bb2 <_ZN8touchgfx11ApplicationD0Ev>:
 8013bb2:	b510      	push	{r4, lr}
 8013bb4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8013bb8:	4604      	mov	r4, r0
 8013bba:	f012 fe40 	bl	802683e <_ZdlPvj>
 8013bbe:	4620      	mov	r0, r4
 8013bc0:	bd10      	pop	{r4, pc}

08013bc2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8013bc2:	b510      	push	{r4, lr}
 8013bc4:	f9b1 4000 	ldrsh.w	r4, [r1]
 8013bc8:	888a      	ldrh	r2, [r1, #4]
 8013bca:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013bce:	4422      	add	r2, r4
 8013bd0:	b212      	sxth	r2, r2
 8013bd2:	4293      	cmp	r3, r2
 8013bd4:	da15      	bge.n	8013c02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013bd6:	8882      	ldrh	r2, [r0, #4]
 8013bd8:	4413      	add	r3, r2
 8013bda:	b21b      	sxth	r3, r3
 8013bdc:	429c      	cmp	r4, r3
 8013bde:	da10      	bge.n	8013c02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013be0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8013be4:	88c9      	ldrh	r1, [r1, #6]
 8013be6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013bea:	4419      	add	r1, r3
 8013bec:	b209      	sxth	r1, r1
 8013bee:	428a      	cmp	r2, r1
 8013bf0:	da07      	bge.n	8013c02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013bf2:	88c0      	ldrh	r0, [r0, #6]
 8013bf4:	4410      	add	r0, r2
 8013bf6:	b200      	sxth	r0, r0
 8013bf8:	4283      	cmp	r3, r0
 8013bfa:	bfac      	ite	ge
 8013bfc:	2000      	movge	r0, #0
 8013bfe:	2001      	movlt	r0, #1
 8013c00:	bd10      	pop	{r4, pc}
 8013c02:	2000      	movs	r0, #0
 8013c04:	e7fc      	b.n	8013c00 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08013c06 <_ZN8touchgfx4Rect10restrictToEss>:
 8013c06:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013c0a:	2b00      	cmp	r3, #0
 8013c0c:	b510      	push	{r4, lr}
 8013c0e:	da04      	bge.n	8013c1a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8013c10:	8884      	ldrh	r4, [r0, #4]
 8013c12:	4423      	add	r3, r4
 8013c14:	8083      	strh	r3, [r0, #4]
 8013c16:	2300      	movs	r3, #0
 8013c18:	8003      	strh	r3, [r0, #0]
 8013c1a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013c1e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013c22:	1b09      	subs	r1, r1, r4
 8013c24:	428b      	cmp	r3, r1
 8013c26:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8013c2a:	bfc8      	it	gt
 8013c2c:	8081      	strhgt	r1, [r0, #4]
 8013c2e:	2b00      	cmp	r3, #0
 8013c30:	da04      	bge.n	8013c3c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8013c32:	88c1      	ldrh	r1, [r0, #6]
 8013c34:	440b      	add	r3, r1
 8013c36:	80c3      	strh	r3, [r0, #6]
 8013c38:	2300      	movs	r3, #0
 8013c3a:	8043      	strh	r3, [r0, #2]
 8013c3c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013c40:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8013c44:	1a52      	subs	r2, r2, r1
 8013c46:	4293      	cmp	r3, r2
 8013c48:	bfc8      	it	gt
 8013c4a:	80c2      	strhgt	r2, [r0, #6]
 8013c4c:	bd10      	pop	{r4, pc}
	...

08013c50 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8013c50:	b510      	push	{r4, lr}
 8013c52:	4b10      	ldr	r3, [pc, #64]	; (8013c94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8013c54:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013c58:	4b0f      	ldr	r3, [pc, #60]	; (8013c98 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8013c5a:	460c      	mov	r4, r1
 8013c5c:	4620      	mov	r0, r4
 8013c5e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013c62:	f7ff ffd0 	bl	8013c06 <_ZN8touchgfx4Rect10restrictToEss>
 8013c66:	4b0d      	ldr	r3, [pc, #52]	; (8013c9c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8013c68:	6818      	ldr	r0, [r3, #0]
 8013c6a:	b190      	cbz	r0, 8013c92 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8013c6c:	6803      	ldr	r3, [r0, #0]
 8013c6e:	4621      	mov	r1, r4
 8013c70:	689b      	ldr	r3, [r3, #8]
 8013c72:	4798      	blx	r3
 8013c74:	4b0a      	ldr	r3, [pc, #40]	; (8013ca0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8013c76:	6818      	ldr	r0, [r3, #0]
 8013c78:	b118      	cbz	r0, 8013c82 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8013c7a:	6803      	ldr	r3, [r0, #0]
 8013c7c:	4621      	mov	r1, r4
 8013c7e:	689b      	ldr	r3, [r3, #8]
 8013c80:	4798      	blx	r3
 8013c82:	4b08      	ldr	r3, [pc, #32]	; (8013ca4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8013c84:	6818      	ldr	r0, [r3, #0]
 8013c86:	6803      	ldr	r3, [r0, #0]
 8013c88:	4621      	mov	r1, r4
 8013c8a:	69db      	ldr	r3, [r3, #28]
 8013c8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c90:	4718      	bx	r3
 8013c92:	bd10      	pop	{r4, pc}
 8013c94:	200137b2 	.word	0x200137b2
 8013c98:	200137b0 	.word	0x200137b0
 8013c9c:	20013800 	.word	0x20013800
 8013ca0:	200137fc 	.word	0x200137fc
 8013ca4:	200137bc 	.word	0x200137bc

08013ca8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8013ca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013caa:	4606      	mov	r6, r0
 8013cac:	4608      	mov	r0, r1
 8013cae:	460f      	mov	r7, r1
 8013cb0:	f7fa ff97 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013cb4:	b9e8      	cbnz	r0, 8013cf2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013cb6:	f9b7 5000 	ldrsh.w	r5, [r7]
 8013cba:	f9b6 4000 	ldrsh.w	r4, [r6]
 8013cbe:	42a5      	cmp	r5, r4
 8013cc0:	db17      	blt.n	8013cf2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013cc2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8013cc6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8013cca:	429a      	cmp	r2, r3
 8013ccc:	db11      	blt.n	8013cf2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013cce:	88b9      	ldrh	r1, [r7, #4]
 8013cd0:	440d      	add	r5, r1
 8013cd2:	88b1      	ldrh	r1, [r6, #4]
 8013cd4:	440c      	add	r4, r1
 8013cd6:	b22d      	sxth	r5, r5
 8013cd8:	b224      	sxth	r4, r4
 8013cda:	42a5      	cmp	r5, r4
 8013cdc:	dc09      	bgt.n	8013cf2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013cde:	88f8      	ldrh	r0, [r7, #6]
 8013ce0:	4410      	add	r0, r2
 8013ce2:	88f2      	ldrh	r2, [r6, #6]
 8013ce4:	4413      	add	r3, r2
 8013ce6:	b200      	sxth	r0, r0
 8013ce8:	b21b      	sxth	r3, r3
 8013cea:	4298      	cmp	r0, r3
 8013cec:	bfcc      	ite	gt
 8013cee:	2000      	movgt	r0, #0
 8013cf0:	2001      	movle	r0, #1
 8013cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013cf4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8013cf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013cf6:	4604      	mov	r4, r0
 8013cf8:	4608      	mov	r0, r1
 8013cfa:	460d      	mov	r5, r1
 8013cfc:	f7fa ff71 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013d00:	b978      	cbnz	r0, 8013d22 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8013d02:	4620      	mov	r0, r4
 8013d04:	f7fa ff6d 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013d08:	f9b5 6000 	ldrsh.w	r6, [r5]
 8013d0c:	b150      	cbz	r0, 8013d24 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8013d0e:	8026      	strh	r6, [r4, #0]
 8013d10:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013d14:	8063      	strh	r3, [r4, #2]
 8013d16:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8013d1a:	80a3      	strh	r3, [r4, #4]
 8013d1c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8013d20:	80e3      	strh	r3, [r4, #6]
 8013d22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013d24:	f9b4 1000 	ldrsh.w	r1, [r4]
 8013d28:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013d2c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8013d30:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8013d34:	88ed      	ldrh	r5, [r5, #6]
 8013d36:	42b1      	cmp	r1, r6
 8013d38:	460f      	mov	r7, r1
 8013d3a:	bfa8      	it	ge
 8013d3c:	4637      	movge	r7, r6
 8013d3e:	4293      	cmp	r3, r2
 8013d40:	4618      	mov	r0, r3
 8013d42:	4466      	add	r6, ip
 8013d44:	bfa8      	it	ge
 8013d46:	4610      	movge	r0, r2
 8013d48:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8013d4c:	8027      	strh	r7, [r4, #0]
 8013d4e:	442a      	add	r2, r5
 8013d50:	88e5      	ldrh	r5, [r4, #6]
 8013d52:	8060      	strh	r0, [r4, #2]
 8013d54:	4461      	add	r1, ip
 8013d56:	442b      	add	r3, r5
 8013d58:	b236      	sxth	r6, r6
 8013d5a:	b209      	sxth	r1, r1
 8013d5c:	b212      	sxth	r2, r2
 8013d5e:	b21b      	sxth	r3, r3
 8013d60:	428e      	cmp	r6, r1
 8013d62:	bfac      	ite	ge
 8013d64:	ebc7 0106 	rsbge	r1, r7, r6
 8013d68:	ebc7 0101 	rsblt	r1, r7, r1
 8013d6c:	429a      	cmp	r2, r3
 8013d6e:	bfac      	ite	ge
 8013d70:	ebc0 0202 	rsbge	r2, r0, r2
 8013d74:	ebc0 0203 	rsblt	r2, r0, r3
 8013d78:	80a1      	strh	r1, [r4, #4]
 8013d7a:	80e2      	strh	r2, [r4, #6]
 8013d7c:	e7d1      	b.n	8013d22 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08013d80 <_ZN8touchgfx11Application11getInstanceEv>:
 8013d80:	4b01      	ldr	r3, [pc, #4]	; (8013d88 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8013d82:	6818      	ldr	r0, [r3, #0]
 8013d84:	4770      	bx	lr
 8013d86:	bf00      	nop
 8013d88:	20013810 	.word	0x20013810

08013d8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8013d8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013d8e:	4b10      	ldr	r3, [pc, #64]	; (8013dd0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8013d90:	781b      	ldrb	r3, [r3, #0]
 8013d92:	4605      	mov	r5, r0
 8013d94:	b1d3      	cbz	r3, 8013dcc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8013d96:	4b0f      	ldr	r3, [pc, #60]	; (8013dd4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8013d98:	4f0f      	ldr	r7, [pc, #60]	; (8013dd8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8013d9a:	881c      	ldrh	r4, [r3, #0]
 8013d9c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8013da0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8013da4:	42a3      	cmp	r3, r4
 8013da6:	d90e      	bls.n	8013dc6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8013da8:	683b      	ldr	r3, [r7, #0]
 8013daa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013dae:	b10a      	cbz	r2, 8013db4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8013db0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013db2:	b900      	cbnz	r0, 8013db6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8013db4:	6898      	ldr	r0, [r3, #8]
 8013db6:	6803      	ldr	r3, [r0, #0]
 8013db8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8013dbc:	69db      	ldr	r3, [r3, #28]
 8013dbe:	3401      	adds	r4, #1
 8013dc0:	4798      	blx	r3
 8013dc2:	b2a4      	uxth	r4, r4
 8013dc4:	e7ec      	b.n	8013da0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8013dc6:	2300      	movs	r3, #0
 8013dc8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8013dcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013dce:	bf00      	nop
 8013dd0:	200137ba 	.word	0x200137ba
 8013dd4:	20000088 	.word	0x20000088
 8013dd8:	200137bc 	.word	0x200137bc

08013ddc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8013ddc:	b510      	push	{r4, lr}
 8013dde:	2300      	movs	r3, #0
 8013de0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8013de4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8013de8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8013dec:	4604      	mov	r4, r0
 8013dee:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8013df2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8013df6:	429a      	cmp	r2, r3
 8013df8:	d90e      	bls.n	8013e18 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8013dfa:	18e2      	adds	r2, r4, r3
 8013dfc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8013e00:	b122      	cbz	r2, 8013e0c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8013e02:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8013e06:	6803      	ldr	r3, [r0, #0]
 8013e08:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013e0a:	4798      	blx	r3
 8013e0c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8013e10:	3301      	adds	r3, #1
 8013e12:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8013e16:	e7ea      	b.n	8013dee <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8013e18:	bd10      	pop	{r4, pc}

08013e1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8013e1a:	b530      	push	{r4, r5, lr}
 8013e1c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8013e20:	2200      	movs	r2, #0
 8013e22:	b293      	uxth	r3, r2
 8013e24:	429d      	cmp	r5, r3
 8013e26:	d90e      	bls.n	8013e46 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8013e28:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8013e2c:	428b      	cmp	r3, r1
 8013e2e:	d10b      	bne.n	8013e48 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8013e30:	1884      	adds	r4, r0, r2
 8013e32:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8013e36:	b13b      	cbz	r3, 8013e48 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8013e38:	3b01      	subs	r3, #1
 8013e3a:	b2db      	uxtb	r3, r3
 8013e3c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8013e40:	b90b      	cbnz	r3, 8013e46 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8013e42:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8013e46:	bd30      	pop	{r4, r5, pc}
 8013e48:	3201      	adds	r2, #1
 8013e4a:	e7ea      	b.n	8013e22 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8013e4c:	2300      	movs	r3, #0
 8013e4e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8013e52:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8013e56:	30a4      	adds	r0, #164	; 0xa4
 8013e58:	f802 3b01 	strb.w	r3, [r2], #1
 8013e5c:	4282      	cmp	r2, r0
 8013e5e:	d1fb      	bne.n	8013e58 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8013e60:	4770      	bx	lr
	...

08013e64 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8013e64:	b570      	push	{r4, r5, r6, lr}
 8013e66:	4c0b      	ldr	r4, [pc, #44]	; (8013e94 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8013e68:	4605      	mov	r5, r0
 8013e6a:	6820      	ldr	r0, [r4, #0]
 8013e6c:	460e      	mov	r6, r1
 8013e6e:	b110      	cbz	r0, 8013e76 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8013e70:	6803      	ldr	r3, [r0, #0]
 8013e72:	695b      	ldr	r3, [r3, #20]
 8013e74:	4798      	blx	r3
 8013e76:	1d28      	adds	r0, r5, #4
 8013e78:	f7ff ffe8 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8013e7c:	6026      	str	r6, [r4, #0]
 8013e7e:	6833      	ldr	r3, [r6, #0]
 8013e80:	4630      	mov	r0, r6
 8013e82:	68db      	ldr	r3, [r3, #12]
 8013e84:	4798      	blx	r3
 8013e86:	682b      	ldr	r3, [r5, #0]
 8013e88:	4628      	mov	r0, r5
 8013e8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013e8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013e90:	4718      	bx	r3
 8013e92:	bf00      	nop
 8013e94:	20013800 	.word	0x20013800

08013e98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8013e98:	2300      	movs	r3, #0
 8013e9a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8013e9e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8013ea2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013ea4:	461a      	mov	r2, r3
 8013ea6:	461c      	mov	r4, r3
 8013ea8:	461d      	mov	r5, r3
 8013eaa:	459c      	cmp	ip, r3
 8013eac:	dd1a      	ble.n	8013ee4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8013eae:	18c6      	adds	r6, r0, r3
 8013eb0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8013eb4:	b16e      	cbz	r6, 8013ed2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8013eb6:	429a      	cmp	r2, r3
 8013eb8:	d008      	beq.n	8013ecc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8013eba:	fa1f fe82 	uxth.w	lr, r2
 8013ebe:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8013ec2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8013ec6:	1887      	adds	r7, r0, r2
 8013ec8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8013ecc:	3201      	adds	r2, #1
 8013ece:	3301      	adds	r3, #1
 8013ed0:	e7eb      	b.n	8013eaa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8013ed2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8013ed6:	4299      	cmp	r1, r3
 8013ed8:	bfa8      	it	ge
 8013eda:	3501      	addge	r5, #1
 8013edc:	429e      	cmp	r6, r3
 8013ede:	bfc8      	it	gt
 8013ee0:	3401      	addgt	r4, #1
 8013ee2:	e7f4      	b.n	8013ece <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8013ee4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8013ee8:	1b49      	subs	r1, r1, r5
 8013eea:	1b1b      	subs	r3, r3, r4
 8013eec:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8013ef0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8013ef4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8013ef8:	4293      	cmp	r3, r2
 8013efa:	dd03      	ble.n	8013f04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8013efc:	3b01      	subs	r3, #1
 8013efe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8013f02:	e7f7      	b.n	8013ef4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8013f04:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08013f08 <_ZN8touchgfx11Application15handleTickEventEv>:
 8013f08:	b570      	push	{r4, r5, r6, lr}
 8013f0a:	4d16      	ldr	r5, [pc, #88]	; (8013f64 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8013f0c:	4604      	mov	r4, r0
 8013f0e:	6828      	ldr	r0, [r5, #0]
 8013f10:	b140      	cbz	r0, 8013f24 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8013f12:	7a03      	ldrb	r3, [r0, #8]
 8013f14:	b933      	cbnz	r3, 8013f24 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8013f16:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8013f1a:	6803      	ldr	r3, [r0, #0]
 8013f1c:	689b      	ldr	r3, [r3, #8]
 8013f1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013f22:	4718      	bx	r3
 8013f24:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8013f28:	4e0f      	ldr	r6, [pc, #60]	; (8013f68 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8013f2a:	b973      	cbnz	r3, 8013f4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013f2c:	b168      	cbz	r0, 8013f4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013f2e:	7a03      	ldrb	r3, [r0, #8]
 8013f30:	b15b      	cbz	r3, 8013f4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013f32:	6830      	ldr	r0, [r6, #0]
 8013f34:	b110      	cbz	r0, 8013f3c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8013f36:	6803      	ldr	r3, [r0, #0]
 8013f38:	691b      	ldr	r3, [r3, #16]
 8013f3a:	4798      	blx	r3
 8013f3c:	6828      	ldr	r0, [r5, #0]
 8013f3e:	6803      	ldr	r3, [r0, #0]
 8013f40:	68db      	ldr	r3, [r3, #12]
 8013f42:	4798      	blx	r3
 8013f44:	2301      	movs	r3, #1
 8013f46:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8013f4a:	3404      	adds	r4, #4
 8013f4c:	4620      	mov	r0, r4
 8013f4e:	f7ff ff45 	bl	8013ddc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8013f52:	4620      	mov	r0, r4
 8013f54:	f7ff ffa0 	bl	8013e98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8013f58:	6830      	ldr	r0, [r6, #0]
 8013f5a:	b110      	cbz	r0, 8013f62 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8013f5c:	6803      	ldr	r3, [r0, #0]
 8013f5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013f60:	e7dd      	b.n	8013f1e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8013f62:	bd70      	pop	{r4, r5, r6, pc}
 8013f64:	20013804 	.word	0x20013804
 8013f68:	20013800 	.word	0x20013800

08013f6c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8013f6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013f6e:	2300      	movs	r3, #0
 8013f70:	4604      	mov	r4, r0
 8013f72:	460d      	mov	r5, r1
 8013f74:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8013f78:	4618      	mov	r0, r3
 8013f7a:	b29a      	uxth	r2, r3
 8013f7c:	4291      	cmp	r1, r2
 8013f7e:	d911      	bls.n	8013fa4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8013f80:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8013f84:	18e6      	adds	r6, r4, r3
 8013f86:	42af      	cmp	r7, r5
 8013f88:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8013f8c:	d105      	bne.n	8013f9a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8013f8e:	2aff      	cmp	r2, #255	; 0xff
 8013f90:	d002      	beq.n	8013f98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8013f92:	3201      	adds	r2, #1
 8013f94:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8013f98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013f9a:	2a00      	cmp	r2, #0
 8013f9c:	bf08      	it	eq
 8013f9e:	2001      	moveq	r0, #1
 8013fa0:	3301      	adds	r3, #1
 8013fa2:	e7ea      	b.n	8013f7a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8013fa4:	b120      	cbz	r0, 8013fb0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8013fa6:	2920      	cmp	r1, #32
 8013fa8:	d102      	bne.n	8013fb0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8013faa:	4620      	mov	r0, r4
 8013fac:	f7ff ff74 	bl	8013e98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8013fb0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8013fb4:	2b1f      	cmp	r3, #31
 8013fb6:	d8ef      	bhi.n	8013f98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8013fb8:	18e2      	adds	r2, r4, r3
 8013fba:	2101      	movs	r1, #1
 8013fbc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8013fc0:	185a      	adds	r2, r3, r1
 8013fc2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8013fc6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8013fca:	e7e5      	b.n	8013f98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08013fcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8013fcc:	4603      	mov	r3, r0
 8013fce:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8013fd2:	2200      	movs	r2, #0
 8013fd4:	801a      	strh	r2, [r3, #0]
 8013fd6:	805a      	strh	r2, [r3, #2]
 8013fd8:	809a      	strh	r2, [r3, #4]
 8013fda:	80da      	strh	r2, [r3, #6]
 8013fdc:	3308      	adds	r3, #8
 8013fde:	428b      	cmp	r3, r1
 8013fe0:	d1f8      	bne.n	8013fd4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8013fe2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8013fe6:	4770      	bx	lr

08013fe8 <_ZN8touchgfx11ApplicationC1Ev>:
 8013fe8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013fea:	4606      	mov	r6, r0
 8013fec:	4b1c      	ldr	r3, [pc, #112]	; (8014060 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8013fee:	f846 3b04 	str.w	r3, [r6], #4
 8013ff2:	4604      	mov	r4, r0
 8013ff4:	2500      	movs	r5, #0
 8013ff6:	22a8      	movs	r2, #168	; 0xa8
 8013ff8:	2100      	movs	r1, #0
 8013ffa:	4630      	mov	r0, r6
 8013ffc:	f013 fc15 	bl	802782a <memset>
 8014000:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8014004:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014008:	f7ff ffe0 	bl	8013fcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801400c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8014010:	f7ff ffdc 	bl	8013fcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014014:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8014018:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801401c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8014020:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8014024:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8014028:	490e      	ldr	r1, [pc, #56]	; (8014064 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801402a:	480f      	ldr	r0, [pc, #60]	; (8014068 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801402c:	4f0f      	ldr	r7, [pc, #60]	; (801406c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801402e:	f010 fbf5 	bl	802481c <CRC_Lock>
 8014032:	4b0f      	ldr	r3, [pc, #60]	; (8014070 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014034:	b158      	cbz	r0, 801404e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014036:	801d      	strh	r5, [r3, #0]
 8014038:	4a0e      	ldr	r2, [pc, #56]	; (8014074 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801403a:	2300      	movs	r3, #0
 801403c:	6013      	str	r3, [r2, #0]
 801403e:	4a0e      	ldr	r2, [pc, #56]	; (8014078 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8014040:	603b      	str	r3, [r7, #0]
 8014042:	4630      	mov	r0, r6
 8014044:	6013      	str	r3, [r2, #0]
 8014046:	f7ff ff01 	bl	8013e4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801404a:	4620      	mov	r0, r4
 801404c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801404e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8014052:	2002      	movs	r0, #2
 8014054:	801a      	strh	r2, [r3, #0]
 8014056:	6038      	str	r0, [r7, #0]
 8014058:	f001 fb4a 	bl	80156f0 <_ZN8touchgfx6Screen4drawEv>
 801405c:	e7ec      	b.n	8014038 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801405e:	bf00      	nop
 8014060:	0802b744 	.word	0x0802b744
 8014064:	b5e8b5cd 	.word	0xb5e8b5cd
 8014068:	f407a5c2 	.word	0xf407a5c2
 801406c:	20013800 	.word	0x20013800
 8014070:	20000088 	.word	0x20000088
 8014074:	20013810 	.word	0x20013810
 8014078:	20013804 	.word	0x20013804

0801407c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801407c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8014080:	3b01      	subs	r3, #1
 8014082:	b29b      	uxth	r3, r3
 8014084:	428b      	cmp	r3, r1
 8014086:	b510      	push	{r4, lr}
 8014088:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801408c:	d908      	bls.n	80140a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801408e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014092:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014096:	681a      	ldr	r2, [r3, #0]
 8014098:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801409c:	685a      	ldr	r2, [r3, #4]
 801409e:	6062      	str	r2, [r4, #4]
 80140a0:	bd10      	pop	{r4, pc}
	...

080140a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80140a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140a8:	4b8f      	ldr	r3, [pc, #572]	; (80142e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80140aa:	b08f      	sub	sp, #60	; 0x3c
 80140ac:	ac0a      	add	r4, sp, #40	; 0x28
 80140ae:	e884 0006 	stmia.w	r4, {r1, r2}
 80140b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80140b6:	4b8d      	ldr	r3, [pc, #564]	; (80142ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80140b8:	4683      	mov	fp, r0
 80140ba:	f9b3 1000 	ldrsh.w	r1, [r3]
 80140be:	4620      	mov	r0, r4
 80140c0:	f7ff fda1 	bl	8013c06 <_ZN8touchgfx4Rect10restrictToEss>
 80140c4:	4620      	mov	r0, r4
 80140c6:	f7fa fd8c 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80140ca:	2800      	cmp	r0, #0
 80140cc:	d16a      	bne.n	80141a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80140ce:	9403      	str	r4, [sp, #12]
 80140d0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80140d4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80140d8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80140dc:	35a4      	adds	r5, #164	; 0xa4
 80140de:	9301      	str	r3, [sp, #4]
 80140e0:	b15c      	cbz	r4, 80140fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80140e2:	4629      	mov	r1, r5
 80140e4:	9803      	ldr	r0, [sp, #12]
 80140e6:	f7ff fddf 	bl	8013ca8 <_ZNK8touchgfx4Rect8includesERKS0_>
 80140ea:	3c01      	subs	r4, #1
 80140ec:	b118      	cbz	r0, 80140f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80140ee:	b2a1      	uxth	r1, r4
 80140f0:	9801      	ldr	r0, [sp, #4]
 80140f2:	f7ff ffc3 	bl	801407c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80140f6:	3d08      	subs	r5, #8
 80140f8:	e7f2      	b.n	80140e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80140fa:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80140fe:	f8cd a010 	str.w	sl, [sp, #16]
 8014102:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014106:	9302      	str	r3, [sp, #8]
 8014108:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801410c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8014110:	9306      	str	r3, [sp, #24]
 8014112:	445c      	add	r4, fp
 8014114:	2500      	movs	r5, #0
 8014116:	4626      	mov	r6, r4
 8014118:	f8cd a014 	str.w	sl, [sp, #20]
 801411c:	462f      	mov	r7, r5
 801411e:	9b05      	ldr	r3, [sp, #20]
 8014120:	2b00      	cmp	r3, #0
 8014122:	d073      	beq.n	801420c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014124:	9903      	ldr	r1, [sp, #12]
 8014126:	4630      	mov	r0, r6
 8014128:	f7ff fd4b 	bl	8013bc2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801412c:	b350      	cbz	r0, 8014184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801412e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8014132:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014136:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801413a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801413e:	45e6      	cmp	lr, ip
 8014140:	db33      	blt.n	80141aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014142:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8014146:	88b3      	ldrh	r3, [r6, #4]
 8014148:	4472      	add	r2, lr
 801414a:	4463      	add	r3, ip
 801414c:	b212      	sxth	r2, r2
 801414e:	b21b      	sxth	r3, r3
 8014150:	429a      	cmp	r2, r3
 8014152:	dc2a      	bgt.n	80141aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014154:	88f3      	ldrh	r3, [r6, #6]
 8014156:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801415a:	fa1f f289 	uxth.w	r2, r9
 801415e:	4413      	add	r3, r2
 8014160:	b29b      	uxth	r3, r3
 8014162:	45c8      	cmp	r8, r9
 8014164:	fa1f fc88 	uxth.w	ip, r8
 8014168:	fa0f fe83 	sxth.w	lr, r3
 801416c:	db0f      	blt.n	801418e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801416e:	eba3 030c 	sub.w	r3, r3, ip
 8014172:	1ac9      	subs	r1, r1, r3
 8014174:	b209      	sxth	r1, r1
 8014176:	2900      	cmp	r1, #0
 8014178:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801417c:	dd12      	ble.n	80141a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801417e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8014182:	4605      	mov	r5, r0
 8014184:	9b05      	ldr	r3, [sp, #20]
 8014186:	3b01      	subs	r3, #1
 8014188:	9305      	str	r3, [sp, #20]
 801418a:	3e08      	subs	r6, #8
 801418c:	e7c7      	b.n	801411e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801418e:	4461      	add	r1, ip
 8014190:	b209      	sxth	r1, r1
 8014192:	4571      	cmp	r1, lr
 8014194:	dc38      	bgt.n	8014208 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014196:	eba2 020c 	sub.w	r2, r2, ip
 801419a:	b212      	sxth	r2, r2
 801419c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80141a0:	2a00      	cmp	r2, #0
 80141a2:	dcee      	bgt.n	8014182 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80141a4:	b00f      	add	sp, #60	; 0x3c
 80141a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141aa:	45c8      	cmp	r8, r9
 80141ac:	db2c      	blt.n	8014208 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80141ae:	88f3      	ldrh	r3, [r6, #6]
 80141b0:	4499      	add	r9, r3
 80141b2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80141b6:	4498      	add	r8, r3
 80141b8:	fa0f f989 	sxth.w	r9, r9
 80141bc:	fa0f f888 	sxth.w	r8, r8
 80141c0:	45c1      	cmp	r9, r8
 80141c2:	db21      	blt.n	8014208 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80141c4:	88b3      	ldrh	r3, [r6, #4]
 80141c6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80141ca:	fa1f f28c 	uxth.w	r2, ip
 80141ce:	4413      	add	r3, r2
 80141d0:	b29b      	uxth	r3, r3
 80141d2:	45e6      	cmp	lr, ip
 80141d4:	fa1f f88e 	uxth.w	r8, lr
 80141d8:	fa0f f983 	sxth.w	r9, r3
 80141dc:	db0a      	blt.n	80141f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80141de:	eba3 0308 	sub.w	r3, r3, r8
 80141e2:	1ac9      	subs	r1, r1, r3
 80141e4:	b209      	sxth	r1, r1
 80141e6:	2900      	cmp	r1, #0
 80141e8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80141ec:	ddda      	ble.n	80141a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80141ee:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80141f2:	e7c6      	b.n	8014182 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80141f4:	4441      	add	r1, r8
 80141f6:	b209      	sxth	r1, r1
 80141f8:	4549      	cmp	r1, r9
 80141fa:	dc05      	bgt.n	8014208 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80141fc:	eba2 0208 	sub.w	r2, r2, r8
 8014200:	b212      	sxth	r2, r2
 8014202:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8014206:	e7cb      	b.n	80141a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8014208:	4607      	mov	r7, r0
 801420a:	e7bb      	b.n	8014184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801420c:	2d00      	cmp	r5, #0
 801420e:	d181      	bne.n	8014114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8014210:	2f00      	cmp	r7, #0
 8014212:	f000 81dd 	beq.w	80145d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014216:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801421a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801421e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8014222:	b2b3      	uxth	r3, r6
 8014224:	9305      	str	r3, [sp, #20]
 8014226:	9a05      	ldr	r2, [sp, #20]
 8014228:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801422c:	4413      	add	r3, r2
 801422e:	b2ba      	uxth	r2, r7
 8014230:	4492      	add	sl, r2
 8014232:	b29b      	uxth	r3, r3
 8014234:	fa1f fa8a 	uxth.w	sl, sl
 8014238:	fa0f f883 	sxth.w	r8, r3
 801423c:	fa0f f98a 	sxth.w	r9, sl
 8014240:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8014244:	9b04      	ldr	r3, [sp, #16]
 8014246:	2b00      	cmp	r3, #0
 8014248:	d052      	beq.n	80142f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801424a:	9903      	ldr	r1, [sp, #12]
 801424c:	4620      	mov	r0, r4
 801424e:	f7ff fcb8 	bl	8013bc2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014252:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8014256:	b1c0      	cbz	r0, 801428a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014258:	f9b4 e000 	ldrsh.w	lr, [r4]
 801425c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014260:	4576      	cmp	r6, lr
 8014262:	dc22      	bgt.n	80142aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014264:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014268:	44f4      	add	ip, lr
 801426a:	fa0f fc8c 	sxth.w	ip, ip
 801426e:	45e0      	cmp	r8, ip
 8014270:	db1b      	blt.n	80142aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014272:	428f      	cmp	r7, r1
 8014274:	fa1f fc81 	uxth.w	ip, r1
 8014278:	88e1      	ldrh	r1, [r4, #6]
 801427a:	dc0d      	bgt.n	8014298 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801427c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8014280:	eba1 010c 	sub.w	r1, r1, ip
 8014284:	f8a4 9002 	strh.w	r9, [r4, #2]
 8014288:	80e1      	strh	r1, [r4, #6]
 801428a:	4628      	mov	r0, r5
 801428c:	9904      	ldr	r1, [sp, #16]
 801428e:	3901      	subs	r1, #1
 8014290:	9104      	str	r1, [sp, #16]
 8014292:	3c08      	subs	r4, #8
 8014294:	4605      	mov	r5, r0
 8014296:	e7d3      	b.n	8014240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8014298:	4461      	add	r1, ip
 801429a:	b209      	sxth	r1, r1
 801429c:	4549      	cmp	r1, r9
 801429e:	dcf5      	bgt.n	801428c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80142a0:	eba2 0c0c 	sub.w	ip, r2, ip
 80142a4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80142a8:	e7ef      	b.n	801428a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80142aa:	428f      	cmp	r7, r1
 80142ac:	dcee      	bgt.n	801428c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80142ae:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80142b2:	4461      	add	r1, ip
 80142b4:	b209      	sxth	r1, r1
 80142b6:	4589      	cmp	r9, r1
 80142b8:	dbe8      	blt.n	801428c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80142ba:	4576      	cmp	r6, lr
 80142bc:	fa1f fc8e 	uxth.w	ip, lr
 80142c0:	88a1      	ldrh	r1, [r4, #4]
 80142c2:	dc07      	bgt.n	80142d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80142c4:	eba3 0c0c 	sub.w	ip, r3, ip
 80142c8:	eba1 010c 	sub.w	r1, r1, ip
 80142cc:	f8a4 8000 	strh.w	r8, [r4]
 80142d0:	80a1      	strh	r1, [r4, #4]
 80142d2:	e7da      	b.n	801428a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80142d4:	4461      	add	r1, ip
 80142d6:	b209      	sxth	r1, r1
 80142d8:	4588      	cmp	r8, r1
 80142da:	dbd7      	blt.n	801428c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80142dc:	9905      	ldr	r1, [sp, #20]
 80142de:	eba1 0c0c 	sub.w	ip, r1, ip
 80142e2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80142e6:	e7d0      	b.n	801428a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80142e8:	200137b2 	.word	0x200137b2
 80142ec:	200137b0 	.word	0x200137b0
 80142f0:	2d00      	cmp	r5, #0
 80142f2:	f000 816d 	beq.w	80145d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80142f6:	9b06      	ldr	r3, [sp, #24]
 80142f8:	445b      	add	r3, fp
 80142fa:	461c      	mov	r4, r3
 80142fc:	9b02      	ldr	r3, [sp, #8]
 80142fe:	3301      	adds	r3, #1
 8014300:	f000 8166 	beq.w	80145d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014304:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8014308:	4629      	mov	r1, r5
 801430a:	9803      	ldr	r0, [sp, #12]
 801430c:	f7ff fccc 	bl	8013ca8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014310:	b120      	cbz	r0, 801431c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8014312:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014316:	9801      	ldr	r0, [sp, #4]
 8014318:	f7ff feb0 	bl	801407c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801431c:	9903      	ldr	r1, [sp, #12]
 801431e:	4628      	mov	r0, r5
 8014320:	f7ff fc4f 	bl	8013bc2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014324:	2800      	cmp	r0, #0
 8014326:	f000 809c 	beq.w	8014462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801432a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801432e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8014332:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8014336:	9309      	str	r3, [sp, #36]	; 0x24
 8014338:	fa1f f189 	uxth.w	r1, r9
 801433c:	eb01 0c03 	add.w	ip, r1, r3
 8014340:	fa1f fa8c 	uxth.w	sl, ip
 8014344:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8014348:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801434c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8014350:	b283      	uxth	r3, r0
 8014352:	eb03 050c 	add.w	r5, r3, ip
 8014356:	b2ad      	uxth	r5, r5
 8014358:	9505      	str	r5, [sp, #20]
 801435a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801435e:	9504      	str	r5, [sp, #16]
 8014360:	4548      	cmp	r0, r9
 8014362:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8014366:	f340 8099 	ble.w	801449c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801436a:	1a5b      	subs	r3, r3, r1
 801436c:	b29b      	uxth	r3, r3
 801436e:	4596      	cmp	lr, r2
 8014370:	fa0f f08a 	sxth.w	r0, sl
 8014374:	b21e      	sxth	r6, r3
 8014376:	dd2e      	ble.n	80143d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8014378:	9f02      	ldr	r7, [sp, #8]
 801437a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801437e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8014382:	9f04      	ldr	r7, [sp, #16]
 8014384:	1a3f      	subs	r7, r7, r0
 8014386:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801438a:	fa1f fe8e 	uxth.w	lr, lr
 801438e:	b292      	uxth	r2, r2
 8014390:	ebae 0102 	sub.w	r1, lr, r2
 8014394:	44a6      	add	lr, r4
 8014396:	4402      	add	r2, r0
 8014398:	b289      	uxth	r1, r1
 801439a:	fa0f fe8e 	sxth.w	lr, lr
 801439e:	b212      	sxth	r2, r2
 80143a0:	b20d      	sxth	r5, r1
 80143a2:	ebae 0202 	sub.w	r2, lr, r2
 80143a6:	436f      	muls	r7, r5
 80143a8:	4372      	muls	r2, r6
 80143aa:	4297      	cmp	r7, r2
 80143ac:	db09      	blt.n	80143c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80143ae:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80143b2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80143b6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80143ba:	449c      	add	ip, r3
 80143bc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80143c0:	e686      	b.n	80140d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80143c2:	4421      	add	r1, r4
 80143c4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80143c8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80143cc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80143d0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80143d4:	e67c      	b.n	80140d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80143d6:	9f04      	ldr	r7, [sp, #16]
 80143d8:	42b8      	cmp	r0, r7
 80143da:	da27      	bge.n	801442c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80143dc:	9902      	ldr	r1, [sp, #8]
 80143de:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80143e2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80143e6:	eb05 010e 	add.w	r1, r5, lr
 80143ea:	fa1f f881 	uxth.w	r8, r1
 80143ee:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80143f2:	4411      	add	r1, r2
 80143f4:	eba1 0108 	sub.w	r1, r1, r8
 80143f8:	b289      	uxth	r1, r1
 80143fa:	fa0f f988 	sxth.w	r9, r8
 80143fe:	eba2 020e 	sub.w	r2, r2, lr
 8014402:	fa0f f881 	sxth.w	r8, r1
 8014406:	1a3f      	subs	r7, r7, r0
 8014408:	4372      	muls	r2, r6
 801440a:	fb08 f707 	mul.w	r7, r8, r7
 801440e:	42ba      	cmp	r2, r7
 8014410:	dc06      	bgt.n	8014420 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8014412:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8014416:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801441a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801441e:	e7ca      	b.n	80143b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8014420:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8014424:	4429      	add	r1, r5
 8014426:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801442a:	e651      	b.n	80140d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801442c:	9805      	ldr	r0, [sp, #20]
 801442e:	ebaa 0000 	sub.w	r0, sl, r0
 8014432:	b280      	uxth	r0, r0
 8014434:	2d06      	cmp	r5, #6
 8014436:	fa0f fe80 	sxth.w	lr, r0
 801443a:	d817      	bhi.n	801446c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801443c:	9b04      	ldr	r3, [sp, #16]
 801443e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014442:	1c6b      	adds	r3, r5, #1
 8014444:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8014448:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801444c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8014450:	9b01      	ldr	r3, [sp, #4]
 8014452:	9801      	ldr	r0, [sp, #4]
 8014454:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014458:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801445c:	805a      	strh	r2, [r3, #2]
 801445e:	809e      	strh	r6, [r3, #4]
 8014460:	80d9      	strh	r1, [r3, #6]
 8014462:	9b02      	ldr	r3, [sp, #8]
 8014464:	3b01      	subs	r3, #1
 8014466:	9302      	str	r3, [sp, #8]
 8014468:	3c08      	subs	r4, #8
 801446a:	e747      	b.n	80142fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801446c:	9a02      	ldr	r2, [sp, #8]
 801446e:	45b6      	cmp	lr, r6
 8014470:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014474:	db0d      	blt.n	8014492 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8014476:	449c      	add	ip, r3
 8014478:	fa1f fc8c 	uxth.w	ip, ip
 801447c:	445a      	add	r2, fp
 801447e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8014482:	448c      	add	ip, r1
 8014484:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8014488:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801448c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8014490:	e61e      	b.n	80140d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014492:	445a      	add	r2, fp
 8014494:	4484      	add	ip, r0
 8014496:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801449a:	e78f      	b.n	80143bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801449c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80144a0:	fa1f f18e 	uxth.w	r1, lr
 80144a4:	eb01 0806 	add.w	r8, r1, r6
 80144a8:	b293      	uxth	r3, r2
 80144aa:	fa1f f888 	uxth.w	r8, r8
 80144ae:	9306      	str	r3, [sp, #24]
 80144b0:	fa0f f388 	sxth.w	r3, r8
 80144b4:	9307      	str	r3, [sp, #28]
 80144b6:	9f06      	ldr	r7, [sp, #24]
 80144b8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80144bc:	443b      	add	r3, r7
 80144be:	b29b      	uxth	r3, r3
 80144c0:	4596      	cmp	lr, r2
 80144c2:	9308      	str	r3, [sp, #32]
 80144c4:	da24      	bge.n	8014510 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80144c6:	9905      	ldr	r1, [sp, #20]
 80144c8:	eba3 0308 	sub.w	r3, r3, r8
 80144cc:	ebaa 0401 	sub.w	r4, sl, r1
 80144d0:	b2a4      	uxth	r4, r4
 80144d2:	b29b      	uxth	r3, r3
 80144d4:	b225      	sxth	r5, r4
 80144d6:	b219      	sxth	r1, r3
 80144d8:	eba2 020e 	sub.w	r2, r2, lr
 80144dc:	eba9 0000 	sub.w	r0, r9, r0
 80144e0:	436a      	muls	r2, r5
 80144e2:	4348      	muls	r0, r1
 80144e4:	4282      	cmp	r2, r0
 80144e6:	9a02      	ldr	r2, [sp, #8]
 80144e8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80144ec:	445a      	add	r2, fp
 80144ee:	dc06      	bgt.n	80144fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80144f0:	9b07      	ldr	r3, [sp, #28]
 80144f2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80144f6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80144fa:	44a4      	add	ip, r4
 80144fc:	e75e      	b.n	80143bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80144fe:	9904      	ldr	r1, [sp, #16]
 8014500:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8014504:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8014508:	4433      	add	r3, r6
 801450a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801450e:	e5df      	b.n	80140d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014510:	9f06      	ldr	r7, [sp, #24]
 8014512:	9b04      	ldr	r3, [sp, #16]
 8014514:	1bc9      	subs	r1, r1, r7
 8014516:	fa0f f78a 	sxth.w	r7, sl
 801451a:	b289      	uxth	r1, r1
 801451c:	429f      	cmp	r7, r3
 801451e:	fa0f fe81 	sxth.w	lr, r1
 8014522:	dd23      	ble.n	801456c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8014524:	9a05      	ldr	r2, [sp, #20]
 8014526:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801452a:	9d07      	ldr	r5, [sp, #28]
 801452c:	ebaa 0202 	sub.w	r2, sl, r2
 8014530:	b292      	uxth	r2, r2
 8014532:	eba5 0a03 	sub.w	sl, r5, r3
 8014536:	b214      	sxth	r4, r2
 8014538:	eba9 0000 	sub.w	r0, r9, r0
 801453c:	9b02      	ldr	r3, [sp, #8]
 801453e:	fb0e f000 	mul.w	r0, lr, r0
 8014542:	fb04 fa0a 	mul.w	sl, r4, sl
 8014546:	00db      	lsls	r3, r3, #3
 8014548:	4550      	cmp	r0, sl
 801454a:	445b      	add	r3, fp
 801454c:	db03      	blt.n	8014556 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801454e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8014552:	4494      	add	ip, r2
 8014554:	e732      	b.n	80143bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014556:	9a04      	ldr	r2, [sp, #16]
 8014558:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801455c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8014560:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8014564:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8014568:	4431      	add	r1, r6
 801456a:	e75c      	b.n	8014426 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801456c:	9b08      	ldr	r3, [sp, #32]
 801456e:	eba3 0308 	sub.w	r3, r3, r8
 8014572:	b29b      	uxth	r3, r3
 8014574:	2d06      	cmp	r5, #6
 8014576:	b218      	sxth	r0, r3
 8014578:	d813      	bhi.n	80145a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801457a:	9b07      	ldr	r3, [sp, #28]
 801457c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8014580:	1c6b      	adds	r3, r5, #1
 8014582:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8014586:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801458a:	9b01      	ldr	r3, [sp, #4]
 801458c:	9901      	ldr	r1, [sp, #4]
 801458e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014592:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8014596:	805a      	strh	r2, [r3, #2]
 8014598:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801459a:	809a      	strh	r2, [r3, #4]
 801459c:	f8a3 e006 	strh.w	lr, [r3, #6]
 80145a0:	e75f      	b.n	8014462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80145a2:	9c02      	ldr	r4, [sp, #8]
 80145a4:	4570      	cmp	r0, lr
 80145a6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80145aa:	db0d      	blt.n	80145c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80145ac:	4431      	add	r1, r6
 80145ae:	9b06      	ldr	r3, [sp, #24]
 80145b0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80145b4:	b289      	uxth	r1, r1
 80145b6:	445c      	add	r4, fp
 80145b8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80145bc:	4419      	add	r1, r3
 80145be:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80145c2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80145c6:	e583      	b.n	80140d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80145c8:	445c      	add	r4, fp
 80145ca:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80145ce:	e79b      	b.n	8014508 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80145d0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80145d4:	1e65      	subs	r5, r4, #1
 80145d6:	b2ad      	uxth	r5, r5
 80145d8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80145dc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80145e0:	42b5      	cmp	r5, r6
 80145e2:	d044      	beq.n	801466e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80145e4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80145e8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80145ec:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80145f0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80145f4:	4282      	cmp	r2, r0
 80145f6:	d11f      	bne.n	8014638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80145f8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80145fc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8014600:	459c      	cmp	ip, r3
 8014602:	d119      	bne.n	8014638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014604:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8014608:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801460c:	19d8      	adds	r0, r3, r7
 801460e:	b200      	sxth	r0, r0
 8014610:	4288      	cmp	r0, r1
 8014612:	d109      	bne.n	8014628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8014614:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8014618:	4413      	add	r3, r2
 801461a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801461e:	4629      	mov	r1, r5
 8014620:	9801      	ldr	r0, [sp, #4]
 8014622:	f7ff fd2b 	bl	801407c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014626:	e003      	b.n	8014630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014628:	4411      	add	r1, r2
 801462a:	b209      	sxth	r1, r1
 801462c:	42b9      	cmp	r1, r7
 801462e:	d0f3      	beq.n	8014618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8014630:	3d01      	subs	r5, #1
 8014632:	b2ad      	uxth	r5, r5
 8014634:	3c08      	subs	r4, #8
 8014636:	e7d3      	b.n	80145e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8014638:	42b9      	cmp	r1, r7
 801463a:	d1f9      	bne.n	8014630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801463c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8014640:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8014644:	4299      	cmp	r1, r3
 8014646:	d1f3      	bne.n	8014630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014648:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801464c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8014650:	181f      	adds	r7, r3, r0
 8014652:	b23f      	sxth	r7, r7
 8014654:	42ba      	cmp	r2, r7
 8014656:	d105      	bne.n	8014664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8014658:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801465c:	440b      	add	r3, r1
 801465e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014662:	e7dc      	b.n	801461e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8014664:	440a      	add	r2, r1
 8014666:	b212      	sxth	r2, r2
 8014668:	4290      	cmp	r0, r2
 801466a:	d1e1      	bne.n	8014630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801466c:	e7f6      	b.n	801465c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801466e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8014672:	2e07      	cmp	r6, #7
 8014674:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8014678:	d812      	bhi.n	80146a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801467a:	1c75      	adds	r5, r6, #1
 801467c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8014680:	9d01      	ldr	r5, [sp, #4]
 8014682:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8014686:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801468a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801468e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8014692:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8014696:	442c      	add	r4, r5
 8014698:	8061      	strh	r1, [r4, #2]
 801469a:	80a2      	strh	r2, [r4, #4]
 801469c:	80e3      	strh	r3, [r4, #6]
 801469e:	e581      	b.n	80141a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80146a0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80146a4:	3e01      	subs	r6, #1
 80146a6:	445c      	add	r4, fp
 80146a8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80146ac:	f04f 37ff 	mov.w	r7, #4294967295
 80146b0:	2500      	movs	r5, #0
 80146b2:	9305      	str	r3, [sp, #20]
 80146b4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80146b8:	9302      	str	r3, [sp, #8]
 80146ba:	1e72      	subs	r2, r6, #1
 80146bc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80146c0:	9304      	str	r3, [sp, #16]
 80146c2:	4691      	mov	r9, r2
 80146c4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80146c8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80146cc:	bf14      	ite	ne
 80146ce:	9905      	ldrne	r1, [sp, #20]
 80146d0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80146d4:	6818      	ldr	r0, [r3, #0]
 80146d6:	9207      	str	r2, [sp, #28]
 80146d8:	bf18      	it	ne
 80146da:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80146de:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80146e2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80146e6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80146ea:	9306      	str	r3, [sp, #24]
 80146ec:	fb18 f801 	smulbb	r8, r8, r1
 80146f0:	6859      	ldr	r1, [r3, #4]
 80146f2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80146f6:	4671      	mov	r1, lr
 80146f8:	a80c      	add	r0, sp, #48	; 0x30
 80146fa:	f7ff fafb 	bl	8013cf4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80146fe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014702:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014706:	9b04      	ldr	r3, [sp, #16]
 8014708:	9a02      	ldr	r2, [sp, #8]
 801470a:	fb10 f001 	smulbb	r0, r0, r1
 801470e:	fb02 8803 	mla	r8, r2, r3, r8
 8014712:	eba0 0108 	sub.w	r1, r0, r8
 8014716:	f04f 0c08 	mov.w	ip, #8
 801471a:	fb90 f0fc 	sdiv	r0, r0, ip
 801471e:	4288      	cmp	r0, r1
 8014720:	dc20      	bgt.n	8014764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014722:	4551      	cmp	r1, sl
 8014724:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8014728:	da03      	bge.n	8014732 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801472a:	b1d9      	cbz	r1, 8014764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801472c:	468a      	mov	sl, r1
 801472e:	464f      	mov	r7, r9
 8014730:	4635      	mov	r5, r6
 8014732:	f109 39ff 	add.w	r9, r9, #4294967295
 8014736:	f119 0f02 	cmn.w	r9, #2
 801473a:	d1c5      	bne.n	80146c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801473c:	4616      	mov	r6, r2
 801473e:	3201      	adds	r2, #1
 8014740:	f1a4 0408 	sub.w	r4, r4, #8
 8014744:	d1b6      	bne.n	80146b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8014746:	9b01      	ldr	r3, [sp, #4]
 8014748:	b2ac      	uxth	r4, r5
 801474a:	00ed      	lsls	r5, r5, #3
 801474c:	1958      	adds	r0, r3, r5
 801474e:	1c7b      	adds	r3, r7, #1
 8014750:	d10b      	bne.n	801476a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8014752:	4601      	mov	r1, r0
 8014754:	9803      	ldr	r0, [sp, #12]
 8014756:	f7ff facd 	bl	8013cf4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801475a:	4621      	mov	r1, r4
 801475c:	9801      	ldr	r0, [sp, #4]
 801475e:	f7ff fc8d 	bl	801407c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014762:	e4b5      	b.n	80140d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014764:	464f      	mov	r7, r9
 8014766:	4635      	mov	r5, r6
 8014768:	e7ed      	b.n	8014746 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801476a:	9b01      	ldr	r3, [sp, #4]
 801476c:	00ff      	lsls	r7, r7, #3
 801476e:	19d9      	adds	r1, r3, r7
 8014770:	f7ff fac0 	bl	8013cf4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014774:	9b03      	ldr	r3, [sp, #12]
 8014776:	cb03      	ldmia	r3!, {r0, r1}
 8014778:	445f      	add	r7, fp
 801477a:	445d      	add	r5, fp
 801477c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8014780:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8014784:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8014788:	9b03      	ldr	r3, [sp, #12]
 801478a:	6869      	ldr	r1, [r5, #4]
 801478c:	c303      	stmia	r3!, {r0, r1}
 801478e:	e7e4      	b.n	801475a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08014790 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8014790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014794:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8014798:	b09b      	sub	sp, #108	; 0x6c
 801479a:	4604      	mov	r4, r0
 801479c:	4630      	mov	r0, r6
 801479e:	f7fa fa20 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80147a2:	4605      	mov	r5, r0
 80147a4:	b948      	cbnz	r0, 80147ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80147a6:	6823      	ldr	r3, [r4, #0]
 80147a8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80147ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80147ae:	4620      	mov	r0, r4
 80147b0:	4798      	blx	r3
 80147b2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80147b6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80147ba:	4bc6      	ldr	r3, [pc, #792]	; (8014ad4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80147bc:	681b      	ldr	r3, [r3, #0]
 80147be:	2b00      	cmp	r3, #0
 80147c0:	d03f      	beq.n	8014842 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80147c2:	4dc5      	ldr	r5, [pc, #788]	; (8014ad8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80147c4:	4628      	mov	r0, r5
 80147c6:	f7fa fa0c 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80147ca:	4606      	mov	r6, r0
 80147cc:	2800      	cmp	r0, #0
 80147ce:	d138      	bne.n	8014842 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80147d0:	4628      	mov	r0, r5
 80147d2:	f7ff f907 	bl	80139e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80147d6:	6823      	ldr	r3, [r4, #0]
 80147d8:	6829      	ldr	r1, [r5, #0]
 80147da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80147dc:	686a      	ldr	r2, [r5, #4]
 80147de:	4620      	mov	r0, r4
 80147e0:	4798      	blx	r3
 80147e2:	802e      	strh	r6, [r5, #0]
 80147e4:	806e      	strh	r6, [r5, #2]
 80147e6:	80ae      	strh	r6, [r5, #4]
 80147e8:	80ee      	strh	r6, [r5, #6]
 80147ea:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80147ee:	4dbb      	ldr	r5, [pc, #748]	; (8014adc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80147f0:	4640      	mov	r0, r8
 80147f2:	f7ff fbeb 	bl	8013fcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80147f6:	882e      	ldrh	r6, [r5, #0]
 80147f8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80147fc:	4633      	mov	r3, r6
 80147fe:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014802:	42bb      	cmp	r3, r7
 8014804:	d224      	bcs.n	8014850 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014806:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801480a:	2907      	cmp	r1, #7
 801480c:	d816      	bhi.n	801483c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801480e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8014812:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8014816:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801481a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801481e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8014822:	1c4a      	adds	r2, r1, #1
 8014824:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8014828:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801482c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8014830:	f8a2 a002 	strh.w	sl, [r2, #2]
 8014834:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014838:	f8a2 c006 	strh.w	ip, [r2, #6]
 801483c:	3301      	adds	r3, #1
 801483e:	b29b      	uxth	r3, r3
 8014840:	e7df      	b.n	8014802 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8014842:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8014846:	2b00      	cmp	r3, #0
 8014848:	d1cf      	bne.n	80147ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801484a:	b01b      	add	sp, #108	; 0x6c
 801484c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014850:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8014854:	42b3      	cmp	r3, r6
 8014856:	d90c      	bls.n	8014872 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8014858:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801485c:	6822      	ldr	r2, [r4, #0]
 801485e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8014862:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8014864:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8014868:	4620      	mov	r0, r4
 801486a:	3601      	adds	r6, #1
 801486c:	47b8      	blx	r7
 801486e:	b2b6      	uxth	r6, r6
 8014870:	e7ee      	b.n	8014850 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014872:	4a9b      	ldr	r2, [pc, #620]	; (8014ae0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014874:	6813      	ldr	r3, [r2, #0]
 8014876:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801487a:	2b01      	cmp	r3, #1
 801487c:	4691      	mov	r9, r2
 801487e:	f040 80e2 	bne.w	8014a46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8014882:	8829      	ldrh	r1, [r5, #0]
 8014884:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8014888:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801488c:	33ae      	adds	r3, #174	; 0xae
 801488e:	2600      	movs	r6, #0
 8014890:	428f      	cmp	r7, r1
 8014892:	f103 0308 	add.w	r3, r3, #8
 8014896:	dd0a      	ble.n	80148ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8014898:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801489c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80148a0:	4402      	add	r2, r0
 80148a2:	b212      	sxth	r2, r2
 80148a4:	4296      	cmp	r6, r2
 80148a6:	bfb8      	it	lt
 80148a8:	4616      	movlt	r6, r2
 80148aa:	3101      	adds	r1, #1
 80148ac:	e7f0      	b.n	8014890 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80148ae:	4b8d      	ldr	r3, [pc, #564]	; (8014ae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80148b0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8014ae0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80148b4:	881b      	ldrh	r3, [r3, #0]
 80148b6:	2b0f      	cmp	r3, #15
 80148b8:	bf88      	it	hi
 80148ba:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80148be:	f04f 0300 	mov.w	r3, #0
 80148c2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80148c6:	bf98      	it	ls
 80148c8:	f04f 0b01 	movls.w	fp, #1
 80148cc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80148d0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80148d4:	4b82      	ldr	r3, [pc, #520]	; (8014ae0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80148d6:	4438      	add	r0, r7
 80148d8:	b207      	sxth	r7, r0
 80148da:	6818      	ldr	r0, [r3, #0]
 80148dc:	42b7      	cmp	r7, r6
 80148de:	6803      	ldr	r3, [r0, #0]
 80148e0:	f280 8083 	bge.w	80149ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80148e4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80148e8:	4798      	blx	r3
 80148ea:	eb07 030b 	add.w	r3, r7, fp
 80148ee:	4298      	cmp	r0, r3
 80148f0:	da07      	bge.n	8014902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80148f2:	42b0      	cmp	r0, r6
 80148f4:	da05      	bge.n	8014902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80148f6:	4287      	cmp	r7, r0
 80148f8:	dd6c      	ble.n	80149d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80148fa:	2f00      	cmp	r7, #0
 80148fc:	dd6a      	ble.n	80149d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80148fe:	4630      	mov	r0, r6
 8014900:	e004      	b.n	801490c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8014902:	4287      	cmp	r7, r0
 8014904:	dcfb      	bgt.n	80148fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8014906:	42b0      	cmp	r0, r6
 8014908:	bfa8      	it	ge
 801490a:	4630      	movge	r0, r6
 801490c:	4b76      	ldr	r3, [pc, #472]	; (8014ae8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801490e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8014912:	1bc0      	subs	r0, r0, r7
 8014914:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014918:	882f      	ldrh	r7, [r5, #0]
 801491a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801491e:	2200      	movs	r2, #0
 8014920:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014924:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014928:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801492c:	42bb      	cmp	r3, r7
 801492e:	d9cd      	bls.n	80148cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014930:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8014934:	ab07      	add	r3, sp, #28
 8014936:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801493a:	6851      	ldr	r1, [r2, #4]
 801493c:	c303      	stmia	r3!, {r0, r1}
 801493e:	a905      	add	r1, sp, #20
 8014940:	a807      	add	r0, sp, #28
 8014942:	f7ff f93e 	bl	8013bc2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014946:	2800      	cmp	r0, #0
 8014948:	d04c      	beq.n	80149e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801494a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801494e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8014952:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8014956:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801495a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801495e:	9302      	str	r3, [sp, #8]
 8014960:	4686      	mov	lr, r0
 8014962:	4290      	cmp	r0, r2
 8014964:	4450      	add	r0, sl
 8014966:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801496a:	bfb8      	it	lt
 801496c:	4696      	movlt	lr, r2
 801496e:	4452      	add	r2, sl
 8014970:	4299      	cmp	r1, r3
 8014972:	b280      	uxth	r0, r0
 8014974:	b292      	uxth	r2, r2
 8014976:	468c      	mov	ip, r1
 8014978:	fa0f fa82 	sxth.w	sl, r2
 801497c:	bfb8      	it	lt
 801497e:	469c      	movlt	ip, r3
 8014980:	b203      	sxth	r3, r0
 8014982:	4553      	cmp	r3, sl
 8014984:	bfb8      	it	lt
 8014986:	4602      	movlt	r2, r0
 8014988:	eba2 020e 	sub.w	r2, r2, lr
 801498c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014990:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8014994:	9b02      	ldr	r3, [sp, #8]
 8014996:	f8ad e01c 	strh.w	lr, [sp, #28]
 801499a:	4411      	add	r1, r2
 801499c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80149a0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80149a4:	4413      	add	r3, r2
 80149a6:	b289      	uxth	r1, r1
 80149a8:	b29b      	uxth	r3, r3
 80149aa:	b208      	sxth	r0, r1
 80149ac:	b21a      	sxth	r2, r3
 80149ae:	4290      	cmp	r0, r2
 80149b0:	bfb8      	it	lt
 80149b2:	460b      	movlt	r3, r1
 80149b4:	eba3 030c 	sub.w	r3, r3, ip
 80149b8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80149bc:	a807      	add	r0, sp, #28
 80149be:	f7fa f910 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80149c2:	b920      	cbnz	r0, 80149ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80149c4:	6823      	ldr	r3, [r4, #0]
 80149c6:	a907      	add	r1, sp, #28
 80149c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80149ca:	4620      	mov	r0, r4
 80149cc:	4798      	blx	r3
 80149ce:	3701      	adds	r7, #1
 80149d0:	b2bf      	uxth	r7, r7
 80149d2:	e7a9      	b.n	8014928 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80149d4:	f8d9 0000 	ldr.w	r0, [r9]
 80149d8:	6803      	ldr	r3, [r0, #0]
 80149da:	2101      	movs	r1, #1
 80149dc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80149e0:	4798      	blx	r3
 80149e2:	e773      	b.n	80148cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80149e4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80149e8:	e7e8      	b.n	80149bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80149ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80149ec:	4798      	blx	r3
 80149ee:	4b3f      	ldr	r3, [pc, #252]	; (8014aec <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80149f0:	781b      	ldrb	r3, [r3, #0]
 80149f2:	2b00      	cmp	r3, #0
 80149f4:	f43f af29 	beq.w	801484a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80149f8:	2300      	movs	r3, #0
 80149fa:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80149fe:	882b      	ldrh	r3, [r5, #0]
 8014a00:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8014a04:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8014a08:	42ab      	cmp	r3, r5
 8014a0a:	f4bf af1e 	bcs.w	801484a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014a0e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8014a12:	2907      	cmp	r1, #7
 8014a14:	d814      	bhi.n	8014a40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8014a16:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8014a1a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8014a1e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8014a22:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8014a26:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8014a2a:	1c4a      	adds	r2, r1, #1
 8014a2c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8014a30:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8014a34:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8014a38:	f8a2 c002 	strh.w	ip, [r2, #2]
 8014a3c:	8097      	strh	r7, [r2, #4]
 8014a3e:	80d6      	strh	r6, [r2, #6]
 8014a40:	3301      	adds	r3, #1
 8014a42:	b29b      	uxth	r3, r3
 8014a44:	e7e0      	b.n	8014a08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8014a46:	2b02      	cmp	r3, #2
 8014a48:	f040 8133 	bne.w	8014cb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8014a4c:	4b28      	ldr	r3, [pc, #160]	; (8014af0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8014a4e:	781b      	ldrb	r3, [r3, #0]
 8014a50:	2b01      	cmp	r3, #1
 8014a52:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8014a56:	f000 8098 	beq.w	8014b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014a5a:	882a      	ldrh	r2, [r5, #0]
 8014a5c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8014a60:	3201      	adds	r2, #1
 8014a62:	b292      	uxth	r2, r2
 8014a64:	2900      	cmp	r1, #0
 8014a66:	d0c2      	beq.n	80149ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014a68:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8014a6c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8014a70:	441e      	add	r6, r3
 8014a72:	b236      	sxth	r6, r6
 8014a74:	4694      	mov	ip, r2
 8014a76:	f04f 0900 	mov.w	r9, #0
 8014a7a:	fa1f f38c 	uxth.w	r3, ip
 8014a7e:	4299      	cmp	r1, r3
 8014a80:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8014a84:	f240 80bf 	bls.w	8014c06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8014a88:	4427      	add	r7, r4
 8014a8a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8014a8e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8014a92:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8014a96:	4283      	cmp	r3, r0
 8014a98:	f340 80a1 	ble.w	8014bde <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8014a9c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8014aa0:	4406      	add	r6, r0
 8014aa2:	b236      	sxth	r6, r6
 8014aa4:	429e      	cmp	r6, r3
 8014aa6:	bfa8      	it	ge
 8014aa8:	461e      	movge	r6, r3
 8014aaa:	46e1      	mov	r9, ip
 8014aac:	f10c 0c01 	add.w	ip, ip, #1
 8014ab0:	e7e3      	b.n	8014a7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8014ab2:	d10a      	bne.n	8014aca <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8014ab4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8014ab8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8014abc:	4562      	cmp	r2, ip
 8014abe:	bfb8      	it	lt
 8014ac0:	4662      	movlt	r2, ip
 8014ac2:	4288      	cmp	r0, r1
 8014ac4:	bfb8      	it	lt
 8014ac6:	461f      	movlt	r7, r3
 8014ac8:	e087      	b.n	8014bda <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014aca:	428a      	cmp	r2, r1
 8014acc:	bfb8      	it	lt
 8014ace:	460a      	movlt	r2, r1
 8014ad0:	e083      	b.n	8014bda <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014ad2:	bf00      	nop
 8014ad4:	200137fc 	.word	0x200137fc
 8014ad8:	20013808 	.word	0x20013808
 8014adc:	20000088 	.word	0x20000088
 8014ae0:	200137bc 	.word	0x200137bc
 8014ae4:	200137b2 	.word	0x200137b2
 8014ae8:	200137b0 	.word	0x200137b0
 8014aec:	200137ba 	.word	0x200137ba
 8014af0:	200137b4 	.word	0x200137b4
 8014af4:	19a1      	adds	r1, r4, r6
 8014af6:	ab07      	add	r3, sp, #28
 8014af8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8014afc:	6849      	ldr	r1, [r1, #4]
 8014afe:	c303      	stmia	r3!, {r0, r1}
 8014b00:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014b04:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014b08:	2b13      	cmp	r3, #19
 8014b0a:	bfd8      	it	le
 8014b0c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8014b10:	f8ad 201c 	strh.w	r2, [sp, #28]
 8014b14:	440b      	add	r3, r1
 8014b16:	1a9b      	subs	r3, r3, r2
 8014b18:	a807      	add	r0, sp, #28
 8014b1a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014b1e:	f7fe ff7b 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014b22:	a807      	add	r0, sp, #28
 8014b24:	f7fa f85d 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b28:	bb78      	cbnz	r0, 8014b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014b2a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8014b2e:	f8d9 0000 	ldr.w	r0, [r9]
 8014b32:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8014b36:	f8d0 e000 	ldr.w	lr, [r0]
 8014b3a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8014b3e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014b42:	f1bc 0f14 	cmp.w	ip, #20
 8014b46:	bfa8      	it	ge
 8014b48:	f04f 0c14 	movge.w	ip, #20
 8014b4c:	fa1f fc8c 	uxth.w	ip, ip
 8014b50:	f8cd c000 	str.w	ip, [sp]
 8014b54:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8014b58:	47d8      	blx	fp
 8014b5a:	4683      	mov	fp, r0
 8014b5c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8014b60:	a807      	add	r0, sp, #28
 8014b62:	f7fe ff3f 	bl	80139e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014b66:	6823      	ldr	r3, [r4, #0]
 8014b68:	4426      	add	r6, r4
 8014b6a:	4620      	mov	r0, r4
 8014b6c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014b6e:	a907      	add	r1, sp, #28
 8014b70:	4798      	blx	r3
 8014b72:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8014b76:	eba0 000b 	sub.w	r0, r0, fp
 8014b7a:	b200      	sxth	r0, r0
 8014b7c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8014b80:	b918      	cbnz	r0, 8014b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014b82:	b2b9      	uxth	r1, r7
 8014b84:	4650      	mov	r0, sl
 8014b86:	f7ff fa79 	bl	801407c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014b8a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8014b8e:	f1bb 0f00 	cmp.w	fp, #0
 8014b92:	f43f af2c 	beq.w	80149ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014b96:	882b      	ldrh	r3, [r5, #0]
 8014b98:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8014b9c:	3301      	adds	r3, #1
 8014b9e:	b29b      	uxth	r3, r3
 8014ba0:	2700      	movs	r7, #0
 8014ba2:	b299      	uxth	r1, r3
 8014ba4:	458b      	cmp	fp, r1
 8014ba6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8014baa:	d9a3      	bls.n	8014af4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8014bac:	4426      	add	r6, r4
 8014bae:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8014bb2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8014bb6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8014bba:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8014bbe:	4408      	add	r0, r1
 8014bc0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8014bc4:	4461      	add	r1, ip
 8014bc6:	b200      	sxth	r0, r0
 8014bc8:	b209      	sxth	r1, r1
 8014bca:	4288      	cmp	r0, r1
 8014bcc:	f6bf af71 	bge.w	8014ab2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8014bd0:	4584      	cmp	ip, r0
 8014bd2:	4662      	mov	r2, ip
 8014bd4:	461f      	mov	r7, r3
 8014bd6:	bfb8      	it	lt
 8014bd8:	4602      	movlt	r2, r0
 8014bda:	3301      	adds	r3, #1
 8014bdc:	e7e1      	b.n	8014ba2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8014bde:	d10e      	bne.n	8014bfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8014be0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8014be4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8014be8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8014bec:	4473      	add	r3, lr
 8014bee:	b21b      	sxth	r3, r3
 8014bf0:	429e      	cmp	r6, r3
 8014bf2:	bfa8      	it	ge
 8014bf4:	461e      	movge	r6, r3
 8014bf6:	4287      	cmp	r7, r0
 8014bf8:	bfb8      	it	lt
 8014bfa:	46e1      	movlt	r9, ip
 8014bfc:	e756      	b.n	8014aac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014bfe:	4286      	cmp	r6, r0
 8014c00:	bfa8      	it	ge
 8014c02:	4606      	movge	r6, r0
 8014c04:	e752      	b.n	8014aac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014c06:	eb0a 0007 	add.w	r0, sl, r7
 8014c0a:	4427      	add	r7, r4
 8014c0c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8014c10:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8014c14:	f1bb 0f13 	cmp.w	fp, #19
 8014c18:	bfde      	ittt	le
 8014c1a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8014c1e:	445e      	addle	r6, fp
 8014c20:	b236      	sxthle	r6, r6
 8014c22:	f7f9 ffde 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014c26:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8014c2a:	2800      	cmp	r0, #0
 8014c2c:	f47f af1a 	bne.w	8014a64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8014c30:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8014c34:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8014c38:	482a      	ldr	r0, [pc, #168]	; (8014ce4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8014c3a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8014c3e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8014c42:	6800      	ldr	r0, [r0, #0]
 8014c44:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014c48:	1ab6      	subs	r6, r6, r2
 8014c4a:	2e14      	cmp	r6, #20
 8014c4c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8014c50:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014c54:	bfa8      	it	ge
 8014c56:	2614      	movge	r6, #20
 8014c58:	f8d0 c000 	ldr.w	ip, [r0]
 8014c5c:	b2b6      	uxth	r6, r6
 8014c5e:	fa1f fb8b 	uxth.w	fp, fp
 8014c62:	455e      	cmp	r6, fp
 8014c64:	bf94      	ite	ls
 8014c66:	9600      	strls	r6, [sp, #0]
 8014c68:	f8cd b000 	strhi.w	fp, [sp]
 8014c6c:	b292      	uxth	r2, r2
 8014c6e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8014c72:	b29b      	uxth	r3, r3
 8014c74:	b289      	uxth	r1, r1
 8014c76:	47b0      	blx	r6
 8014c78:	6823      	ldr	r3, [r4, #0]
 8014c7a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8014c7e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014c80:	a907      	add	r1, sp, #28
 8014c82:	4620      	mov	r0, r4
 8014c84:	4798      	blx	r3
 8014c86:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8014c8a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8014c8e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8014c92:	1a5b      	subs	r3, r3, r1
 8014c94:	440a      	add	r2, r1
 8014c96:	b21b      	sxth	r3, r3
 8014c98:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8014c9c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8014ca0:	2b00      	cmp	r3, #0
 8014ca2:	f47f aeda 	bne.w	8014a5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8014ca6:	fa1f f189 	uxth.w	r1, r9
 8014caa:	4650      	mov	r0, sl
 8014cac:	f7ff f9e6 	bl	801407c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014cb0:	e6d3      	b.n	8014a5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8014cb2:	882e      	ldrh	r6, [r5, #0]
 8014cb4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8014cb8:	42b3      	cmp	r3, r6
 8014cba:	f67f ae98 	bls.w	80149ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014cbe:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8014cc2:	ab07      	add	r3, sp, #28
 8014cc4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014cc8:	6851      	ldr	r1, [r2, #4]
 8014cca:	c303      	stmia	r3!, {r0, r1}
 8014ccc:	a807      	add	r0, sp, #28
 8014cce:	f7f9 ff88 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014cd2:	b920      	cbnz	r0, 8014cde <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8014cd4:	6823      	ldr	r3, [r4, #0]
 8014cd6:	a907      	add	r1, sp, #28
 8014cd8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014cda:	4620      	mov	r0, r4
 8014cdc:	4798      	blx	r3
 8014cde:	3601      	adds	r6, #1
 8014ce0:	b2b6      	uxth	r6, r6
 8014ce2:	e7e7      	b.n	8014cb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8014ce4:	200137bc 	.word	0x200137bc

08014ce8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8014ce8:	4b03      	ldr	r3, [pc, #12]	; (8014cf8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8014cea:	2200      	movs	r2, #0
 8014cec:	801a      	strh	r2, [r3, #0]
 8014cee:	805a      	strh	r2, [r3, #2]
 8014cf0:	809a      	strh	r2, [r3, #4]
 8014cf2:	80da      	strh	r2, [r3, #6]
 8014cf4:	4770      	bx	lr
 8014cf6:	bf00      	nop
 8014cf8:	20013808 	.word	0x20013808

08014cfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8014cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d00:	4606      	mov	r6, r0
 8014d02:	b09d      	sub	sp, #116	; 0x74
 8014d04:	a803      	add	r0, sp, #12
 8014d06:	4614      	mov	r4, r2
 8014d08:	468a      	mov	sl, r1
 8014d0a:	461d      	mov	r5, r3
 8014d0c:	f000 feca 	bl	8015aa4 <_ZN8touchgfx12TextProviderC1Ev>
 8014d10:	6833      	ldr	r3, [r6, #0]
 8014d12:	4630      	mov	r0, r6
 8014d14:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014d16:	4798      	blx	r3
 8014d18:	6833      	ldr	r3, [r6, #0]
 8014d1a:	4607      	mov	r7, r0
 8014d1c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014d1e:	4630      	mov	r0, r6
 8014d20:	4798      	blx	r3
 8014d22:	462a      	mov	r2, r5
 8014d24:	9000      	str	r0, [sp, #0]
 8014d26:	4621      	mov	r1, r4
 8014d28:	463b      	mov	r3, r7
 8014d2a:	a803      	add	r0, sp, #12
 8014d2c:	f000 ff15 	bl	8015b5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014d30:	2500      	movs	r5, #0
 8014d32:	462c      	mov	r4, r5
 8014d34:	46a9      	mov	r9, r5
 8014d36:	46a8      	mov	r8, r5
 8014d38:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8014d3c:	2300      	movs	r3, #0
 8014d3e:	9302      	str	r3, [sp, #8]
 8014d40:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014d44:	429c      	cmp	r4, r3
 8014d46:	d002      	beq.n	8014d4e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8014d48:	455c      	cmp	r4, fp
 8014d4a:	bf18      	it	ne
 8014d4c:	4625      	movne	r5, r4
 8014d4e:	ab02      	add	r3, sp, #8
 8014d50:	4632      	mov	r2, r6
 8014d52:	4651      	mov	r1, sl
 8014d54:	a803      	add	r0, sp, #12
 8014d56:	f001 fa03 	bl	8016160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014d5a:	4604      	mov	r4, r0
 8014d5c:	b108      	cbz	r0, 8014d62 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8014d5e:	280a      	cmp	r0, #10
 8014d60:	d10a      	bne.n	8014d78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8014d62:	45c1      	cmp	r9, r8
 8014d64:	bf38      	it	cc
 8014d66:	46c1      	movcc	r9, r8
 8014d68:	f04f 0800 	mov.w	r8, #0
 8014d6c:	2c00      	cmp	r4, #0
 8014d6e:	d1e5      	bne.n	8014d3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8014d70:	4648      	mov	r0, r9
 8014d72:	b01d      	add	sp, #116	; 0x74
 8014d74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d78:	9a02      	ldr	r2, [sp, #8]
 8014d7a:	2a00      	cmp	r2, #0
 8014d7c:	d0de      	beq.n	8014d3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8014d7e:	7b57      	ldrb	r7, [r2, #13]
 8014d80:	6833      	ldr	r3, [r6, #0]
 8014d82:	8894      	ldrh	r4, [r2, #4]
 8014d84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014d86:	007f      	lsls	r7, r7, #1
 8014d88:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8014d8c:	7a97      	ldrb	r7, [r2, #10]
 8014d8e:	4629      	mov	r1, r5
 8014d90:	4307      	orrs	r7, r0
 8014d92:	4630      	mov	r0, r6
 8014d94:	4798      	blx	r3
 8014d96:	4438      	add	r0, r7
 8014d98:	4480      	add	r8, r0
 8014d9a:	fa1f f888 	uxth.w	r8, r8
 8014d9e:	e7e5      	b.n	8014d6c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08014da0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8014da0:	b508      	push	{r3, lr}
 8014da2:	6803      	ldr	r3, [r0, #0]
 8014da4:	68db      	ldr	r3, [r3, #12]
 8014da6:	4798      	blx	r3
 8014da8:	b128      	cbz	r0, 8014db6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8014daa:	7b43      	ldrb	r3, [r0, #13]
 8014dac:	7a80      	ldrb	r0, [r0, #10]
 8014dae:	005b      	lsls	r3, r3, #1
 8014db0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014db4:	4318      	orrs	r0, r3
 8014db6:	bd08      	pop	{r3, pc}

08014db8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8014db8:	b40e      	push	{r1, r2, r3}
 8014dba:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014dbc:	b09e      	sub	sp, #120	; 0x78
 8014dbe:	ab23      	add	r3, sp, #140	; 0x8c
 8014dc0:	4605      	mov	r5, r0
 8014dc2:	f853 4b04 	ldr.w	r4, [r3], #4
 8014dc6:	9303      	str	r3, [sp, #12]
 8014dc8:	a805      	add	r0, sp, #20
 8014dca:	f000 fe6b 	bl	8015aa4 <_ZN8touchgfx12TextProviderC1Ev>
 8014dce:	682b      	ldr	r3, [r5, #0]
 8014dd0:	4628      	mov	r0, r5
 8014dd2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014dd4:	4798      	blx	r3
 8014dd6:	682b      	ldr	r3, [r5, #0]
 8014dd8:	4606      	mov	r6, r0
 8014dda:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014ddc:	4628      	mov	r0, r5
 8014dde:	4798      	blx	r3
 8014de0:	4633      	mov	r3, r6
 8014de2:	ae1e      	add	r6, sp, #120	; 0x78
 8014de4:	4621      	mov	r1, r4
 8014de6:	9000      	str	r0, [sp, #0]
 8014de8:	9a03      	ldr	r2, [sp, #12]
 8014dea:	2400      	movs	r4, #0
 8014dec:	a805      	add	r0, sp, #20
 8014dee:	f000 feb4 	bl	8015b5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014df2:	f846 4d68 	str.w	r4, [r6, #-104]!
 8014df6:	462a      	mov	r2, r5
 8014df8:	4633      	mov	r3, r6
 8014dfa:	4621      	mov	r1, r4
 8014dfc:	a805      	add	r0, sp, #20
 8014dfe:	f001 f9af 	bl	8016160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014e02:	b1f0      	cbz	r0, 8014e42 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8014e04:	280a      	cmp	r0, #10
 8014e06:	d018      	beq.n	8014e3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014e08:	9f04      	ldr	r7, [sp, #16]
 8014e0a:	b1b7      	cbz	r7, 8014e3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014e0c:	7b78      	ldrb	r0, [r7, #13]
 8014e0e:	7a3b      	ldrb	r3, [r7, #8]
 8014e10:	88ea      	ldrh	r2, [r5, #6]
 8014e12:	00c1      	lsls	r1, r0, #3
 8014e14:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8014e18:	4319      	orrs	r1, r3
 8014e1a:	0643      	lsls	r3, r0, #25
 8014e1c:	bf44      	itt	mi
 8014e1e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8014e22:	b219      	sxthmi	r1, r3
 8014e24:	0100      	lsls	r0, r0, #4
 8014e26:	79fb      	ldrb	r3, [r7, #7]
 8014e28:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014e2c:	4303      	orrs	r3, r0
 8014e2e:	4413      	add	r3, r2
 8014e30:	1a5b      	subs	r3, r3, r1
 8014e32:	b21b      	sxth	r3, r3
 8014e34:	429c      	cmp	r4, r3
 8014e36:	bfb8      	it	lt
 8014e38:	461c      	movlt	r4, r3
 8014e3a:	4633      	mov	r3, r6
 8014e3c:	462a      	mov	r2, r5
 8014e3e:	2100      	movs	r1, #0
 8014e40:	e7dc      	b.n	8014dfc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8014e42:	b2a0      	uxth	r0, r4
 8014e44:	b01e      	add	sp, #120	; 0x78
 8014e46:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014e4a:	b003      	add	sp, #12
 8014e4c:	4770      	bx	lr

08014e4e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8014e4e:	7a43      	ldrb	r3, [r0, #9]
 8014e50:	8880      	ldrh	r0, [r0, #4]
 8014e52:	4418      	add	r0, r3
 8014e54:	b280      	uxth	r0, r0
 8014e56:	4770      	bx	lr

08014e58 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8014e58:	6803      	ldr	r3, [r0, #0]
 8014e5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014e5c:	4718      	bx	r3

08014e5e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8014e5e:	b40e      	push	{r1, r2, r3}
 8014e60:	b570      	push	{r4, r5, r6, lr}
 8014e62:	b09d      	sub	sp, #116	; 0x74
 8014e64:	ab21      	add	r3, sp, #132	; 0x84
 8014e66:	4604      	mov	r4, r0
 8014e68:	f853 5b04 	ldr.w	r5, [r3], #4
 8014e6c:	9302      	str	r3, [sp, #8]
 8014e6e:	a803      	add	r0, sp, #12
 8014e70:	f000 fe18 	bl	8015aa4 <_ZN8touchgfx12TextProviderC1Ev>
 8014e74:	6823      	ldr	r3, [r4, #0]
 8014e76:	4620      	mov	r0, r4
 8014e78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014e7a:	4798      	blx	r3
 8014e7c:	6823      	ldr	r3, [r4, #0]
 8014e7e:	4606      	mov	r6, r0
 8014e80:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014e82:	4620      	mov	r0, r4
 8014e84:	4798      	blx	r3
 8014e86:	4633      	mov	r3, r6
 8014e88:	9000      	str	r0, [sp, #0]
 8014e8a:	9a02      	ldr	r2, [sp, #8]
 8014e8c:	4629      	mov	r1, r5
 8014e8e:	a803      	add	r0, sp, #12
 8014e90:	f000 fe63 	bl	8015b5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014e94:	a803      	add	r0, sp, #12
 8014e96:	f001 fa31 	bl	80162fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014e9a:	2401      	movs	r4, #1
 8014e9c:	b2a3      	uxth	r3, r4
 8014e9e:	b140      	cbz	r0, 8014eb2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8014ea0:	280a      	cmp	r0, #10
 8014ea2:	bf08      	it	eq
 8014ea4:	3301      	addeq	r3, #1
 8014ea6:	a803      	add	r0, sp, #12
 8014ea8:	bf08      	it	eq
 8014eaa:	b21c      	sxtheq	r4, r3
 8014eac:	f001 fa26 	bl	80162fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014eb0:	e7f4      	b.n	8014e9c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8014eb2:	4618      	mov	r0, r3
 8014eb4:	b01d      	add	sp, #116	; 0x74
 8014eb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014eba:	b003      	add	sp, #12
 8014ebc:	4770      	bx	lr

08014ebe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8014ebe:	b40e      	push	{r1, r2, r3}
 8014ec0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014ec2:	b09e      	sub	sp, #120	; 0x78
 8014ec4:	ab23      	add	r3, sp, #140	; 0x8c
 8014ec6:	4604      	mov	r4, r0
 8014ec8:	f853 5b04 	ldr.w	r5, [r3], #4
 8014ecc:	9303      	str	r3, [sp, #12]
 8014ece:	a805      	add	r0, sp, #20
 8014ed0:	f000 fde8 	bl	8015aa4 <_ZN8touchgfx12TextProviderC1Ev>
 8014ed4:	6823      	ldr	r3, [r4, #0]
 8014ed6:	4620      	mov	r0, r4
 8014ed8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014eda:	4798      	blx	r3
 8014edc:	6823      	ldr	r3, [r4, #0]
 8014ede:	4606      	mov	r6, r0
 8014ee0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014ee2:	4620      	mov	r0, r4
 8014ee4:	4798      	blx	r3
 8014ee6:	4633      	mov	r3, r6
 8014ee8:	4629      	mov	r1, r5
 8014eea:	9000      	str	r0, [sp, #0]
 8014eec:	9a03      	ldr	r2, [sp, #12]
 8014eee:	a805      	add	r0, sp, #20
 8014ef0:	ad1e      	add	r5, sp, #120	; 0x78
 8014ef2:	f000 fe32 	bl	8015b5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014ef6:	2100      	movs	r1, #0
 8014ef8:	f845 1d68 	str.w	r1, [r5, #-104]!
 8014efc:	4622      	mov	r2, r4
 8014efe:	462b      	mov	r3, r5
 8014f00:	a805      	add	r0, sp, #20
 8014f02:	f001 f92d 	bl	8016160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014f06:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8014f0a:	b1d8      	cbz	r0, 8014f44 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8014f0c:	280a      	cmp	r0, #10
 8014f0e:	d012      	beq.n	8014f36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8014f10:	9804      	ldr	r0, [sp, #16]
 8014f12:	b180      	cbz	r0, 8014f36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8014f14:	7b47      	ldrb	r7, [r0, #13]
 8014f16:	88e2      	ldrh	r2, [r4, #6]
 8014f18:	00fb      	lsls	r3, r7, #3
 8014f1a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8014f1e:	7a03      	ldrb	r3, [r0, #8]
 8014f20:	430b      	orrs	r3, r1
 8014f22:	0679      	lsls	r1, r7, #25
 8014f24:	bf44      	itt	mi
 8014f26:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014f2a:	b21b      	sxthmi	r3, r3
 8014f2c:	1ad3      	subs	r3, r2, r3
 8014f2e:	b21b      	sxth	r3, r3
 8014f30:	429e      	cmp	r6, r3
 8014f32:	bfa8      	it	ge
 8014f34:	461e      	movge	r6, r3
 8014f36:	462b      	mov	r3, r5
 8014f38:	4622      	mov	r2, r4
 8014f3a:	2100      	movs	r1, #0
 8014f3c:	a805      	add	r0, sp, #20
 8014f3e:	f001 f90f 	bl	8016160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014f42:	e7e2      	b.n	8014f0a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8014f44:	4630      	mov	r0, r6
 8014f46:	b01e      	add	sp, #120	; 0x78
 8014f48:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014f4c:	b003      	add	sp, #12
 8014f4e:	4770      	bx	lr

08014f50 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8014f50:	b513      	push	{r0, r1, r4, lr}
 8014f52:	6803      	ldr	r3, [r0, #0]
 8014f54:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8014f58:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8014f5c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014f60:	2400      	movs	r4, #0
 8014f62:	9400      	str	r4, [sp, #0]
 8014f64:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014f68:	691b      	ldr	r3, [r3, #16]
 8014f6a:	4669      	mov	r1, sp
 8014f6c:	4798      	blx	r3
 8014f6e:	b002      	add	sp, #8
 8014f70:	bd10      	pop	{r4, pc}

08014f72 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8014f72:	b538      	push	{r3, r4, r5, lr}
 8014f74:	680b      	ldr	r3, [r1, #0]
 8014f76:	460c      	mov	r4, r1
 8014f78:	68db      	ldr	r3, [r3, #12]
 8014f7a:	4605      	mov	r5, r0
 8014f7c:	4798      	blx	r3
 8014f7e:	6823      	ldr	r3, [r4, #0]
 8014f80:	4620      	mov	r0, r4
 8014f82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014f84:	4629      	mov	r1, r5
 8014f86:	4798      	blx	r3
 8014f88:	4628      	mov	r0, r5
 8014f8a:	bd38      	pop	{r3, r4, r5, pc}

08014f8c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8014f8c:	b410      	push	{r4}
 8014f8e:	880a      	ldrh	r2, [r1, #0]
 8014f90:	8884      	ldrh	r4, [r0, #4]
 8014f92:	4422      	add	r2, r4
 8014f94:	800a      	strh	r2, [r1, #0]
 8014f96:	88c4      	ldrh	r4, [r0, #6]
 8014f98:	884a      	ldrh	r2, [r1, #2]
 8014f9a:	4422      	add	r2, r4
 8014f9c:	804a      	strh	r2, [r1, #2]
 8014f9e:	6940      	ldr	r0, [r0, #20]
 8014fa0:	b120      	cbz	r0, 8014fac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8014fa2:	6803      	ldr	r3, [r0, #0]
 8014fa4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014fa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014faa:	4718      	bx	r3
 8014fac:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014fb0:	4770      	bx	lr

08014fb2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8014fb2:	b570      	push	{r4, r5, r6, lr}
 8014fb4:	8882      	ldrh	r2, [r0, #4]
 8014fb6:	880b      	ldrh	r3, [r1, #0]
 8014fb8:	4413      	add	r3, r2
 8014fba:	800b      	strh	r3, [r1, #0]
 8014fbc:	88c2      	ldrh	r2, [r0, #6]
 8014fbe:	884b      	ldrh	r3, [r1, #2]
 8014fc0:	460c      	mov	r4, r1
 8014fc2:	4413      	add	r3, r2
 8014fc4:	804b      	strh	r3, [r1, #2]
 8014fc6:	4605      	mov	r5, r0
 8014fc8:	1d01      	adds	r1, r0, #4
 8014fca:	4620      	mov	r0, r4
 8014fcc:	f7f9 fdc6 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 8014fd0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8014fd4:	2b00      	cmp	r3, #0
 8014fd6:	dd0b      	ble.n	8014ff0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014fd8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8014fdc:	2b00      	cmp	r3, #0
 8014fde:	dd07      	ble.n	8014ff0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014fe0:	6968      	ldr	r0, [r5, #20]
 8014fe2:	b128      	cbz	r0, 8014ff0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014fe4:	6803      	ldr	r3, [r0, #0]
 8014fe6:	4621      	mov	r1, r4
 8014fe8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014fea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014fee:	4718      	bx	r3
 8014ff0:	bd70      	pop	{r4, r5, r6, pc}
	...

08014ff4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8014ff4:	b570      	push	{r4, r5, r6, lr}
 8014ff6:	8882      	ldrh	r2, [r0, #4]
 8014ff8:	880b      	ldrh	r3, [r1, #0]
 8014ffa:	4413      	add	r3, r2
 8014ffc:	800b      	strh	r3, [r1, #0]
 8014ffe:	88c2      	ldrh	r2, [r0, #6]
 8015000:	884b      	ldrh	r3, [r1, #2]
 8015002:	460c      	mov	r4, r1
 8015004:	4413      	add	r3, r2
 8015006:	804b      	strh	r3, [r1, #2]
 8015008:	4605      	mov	r5, r0
 801500a:	1d01      	adds	r1, r0, #4
 801500c:	4620      	mov	r0, r4
 801500e:	f7f9 fda5 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 8015012:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015016:	2b00      	cmp	r3, #0
 8015018:	dd19      	ble.n	801504e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801501a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801501e:	2b00      	cmp	r3, #0
 8015020:	dd15      	ble.n	801504e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015022:	6968      	ldr	r0, [r5, #20]
 8015024:	b128      	cbz	r0, 8015032 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015026:	6803      	ldr	r3, [r0, #0]
 8015028:	4621      	mov	r1, r4
 801502a:	691b      	ldr	r3, [r3, #16]
 801502c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015030:	4718      	bx	r3
 8015032:	4b07      	ldr	r3, [pc, #28]	; (8015050 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015034:	681b      	ldr	r3, [r3, #0]
 8015036:	3304      	adds	r3, #4
 8015038:	429d      	cmp	r5, r3
 801503a:	d108      	bne.n	801504e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801503c:	f7fe fea0 	bl	8013d80 <_ZN8touchgfx11Application11getInstanceEv>
 8015040:	6803      	ldr	r3, [r0, #0]
 8015042:	6821      	ldr	r1, [r4, #0]
 8015044:	6862      	ldr	r2, [r4, #4]
 8015046:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015048:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801504c:	4718      	bx	r3
 801504e:	bd70      	pop	{r4, r5, r6, pc}
 8015050:	20013800 	.word	0x20013800

08015054 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015054:	b570      	push	{r4, r5, r6, lr}
 8015056:	4604      	mov	r4, r0
 8015058:	4616      	mov	r6, r2
 801505a:	460d      	mov	r5, r1
 801505c:	b901      	cbnz	r1, 8015060 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801505e:	b192      	cbz	r2, 8015086 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8015060:	6823      	ldr	r3, [r4, #0]
 8015062:	4620      	mov	r0, r4
 8015064:	699b      	ldr	r3, [r3, #24]
 8015066:	4798      	blx	r3
 8015068:	88e2      	ldrh	r2, [r4, #6]
 801506a:	88a1      	ldrh	r1, [r4, #4]
 801506c:	4432      	add	r2, r6
 801506e:	4429      	add	r1, r5
 8015070:	4620      	mov	r0, r4
 8015072:	b212      	sxth	r2, r2
 8015074:	b209      	sxth	r1, r1
 8015076:	f7ed fa00 	bl	800247a <_ZN8touchgfx8Drawable5setXYEss>
 801507a:	6823      	ldr	r3, [r4, #0]
 801507c:	4620      	mov	r0, r4
 801507e:	699b      	ldr	r3, [r3, #24]
 8015080:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015084:	4718      	bx	r3
 8015086:	bd70      	pop	{r4, r5, r6, pc}

08015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015088:	b510      	push	{r4, lr}
 801508a:	4604      	mov	r4, r0
 801508c:	4608      	mov	r0, r1
 801508e:	2300      	movs	r3, #0
 8015090:	8023      	strh	r3, [r4, #0]
 8015092:	8063      	strh	r3, [r4, #2]
 8015094:	6803      	ldr	r3, [r0, #0]
 8015096:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801509a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801509e:	80a1      	strh	r1, [r4, #4]
 80150a0:	80e2      	strh	r2, [r4, #6]
 80150a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80150a4:	4621      	mov	r1, r4
 80150a6:	4798      	blx	r3
 80150a8:	4620      	mov	r0, r4
 80150aa:	bd10      	pop	{r4, pc}

080150ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80150ac:	b530      	push	{r4, r5, lr}
 80150ae:	8083      	strh	r3, [r0, #4]
 80150b0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80150b4:	80c3      	strh	r3, [r0, #6]
 80150b6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80150ba:	7203      	strb	r3, [r0, #8]
 80150bc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80150c0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80150c4:	7243      	strb	r3, [r0, #9]
 80150c6:	7a83      	ldrb	r3, [r0, #10]
 80150c8:	6141      	str	r1, [r0, #20]
 80150ca:	f365 0306 	bfi	r3, r5, #0, #7
 80150ce:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80150d2:	8302      	strh	r2, [r0, #24]
 80150d4:	f365 13c7 	bfi	r3, r5, #7, #1
 80150d8:	7283      	strb	r3, [r0, #10]
 80150da:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80150de:	72c3      	strb	r3, [r0, #11]
 80150e0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80150e4:	7303      	strb	r3, [r0, #12]
 80150e6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80150ea:	81c3      	strh	r3, [r0, #14]
 80150ec:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80150f0:	8203      	strh	r3, [r0, #16]
 80150f2:	4b01      	ldr	r3, [pc, #4]	; (80150f8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80150f4:	6003      	str	r3, [r0, #0]
 80150f6:	bd30      	pop	{r4, r5, pc}
 80150f8:	0802b800 	.word	0x0802b800

080150fc <_ZNK8touchgfx9ConstFont4findEt>:
 80150fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80150fe:	6944      	ldr	r4, [r0, #20]
 8015100:	b3bc      	cbz	r4, 8015172 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015102:	88a3      	ldrh	r3, [r4, #4]
 8015104:	8b02      	ldrh	r2, [r0, #24]
 8015106:	1acb      	subs	r3, r1, r3
 8015108:	f102 32ff 	add.w	r2, r2, #4294967295
 801510c:	d431      	bmi.n	8015172 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801510e:	4293      	cmp	r3, r2
 8015110:	dd0c      	ble.n	801512c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015112:	230e      	movs	r3, #14
 8015114:	fb03 4302 	mla	r3, r3, r2, r4
 8015118:	889b      	ldrh	r3, [r3, #4]
 801511a:	1a5b      	subs	r3, r3, r1
 801511c:	1ad3      	subs	r3, r2, r3
 801511e:	429a      	cmp	r2, r3
 8015120:	db27      	blt.n	8015172 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015122:	2b00      	cmp	r3, #0
 8015124:	bfbc      	itt	lt
 8015126:	2302      	movlt	r3, #2
 8015128:	fb92 f3f3 	sdivlt	r3, r2, r3
 801512c:	2500      	movs	r5, #0
 801512e:	260e      	movs	r6, #14
 8015130:	4295      	cmp	r5, r2
 8015132:	dc1e      	bgt.n	8015172 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015134:	fb06 4003 	mla	r0, r6, r3, r4
 8015138:	8887      	ldrh	r7, [r0, #4]
 801513a:	42b9      	cmp	r1, r7
 801513c:	d01a      	beq.n	8015174 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801513e:	d20d      	bcs.n	801515c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8015140:	1e5a      	subs	r2, r3, #1
 8015142:	4295      	cmp	r5, r2
 8015144:	dc15      	bgt.n	8015172 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015146:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801514a:	1a5b      	subs	r3, r3, r1
 801514c:	1ad3      	subs	r3, r2, r3
 801514e:	429a      	cmp	r2, r3
 8015150:	db0f      	blt.n	8015172 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015152:	429d      	cmp	r5, r3
 8015154:	ddec      	ble.n	8015130 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015156:	1953      	adds	r3, r2, r5
 8015158:	105b      	asrs	r3, r3, #1
 801515a:	e7e9      	b.n	8015130 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801515c:	1c5d      	adds	r5, r3, #1
 801515e:	42aa      	cmp	r2, r5
 8015160:	db07      	blt.n	8015172 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015162:	8a43      	ldrh	r3, [r0, #18]
 8015164:	1acb      	subs	r3, r1, r3
 8015166:	442b      	add	r3, r5
 8015168:	429d      	cmp	r5, r3
 801516a:	dc02      	bgt.n	8015172 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801516c:	429a      	cmp	r2, r3
 801516e:	dadf      	bge.n	8015130 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015170:	e7f1      	b.n	8015156 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8015172:	2000      	movs	r0, #0
 8015174:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015176 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015176:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015178:	4604      	mov	r4, r0
 801517a:	4617      	mov	r7, r2
 801517c:	461e      	mov	r6, r3
 801517e:	b911      	cbnz	r1, 8015186 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015180:	2500      	movs	r5, #0
 8015182:	4628      	mov	r0, r5
 8015184:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015186:	290a      	cmp	r1, #10
 8015188:	d0fa      	beq.n	8015180 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801518a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801518e:	4291      	cmp	r1, r2
 8015190:	d0f6      	beq.n	8015180 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015192:	f242 020b 	movw	r2, #8203	; 0x200b
 8015196:	4291      	cmp	r1, r2
 8015198:	d0f2      	beq.n	8015180 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801519a:	f7ff ffaf 	bl	80150fc <_ZNK8touchgfx9ConstFont4findEt>
 801519e:	4605      	mov	r5, r0
 80151a0:	b950      	cbnz	r0, 80151b8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80151a2:	6823      	ldr	r3, [r4, #0]
 80151a4:	4620      	mov	r0, r4
 80151a6:	691b      	ldr	r3, [r3, #16]
 80151a8:	4798      	blx	r3
 80151aa:	4601      	mov	r1, r0
 80151ac:	4620      	mov	r0, r4
 80151ae:	f7ff ffa5 	bl	80150fc <_ZNK8touchgfx9ConstFont4findEt>
 80151b2:	4605      	mov	r5, r0
 80151b4:	2800      	cmp	r0, #0
 80151b6:	d0e3      	beq.n	8015180 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80151b8:	6823      	ldr	r3, [r4, #0]
 80151ba:	4629      	mov	r1, r5
 80151bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80151be:	4620      	mov	r0, r4
 80151c0:	4798      	blx	r3
 80151c2:	6038      	str	r0, [r7, #0]
 80151c4:	6823      	ldr	r3, [r4, #0]
 80151c6:	4620      	mov	r0, r4
 80151c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80151ca:	4798      	blx	r3
 80151cc:	7030      	strb	r0, [r6, #0]
 80151ce:	e7d8      	b.n	8015182 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080151d0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80151d0:	b538      	push	{r3, r4, r5, lr}
 80151d2:	4605      	mov	r5, r0
 80151d4:	f002 f962 	bl	801749c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80151d8:	4604      	mov	r4, r0
 80151da:	4628      	mov	r0, r5
 80151dc:	f002 f8a2 	bl	8017324 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80151e0:	2800      	cmp	r0, #0
 80151e2:	bf14      	ite	ne
 80151e4:	2002      	movne	r0, #2
 80151e6:	2000      	moveq	r0, #0
 80151e8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80151ec:	b280      	uxth	r0, r0
 80151ee:	bd38      	pop	{r3, r4, r5, pc}

080151f0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80151f0:	b538      	push	{r3, r4, r5, lr}
 80151f2:	4605      	mov	r5, r0
 80151f4:	f002 f952 	bl	801749c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80151f8:	4604      	mov	r4, r0
 80151fa:	4628      	mov	r0, r5
 80151fc:	f002 f892 	bl	8017324 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015200:	2800      	cmp	r0, #0
 8015202:	bf14      	ite	ne
 8015204:	2002      	movne	r0, #2
 8015206:	2000      	moveq	r0, #0
 8015208:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801520c:	f040 0001 	orr.w	r0, r0, #1
 8015210:	b280      	uxth	r0, r0
 8015212:	bd38      	pop	{r3, r4, r5, pc}

08015214 <_ZN8touchgfx4clzuEm>:
 8015214:	4603      	mov	r3, r0
 8015216:	b1c8      	cbz	r0, 801524c <_ZN8touchgfx4clzuEm+0x38>
 8015218:	0c02      	lsrs	r2, r0, #16
 801521a:	0412      	lsls	r2, r2, #16
 801521c:	b9a2      	cbnz	r2, 8015248 <_ZN8touchgfx4clzuEm+0x34>
 801521e:	0403      	lsls	r3, r0, #16
 8015220:	2010      	movs	r0, #16
 8015222:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015226:	bf04      	itt	eq
 8015228:	021b      	lsleq	r3, r3, #8
 801522a:	3008      	addeq	r0, #8
 801522c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8015230:	bf04      	itt	eq
 8015232:	011b      	lsleq	r3, r3, #4
 8015234:	3004      	addeq	r0, #4
 8015236:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801523a:	bf04      	itt	eq
 801523c:	009b      	lsleq	r3, r3, #2
 801523e:	3002      	addeq	r0, #2
 8015240:	2b00      	cmp	r3, #0
 8015242:	db04      	blt.n	801524e <_ZN8touchgfx4clzuEm+0x3a>
 8015244:	3001      	adds	r0, #1
 8015246:	4770      	bx	lr
 8015248:	2000      	movs	r0, #0
 801524a:	e7ea      	b.n	8015222 <_ZN8touchgfx4clzuEm+0xe>
 801524c:	2020      	movs	r0, #32
 801524e:	4770      	bx	lr

08015250 <_ZN8touchgfx7muldivuEmmmRm>:
 8015250:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8015254:	460f      	mov	r7, r1
 8015256:	4615      	mov	r5, r2
 8015258:	461e      	mov	r6, r3
 801525a:	4601      	mov	r1, r0
 801525c:	b100      	cbz	r0, 8015260 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801525e:	b927      	cbnz	r7, 801526a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8015260:	2000      	movs	r0, #0
 8015262:	6030      	str	r0, [r6, #0]
 8015264:	b002      	add	sp, #8
 8015266:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801526a:	f7ff ffd3 	bl	8015214 <_ZN8touchgfx4clzuEm>
 801526e:	b980      	cbnz	r0, 8015292 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8015270:	4638      	mov	r0, r7
 8015272:	f7ff ffcf 	bl	8015214 <_ZN8touchgfx4clzuEm>
 8015276:	2800      	cmp	r0, #0
 8015278:	dd05      	ble.n	8015286 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801527a:	4633      	mov	r3, r6
 801527c:	462a      	mov	r2, r5
 801527e:	4638      	mov	r0, r7
 8015280:	f7ff ffe6 	bl	8015250 <_ZN8touchgfx7muldivuEmmmRm>
 8015284:	e7ee      	b.n	8015264 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015286:	f04f 33ff 	mov.w	r3, #4294967295
 801528a:	6033      	str	r3, [r6, #0]
 801528c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015290:	e7e8      	b.n	8015264 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015292:	fa37 f800 	lsrs.w	r8, r7, r0
 8015296:	fb07 f301 	mul.w	r3, r7, r1
 801529a:	d105      	bne.n	80152a8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801529c:	fbb3 f0f5 	udiv	r0, r3, r5
 80152a0:	fb05 3510 	mls	r5, r5, r0, r3
 80152a4:	6035      	str	r5, [r6, #0]
 80152a6:	e7dd      	b.n	8015264 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80152a8:	2301      	movs	r3, #1
 80152aa:	fa01 fa00 	lsl.w	sl, r1, r0
 80152ae:	fa03 f000 	lsl.w	r0, r3, r0
 80152b2:	3801      	subs	r0, #1
 80152b4:	462a      	mov	r2, r5
 80152b6:	4633      	mov	r3, r6
 80152b8:	4038      	ands	r0, r7
 80152ba:	f7ff ffc9 	bl	8015250 <_ZN8touchgfx7muldivuEmmmRm>
 80152be:	fbba f9f5 	udiv	r9, sl, r5
 80152c2:	462a      	mov	r2, r5
 80152c4:	4607      	mov	r7, r0
 80152c6:	ab01      	add	r3, sp, #4
 80152c8:	fb05 a119 	mls	r1, r5, r9, sl
 80152cc:	4640      	mov	r0, r8
 80152ce:	f7ff ffbf 	bl	8015250 <_ZN8touchgfx7muldivuEmmmRm>
 80152d2:	9b01      	ldr	r3, [sp, #4]
 80152d4:	6832      	ldr	r2, [r6, #0]
 80152d6:	fb08 f409 	mul.w	r4, r8, r9
 80152da:	441a      	add	r2, r3
 80152dc:	fbb2 f3f5 	udiv	r3, r2, r5
 80152e0:	441c      	add	r4, r3
 80152e2:	443c      	add	r4, r7
 80152e4:	4420      	add	r0, r4
 80152e6:	fb05 2513 	mls	r5, r5, r3, r2
 80152ea:	e7db      	b.n	80152a4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080152ec <_ZN8touchgfx6muldivElllRl>:
 80152ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80152ee:	2800      	cmp	r0, #0
 80152f0:	bfba      	itte	lt
 80152f2:	4240      	neglt	r0, r0
 80152f4:	f04f 34ff 	movlt.w	r4, #4294967295
 80152f8:	2401      	movge	r4, #1
 80152fa:	2900      	cmp	r1, #0
 80152fc:	bfbc      	itt	lt
 80152fe:	4249      	neglt	r1, r1
 8015300:	4264      	neglt	r4, r4
 8015302:	2a00      	cmp	r2, #0
 8015304:	bfb6      	itet	lt
 8015306:	4265      	neglt	r5, r4
 8015308:	4625      	movge	r5, r4
 801530a:	4252      	neglt	r2, r2
 801530c:	4288      	cmp	r0, r1
 801530e:	461e      	mov	r6, r3
 8015310:	bfc2      	ittt	gt
 8015312:	4603      	movgt	r3, r0
 8015314:	4608      	movgt	r0, r1
 8015316:	4619      	movgt	r1, r3
 8015318:	ab01      	add	r3, sp, #4
 801531a:	f7ff ff99 	bl	8015250 <_ZN8touchgfx7muldivuEmmmRm>
 801531e:	9b01      	ldr	r3, [sp, #4]
 8015320:	4368      	muls	r0, r5
 8015322:	435c      	muls	r4, r3
 8015324:	6034      	str	r4, [r6, #0]
 8015326:	b002      	add	sp, #8
 8015328:	bd70      	pop	{r4, r5, r6, pc}

0801532a <_ZN8touchgfx6muldivElll>:
 801532a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801532c:	4606      	mov	r6, r0
 801532e:	ab01      	add	r3, sp, #4
 8015330:	460d      	mov	r5, r1
 8015332:	4614      	mov	r4, r2
 8015334:	f7ff ffda 	bl	80152ec <_ZN8touchgfx6muldivElllRl>
 8015338:	2e00      	cmp	r6, #0
 801533a:	db20      	blt.n	801537e <_ZN8touchgfx6muldivElll+0x54>
 801533c:	bf14      	ite	ne
 801533e:	2301      	movne	r3, #1
 8015340:	2300      	moveq	r3, #0
 8015342:	2d00      	cmp	r5, #0
 8015344:	db1e      	blt.n	8015384 <_ZN8touchgfx6muldivElll+0x5a>
 8015346:	bf14      	ite	ne
 8015348:	2201      	movne	r2, #1
 801534a:	2200      	moveq	r2, #0
 801534c:	2c00      	cmp	r4, #0
 801534e:	fb03 f202 	mul.w	r2, r3, r2
 8015352:	db1a      	blt.n	801538a <_ZN8touchgfx6muldivElll+0x60>
 8015354:	bf14      	ite	ne
 8015356:	2301      	movne	r3, #1
 8015358:	2300      	moveq	r3, #0
 801535a:	4353      	muls	r3, r2
 801535c:	2b01      	cmp	r3, #1
 801535e:	d117      	bne.n	8015390 <_ZN8touchgfx6muldivElll+0x66>
 8015360:	9b01      	ldr	r3, [sp, #4]
 8015362:	2c00      	cmp	r4, #0
 8015364:	bfb8      	it	lt
 8015366:	4264      	neglt	r4, r4
 8015368:	2b00      	cmp	r3, #0
 801536a:	f104 0401 	add.w	r4, r4, #1
 801536e:	bfb8      	it	lt
 8015370:	425b      	neglt	r3, r3
 8015372:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8015376:	db00      	blt.n	801537a <_ZN8touchgfx6muldivElll+0x50>
 8015378:	3001      	adds	r0, #1
 801537a:	b002      	add	sp, #8
 801537c:	bd70      	pop	{r4, r5, r6, pc}
 801537e:	f04f 33ff 	mov.w	r3, #4294967295
 8015382:	e7de      	b.n	8015342 <_ZN8touchgfx6muldivElll+0x18>
 8015384:	f04f 32ff 	mov.w	r2, #4294967295
 8015388:	e7e0      	b.n	801534c <_ZN8touchgfx6muldivElll+0x22>
 801538a:	f04f 33ff 	mov.w	r3, #4294967295
 801538e:	e7e4      	b.n	801535a <_ZN8touchgfx6muldivElll+0x30>
 8015390:	3301      	adds	r3, #1
 8015392:	d1f2      	bne.n	801537a <_ZN8touchgfx6muldivElll+0x50>
 8015394:	9b01      	ldr	r3, [sp, #4]
 8015396:	2c00      	cmp	r4, #0
 8015398:	bfb8      	it	lt
 801539a:	4264      	neglt	r4, r4
 801539c:	2b00      	cmp	r3, #0
 801539e:	bfb8      	it	lt
 80153a0:	425b      	neglt	r3, r3
 80153a2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80153a6:	bfc8      	it	gt
 80153a8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80153ac:	e7e5      	b.n	801537a <_ZN8touchgfx6muldivElll+0x50>

080153ae <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80153ae:	2000      	movs	r0, #0
 80153b0:	4770      	bx	lr

080153b2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80153b2:	2001      	movs	r0, #1
 80153b4:	4770      	bx	lr

080153b6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80153b6:	2002      	movs	r0, #2
 80153b8:	4770      	bx	lr

080153ba <_ZN8touchgfx6ScreenD1Ev>:
 80153ba:	4770      	bx	lr

080153bc <_ZN8touchgfx12GestureEventD1Ev>:
 80153bc:	4770      	bx	lr

080153be <_ZN8touchgfx9DragEventD1Ev>:
 80153be:	4770      	bx	lr

080153c0 <_ZN8touchgfx10ClickEventD1Ev>:
 80153c0:	4770      	bx	lr

080153c2 <_ZN8touchgfx10ClickEventD0Ev>:
 80153c2:	b510      	push	{r4, lr}
 80153c4:	210c      	movs	r1, #12
 80153c6:	4604      	mov	r4, r0
 80153c8:	f011 fa39 	bl	802683e <_ZdlPvj>
 80153cc:	4620      	mov	r0, r4
 80153ce:	bd10      	pop	{r4, pc}

080153d0 <_ZN8touchgfx9DragEventD0Ev>:
 80153d0:	b510      	push	{r4, lr}
 80153d2:	2110      	movs	r1, #16
 80153d4:	4604      	mov	r4, r0
 80153d6:	f011 fa32 	bl	802683e <_ZdlPvj>
 80153da:	4620      	mov	r0, r4
 80153dc:	bd10      	pop	{r4, pc}

080153de <_ZN8touchgfx12GestureEventD0Ev>:
 80153de:	b510      	push	{r4, lr}
 80153e0:	210c      	movs	r1, #12
 80153e2:	4604      	mov	r4, r0
 80153e4:	f011 fa2b 	bl	802683e <_ZdlPvj>
 80153e8:	4620      	mov	r0, r4
 80153ea:	bd10      	pop	{r4, pc}

080153ec <_ZN8touchgfx6ScreenD0Ev>:
 80153ec:	b510      	push	{r4, lr}
 80153ee:	213c      	movs	r1, #60	; 0x3c
 80153f0:	4604      	mov	r4, r0
 80153f2:	f011 fa24 	bl	802683e <_ZdlPvj>
 80153f6:	4620      	mov	r0, r4
 80153f8:	bd10      	pop	{r4, pc}
	...

080153fc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80153fc:	b530      	push	{r4, r5, lr}
 80153fe:	460d      	mov	r5, r1
 8015400:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8015402:	b087      	sub	sp, #28
 8015404:	4604      	mov	r4, r0
 8015406:	b301      	cbz	r1, 801544a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8015408:	a801      	add	r0, sp, #4
 801540a:	f7ff fe3d 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801540e:	892a      	ldrh	r2, [r5, #8]
 8015410:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015414:	7928      	ldrb	r0, [r5, #4]
 8015416:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801541a:	f88d 0010 	strb.w	r0, [sp, #16]
 801541e:	1ad2      	subs	r2, r2, r3
 8015420:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015422:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8015424:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015428:	441a      	add	r2, r3
 801542a:	896b      	ldrh	r3, [r5, #10]
 801542c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8015430:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015434:	1b5b      	subs	r3, r3, r5
 8015436:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8015438:	442b      	add	r3, r5
 801543a:	4d05      	ldr	r5, [pc, #20]	; (8015450 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801543c:	9503      	str	r5, [sp, #12]
 801543e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015442:	6803      	ldr	r3, [r0, #0]
 8015444:	a903      	add	r1, sp, #12
 8015446:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015448:	4798      	blx	r3
 801544a:	b007      	add	sp, #28
 801544c:	bd30      	pop	{r4, r5, pc}
 801544e:	bf00      	nop
 8015450:	0802b888 	.word	0x0802b888

08015454 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8015454:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015458:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801545a:	b08a      	sub	sp, #40	; 0x28
 801545c:	4604      	mov	r4, r0
 801545e:	460d      	mov	r5, r1
 8015460:	b113      	cbz	r3, 8015468 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8015462:	790b      	ldrb	r3, [r1, #4]
 8015464:	2b00      	cmp	r3, #0
 8015466:	d044      	beq.n	80154f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015468:	f104 0804 	add.w	r8, r4, #4
 801546c:	4641      	mov	r1, r8
 801546e:	a803      	add	r0, sp, #12
 8015470:	f7ff fe0a 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015474:	792b      	ldrb	r3, [r5, #4]
 8015476:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801547a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801547e:	b983      	cbnz	r3, 80154a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8015480:	892a      	ldrh	r2, [r5, #8]
 8015482:	88e9      	ldrh	r1, [r5, #6]
 8015484:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8015488:	1b92      	subs	r2, r2, r6
 801548a:	1bc9      	subs	r1, r1, r7
 801548c:	9301      	str	r3, [sp, #4]
 801548e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8015492:	9300      	str	r3, [sp, #0]
 8015494:	b212      	sxth	r2, r2
 8015496:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801549a:	b209      	sxth	r1, r1
 801549c:	4640      	mov	r0, r8
 801549e:	f7f9 fa79 	bl	800e994 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80154a2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80154a4:	b329      	cbz	r1, 80154f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80154a6:	a805      	add	r0, sp, #20
 80154a8:	f7ff fdee 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80154ac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80154b0:	792b      	ldrb	r3, [r5, #4]
 80154b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80154b4:	f88d 3020 	strb.w	r3, [sp, #32]
 80154b8:	1abf      	subs	r7, r7, r2
 80154ba:	88ea      	ldrh	r2, [r5, #6]
 80154bc:	4417      	add	r7, r2
 80154be:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80154c0:	4417      	add	r7, r2
 80154c2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80154c6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80154ca:	1ab6      	subs	r6, r6, r2
 80154cc:	892a      	ldrh	r2, [r5, #8]
 80154ce:	4416      	add	r6, r2
 80154d0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80154d2:	4416      	add	r6, r2
 80154d4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80154d8:	4a07      	ldr	r2, [pc, #28]	; (80154f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80154da:	9207      	str	r2, [sp, #28]
 80154dc:	2600      	movs	r6, #0
 80154de:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80154e2:	6803      	ldr	r3, [r0, #0]
 80154e4:	a907      	add	r1, sp, #28
 80154e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80154e8:	4798      	blx	r3
 80154ea:	792b      	ldrb	r3, [r5, #4]
 80154ec:	b10b      	cbz	r3, 80154f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80154ee:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80154f2:	b00a      	add	sp, #40	; 0x28
 80154f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80154f8:	0802b860 	.word	0x0802b860

080154fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80154fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015500:	460c      	mov	r4, r1
 8015502:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8015504:	b088      	sub	sp, #32
 8015506:	4605      	mov	r5, r0
 8015508:	2900      	cmp	r1, #0
 801550a:	d06d      	beq.n	80155e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801550c:	4668      	mov	r0, sp
 801550e:	f7ff fdbb 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015512:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8015514:	88e3      	ldrh	r3, [r4, #6]
 8015516:	f9bd 8000 	ldrsh.w	r8, [sp]
 801551a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801551e:	440b      	add	r3, r1
 8015520:	b21b      	sxth	r3, r3
 8015522:	4543      	cmp	r3, r8
 8015524:	db31      	blt.n	801558a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015526:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801552a:	44c4      	add	ip, r8
 801552c:	fa0f fc8c 	sxth.w	ip, ip
 8015530:	4563      	cmp	r3, ip
 8015532:	da2a      	bge.n	801558a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015534:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8015536:	8926      	ldrh	r6, [r4, #8]
 8015538:	4416      	add	r6, r2
 801553a:	b236      	sxth	r6, r6
 801553c:	42be      	cmp	r6, r7
 801553e:	db24      	blt.n	801558a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015540:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015544:	4438      	add	r0, r7
 8015546:	b200      	sxth	r0, r0
 8015548:	4286      	cmp	r6, r0
 801554a:	da1e      	bge.n	801558a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801554c:	8963      	ldrh	r3, [r4, #10]
 801554e:	4419      	add	r1, r3
 8015550:	b209      	sxth	r1, r1
 8015552:	4541      	cmp	r1, r8
 8015554:	db08      	blt.n	8015568 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015556:	4561      	cmp	r1, ip
 8015558:	da06      	bge.n	8015568 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801555a:	89a3      	ldrh	r3, [r4, #12]
 801555c:	441a      	add	r2, r3
 801555e:	b212      	sxth	r2, r2
 8015560:	42ba      	cmp	r2, r7
 8015562:	db01      	blt.n	8015568 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015564:	4282      	cmp	r2, r0
 8015566:	db10      	blt.n	801558a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015568:	4b21      	ldr	r3, [pc, #132]	; (80155f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801556a:	9304      	str	r3, [sp, #16]
 801556c:	2302      	movs	r3, #2
 801556e:	f88d 3014 	strb.w	r3, [sp, #20]
 8015572:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8015574:	2300      	movs	r3, #0
 8015576:	f8ad 3016 	strh.w	r3, [sp, #22]
 801557a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801557e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015582:	6803      	ldr	r3, [r0, #0]
 8015584:	a904      	add	r1, sp, #16
 8015586:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015588:	4798      	blx	r3
 801558a:	1d29      	adds	r1, r5, #4
 801558c:	a802      	add	r0, sp, #8
 801558e:	f7ff fd7b 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015592:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015596:	88e0      	ldrh	r0, [r4, #6]
 8015598:	7921      	ldrb	r1, [r4, #4]
 801559a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801559e:	8922      	ldrh	r2, [r4, #8]
 80155a0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80155a2:	f88d 1014 	strb.w	r1, [sp, #20]
 80155a6:	eba3 0808 	sub.w	r8, r3, r8
 80155aa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80155ae:	1bdf      	subs	r7, r3, r7
 80155b0:	b2bb      	uxth	r3, r7
 80155b2:	fa1f f888 	uxth.w	r8, r8
 80155b6:	8967      	ldrh	r7, [r4, #10]
 80155b8:	89a4      	ldrh	r4, [r4, #12]
 80155ba:	4440      	add	r0, r8
 80155bc:	4460      	add	r0, ip
 80155be:	441a      	add	r2, r3
 80155c0:	44b8      	add	r8, r7
 80155c2:	4423      	add	r3, r4
 80155c4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80155c8:	4433      	add	r3, r6
 80155ca:	4432      	add	r2, r6
 80155cc:	44e0      	add	r8, ip
 80155ce:	4c09      	ldr	r4, [pc, #36]	; (80155f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80155d0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80155d2:	9404      	str	r4, [sp, #16]
 80155d4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80155d8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80155dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80155e0:	6803      	ldr	r3, [r0, #0]
 80155e2:	a904      	add	r1, sp, #16
 80155e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80155e6:	4798      	blx	r3
 80155e8:	b008      	add	sp, #32
 80155ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80155ee:	bf00      	nop
 80155f0:	0802b860 	.word	0x0802b860
 80155f4:	0802b874 	.word	0x0802b874

080155f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80155f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80155fa:	4604      	mov	r4, r0
 80155fc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8015600:	3201      	adds	r2, #1
 8015602:	d112      	bne.n	801562a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8015604:	6803      	ldr	r3, [r0, #0]
 8015606:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801560a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801560e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015612:	2500      	movs	r5, #0
 8015614:	9500      	str	r5, [sp, #0]
 8015616:	466d      	mov	r5, sp
 8015618:	4629      	mov	r1, r5
 801561a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801561e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015620:	4798      	blx	r3
 8015622:	e895 0003 	ldmia.w	r5, {r0, r1}
 8015626:	e884 0003 	stmia.w	r4, {r0, r1}
 801562a:	4620      	mov	r0, r4
 801562c:	b003      	add	sp, #12
 801562e:	bd30      	pop	{r4, r5, pc}

08015630 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8015630:	b513      	push	{r0, r1, r4, lr}
 8015632:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8015636:	3301      	adds	r3, #1
 8015638:	4604      	mov	r4, r0
 801563a:	d109      	bne.n	8015650 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801563c:	4601      	mov	r1, r0
 801563e:	4668      	mov	r0, sp
 8015640:	f7ff fd22 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015644:	f8bd 3000 	ldrh.w	r3, [sp]
 8015648:	8423      	strh	r3, [r4, #32]
 801564a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801564e:	8463      	strh	r3, [r4, #34]	; 0x22
 8015650:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8015654:	b002      	add	sp, #8
 8015656:	bd10      	pop	{r4, pc}

08015658 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8015658:	b513      	push	{r0, r1, r4, lr}
 801565a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801565e:	3301      	adds	r3, #1
 8015660:	4604      	mov	r4, r0
 8015662:	d109      	bne.n	8015678 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8015664:	4601      	mov	r1, r0
 8015666:	4668      	mov	r0, sp
 8015668:	f7ff fd0e 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801566c:	f8bd 3000 	ldrh.w	r3, [sp]
 8015670:	8423      	strh	r3, [r4, #32]
 8015672:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015676:	8463      	strh	r3, [r4, #34]	; 0x22
 8015678:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801567c:	b002      	add	sp, #8
 801567e:	bd10      	pop	{r4, pc}

08015680 <_ZN8touchgfx6ScreenC1Ev>:
 8015680:	b570      	push	{r4, r5, r6, lr}
 8015682:	4605      	mov	r5, r0
 8015684:	4b16      	ldr	r3, [pc, #88]	; (80156e0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8015686:	f845 3b04 	str.w	r3, [r5], #4
 801568a:	2300      	movs	r3, #0
 801568c:	8103      	strh	r3, [r0, #8]
 801568e:	8143      	strh	r3, [r0, #10]
 8015690:	8183      	strh	r3, [r0, #12]
 8015692:	81c3      	strh	r3, [r0, #14]
 8015694:	8203      	strh	r3, [r0, #16]
 8015696:	8243      	strh	r3, [r0, #18]
 8015698:	8283      	strh	r3, [r0, #20]
 801569a:	82c3      	strh	r3, [r0, #22]
 801569c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80156a0:	6203      	str	r3, [r0, #32]
 80156a2:	8483      	strh	r3, [r0, #36]	; 0x24
 80156a4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80156a6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80156aa:	4a0e      	ldr	r2, [pc, #56]	; (80156e4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80156ac:	6343      	str	r3, [r0, #52]	; 0x34
 80156ae:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80156b2:	4b0d      	ldr	r3, [pc, #52]	; (80156e8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80156b4:	6042      	str	r2, [r0, #4]
 80156b6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80156ba:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80156bc:	4a0b      	ldr	r2, [pc, #44]	; (80156ec <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80156be:	4604      	mov	r4, r0
 80156c0:	2101      	movs	r1, #1
 80156c2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80156c6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80156ca:	f9b2 1000 	ldrsh.w	r1, [r2]
 80156ce:	4628      	mov	r0, r5
 80156d0:	4798      	blx	r3
 80156d2:	6863      	ldr	r3, [r4, #4]
 80156d4:	4628      	mov	r0, r5
 80156d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80156d8:	4631      	mov	r1, r6
 80156da:	4798      	blx	r3
 80156dc:	4620      	mov	r0, r4
 80156de:	bd70      	pop	{r4, r5, r6, pc}
 80156e0:	0802b89c 	.word	0x0802b89c
 80156e4:	0802b100 	.word	0x0802b100
 80156e8:	200137b2 	.word	0x200137b2
 80156ec:	200137b0 	.word	0x200137b0

080156f0 <_ZN8touchgfx6Screen4drawEv>:
 80156f0:	b507      	push	{r0, r1, r2, lr}
 80156f2:	4b09      	ldr	r3, [pc, #36]	; (8015718 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80156f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80156f8:	4b08      	ldr	r3, [pc, #32]	; (801571c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80156fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80156fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015702:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015706:	6803      	ldr	r3, [r0, #0]
 8015708:	2100      	movs	r1, #0
 801570a:	9100      	str	r1, [sp, #0]
 801570c:	689b      	ldr	r3, [r3, #8]
 801570e:	4669      	mov	r1, sp
 8015710:	4798      	blx	r3
 8015712:	b003      	add	sp, #12
 8015714:	f85d fb04 	ldr.w	pc, [sp], #4
 8015718:	200137b0 	.word	0x200137b0
 801571c:	200137b2 	.word	0x200137b2

08015720 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8015720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015724:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8015728:	2b00      	cmp	r3, #0
 801572a:	b089      	sub	sp, #36	; 0x24
 801572c:	4680      	mov	r8, r0
 801572e:	460c      	mov	r4, r1
 8015730:	4615      	mov	r5, r2
 8015732:	dd0e      	ble.n	8015752 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015734:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8015738:	2b00      	cmp	r3, #0
 801573a:	dd0a      	ble.n	8015752 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801573c:	4628      	mov	r0, r5
 801573e:	f7ff ff5b 	bl	80155f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015742:	4621      	mov	r1, r4
 8015744:	f7fe fa3d 	bl	8013bc2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015748:	69eb      	ldr	r3, [r5, #28]
 801574a:	b928      	cbnz	r0, 8015758 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801574c:	461d      	mov	r5, r3
 801574e:	2b00      	cmp	r3, #0
 8015750:	d1f4      	bne.n	801573c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8015752:	b009      	add	sp, #36	; 0x24
 8015754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015758:	ae04      	add	r6, sp, #16
 801575a:	2b00      	cmp	r3, #0
 801575c:	f000 80b5 	beq.w	80158ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015760:	682b      	ldr	r3, [r5, #0]
 8015762:	4629      	mov	r1, r5
 8015764:	68db      	ldr	r3, [r3, #12]
 8015766:	a802      	add	r0, sp, #8
 8015768:	4798      	blx	r3
 801576a:	4628      	mov	r0, r5
 801576c:	f7ff ff60 	bl	8015630 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8015770:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8015774:	4407      	add	r7, r0
 8015776:	4628      	mov	r0, r5
 8015778:	f7ff ff6e 	bl	8015658 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801577c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015780:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8015784:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015788:	4418      	add	r0, r3
 801578a:	4621      	mov	r1, r4
 801578c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8015790:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015794:	b23f      	sxth	r7, r7
 8015796:	4630      	mov	r0, r6
 8015798:	f8ad 3016 	strh.w	r3, [sp, #22]
 801579c:	f8ad 7010 	strh.w	r7, [sp, #16]
 80157a0:	f7f9 f9dc 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 80157a4:	4628      	mov	r0, r5
 80157a6:	f7ff ff27 	bl	80155f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80157aa:	4602      	mov	r2, r0
 80157ac:	e896 0003 	ldmia.w	r6, {r0, r1}
 80157b0:	ab06      	add	r3, sp, #24
 80157b2:	e883 0003 	stmia.w	r3, {r0, r1}
 80157b6:	4611      	mov	r1, r2
 80157b8:	4618      	mov	r0, r3
 80157ba:	f7f9 f9cf 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 80157be:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80157c2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80157c6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80157ca:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80157ce:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80157d2:	4299      	cmp	r1, r3
 80157d4:	d10b      	bne.n	80157ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80157d6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80157da:	4552      	cmp	r2, sl
 80157dc:	d107      	bne.n	80157ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80157de:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80157e2:	455a      	cmp	r2, fp
 80157e4:	d103      	bne.n	80157ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80157e6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80157ea:	454a      	cmp	r2, r9
 80157ec:	d06d      	beq.n	80158ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80157ee:	f1bb 0f00 	cmp.w	fp, #0
 80157f2:	dd65      	ble.n	80158c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80157f4:	f1b9 0f00 	cmp.w	r9, #0
 80157f8:	dd62      	ble.n	80158c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80157fa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80157fe:	fa1f f08a 	uxth.w	r0, sl
 8015802:	4552      	cmp	r2, sl
 8015804:	9000      	str	r0, [sp, #0]
 8015806:	da12      	bge.n	801582e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8015808:	9301      	str	r3, [sp, #4]
 801580a:	9b00      	ldr	r3, [sp, #0]
 801580c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015810:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015814:	1a9a      	subs	r2, r3, r2
 8015816:	f8ad 1010 	strh.w	r1, [sp, #16]
 801581a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801581e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8015822:	69ea      	ldr	r2, [r5, #28]
 8015824:	4631      	mov	r1, r6
 8015826:	4640      	mov	r0, r8
 8015828:	f7ff ff7a 	bl	8015720 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801582c:	9b01      	ldr	r3, [sp, #4]
 801582e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015832:	429a      	cmp	r2, r3
 8015834:	b29f      	uxth	r7, r3
 8015836:	da0d      	bge.n	8015854 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8015838:	f8ad 2010 	strh.w	r2, [sp, #16]
 801583c:	1aba      	subs	r2, r7, r2
 801583e:	f8ad a012 	strh.w	sl, [sp, #18]
 8015842:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015846:	f8ad 9016 	strh.w	r9, [sp, #22]
 801584a:	69ea      	ldr	r2, [r5, #28]
 801584c:	4631      	mov	r1, r6
 801584e:	4640      	mov	r0, r8
 8015850:	f7ff ff66 	bl	8015720 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015854:	8822      	ldrh	r2, [r4, #0]
 8015856:	88a3      	ldrh	r3, [r4, #4]
 8015858:	445f      	add	r7, fp
 801585a:	4413      	add	r3, r2
 801585c:	b29b      	uxth	r3, r3
 801585e:	b2bf      	uxth	r7, r7
 8015860:	b23a      	sxth	r2, r7
 8015862:	b219      	sxth	r1, r3
 8015864:	4291      	cmp	r1, r2
 8015866:	dd0d      	ble.n	8015884 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8015868:	1bdb      	subs	r3, r3, r7
 801586a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801586e:	f8ad a012 	strh.w	sl, [sp, #18]
 8015872:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015876:	f8ad 9016 	strh.w	r9, [sp, #22]
 801587a:	69ea      	ldr	r2, [r5, #28]
 801587c:	4631      	mov	r1, r6
 801587e:	4640      	mov	r0, r8
 8015880:	f7ff ff4e 	bl	8015720 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015884:	88e2      	ldrh	r2, [r4, #6]
 8015886:	8863      	ldrh	r3, [r4, #2]
 8015888:	4413      	add	r3, r2
 801588a:	9a00      	ldr	r2, [sp, #0]
 801588c:	444a      	add	r2, r9
 801588e:	b29b      	uxth	r3, r3
 8015890:	fa1f f982 	uxth.w	r9, r2
 8015894:	fa0f f289 	sxth.w	r2, r9
 8015898:	b219      	sxth	r1, r3
 801589a:	428a      	cmp	r2, r1
 801589c:	da15      	bge.n	80158ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801589e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80158a2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80158a6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80158aa:	eba3 0309 	sub.w	r3, r3, r9
 80158ae:	f8ad 0010 	strh.w	r0, [sp, #16]
 80158b2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80158b6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80158ba:	69ea      	ldr	r2, [r5, #28]
 80158bc:	4631      	mov	r1, r6
 80158be:	e001      	b.n	80158c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80158c0:	69ea      	ldr	r2, [r5, #28]
 80158c2:	4621      	mov	r1, r4
 80158c4:	4640      	mov	r0, r8
 80158c6:	f7ff ff2b 	bl	8015720 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80158ca:	4628      	mov	r0, r5
 80158cc:	f7ff fe94 	bl	80155f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80158d0:	6861      	ldr	r1, [r4, #4]
 80158d2:	4602      	mov	r2, r0
 80158d4:	6820      	ldr	r0, [r4, #0]
 80158d6:	4633      	mov	r3, r6
 80158d8:	c303      	stmia	r3!, {r0, r1}
 80158da:	4611      	mov	r1, r2
 80158dc:	4630      	mov	r0, r6
 80158de:	f7f9 f93d 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 80158e2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80158e6:	2b00      	cmp	r3, #0
 80158e8:	f77f af33 	ble.w	8015752 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80158ec:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80158f0:	2b00      	cmp	r3, #0
 80158f2:	f77f af2e 	ble.w	8015752 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80158f6:	4628      	mov	r0, r5
 80158f8:	f7ff fe9a 	bl	8015630 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80158fc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8015900:	1a18      	subs	r0, r3, r0
 8015902:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015906:	4628      	mov	r0, r5
 8015908:	f7ff fea6 	bl	8015658 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801590c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8015910:	1a18      	subs	r0, r3, r0
 8015912:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015916:	682b      	ldr	r3, [r5, #0]
 8015918:	4631      	mov	r1, r6
 801591a:	689b      	ldr	r3, [r3, #8]
 801591c:	4628      	mov	r0, r5
 801591e:	4798      	blx	r3
 8015920:	e717      	b.n	8015752 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08015922 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8015922:	b570      	push	{r4, r5, r6, lr}
 8015924:	460c      	mov	r4, r1
 8015926:	b086      	sub	sp, #24
 8015928:	1d06      	adds	r6, r0, #4
 801592a:	2300      	movs	r3, #0
 801592c:	4631      	mov	r1, r6
 801592e:	4605      	mov	r5, r0
 8015930:	a802      	add	r0, sp, #8
 8015932:	9301      	str	r3, [sp, #4]
 8015934:	f7ff fba8 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015938:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801593c:	8822      	ldrh	r2, [r4, #0]
 801593e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8015942:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015946:	f8ad 0014 	strh.w	r0, [sp, #20]
 801594a:	1ad2      	subs	r2, r2, r3
 801594c:	8863      	ldrh	r3, [r4, #2]
 801594e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015952:	1a5b      	subs	r3, r3, r1
 8015954:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8015958:	f8ad 1016 	strh.w	r1, [sp, #22]
 801595c:	aa01      	add	r2, sp, #4
 801595e:	a904      	add	r1, sp, #16
 8015960:	4630      	mov	r0, r6
 8015962:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015966:	f7f9 f9d1 	bl	800ed0c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801596a:	9a01      	ldr	r2, [sp, #4]
 801596c:	b11a      	cbz	r2, 8015976 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801596e:	4621      	mov	r1, r4
 8015970:	4628      	mov	r0, r5
 8015972:	f7ff fed5 	bl	8015720 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015976:	b006      	add	sp, #24
 8015978:	bd70      	pop	{r4, r5, r6, pc}

0801597a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801597a:	b530      	push	{r4, r5, lr}
 801597c:	4602      	mov	r2, r0
 801597e:	4604      	mov	r4, r0
 8015980:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8015984:	b085      	sub	sp, #20
 8015986:	460d      	mov	r5, r1
 8015988:	6851      	ldr	r1, [r2, #4]
 801598a:	466b      	mov	r3, sp
 801598c:	c303      	stmia	r3!, {r0, r1}
 801598e:	4629      	mov	r1, r5
 8015990:	4668      	mov	r0, sp
 8015992:	f7f9 f8e3 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 8015996:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801599a:	b12b      	cbz	r3, 80159a8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801599c:	4669      	mov	r1, sp
 801599e:	4620      	mov	r0, r4
 80159a0:	f7ff ffbf 	bl	8015922 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80159a4:	b005      	add	sp, #20
 80159a6:	bd30      	pop	{r4, r5, pc}
 80159a8:	3404      	adds	r4, #4
 80159aa:	4621      	mov	r1, r4
 80159ac:	a802      	add	r0, sp, #8
 80159ae:	f7ff fb6b 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80159b2:	f8bd 3000 	ldrh.w	r3, [sp]
 80159b6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80159ba:	1a9b      	subs	r3, r3, r2
 80159bc:	f8ad 3000 	strh.w	r3, [sp]
 80159c0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80159c4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80159c8:	4669      	mov	r1, sp
 80159ca:	1a9b      	subs	r3, r3, r2
 80159cc:	4620      	mov	r0, r4
 80159ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 80159d2:	f7f9 f962 	bl	800ec9a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80159d6:	e7e5      	b.n	80159a4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080159d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80159d8:	680a      	ldr	r2, [r1, #0]
 80159da:	460b      	mov	r3, r1
 80159dc:	6992      	ldr	r2, [r2, #24]
 80159de:	1d01      	adds	r1, r0, #4
 80159e0:	4618      	mov	r0, r3
 80159e2:	4710      	bx	r2

080159e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80159e4:	4298      	cmp	r0, r3
 80159e6:	d200      	bcs.n	80159ea <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80159e8:	b913      	cbnz	r3, 80159f0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80159ea:	440a      	add	r2, r1
 80159ec:	b210      	sxth	r0, r2
 80159ee:	4770      	bx	lr
 80159f0:	ee07 0a90 	vmov	s15, r0
 80159f4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80159f8:	ee07 3a90 	vmov	s15, r3
 80159fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a00:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8015a04:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015a08:	ee37 7a66 	vsub.f32	s14, s14, s13
 8015a0c:	ee07 2a90 	vmov	s15, r2
 8015a10:	ee67 5a07 	vmul.f32	s11, s14, s14
 8015a14:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8015a18:	eee5 6a87 	vfma.f32	s13, s11, s14
 8015a1c:	ee07 1a90 	vmov	s15, r1
 8015a20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a24:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8015a28:	eee6 7a26 	vfma.f32	s15, s12, s13
 8015a2c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8015a30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a34:	bfcc      	ite	gt
 8015a36:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8015a3a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8015a3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015a42:	ee17 3a90 	vmov	r3, s15
 8015a46:	b218      	sxth	r0, r3
 8015a48:	4770      	bx	lr

08015a4a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8015a4a:	4298      	cmp	r0, r3
 8015a4c:	d200      	bcs.n	8015a50 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8015a4e:	b913      	cbnz	r3, 8015a56 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8015a50:	440a      	add	r2, r1
 8015a52:	b210      	sxth	r0, r2
 8015a54:	4770      	bx	lr
 8015a56:	ee07 2a90 	vmov	s15, r2
 8015a5a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8015a5e:	ee07 0a90 	vmov	s15, r0
 8015a62:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8015a66:	ee67 7a27 	vmul.f32	s15, s14, s15
 8015a6a:	ee07 3a10 	vmov	s14, r3
 8015a6e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8015a72:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8015a76:	ee07 1a90 	vmov	s15, r1
 8015a7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a7e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015a82:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8015a86:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8015a8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a8e:	bfcc      	ite	gt
 8015a90:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8015a94:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8015a98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015a9c:	ee17 3a90 	vmov	r3, s15
 8015aa0:	b218      	sxth	r0, r3
 8015aa2:	4770      	bx	lr

08015aa4 <_ZN8touchgfx12TextProviderC1Ev>:
 8015aa4:	b538      	push	{r3, r4, r5, lr}
 8015aa6:	2500      	movs	r5, #0
 8015aa8:	2302      	movs	r3, #2
 8015aaa:	4604      	mov	r4, r0
 8015aac:	e9c0 5500 	strd	r5, r5, [r0]
 8015ab0:	7403      	strb	r3, [r0, #16]
 8015ab2:	6145      	str	r5, [r0, #20]
 8015ab4:	7605      	strb	r5, [r0, #24]
 8015ab6:	83c5      	strh	r5, [r0, #30]
 8015ab8:	8405      	strh	r5, [r0, #32]
 8015aba:	86c5      	strh	r5, [r0, #54]	; 0x36
 8015abc:	8705      	strh	r5, [r0, #56]	; 0x38
 8015abe:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8015ac0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8015ac4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8015ac8:	220e      	movs	r2, #14
 8015aca:	4629      	mov	r1, r5
 8015acc:	304c      	adds	r0, #76	; 0x4c
 8015ace:	f011 feac 	bl	802782a <memset>
 8015ad2:	2301      	movs	r3, #1
 8015ad4:	4620      	mov	r0, r4
 8015ad6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8015ada:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015ade:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8015ae2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8015ae6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8015aea:	f7f1 fa17 	bl	8006f1c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8015aee:	4620      	mov	r0, r4
 8015af0:	bd38      	pop	{r3, r4, r5, pc}

08015af2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8015af2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015af4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015af8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8015afa:	fab0 f080 	clz	r0, r0
 8015afe:	0940      	lsrs	r0, r0, #5
 8015b00:	4770      	bx	lr

08015b02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8015b02:	b530      	push	{r4, r5, lr}
 8015b04:	2500      	movs	r5, #0
 8015b06:	2401      	movs	r4, #1
 8015b08:	6843      	ldr	r3, [r0, #4]
 8015b0a:	b913      	cbnz	r3, 8015b12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8015b0c:	6803      	ldr	r3, [r0, #0]
 8015b0e:	b313      	cbz	r3, 8015b56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8015b10:	6043      	str	r3, [r0, #4]
 8015b12:	7e03      	ldrb	r3, [r0, #24]
 8015b14:	b143      	cbz	r3, 8015b28 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8015b16:	6943      	ldr	r3, [r0, #20]
 8015b18:	b12b      	cbz	r3, 8015b26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8015b1a:	881a      	ldrh	r2, [r3, #0]
 8015b1c:	b11a      	cbz	r2, 8015b26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8015b1e:	1c9a      	adds	r2, r3, #2
 8015b20:	6142      	str	r2, [r0, #20]
 8015b22:	8818      	ldrh	r0, [r3, #0]
 8015b24:	bd30      	pop	{r4, r5, pc}
 8015b26:	7605      	strb	r5, [r0, #24]
 8015b28:	6843      	ldr	r3, [r0, #4]
 8015b2a:	8819      	ldrh	r1, [r3, #0]
 8015b2c:	b199      	cbz	r1, 8015b56 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8015b2e:	1c9a      	adds	r2, r3, #2
 8015b30:	2902      	cmp	r1, #2
 8015b32:	6042      	str	r2, [r0, #4]
 8015b34:	d1f5      	bne.n	8015b22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8015b36:	7c03      	ldrb	r3, [r0, #16]
 8015b38:	2b01      	cmp	r3, #1
 8015b3a:	d8e5      	bhi.n	8015b08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015b3c:	1c5a      	adds	r2, r3, #1
 8015b3e:	3302      	adds	r3, #2
 8015b40:	7402      	strb	r2, [r0, #16]
 8015b42:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8015b46:	6143      	str	r3, [r0, #20]
 8015b48:	2b00      	cmp	r3, #0
 8015b4a:	d0dd      	beq.n	8015b08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015b4c:	881b      	ldrh	r3, [r3, #0]
 8015b4e:	2b00      	cmp	r3, #0
 8015b50:	d0da      	beq.n	8015b08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015b52:	7604      	strb	r4, [r0, #24]
 8015b54:	e7d8      	b.n	8015b08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015b56:	2000      	movs	r0, #0
 8015b58:	e7e4      	b.n	8015b24 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08015b5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8015b5a:	b430      	push	{r4, r5}
 8015b5c:	6001      	str	r1, [r0, #0]
 8015b5e:	2100      	movs	r1, #0
 8015b60:	6041      	str	r1, [r0, #4]
 8015b62:	6815      	ldr	r5, [r2, #0]
 8015b64:	6085      	str	r5, [r0, #8]
 8015b66:	6852      	ldr	r2, [r2, #4]
 8015b68:	6443      	str	r3, [r0, #68]	; 0x44
 8015b6a:	9b02      	ldr	r3, [sp, #8]
 8015b6c:	60c2      	str	r2, [r0, #12]
 8015b6e:	7401      	strb	r1, [r0, #16]
 8015b70:	6141      	str	r1, [r0, #20]
 8015b72:	7601      	strb	r1, [r0, #24]
 8015b74:	8701      	strh	r1, [r0, #56]	; 0x38
 8015b76:	8401      	strh	r1, [r0, #32]
 8015b78:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8015b7c:	6483      	str	r3, [r0, #72]	; 0x48
 8015b7e:	bc30      	pop	{r4, r5}
 8015b80:	f7f1 b9cc 	b.w	8006f1c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08015b84 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8015b84:	b408      	push	{r3}
 8015b86:	b510      	push	{r4, lr}
 8015b88:	b085      	sub	sp, #20
 8015b8a:	ac07      	add	r4, sp, #28
 8015b8c:	f854 3b04 	ldr.w	r3, [r4], #4
 8015b90:	9300      	str	r3, [sp, #0]
 8015b92:	4613      	mov	r3, r2
 8015b94:	4622      	mov	r2, r4
 8015b96:	9403      	str	r4, [sp, #12]
 8015b98:	f7ff ffdf 	bl	8015b5a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015b9c:	b005      	add	sp, #20
 8015b9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015ba2:	b001      	add	sp, #4
 8015ba4:	4770      	bx	lr

08015ba6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8015ba6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015ba8:	4605      	mov	r5, r0
 8015baa:	4608      	mov	r0, r1
 8015bac:	b1e9      	cbz	r1, 8015bea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8015bae:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8015bb2:	460b      	mov	r3, r1
 8015bb4:	f101 0708 	add.w	r7, r1, #8
 8015bb8:	4622      	mov	r2, r4
 8015bba:	6818      	ldr	r0, [r3, #0]
 8015bbc:	6859      	ldr	r1, [r3, #4]
 8015bbe:	4626      	mov	r6, r4
 8015bc0:	c603      	stmia	r6!, {r0, r1}
 8015bc2:	3308      	adds	r3, #8
 8015bc4:	42bb      	cmp	r3, r7
 8015bc6:	4634      	mov	r4, r6
 8015bc8:	d1f7      	bne.n	8015bba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8015bca:	6818      	ldr	r0, [r3, #0]
 8015bcc:	6030      	str	r0, [r6, #0]
 8015bce:	889b      	ldrh	r3, [r3, #4]
 8015bd0:	80b3      	strh	r3, [r6, #4]
 8015bd2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8015bd6:	015b      	lsls	r3, r3, #5
 8015bd8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015bdc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8015be0:	430b      	orrs	r3, r1
 8015be2:	425b      	negs	r3, r3
 8015be4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8015be8:	4610      	mov	r0, r2
 8015bea:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015bec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8015bec:	b538      	push	{r3, r4, r5, lr}
 8015bee:	460c      	mov	r4, r1
 8015bf0:	6811      	ldr	r1, [r2, #0]
 8015bf2:	4610      	mov	r0, r2
 8015bf4:	68cd      	ldr	r5, [r1, #12]
 8015bf6:	4619      	mov	r1, r3
 8015bf8:	47a8      	blx	r5
 8015bfa:	2800      	cmp	r0, #0
 8015bfc:	bf08      	it	eq
 8015bfe:	4620      	moveq	r0, r4
 8015c00:	bd38      	pop	{r3, r4, r5, pc}
	...

08015c04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8015c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c06:	4604      	mov	r4, r0
 8015c08:	4615      	mov	r5, r2
 8015c0a:	4608      	mov	r0, r1
 8015c0c:	b93a      	cbnz	r2, 8015c1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8015c0e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8015c12:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8015c16:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8015c1a:	4628      	mov	r0, r5
 8015c1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015c1e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8015c22:	8893      	ldrh	r3, [r2, #4]
 8015c24:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8015c28:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8015c2c:	79ee      	ldrb	r6, [r5, #7]
 8015c2e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8015c32:	4316      	orrs	r6, r2
 8015c34:	19da      	adds	r2, r3, r7
 8015c36:	b291      	uxth	r1, r2
 8015c38:	291d      	cmp	r1, #29
 8015c3a:	b2b7      	uxth	r7, r6
 8015c3c:	d87a      	bhi.n	8015d34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8015c3e:	2201      	movs	r2, #1
 8015c40:	408a      	lsls	r2, r1
 8015c42:	4975      	ldr	r1, [pc, #468]	; (8015e18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8015c44:	420a      	tst	r2, r1
 8015c46:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8015c4a:	d12d      	bne.n	8015ca8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8015c4c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8015c50:	d070      	beq.n	8015d34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8015c52:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8015c56:	462b      	mov	r3, r5
 8015c58:	f105 0e08 	add.w	lr, r5, #8
 8015c5c:	4615      	mov	r5, r2
 8015c5e:	6818      	ldr	r0, [r3, #0]
 8015c60:	6859      	ldr	r1, [r3, #4]
 8015c62:	4694      	mov	ip, r2
 8015c64:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015c68:	3308      	adds	r3, #8
 8015c6a:	4573      	cmp	r3, lr
 8015c6c:	4662      	mov	r2, ip
 8015c6e:	d1f6      	bne.n	8015c5e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8015c70:	6818      	ldr	r0, [r3, #0]
 8015c72:	f8cc 0000 	str.w	r0, [ip]
 8015c76:	889b      	ldrh	r3, [r3, #4]
 8015c78:	f8ac 3004 	strh.w	r3, [ip, #4]
 8015c7c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8015c80:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8015c84:	b2b3      	uxth	r3, r6
 8015c86:	1aca      	subs	r2, r1, r3
 8015c88:	b292      	uxth	r2, r2
 8015c8a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8015c8e:	10d2      	asrs	r2, r2, #3
 8015c90:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8015c94:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8015c98:	4302      	orrs	r2, r0
 8015c9a:	1bcf      	subs	r7, r1, r7
 8015c9c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8015ca0:	1afb      	subs	r3, r7, r3
 8015ca2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8015ca6:	e7b8      	b.n	8015c1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8015ca8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015caa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015cae:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8015cb0:	f640 6333 	movw	r3, #3635	; 0xe33
 8015cb4:	4299      	cmp	r1, r3
 8015cb6:	d110      	bne.n	8015cda <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8015cb8:	6803      	ldr	r3, [r0, #0]
 8015cba:	68db      	ldr	r3, [r3, #12]
 8015cbc:	4798      	blx	r3
 8015cbe:	7b41      	ldrb	r1, [r0, #13]
 8015cc0:	00cb      	lsls	r3, r1, #3
 8015cc2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015cc6:	7a03      	ldrb	r3, [r0, #8]
 8015cc8:	0648      	lsls	r0, r1, #25
 8015cca:	ea43 0302 	orr.w	r3, r3, r2
 8015cce:	bf44      	itt	mi
 8015cd0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015cd4:	b21b      	sxthmi	r3, r3
 8015cd6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015cda:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8015cde:	443b      	add	r3, r7
 8015ce0:	4433      	add	r3, r6
 8015ce2:	b29b      	uxth	r3, r3
 8015ce4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8015ce8:	462a      	mov	r2, r5
 8015cea:	f105 0c08 	add.w	ip, r5, #8
 8015cee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015cf2:	4635      	mov	r5, r6
 8015cf4:	6810      	ldr	r0, [r2, #0]
 8015cf6:	6851      	ldr	r1, [r2, #4]
 8015cf8:	4637      	mov	r7, r6
 8015cfa:	c703      	stmia	r7!, {r0, r1}
 8015cfc:	3208      	adds	r2, #8
 8015cfe:	4562      	cmp	r2, ip
 8015d00:	463e      	mov	r6, r7
 8015d02:	d1f7      	bne.n	8015cf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8015d04:	6810      	ldr	r0, [r2, #0]
 8015d06:	6038      	str	r0, [r7, #0]
 8015d08:	8892      	ldrh	r2, [r2, #4]
 8015d0a:	80ba      	strh	r2, [r7, #4]
 8015d0c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8015d10:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8015d14:	10db      	asrs	r3, r3, #3
 8015d16:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8015d1a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8015d1e:	4313      	orrs	r3, r2
 8015d20:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8015d24:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8015d28:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8015d2c:	1a9b      	subs	r3, r3, r2
 8015d2e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8015d32:	e772      	b.n	8015c1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8015d34:	f023 0204 	bic.w	r2, r3, #4
 8015d38:	f640 611b 	movw	r1, #3611	; 0xe1b
 8015d3c:	428a      	cmp	r2, r1
 8015d3e:	d003      	beq.n	8015d48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8015d40:	f640 621d 	movw	r2, #3613	; 0xe1d
 8015d44:	4293      	cmp	r3, r2
 8015d46:	d120      	bne.n	8015d8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8015d48:	3b01      	subs	r3, #1
 8015d4a:	4602      	mov	r2, r0
 8015d4c:	b29b      	uxth	r3, r3
 8015d4e:	4629      	mov	r1, r5
 8015d50:	4620      	mov	r0, r4
 8015d52:	f7ff ff4b 	bl	8015bec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015d56:	7b41      	ldrb	r1, [r0, #13]
 8015d58:	00cb      	lsls	r3, r1, #3
 8015d5a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015d5e:	7a03      	ldrb	r3, [r0, #8]
 8015d60:	0649      	lsls	r1, r1, #25
 8015d62:	ea43 0302 	orr.w	r3, r3, r2
 8015d66:	bf44      	itt	mi
 8015d68:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015d6c:	b21b      	sxthmi	r3, r3
 8015d6e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015d72:	7b6b      	ldrb	r3, [r5, #13]
 8015d74:	7aaa      	ldrb	r2, [r5, #10]
 8015d76:	005b      	lsls	r3, r3, #1
 8015d78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015d7c:	4313      	orrs	r3, r2
 8015d7e:	115a      	asrs	r2, r3, #5
 8015d80:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8015d84:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8015d88:	e036      	b.n	8015df8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8015d8a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8015d8e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8015d92:	7a2a      	ldrb	r2, [r5, #8]
 8015d94:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8015d98:	ea42 0201 	orr.w	r2, r2, r1
 8015d9c:	bf1c      	itt	ne
 8015d9e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8015da2:	b212      	sxthne	r2, r2
 8015da4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8015da8:	f640 6109 	movw	r1, #3593	; 0xe09
 8015dac:	f023 0210 	bic.w	r2, r3, #16
 8015db0:	428a      	cmp	r2, r1
 8015db2:	d003      	beq.n	8015dbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8015db4:	f640 6213 	movw	r2, #3603	; 0xe13
 8015db8:	4293      	cmp	r3, r2
 8015dba:	d12a      	bne.n	8015e12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8015dbc:	7b6e      	ldrb	r6, [r5, #13]
 8015dbe:	0076      	lsls	r6, r6, #1
 8015dc0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8015dc4:	7aae      	ldrb	r6, [r5, #10]
 8015dc6:	4316      	orrs	r6, r2
 8015dc8:	f640 6213 	movw	r2, #3603	; 0xe13
 8015dcc:	4293      	cmp	r3, r2
 8015dce:	bf18      	it	ne
 8015dd0:	f103 33ff 	addne.w	r3, r3, #4294967295
 8015dd4:	4602      	mov	r2, r0
 8015dd6:	bf14      	ite	ne
 8015dd8:	b29b      	uxthne	r3, r3
 8015dda:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8015dde:	4629      	mov	r1, r5
 8015de0:	4620      	mov	r0, r4
 8015de2:	f7ff ff03 	bl	8015bec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015de6:	7b43      	ldrb	r3, [r0, #13]
 8015de8:	7a82      	ldrb	r2, [r0, #10]
 8015dea:	005b      	lsls	r3, r3, #1
 8015dec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015df0:	4313      	orrs	r3, r2
 8015df2:	1af6      	subs	r6, r6, r3
 8015df4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8015df8:	7b69      	ldrb	r1, [r5, #13]
 8015dfa:	00cb      	lsls	r3, r1, #3
 8015dfc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015e00:	7a2b      	ldrb	r3, [r5, #8]
 8015e02:	4313      	orrs	r3, r2
 8015e04:	064a      	lsls	r2, r1, #25
 8015e06:	bf44      	itt	mi
 8015e08:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015e0c:	b21b      	sxthmi	r3, r3
 8015e0e:	1bdb      	subs	r3, r3, r7
 8015e10:	e747      	b.n	8015ca2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8015e12:	2300      	movs	r3, #0
 8015e14:	e7b6      	b.n	8015d84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8015e16:	bf00      	nop
 8015e18:	3fc00079 	.word	0x3fc00079

08015e1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8015e1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015e20:	4604      	mov	r4, r0
 8015e22:	b942      	cbnz	r2, 8015e36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8015e24:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015e28:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8015e2c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8015e30:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8015e34:	e047      	b.n	8015ec6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015e36:	7b51      	ldrb	r1, [r2, #13]
 8015e38:	8893      	ldrh	r3, [r2, #4]
 8015e3a:	010d      	lsls	r5, r1, #4
 8015e3c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8015e40:	79d5      	ldrb	r5, [r2, #7]
 8015e42:	4305      	orrs	r5, r0
 8015e44:	2d04      	cmp	r5, #4
 8015e46:	bfcc      	ite	gt
 8015e48:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8015e4c:	f04f 0e01 	movle.w	lr, #1
 8015e50:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8015e54:	f200 80ab 	bhi.w	8015fae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8015e58:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8015e5c:	4283      	cmp	r3, r0
 8015e5e:	d216      	bcs.n	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e60:	f240 605b 	movw	r0, #1627	; 0x65b
 8015e64:	4283      	cmp	r3, r0
 8015e66:	d859      	bhi.n	8015f1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8015e68:	f240 6057 	movw	r0, #1623	; 0x657
 8015e6c:	4283      	cmp	r3, r0
 8015e6e:	d20e      	bcs.n	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e70:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8015e74:	d24a      	bcs.n	8015f0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8015e76:	f240 604e 	movw	r0, #1614	; 0x64e
 8015e7a:	4283      	cmp	r3, r0
 8015e7c:	d207      	bcs.n	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e7e:	f240 601a 	movw	r0, #1562	; 0x61a
 8015e82:	4283      	cmp	r3, r0
 8015e84:	d02a      	beq.n	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015e86:	d821      	bhi.n	8015ecc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8015e88:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8015e8c:	d35b      	bcc.n	8015f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015e8e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8015e92:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015e96:	f040 80d0 	bne.w	801603a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015e9a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8015e9e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015ea2:	f040 80ca 	bne.w	801603a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015ea6:	00cb      	lsls	r3, r1, #3
 8015ea8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015eac:	7a13      	ldrb	r3, [r2, #8]
 8015eae:	0649      	lsls	r1, r1, #25
 8015eb0:	ea43 0300 	orr.w	r3, r3, r0
 8015eb4:	bf44      	itt	mi
 8015eb6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015eba:	b21b      	sxthmi	r3, r3
 8015ebc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015ec0:	1b5d      	subs	r5, r3, r5
 8015ec2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015ec6:	4610      	mov	r0, r2
 8015ec8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015ecc:	f240 604b 	movw	r0, #1611	; 0x64b
 8015ed0:	4283      	cmp	r3, r0
 8015ed2:	d338      	bcc.n	8015f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015ed4:	f240 604c 	movw	r0, #1612	; 0x64c
 8015ed8:	4283      	cmp	r3, r0
 8015eda:	d9d8      	bls.n	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015edc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8015ee0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8015ee4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015ee8:	f040 80f2 	bne.w	80160d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8015eec:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015ef0:	f040 80ee 	bne.w	80160d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8015ef4:	00cb      	lsls	r3, r1, #3
 8015ef6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015efa:	7a13      	ldrb	r3, [r2, #8]
 8015efc:	064e      	lsls	r6, r1, #25
 8015efe:	ea43 0300 	orr.w	r3, r3, r0
 8015f02:	bf44      	itt	mi
 8015f04:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015f08:	b21b      	sxthmi	r3, r3
 8015f0a:	e7d9      	b.n	8015ec0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8015f0c:	f240 6054 	movw	r0, #1620	; 0x654
 8015f10:	4283      	cmp	r3, r0
 8015f12:	d8e3      	bhi.n	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f14:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8015f18:	d9e0      	bls.n	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f1a:	e7b8      	b.n	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f1c:	f240 6074 	movw	r0, #1652	; 0x674
 8015f20:	4283      	cmp	r3, r0
 8015f22:	d0b4      	beq.n	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f24:	d82d      	bhi.n	8015f82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8015f26:	f240 605e 	movw	r0, #1630	; 0x65e
 8015f2a:	4283      	cmp	r3, r0
 8015f2c:	d804      	bhi.n	8015f38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8015f2e:	f240 605d 	movw	r0, #1629	; 0x65d
 8015f32:	4283      	cmp	r3, r0
 8015f34:	d3d2      	bcc.n	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f36:	e7aa      	b.n	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f38:	f240 605f 	movw	r0, #1631	; 0x65f
 8015f3c:	4283      	cmp	r3, r0
 8015f3e:	d0cd      	beq.n	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015f40:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8015f44:	d0a3      	beq.n	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f46:	00cb      	lsls	r3, r1, #3
 8015f48:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015f4c:	7a13      	ldrb	r3, [r2, #8]
 8015f4e:	0649      	lsls	r1, r1, #25
 8015f50:	ea43 0300 	orr.w	r3, r3, r0
 8015f54:	bf44      	itt	mi
 8015f56:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015f5a:	b21b      	sxthmi	r3, r3
 8015f5c:	1b5d      	subs	r5, r3, r5
 8015f5e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015f62:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015f66:	7b53      	ldrb	r3, [r2, #13]
 8015f68:	015b      	lsls	r3, r3, #5
 8015f6a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015f6e:	7993      	ldrb	r3, [r2, #6]
 8015f70:	430b      	orrs	r3, r1
 8015f72:	005b      	lsls	r3, r3, #1
 8015f74:	2105      	movs	r1, #5
 8015f76:	fb93 f3f1 	sdiv	r3, r3, r1
 8015f7a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8015f7e:	440b      	add	r3, r1
 8015f80:	e756      	b.n	8015e30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8015f82:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8015f86:	4283      	cmp	r3, r0
 8015f88:	d809      	bhi.n	8015f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8015f8a:	f240 60df 	movw	r0, #1759	; 0x6df
 8015f8e:	4283      	cmp	r3, r0
 8015f90:	f4bf af7d 	bcs.w	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f94:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8015f98:	2b05      	cmp	r3, #5
 8015f9a:	d8d4      	bhi.n	8015f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015f9c:	e777      	b.n	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015f9e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8015fa2:	4283      	cmp	r3, r0
 8015fa4:	d09a      	beq.n	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015fa6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8015faa:	4283      	cmp	r3, r0
 8015fac:	e7ca      	b.n	8015f44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8015fae:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8015fb2:	d22b      	bcs.n	801600c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8015fb4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8015fb8:	4283      	cmp	r3, r0
 8015fba:	d28f      	bcs.n	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015fbc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8015fc0:	4283      	cmp	r3, r0
 8015fc2:	d816      	bhi.n	8015ff2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8015fc4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8015fc8:	4283      	cmp	r3, r0
 8015fca:	f4bf af60 	bcs.w	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015fce:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8015fd2:	4283      	cmp	r3, r0
 8015fd4:	d80a      	bhi.n	8015fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8015fd6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8015fda:	4283      	cmp	r3, r0
 8015fdc:	f4bf af57 	bcs.w	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015fe0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8015fe4:	4283      	cmp	r3, r0
 8015fe6:	f43f af79 	beq.w	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015fea:	e7ac      	b.n	8015f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015fec:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8015ff0:	e7f8      	b.n	8015fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8015ff2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8015ff6:	4283      	cmp	r3, r0
 8015ff8:	d802      	bhi.n	8016000 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8015ffa:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8015ffe:	e798      	b.n	8015f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016000:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8016004:	4283      	cmp	r3, r0
 8016006:	f47f af42 	bne.w	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801600a:	e767      	b.n	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801600c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8016010:	4283      	cmp	r3, r0
 8016012:	f43f af63 	beq.w	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016016:	d802      	bhi.n	801601e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016018:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801601c:	e7f2      	b.n	8016004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801601e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8016022:	4283      	cmp	r3, r0
 8016024:	d805      	bhi.n	8016032 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8016026:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801602a:	4283      	cmp	r3, r0
 801602c:	f4ff af2f 	bcc.w	8015e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016030:	e754      	b.n	8015edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016032:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8016036:	4283      	cmp	r3, r0
 8016038:	e7af      	b.n	8015f9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801603a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801603e:	4617      	mov	r7, r2
 8016040:	f102 0808 	add.w	r8, r2, #8
 8016044:	4666      	mov	r6, ip
 8016046:	6838      	ldr	r0, [r7, #0]
 8016048:	6879      	ldr	r1, [r7, #4]
 801604a:	46e6      	mov	lr, ip
 801604c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016050:	3708      	adds	r7, #8
 8016052:	4547      	cmp	r7, r8
 8016054:	46f4      	mov	ip, lr
 8016056:	d1f6      	bne.n	8016046 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8016058:	6838      	ldr	r0, [r7, #0]
 801605a:	f8ce 0000 	str.w	r0, [lr]
 801605e:	88b9      	ldrh	r1, [r7, #4]
 8016060:	f8ae 1004 	strh.w	r1, [lr, #4]
 8016064:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016068:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801606c:	d009      	beq.n	8016082 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801606e:	7b51      	ldrb	r1, [r2, #13]
 8016070:	7992      	ldrb	r2, [r2, #6]
 8016072:	0149      	lsls	r1, r1, #5
 8016074:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016078:	4311      	orrs	r1, r2
 801607a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801607e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016082:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016086:	b2ad      	uxth	r5, r5
 8016088:	d00d      	beq.n	80160a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801608a:	442b      	add	r3, r5
 801608c:	b29b      	uxth	r3, r3
 801608e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016092:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016096:	10db      	asrs	r3, r3, #3
 8016098:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801609c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80160a0:	4313      	orrs	r3, r2
 80160a2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80160a6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80160aa:	00cb      	lsls	r3, r1, #3
 80160ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80160b0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80160b4:	064f      	lsls	r7, r1, #25
 80160b6:	ea43 0302 	orr.w	r3, r3, r2
 80160ba:	bf44      	itt	mi
 80160bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80160c0:	b21b      	sxthmi	r3, r3
 80160c2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80160c6:	1b5b      	subs	r3, r3, r5
 80160c8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80160cc:	4632      	mov	r2, r6
 80160ce:	e6fa      	b.n	8015ec6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80160d0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80160d4:	4617      	mov	r7, r2
 80160d6:	f102 0908 	add.w	r9, r2, #8
 80160da:	4666      	mov	r6, ip
 80160dc:	6838      	ldr	r0, [r7, #0]
 80160de:	6879      	ldr	r1, [r7, #4]
 80160e0:	46e0      	mov	r8, ip
 80160e2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80160e6:	3708      	adds	r7, #8
 80160e8:	454f      	cmp	r7, r9
 80160ea:	46c4      	mov	ip, r8
 80160ec:	d1f6      	bne.n	80160dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80160ee:	6838      	ldr	r0, [r7, #0]
 80160f0:	f8c8 0000 	str.w	r0, [r8]
 80160f4:	88b9      	ldrh	r1, [r7, #4]
 80160f6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80160fa:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80160fe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016102:	d009      	beq.n	8016118 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016104:	7b51      	ldrb	r1, [r2, #13]
 8016106:	7992      	ldrb	r2, [r2, #6]
 8016108:	0149      	lsls	r1, r1, #5
 801610a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801610e:	4311      	orrs	r1, r2
 8016110:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016114:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016118:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801611c:	d00e      	beq.n	801613c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801611e:	eba3 030e 	sub.w	r3, r3, lr
 8016122:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016126:	b29b      	uxth	r3, r3
 8016128:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801612c:	10db      	asrs	r3, r3, #3
 801612e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016132:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016136:	4313      	orrs	r3, r2
 8016138:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801613c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016140:	00cb      	lsls	r3, r1, #3
 8016142:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016146:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801614a:	0648      	lsls	r0, r1, #25
 801614c:	ea43 0302 	orr.w	r3, r3, r2
 8016150:	bf44      	itt	mi
 8016152:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016156:	b21b      	sxthmi	r3, r3
 8016158:	1b5d      	subs	r5, r3, r5
 801615a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801615e:	e7b5      	b.n	80160cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08016160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8016160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016164:	461e      	mov	r6, r3
 8016166:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016168:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801616c:	4604      	mov	r4, r0
 801616e:	4617      	mov	r7, r2
 8016170:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016174:	f7f0 fe90 	bl	8006e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016178:	4605      	mov	r5, r0
 801617a:	b918      	cbnz	r0, 8016184 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801617c:	6030      	str	r0, [r6, #0]
 801617e:	4628      	mov	r0, r5
 8016180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016184:	683b      	ldr	r3, [r7, #0]
 8016186:	4601      	mov	r1, r0
 8016188:	68db      	ldr	r3, [r3, #12]
 801618a:	4638      	mov	r0, r7
 801618c:	4798      	blx	r3
 801618e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8016192:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8016196:	4602      	mov	r2, r0
 8016198:	6030      	str	r0, [r6, #0]
 801619a:	d213      	bcs.n	80161c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801619c:	4643      	mov	r3, r8
 801619e:	4639      	mov	r1, r7
 80161a0:	4620      	mov	r0, r4
 80161a2:	f7ff fe3b 	bl	8015e1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80161a6:	6030      	str	r0, [r6, #0]
 80161a8:	6833      	ldr	r3, [r6, #0]
 80161aa:	b143      	cbz	r3, 80161be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80161ac:	7b5a      	ldrb	r2, [r3, #13]
 80161ae:	7a9b      	ldrb	r3, [r3, #10]
 80161b0:	0052      	lsls	r2, r2, #1
 80161b2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80161b6:	4313      	orrs	r3, r2
 80161b8:	bf0c      	ite	eq
 80161ba:	2301      	moveq	r3, #1
 80161bc:	2300      	movne	r3, #0
 80161be:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80161c2:	e7dc      	b.n	801617e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80161c4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80161c8:	b29b      	uxth	r3, r3
 80161ca:	2b7f      	cmp	r3, #127	; 0x7f
 80161cc:	d804      	bhi.n	80161d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80161ce:	4639      	mov	r1, r7
 80161d0:	4620      	mov	r0, r4
 80161d2:	f7ff fd17 	bl	8015c04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80161d6:	e7e6      	b.n	80161a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80161d8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80161dc:	2b00      	cmp	r3, #0
 80161de:	d0e3      	beq.n	80161a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80161e0:	f640 1302 	movw	r3, #2306	; 0x902
 80161e4:	429d      	cmp	r5, r3
 80161e6:	d1df      	bne.n	80161a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80161e8:	4601      	mov	r1, r0
 80161ea:	4620      	mov	r0, r4
 80161ec:	f7ff fcdb 	bl	8015ba6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80161f0:	e7d9      	b.n	80161a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080161f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80161f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80161f6:	461e      	mov	r6, r3
 80161f8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80161fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80161fe:	4604      	mov	r4, r0
 8016200:	4617      	mov	r7, r2
 8016202:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016206:	f7f0 fe47 	bl	8006e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801620a:	4605      	mov	r5, r0
 801620c:	b918      	cbnz	r0, 8016216 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801620e:	6030      	str	r0, [r6, #0]
 8016210:	4628      	mov	r0, r5
 8016212:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016216:	683b      	ldr	r3, [r7, #0]
 8016218:	4601      	mov	r1, r0
 801621a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801621e:	4638      	mov	r0, r7
 8016220:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8016224:	47c8      	blx	r9
 8016226:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801622a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801622e:	4602      	mov	r2, r0
 8016230:	6030      	str	r0, [r6, #0]
 8016232:	d213      	bcs.n	801625c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8016234:	4643      	mov	r3, r8
 8016236:	4639      	mov	r1, r7
 8016238:	4620      	mov	r0, r4
 801623a:	f7ff fdef 	bl	8015e1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801623e:	6030      	str	r0, [r6, #0]
 8016240:	6833      	ldr	r3, [r6, #0]
 8016242:	b143      	cbz	r3, 8016256 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8016244:	7b5a      	ldrb	r2, [r3, #13]
 8016246:	7a9b      	ldrb	r3, [r3, #10]
 8016248:	0052      	lsls	r2, r2, #1
 801624a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801624e:	4313      	orrs	r3, r2
 8016250:	bf0c      	ite	eq
 8016252:	2301      	moveq	r3, #1
 8016254:	2300      	movne	r3, #0
 8016256:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801625a:	e7d9      	b.n	8016210 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801625c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8016260:	b29b      	uxth	r3, r3
 8016262:	2b7f      	cmp	r3, #127	; 0x7f
 8016264:	d804      	bhi.n	8016270 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8016266:	4639      	mov	r1, r7
 8016268:	4620      	mov	r0, r4
 801626a:	f7ff fccb 	bl	8015c04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801626e:	e7e6      	b.n	801623e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8016270:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8016274:	2b00      	cmp	r3, #0
 8016276:	d0e3      	beq.n	8016240 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016278:	f640 1302 	movw	r3, #2306	; 0x902
 801627c:	429d      	cmp	r5, r3
 801627e:	d1df      	bne.n	8016240 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016280:	4601      	mov	r1, r0
 8016282:	4620      	mov	r0, r4
 8016284:	f7ff fc8f 	bl	8015ba6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016288:	e7d9      	b.n	801623e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801628a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801628a:	b510      	push	{r4, lr}
 801628c:	4604      	mov	r4, r0
 801628e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016292:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016294:	b1f1      	cbz	r1, 80162d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016296:	2b0a      	cmp	r3, #10
 8016298:	d02f      	beq.n	80162fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801629a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801629c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80162a0:	3901      	subs	r1, #1
 80162a2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80162a4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80162a8:	1c51      	adds	r1, r2, #1
 80162aa:	b289      	uxth	r1, r1
 80162ac:	2901      	cmp	r1, #1
 80162ae:	bf84      	itt	hi
 80162b0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80162b4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80162b6:	f103 0201 	add.w	r2, r3, #1
 80162ba:	8722      	strh	r2, [r4, #56]	; 0x38
 80162bc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80162be:	bf98      	it	ls
 80162c0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80162c2:	4413      	add	r3, r2
 80162c4:	b29b      	uxth	r3, r3
 80162c6:	2b09      	cmp	r3, #9
 80162c8:	bf88      	it	hi
 80162ca:	3b0a      	subhi	r3, #10
 80162cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80162d0:	8458      	strh	r0, [r3, #34]	; 0x22
 80162d2:	e7dc      	b.n	801628e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80162d4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80162d6:	2b0a      	cmp	r3, #10
 80162d8:	d00f      	beq.n	80162fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80162da:	4620      	mov	r0, r4
 80162dc:	f7ff fc11 	bl	8015b02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80162e0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80162e2:	1c5a      	adds	r2, r3, #1
 80162e4:	8722      	strh	r2, [r4, #56]	; 0x38
 80162e6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80162e8:	4413      	add	r3, r2
 80162ea:	b29b      	uxth	r3, r3
 80162ec:	2b09      	cmp	r3, #9
 80162ee:	bf88      	it	hi
 80162f0:	3b0a      	subhi	r3, #10
 80162f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80162f6:	8458      	strh	r0, [r3, #34]	; 0x22
 80162f8:	e7ec      	b.n	80162d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80162fa:	bd10      	pop	{r4, pc}

080162fc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80162fc:	b538      	push	{r3, r4, r5, lr}
 80162fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016300:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8016304:	4604      	mov	r4, r0
 8016306:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8016308:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801630a:	3a01      	subs	r2, #1
 801630c:	8702      	strh	r2, [r0, #56]	; 0x38
 801630e:	1c5a      	adds	r2, r3, #1
 8016310:	b292      	uxth	r2, r2
 8016312:	2a09      	cmp	r2, #9
 8016314:	bf86      	itte	hi
 8016316:	3b09      	subhi	r3, #9
 8016318:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801631a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801631c:	f7ff ffb5 	bl	801628a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8016320:	8c23      	ldrh	r3, [r4, #32]
 8016322:	2b01      	cmp	r3, #1
 8016324:	bf9c      	itt	ls
 8016326:	3301      	addls	r3, #1
 8016328:	8423      	strhls	r3, [r4, #32]
 801632a:	8be3      	ldrh	r3, [r4, #30]
 801632c:	b90b      	cbnz	r3, 8016332 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801632e:	2302      	movs	r3, #2
 8016330:	83e3      	strh	r3, [r4, #30]
 8016332:	8be3      	ldrh	r3, [r4, #30]
 8016334:	3b01      	subs	r3, #1
 8016336:	b29b      	uxth	r3, r3
 8016338:	83e3      	strh	r3, [r4, #30]
 801633a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801633e:	4628      	mov	r0, r5
 8016340:	8365      	strh	r5, [r4, #26]
 8016342:	bd38      	pop	{r3, r4, r5, pc}

08016344 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8016344:	428a      	cmp	r2, r1
 8016346:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801634a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801634c:	d931      	bls.n	80163b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801634e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8016350:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8016354:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8016358:	19ee      	adds	r6, r5, r7
 801635a:	1a54      	subs	r4, r2, r1
 801635c:	3e01      	subs	r6, #1
 801635e:	fa1f fe84 	uxth.w	lr, r4
 8016362:	b2b4      	uxth	r4, r6
 8016364:	eba4 090e 	sub.w	r9, r4, lr
 8016368:	fa1f f989 	uxth.w	r9, r9
 801636c:	2c09      	cmp	r4, #9
 801636e:	4626      	mov	r6, r4
 8016370:	bf88      	it	hi
 8016372:	f1a4 060a 	subhi.w	r6, r4, #10
 8016376:	f1bc 0f00 	cmp.w	ip, #0
 801637a:	bf08      	it	eq
 801637c:	f04f 0c02 	moveq.w	ip, #2
 8016380:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016384:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016388:	fa1f fc8c 	uxth.w	ip, ip
 801638c:	3c01      	subs	r4, #1
 801638e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8016392:	b2a4      	uxth	r4, r4
 8016394:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8016398:	454c      	cmp	r4, r9
 801639a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801639e:	d1e5      	bne.n	801636c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80163a0:	eba5 050e 	sub.w	r5, r5, lr
 80163a4:	eb0e 0408 	add.w	r4, lr, r8
 80163a8:	8705      	strh	r5, [r0, #56]	; 0x38
 80163aa:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80163ae:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80163b2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80163b4:	1a64      	subs	r4, r4, r1
 80163b6:	4439      	add	r1, r7
 80163b8:	b289      	uxth	r1, r1
 80163ba:	2909      	cmp	r1, #9
 80163bc:	bf88      	it	hi
 80163be:	390a      	subhi	r1, #10
 80163c0:	8704      	strh	r4, [r0, #56]	; 0x38
 80163c2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80163c4:	250a      	movs	r5, #10
 80163c6:	b18a      	cbz	r2, 80163ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80163c8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80163ca:	3a01      	subs	r2, #1
 80163cc:	b292      	uxth	r2, r2
 80163ce:	3101      	adds	r1, #1
 80163d0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80163d4:	8701      	strh	r1, [r0, #56]	; 0x38
 80163d6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80163d8:	b901      	cbnz	r1, 80163dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80163da:	86c5      	strh	r5, [r0, #54]	; 0x36
 80163dc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80163de:	3901      	subs	r1, #1
 80163e0:	b289      	uxth	r1, r1
 80163e2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80163e4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80163e8:	844c      	strh	r4, [r1, #34]	; 0x22
 80163ea:	e7ec      	b.n	80163c6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80163ec:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80163f0:	f7ff bf4b 	b.w	801628a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080163f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80163f4:	b570      	push	{r4, r5, r6, lr}
 80163f6:	2500      	movs	r5, #0
 80163f8:	4295      	cmp	r5, r2
 80163fa:	d011      	beq.n	8016420 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80163fc:	8bc4      	ldrh	r4, [r0, #30]
 80163fe:	f831 6b02 	ldrh.w	r6, [r1], #2
 8016402:	4414      	add	r4, r2
 8016404:	3c01      	subs	r4, #1
 8016406:	1b64      	subs	r4, r4, r5
 8016408:	b2a4      	uxth	r4, r4
 801640a:	2c01      	cmp	r4, #1
 801640c:	bf88      	it	hi
 801640e:	3c02      	subhi	r4, #2
 8016410:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016414:	8b64      	ldrh	r4, [r4, #26]
 8016416:	42b4      	cmp	r4, r6
 8016418:	d117      	bne.n	801644a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801641a:	3501      	adds	r5, #1
 801641c:	b2ad      	uxth	r5, r5
 801641e:	e7eb      	b.n	80163f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8016420:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016424:	2400      	movs	r4, #0
 8016426:	4413      	add	r3, r2
 8016428:	b2a2      	uxth	r2, r4
 801642a:	429a      	cmp	r2, r3
 801642c:	da0f      	bge.n	801644e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801642e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8016430:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8016434:	4432      	add	r2, r6
 8016436:	b292      	uxth	r2, r2
 8016438:	2a09      	cmp	r2, #9
 801643a:	bf88      	it	hi
 801643c:	3a0a      	subhi	r2, #10
 801643e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016442:	3401      	adds	r4, #1
 8016444:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8016446:	42aa      	cmp	r2, r5
 8016448:	d0ee      	beq.n	8016428 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801644a:	2000      	movs	r0, #0
 801644c:	bd70      	pop	{r4, r5, r6, pc}
 801644e:	2001      	movs	r0, #1
 8016450:	e7fc      	b.n	801644c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08016452 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8016452:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016456:	4605      	mov	r5, r0
 8016458:	4616      	mov	r6, r2
 801645a:	1c8c      	adds	r4, r1, #2
 801645c:	8809      	ldrh	r1, [r1, #0]
 801645e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8016462:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8016466:	42b3      	cmp	r3, r6
 8016468:	d124      	bne.n	80164b4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801646a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801646e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8016472:	f001 070f 	and.w	r7, r1, #15
 8016476:	f8cd 8000 	str.w	r8, [sp]
 801647a:	464b      	mov	r3, r9
 801647c:	4652      	mov	r2, sl
 801647e:	4621      	mov	r1, r4
 8016480:	4628      	mov	r0, r5
 8016482:	f7ff ffb7 	bl	80163f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8016486:	4683      	mov	fp, r0
 8016488:	b168      	cbz	r0, 80164a6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801648a:	eb0a 0109 	add.w	r1, sl, r9
 801648e:	4441      	add	r1, r8
 8016490:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8016494:	463a      	mov	r2, r7
 8016496:	4649      	mov	r1, r9
 8016498:	4628      	mov	r0, r5
 801649a:	f7ff ff53 	bl	8016344 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801649e:	4658      	mov	r0, fp
 80164a0:	b003      	add	sp, #12
 80164a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164a6:	eb07 010a 	add.w	r1, r7, sl
 80164aa:	4449      	add	r1, r9
 80164ac:	4441      	add	r1, r8
 80164ae:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80164b2:	e7d2      	b.n	801645a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80164b4:	f04f 0b00 	mov.w	fp, #0
 80164b8:	e7f1      	b.n	801649e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080164ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80164ba:	b570      	push	{r4, r5, r6, lr}
 80164bc:	8810      	ldrh	r0, [r2, #0]
 80164be:	4298      	cmp	r0, r3
 80164c0:	d817      	bhi.n	80164f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80164c2:	1e48      	subs	r0, r1, #1
 80164c4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80164c8:	4298      	cmp	r0, r3
 80164ca:	d312      	bcc.n	80164f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80164cc:	2400      	movs	r4, #0
 80164ce:	428c      	cmp	r4, r1
 80164d0:	d20f      	bcs.n	80164f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80164d2:	1860      	adds	r0, r4, r1
 80164d4:	1040      	asrs	r0, r0, #1
 80164d6:	0085      	lsls	r5, r0, #2
 80164d8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80164dc:	42b3      	cmp	r3, r6
 80164de:	d902      	bls.n	80164e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80164e0:	3001      	adds	r0, #1
 80164e2:	b284      	uxth	r4, r0
 80164e4:	e7f3      	b.n	80164ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80164e6:	d201      	bcs.n	80164ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80164e8:	b281      	uxth	r1, r0
 80164ea:	e7f0      	b.n	80164ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80164ec:	442a      	add	r2, r5
 80164ee:	8850      	ldrh	r0, [r2, #2]
 80164f0:	bd70      	pop	{r4, r5, r6, pc}
 80164f2:	2000      	movs	r0, #0
 80164f4:	e7fc      	b.n	80164f0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080164f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80164f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80164fa:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80164fc:	886f      	ldrh	r7, [r5, #2]
 80164fe:	4604      	mov	r4, r0
 8016500:	087f      	lsrs	r7, r7, #1
 8016502:	260b      	movs	r6, #11
 8016504:	3e01      	subs	r6, #1
 8016506:	d013      	beq.n	8016530 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016508:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801650a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801650e:	462a      	mov	r2, r5
 8016510:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016514:	4639      	mov	r1, r7
 8016516:	4643      	mov	r3, r8
 8016518:	4620      	mov	r0, r4
 801651a:	f7ff ffce 	bl	80164ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801651e:	b138      	cbz	r0, 8016530 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016520:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8016524:	4642      	mov	r2, r8
 8016526:	4620      	mov	r0, r4
 8016528:	f7ff ff93 	bl	8016452 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801652c:	2800      	cmp	r0, #0
 801652e:	d1e9      	bne.n	8016504 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8016530:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016534 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8016534:	b570      	push	{r4, r5, r6, lr}
 8016536:	694a      	ldr	r2, [r1, #20]
 8016538:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801653a:	684b      	ldr	r3, [r1, #4]
 801653c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801653e:	1b54      	subs	r4, r2, r5
 8016540:	f000 8106 	beq.w	8016750 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8016544:	1b9b      	subs	r3, r3, r6
 8016546:	d003      	beq.n	8016550 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016548:	4363      	muls	r3, r4
 801654a:	2210      	movs	r2, #16
 801654c:	fb93 f3f2 	sdiv	r3, r3, r2
 8016550:	680c      	ldr	r4, [r1, #0]
 8016552:	698a      	ldr	r2, [r1, #24]
 8016554:	1b65      	subs	r5, r4, r5
 8016556:	f000 80fd 	beq.w	8016754 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801655a:	1b92      	subs	r2, r2, r6
 801655c:	d003      	beq.n	8016566 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801655e:	436a      	muls	r2, r5
 8016560:	2410      	movs	r4, #16
 8016562:	fb92 f2f4 	sdiv	r2, r2, r4
 8016566:	1a9b      	subs	r3, r3, r2
 8016568:	ee07 3a90 	vmov	s15, r3
 801656c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8016790 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8016570:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016574:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016578:	ee67 7a84 	vmul.f32	s15, s15, s8
 801657c:	460a      	mov	r2, r1
 801657e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8016582:	4603      	mov	r3, r0
 8016584:	f100 040c 	add.w	r4, r0, #12
 8016588:	eeb1 6a43 	vneg.f32	s12, s6
 801658c:	edd2 7a02 	vldr	s15, [r2, #8]
 8016590:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8016594:	3214      	adds	r2, #20
 8016596:	ece3 6a01 	vstmia	r3!, {s13}
 801659a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801659e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80165a2:	429c      	cmp	r4, r3
 80165a4:	edc3 7a02 	vstr	s15, [r3, #8]
 80165a8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80165ac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80165b0:	edc3 7a05 	vstr	s15, [r3, #20]
 80165b4:	d1ea      	bne.n	801658c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80165b6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80165b8:	698b      	ldr	r3, [r1, #24]
 80165ba:	edd0 4a02 	vldr	s9, [r0, #8]
 80165be:	edd0 3a00 	vldr	s7, [r0]
 80165c2:	edd0 6a01 	vldr	s13, [r0, #4]
 80165c6:	ed90 5a05 	vldr	s10, [r0, #20]
 80165ca:	ed90 2a03 	vldr	s4, [r0, #12]
 80165ce:	edd0 5a04 	vldr	s11, [r0, #16]
 80165d2:	ed90 1a07 	vldr	s2, [r0, #28]
 80165d6:	edd0 2a06 	vldr	s5, [r0, #24]
 80165da:	1a9b      	subs	r3, r3, r2
 80165dc:	ee07 3a90 	vmov	s15, r3
 80165e0:	684b      	ldr	r3, [r1, #4]
 80165e2:	1a9b      	subs	r3, r3, r2
 80165e4:	ee07 3a10 	vmov	s14, r3
 80165e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80165ec:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80165f0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80165f4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80165f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80165fc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8016600:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016604:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016608:	eee6 7a87 	vfma.f32	s15, s13, s14
 801660c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8016610:	ee67 7a83 	vmul.f32	s15, s15, s6
 8016614:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8016618:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801661a:	694a      	ldr	r2, [r1, #20]
 801661c:	1b13      	subs	r3, r2, r4
 801661e:	ee07 3a10 	vmov	s14, r3
 8016622:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016626:	680b      	ldr	r3, [r1, #0]
 8016628:	ee27 7a04 	vmul.f32	s14, s14, s8
 801662c:	1b1b      	subs	r3, r3, r4
 801662e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8016632:	ee07 3a10 	vmov	s14, r3
 8016636:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801663a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801663e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8016642:	ee64 4a86 	vmul.f32	s9, s9, s12
 8016646:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801664a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801664c:	698b      	ldr	r3, [r1, #24]
 801664e:	1a9b      	subs	r3, r3, r2
 8016650:	ee06 3a90 	vmov	s13, r3
 8016654:	684b      	ldr	r3, [r1, #4]
 8016656:	1a9b      	subs	r3, r3, r2
 8016658:	ee07 3a10 	vmov	s14, r3
 801665c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016660:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016664:	ee66 6a84 	vmul.f32	s13, s13, s8
 8016668:	ee27 7a04 	vmul.f32	s14, s14, s8
 801666c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8016670:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016674:	ee66 6a83 	vmul.f32	s13, s13, s6
 8016678:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801667c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801667e:	694a      	ldr	r2, [r1, #20]
 8016680:	1b13      	subs	r3, r2, r4
 8016682:	ee07 3a10 	vmov	s14, r3
 8016686:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801668a:	680b      	ldr	r3, [r1, #0]
 801668c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016690:	1b1b      	subs	r3, r3, r4
 8016692:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8016696:	ee07 3a10 	vmov	s14, r3
 801669a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801669e:	ee27 7a04 	vmul.f32	s14, s14, s8
 80166a2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80166a6:	edd0 5a08 	vldr	s11, [r0, #32]
 80166aa:	ee25 5a06 	vmul.f32	s10, s10, s12
 80166ae:	ee31 1a65 	vsub.f32	s2, s2, s11
 80166b2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80166b6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80166b8:	698b      	ldr	r3, [r1, #24]
 80166ba:	1a9b      	subs	r3, r3, r2
 80166bc:	ee07 3a10 	vmov	s14, r3
 80166c0:	684b      	ldr	r3, [r1, #4]
 80166c2:	1a9b      	subs	r3, r3, r2
 80166c4:	ee01 3a90 	vmov	s3, r3
 80166c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80166cc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80166d0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80166d4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80166d8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80166dc:	ee61 1a84 	vmul.f32	s3, s3, s8
 80166e0:	eea1 7a21 	vfma.f32	s14, s2, s3
 80166e4:	ee27 7a03 	vmul.f32	s14, s14, s6
 80166e8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80166ec:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80166ee:	694a      	ldr	r2, [r1, #20]
 80166f0:	1b13      	subs	r3, r2, r4
 80166f2:	ee03 3a10 	vmov	s6, r3
 80166f6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80166fa:	680b      	ldr	r3, [r1, #0]
 80166fc:	ee23 3a04 	vmul.f32	s6, s6, s8
 8016700:	1b1b      	subs	r3, r3, r4
 8016702:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8016706:	ee03 3a10 	vmov	s6, r3
 801670a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801670e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8016712:	eee1 5a04 	vfma.f32	s11, s2, s8
 8016716:	ee25 6a86 	vmul.f32	s12, s11, s12
 801671a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801671e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8016722:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8016726:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801672a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801672e:	dd13      	ble.n	8016758 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8016730:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016734:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8016738:	63c3      	str	r3, [r0, #60]	; 0x3c
 801673a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801673e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016742:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016746:	dd15      	ble.n	8016774 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8016748:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801674c:	6403      	str	r3, [r0, #64]	; 0x40
 801674e:	bd70      	pop	{r4, r5, r6, pc}
 8016750:	4623      	mov	r3, r4
 8016752:	e6fd      	b.n	8016550 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016754:	462a      	mov	r2, r5
 8016756:	e706      	b.n	8016566 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8016758:	d502      	bpl.n	8016760 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801675a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801675e:	e7e9      	b.n	8016734 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8016760:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8016764:	eea3 2a85 	vfma.f32	s4, s7, s10
 8016768:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801676c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016770:	dade      	bge.n	8016730 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8016772:	e7f2      	b.n	801675a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8016774:	d502      	bpl.n	801677c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8016776:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801677a:	e7e7      	b.n	801674c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801677c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8016780:	eee3 4a86 	vfma.f32	s9, s7, s12
 8016784:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8016788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801678c:	dadc      	bge.n	8016748 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801678e:	e7f2      	b.n	8016776 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8016790:	3d800000 	.word	0x3d800000

08016794 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8016794:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016798:	2714      	movs	r7, #20
 801679a:	435f      	muls	r7, r3
 801679c:	eb02 0c07 	add.w	ip, r2, r7
 80167a0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80167a4:	f115 0e0f 	adds.w	lr, r5, #15
 80167a8:	f100 80a2 	bmi.w	80168f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80167ac:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80167b0:	9c08      	ldr	r4, [sp, #32]
 80167b2:	f8c0 e014 	str.w	lr, [r0, #20]
 80167b6:	2614      	movs	r6, #20
 80167b8:	4366      	muls	r6, r4
 80167ba:	eb02 0806 	add.w	r8, r2, r6
 80167be:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80167c2:	f115 040f 	adds.w	r4, r5, #15
 80167c6:	f100 809f 	bmi.w	8016908 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80167ca:	1124      	asrs	r4, r4, #4
 80167cc:	eba4 040e 	sub.w	r4, r4, lr
 80167d0:	6184      	str	r4, [r0, #24]
 80167d2:	2c00      	cmp	r4, #0
 80167d4:	f000 808a 	beq.w	80168ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80167d8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80167dc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80167e0:	5995      	ldr	r5, [r2, r6]
 80167e2:	eba4 0809 	sub.w	r8, r4, r9
 80167e6:	59d4      	ldr	r4, [r2, r7]
 80167e8:	eba5 0a04 	sub.w	sl, r5, r4
 80167ec:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80167f0:	fb0e fe05 	mul.w	lr, lr, r5
 80167f4:	fb0a ee19 	mls	lr, sl, r9, lr
 80167f8:	fb08 e404 	mla	r4, r8, r4, lr
 80167fc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8016800:	3c01      	subs	r4, #1
 8016802:	19a4      	adds	r4, r4, r6
 8016804:	f100 808c 	bmi.w	8016920 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8016808:	fb94 fef6 	sdiv	lr, r4, r6
 801680c:	f8c0 e000 	str.w	lr, [r0]
 8016810:	fb06 441e 	mls	r4, r6, lr, r4
 8016814:	6104      	str	r4, [r0, #16]
 8016816:	2d00      	cmp	r5, #0
 8016818:	f2c0 8095 	blt.w	8016946 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801681c:	fb95 f4f6 	sdiv	r4, r5, r6
 8016820:	6044      	str	r4, [r0, #4]
 8016822:	fb06 5514 	mls	r5, r6, r4, r5
 8016826:	6085      	str	r5, [r0, #8]
 8016828:	60c6      	str	r6, [r0, #12]
 801682a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801682e:	6945      	ldr	r5, [r0, #20]
 8016830:	59d2      	ldr	r2, [r2, r7]
 8016832:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8016968 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8016836:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801683a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801683e:	ee07 4a10 	vmov	s14, r4
 8016842:	6804      	ldr	r4, [r0, #0]
 8016844:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8016848:	ee07 2a90 	vmov	s15, r2
 801684c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016850:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016854:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016858:	ee27 7a26 	vmul.f32	s14, s14, s13
 801685c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016860:	edd3 6a00 	vldr	s13, [r3]
 8016864:	eee6 6a07 	vfma.f32	s13, s12, s14
 8016868:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801686c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8016870:	edc0 6a07 	vstr	s13, [r0, #28]
 8016874:	edd0 6a01 	vldr	s13, [r0, #4]
 8016878:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801687c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8016880:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016884:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016888:	ed80 6a08 	vstr	s12, [r0, #32]
 801688c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801688e:	6242      	str	r2, [r0, #36]	; 0x24
 8016890:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8016894:	ed93 6a03 	vldr	s12, [r3, #12]
 8016898:	eea5 6a87 	vfma.f32	s12, s11, s14
 801689c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80168a0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80168a4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80168a8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80168ac:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80168b0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80168b4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80168b8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80168ba:	6302      	str	r2, [r0, #48]	; 0x30
 80168bc:	ed93 6a06 	vldr	s12, [r3, #24]
 80168c0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80168c4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80168c8:	eeb0 7a46 	vmov.f32	s14, s12
 80168cc:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80168d0:	eea6 7a27 	vfma.f32	s14, s12, s15
 80168d4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80168d8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80168dc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80168e0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80168e4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80168e8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80168ea:	63c3      	str	r3, [r0, #60]	; 0x3c
 80168ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80168f0:	f1c5 0501 	rsb	r5, r5, #1
 80168f4:	f015 050f 	ands.w	r5, r5, #15
 80168f8:	bf18      	it	ne
 80168fa:	2501      	movne	r5, #1
 80168fc:	2410      	movs	r4, #16
 80168fe:	fb9e fef4 	sdiv	lr, lr, r4
 8016902:	ebae 0e05 	sub.w	lr, lr, r5
 8016906:	e753      	b.n	80167b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8016908:	f1c5 0501 	rsb	r5, r5, #1
 801690c:	f015 050f 	ands.w	r5, r5, #15
 8016910:	bf18      	it	ne
 8016912:	2501      	movne	r5, #1
 8016914:	f04f 0910 	mov.w	r9, #16
 8016918:	fb94 f4f9 	sdiv	r4, r4, r9
 801691c:	1b64      	subs	r4, r4, r5
 801691e:	e755      	b.n	80167cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8016920:	4264      	negs	r4, r4
 8016922:	fb94 fef6 	sdiv	lr, r4, r6
 8016926:	f1ce 0800 	rsb	r8, lr, #0
 801692a:	fb06 441e 	mls	r4, r6, lr, r4
 801692e:	f8c0 8000 	str.w	r8, [r0]
 8016932:	6104      	str	r4, [r0, #16]
 8016934:	2c00      	cmp	r4, #0
 8016936:	f43f af6e 	beq.w	8016816 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801693a:	ea6f 0e0e 	mvn.w	lr, lr
 801693e:	f8c0 e000 	str.w	lr, [r0]
 8016942:	1b34      	subs	r4, r6, r4
 8016944:	e766      	b.n	8016814 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8016946:	426d      	negs	r5, r5
 8016948:	fb95 f4f6 	sdiv	r4, r5, r6
 801694c:	f1c4 0e00 	rsb	lr, r4, #0
 8016950:	fb06 5514 	mls	r5, r6, r4, r5
 8016954:	f8c0 e004 	str.w	lr, [r0, #4]
 8016958:	6085      	str	r5, [r0, #8]
 801695a:	2d00      	cmp	r5, #0
 801695c:	f43f af64 	beq.w	8016828 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8016960:	43e4      	mvns	r4, r4
 8016962:	6044      	str	r4, [r0, #4]
 8016964:	1b75      	subs	r5, r6, r5
 8016966:	e75e      	b.n	8016826 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8016968:	3d800000 	.word	0x3d800000

0801696c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801696c:	4602      	mov	r2, r0
 801696e:	b148      	cbz	r0, 8016984 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8016970:	2300      	movs	r3, #0
 8016972:	b298      	uxth	r0, r3
 8016974:	3301      	adds	r3, #1
 8016976:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801697a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801697e:	2900      	cmp	r1, #0
 8016980:	d1f7      	bne.n	8016972 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8016982:	4770      	bx	lr
 8016984:	4770      	bx	lr

08016986 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8016986:	b530      	push	{r4, r5, lr}
 8016988:	4604      	mov	r4, r0
 801698a:	b159      	cbz	r1, 80169a4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801698c:	b148      	cbz	r0, 80169a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801698e:	2300      	movs	r3, #0
 8016990:	b298      	uxth	r0, r3
 8016992:	4282      	cmp	r2, r0
 8016994:	d905      	bls.n	80169a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8016996:	5ccd      	ldrb	r5, [r1, r3]
 8016998:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801699c:	3301      	adds	r3, #1
 801699e:	2d00      	cmp	r5, #0
 80169a0:	d1f6      	bne.n	8016990 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80169a2:	bd30      	pop	{r4, r5, pc}
 80169a4:	4608      	mov	r0, r1
 80169a6:	e7fc      	b.n	80169a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080169a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80169a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80169aa:	b08b      	sub	sp, #44	; 0x2c
 80169ac:	468c      	mov	ip, r1
 80169ae:	2100      	movs	r1, #0
 80169b0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80169b4:	4604      	mov	r4, r0
 80169b6:	261f      	movs	r6, #31
 80169b8:	af01      	add	r7, sp, #4
 80169ba:	fb94 fef3 	sdiv	lr, r4, r3
 80169be:	fb03 441e 	mls	r4, r3, lr, r4
 80169c2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80169c6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80169ca:	b2ec      	uxtb	r4, r5
 80169cc:	2d09      	cmp	r5, #9
 80169ce:	bfd4      	ite	le
 80169d0:	3430      	addle	r4, #48	; 0x30
 80169d2:	3457      	addgt	r4, #87	; 0x57
 80169d4:	b2e4      	uxtb	r4, r4
 80169d6:	55bc      	strb	r4, [r7, r6]
 80169d8:	4674      	mov	r4, lr
 80169da:	1e71      	subs	r1, r6, #1
 80169dc:	b974      	cbnz	r4, 80169fc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80169de:	2800      	cmp	r0, #0
 80169e0:	da05      	bge.n	80169ee <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80169e2:	ab0a      	add	r3, sp, #40	; 0x28
 80169e4:	4419      	add	r1, r3
 80169e6:	232d      	movs	r3, #45	; 0x2d
 80169e8:	f801 3c24 	strb.w	r3, [r1, #-36]
 80169ec:	1eb1      	subs	r1, r6, #2
 80169ee:	3101      	adds	r1, #1
 80169f0:	4439      	add	r1, r7
 80169f2:	4660      	mov	r0, ip
 80169f4:	f7ff ffc7 	bl	8016986 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80169f8:	b00b      	add	sp, #44	; 0x2c
 80169fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80169fc:	460e      	mov	r6, r1
 80169fe:	e7dc      	b.n	80169ba <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08016a00 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8016a00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016a02:	b08b      	sub	sp, #44	; 0x2c
 8016a04:	468c      	mov	ip, r1
 8016a06:	2100      	movs	r1, #0
 8016a08:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8016a0c:	ae01      	add	r6, sp, #4
 8016a0e:	211f      	movs	r1, #31
 8016a10:	fbb0 f7f3 	udiv	r7, r0, r3
 8016a14:	fb03 0517 	mls	r5, r3, r7, r0
 8016a18:	b2ec      	uxtb	r4, r5
 8016a1a:	2d09      	cmp	r5, #9
 8016a1c:	bfd4      	ite	le
 8016a1e:	3430      	addle	r4, #48	; 0x30
 8016a20:	3457      	addgt	r4, #87	; 0x57
 8016a22:	b2e4      	uxtb	r4, r4
 8016a24:	558c      	strb	r4, [r1, r6]
 8016a26:	4638      	mov	r0, r7
 8016a28:	1e4c      	subs	r4, r1, #1
 8016a2a:	b92f      	cbnz	r7, 8016a38 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8016a2c:	4431      	add	r1, r6
 8016a2e:	4660      	mov	r0, ip
 8016a30:	f7ff ffa9 	bl	8016986 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8016a34:	b00b      	add	sp, #44	; 0x2c
 8016a36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016a38:	4621      	mov	r1, r4
 8016a3a:	e7e9      	b.n	8016a10 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08016a3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8016a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a40:	4691      	mov	r9, r2
 8016a42:	b085      	sub	sp, #20
 8016a44:	6802      	ldr	r2, [r0, #0]
 8016a46:	9201      	str	r2, [sp, #4]
 8016a48:	4688      	mov	r8, r1
 8016a4a:	4683      	mov	fp, r0
 8016a4c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8016a50:	9103      	str	r1, [sp, #12]
 8016a52:	4610      	mov	r0, r2
 8016a54:	461c      	mov	r4, r3
 8016a56:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8016a5a:	9302      	str	r3, [sp, #8]
 8016a5c:	f7ff ff86 	bl	801696c <_ZN8touchgfx7Unicode6strlenEPKt>
 8016a60:	f1b8 0f00 	cmp.w	r8, #0
 8016a64:	bf0c      	ite	eq
 8016a66:	4684      	moveq	ip, r0
 8016a68:	f100 0c01 	addne.w	ip, r0, #1
 8016a6c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8016a70:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8016a74:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016a76:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016a78:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8016a7c:	9903      	ldr	r1, [sp, #12]
 8016a7e:	fa1f fc8c 	uxth.w	ip, ip
 8016a82:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8016a86:	d041      	beq.n	8016b0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8016a88:	d834      	bhi.n	8016af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8016a8a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8016a8e:	d059      	beq.n	8016b44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8016a90:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8016a94:	d03a      	beq.n	8016b0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8016a96:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8016a9a:	d034      	beq.n	8016b06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8016a9c:	2400      	movs	r4, #0
 8016a9e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8016aa2:	3a01      	subs	r2, #1
 8016aa4:	b169      	cbz	r1, 8016ac2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016aa6:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016aa8:	458c      	cmp	ip, r1
 8016aaa:	da09      	bge.n	8016ac0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8016aac:	eba1 010c 	sub.w	r1, r1, ip
 8016ab0:	b289      	uxth	r1, r1
 8016ab2:	b933      	cbnz	r3, 8016ac2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016ab4:	2e00      	cmp	r6, #0
 8016ab6:	d051      	beq.n	8016b5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8016ab8:	2800      	cmp	r0, #0
 8016aba:	d04f      	beq.n	8016b5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8016abc:	440c      	add	r4, r1
 8016abe:	b2a4      	uxth	r4, r4
 8016ac0:	2100      	movs	r1, #0
 8016ac2:	682b      	ldr	r3, [r5, #0]
 8016ac4:	4293      	cmp	r3, r2
 8016ac6:	da07      	bge.n	8016ad8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8016ac8:	f1b8 0f00 	cmp.w	r8, #0
 8016acc:	d004      	beq.n	8016ad8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8016ace:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8016ad2:	682b      	ldr	r3, [r5, #0]
 8016ad4:	3301      	adds	r3, #1
 8016ad6:	602b      	str	r3, [r5, #0]
 8016ad8:	2730      	movs	r7, #48	; 0x30
 8016ada:	2c00      	cmp	r4, #0
 8016adc:	d04e      	beq.n	8016b7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016ade:	682e      	ldr	r6, [r5, #0]
 8016ae0:	3c01      	subs	r4, #1
 8016ae2:	42b2      	cmp	r2, r6
 8016ae4:	b2a4      	uxth	r4, r4
 8016ae6:	dd49      	ble.n	8016b7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016ae8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8016aec:	682b      	ldr	r3, [r5, #0]
 8016aee:	3301      	adds	r3, #1
 8016af0:	602b      	str	r3, [r5, #0]
 8016af2:	e7f2      	b.n	8016ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8016af4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8016af8:	d01d      	beq.n	8016b36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8016afa:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8016afe:	d002      	beq.n	8016b06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8016b00:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8016b04:	e7c9      	b.n	8016a9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8016b06:	4684      	mov	ip, r0
 8016b08:	f04f 0800 	mov.w	r8, #0
 8016b0c:	2c00      	cmp	r4, #0
 8016b0e:	d0c6      	beq.n	8016a9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016b10:	b947      	cbnz	r7, 8016b24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8016b12:	2801      	cmp	r0, #1
 8016b14:	d106      	bne.n	8016b24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8016b16:	8814      	ldrh	r4, [r2, #0]
 8016b18:	2c30      	cmp	r4, #48	; 0x30
 8016b1a:	bf02      	ittt	eq
 8016b1c:	3202      	addeq	r2, #2
 8016b1e:	f8cb 2000 	streq.w	r2, [fp]
 8016b22:	4638      	moveq	r0, r7
 8016b24:	45bc      	cmp	ip, r7
 8016b26:	da14      	bge.n	8016b52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8016b28:	b2bf      	uxth	r7, r7
 8016b2a:	eba7 040c 	sub.w	r4, r7, ip
 8016b2e:	b2a4      	uxth	r4, r4
 8016b30:	46bc      	mov	ip, r7
 8016b32:	2600      	movs	r6, #0
 8016b34:	e7b3      	b.n	8016a9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016b36:	4684      	mov	ip, r0
 8016b38:	b16c      	cbz	r4, 8016b56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8016b3a:	42b8      	cmp	r0, r7
 8016b3c:	dd00      	ble.n	8016b40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8016b3e:	b2b8      	uxth	r0, r7
 8016b40:	2400      	movs	r4, #0
 8016b42:	e003      	b.n	8016b4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8016b44:	f04f 0c01 	mov.w	ip, #1
 8016b48:	2400      	movs	r4, #0
 8016b4a:	4660      	mov	r0, ip
 8016b4c:	4626      	mov	r6, r4
 8016b4e:	46a0      	mov	r8, r4
 8016b50:	e7a5      	b.n	8016a9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016b52:	2400      	movs	r4, #0
 8016b54:	e7ed      	b.n	8016b32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8016b56:	4626      	mov	r6, r4
 8016b58:	46a0      	mov	r8, r4
 8016b5a:	e7a0      	b.n	8016a9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016b5c:	2900      	cmp	r1, #0
 8016b5e:	d0b0      	beq.n	8016ac2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016b60:	2720      	movs	r7, #32
 8016b62:	682e      	ldr	r6, [r5, #0]
 8016b64:	2900      	cmp	r1, #0
 8016b66:	d0ac      	beq.n	8016ac2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016b68:	3901      	subs	r1, #1
 8016b6a:	4296      	cmp	r6, r2
 8016b6c:	b289      	uxth	r1, r1
 8016b6e:	daa7      	bge.n	8016ac0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8016b70:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8016b74:	682b      	ldr	r3, [r5, #0]
 8016b76:	3301      	adds	r3, #1
 8016b78:	602b      	str	r3, [r5, #0]
 8016b7a:	e7f2      	b.n	8016b62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8016b7c:	b188      	cbz	r0, 8016ba2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016b7e:	682b      	ldr	r3, [r5, #0]
 8016b80:	3801      	subs	r0, #1
 8016b82:	429a      	cmp	r2, r3
 8016b84:	b280      	uxth	r0, r0
 8016b86:	dd0c      	ble.n	8016ba2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016b88:	f8db 3000 	ldr.w	r3, [fp]
 8016b8c:	1c9c      	adds	r4, r3, #2
 8016b8e:	f8cb 4000 	str.w	r4, [fp]
 8016b92:	881c      	ldrh	r4, [r3, #0]
 8016b94:	682b      	ldr	r3, [r5, #0]
 8016b96:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8016b9a:	682b      	ldr	r3, [r5, #0]
 8016b9c:	3301      	adds	r3, #1
 8016b9e:	602b      	str	r3, [r5, #0]
 8016ba0:	e7ec      	b.n	8016b7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016ba2:	2620      	movs	r6, #32
 8016ba4:	b151      	cbz	r1, 8016bbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016ba6:	6828      	ldr	r0, [r5, #0]
 8016ba8:	3901      	subs	r1, #1
 8016baa:	4282      	cmp	r2, r0
 8016bac:	b289      	uxth	r1, r1
 8016bae:	dd05      	ble.n	8016bbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016bb0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8016bb4:	682b      	ldr	r3, [r5, #0]
 8016bb6:	3301      	adds	r3, #1
 8016bb8:	602b      	str	r3, [r5, #0]
 8016bba:	e7f3      	b.n	8016ba4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8016bbc:	b005      	add	sp, #20
 8016bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016bc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8016bc2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016bc6:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8016bca:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8016bce:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8016bd2:	2400      	movs	r4, #0
 8016bd4:	8014      	strh	r4, [r2, #0]
 8016bd6:	701c      	strb	r4, [r3, #0]
 8016bd8:	f888 4000 	strb.w	r4, [r8]
 8016bdc:	f88c 4000 	strb.w	r4, [ip]
 8016be0:	f88e 4000 	strb.w	r4, [lr]
 8016be4:	703c      	strb	r4, [r7, #0]
 8016be6:	6804      	ldr	r4, [r0, #0]
 8016be8:	b1a4      	cbz	r4, 8016c14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8016bea:	8824      	ldrh	r4, [r4, #0]
 8016bec:	f04f 0901 	mov.w	r9, #1
 8016bf0:	b314      	cbz	r4, 8016c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016bf2:	2c2b      	cmp	r4, #43	; 0x2b
 8016bf4:	d001      	beq.n	8016bfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8016bf6:	2c20      	cmp	r4, #32
 8016bf8:	d110      	bne.n	8016c1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8016bfa:	8014      	strh	r4, [r2, #0]
 8016bfc:	6804      	ldr	r4, [r0, #0]
 8016bfe:	b10c      	cbz	r4, 8016c04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8016c00:	3402      	adds	r4, #2
 8016c02:	6004      	str	r4, [r0, #0]
 8016c04:	680c      	ldr	r4, [r1, #0]
 8016c06:	b10c      	cbz	r4, 8016c0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8016c08:	3401      	adds	r4, #1
 8016c0a:	600c      	str	r4, [r1, #0]
 8016c0c:	6804      	ldr	r4, [r0, #0]
 8016c0e:	b17c      	cbz	r4, 8016c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8016c10:	8824      	ldrh	r4, [r4, #0]
 8016c12:	e7ed      	b.n	8016bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016c14:	680c      	ldr	r4, [r1, #0]
 8016c16:	b17c      	cbz	r4, 8016c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016c18:	7824      	ldrb	r4, [r4, #0]
 8016c1a:	e7e7      	b.n	8016bec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8016c1c:	2c2d      	cmp	r4, #45	; 0x2d
 8016c1e:	d102      	bne.n	8016c26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8016c20:	f883 9000 	strb.w	r9, [r3]
 8016c24:	e7ea      	b.n	8016bfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016c26:	2c23      	cmp	r4, #35	; 0x23
 8016c28:	d107      	bne.n	8016c3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8016c2a:	f888 9000 	strb.w	r9, [r8]
 8016c2e:	e7e5      	b.n	8016bfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016c30:	680c      	ldr	r4, [r1, #0]
 8016c32:	b10c      	cbz	r4, 8016c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016c34:	7824      	ldrb	r4, [r4, #0]
 8016c36:	e7db      	b.n	8016bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016c38:	2400      	movs	r4, #0
 8016c3a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8016c3e:	2b09      	cmp	r3, #9
 8016c40:	d901      	bls.n	8016c46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8016c42:	2c2a      	cmp	r4, #42	; 0x2a
 8016c44:	d122      	bne.n	8016c8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016c46:	2301      	movs	r3, #1
 8016c48:	2c30      	cmp	r4, #48	; 0x30
 8016c4a:	f88e 3000 	strb.w	r3, [lr]
 8016c4e:	d10d      	bne.n	8016c6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016c50:	f88c 3000 	strb.w	r3, [ip]
 8016c54:	6803      	ldr	r3, [r0, #0]
 8016c56:	b10b      	cbz	r3, 8016c5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8016c58:	3302      	adds	r3, #2
 8016c5a:	6003      	str	r3, [r0, #0]
 8016c5c:	680b      	ldr	r3, [r1, #0]
 8016c5e:	b10b      	cbz	r3, 8016c64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8016c60:	3301      	adds	r3, #1
 8016c62:	600b      	str	r3, [r1, #0]
 8016c64:	6803      	ldr	r3, [r0, #0]
 8016c66:	2b00      	cmp	r3, #0
 8016c68:	d02f      	beq.n	8016cca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8016c6a:	881c      	ldrh	r4, [r3, #0]
 8016c6c:	2c2a      	cmp	r4, #42	; 0x2a
 8016c6e:	d135      	bne.n	8016cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016c70:	f04f 33ff 	mov.w	r3, #4294967295
 8016c74:	6033      	str	r3, [r6, #0]
 8016c76:	6803      	ldr	r3, [r0, #0]
 8016c78:	b10b      	cbz	r3, 8016c7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8016c7a:	3302      	adds	r3, #2
 8016c7c:	6003      	str	r3, [r0, #0]
 8016c7e:	680b      	ldr	r3, [r1, #0]
 8016c80:	b10b      	cbz	r3, 8016c86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8016c82:	3301      	adds	r3, #1
 8016c84:	600b      	str	r3, [r1, #0]
 8016c86:	6803      	ldr	r3, [r0, #0]
 8016c88:	b31b      	cbz	r3, 8016cd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8016c8a:	881c      	ldrh	r4, [r3, #0]
 8016c8c:	2c2e      	cmp	r4, #46	; 0x2e
 8016c8e:	d11a      	bne.n	8016cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016c90:	2301      	movs	r3, #1
 8016c92:	703b      	strb	r3, [r7, #0]
 8016c94:	6803      	ldr	r3, [r0, #0]
 8016c96:	b10b      	cbz	r3, 8016c9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8016c98:	3302      	adds	r3, #2
 8016c9a:	6003      	str	r3, [r0, #0]
 8016c9c:	680b      	ldr	r3, [r1, #0]
 8016c9e:	b10b      	cbz	r3, 8016ca4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8016ca0:	3301      	adds	r3, #1
 8016ca2:	600b      	str	r3, [r1, #0]
 8016ca4:	6803      	ldr	r3, [r0, #0]
 8016ca6:	2b00      	cmp	r3, #0
 8016ca8:	d036      	beq.n	8016d18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8016caa:	881b      	ldrh	r3, [r3, #0]
 8016cac:	2b2a      	cmp	r3, #42	; 0x2a
 8016cae:	d137      	bne.n	8016d20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016cb0:	f04f 33ff 	mov.w	r3, #4294967295
 8016cb4:	602b      	str	r3, [r5, #0]
 8016cb6:	6803      	ldr	r3, [r0, #0]
 8016cb8:	b10b      	cbz	r3, 8016cbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8016cba:	3302      	adds	r3, #2
 8016cbc:	6003      	str	r3, [r0, #0]
 8016cbe:	680b      	ldr	r3, [r1, #0]
 8016cc0:	b10b      	cbz	r3, 8016cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016cc2:	3301      	adds	r3, #1
 8016cc4:	600b      	str	r3, [r1, #0]
 8016cc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016cca:	680c      	ldr	r4, [r1, #0]
 8016ccc:	b134      	cbz	r4, 8016cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016cce:	7824      	ldrb	r4, [r4, #0]
 8016cd0:	e7cc      	b.n	8016c6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016cd2:	680b      	ldr	r3, [r1, #0]
 8016cd4:	2b00      	cmp	r3, #0
 8016cd6:	d0f6      	beq.n	8016cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016cd8:	781c      	ldrb	r4, [r3, #0]
 8016cda:	e7d7      	b.n	8016c8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016cdc:	2300      	movs	r3, #0
 8016cde:	6033      	str	r3, [r6, #0]
 8016ce0:	220a      	movs	r2, #10
 8016ce2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8016ce6:	fa1f f38c 	uxth.w	r3, ip
 8016cea:	2b09      	cmp	r3, #9
 8016cec:	d8ce      	bhi.n	8016c8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016cee:	6833      	ldr	r3, [r6, #0]
 8016cf0:	fb02 c303 	mla	r3, r2, r3, ip
 8016cf4:	6033      	str	r3, [r6, #0]
 8016cf6:	6803      	ldr	r3, [r0, #0]
 8016cf8:	b10b      	cbz	r3, 8016cfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8016cfa:	3302      	adds	r3, #2
 8016cfc:	6003      	str	r3, [r0, #0]
 8016cfe:	680b      	ldr	r3, [r1, #0]
 8016d00:	b10b      	cbz	r3, 8016d06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8016d02:	3301      	adds	r3, #1
 8016d04:	600b      	str	r3, [r1, #0]
 8016d06:	6803      	ldr	r3, [r0, #0]
 8016d08:	b10b      	cbz	r3, 8016d0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8016d0a:	881c      	ldrh	r4, [r3, #0]
 8016d0c:	e7e9      	b.n	8016ce2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016d0e:	680c      	ldr	r4, [r1, #0]
 8016d10:	2c00      	cmp	r4, #0
 8016d12:	d0e6      	beq.n	8016ce2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016d14:	7824      	ldrb	r4, [r4, #0]
 8016d16:	e7e4      	b.n	8016ce2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016d18:	680b      	ldr	r3, [r1, #0]
 8016d1a:	b10b      	cbz	r3, 8016d20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016d1c:	781b      	ldrb	r3, [r3, #0]
 8016d1e:	e7c5      	b.n	8016cac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8016d20:	2200      	movs	r2, #0
 8016d22:	602a      	str	r2, [r5, #0]
 8016d24:	240a      	movs	r4, #10
 8016d26:	3b30      	subs	r3, #48	; 0x30
 8016d28:	b29e      	uxth	r6, r3
 8016d2a:	2e09      	cmp	r6, #9
 8016d2c:	682a      	ldr	r2, [r5, #0]
 8016d2e:	d813      	bhi.n	8016d58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8016d30:	fb04 3302 	mla	r3, r4, r2, r3
 8016d34:	602b      	str	r3, [r5, #0]
 8016d36:	6803      	ldr	r3, [r0, #0]
 8016d38:	b10b      	cbz	r3, 8016d3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8016d3a:	3302      	adds	r3, #2
 8016d3c:	6003      	str	r3, [r0, #0]
 8016d3e:	680b      	ldr	r3, [r1, #0]
 8016d40:	b10b      	cbz	r3, 8016d46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8016d42:	3301      	adds	r3, #1
 8016d44:	600b      	str	r3, [r1, #0]
 8016d46:	6803      	ldr	r3, [r0, #0]
 8016d48:	b10b      	cbz	r3, 8016d4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8016d4a:	881b      	ldrh	r3, [r3, #0]
 8016d4c:	e7eb      	b.n	8016d26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016d4e:	680b      	ldr	r3, [r1, #0]
 8016d50:	2b00      	cmp	r3, #0
 8016d52:	d0e8      	beq.n	8016d26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016d54:	781b      	ldrb	r3, [r3, #0]
 8016d56:	e7e6      	b.n	8016d26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016d58:	2a06      	cmp	r2, #6
 8016d5a:	bfa8      	it	ge
 8016d5c:	2206      	movge	r2, #6
 8016d5e:	602a      	str	r2, [r5, #0]
 8016d60:	e7b1      	b.n	8016cc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08016d62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8016d62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d66:	b0a3      	sub	sp, #140	; 0x8c
 8016d68:	2600      	movs	r6, #0
 8016d6a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8016d6e:	4607      	mov	r7, r0
 8016d70:	4688      	mov	r8, r1
 8016d72:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016d76:	4631      	mov	r1, r6
 8016d78:	2242      	movs	r2, #66	; 0x42
 8016d7a:	4648      	mov	r0, r9
 8016d7c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8016d7e:	960d      	str	r6, [sp, #52]	; 0x34
 8016d80:	f010 fd53 	bl	802782a <memset>
 8016d84:	b15f      	cbz	r7, 8016d9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8016d86:	f108 3aff 	add.w	sl, r8, #4294967295
 8016d8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016d8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016d8e:	b152      	cbz	r2, 8016da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8016d90:	8812      	ldrh	r2, [r2, #0]
 8016d92:	b10a      	cbz	r2, 8016d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016d94:	459a      	cmp	sl, r3
 8016d96:	dc2e      	bgt.n	8016df6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8016d98:	2200      	movs	r2, #0
 8016d9a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016d9e:	4638      	mov	r0, r7
 8016da0:	b023      	add	sp, #140	; 0x8c
 8016da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016da6:	9a08      	ldr	r2, [sp, #32]
 8016da8:	2a00      	cmp	r2, #0
 8016daa:	d0f5      	beq.n	8016d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016dac:	7812      	ldrb	r2, [r2, #0]
 8016dae:	e7f0      	b.n	8016d92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8016db0:	2d00      	cmp	r5, #0
 8016db2:	d0ea      	beq.n	8016d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016db4:	782a      	ldrb	r2, [r5, #0]
 8016db6:	b142      	cbz	r2, 8016dca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8016db8:	2a25      	cmp	r2, #37	; 0x25
 8016dba:	d001      	beq.n	8016dc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8016dbc:	459a      	cmp	sl, r3
 8016dbe:	dc08      	bgt.n	8016dd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8016dc0:	f1bb 0f00 	cmp.w	fp, #0
 8016dc4:	d121      	bne.n	8016e0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8016dc6:	2d00      	cmp	r5, #0
 8016dc8:	d0df      	beq.n	8016d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016dca:	782a      	ldrb	r2, [r5, #0]
 8016dcc:	f04f 0b00 	mov.w	fp, #0
 8016dd0:	e01d      	b.n	8016e0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8016dd2:	f1bb 0f00 	cmp.w	fp, #0
 8016dd6:	d078      	beq.n	8016eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8016dd8:	f8bb 2000 	ldrh.w	r2, [fp]
 8016ddc:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016de0:	f1bb 0f00 	cmp.w	fp, #0
 8016de4:	d002      	beq.n	8016dec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8016de6:	f10b 0202 	add.w	r2, fp, #2
 8016dea:	9209      	str	r2, [sp, #36]	; 0x24
 8016dec:	b10d      	cbz	r5, 8016df2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8016dee:	3501      	adds	r5, #1
 8016df0:	9508      	str	r5, [sp, #32]
 8016df2:	3301      	adds	r3, #1
 8016df4:	930d      	str	r3, [sp, #52]	; 0x34
 8016df6:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8016dfa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016dfc:	f1bb 0f00 	cmp.w	fp, #0
 8016e00:	d0d6      	beq.n	8016db0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8016e02:	f8bb 2000 	ldrh.w	r2, [fp]
 8016e06:	2a00      	cmp	r2, #0
 8016e08:	d1d6      	bne.n	8016db8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8016e0a:	f8bb 2000 	ldrh.w	r2, [fp]
 8016e0e:	2a00      	cmp	r2, #0
 8016e10:	d0bb      	beq.n	8016d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016e12:	459a      	cmp	sl, r3
 8016e14:	ddb9      	ble.n	8016d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016e16:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8016e1a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8016e1e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8016e22:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8016e26:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8016e2a:	960e      	str	r6, [sp, #56]	; 0x38
 8016e2c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8016e30:	960f      	str	r6, [sp, #60]	; 0x3c
 8016e32:	f1bb 0f00 	cmp.w	fp, #0
 8016e36:	d002      	beq.n	8016e3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8016e38:	f10b 0302 	add.w	r3, fp, #2
 8016e3c:	9309      	str	r3, [sp, #36]	; 0x24
 8016e3e:	b10d      	cbz	r5, 8016e44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8016e40:	1c6b      	adds	r3, r5, #1
 8016e42:	9308      	str	r3, [sp, #32]
 8016e44:	ab0f      	add	r3, sp, #60	; 0x3c
 8016e46:	9305      	str	r3, [sp, #20]
 8016e48:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8016e4c:	9304      	str	r3, [sp, #16]
 8016e4e:	ab0e      	add	r3, sp, #56	; 0x38
 8016e50:	9303      	str	r3, [sp, #12]
 8016e52:	ab0c      	add	r3, sp, #48	; 0x30
 8016e54:	9302      	str	r3, [sp, #8]
 8016e56:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8016e5a:	9301      	str	r3, [sp, #4]
 8016e5c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8016e60:	9300      	str	r3, [sp, #0]
 8016e62:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8016e66:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8016e6a:	a908      	add	r1, sp, #32
 8016e6c:	a809      	add	r0, sp, #36	; 0x24
 8016e6e:	f7ff fea8 	bl	8016bc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8016e72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016e74:	2b00      	cmp	r3, #0
 8016e76:	bfbe      	ittt	lt
 8016e78:	6823      	ldrlt	r3, [r4, #0]
 8016e7a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016e7e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8016e80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016e82:	bfb8      	it	lt
 8016e84:	3404      	addlt	r4, #4
 8016e86:	2b00      	cmp	r3, #0
 8016e88:	bfb8      	it	lt
 8016e8a:	6823      	ldrlt	r3, [r4, #0]
 8016e8c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016e90:	bfbe      	ittt	lt
 8016e92:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016e96:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8016e98:	3404      	addlt	r4, #4
 8016e9a:	b1d9      	cbz	r1, 8016ed4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8016e9c:	880b      	ldrh	r3, [r1, #0]
 8016e9e:	2b69      	cmp	r3, #105	; 0x69
 8016ea0:	d01f      	beq.n	8016ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016ea2:	d82f      	bhi.n	8016f04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8016ea4:	2b58      	cmp	r3, #88	; 0x58
 8016ea6:	d01c      	beq.n	8016ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016ea8:	d818      	bhi.n	8016edc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8016eaa:	2b25      	cmp	r3, #37	; 0x25
 8016eac:	d034      	beq.n	8016f18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8016eae:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8016eb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016eb4:	f1bb 0f00 	cmp.w	fp, #0
 8016eb8:	f000 80b8 	beq.w	801702c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8016ebc:	f8bb 5000 	ldrh.w	r5, [fp]
 8016ec0:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8016ec4:	3301      	adds	r3, #1
 8016ec6:	930d      	str	r3, [sp, #52]	; 0x34
 8016ec8:	e029      	b.n	8016f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016eca:	b10d      	cbz	r5, 8016ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8016ecc:	782a      	ldrb	r2, [r5, #0]
 8016ece:	e785      	b.n	8016ddc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016ed0:	462a      	mov	r2, r5
 8016ed2:	e783      	b.n	8016ddc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016ed4:	2a00      	cmp	r2, #0
 8016ed6:	d0ea      	beq.n	8016eae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016ed8:	7813      	ldrb	r3, [r2, #0]
 8016eda:	e7e0      	b.n	8016e9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8016edc:	3b63      	subs	r3, #99	; 0x63
 8016ede:	2b01      	cmp	r3, #1
 8016ee0:	d8e5      	bhi.n	8016eae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016ee2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8016ee6:	b329      	cbz	r1, 8016f34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8016ee8:	880b      	ldrh	r3, [r1, #0]
 8016eea:	2b69      	cmp	r3, #105	; 0x69
 8016eec:	d063      	beq.n	8016fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016eee:	d825      	bhi.n	8016f3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8016ef0:	2b63      	cmp	r3, #99	; 0x63
 8016ef2:	d038      	beq.n	8016f66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8016ef4:	2b64      	cmp	r3, #100	; 0x64
 8016ef6:	d05e      	beq.n	8016fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016ef8:	2b58      	cmp	r3, #88	; 0x58
 8016efa:	d07b      	beq.n	8016ff4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8016efc:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8016f00:	4625      	mov	r5, r4
 8016f02:	e036      	b.n	8016f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016f04:	2b73      	cmp	r3, #115	; 0x73
 8016f06:	d0ec      	beq.n	8016ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016f08:	d802      	bhi.n	8016f10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8016f0a:	2b6f      	cmp	r3, #111	; 0x6f
 8016f0c:	d1cf      	bne.n	8016eae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016f0e:	e7e8      	b.n	8016ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016f10:	2b75      	cmp	r3, #117	; 0x75
 8016f12:	d0e6      	beq.n	8016ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016f14:	2b78      	cmp	r3, #120	; 0x78
 8016f16:	e7f9      	b.n	8016f0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8016f18:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016f1a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8016f1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016f20:	b10b      	cbz	r3, 8016f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8016f22:	3302      	adds	r3, #2
 8016f24:	9309      	str	r3, [sp, #36]	; 0x24
 8016f26:	9b08      	ldr	r3, [sp, #32]
 8016f28:	2b00      	cmp	r3, #0
 8016f2a:	f43f af2e 	beq.w	8016d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016f2e:	3301      	adds	r3, #1
 8016f30:	9308      	str	r3, [sp, #32]
 8016f32:	e72a      	b.n	8016d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016f34:	2a00      	cmp	r2, #0
 8016f36:	d0e1      	beq.n	8016efc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016f38:	7813      	ldrb	r3, [r2, #0]
 8016f3a:	e7d6      	b.n	8016eea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8016f3c:	2b73      	cmp	r3, #115	; 0x73
 8016f3e:	d036      	beq.n	8016fae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8016f40:	d807      	bhi.n	8016f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8016f42:	2b6f      	cmp	r3, #111	; 0x6f
 8016f44:	d1da      	bne.n	8016efc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016f46:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016f48:	1d25      	adds	r5, r4, #4
 8016f4a:	eba8 0202 	sub.w	r2, r8, r2
 8016f4e:	2308      	movs	r3, #8
 8016f50:	e04a      	b.n	8016fe8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016f52:	2b75      	cmp	r3, #117	; 0x75
 8016f54:	d043      	beq.n	8016fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8016f56:	2b78      	cmp	r3, #120	; 0x78
 8016f58:	d1d0      	bne.n	8016efc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016f5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016f5c:	1d25      	adds	r5, r4, #4
 8016f5e:	eba8 0202 	sub.w	r2, r8, r2
 8016f62:	2310      	movs	r3, #16
 8016f64:	e040      	b.n	8016fe8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016f66:	6823      	ldr	r3, [r4, #0]
 8016f68:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8016f6c:	1d25      	adds	r5, r4, #4
 8016f6e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8016f72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016f74:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8016f78:	2b00      	cmp	r3, #0
 8016f7a:	d052      	beq.n	8017022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8016f7c:	881a      	ldrh	r2, [r3, #0]
 8016f7e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8016f82:	a80d      	add	r0, sp, #52	; 0x34
 8016f84:	9005      	str	r0, [sp, #20]
 8016f86:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8016f8a:	9004      	str	r0, [sp, #16]
 8016f8c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8016f8e:	9003      	str	r0, [sp, #12]
 8016f90:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8016f94:	9002      	str	r0, [sp, #8]
 8016f96:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016f98:	9001      	str	r0, [sp, #4]
 8016f9a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8016f9e:	9000      	str	r0, [sp, #0]
 8016fa0:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8016fa4:	a810      	add	r0, sp, #64	; 0x40
 8016fa6:	f7ff fd49 	bl	8016a3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8016faa:	462c      	mov	r4, r5
 8016fac:	e7b7      	b.n	8016f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016fae:	6823      	ldr	r3, [r4, #0]
 8016fb0:	1d25      	adds	r5, r4, #4
 8016fb2:	9310      	str	r3, [sp, #64]	; 0x40
 8016fb4:	e7dd      	b.n	8016f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016fb6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016fb8:	6820      	ldr	r0, [r4, #0]
 8016fba:	eba8 0202 	sub.w	r2, r8, r2
 8016fbe:	230a      	movs	r3, #10
 8016fc0:	b292      	uxth	r2, r2
 8016fc2:	4649      	mov	r1, r9
 8016fc4:	f7ff fcf0 	bl	80169a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8016fc8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8016fcc:	2b2d      	cmp	r3, #45	; 0x2d
 8016fce:	f104 0504 	add.w	r5, r4, #4
 8016fd2:	d1ce      	bne.n	8016f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016fd4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016fd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016fda:	3302      	adds	r3, #2
 8016fdc:	e7e9      	b.n	8016fb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8016fde:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016fe0:	1d25      	adds	r5, r4, #4
 8016fe2:	eba8 0202 	sub.w	r2, r8, r2
 8016fe6:	230a      	movs	r3, #10
 8016fe8:	b292      	uxth	r2, r2
 8016fea:	4649      	mov	r1, r9
 8016fec:	6820      	ldr	r0, [r4, #0]
 8016fee:	f7ff fd07 	bl	8016a00 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8016ff2:	e7be      	b.n	8016f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016ff4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016ff6:	6820      	ldr	r0, [r4, #0]
 8016ff8:	eba8 0202 	sub.w	r2, r8, r2
 8016ffc:	b292      	uxth	r2, r2
 8016ffe:	2310      	movs	r3, #16
 8017000:	4649      	mov	r1, r9
 8017002:	f7ff fcfd 	bl	8016a00 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017006:	1d25      	adds	r5, r4, #4
 8017008:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801700c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8017010:	2b00      	cmp	r3, #0
 8017012:	d0ae      	beq.n	8016f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017014:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8017018:	2919      	cmp	r1, #25
 801701a:	d8f7      	bhi.n	801700c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801701c:	3b20      	subs	r3, #32
 801701e:	8013      	strh	r3, [r2, #0]
 8017020:	e7f4      	b.n	801700c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017022:	9a08      	ldr	r2, [sp, #32]
 8017024:	2a00      	cmp	r2, #0
 8017026:	d0aa      	beq.n	8016f7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017028:	7812      	ldrb	r2, [r2, #0]
 801702a:	e7a8      	b.n	8016f7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801702c:	2d00      	cmp	r5, #0
 801702e:	f43f af47 	beq.w	8016ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8017032:	782d      	ldrb	r5, [r5, #0]
 8017034:	e744      	b.n	8016ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08017036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8017036:	b507      	push	{r0, r1, r2, lr}
 8017038:	9300      	str	r3, [sp, #0]
 801703a:	4613      	mov	r3, r2
 801703c:	2200      	movs	r2, #0
 801703e:	f7ff fe90 	bl	8016d62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8017042:	b003      	add	sp, #12
 8017044:	f85d fb04 	ldr.w	pc, [sp], #4

08017048 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8017048:	b40c      	push	{r2, r3}
 801704a:	b507      	push	{r0, r1, r2, lr}
 801704c:	ab04      	add	r3, sp, #16
 801704e:	f853 2b04 	ldr.w	r2, [r3], #4
 8017052:	9301      	str	r3, [sp, #4]
 8017054:	f7ff ffef 	bl	8017036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8017058:	b003      	add	sp, #12
 801705a:	f85d eb04 	ldr.w	lr, [sp], #4
 801705e:	b002      	add	sp, #8
 8017060:	4770      	bx	lr
	...

08017064 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8017064:	4b01      	ldr	r3, [pc, #4]	; (801706c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8017066:	6018      	str	r0, [r3, #0]
 8017068:	4770      	bx	lr
 801706a:	bf00      	nop
 801706c:	20013824 	.word	0x20013824

08017070 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8017070:	4b06      	ldr	r3, [pc, #24]	; (801708c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8017072:	881a      	ldrh	r2, [r3, #0]
 8017074:	4282      	cmp	r2, r0
 8017076:	d807      	bhi.n	8017088 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8017078:	4b05      	ldr	r3, [pc, #20]	; (8017090 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801707a:	881b      	ldrh	r3, [r3, #0]
 801707c:	4413      	add	r3, r2
 801707e:	4298      	cmp	r0, r3
 8017080:	bfac      	ite	ge
 8017082:	2000      	movge	r0, #0
 8017084:	2001      	movlt	r0, #1
 8017086:	4770      	bx	lr
 8017088:	2000      	movs	r0, #0
 801708a:	4770      	bx	lr
 801708c:	20013844 	.word	0x20013844
 8017090:	20013848 	.word	0x20013848

08017094 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8017094:	b508      	push	{r3, lr}
 8017096:	4601      	mov	r1, r0
 8017098:	f7ff ffea 	bl	8017070 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801709c:	b118      	cbz	r0, 80170a6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801709e:	4b02      	ldr	r3, [pc, #8]	; (80170a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80170a0:	681b      	ldr	r3, [r3, #0]
 80170a2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80170a6:	bd08      	pop	{r3, pc}
 80170a8:	20013828 	.word	0x20013828

080170ac <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80170ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80170ae:	4c24      	ldr	r4, [pc, #144]	; (8017140 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80170b0:	6823      	ldr	r3, [r4, #0]
 80170b2:	2b00      	cmp	r3, #0
 80170b4:	d042      	beq.n	801713c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80170b6:	4a23      	ldr	r2, [pc, #140]	; (8017144 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80170b8:	4d23      	ldr	r5, [pc, #140]	; (8017148 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80170ba:	8811      	ldrh	r1, [r2, #0]
 80170bc:	f8b5 c000 	ldrh.w	ip, [r5]
 80170c0:	4822      	ldr	r0, [pc, #136]	; (801714c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80170c2:	4461      	add	r1, ip
 80170c4:	1c4a      	adds	r2, r1, #1
 80170c6:	f022 0201 	bic.w	r2, r2, #1
 80170ca:	008f      	lsls	r7, r1, #2
 80170cc:	0412      	lsls	r2, r2, #16
 80170ce:	19de      	adds	r6, r3, r7
 80170d0:	0c12      	lsrs	r2, r2, #16
 80170d2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80170d6:	6006      	str	r6, [r0, #0]
 80170d8:	4e1d      	ldr	r6, [pc, #116]	; (8017150 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80170da:	19da      	adds	r2, r3, r7
 80170dc:	6032      	str	r2, [r6, #0]
 80170de:	220e      	movs	r2, #14
 80170e0:	fb02 f20c 	mul.w	r2, r2, ip
 80170e4:	3203      	adds	r2, #3
 80170e6:	f022 0203 	bic.w	r2, r2, #3
 80170ea:	443a      	add	r2, r7
 80170ec:	4f19      	ldr	r7, [pc, #100]	; (8017154 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80170ee:	4413      	add	r3, r2
 80170f0:	603b      	str	r3, [r7, #0]
 80170f2:	4f19      	ldr	r7, [pc, #100]	; (8017158 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80170f4:	2300      	movs	r3, #0
 80170f6:	803b      	strh	r3, [r7, #0]
 80170f8:	4f18      	ldr	r7, [pc, #96]	; (801715c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80170fa:	683f      	ldr	r7, [r7, #0]
 80170fc:	1aba      	subs	r2, r7, r2
 80170fe:	4f18      	ldr	r7, [pc, #96]	; (8017160 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8017100:	603a      	str	r2, [r7, #0]
 8017102:	4a18      	ldr	r2, [pc, #96]	; (8017164 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8017104:	469c      	mov	ip, r3
 8017106:	8013      	strh	r3, [r2, #0]
 8017108:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801710c:	428b      	cmp	r3, r1
 801710e:	d10d      	bne.n	801712c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8017110:	882d      	ldrh	r5, [r5, #0]
 8017112:	6830      	ldr	r0, [r6, #0]
 8017114:	2300      	movs	r3, #0
 8017116:	240e      	movs	r4, #14
 8017118:	429d      	cmp	r5, r3
 801711a:	d90f      	bls.n	801713c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801711c:	fb04 0203 	mla	r2, r4, r3, r0
 8017120:	3301      	adds	r3, #1
 8017122:	7b11      	ldrb	r1, [r2, #12]
 8017124:	f36f 1145 	bfc	r1, #5, #1
 8017128:	7311      	strb	r1, [r2, #12]
 801712a:	e7f5      	b.n	8017118 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801712c:	6822      	ldr	r2, [r4, #0]
 801712e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8017132:	6802      	ldr	r2, [r0, #0]
 8017134:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8017138:	3301      	adds	r3, #1
 801713a:	e7e7      	b.n	801710c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801713c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801713e:	bf00      	nop
 8017140:	20013828 	.word	0x20013828
 8017144:	20013844 	.word	0x20013844
 8017148:	20013848 	.word	0x20013848
 801714c:	2001383c 	.word	0x2001383c
 8017150:	2001382c 	.word	0x2001382c
 8017154:	20013834 	.word	0x20013834
 8017158:	20013846 	.word	0x20013846
 801715c:	20013830 	.word	0x20013830
 8017160:	20013840 	.word	0x20013840
 8017164:	20013838 	.word	0x20013838

08017168 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8017168:	4b06      	ldr	r3, [pc, #24]	; (8017184 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801716a:	681b      	ldr	r3, [r3, #0]
 801716c:	b943      	cbnz	r3, 8017180 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801716e:	b139      	cbz	r1, 8017180 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017170:	4b05      	ldr	r3, [pc, #20]	; (8017188 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8017172:	801a      	strh	r2, [r3, #0]
 8017174:	4b05      	ldr	r3, [pc, #20]	; (801718c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8017176:	6019      	str	r1, [r3, #0]
 8017178:	4b05      	ldr	r3, [pc, #20]	; (8017190 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801717a:	6018      	str	r0, [r3, #0]
 801717c:	f7ff bf96 	b.w	80170ac <_ZN8touchgfx6Bitmap10clearCacheEv>
 8017180:	4770      	bx	lr
 8017182:	bf00      	nop
 8017184:	20013834 	.word	0x20013834
 8017188:	20013848 	.word	0x20013848
 801718c:	20013830 	.word	0x20013830
 8017190:	20013828 	.word	0x20013828

08017194 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8017194:	b470      	push	{r4, r5, r6}
 8017196:	4c07      	ldr	r4, [pc, #28]	; (80171b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8017198:	6826      	ldr	r6, [r4, #0]
 801719a:	4605      	mov	r5, r0
 801719c:	4610      	mov	r0, r2
 801719e:	9a03      	ldr	r2, [sp, #12]
 80171a0:	b936      	cbnz	r6, 80171b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80171a2:	6025      	str	r5, [r4, #0]
 80171a4:	4c04      	ldr	r4, [pc, #16]	; (80171b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80171a6:	8021      	strh	r1, [r4, #0]
 80171a8:	bc70      	pop	{r4, r5, r6}
 80171aa:	4619      	mov	r1, r3
 80171ac:	f7ff bfdc 	b.w	8017168 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80171b0:	bc70      	pop	{r4, r5, r6}
 80171b2:	4770      	bx	lr
 80171b4:	2001384c 	.word	0x2001384c
 80171b8:	20013844 	.word	0x20013844

080171bc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80171bc:	4a12      	ldr	r2, [pc, #72]	; (8017208 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80171be:	8803      	ldrh	r3, [r0, #0]
 80171c0:	8812      	ldrh	r2, [r2, #0]
 80171c2:	4293      	cmp	r3, r2
 80171c4:	d207      	bcs.n	80171d6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80171c6:	4a11      	ldr	r2, [pc, #68]	; (801720c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80171c8:	6812      	ldr	r2, [r2, #0]
 80171ca:	2114      	movs	r1, #20
 80171cc:	fb01 2303 	mla	r3, r1, r3, r2
 80171d0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80171d4:	4770      	bx	lr
 80171d6:	490e      	ldr	r1, [pc, #56]	; (8017210 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80171d8:	8809      	ldrh	r1, [r1, #0]
 80171da:	4411      	add	r1, r2
 80171dc:	428b      	cmp	r3, r1
 80171de:	da04      	bge.n	80171ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80171e0:	1a9b      	subs	r3, r3, r2
 80171e2:	4a0c      	ldr	r2, [pc, #48]	; (8017214 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80171e4:	210e      	movs	r1, #14
 80171e6:	6812      	ldr	r2, [r2, #0]
 80171e8:	e7f0      	b.n	80171cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80171ea:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80171ee:	4293      	cmp	r3, r2
 80171f0:	d108      	bne.n	8017204 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80171f2:	4b09      	ldr	r3, [pc, #36]	; (8017218 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80171f4:	781b      	ldrb	r3, [r3, #0]
 80171f6:	b91b      	cbnz	r3, 8017200 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80171f8:	4b08      	ldr	r3, [pc, #32]	; (801721c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80171fa:	f9b3 0000 	ldrsh.w	r0, [r3]
 80171fe:	4770      	bx	lr
 8017200:	4b07      	ldr	r3, [pc, #28]	; (8017220 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8017202:	e7fa      	b.n	80171fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8017204:	2000      	movs	r0, #0
 8017206:	4770      	bx	lr
 8017208:	20013844 	.word	0x20013844
 801720c:	2001384c 	.word	0x2001384c
 8017210:	20013848 	.word	0x20013848
 8017214:	2001382c 	.word	0x2001382c
 8017218:	200137b4 	.word	0x200137b4
 801721c:	200137b6 	.word	0x200137b6
 8017220:	200137b8 	.word	0x200137b8

08017224 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8017224:	4a12      	ldr	r2, [pc, #72]	; (8017270 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8017226:	8803      	ldrh	r3, [r0, #0]
 8017228:	8812      	ldrh	r2, [r2, #0]
 801722a:	4293      	cmp	r3, r2
 801722c:	d207      	bcs.n	801723e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801722e:	4a11      	ldr	r2, [pc, #68]	; (8017274 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8017230:	6812      	ldr	r2, [r2, #0]
 8017232:	2114      	movs	r1, #20
 8017234:	fb01 2303 	mla	r3, r1, r3, r2
 8017238:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801723c:	4770      	bx	lr
 801723e:	490e      	ldr	r1, [pc, #56]	; (8017278 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8017240:	8809      	ldrh	r1, [r1, #0]
 8017242:	4411      	add	r1, r2
 8017244:	428b      	cmp	r3, r1
 8017246:	da04      	bge.n	8017252 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8017248:	1a9b      	subs	r3, r3, r2
 801724a:	4a0c      	ldr	r2, [pc, #48]	; (801727c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801724c:	210e      	movs	r1, #14
 801724e:	6812      	ldr	r2, [r2, #0]
 8017250:	e7f0      	b.n	8017234 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8017252:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017256:	4293      	cmp	r3, r2
 8017258:	d108      	bne.n	801726c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801725a:	4b09      	ldr	r3, [pc, #36]	; (8017280 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801725c:	781b      	ldrb	r3, [r3, #0]
 801725e:	b91b      	cbnz	r3, 8017268 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8017260:	4b08      	ldr	r3, [pc, #32]	; (8017284 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8017262:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017266:	4770      	bx	lr
 8017268:	4b07      	ldr	r3, [pc, #28]	; (8017288 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801726a:	e7fa      	b.n	8017262 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801726c:	2000      	movs	r0, #0
 801726e:	4770      	bx	lr
 8017270:	20013844 	.word	0x20013844
 8017274:	2001384c 	.word	0x2001384c
 8017278:	20013848 	.word	0x20013848
 801727c:	2001382c 	.word	0x2001382c
 8017280:	200137b4 	.word	0x200137b4
 8017284:	200137b8 	.word	0x200137b8
 8017288:	200137b6 	.word	0x200137b6

0801728c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801728c:	b510      	push	{r4, lr}
 801728e:	4a1f      	ldr	r2, [pc, #124]	; (801730c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8017290:	880b      	ldrh	r3, [r1, #0]
 8017292:	8812      	ldrh	r2, [r2, #0]
 8017294:	4293      	cmp	r3, r2
 8017296:	d213      	bcs.n	80172c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8017298:	4a1d      	ldr	r2, [pc, #116]	; (8017310 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801729a:	6812      	ldr	r2, [r2, #0]
 801729c:	2114      	movs	r1, #20
 801729e:	fb01 2303 	mla	r3, r1, r3, r2
 80172a2:	8a1a      	ldrh	r2, [r3, #16]
 80172a4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80172a8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80172ac:	8a5b      	ldrh	r3, [r3, #18]
 80172ae:	8004      	strh	r4, [r0, #0]
 80172b0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80172b4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80172b8:	8041      	strh	r1, [r0, #2]
 80172ba:	8082      	strh	r2, [r0, #4]
 80172bc:	80c3      	strh	r3, [r0, #6]
 80172be:	e00e      	b.n	80172de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80172c0:	4914      	ldr	r1, [pc, #80]	; (8017314 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80172c2:	8809      	ldrh	r1, [r1, #0]
 80172c4:	4411      	add	r1, r2
 80172c6:	428b      	cmp	r3, r1
 80172c8:	da0a      	bge.n	80172e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80172ca:	1a9b      	subs	r3, r3, r2
 80172cc:	4a12      	ldr	r2, [pc, #72]	; (8017318 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80172ce:	6812      	ldr	r2, [r2, #0]
 80172d0:	210e      	movs	r1, #14
 80172d2:	fb01 2303 	mla	r3, r1, r3, r2
 80172d6:	681a      	ldr	r2, [r3, #0]
 80172d8:	6002      	str	r2, [r0, #0]
 80172da:	685a      	ldr	r2, [r3, #4]
 80172dc:	6042      	str	r2, [r0, #4]
 80172de:	bd10      	pop	{r4, pc}
 80172e0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80172e4:	4293      	cmp	r3, r2
 80172e6:	d10b      	bne.n	8017300 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80172e8:	4b0c      	ldr	r3, [pc, #48]	; (801731c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80172ea:	f9b3 1000 	ldrsh.w	r1, [r3]
 80172ee:	4b0c      	ldr	r3, [pc, #48]	; (8017320 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80172f0:	8081      	strh	r1, [r0, #4]
 80172f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80172f6:	80c2      	strh	r2, [r0, #6]
 80172f8:	2300      	movs	r3, #0
 80172fa:	8003      	strh	r3, [r0, #0]
 80172fc:	8043      	strh	r3, [r0, #2]
 80172fe:	e7ee      	b.n	80172de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8017300:	2300      	movs	r3, #0
 8017302:	8003      	strh	r3, [r0, #0]
 8017304:	8043      	strh	r3, [r0, #2]
 8017306:	8083      	strh	r3, [r0, #4]
 8017308:	e7d8      	b.n	80172bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801730a:	bf00      	nop
 801730c:	20013844 	.word	0x20013844
 8017310:	2001384c 	.word	0x2001384c
 8017314:	20013848 	.word	0x20013848
 8017318:	2001382c 	.word	0x2001382c
 801731c:	200137b0 	.word	0x200137b0
 8017320:	200137b2 	.word	0x200137b2

08017324 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8017324:	4a17      	ldr	r2, [pc, #92]	; (8017384 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8017326:	8803      	ldrh	r3, [r0, #0]
 8017328:	8812      	ldrh	r2, [r2, #0]
 801732a:	4293      	cmp	r3, r2
 801732c:	d213      	bcs.n	8017356 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801732e:	4a16      	ldr	r2, [pc, #88]	; (8017388 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8017330:	6812      	ldr	r2, [r2, #0]
 8017332:	2114      	movs	r1, #20
 8017334:	fb01 2303 	mla	r3, r1, r3, r2
 8017338:	8a1a      	ldrh	r2, [r3, #16]
 801733a:	8919      	ldrh	r1, [r3, #8]
 801733c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017340:	428a      	cmp	r2, r1
 8017342:	db1d      	blt.n	8017380 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017344:	8a58      	ldrh	r0, [r3, #18]
 8017346:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801734a:	895b      	ldrh	r3, [r3, #10]
 801734c:	4298      	cmp	r0, r3
 801734e:	bfac      	ite	ge
 8017350:	2000      	movge	r0, #0
 8017352:	2001      	movlt	r0, #1
 8017354:	4770      	bx	lr
 8017356:	490d      	ldr	r1, [pc, #52]	; (801738c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8017358:	8809      	ldrh	r1, [r1, #0]
 801735a:	4411      	add	r1, r2
 801735c:	428b      	cmp	r3, r1
 801735e:	da0d      	bge.n	801737c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8017360:	1a9b      	subs	r3, r3, r2
 8017362:	4a0b      	ldr	r2, [pc, #44]	; (8017390 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8017364:	6812      	ldr	r2, [r2, #0]
 8017366:	210e      	movs	r1, #14
 8017368:	fb01 2303 	mla	r3, r1, r3, r2
 801736c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8017370:	891a      	ldrh	r2, [r3, #8]
 8017372:	4291      	cmp	r1, r2
 8017374:	db04      	blt.n	8017380 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017376:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801737a:	e7e6      	b.n	801734a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801737c:	2000      	movs	r0, #0
 801737e:	4770      	bx	lr
 8017380:	2001      	movs	r0, #1
 8017382:	4770      	bx	lr
 8017384:	20013844 	.word	0x20013844
 8017388:	2001384c 	.word	0x2001384c
 801738c:	20013848 	.word	0x20013848
 8017390:	2001382c 	.word	0x2001382c

08017394 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8017394:	4a12      	ldr	r2, [pc, #72]	; (80173e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8017396:	8803      	ldrh	r3, [r0, #0]
 8017398:	8811      	ldrh	r1, [r2, #0]
 801739a:	428b      	cmp	r3, r1
 801739c:	d20b      	bcs.n	80173b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801739e:	4a11      	ldr	r2, [pc, #68]	; (80173e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80173a0:	6812      	ldr	r2, [r2, #0]
 80173a2:	b112      	cbz	r2, 80173aa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80173a4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80173a8:	b9c0      	cbnz	r0, 80173dc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80173aa:	4a0f      	ldr	r2, [pc, #60]	; (80173e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80173ac:	6811      	ldr	r1, [r2, #0]
 80173ae:	2214      	movs	r2, #20
 80173b0:	4353      	muls	r3, r2
 80173b2:	58c8      	ldr	r0, [r1, r3]
 80173b4:	4770      	bx	lr
 80173b6:	4a0d      	ldr	r2, [pc, #52]	; (80173ec <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80173b8:	8812      	ldrh	r2, [r2, #0]
 80173ba:	440a      	add	r2, r1
 80173bc:	4293      	cmp	r3, r2
 80173be:	da04      	bge.n	80173ca <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80173c0:	4a08      	ldr	r2, [pc, #32]	; (80173e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80173c2:	6812      	ldr	r2, [r2, #0]
 80173c4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80173c8:	4770      	bx	lr
 80173ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80173ce:	4293      	cmp	r3, r2
 80173d0:	d103      	bne.n	80173da <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80173d2:	4b07      	ldr	r3, [pc, #28]	; (80173f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80173d4:	681b      	ldr	r3, [r3, #0]
 80173d6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80173d8:	4770      	bx	lr
 80173da:	2000      	movs	r0, #0
 80173dc:	4770      	bx	lr
 80173de:	bf00      	nop
 80173e0:	20013844 	.word	0x20013844
 80173e4:	20013828 	.word	0x20013828
 80173e8:	2001384c 	.word	0x2001384c
 80173ec:	20013848 	.word	0x20013848
 80173f0:	200137bc 	.word	0x200137bc

080173f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80173f4:	4b24      	ldr	r3, [pc, #144]	; (8017488 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80173f6:	8802      	ldrh	r2, [r0, #0]
 80173f8:	8818      	ldrh	r0, [r3, #0]
 80173fa:	4282      	cmp	r2, r0
 80173fc:	d221      	bcs.n	8017442 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80173fe:	4b23      	ldr	r3, [pc, #140]	; (801748c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8017400:	6819      	ldr	r1, [r3, #0]
 8017402:	2314      	movs	r3, #20
 8017404:	fb03 1302 	mla	r3, r3, r2, r1
 8017408:	6858      	ldr	r0, [r3, #4]
 801740a:	2800      	cmp	r0, #0
 801740c:	d03a      	beq.n	8017484 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801740e:	4920      	ldr	r1, [pc, #128]	; (8017490 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8017410:	6809      	ldr	r1, [r1, #0]
 8017412:	2900      	cmp	r1, #0
 8017414:	d036      	beq.n	8017484 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017416:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801741a:	2900      	cmp	r1, #0
 801741c:	d032      	beq.n	8017484 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801741e:	891a      	ldrh	r2, [r3, #8]
 8017420:	8958      	ldrh	r0, [r3, #10]
 8017422:	4350      	muls	r0, r2
 8017424:	7c5a      	ldrb	r2, [r3, #17]
 8017426:	7cdb      	ldrb	r3, [r3, #19]
 8017428:	0952      	lsrs	r2, r2, #5
 801742a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801742e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8017432:	2b0b      	cmp	r3, #11
 8017434:	bf18      	it	ne
 8017436:	0040      	lslne	r0, r0, #1
 8017438:	3003      	adds	r0, #3
 801743a:	f020 0003 	bic.w	r0, r0, #3
 801743e:	4408      	add	r0, r1
 8017440:	4770      	bx	lr
 8017442:	4b14      	ldr	r3, [pc, #80]	; (8017494 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8017444:	881b      	ldrh	r3, [r3, #0]
 8017446:	4403      	add	r3, r0
 8017448:	429a      	cmp	r2, r3
 801744a:	da1a      	bge.n	8017482 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801744c:	4b12      	ldr	r3, [pc, #72]	; (8017498 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801744e:	681b      	ldr	r3, [r3, #0]
 8017450:	1a10      	subs	r0, r2, r0
 8017452:	210e      	movs	r1, #14
 8017454:	fb01 3000 	mla	r0, r1, r0, r3
 8017458:	7b03      	ldrb	r3, [r0, #12]
 801745a:	f003 031f 	and.w	r3, r3, #31
 801745e:	2b0b      	cmp	r3, #11
 8017460:	d10b      	bne.n	801747a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8017462:	8903      	ldrh	r3, [r0, #8]
 8017464:	8940      	ldrh	r0, [r0, #10]
 8017466:	4358      	muls	r0, r3
 8017468:	4b09      	ldr	r3, [pc, #36]	; (8017490 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801746a:	6819      	ldr	r1, [r3, #0]
 801746c:	3003      	adds	r0, #3
 801746e:	f020 0303 	bic.w	r3, r0, #3
 8017472:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8017476:	4418      	add	r0, r3
 8017478:	4770      	bx	lr
 801747a:	2b0d      	cmp	r3, #13
 801747c:	d101      	bne.n	8017482 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801747e:	300d      	adds	r0, #13
 8017480:	4770      	bx	lr
 8017482:	2000      	movs	r0, #0
 8017484:	4770      	bx	lr
 8017486:	bf00      	nop
 8017488:	20013844 	.word	0x20013844
 801748c:	2001384c 	.word	0x2001384c
 8017490:	20013828 	.word	0x20013828
 8017494:	20013848 	.word	0x20013848
 8017498:	2001382c 	.word	0x2001382c

0801749c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801749c:	b510      	push	{r4, lr}
 801749e:	4a17      	ldr	r2, [pc, #92]	; (80174fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80174a0:	8803      	ldrh	r3, [r0, #0]
 80174a2:	8812      	ldrh	r2, [r2, #0]
 80174a4:	4293      	cmp	r3, r2
 80174a6:	d20c      	bcs.n	80174c2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80174a8:	4a15      	ldr	r2, [pc, #84]	; (8017500 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80174aa:	6812      	ldr	r2, [r2, #0]
 80174ac:	2114      	movs	r1, #20
 80174ae:	fb01 2303 	mla	r3, r1, r3, r2
 80174b2:	7c58      	ldrb	r0, [r3, #17]
 80174b4:	0942      	lsrs	r2, r0, #5
 80174b6:	7cd8      	ldrb	r0, [r3, #19]
 80174b8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80174bc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80174c0:	bd10      	pop	{r4, pc}
 80174c2:	4910      	ldr	r1, [pc, #64]	; (8017504 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80174c4:	8809      	ldrh	r1, [r1, #0]
 80174c6:	4411      	add	r1, r2
 80174c8:	428b      	cmp	r3, r1
 80174ca:	da09      	bge.n	80174e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80174cc:	1a9b      	subs	r3, r3, r2
 80174ce:	4a0e      	ldr	r2, [pc, #56]	; (8017508 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80174d0:	6812      	ldr	r2, [r2, #0]
 80174d2:	210e      	movs	r1, #14
 80174d4:	fb01 2303 	mla	r3, r1, r3, r2
 80174d8:	7b18      	ldrb	r0, [r3, #12]
 80174da:	f000 001f 	and.w	r0, r0, #31
 80174de:	e7ef      	b.n	80174c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80174e0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80174e4:	4293      	cmp	r3, r2
 80174e6:	d106      	bne.n	80174f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80174e8:	f7eb fcf0 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 80174ec:	6803      	ldr	r3, [r0, #0]
 80174ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80174f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80174f4:	4718      	bx	r3
 80174f6:	2000      	movs	r0, #0
 80174f8:	e7e2      	b.n	80174c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80174fa:	bf00      	nop
 80174fc:	20013844 	.word	0x20013844
 8017500:	2001384c 	.word	0x2001384c
 8017504:	20013848 	.word	0x20013848
 8017508:	2001382c 	.word	0x2001382c

0801750c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801750c:	2010      	movs	r0, #16
 801750e:	4770      	bx	lr

08017510 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8017510:	2000      	movs	r0, #0
 8017512:	4770      	bx	lr

08017514 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8017514:	4b02      	ldr	r3, [pc, #8]	; (8017520 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8017516:	8818      	ldrh	r0, [r3, #0]
 8017518:	0040      	lsls	r0, r0, #1
 801751a:	b280      	uxth	r0, r0
 801751c:	4770      	bx	lr
 801751e:	bf00      	nop
 8017520:	200137b6 	.word	0x200137b6

08017524 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017524:	2bff      	cmp	r3, #255	; 0xff
 8017526:	d050      	beq.n	80175ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8017528:	2a0b      	cmp	r2, #11
 801752a:	d04a      	beq.n	80175c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801752c:	d80e      	bhi.n	801754c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801752e:	2a03      	cmp	r2, #3
 8017530:	d03f      	beq.n	80175b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8017532:	d804      	bhi.n	801753e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8017534:	2a01      	cmp	r2, #1
 8017536:	d03e      	beq.n	80175b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8017538:	d93f      	bls.n	80175ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801753a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801753c:	4770      	bx	lr
 801753e:	2a09      	cmp	r2, #9
 8017540:	d03f      	beq.n	80175c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8017542:	d83c      	bhi.n	80175be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8017544:	2a08      	cmp	r2, #8
 8017546:	d03a      	beq.n	80175be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8017548:	2000      	movs	r0, #0
 801754a:	4770      	bx	lr
 801754c:	2a2f      	cmp	r2, #47	; 0x2f
 801754e:	d024      	beq.n	801759a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8017550:	d80d      	bhi.n	801756e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8017552:	2a2d      	cmp	r2, #45	; 0x2d
 8017554:	d014      	beq.n	8017580 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8017556:	d826      	bhi.n	80175a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8017558:	2a2c      	cmp	r2, #44	; 0x2c
 801755a:	d1f5      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801755c:	684b      	ldr	r3, [r1, #4]
 801755e:	781b      	ldrb	r3, [r3, #0]
 8017560:	2b01      	cmp	r3, #1
 8017562:	d018      	beq.n	8017596 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8017564:	d323      	bcc.n	80175ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8017566:	2b02      	cmp	r3, #2
 8017568:	d1ee      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801756a:	6880      	ldr	r0, [r0, #8]
 801756c:	4770      	bx	lr
 801756e:	2a31      	cmp	r2, #49	; 0x31
 8017570:	d004      	beq.n	801757c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8017572:	d328      	bcc.n	80175c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8017574:	2a32      	cmp	r2, #50	; 0x32
 8017576:	d026      	beq.n	80175c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8017578:	2a33      	cmp	r2, #51	; 0x33
 801757a:	d1e5      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801757c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801757e:	4770      	bx	lr
 8017580:	684b      	ldr	r3, [r1, #4]
 8017582:	781b      	ldrb	r3, [r3, #0]
 8017584:	2b01      	cmp	r3, #1
 8017586:	d004      	beq.n	8017592 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8017588:	d30b      	bcc.n	80175a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801758a:	2b02      	cmp	r3, #2
 801758c:	d1dc      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801758e:	6900      	ldr	r0, [r0, #16]
 8017590:	4770      	bx	lr
 8017592:	6a00      	ldr	r0, [r0, #32]
 8017594:	4770      	bx	lr
 8017596:	6980      	ldr	r0, [r0, #24]
 8017598:	4770      	bx	lr
 801759a:	684b      	ldr	r3, [r1, #4]
 801759c:	781b      	ldrb	r3, [r3, #0]
 801759e:	2b00      	cmp	r3, #0
 80175a0:	d1d2      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175a2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80175a4:	4770      	bx	lr
 80175a6:	684b      	ldr	r3, [r1, #4]
 80175a8:	781b      	ldrb	r3, [r3, #0]
 80175aa:	2b00      	cmp	r3, #0
 80175ac:	d1cc      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175ae:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80175b0:	4770      	bx	lr
 80175b2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80175b4:	4770      	bx	lr
 80175b6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80175b8:	4770      	bx	lr
 80175ba:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80175bc:	4770      	bx	lr
 80175be:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80175c0:	4770      	bx	lr
 80175c2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80175c4:	4770      	bx	lr
 80175c6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80175c8:	4770      	bx	lr
 80175ca:	2a0b      	cmp	r2, #11
 80175cc:	d049      	beq.n	8017662 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80175ce:	d80e      	bhi.n	80175ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80175d0:	2a03      	cmp	r2, #3
 80175d2:	d040      	beq.n	8017656 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80175d4:	d804      	bhi.n	80175e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80175d6:	2a01      	cmp	r2, #1
 80175d8:	d03f      	beq.n	801765a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80175da:	d940      	bls.n	801765e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80175dc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80175de:	4770      	bx	lr
 80175e0:	2a09      	cmp	r2, #9
 80175e2:	d03e      	beq.n	8017662 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80175e4:	d801      	bhi.n	80175ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80175e6:	2a08      	cmp	r2, #8
 80175e8:	d1ae      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175ea:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80175ec:	4770      	bx	lr
 80175ee:	2a2f      	cmp	r2, #47	; 0x2f
 80175f0:	d024      	beq.n	801763c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80175f2:	d80d      	bhi.n	8017610 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80175f4:	2a2d      	cmp	r2, #45	; 0x2d
 80175f6:	d014      	beq.n	8017622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80175f8:	d826      	bhi.n	8017648 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80175fa:	2a2c      	cmp	r2, #44	; 0x2c
 80175fc:	d1a4      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175fe:	684b      	ldr	r3, [r1, #4]
 8017600:	781b      	ldrb	r3, [r3, #0]
 8017602:	2b01      	cmp	r3, #1
 8017604:	d018      	beq.n	8017638 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8017606:	d324      	bcc.n	8017652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8017608:	2b02      	cmp	r3, #2
 801760a:	d19d      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801760c:	68c0      	ldr	r0, [r0, #12]
 801760e:	4770      	bx	lr
 8017610:	2a31      	cmp	r2, #49	; 0x31
 8017612:	d004      	beq.n	801761e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8017614:	d327      	bcc.n	8017666 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8017616:	2a32      	cmp	r2, #50	; 0x32
 8017618:	d025      	beq.n	8017666 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801761a:	2a33      	cmp	r2, #51	; 0x33
 801761c:	d194      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801761e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8017620:	4770      	bx	lr
 8017622:	684b      	ldr	r3, [r1, #4]
 8017624:	781b      	ldrb	r3, [r3, #0]
 8017626:	2b01      	cmp	r3, #1
 8017628:	d004      	beq.n	8017634 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801762a:	d30b      	bcc.n	8017644 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801762c:	2b02      	cmp	r3, #2
 801762e:	d18b      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017630:	6940      	ldr	r0, [r0, #20]
 8017632:	4770      	bx	lr
 8017634:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8017636:	4770      	bx	lr
 8017638:	69c0      	ldr	r0, [r0, #28]
 801763a:	4770      	bx	lr
 801763c:	684b      	ldr	r3, [r1, #4]
 801763e:	781b      	ldrb	r3, [r3, #0]
 8017640:	2b00      	cmp	r3, #0
 8017642:	d181      	bne.n	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017644:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8017646:	4770      	bx	lr
 8017648:	684b      	ldr	r3, [r1, #4]
 801764a:	781b      	ldrb	r3, [r3, #0]
 801764c:	2b00      	cmp	r3, #0
 801764e:	f47f af7b 	bne.w	8017548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017652:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8017654:	4770      	bx	lr
 8017656:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8017658:	4770      	bx	lr
 801765a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801765c:	4770      	bx	lr
 801765e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8017660:	4770      	bx	lr
 8017662:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8017664:	4770      	bx	lr
 8017666:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8017668:	4770      	bx	lr

0801766a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801766a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801766e:	b087      	sub	sp, #28
 8017670:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017672:	9205      	str	r2, [sp, #20]
 8017674:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017678:	9202      	str	r2, [sp, #8]
 801767a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801767e:	9101      	str	r1, [sp, #4]
 8017680:	6841      	ldr	r1, [r0, #4]
 8017682:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8017686:	fb01 2404 	mla	r4, r1, r4, r2
 801768a:	6802      	ldr	r2, [r0, #0]
 801768c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017690:	f8de 2000 	ldr.w	r2, [lr]
 8017694:	9203      	str	r2, [sp, #12]
 8017696:	f8de 2004 	ldr.w	r2, [lr, #4]
 801769a:	3204      	adds	r2, #4
 801769c:	9204      	str	r2, [sp, #16]
 801769e:	9a02      	ldr	r2, [sp, #8]
 80176a0:	43d6      	mvns	r6, r2
 80176a2:	b2f6      	uxtb	r6, r6
 80176a4:	9a01      	ldr	r2, [sp, #4]
 80176a6:	2a00      	cmp	r2, #0
 80176a8:	dc03      	bgt.n	80176b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80176aa:	9a05      	ldr	r2, [sp, #20]
 80176ac:	2a00      	cmp	r2, #0
 80176ae:	f340 8129 	ble.w	8017904 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80176b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80176b4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80176b8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80176bc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80176c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80176c2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80176c6:	2b00      	cmp	r3, #0
 80176c8:	dd0e      	ble.n	80176e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80176ca:	1408      	asrs	r0, r1, #16
 80176cc:	d405      	bmi.n	80176da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80176ce:	4560      	cmp	r0, ip
 80176d0:	da03      	bge.n	80176da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80176d2:	1410      	asrs	r0, r2, #16
 80176d4:	d401      	bmi.n	80176da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80176d6:	42b8      	cmp	r0, r7
 80176d8:	db07      	blt.n	80176ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80176da:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80176dc:	4401      	add	r1, r0
 80176de:	9814      	ldr	r0, [sp, #80]	; 0x50
 80176e0:	3b01      	subs	r3, #1
 80176e2:	4402      	add	r2, r0
 80176e4:	3402      	adds	r4, #2
 80176e6:	e7ee      	b.n	80176c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80176e8:	d071      	beq.n	80177ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80176ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80176ec:	1e58      	subs	r0, r3, #1
 80176ee:	fb05 1500 	mla	r5, r5, r0, r1
 80176f2:	142d      	asrs	r5, r5, #16
 80176f4:	d45f      	bmi.n	80177b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80176f6:	4565      	cmp	r5, ip
 80176f8:	da5d      	bge.n	80177b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80176fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80176fc:	fb05 2000 	mla	r0, r5, r0, r2
 8017700:	1400      	asrs	r0, r0, #16
 8017702:	d458      	bmi.n	80177b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017704:	42b8      	cmp	r0, r7
 8017706:	da56      	bge.n	80177b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017708:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801770c:	4699      	mov	r9, r3
 801770e:	46a2      	mov	sl, r4
 8017710:	f1b9 0f00 	cmp.w	r9, #0
 8017714:	dd57      	ble.n	80177c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8017716:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801771a:	9803      	ldr	r0, [sp, #12]
 801771c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8017720:	140d      	asrs	r5, r1, #16
 8017722:	fb07 000c 	mla	r0, r7, ip, r0
 8017726:	f109 39ff 	add.w	r9, r9, #4294967295
 801772a:	5d40      	ldrb	r0, [r0, r5]
 801772c:	9d04      	ldr	r5, [sp, #16]
 801772e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017732:	f8ba 5000 	ldrh.w	r5, [sl]
 8017736:	122f      	asrs	r7, r5, #8
 8017738:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801773c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017740:	fb17 f706 	smulbb	r7, r7, r6
 8017744:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017748:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801774c:	00ed      	lsls	r5, r5, #3
 801774e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8017752:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8017756:	10c7      	asrs	r7, r0, #3
 8017758:	b2ed      	uxtb	r5, r5
 801775a:	00c0      	lsls	r0, r0, #3
 801775c:	fb18 f806 	smulbb	r8, r8, r6
 8017760:	fb15 f506 	smulbb	r5, r5, r6
 8017764:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017768:	b2c0      	uxtb	r0, r0
 801776a:	fa1f fc8c 	uxth.w	ip, ip
 801776e:	fb07 870b 	mla	r7, r7, fp, r8
 8017772:	fb00 500b 	mla	r0, r0, fp, r5
 8017776:	b280      	uxth	r0, r0
 8017778:	b2bf      	uxth	r7, r7
 801777a:	f10c 0501 	add.w	r5, ip, #1
 801777e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017782:	f107 0801 	add.w	r8, r7, #1
 8017786:	1c45      	adds	r5, r0, #1
 8017788:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801778c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8017790:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017792:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017796:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801779a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801779e:	ea45 0c0c 	orr.w	ip, r5, ip
 80177a2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80177a6:	4401      	add	r1, r0
 80177a8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80177aa:	ea4c 0c08 	orr.w	ip, ip, r8
 80177ae:	f82a cb02 	strh.w	ip, [sl], #2
 80177b2:	4402      	add	r2, r0
 80177b4:	e7ac      	b.n	8017710 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80177b6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80177ba:	f04f 0800 	mov.w	r8, #0
 80177be:	eb03 0008 	add.w	r0, r3, r8
 80177c2:	2800      	cmp	r0, #0
 80177c4:	dc41      	bgt.n	801784a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80177c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80177ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80177ce:	9b01      	ldr	r3, [sp, #4]
 80177d0:	2b00      	cmp	r3, #0
 80177d2:	f340 8097 	ble.w	8017904 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80177d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80177da:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80177de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80177e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80177e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80177e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80177ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80177f0:	eef0 6a62 	vmov.f32	s13, s5
 80177f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80177f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80177fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017800:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8017804:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017808:	eef0 6a43 	vmov.f32	s13, s6
 801780c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017810:	ee12 2a90 	vmov	r2, s5
 8017814:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017818:	fb92 f3f3 	sdiv	r3, r2, r3
 801781c:	ee13 2a10 	vmov	r2, s6
 8017820:	9313      	str	r3, [sp, #76]	; 0x4c
 8017822:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017824:	fb92 f3f3 	sdiv	r3, r2, r3
 8017828:	9314      	str	r3, [sp, #80]	; 0x50
 801782a:	9b01      	ldr	r3, [sp, #4]
 801782c:	9a05      	ldr	r2, [sp, #20]
 801782e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017832:	3b01      	subs	r3, #1
 8017834:	9301      	str	r3, [sp, #4]
 8017836:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801783a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801783c:	eeb0 3a67 	vmov.f32	s6, s15
 8017840:	bf08      	it	eq
 8017842:	4613      	moveq	r3, r2
 8017844:	eef0 2a47 	vmov.f32	s5, s14
 8017848:	e72c      	b.n	80176a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801784a:	140f      	asrs	r7, r1, #16
 801784c:	d453      	bmi.n	80178f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801784e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017852:	42bd      	cmp	r5, r7
 8017854:	dd4f      	ble.n	80178f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017856:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801785a:	d44c      	bmi.n	80178f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801785c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017860:	4560      	cmp	r0, ip
 8017862:	dd48      	ble.n	80178f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017864:	9803      	ldr	r0, [sp, #12]
 8017866:	b22d      	sxth	r5, r5
 8017868:	fb0c 0505 	mla	r5, ip, r5, r0
 801786c:	5de8      	ldrb	r0, [r5, r7]
 801786e:	9d04      	ldr	r5, [sp, #16]
 8017870:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017874:	f06f 0501 	mvn.w	r5, #1
 8017878:	fb05 fb08 	mul.w	fp, r5, r8
 801787c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017880:	f834 500b 	ldrh.w	r5, [r4, fp]
 8017884:	122f      	asrs	r7, r5, #8
 8017886:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801788a:	fb17 f706 	smulbb	r7, r7, r6
 801788e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017892:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017896:	00ed      	lsls	r5, r5, #3
 8017898:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801789c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80178a0:	10c7      	asrs	r7, r0, #3
 80178a2:	b2ed      	uxtb	r5, r5
 80178a4:	00c0      	lsls	r0, r0, #3
 80178a6:	fb19 f906 	smulbb	r9, r9, r6
 80178aa:	fb15 f506 	smulbb	r5, r5, r6
 80178ae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80178b2:	b2c0      	uxtb	r0, r0
 80178b4:	fa1f fc8c 	uxth.w	ip, ip
 80178b8:	fb07 970a 	mla	r7, r7, sl, r9
 80178bc:	fb00 500a 	mla	r0, r0, sl, r5
 80178c0:	b2bf      	uxth	r7, r7
 80178c2:	b280      	uxth	r0, r0
 80178c4:	f10c 0501 	add.w	r5, ip, #1
 80178c8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80178cc:	f107 0901 	add.w	r9, r7, #1
 80178d0:	1c45      	adds	r5, r0, #1
 80178d2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80178d6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80178da:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80178de:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80178e2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80178e6:	ea45 0c0c 	orr.w	ip, r5, ip
 80178ea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80178ee:	ea4c 0c09 	orr.w	ip, ip, r9
 80178f2:	f824 c00b 	strh.w	ip, [r4, fp]
 80178f6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80178f8:	4401      	add	r1, r0
 80178fa:	9814      	ldr	r0, [sp, #80]	; 0x50
 80178fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8017900:	4402      	add	r2, r0
 8017902:	e75c      	b.n	80177be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8017904:	b007      	add	sp, #28
 8017906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801790a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801790a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801790e:	b085      	sub	sp, #20
 8017910:	4693      	mov	fp, r2
 8017912:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017914:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8017916:	6870      	ldr	r0, [r6, #4]
 8017918:	9100      	str	r1, [sp, #0]
 801791a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801791e:	fb00 2404 	mla	r4, r0, r4, r2
 8017922:	6832      	ldr	r2, [r6, #0]
 8017924:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017928:	682a      	ldr	r2, [r5, #0]
 801792a:	9201      	str	r2, [sp, #4]
 801792c:	686a      	ldr	r2, [r5, #4]
 801792e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8017932:	3204      	adds	r2, #4
 8017934:	9202      	str	r2, [sp, #8]
 8017936:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801793a:	9a00      	ldr	r2, [sp, #0]
 801793c:	2a00      	cmp	r2, #0
 801793e:	dc03      	bgt.n	8017948 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017940:	f1bb 0f00 	cmp.w	fp, #0
 8017944:	f340 80a0 	ble.w	8017a88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8017948:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801794a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801794e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8017952:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017956:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017958:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801795c:	2b00      	cmp	r3, #0
 801795e:	dd0c      	ble.n	801797a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017960:	1406      	asrs	r6, r0, #16
 8017962:	d405      	bmi.n	8017970 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017964:	454e      	cmp	r6, r9
 8017966:	da03      	bge.n	8017970 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017968:	1416      	asrs	r6, r2, #16
 801796a:	d401      	bmi.n	8017970 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801796c:	4546      	cmp	r6, r8
 801796e:	db05      	blt.n	801797c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017970:	4470      	add	r0, lr
 8017972:	4462      	add	r2, ip
 8017974:	3b01      	subs	r3, #1
 8017976:	3402      	adds	r4, #2
 8017978:	e7f0      	b.n	801795c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801797a:	d00f      	beq.n	801799c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801797c:	1e5e      	subs	r6, r3, #1
 801797e:	fb0e 0706 	mla	r7, lr, r6, r0
 8017982:	143f      	asrs	r7, r7, #16
 8017984:	d541      	bpl.n	8017a0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8017986:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801798a:	4698      	mov	r8, r3
 801798c:	9603      	str	r6, [sp, #12]
 801798e:	f1b8 0f00 	cmp.w	r8, #0
 8017992:	dc59      	bgt.n	8017a48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017994:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017998:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801799c:	9b00      	ldr	r3, [sp, #0]
 801799e:	2b00      	cmp	r3, #0
 80179a0:	dd72      	ble.n	8017a88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80179a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80179a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80179aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80179ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80179b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80179b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80179b8:	eeb0 6a62 	vmov.f32	s12, s5
 80179bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80179c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80179c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80179c8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80179cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80179d0:	eeb0 6a43 	vmov.f32	s12, s6
 80179d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80179d8:	ee12 2a90 	vmov	r2, s5
 80179dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80179e0:	fb92 fef3 	sdiv	lr, r2, r3
 80179e4:	ee13 2a10 	vmov	r2, s6
 80179e8:	fb92 fcf3 	sdiv	ip, r2, r3
 80179ec:	9b00      	ldr	r3, [sp, #0]
 80179ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80179f2:	3b01      	subs	r3, #1
 80179f4:	9300      	str	r3, [sp, #0]
 80179f6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80179fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80179fc:	eeb0 3a67 	vmov.f32	s6, s15
 8017a00:	bf08      	it	eq
 8017a02:	465b      	moveq	r3, fp
 8017a04:	eef0 2a47 	vmov.f32	s5, s14
 8017a08:	e797      	b.n	801793a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017a0a:	454f      	cmp	r7, r9
 8017a0c:	dabb      	bge.n	8017986 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017a0e:	fb0c 2606 	mla	r6, ip, r6, r2
 8017a12:	1436      	asrs	r6, r6, #16
 8017a14:	d4b7      	bmi.n	8017986 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017a16:	4546      	cmp	r6, r8
 8017a18:	dab5      	bge.n	8017986 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017a1a:	461e      	mov	r6, r3
 8017a1c:	46a0      	mov	r8, r4
 8017a1e:	2e00      	cmp	r6, #0
 8017a20:	ddb8      	ble.n	8017994 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017a22:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8017a26:	9901      	ldr	r1, [sp, #4]
 8017a28:	1417      	asrs	r7, r2, #16
 8017a2a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8017a2e:	fb0a 1707 	mla	r7, sl, r7, r1
 8017a32:	9902      	ldr	r1, [sp, #8]
 8017a34:	f817 7009 	ldrb.w	r7, [r7, r9]
 8017a38:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8017a3c:	f828 7b02 	strh.w	r7, [r8], #2
 8017a40:	4470      	add	r0, lr
 8017a42:	4462      	add	r2, ip
 8017a44:	3e01      	subs	r6, #1
 8017a46:	e7ea      	b.n	8017a1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8017a48:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017a4c:	d417      	bmi.n	8017a7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017a4e:	68ae      	ldr	r6, [r5, #8]
 8017a50:	454e      	cmp	r6, r9
 8017a52:	dd14      	ble.n	8017a7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017a54:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8017a58:	d411      	bmi.n	8017a7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017a5a:	68ef      	ldr	r7, [r5, #12]
 8017a5c:	4557      	cmp	r7, sl
 8017a5e:	dd0e      	ble.n	8017a7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017a60:	9f01      	ldr	r7, [sp, #4]
 8017a62:	b236      	sxth	r6, r6
 8017a64:	fb0a 7606 	mla	r6, sl, r6, r7
 8017a68:	9f02      	ldr	r7, [sp, #8]
 8017a6a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8017a6e:	f06f 0101 	mvn.w	r1, #1
 8017a72:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8017a76:	fb01 f608 	mul.w	r6, r1, r8
 8017a7a:	9903      	ldr	r1, [sp, #12]
 8017a7c:	538f      	strh	r7, [r1, r6]
 8017a7e:	4470      	add	r0, lr
 8017a80:	4462      	add	r2, ip
 8017a82:	f108 38ff 	add.w	r8, r8, #4294967295
 8017a86:	e782      	b.n	801798e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017a88:	b005      	add	sp, #20
 8017a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017a8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a92:	b087      	sub	sp, #28
 8017a94:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017a96:	9205      	str	r2, [sp, #20]
 8017a98:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017a9c:	9203      	str	r2, [sp, #12]
 8017a9e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8017aa2:	9102      	str	r1, [sp, #8]
 8017aa4:	6861      	ldr	r1, [r4, #4]
 8017aa6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8017aaa:	fb01 2000 	mla	r0, r1, r0, r2
 8017aae:	6822      	ldr	r2, [r4, #0]
 8017ab0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8017ab4:	9200      	str	r2, [sp, #0]
 8017ab6:	f8dc 2000 	ldr.w	r2, [ip]
 8017aba:	9204      	str	r2, [sp, #16]
 8017abc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017ac0:	3204      	adds	r2, #4
 8017ac2:	9201      	str	r2, [sp, #4]
 8017ac4:	9a03      	ldr	r2, [sp, #12]
 8017ac6:	43d5      	mvns	r5, r2
 8017ac8:	b2ed      	uxtb	r5, r5
 8017aca:	9a02      	ldr	r2, [sp, #8]
 8017acc:	2a00      	cmp	r2, #0
 8017ace:	dc03      	bgt.n	8017ad8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017ad0:	9a05      	ldr	r2, [sp, #20]
 8017ad2:	2a00      	cmp	r2, #0
 8017ad4:	f340 812c 	ble.w	8017d30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017ad8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017ada:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8017ade:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8017ae2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017ae6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017ae8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017aec:	2b00      	cmp	r3, #0
 8017aee:	dd10      	ble.n	8017b12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017af0:	140c      	asrs	r4, r1, #16
 8017af2:	d405      	bmi.n	8017b00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017af4:	4574      	cmp	r4, lr
 8017af6:	da03      	bge.n	8017b00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017af8:	1414      	asrs	r4, r2, #16
 8017afa:	d401      	bmi.n	8017b00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017afc:	42bc      	cmp	r4, r7
 8017afe:	db09      	blt.n	8017b14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017b00:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017b02:	9800      	ldr	r0, [sp, #0]
 8017b04:	4421      	add	r1, r4
 8017b06:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017b08:	3002      	adds	r0, #2
 8017b0a:	4422      	add	r2, r4
 8017b0c:	3b01      	subs	r3, #1
 8017b0e:	9000      	str	r0, [sp, #0]
 8017b10:	e7ec      	b.n	8017aec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017b12:	d071      	beq.n	8017bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8017b14:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017b16:	1e5c      	subs	r4, r3, #1
 8017b18:	fb06 1604 	mla	r6, r6, r4, r1
 8017b1c:	1436      	asrs	r6, r6, #16
 8017b1e:	d45d      	bmi.n	8017bdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017b20:	4576      	cmp	r6, lr
 8017b22:	da5b      	bge.n	8017bdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017b24:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8017b26:	fb06 2404 	mla	r4, r6, r4, r2
 8017b2a:	1424      	asrs	r4, r4, #16
 8017b2c:	d456      	bmi.n	8017bdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017b2e:	42bc      	cmp	r4, r7
 8017b30:	da54      	bge.n	8017bdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017b32:	f8dd 9000 	ldr.w	r9, [sp]
 8017b36:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8017b3a:	4698      	mov	r8, r3
 8017b3c:	f1b8 0f00 	cmp.w	r8, #0
 8017b40:	dd54      	ble.n	8017bec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8017b42:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8017b46:	9804      	ldr	r0, [sp, #16]
 8017b48:	1414      	asrs	r4, r2, #16
 8017b4a:	fb07 0404 	mla	r4, r7, r4, r0
 8017b4e:	140e      	asrs	r6, r1, #16
 8017b50:	9801      	ldr	r0, [sp, #4]
 8017b52:	f814 e006 	ldrb.w	lr, [r4, r6]
 8017b56:	f8b9 4000 	ldrh.w	r4, [r9]
 8017b5a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017b5e:	eb00 0b0e 	add.w	fp, r0, lr
 8017b62:	1227      	asrs	r7, r4, #8
 8017b64:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017b68:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017b6c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8017b70:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017b72:	fb16 f60a 	smulbb	r6, r6, sl
 8017b76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017b7a:	fb07 6705 	mla	r7, r7, r5, r6
 8017b7e:	10e6      	asrs	r6, r4, #3
 8017b80:	00e4      	lsls	r4, r4, #3
 8017b82:	b2e4      	uxtb	r4, r4
 8017b84:	fb1b fb0a 	smulbb	fp, fp, sl
 8017b88:	fb14 f405 	smulbb	r4, r4, r5
 8017b8c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017b90:	b2bf      	uxth	r7, r7
 8017b92:	fb06 b605 	mla	r6, r6, r5, fp
 8017b96:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8017b9a:	b2b6      	uxth	r6, r6
 8017b9c:	fa1f fe8e 	uxth.w	lr, lr
 8017ba0:	1c7c      	adds	r4, r7, #1
 8017ba2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017ba6:	f106 0b01 	add.w	fp, r6, #1
 8017baa:	f10e 0401 	add.w	r4, lr, #1
 8017bae:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8017bb2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017bb6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017bba:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8017bbe:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017bc2:	4327      	orrs	r7, r4
 8017bc4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017bc8:	4401      	add	r1, r0
 8017bca:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017bcc:	ea47 070b 	orr.w	r7, r7, fp
 8017bd0:	f829 7b02 	strh.w	r7, [r9], #2
 8017bd4:	4402      	add	r2, r0
 8017bd6:	f108 38ff 	add.w	r8, r8, #4294967295
 8017bda:	e7af      	b.n	8017b3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8017bdc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8017be0:	f04f 0e00 	mov.w	lr, #0
 8017be4:	eb03 040e 	add.w	r4, r3, lr
 8017be8:	2c00      	cmp	r4, #0
 8017bea:	dc43      	bgt.n	8017c74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8017bec:	9a00      	ldr	r2, [sp, #0]
 8017bee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017bf2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017bf6:	9300      	str	r3, [sp, #0]
 8017bf8:	9b02      	ldr	r3, [sp, #8]
 8017bfa:	2b00      	cmp	r3, #0
 8017bfc:	f340 8098 	ble.w	8017d30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017c00:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017c04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017c08:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017c0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017c12:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017c16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017c1a:	eef0 6a62 	vmov.f32	s13, s5
 8017c1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017c22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017c26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017c2a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8017c2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017c32:	eef0 6a43 	vmov.f32	s13, s6
 8017c36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017c3a:	ee12 2a90 	vmov	r2, s5
 8017c3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017c42:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c46:	ee13 2a10 	vmov	r2, s6
 8017c4a:	9313      	str	r3, [sp, #76]	; 0x4c
 8017c4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c52:	9314      	str	r3, [sp, #80]	; 0x50
 8017c54:	9b02      	ldr	r3, [sp, #8]
 8017c56:	9a05      	ldr	r2, [sp, #20]
 8017c58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017c5c:	3b01      	subs	r3, #1
 8017c5e:	9302      	str	r3, [sp, #8]
 8017c60:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8017c64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c66:	eeb0 3a67 	vmov.f32	s6, s15
 8017c6a:	bf08      	it	eq
 8017c6c:	4613      	moveq	r3, r2
 8017c6e:	eef0 2a47 	vmov.f32	s5, s14
 8017c72:	e72a      	b.n	8017aca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017c74:	140f      	asrs	r7, r1, #16
 8017c76:	d454      	bmi.n	8017d22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017c78:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8017c7c:	42be      	cmp	r6, r7
 8017c7e:	dd50      	ble.n	8017d22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017c80:	ea5f 4822 	movs.w	r8, r2, asr #16
 8017c84:	d44d      	bmi.n	8017d22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017c86:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8017c8a:	4544      	cmp	r4, r8
 8017c8c:	dd49      	ble.n	8017d22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017c8e:	9c04      	ldr	r4, [sp, #16]
 8017c90:	b236      	sxth	r6, r6
 8017c92:	fb08 4606 	mla	r6, r8, r6, r4
 8017c96:	f06f 0001 	mvn.w	r0, #1
 8017c9a:	f816 8007 	ldrb.w	r8, [r6, r7]
 8017c9e:	9c01      	ldr	r4, [sp, #4]
 8017ca0:	fb00 fa0e 	mul.w	sl, r0, lr
 8017ca4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017ca8:	9800      	ldr	r0, [sp, #0]
 8017caa:	eb04 0b08 	add.w	fp, r4, r8
 8017cae:	f830 400a 	ldrh.w	r4, [r0, sl]
 8017cb2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017cb6:	9801      	ldr	r0, [sp, #4]
 8017cb8:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017cbc:	f810 8008 	ldrb.w	r8, [r0, r8]
 8017cc0:	9800      	ldr	r0, [sp, #0]
 8017cc2:	1227      	asrs	r7, r4, #8
 8017cc4:	fb16 f609 	smulbb	r6, r6, r9
 8017cc8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017ccc:	fb07 6705 	mla	r7, r7, r5, r6
 8017cd0:	10e6      	asrs	r6, r4, #3
 8017cd2:	00e4      	lsls	r4, r4, #3
 8017cd4:	b2e4      	uxtb	r4, r4
 8017cd6:	fb1b fb09 	smulbb	fp, fp, r9
 8017cda:	fb14 f405 	smulbb	r4, r4, r5
 8017cde:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017ce2:	b2bf      	uxth	r7, r7
 8017ce4:	fb06 b605 	mla	r6, r6, r5, fp
 8017ce8:	fb08 4809 	mla	r8, r8, r9, r4
 8017cec:	b2b6      	uxth	r6, r6
 8017cee:	fa1f f888 	uxth.w	r8, r8
 8017cf2:	1c7c      	adds	r4, r7, #1
 8017cf4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017cf8:	f106 0b01 	add.w	fp, r6, #1
 8017cfc:	f108 0401 	add.w	r4, r8, #1
 8017d00:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8017d04:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017d08:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017d0c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8017d10:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017d14:	4327      	orrs	r7, r4
 8017d16:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017d1a:	ea47 070b 	orr.w	r7, r7, fp
 8017d1e:	f820 700a 	strh.w	r7, [r0, sl]
 8017d22:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017d24:	4401      	add	r1, r0
 8017d26:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017d28:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017d2c:	4402      	add	r2, r0
 8017d2e:	e759      	b.n	8017be4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8017d30:	b007      	add	sp, #28
 8017d32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d3c:	b085      	sub	sp, #20
 8017d3e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017d42:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017d44:	9203      	str	r2, [sp, #12]
 8017d46:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8017d4a:	6870      	ldr	r0, [r6, #4]
 8017d4c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8017d4e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8017d52:	686f      	ldr	r7, [r5, #4]
 8017d54:	9101      	str	r1, [sp, #4]
 8017d56:	fb00 2404 	mla	r4, r0, r4, r2
 8017d5a:	6832      	ldr	r2, [r6, #0]
 8017d5c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017d60:	682a      	ldr	r2, [r5, #0]
 8017d62:	9202      	str	r2, [sp, #8]
 8017d64:	3704      	adds	r7, #4
 8017d66:	9a01      	ldr	r2, [sp, #4]
 8017d68:	2a00      	cmp	r2, #0
 8017d6a:	dc03      	bgt.n	8017d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017d6c:	9a03      	ldr	r2, [sp, #12]
 8017d6e:	2a00      	cmp	r2, #0
 8017d70:	f340 80cc 	ble.w	8017f0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8017d74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017d76:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017d7a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8017d7e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017d82:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017d84:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017d88:	2b00      	cmp	r3, #0
 8017d8a:	dd0d      	ble.n	8017da8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017d8c:	1406      	asrs	r6, r0, #16
 8017d8e:	d405      	bmi.n	8017d9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017d90:	454e      	cmp	r6, r9
 8017d92:	da03      	bge.n	8017d9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017d94:	1416      	asrs	r6, r2, #16
 8017d96:	d401      	bmi.n	8017d9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017d98:	4546      	cmp	r6, r8
 8017d9a:	db06      	blt.n	8017daa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017d9c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8017d9e:	4460      	add	r0, ip
 8017da0:	4432      	add	r2, r6
 8017da2:	3b01      	subs	r3, #1
 8017da4:	3402      	adds	r4, #2
 8017da6:	e7ef      	b.n	8017d88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8017da8:	d00f      	beq.n	8017dca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017daa:	1e5e      	subs	r6, r3, #1
 8017dac:	fb0c 0e06 	mla	lr, ip, r6, r0
 8017db0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8017db4:	d543      	bpl.n	8017e3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8017db6:	4698      	mov	r8, r3
 8017db8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8017dbc:	f1b8 0f00 	cmp.w	r8, #0
 8017dc0:	dc71      	bgt.n	8017ea6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8017dc2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017dc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017dca:	9b01      	ldr	r3, [sp, #4]
 8017dcc:	2b00      	cmp	r3, #0
 8017dce:	f340 809d 	ble.w	8017f0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8017dd2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017dd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017dda:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017dde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017de0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017de4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017de8:	eeb0 6a62 	vmov.f32	s12, s5
 8017dec:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017df0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017df4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017df8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017dfc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017e00:	eeb0 6a43 	vmov.f32	s12, s6
 8017e04:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017e08:	ee12 2a90 	vmov	r2, s5
 8017e0c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017e10:	fb92 fcf3 	sdiv	ip, r2, r3
 8017e14:	ee13 2a10 	vmov	r2, s6
 8017e18:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e1c:	9312      	str	r3, [sp, #72]	; 0x48
 8017e1e:	9b01      	ldr	r3, [sp, #4]
 8017e20:	9a03      	ldr	r2, [sp, #12]
 8017e22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017e26:	3b01      	subs	r3, #1
 8017e28:	9301      	str	r3, [sp, #4]
 8017e2a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017e2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017e30:	eeb0 3a67 	vmov.f32	s6, s15
 8017e34:	bf08      	it	eq
 8017e36:	4613      	moveq	r3, r2
 8017e38:	eef0 2a47 	vmov.f32	s5, s14
 8017e3c:	e793      	b.n	8017d66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8017e3e:	45ce      	cmp	lr, r9
 8017e40:	dab9      	bge.n	8017db6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017e42:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017e44:	fb01 2606 	mla	r6, r1, r6, r2
 8017e48:	1436      	asrs	r6, r6, #16
 8017e4a:	d4b4      	bmi.n	8017db6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017e4c:	4546      	cmp	r6, r8
 8017e4e:	dab2      	bge.n	8017db6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017e50:	4698      	mov	r8, r3
 8017e52:	46a2      	mov	sl, r4
 8017e54:	f1b8 0f00 	cmp.w	r8, #0
 8017e58:	ddb3      	ble.n	8017dc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017e5a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017e5e:	9902      	ldr	r1, [sp, #8]
 8017e60:	1416      	asrs	r6, r2, #16
 8017e62:	fb09 1606 	mla	r6, r9, r6, r1
 8017e66:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8017e6a:	492a      	ldr	r1, [pc, #168]	; (8017f14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8017e6c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8017e70:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017e74:	eb07 0b0e 	add.w	fp, r7, lr
 8017e78:	4460      	add	r0, ip
 8017e7a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8017e7e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8017e82:	00f6      	lsls	r6, r6, #3
 8017e84:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8017e88:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017e8c:	ea49 0606 	orr.w	r6, r9, r6
 8017e90:	f817 900e 	ldrb.w	r9, [r7, lr]
 8017e94:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017e96:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8017e9a:	f82a 6b02 	strh.w	r6, [sl], #2
 8017e9e:	440a      	add	r2, r1
 8017ea0:	f108 38ff 	add.w	r8, r8, #4294967295
 8017ea4:	e7d6      	b.n	8017e54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8017ea6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017eaa:	d429      	bmi.n	8017f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017eac:	68ae      	ldr	r6, [r5, #8]
 8017eae:	454e      	cmp	r6, r9
 8017eb0:	dd26      	ble.n	8017f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017eb2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8017eb6:	d423      	bmi.n	8017f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017eb8:	68e9      	ldr	r1, [r5, #12]
 8017eba:	4559      	cmp	r1, fp
 8017ebc:	dd20      	ble.n	8017f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017ebe:	9902      	ldr	r1, [sp, #8]
 8017ec0:	fa0f fe86 	sxth.w	lr, r6
 8017ec4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8017ec8:	f06f 0101 	mvn.w	r1, #1
 8017ecc:	f81e e009 	ldrb.w	lr, [lr, r9]
 8017ed0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017ed4:	eb07 060e 	add.w	r6, r7, lr
 8017ed8:	fb01 f908 	mul.w	r9, r1, r8
 8017edc:	f896 b002 	ldrb.w	fp, [r6, #2]
 8017ee0:	7876      	ldrb	r6, [r6, #1]
 8017ee2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8017ee6:	00f6      	lsls	r6, r6, #3
 8017ee8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8017eec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017ef0:	ea4b 0606 	orr.w	r6, fp, r6
 8017ef4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8017ef8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8017efc:	f82a 6009 	strh.w	r6, [sl, r9]
 8017f00:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017f02:	4460      	add	r0, ip
 8017f04:	440a      	add	r2, r1
 8017f06:	f108 38ff 	add.w	r8, r8, #4294967295
 8017f0a:	e757      	b.n	8017dbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017f0c:	b005      	add	sp, #20
 8017f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f12:	bf00      	nop
 8017f14:	fffff800 	.word	0xfffff800

08017f18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f1c:	b087      	sub	sp, #28
 8017f1e:	468b      	mov	fp, r1
 8017f20:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017f22:	9204      	str	r2, [sp, #16]
 8017f24:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017f28:	9205      	str	r2, [sp, #20]
 8017f2a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017f2e:	6841      	ldr	r1, [r0, #4]
 8017f30:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8017f34:	fb01 2404 	mla	r4, r1, r4, r2
 8017f38:	6802      	ldr	r2, [r0, #0]
 8017f3a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017f3e:	f8dc 2000 	ldr.w	r2, [ip]
 8017f42:	9201      	str	r2, [sp, #4]
 8017f44:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017f48:	3204      	adds	r2, #4
 8017f4a:	9202      	str	r2, [sp, #8]
 8017f4c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017f50:	f1bb 0f00 	cmp.w	fp, #0
 8017f54:	dc03      	bgt.n	8017f5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8017f56:	9a04      	ldr	r2, [sp, #16]
 8017f58:	2a00      	cmp	r2, #0
 8017f5a:	f340 8138 	ble.w	80181ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017f5e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017f60:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8017f64:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8017f68:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017f6c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017f6e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017f72:	2b00      	cmp	r3, #0
 8017f74:	dd0e      	ble.n	8017f94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017f76:	1402      	asrs	r2, r0, #16
 8017f78:	d405      	bmi.n	8017f86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017f7a:	42ba      	cmp	r2, r7
 8017f7c:	da03      	bge.n	8017f86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017f7e:	140a      	asrs	r2, r1, #16
 8017f80:	d401      	bmi.n	8017f86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017f82:	42b2      	cmp	r2, r6
 8017f84:	db07      	blt.n	8017f96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017f86:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017f88:	4410      	add	r0, r2
 8017f8a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017f8c:	3b01      	subs	r3, #1
 8017f8e:	4411      	add	r1, r2
 8017f90:	3402      	adds	r4, #2
 8017f92:	e7ee      	b.n	8017f72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8017f94:	d019      	beq.n	8017fca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017f96:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017f98:	1e5a      	subs	r2, r3, #1
 8017f9a:	fb05 0502 	mla	r5, r5, r2, r0
 8017f9e:	142d      	asrs	r5, r5, #16
 8017fa0:	d409      	bmi.n	8017fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017fa2:	42bd      	cmp	r5, r7
 8017fa4:	da07      	bge.n	8017fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017fa6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017fa8:	fb05 1202 	mla	r2, r5, r2, r1
 8017fac:	1412      	asrs	r2, r2, #16
 8017fae:	d402      	bmi.n	8017fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017fb0:	42b2      	cmp	r2, r6
 8017fb2:	f2c0 80ac 	blt.w	801810e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8017fb6:	f04f 0e00 	mov.w	lr, #0
 8017fba:	eb03 020e 	add.w	r2, r3, lr
 8017fbe:	2a00      	cmp	r2, #0
 8017fc0:	dc3e      	bgt.n	8018040 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8017fc2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017fc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017fca:	f1bb 0f00 	cmp.w	fp, #0
 8017fce:	f340 80fe 	ble.w	80181ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017fd2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017fd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017fda:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017fde:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017fe0:	f1bb 0b01 	subs.w	fp, fp, #1
 8017fe4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017fe8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017fec:	eeb0 6a62 	vmov.f32	s12, s5
 8017ff0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017ff4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017ff8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017ffc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018000:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018004:	eeb0 6a43 	vmov.f32	s12, s6
 8018008:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801800c:	ee12 2a90 	vmov	r2, s5
 8018010:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018014:	fb92 f3f3 	sdiv	r3, r2, r3
 8018018:	ee13 2a10 	vmov	r2, s6
 801801c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018020:	9313      	str	r3, [sp, #76]	; 0x4c
 8018022:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018024:	fb92 f3f3 	sdiv	r3, r2, r3
 8018028:	9a04      	ldr	r2, [sp, #16]
 801802a:	9314      	str	r3, [sp, #80]	; 0x50
 801802c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018030:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018032:	eeb0 3a67 	vmov.f32	s6, s15
 8018036:	bf08      	it	eq
 8018038:	4613      	moveq	r3, r2
 801803a:	eef0 2a47 	vmov.f32	s5, s14
 801803e:	e787      	b.n	8017f50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018040:	1406      	asrs	r6, r0, #16
 8018042:	d45d      	bmi.n	8018100 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018044:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8018048:	42b5      	cmp	r5, r6
 801804a:	dd59      	ble.n	8018100 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801804c:	140f      	asrs	r7, r1, #16
 801804e:	d457      	bmi.n	8018100 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018050:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8018054:	42ba      	cmp	r2, r7
 8018056:	dd53      	ble.n	8018100 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018058:	9a01      	ldr	r2, [sp, #4]
 801805a:	b22d      	sxth	r5, r5
 801805c:	fb07 2505 	mla	r5, r7, r5, r2
 8018060:	5daa      	ldrb	r2, [r5, r6]
 8018062:	9d02      	ldr	r5, [sp, #8]
 8018064:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018068:	0e2e      	lsrs	r6, r5, #24
 801806a:	d049      	beq.n	8018100 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801806c:	f06f 0201 	mvn.w	r2, #1
 8018070:	fb02 f20e 	mul.w	r2, r2, lr
 8018074:	9203      	str	r2, [sp, #12]
 8018076:	f834 8002 	ldrh.w	r8, [r4, r2]
 801807a:	9a05      	ldr	r2, [sp, #20]
 801807c:	4356      	muls	r6, r2
 801807e:	1c72      	adds	r2, r6, #1
 8018080:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018084:	1212      	asrs	r2, r2, #8
 8018086:	fa1f f982 	uxth.w	r9, r2
 801808a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801808e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018092:	43d2      	mvns	r2, r2
 8018094:	b2d2      	uxtb	r2, r2
 8018096:	fb16 f609 	smulbb	r6, r6, r9
 801809a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801809e:	fb07 6702 	mla	r7, r7, r2, r6
 80180a2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80180a6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80180aa:	b2ed      	uxtb	r5, r5
 80180ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80180b0:	fa5f f888 	uxtb.w	r8, r8
 80180b4:	fb15 f509 	smulbb	r5, r5, r9
 80180b8:	fb08 5502 	mla	r5, r8, r2, r5
 80180bc:	b2bf      	uxth	r7, r7
 80180be:	fb1a fa09 	smulbb	sl, sl, r9
 80180c2:	b2ad      	uxth	r5, r5
 80180c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80180c8:	fb06 a602 	mla	r6, r6, r2, sl
 80180cc:	1c7a      	adds	r2, r7, #1
 80180ce:	f105 0a01 	add.w	sl, r5, #1
 80180d2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80180d6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80180da:	b2b6      	uxth	r6, r6
 80180dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80180e0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80180e4:	ea4a 0707 	orr.w	r7, sl, r7
 80180e8:	f106 0a01 	add.w	sl, r6, #1
 80180ec:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80180f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80180f4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80180f8:	9a03      	ldr	r2, [sp, #12]
 80180fa:	ea47 070a 	orr.w	r7, r7, sl
 80180fe:	52a7      	strh	r7, [r4, r2]
 8018100:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018102:	4410      	add	r0, r2
 8018104:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018106:	f10e 3eff 	add.w	lr, lr, #4294967295
 801810a:	4411      	add	r1, r2
 801810c:	e755      	b.n	8017fba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801810e:	f04f 0800 	mov.w	r8, #0
 8018112:	eba3 0208 	sub.w	r2, r3, r8
 8018116:	2a00      	cmp	r2, #0
 8018118:	f77f af53 	ble.w	8017fc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801811c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8018120:	9f01      	ldr	r7, [sp, #4]
 8018122:	140a      	asrs	r2, r1, #16
 8018124:	1405      	asrs	r5, r0, #16
 8018126:	fb06 7202 	mla	r2, r6, r2, r7
 801812a:	5d52      	ldrb	r2, [r2, r5]
 801812c:	9d02      	ldr	r5, [sp, #8]
 801812e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018132:	0e2e      	lsrs	r6, r5, #24
 8018134:	d044      	beq.n	80181c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8018136:	9a05      	ldr	r2, [sp, #20]
 8018138:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801813c:	4356      	muls	r6, r2
 801813e:	1c72      	adds	r2, r6, #1
 8018140:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018144:	1212      	asrs	r2, r2, #8
 8018146:	fa1f f982 	uxth.w	r9, r2
 801814a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801814e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018152:	43d2      	mvns	r2, r2
 8018154:	b2d2      	uxtb	r2, r2
 8018156:	fb16 f609 	smulbb	r6, r6, r9
 801815a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801815e:	fb07 6702 	mla	r7, r7, r2, r6
 8018162:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018166:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801816a:	b2ed      	uxtb	r5, r5
 801816c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018170:	fa5f fe8e 	uxtb.w	lr, lr
 8018174:	fb15 f509 	smulbb	r5, r5, r9
 8018178:	fb0e 5502 	mla	r5, lr, r2, r5
 801817c:	b2bf      	uxth	r7, r7
 801817e:	fb1a fa09 	smulbb	sl, sl, r9
 8018182:	b2ad      	uxth	r5, r5
 8018184:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018188:	fb06 a602 	mla	r6, r6, r2, sl
 801818c:	1c7a      	adds	r2, r7, #1
 801818e:	f105 0a01 	add.w	sl, r5, #1
 8018192:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018196:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801819a:	b2b6      	uxth	r6, r6
 801819c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80181a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80181a4:	ea4a 0707 	orr.w	r7, sl, r7
 80181a8:	f106 0a01 	add.w	sl, r6, #1
 80181ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80181b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80181b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80181b8:	ea47 070a 	orr.w	r7, r7, sl
 80181bc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80181c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80181c2:	4410      	add	r0, r2
 80181c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80181c6:	f108 0801 	add.w	r8, r8, #1
 80181ca:	4411      	add	r1, r2
 80181cc:	e7a1      	b.n	8018112 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80181ce:	b007      	add	sp, #28
 80181d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080181d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80181d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181d8:	b085      	sub	sp, #20
 80181da:	468b      	mov	fp, r1
 80181dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80181de:	9203      	str	r2, [sp, #12]
 80181e0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80181e4:	6841      	ldr	r1, [r0, #4]
 80181e6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80181ea:	fb01 2404 	mla	r4, r1, r4, r2
 80181ee:	6802      	ldr	r2, [r0, #0]
 80181f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80181f4:	f8de 2000 	ldr.w	r2, [lr]
 80181f8:	9200      	str	r2, [sp, #0]
 80181fa:	f8de 2004 	ldr.w	r2, [lr, #4]
 80181fe:	3204      	adds	r2, #4
 8018200:	9201      	str	r2, [sp, #4]
 8018202:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018206:	f1bb 0f00 	cmp.w	fp, #0
 801820a:	dc03      	bgt.n	8018214 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801820c:	9a03      	ldr	r2, [sp, #12]
 801820e:	2a00      	cmp	r2, #0
 8018210:	f340 8153 	ble.w	80184ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018214:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018216:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801821a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801821e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018222:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018224:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018228:	2b00      	cmp	r3, #0
 801822a:	dd0e      	ble.n	801824a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801822c:	1408      	asrs	r0, r1, #16
 801822e:	d405      	bmi.n	801823c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018230:	42b8      	cmp	r0, r7
 8018232:	da03      	bge.n	801823c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018234:	1410      	asrs	r0, r2, #16
 8018236:	d401      	bmi.n	801823c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018238:	42b0      	cmp	r0, r6
 801823a:	db07      	blt.n	801824c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801823c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801823e:	4401      	add	r1, r0
 8018240:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018242:	3b01      	subs	r3, #1
 8018244:	4402      	add	r2, r0
 8018246:	3402      	adds	r4, #2
 8018248:	e7ee      	b.n	8018228 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801824a:	d017      	beq.n	801827c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801824c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801824e:	1e58      	subs	r0, r3, #1
 8018250:	fb05 1500 	mla	r5, r5, r0, r1
 8018254:	142d      	asrs	r5, r5, #16
 8018256:	d409      	bmi.n	801826c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018258:	42bd      	cmp	r5, r7
 801825a:	da07      	bge.n	801826c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801825c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801825e:	fb05 2000 	mla	r0, r5, r0, r2
 8018262:	1400      	asrs	r0, r0, #16
 8018264:	d402      	bmi.n	801826c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018266:	42b0      	cmp	r0, r6
 8018268:	f2c0 80bc 	blt.w	80183e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801826c:	2600      	movs	r6, #0
 801826e:	1998      	adds	r0, r3, r6
 8018270:	2800      	cmp	r0, #0
 8018272:	dc3e      	bgt.n	80182f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8018274:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018278:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801827c:	f1bb 0f00 	cmp.w	fp, #0
 8018280:	f340 811b 	ble.w	80184ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018284:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018288:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801828c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018290:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018292:	f1bb 0b01 	subs.w	fp, fp, #1
 8018296:	ee31 1a05 	vadd.f32	s2, s2, s10
 801829a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801829e:	eeb0 6a62 	vmov.f32	s12, s5
 80182a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80182a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80182aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80182ae:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80182b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80182b6:	eeb0 6a43 	vmov.f32	s12, s6
 80182ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80182be:	ee12 2a90 	vmov	r2, s5
 80182c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80182c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80182ca:	ee13 2a10 	vmov	r2, s6
 80182ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80182d2:	9311      	str	r3, [sp, #68]	; 0x44
 80182d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80182d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80182da:	9a03      	ldr	r2, [sp, #12]
 80182dc:	9312      	str	r3, [sp, #72]	; 0x48
 80182de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80182e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80182e4:	eeb0 3a67 	vmov.f32	s6, s15
 80182e8:	bf08      	it	eq
 80182ea:	4613      	moveq	r3, r2
 80182ec:	eef0 2a47 	vmov.f32	s5, s14
 80182f0:	e789      	b.n	8018206 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80182f2:	140f      	asrs	r7, r1, #16
 80182f4:	d426      	bmi.n	8018344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80182f6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80182fa:	42bd      	cmp	r5, r7
 80182fc:	dd22      	ble.n	8018344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80182fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018302:	d41f      	bmi.n	8018344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018304:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018308:	4560      	cmp	r0, ip
 801830a:	dd1b      	ble.n	8018344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801830c:	9800      	ldr	r0, [sp, #0]
 801830e:	b22d      	sxth	r5, r5
 8018310:	fb0c 0505 	mla	r5, ip, r5, r0
 8018314:	5de8      	ldrb	r0, [r5, r7]
 8018316:	9d01      	ldr	r5, [sp, #4]
 8018318:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801831c:	0e07      	lsrs	r7, r0, #24
 801831e:	2fff      	cmp	r7, #255	; 0xff
 8018320:	d116      	bne.n	8018350 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018322:	f06f 0501 	mvn.w	r5, #1
 8018326:	fb05 f706 	mul.w	r7, r5, r6
 801832a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801832e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8018332:	0945      	lsrs	r5, r0, #5
 8018334:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018338:	ea4c 0505 	orr.w	r5, ip, r5
 801833c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018340:	4305      	orrs	r5, r0
 8018342:	53e5      	strh	r5, [r4, r7]
 8018344:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018346:	4401      	add	r1, r0
 8018348:	9812      	ldr	r0, [sp, #72]	; 0x48
 801834a:	3e01      	subs	r6, #1
 801834c:	4402      	add	r2, r0
 801834e:	e78e      	b.n	801826e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018350:	b2fd      	uxtb	r5, r7
 8018352:	2f00      	cmp	r7, #0
 8018354:	d0f6      	beq.n	8018344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018356:	f06f 0701 	mvn.w	r7, #1
 801835a:	4377      	muls	r7, r6
 801835c:	fa1f f985 	uxth.w	r9, r5
 8018360:	f834 8007 	ldrh.w	r8, [r4, r7]
 8018364:	9702      	str	r7, [sp, #8]
 8018366:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801836a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801836e:	43ed      	mvns	r5, r5
 8018370:	b2ed      	uxtb	r5, r5
 8018372:	fb17 f709 	smulbb	r7, r7, r9
 8018376:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801837a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801837e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8018382:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8018386:	b2c0      	uxtb	r0, r0
 8018388:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801838c:	fa5f f888 	uxtb.w	r8, r8
 8018390:	fb10 f009 	smulbb	r0, r0, r9
 8018394:	fb08 0005 	mla	r0, r8, r5, r0
 8018398:	b280      	uxth	r0, r0
 801839a:	fa1f fc8c 	uxth.w	ip, ip
 801839e:	fb1a fa09 	smulbb	sl, sl, r9
 80183a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80183a6:	fb07 a705 	mla	r7, r7, r5, sl
 80183aa:	f100 0a01 	add.w	sl, r0, #1
 80183ae:	f10c 0501 	add.w	r5, ip, #1
 80183b2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80183b6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80183ba:	b2bf      	uxth	r7, r7
 80183bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80183c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80183c4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80183c8:	f107 0a01 	add.w	sl, r7, #1
 80183cc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80183d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80183d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80183d8:	9802      	ldr	r0, [sp, #8]
 80183da:	ea4c 0c0a 	orr.w	ip, ip, sl
 80183de:	f824 c000 	strh.w	ip, [r4, r0]
 80183e2:	e7af      	b.n	8018344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80183e4:	f04f 0800 	mov.w	r8, #0
 80183e8:	eba3 0008 	sub.w	r0, r3, r8
 80183ec:	2800      	cmp	r0, #0
 80183ee:	f77f af41 	ble.w	8018274 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80183f2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80183f6:	9f00      	ldr	r7, [sp, #0]
 80183f8:	1410      	asrs	r0, r2, #16
 80183fa:	140d      	asrs	r5, r1, #16
 80183fc:	fb06 7000 	mla	r0, r6, r0, r7
 8018400:	5d40      	ldrb	r0, [r0, r5]
 8018402:	9d01      	ldr	r5, [sp, #4]
 8018404:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018408:	0e2e      	lsrs	r6, r5, #24
 801840a:	2eff      	cmp	r6, #255	; 0xff
 801840c:	d112      	bne.n	8018434 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801840e:	482c      	ldr	r0, [pc, #176]	; (80184c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8018410:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018414:	0968      	lsrs	r0, r5, #5
 8018416:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801841a:	4330      	orrs	r0, r6
 801841c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8018420:	4328      	orrs	r0, r5
 8018422:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8018426:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018428:	4401      	add	r1, r0
 801842a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801842c:	f108 0801 	add.w	r8, r8, #1
 8018430:	4402      	add	r2, r0
 8018432:	e7d9      	b.n	80183e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018434:	b2f0      	uxtb	r0, r6
 8018436:	2e00      	cmp	r6, #0
 8018438:	d0f5      	beq.n	8018426 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801843a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801843e:	fa1f f980 	uxth.w	r9, r0
 8018442:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018446:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801844a:	43c0      	mvns	r0, r0
 801844c:	b2c0      	uxtb	r0, r0
 801844e:	fb16 f609 	smulbb	r6, r6, r9
 8018452:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018456:	fb07 6700 	mla	r7, r7, r0, r6
 801845a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801845e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8018462:	b2ed      	uxtb	r5, r5
 8018464:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018468:	fa5f fc8c 	uxtb.w	ip, ip
 801846c:	fb15 f509 	smulbb	r5, r5, r9
 8018470:	fb0c 5500 	mla	r5, ip, r0, r5
 8018474:	b2bf      	uxth	r7, r7
 8018476:	fb1a fa09 	smulbb	sl, sl, r9
 801847a:	b2ad      	uxth	r5, r5
 801847c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018480:	fb06 a600 	mla	r6, r6, r0, sl
 8018484:	1c78      	adds	r0, r7, #1
 8018486:	f105 0a01 	add.w	sl, r5, #1
 801848a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801848e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018492:	b2b6      	uxth	r6, r6
 8018494:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018498:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801849c:	ea4a 0707 	orr.w	r7, sl, r7
 80184a0:	f106 0a01 	add.w	sl, r6, #1
 80184a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80184a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80184ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80184b0:	ea47 070a 	orr.w	r7, r7, sl
 80184b4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80184b8:	e7b5      	b.n	8018426 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80184ba:	b005      	add	sp, #20
 80184bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184c0:	fffff800 	.word	0xfffff800

080184c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80184c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184c8:	b087      	sub	sp, #28
 80184ca:	468b      	mov	fp, r1
 80184cc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80184ce:	9204      	str	r2, [sp, #16]
 80184d0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80184d4:	9205      	str	r2, [sp, #20]
 80184d6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80184da:	6861      	ldr	r1, [r4, #4]
 80184dc:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80184e0:	fb01 2000 	mla	r0, r1, r0, r2
 80184e4:	6822      	ldr	r2, [r4, #0]
 80184e6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80184ea:	f8de 2000 	ldr.w	r2, [lr]
 80184ee:	9201      	str	r2, [sp, #4]
 80184f0:	f8de 2004 	ldr.w	r2, [lr, #4]
 80184f4:	9202      	str	r2, [sp, #8]
 80184f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80184fa:	f1bb 0f00 	cmp.w	fp, #0
 80184fe:	dc03      	bgt.n	8018508 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8018500:	9a04      	ldr	r2, [sp, #16]
 8018502:	2a00      	cmp	r2, #0
 8018504:	f340 8142 	ble.w	801878c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8018508:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801850a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801850e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8018512:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018516:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018518:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801851c:	2b00      	cmp	r3, #0
 801851e:	dd0e      	ble.n	801853e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018520:	140c      	asrs	r4, r1, #16
 8018522:	d405      	bmi.n	8018530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018524:	42bc      	cmp	r4, r7
 8018526:	da03      	bge.n	8018530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018528:	1414      	asrs	r4, r2, #16
 801852a:	d401      	bmi.n	8018530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801852c:	42b4      	cmp	r4, r6
 801852e:	db07      	blt.n	8018540 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018530:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018532:	4421      	add	r1, r4
 8018534:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018536:	3b01      	subs	r3, #1
 8018538:	4422      	add	r2, r4
 801853a:	3002      	adds	r0, #2
 801853c:	e7ee      	b.n	801851c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801853e:	d019      	beq.n	8018574 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018540:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018542:	1e5c      	subs	r4, r3, #1
 8018544:	fb05 1504 	mla	r5, r5, r4, r1
 8018548:	142d      	asrs	r5, r5, #16
 801854a:	d409      	bmi.n	8018560 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801854c:	42bd      	cmp	r5, r7
 801854e:	da07      	bge.n	8018560 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018550:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018552:	fb05 2404 	mla	r4, r5, r4, r2
 8018556:	1424      	asrs	r4, r4, #16
 8018558:	d402      	bmi.n	8018560 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801855a:	42b4      	cmp	r4, r6
 801855c:	f2c0 80b1 	blt.w	80186c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8018560:	f04f 0800 	mov.w	r8, #0
 8018564:	eb03 0408 	add.w	r4, r3, r8
 8018568:	2c00      	cmp	r4, #0
 801856a:	dc3e      	bgt.n	80185ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801856c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018570:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018574:	f1bb 0f00 	cmp.w	fp, #0
 8018578:	f340 8108 	ble.w	801878c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801857c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018580:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018584:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018588:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801858a:	f1bb 0b01 	subs.w	fp, fp, #1
 801858e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018592:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018596:	eeb0 6a62 	vmov.f32	s12, s5
 801859a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801859e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80185a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80185a6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80185aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80185ae:	eeb0 6a43 	vmov.f32	s12, s6
 80185b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80185b6:	ee12 2a90 	vmov	r2, s5
 80185ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80185be:	fb92 f3f3 	sdiv	r3, r2, r3
 80185c2:	ee13 2a10 	vmov	r2, s6
 80185c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80185ca:	9313      	str	r3, [sp, #76]	; 0x4c
 80185cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80185ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80185d2:	9a04      	ldr	r2, [sp, #16]
 80185d4:	9314      	str	r3, [sp, #80]	; 0x50
 80185d6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80185da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80185dc:	eeb0 3a67 	vmov.f32	s6, s15
 80185e0:	bf08      	it	eq
 80185e2:	4613      	moveq	r3, r2
 80185e4:	eef0 2a47 	vmov.f32	s5, s14
 80185e8:	e787      	b.n	80184fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80185ea:	140e      	asrs	r6, r1, #16
 80185ec:	d462      	bmi.n	80186b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80185ee:	f8de 5008 	ldr.w	r5, [lr, #8]
 80185f2:	42b5      	cmp	r5, r6
 80185f4:	dd5e      	ble.n	80186b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80185f6:	1417      	asrs	r7, r2, #16
 80185f8:	d45c      	bmi.n	80186b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80185fa:	f8de 400c 	ldr.w	r4, [lr, #12]
 80185fe:	42bc      	cmp	r4, r7
 8018600:	dd58      	ble.n	80186b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018602:	b22d      	sxth	r5, r5
 8018604:	fb07 6505 	mla	r5, r7, r5, r6
 8018608:	9c02      	ldr	r4, [sp, #8]
 801860a:	5d66      	ldrb	r6, [r4, r5]
 801860c:	2e00      	cmp	r6, #0
 801860e:	d051      	beq.n	80186b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018610:	9c01      	ldr	r4, [sp, #4]
 8018612:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8018616:	f06f 0401 	mvn.w	r4, #1
 801861a:	fb04 f408 	mul.w	r4, r4, r8
 801861e:	9403      	str	r4, [sp, #12]
 8018620:	5b05      	ldrh	r5, [r0, r4]
 8018622:	9c05      	ldr	r4, [sp, #20]
 8018624:	4366      	muls	r6, r4
 8018626:	1c74      	adds	r4, r6, #1
 8018628:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801862c:	1224      	asrs	r4, r4, #8
 801862e:	b2a7      	uxth	r7, r4
 8018630:	122e      	asrs	r6, r5, #8
 8018632:	43e4      	mvns	r4, r4
 8018634:	b2e4      	uxtb	r4, r4
 8018636:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801863a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801863e:	fb16 f604 	smulbb	r6, r6, r4
 8018642:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018646:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801864a:	00ed      	lsls	r5, r5, #3
 801864c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018650:	b2ed      	uxtb	r5, r5
 8018652:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8018656:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801865a:	fb15 f504 	smulbb	r5, r5, r4
 801865e:	fa5f f989 	uxtb.w	r9, r9
 8018662:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018666:	fb09 5507 	mla	r5, r9, r7, r5
 801866a:	fb1a fa04 	smulbb	sl, sl, r4
 801866e:	fa1f fc8c 	uxth.w	ip, ip
 8018672:	b2ad      	uxth	r5, r5
 8018674:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018678:	fb06 a607 	mla	r6, r6, r7, sl
 801867c:	f10c 0401 	add.w	r4, ip, #1
 8018680:	f105 0a01 	add.w	sl, r5, #1
 8018684:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018688:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801868c:	b2b6      	uxth	r6, r6
 801868e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018692:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018696:	ea4a 0c0c 	orr.w	ip, sl, ip
 801869a:	f106 0a01 	add.w	sl, r6, #1
 801869e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80186a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80186a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80186aa:	9c03      	ldr	r4, [sp, #12]
 80186ac:	ea4c 0c0a 	orr.w	ip, ip, sl
 80186b0:	f820 c004 	strh.w	ip, [r0, r4]
 80186b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80186b6:	4421      	add	r1, r4
 80186b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80186ba:	f108 38ff 	add.w	r8, r8, #4294967295
 80186be:	4422      	add	r2, r4
 80186c0:	e750      	b.n	8018564 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80186c2:	f04f 0900 	mov.w	r9, #0
 80186c6:	eba3 0409 	sub.w	r4, r3, r9
 80186ca:	2c00      	cmp	r4, #0
 80186cc:	f77f af4e 	ble.w	801856c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80186d0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80186d4:	140d      	asrs	r5, r1, #16
 80186d6:	1414      	asrs	r4, r2, #16
 80186d8:	fb06 5404 	mla	r4, r6, r4, r5
 80186dc:	9d02      	ldr	r5, [sp, #8]
 80186de:	5d2e      	ldrb	r6, [r5, r4]
 80186e0:	2e00      	cmp	r6, #0
 80186e2:	d04c      	beq.n	801877e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80186e4:	9d01      	ldr	r5, [sp, #4]
 80186e6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80186ea:	9c05      	ldr	r4, [sp, #20]
 80186ec:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80186f0:	4366      	muls	r6, r4
 80186f2:	1c74      	adds	r4, r6, #1
 80186f4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80186f8:	1224      	asrs	r4, r4, #8
 80186fa:	b2a7      	uxth	r7, r4
 80186fc:	122e      	asrs	r6, r5, #8
 80186fe:	43e4      	mvns	r4, r4
 8018700:	b2e4      	uxtb	r4, r4
 8018702:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018706:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801870a:	fb16 f604 	smulbb	r6, r6, r4
 801870e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018712:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018716:	00ed      	lsls	r5, r5, #3
 8018718:	fb0c 6c07 	mla	ip, ip, r7, r6
 801871c:	b2ed      	uxtb	r5, r5
 801871e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018722:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018726:	fb15 f504 	smulbb	r5, r5, r4
 801872a:	fa5f f888 	uxtb.w	r8, r8
 801872e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018732:	fb08 5507 	mla	r5, r8, r7, r5
 8018736:	fb1a fa04 	smulbb	sl, sl, r4
 801873a:	fa1f fc8c 	uxth.w	ip, ip
 801873e:	b2ad      	uxth	r5, r5
 8018740:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018744:	fb06 a607 	mla	r6, r6, r7, sl
 8018748:	f10c 0401 	add.w	r4, ip, #1
 801874c:	f105 0a01 	add.w	sl, r5, #1
 8018750:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018754:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018758:	b2b6      	uxth	r6, r6
 801875a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801875e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018762:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018766:	f106 0a01 	add.w	sl, r6, #1
 801876a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801876e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018772:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018776:	ea4c 0c0a 	orr.w	ip, ip, sl
 801877a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801877e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018780:	4421      	add	r1, r4
 8018782:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018784:	f109 0901 	add.w	r9, r9, #1
 8018788:	4422      	add	r2, r4
 801878a:	e79c      	b.n	80186c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801878c:	b007      	add	sp, #28
 801878e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018792 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018792:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018796:	b085      	sub	sp, #20
 8018798:	468b      	mov	fp, r1
 801879a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801879c:	9203      	str	r2, [sp, #12]
 801879e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80187a2:	6861      	ldr	r1, [r4, #4]
 80187a4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80187a8:	fb01 2000 	mla	r0, r1, r0, r2
 80187ac:	6822      	ldr	r2, [r4, #0]
 80187ae:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80187b2:	f8d8 2000 	ldr.w	r2, [r8]
 80187b6:	9200      	str	r2, [sp, #0]
 80187b8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80187bc:	9201      	str	r2, [sp, #4]
 80187be:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80187c2:	f1bb 0f00 	cmp.w	fp, #0
 80187c6:	dc03      	bgt.n	80187d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80187c8:	9a03      	ldr	r2, [sp, #12]
 80187ca:	2a00      	cmp	r2, #0
 80187cc:	f340 8146 	ble.w	8018a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80187d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80187d2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80187d6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80187da:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80187de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80187e0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80187e4:	2b00      	cmp	r3, #0
 80187e6:	dd0e      	ble.n	8018806 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80187e8:	140c      	asrs	r4, r1, #16
 80187ea:	d405      	bmi.n	80187f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80187ec:	42bc      	cmp	r4, r7
 80187ee:	da03      	bge.n	80187f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80187f0:	1414      	asrs	r4, r2, #16
 80187f2:	d401      	bmi.n	80187f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80187f4:	42b4      	cmp	r4, r6
 80187f6:	db07      	blt.n	8018808 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80187f8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80187fa:	4421      	add	r1, r4
 80187fc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80187fe:	3b01      	subs	r3, #1
 8018800:	4422      	add	r2, r4
 8018802:	3002      	adds	r0, #2
 8018804:	e7ee      	b.n	80187e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018806:	d017      	beq.n	8018838 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018808:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801880a:	1e5c      	subs	r4, r3, #1
 801880c:	fb05 1504 	mla	r5, r5, r4, r1
 8018810:	142d      	asrs	r5, r5, #16
 8018812:	d409      	bmi.n	8018828 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018814:	42bd      	cmp	r5, r7
 8018816:	da07      	bge.n	8018828 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018818:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801881a:	fb05 2404 	mla	r4, r5, r4, r2
 801881e:	1424      	asrs	r4, r4, #16
 8018820:	d402      	bmi.n	8018828 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018822:	42b4      	cmp	r4, r6
 8018824:	f2c0 80b3 	blt.w	801898e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8018828:	2600      	movs	r6, #0
 801882a:	199c      	adds	r4, r3, r6
 801882c:	2c00      	cmp	r4, #0
 801882e:	dc3e      	bgt.n	80188ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018830:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018834:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018838:	f1bb 0f00 	cmp.w	fp, #0
 801883c:	f340 810e 	ble.w	8018a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018840:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018844:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018848:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801884c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801884e:	f1bb 0b01 	subs.w	fp, fp, #1
 8018852:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018856:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801885a:	eeb0 6a62 	vmov.f32	s12, s5
 801885e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018862:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018866:	ee77 2a62 	vsub.f32	s5, s14, s5
 801886a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801886e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018872:	eeb0 6a43 	vmov.f32	s12, s6
 8018876:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801887a:	ee12 2a90 	vmov	r2, s5
 801887e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018882:	fb92 f3f3 	sdiv	r3, r2, r3
 8018886:	ee13 2a10 	vmov	r2, s6
 801888a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801888e:	9311      	str	r3, [sp, #68]	; 0x44
 8018890:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018892:	fb92 f3f3 	sdiv	r3, r2, r3
 8018896:	9a03      	ldr	r2, [sp, #12]
 8018898:	9312      	str	r3, [sp, #72]	; 0x48
 801889a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801889e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80188a0:	eeb0 3a67 	vmov.f32	s6, s15
 80188a4:	bf08      	it	eq
 80188a6:	4613      	moveq	r3, r2
 80188a8:	eef0 2a47 	vmov.f32	s5, s14
 80188ac:	e789      	b.n	80187c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80188ae:	140f      	asrs	r7, r1, #16
 80188b0:	d418      	bmi.n	80188e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80188b2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80188b6:	42bd      	cmp	r5, r7
 80188b8:	dd14      	ble.n	80188e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80188ba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80188be:	d411      	bmi.n	80188e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80188c0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80188c4:	4564      	cmp	r4, ip
 80188c6:	dd0d      	ble.n	80188e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80188c8:	b22d      	sxth	r5, r5
 80188ca:	fb0c 7505 	mla	r5, ip, r5, r7
 80188ce:	9c01      	ldr	r4, [sp, #4]
 80188d0:	5d64      	ldrb	r4, [r4, r5]
 80188d2:	2cff      	cmp	r4, #255	; 0xff
 80188d4:	d10c      	bne.n	80188f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80188d6:	9c00      	ldr	r4, [sp, #0]
 80188d8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80188dc:	f06f 0401 	mvn.w	r4, #1
 80188e0:	4374      	muls	r4, r6
 80188e2:	5305      	strh	r5, [r0, r4]
 80188e4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80188e6:	4421      	add	r1, r4
 80188e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80188ea:	3e01      	subs	r6, #1
 80188ec:	4422      	add	r2, r4
 80188ee:	e79c      	b.n	801882a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80188f0:	2c00      	cmp	r4, #0
 80188f2:	d0f7      	beq.n	80188e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80188f4:	9f00      	ldr	r7, [sp, #0]
 80188f6:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80188fa:	f06f 0501 	mvn.w	r5, #1
 80188fe:	4375      	muls	r5, r6
 8018900:	9502      	str	r5, [sp, #8]
 8018902:	5b45      	ldrh	r5, [r0, r5]
 8018904:	fa1f fc84 	uxth.w	ip, r4
 8018908:	122f      	asrs	r7, r5, #8
 801890a:	43e4      	mvns	r4, r4
 801890c:	b2e4      	uxtb	r4, r4
 801890e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8018912:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018916:	fb17 f704 	smulbb	r7, r7, r4
 801891a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801891e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018922:	00ed      	lsls	r5, r5, #3
 8018924:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8018928:	b2ed      	uxtb	r5, r5
 801892a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801892e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8018932:	fb15 f504 	smulbb	r5, r5, r4
 8018936:	fa5f f989 	uxtb.w	r9, r9
 801893a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801893e:	fb09 550c 	mla	r5, r9, ip, r5
 8018942:	fb1a fa04 	smulbb	sl, sl, r4
 8018946:	fa1f fe8e 	uxth.w	lr, lr
 801894a:	b2ad      	uxth	r5, r5
 801894c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018950:	fb07 a70c 	mla	r7, r7, ip, sl
 8018954:	f10e 0401 	add.w	r4, lr, #1
 8018958:	f105 0a01 	add.w	sl, r5, #1
 801895c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8018960:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018964:	b2bf      	uxth	r7, r7
 8018966:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801896a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801896e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018972:	f107 0a01 	add.w	sl, r7, #1
 8018976:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801897a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801897e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018982:	9c02      	ldr	r4, [sp, #8]
 8018984:	ea4e 0e0a 	orr.w	lr, lr, sl
 8018988:	f820 e004 	strh.w	lr, [r0, r4]
 801898c:	e7aa      	b.n	80188e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801898e:	f04f 0900 	mov.w	r9, #0
 8018992:	eba3 0409 	sub.w	r4, r3, r9
 8018996:	2c00      	cmp	r4, #0
 8018998:	f77f af4a 	ble.w	8018830 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801899c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80189a0:	1414      	asrs	r4, r2, #16
 80189a2:	140d      	asrs	r5, r1, #16
 80189a4:	fb06 5504 	mla	r5, r6, r4, r5
 80189a8:	9c01      	ldr	r4, [sp, #4]
 80189aa:	5d64      	ldrb	r4, [r4, r5]
 80189ac:	2cff      	cmp	r4, #255	; 0xff
 80189ae:	d10b      	bne.n	80189c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80189b0:	9c00      	ldr	r4, [sp, #0]
 80189b2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80189b6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80189ba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80189bc:	4421      	add	r1, r4
 80189be:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80189c0:	f109 0901 	add.w	r9, r9, #1
 80189c4:	4422      	add	r2, r4
 80189c6:	e7e4      	b.n	8018992 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80189c8:	2c00      	cmp	r4, #0
 80189ca:	d0f6      	beq.n	80189ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80189cc:	9e00      	ldr	r6, [sp, #0]
 80189ce:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80189d2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80189d6:	b2a7      	uxth	r7, r4
 80189d8:	122e      	asrs	r6, r5, #8
 80189da:	43e4      	mvns	r4, r4
 80189dc:	b2e4      	uxtb	r4, r4
 80189de:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80189e2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80189e6:	fb16 f604 	smulbb	r6, r6, r4
 80189ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80189ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80189f2:	00ed      	lsls	r5, r5, #3
 80189f4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80189f8:	b2ed      	uxtb	r5, r5
 80189fa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80189fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018a02:	fb15 f504 	smulbb	r5, r5, r4
 8018a06:	fa5f fe8e 	uxtb.w	lr, lr
 8018a0a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018a0e:	fb0e 5507 	mla	r5, lr, r7, r5
 8018a12:	fb1a fa04 	smulbb	sl, sl, r4
 8018a16:	fa1f fc8c 	uxth.w	ip, ip
 8018a1a:	b2ad      	uxth	r5, r5
 8018a1c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018a20:	fb06 a607 	mla	r6, r6, r7, sl
 8018a24:	f10c 0401 	add.w	r4, ip, #1
 8018a28:	f105 0a01 	add.w	sl, r5, #1
 8018a2c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018a30:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018a34:	b2b6      	uxth	r6, r6
 8018a36:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018a3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018a3e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018a42:	f106 0a01 	add.w	sl, r6, #1
 8018a46:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018a4a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018a4e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018a52:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018a56:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8018a5a:	e7ae      	b.n	80189ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018a5c:	b005      	add	sp, #20
 8018a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018a62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a66:	b085      	sub	sp, #20
 8018a68:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018a6a:	9203      	str	r2, [sp, #12]
 8018a6c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8018a70:	9201      	str	r2, [sp, #4]
 8018a72:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018a76:	9100      	str	r1, [sp, #0]
 8018a78:	6841      	ldr	r1, [r0, #4]
 8018a7a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8018a7e:	fb01 2404 	mla	r4, r1, r4, r2
 8018a82:	6802      	ldr	r2, [r0, #0]
 8018a84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018a88:	f8de 2000 	ldr.w	r2, [lr]
 8018a8c:	9202      	str	r2, [sp, #8]
 8018a8e:	9a01      	ldr	r2, [sp, #4]
 8018a90:	43d6      	mvns	r6, r2
 8018a92:	b2f6      	uxtb	r6, r6
 8018a94:	9a00      	ldr	r2, [sp, #0]
 8018a96:	2a00      	cmp	r2, #0
 8018a98:	dc03      	bgt.n	8018aa2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018a9a:	9a03      	ldr	r2, [sp, #12]
 8018a9c:	2a00      	cmp	r2, #0
 8018a9e:	f340 8124 	ble.w	8018cea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018aa2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018aa4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018aa8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018aac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018ab0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018ab2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018ab6:	2b00      	cmp	r3, #0
 8018ab8:	dd0e      	ble.n	8018ad8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018aba:	1408      	asrs	r0, r1, #16
 8018abc:	d405      	bmi.n	8018aca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018abe:	4560      	cmp	r0, ip
 8018ac0:	da03      	bge.n	8018aca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018ac2:	1410      	asrs	r0, r2, #16
 8018ac4:	d401      	bmi.n	8018aca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018ac6:	42b8      	cmp	r0, r7
 8018ac8:	db07      	blt.n	8018ada <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018aca:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018acc:	4401      	add	r1, r0
 8018ace:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018ad0:	3b01      	subs	r3, #1
 8018ad2:	4402      	add	r2, r0
 8018ad4:	3402      	adds	r4, #2
 8018ad6:	e7ee      	b.n	8018ab6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018ad8:	d06e      	beq.n	8018bb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018ada:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018adc:	1e58      	subs	r0, r3, #1
 8018ade:	fb05 1500 	mla	r5, r5, r0, r1
 8018ae2:	142d      	asrs	r5, r5, #16
 8018ae4:	d45c      	bmi.n	8018ba0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018ae6:	4565      	cmp	r5, ip
 8018ae8:	da5a      	bge.n	8018ba0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018aea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018aec:	fb05 2000 	mla	r0, r5, r0, r2
 8018af0:	1400      	asrs	r0, r0, #16
 8018af2:	d455      	bmi.n	8018ba0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018af4:	42b8      	cmp	r0, r7
 8018af6:	da53      	bge.n	8018ba0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018af8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8018afc:	4699      	mov	r9, r3
 8018afe:	46a2      	mov	sl, r4
 8018b00:	f1b9 0f00 	cmp.w	r9, #0
 8018b04:	dd54      	ble.n	8018bb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018b06:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018b0a:	140d      	asrs	r5, r1, #16
 8018b0c:	1410      	asrs	r0, r2, #16
 8018b0e:	fb07 5000 	mla	r0, r7, r0, r5
 8018b12:	9d02      	ldr	r5, [sp, #8]
 8018b14:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018b18:	f8ba 5000 	ldrh.w	r5, [sl]
 8018b1c:	122f      	asrs	r7, r5, #8
 8018b1e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018b22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018b26:	fb17 f706 	smulbb	r7, r7, r6
 8018b2a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018b2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018b32:	00ed      	lsls	r5, r5, #3
 8018b34:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018b38:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018b3c:	10c7      	asrs	r7, r0, #3
 8018b3e:	b2ed      	uxtb	r5, r5
 8018b40:	00c0      	lsls	r0, r0, #3
 8018b42:	fb18 f806 	smulbb	r8, r8, r6
 8018b46:	fb15 f506 	smulbb	r5, r5, r6
 8018b4a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018b4e:	b2c0      	uxtb	r0, r0
 8018b50:	fa1f fc8c 	uxth.w	ip, ip
 8018b54:	fb07 870b 	mla	r7, r7, fp, r8
 8018b58:	fb00 500b 	mla	r0, r0, fp, r5
 8018b5c:	b280      	uxth	r0, r0
 8018b5e:	b2bf      	uxth	r7, r7
 8018b60:	f10c 0501 	add.w	r5, ip, #1
 8018b64:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018b68:	f107 0801 	add.w	r8, r7, #1
 8018b6c:	1c45      	adds	r5, r0, #1
 8018b6e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018b72:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018b76:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018b78:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018b7c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018b80:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018b84:	ea45 0c0c 	orr.w	ip, r5, ip
 8018b88:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018b8c:	4401      	add	r1, r0
 8018b8e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018b90:	ea4c 0c08 	orr.w	ip, ip, r8
 8018b94:	f82a cb02 	strh.w	ip, [sl], #2
 8018b98:	4402      	add	r2, r0
 8018b9a:	f109 39ff 	add.w	r9, r9, #4294967295
 8018b9e:	e7af      	b.n	8018b00 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018ba0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8018ba4:	f04f 0800 	mov.w	r8, #0
 8018ba8:	eb03 0008 	add.w	r0, r3, r8
 8018bac:	2800      	cmp	r0, #0
 8018bae:	dc41      	bgt.n	8018c34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8018bb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018bb4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018bb8:	9b00      	ldr	r3, [sp, #0]
 8018bba:	2b00      	cmp	r3, #0
 8018bbc:	f340 8095 	ble.w	8018cea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018bc0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018bc4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018bc8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018bcc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018bce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018bd2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018bd6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018bda:	eef0 6a62 	vmov.f32	s13, s5
 8018bde:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018be2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018be6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018bea:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8018bee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018bf2:	eef0 6a43 	vmov.f32	s13, s6
 8018bf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018bfa:	ee12 2a90 	vmov	r2, s5
 8018bfe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018c02:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c06:	ee13 2a10 	vmov	r2, s6
 8018c0a:	9311      	str	r3, [sp, #68]	; 0x44
 8018c0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c12:	9312      	str	r3, [sp, #72]	; 0x48
 8018c14:	9b00      	ldr	r3, [sp, #0]
 8018c16:	9a03      	ldr	r2, [sp, #12]
 8018c18:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c1c:	3b01      	subs	r3, #1
 8018c1e:	9300      	str	r3, [sp, #0]
 8018c20:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8018c24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c26:	eeb0 3a67 	vmov.f32	s6, s15
 8018c2a:	bf08      	it	eq
 8018c2c:	4613      	moveq	r3, r2
 8018c2e:	eef0 2a47 	vmov.f32	s5, s14
 8018c32:	e72f      	b.n	8018a94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8018c34:	140f      	asrs	r7, r1, #16
 8018c36:	d451      	bmi.n	8018cdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018c38:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018c3c:	42bd      	cmp	r5, r7
 8018c3e:	dd4d      	ble.n	8018cdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018c40:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018c44:	d44a      	bmi.n	8018cdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018c46:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018c4a:	4560      	cmp	r0, ip
 8018c4c:	dd46      	ble.n	8018cdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018c4e:	b22d      	sxth	r5, r5
 8018c50:	fb0c 7505 	mla	r5, ip, r5, r7
 8018c54:	9802      	ldr	r0, [sp, #8]
 8018c56:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8018c5a:	f06f 0501 	mvn.w	r5, #1
 8018c5e:	fb05 fb08 	mul.w	fp, r5, r8
 8018c62:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018c66:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018c6a:	122f      	asrs	r7, r5, #8
 8018c6c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018c70:	fb17 f706 	smulbb	r7, r7, r6
 8018c74:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018c78:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018c7c:	00ed      	lsls	r5, r5, #3
 8018c7e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018c82:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018c86:	10c7      	asrs	r7, r0, #3
 8018c88:	b2ed      	uxtb	r5, r5
 8018c8a:	00c0      	lsls	r0, r0, #3
 8018c8c:	fb19 f906 	smulbb	r9, r9, r6
 8018c90:	fb15 f506 	smulbb	r5, r5, r6
 8018c94:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018c98:	b2c0      	uxtb	r0, r0
 8018c9a:	fa1f fc8c 	uxth.w	ip, ip
 8018c9e:	fb07 970a 	mla	r7, r7, sl, r9
 8018ca2:	fb00 500a 	mla	r0, r0, sl, r5
 8018ca6:	b2bf      	uxth	r7, r7
 8018ca8:	b280      	uxth	r0, r0
 8018caa:	f10c 0501 	add.w	r5, ip, #1
 8018cae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018cb2:	f107 0901 	add.w	r9, r7, #1
 8018cb6:	1c45      	adds	r5, r0, #1
 8018cb8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018cbc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018cc0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018cc4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018cc8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018ccc:	ea45 0c0c 	orr.w	ip, r5, ip
 8018cd0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018cd4:	ea4c 0c09 	orr.w	ip, ip, r9
 8018cd8:	f824 c00b 	strh.w	ip, [r4, fp]
 8018cdc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018cde:	4401      	add	r1, r0
 8018ce0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018ce2:	f108 38ff 	add.w	r8, r8, #4294967295
 8018ce6:	4402      	add	r2, r0
 8018ce8:	e75e      	b.n	8018ba8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8018cea:	b005      	add	sp, #20
 8018cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018cf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cf4:	b085      	sub	sp, #20
 8018cf6:	4693      	mov	fp, r2
 8018cf8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018cfa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018cfc:	6870      	ldr	r0, [r6, #4]
 8018cfe:	9101      	str	r1, [sp, #4]
 8018d00:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018d04:	fb00 2404 	mla	r4, r0, r4, r2
 8018d08:	6832      	ldr	r2, [r6, #0]
 8018d0a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018d0e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018d12:	682a      	ldr	r2, [r5, #0]
 8018d14:	9202      	str	r2, [sp, #8]
 8018d16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018d1a:	9a01      	ldr	r2, [sp, #4]
 8018d1c:	2a00      	cmp	r2, #0
 8018d1e:	dc03      	bgt.n	8018d28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018d20:	f1bb 0f00 	cmp.w	fp, #0
 8018d24:	f340 809a 	ble.w	8018e5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8018d28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018d2a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018d2e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018d32:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018d36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018d38:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018d3c:	2b00      	cmp	r3, #0
 8018d3e:	dd0c      	ble.n	8018d5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018d40:	1406      	asrs	r6, r0, #16
 8018d42:	d405      	bmi.n	8018d50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018d44:	454e      	cmp	r6, r9
 8018d46:	da03      	bge.n	8018d50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018d48:	1416      	asrs	r6, r2, #16
 8018d4a:	d401      	bmi.n	8018d50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018d4c:	4546      	cmp	r6, r8
 8018d4e:	db05      	blt.n	8018d5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018d50:	4470      	add	r0, lr
 8018d52:	4462      	add	r2, ip
 8018d54:	3b01      	subs	r3, #1
 8018d56:	3402      	adds	r4, #2
 8018d58:	e7f0      	b.n	8018d3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018d5a:	d00f      	beq.n	8018d7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018d5c:	1e5e      	subs	r6, r3, #1
 8018d5e:	fb0e 0706 	mla	r7, lr, r6, r0
 8018d62:	143f      	asrs	r7, r7, #16
 8018d64:	d541      	bpl.n	8018dea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8018d66:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018d6a:	4698      	mov	r8, r3
 8018d6c:	9603      	str	r6, [sp, #12]
 8018d6e:	f1b8 0f00 	cmp.w	r8, #0
 8018d72:	dc56      	bgt.n	8018e22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8018d74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018d78:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018d7c:	9b01      	ldr	r3, [sp, #4]
 8018d7e:	2b00      	cmp	r3, #0
 8018d80:	dd6c      	ble.n	8018e5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8018d82:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018d86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018d8a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018d8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018d90:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018d94:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018d98:	eeb0 6a62 	vmov.f32	s12, s5
 8018d9c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018da0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018da4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018da8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018dac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018db0:	eeb0 6a43 	vmov.f32	s12, s6
 8018db4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018db8:	ee12 2a90 	vmov	r2, s5
 8018dbc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018dc0:	fb92 fef3 	sdiv	lr, r2, r3
 8018dc4:	ee13 2a10 	vmov	r2, s6
 8018dc8:	fb92 fcf3 	sdiv	ip, r2, r3
 8018dcc:	9b01      	ldr	r3, [sp, #4]
 8018dce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018dd2:	3b01      	subs	r3, #1
 8018dd4:	9301      	str	r3, [sp, #4]
 8018dd6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018dda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ddc:	eeb0 3a67 	vmov.f32	s6, s15
 8018de0:	bf08      	it	eq
 8018de2:	465b      	moveq	r3, fp
 8018de4:	eef0 2a47 	vmov.f32	s5, s14
 8018de8:	e797      	b.n	8018d1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8018dea:	454f      	cmp	r7, r9
 8018dec:	dabb      	bge.n	8018d66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018dee:	fb0c 2606 	mla	r6, ip, r6, r2
 8018df2:	1436      	asrs	r6, r6, #16
 8018df4:	d4b7      	bmi.n	8018d66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018df6:	4546      	cmp	r6, r8
 8018df8:	dab5      	bge.n	8018d66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018dfa:	461e      	mov	r6, r3
 8018dfc:	46a0      	mov	r8, r4
 8018dfe:	2e00      	cmp	r6, #0
 8018e00:	ddb8      	ble.n	8018d74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018e02:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018e06:	9902      	ldr	r1, [sp, #8]
 8018e08:	1417      	asrs	r7, r2, #16
 8018e0a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018e0e:	fb0a 9707 	mla	r7, sl, r7, r9
 8018e12:	4470      	add	r0, lr
 8018e14:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018e18:	f828 7b02 	strh.w	r7, [r8], #2
 8018e1c:	4462      	add	r2, ip
 8018e1e:	3e01      	subs	r6, #1
 8018e20:	e7ed      	b.n	8018dfe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8018e22:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018e26:	d414      	bmi.n	8018e52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018e28:	68ae      	ldr	r6, [r5, #8]
 8018e2a:	454e      	cmp	r6, r9
 8018e2c:	dd11      	ble.n	8018e52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018e2e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018e32:	d40e      	bmi.n	8018e52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018e34:	68ef      	ldr	r7, [r5, #12]
 8018e36:	4557      	cmp	r7, sl
 8018e38:	dd0b      	ble.n	8018e52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018e3a:	b236      	sxth	r6, r6
 8018e3c:	fb0a 9606 	mla	r6, sl, r6, r9
 8018e40:	9f02      	ldr	r7, [sp, #8]
 8018e42:	f06f 0101 	mvn.w	r1, #1
 8018e46:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018e4a:	fb01 f608 	mul.w	r6, r1, r8
 8018e4e:	9903      	ldr	r1, [sp, #12]
 8018e50:	538f      	strh	r7, [r1, r6]
 8018e52:	4470      	add	r0, lr
 8018e54:	4462      	add	r2, ip
 8018e56:	f108 38ff 	add.w	r8, r8, #4294967295
 8018e5a:	e788      	b.n	8018d6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018e5c:	b005      	add	sp, #20
 8018e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018e62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e66:	b087      	sub	sp, #28
 8018e68:	468b      	mov	fp, r1
 8018e6a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018e6c:	9203      	str	r2, [sp, #12]
 8018e6e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018e72:	9204      	str	r2, [sp, #16]
 8018e74:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8018e78:	6841      	ldr	r1, [r0, #4]
 8018e7a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8018e7e:	fb01 2505 	mla	r5, r1, r5, r2
 8018e82:	6802      	ldr	r2, [r0, #0]
 8018e84:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018e88:	f8d9 2000 	ldr.w	r2, [r9]
 8018e8c:	9201      	str	r2, [sp, #4]
 8018e8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018e92:	f1bb 0f00 	cmp.w	fp, #0
 8018e96:	dc03      	bgt.n	8018ea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018e98:	9a03      	ldr	r2, [sp, #12]
 8018e9a:	2a00      	cmp	r2, #0
 8018e9c:	f340 8159 	ble.w	8019152 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018ea0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018ea2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8018ea6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8018eaa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018eae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018eb0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018eb4:	2b00      	cmp	r3, #0
 8018eb6:	dd0e      	ble.n	8018ed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018eb8:	1402      	asrs	r2, r0, #16
 8018eba:	d405      	bmi.n	8018ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018ebc:	42ba      	cmp	r2, r7
 8018ebe:	da03      	bge.n	8018ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018ec0:	140a      	asrs	r2, r1, #16
 8018ec2:	d401      	bmi.n	8018ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018ec4:	42b2      	cmp	r2, r6
 8018ec6:	db07      	blt.n	8018ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018ec8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018eca:	4410      	add	r0, r2
 8018ecc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018ece:	3b01      	subs	r3, #1
 8018ed0:	4411      	add	r1, r2
 8018ed2:	3502      	adds	r5, #2
 8018ed4:	e7ee      	b.n	8018eb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018ed6:	d017      	beq.n	8018f08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018ed8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018eda:	1e5a      	subs	r2, r3, #1
 8018edc:	fb04 0402 	mla	r4, r4, r2, r0
 8018ee0:	1424      	asrs	r4, r4, #16
 8018ee2:	d409      	bmi.n	8018ef8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018ee4:	42bc      	cmp	r4, r7
 8018ee6:	da07      	bge.n	8018ef8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018ee8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018eea:	fb04 1202 	mla	r2, r4, r2, r1
 8018eee:	1412      	asrs	r2, r2, #16
 8018ef0:	d402      	bmi.n	8018ef8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018ef2:	42b2      	cmp	r2, r6
 8018ef4:	f2c0 80bf 	blt.w	8019076 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018ef8:	2700      	movs	r7, #0
 8018efa:	19da      	adds	r2, r3, r7
 8018efc:	2a00      	cmp	r2, #0
 8018efe:	dc3e      	bgt.n	8018f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018f00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018f04:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8018f08:	f1bb 0f00 	cmp.w	fp, #0
 8018f0c:	f340 8121 	ble.w	8019152 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018f10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018f14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018f18:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018f1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f1e:	f1bb 0b01 	subs.w	fp, fp, #1
 8018f22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018f26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018f2a:	eeb0 6a62 	vmov.f32	s12, s5
 8018f2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018f32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018f36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018f3a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018f3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018f42:	eeb0 6a43 	vmov.f32	s12, s6
 8018f46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018f4a:	ee12 2a90 	vmov	r2, s5
 8018f4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018f52:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f56:	ee13 2a10 	vmov	r2, s6
 8018f5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018f5e:	9313      	str	r3, [sp, #76]	; 0x4c
 8018f60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f62:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f66:	9a03      	ldr	r2, [sp, #12]
 8018f68:	9314      	str	r3, [sp, #80]	; 0x50
 8018f6a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018f6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f70:	eeb0 3a67 	vmov.f32	s6, s15
 8018f74:	bf08      	it	eq
 8018f76:	4613      	moveq	r3, r2
 8018f78:	eef0 2a47 	vmov.f32	s5, s14
 8018f7c:	e789      	b.n	8018e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018f7e:	1406      	asrs	r6, r0, #16
 8018f80:	d42d      	bmi.n	8018fde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018f82:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8018f86:	42b4      	cmp	r4, r6
 8018f88:	dd29      	ble.n	8018fde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018f8a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8018f8e:	d426      	bmi.n	8018fde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018f90:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8018f94:	4562      	cmp	r2, ip
 8018f96:	dd22      	ble.n	8018fde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018f98:	b224      	sxth	r4, r4
 8018f9a:	9a01      	ldr	r2, [sp, #4]
 8018f9c:	fb0c 6404 	mla	r4, ip, r4, r6
 8018fa0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8018fa4:	0e22      	lsrs	r2, r4, #24
 8018fa6:	d01a      	beq.n	8018fde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018fa8:	9e04      	ldr	r6, [sp, #16]
 8018faa:	4372      	muls	r2, r6
 8018fac:	1c56      	adds	r6, r2, #1
 8018fae:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8018fb2:	1212      	asrs	r2, r2, #8
 8018fb4:	0a26      	lsrs	r6, r4, #8
 8018fb6:	2aff      	cmp	r2, #255	; 0xff
 8018fb8:	9605      	str	r6, [sp, #20]
 8018fba:	d116      	bne.n	8018fea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018fbc:	f06f 0201 	mvn.w	r2, #1
 8018fc0:	fb02 fc07 	mul.w	ip, r2, r7
 8018fc4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8018fc8:	0962      	lsrs	r2, r4, #5
 8018fca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018fce:	f026 0607 	bic.w	r6, r6, #7
 8018fd2:	4316      	orrs	r6, r2
 8018fd4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8018fd8:	4326      	orrs	r6, r4
 8018fda:	f825 600c 	strh.w	r6, [r5, ip]
 8018fde:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018fe0:	4410      	add	r0, r2
 8018fe2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018fe4:	3f01      	subs	r7, #1
 8018fe6:	4411      	add	r1, r2
 8018fe8:	e787      	b.n	8018efa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018fea:	f06f 0601 	mvn.w	r6, #1
 8018fee:	437e      	muls	r6, r7
 8018ff0:	fa1f fa82 	uxth.w	sl, r2
 8018ff4:	f835 8006 	ldrh.w	r8, [r5, r6]
 8018ff8:	9602      	str	r6, [sp, #8]
 8018ffa:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8018ffe:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8019002:	43d2      	mvns	r2, r2
 8019004:	b2d2      	uxtb	r2, r2
 8019006:	fb1c fc0a 	smulbb	ip, ip, sl
 801900a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801900e:	fb0e ce02 	mla	lr, lr, r2, ip
 8019012:	b2e4      	uxtb	r4, r4
 8019014:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019018:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801901c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019020:	fa5f f888 	uxtb.w	r8, r8
 8019024:	fb14 f40a 	smulbb	r4, r4, sl
 8019028:	fb08 4402 	mla	r4, r8, r2, r4
 801902c:	fa1f fe8e 	uxth.w	lr, lr
 8019030:	fb16 f60a 	smulbb	r6, r6, sl
 8019034:	b2a4      	uxth	r4, r4
 8019036:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801903a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801903e:	f10e 0201 	add.w	r2, lr, #1
 8019042:	1c66      	adds	r6, r4, #1
 8019044:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019048:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801904c:	fa1f fc8c 	uxth.w	ip, ip
 8019050:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019054:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019058:	ea46 0e0e 	orr.w	lr, r6, lr
 801905c:	f10c 0601 	add.w	r6, ip, #1
 8019060:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019064:	0976      	lsrs	r6, r6, #5
 8019066:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801906a:	9a02      	ldr	r2, [sp, #8]
 801906c:	ea4e 0e06 	orr.w	lr, lr, r6
 8019070:	f825 e002 	strh.w	lr, [r5, r2]
 8019074:	e7b3      	b.n	8018fde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019076:	f04f 0800 	mov.w	r8, #0
 801907a:	eba3 0208 	sub.w	r2, r3, r8
 801907e:	2a00      	cmp	r2, #0
 8019080:	f77f af3e 	ble.w	8018f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019084:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8019088:	1404      	asrs	r4, r0, #16
 801908a:	140a      	asrs	r2, r1, #16
 801908c:	fb06 4202 	mla	r2, r6, r2, r4
 8019090:	9c01      	ldr	r4, [sp, #4]
 8019092:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019096:	0e22      	lsrs	r2, r4, #24
 8019098:	d016      	beq.n	80190c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801909a:	9e04      	ldr	r6, [sp, #16]
 801909c:	4372      	muls	r2, r6
 801909e:	1c56      	adds	r6, r2, #1
 80190a0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80190a4:	1212      	asrs	r2, r2, #8
 80190a6:	2aff      	cmp	r2, #255	; 0xff
 80190a8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80190ac:	d113      	bne.n	80190d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80190ae:	0962      	lsrs	r2, r4, #5
 80190b0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80190b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80190b8:	f026 0607 	bic.w	r6, r6, #7
 80190bc:	4316      	orrs	r6, r2
 80190be:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80190c2:	4326      	orrs	r6, r4
 80190c4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80190c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80190ca:	4410      	add	r0, r2
 80190cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80190ce:	f108 0801 	add.w	r8, r8, #1
 80190d2:	4411      	add	r1, r2
 80190d4:	e7d1      	b.n	801907a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80190d6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80190da:	fa1f fa82 	uxth.w	sl, r2
 80190de:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80190e2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80190e6:	43d2      	mvns	r2, r2
 80190e8:	b2d2      	uxtb	r2, r2
 80190ea:	fb17 f70a 	smulbb	r7, r7, sl
 80190ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80190f2:	fb0c 7c02 	mla	ip, ip, r2, r7
 80190f6:	b2e4      	uxtb	r4, r4
 80190f8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80190fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019100:	fa5f fe8e 	uxtb.w	lr, lr
 8019104:	fb14 f40a 	smulbb	r4, r4, sl
 8019108:	fb0e 4402 	mla	r4, lr, r2, r4
 801910c:	b2f6      	uxtb	r6, r6
 801910e:	fa1f fc8c 	uxth.w	ip, ip
 8019112:	fb16 f60a 	smulbb	r6, r6, sl
 8019116:	b2a4      	uxth	r4, r4
 8019118:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801911c:	fb07 6702 	mla	r7, r7, r2, r6
 8019120:	f10c 0201 	add.w	r2, ip, #1
 8019124:	1c66      	adds	r6, r4, #1
 8019126:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801912a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801912e:	b2bf      	uxth	r7, r7
 8019130:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019134:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019138:	ea46 0c0c 	orr.w	ip, r6, ip
 801913c:	1c7e      	adds	r6, r7, #1
 801913e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8019142:	0976      	lsrs	r6, r6, #5
 8019144:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019148:	ea4c 0c06 	orr.w	ip, ip, r6
 801914c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8019150:	e7ba      	b.n	80190c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019152:	b007      	add	sp, #28
 8019154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019158 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801915c:	b085      	sub	sp, #20
 801915e:	468b      	mov	fp, r1
 8019160:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019162:	9203      	str	r2, [sp, #12]
 8019164:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019168:	6841      	ldr	r1, [r0, #4]
 801916a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801916e:	fb01 2404 	mla	r4, r1, r4, r2
 8019172:	6802      	ldr	r2, [r0, #0]
 8019174:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019178:	f8d8 2000 	ldr.w	r2, [r8]
 801917c:	9201      	str	r2, [sp, #4]
 801917e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019182:	f1bb 0f00 	cmp.w	fp, #0
 8019186:	dc03      	bgt.n	8019190 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019188:	9a03      	ldr	r2, [sp, #12]
 801918a:	2a00      	cmp	r2, #0
 801918c:	f340 814f 	ble.w	801942e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019190:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019192:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019196:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801919a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801919e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80191a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80191a4:	2b00      	cmp	r3, #0
 80191a6:	dd0e      	ble.n	80191c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80191a8:	1408      	asrs	r0, r1, #16
 80191aa:	d405      	bmi.n	80191b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80191ac:	42b8      	cmp	r0, r7
 80191ae:	da03      	bge.n	80191b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80191b0:	1410      	asrs	r0, r2, #16
 80191b2:	d401      	bmi.n	80191b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80191b4:	42b0      	cmp	r0, r6
 80191b6:	db07      	blt.n	80191c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80191b8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80191ba:	4401      	add	r1, r0
 80191bc:	9812      	ldr	r0, [sp, #72]	; 0x48
 80191be:	3b01      	subs	r3, #1
 80191c0:	4402      	add	r2, r0
 80191c2:	3402      	adds	r4, #2
 80191c4:	e7ee      	b.n	80191a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80191c6:	d017      	beq.n	80191f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80191c8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80191ca:	1e58      	subs	r0, r3, #1
 80191cc:	fb05 1500 	mla	r5, r5, r0, r1
 80191d0:	142d      	asrs	r5, r5, #16
 80191d2:	d409      	bmi.n	80191e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80191d4:	42bd      	cmp	r5, r7
 80191d6:	da07      	bge.n	80191e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80191d8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80191da:	fb05 2000 	mla	r0, r5, r0, r2
 80191de:	1400      	asrs	r0, r0, #16
 80191e0:	d402      	bmi.n	80191e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80191e2:	42b0      	cmp	r0, r6
 80191e4:	f2c0 80ba 	blt.w	801935c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80191e8:	2600      	movs	r6, #0
 80191ea:	1998      	adds	r0, r3, r6
 80191ec:	2800      	cmp	r0, #0
 80191ee:	dc3e      	bgt.n	801926e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80191f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80191f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80191f8:	f1bb 0f00 	cmp.w	fp, #0
 80191fc:	f340 8117 	ble.w	801942e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019200:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019204:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019208:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801920c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801920e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019212:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019216:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801921a:	eeb0 6a62 	vmov.f32	s12, s5
 801921e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019222:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019226:	ee77 2a62 	vsub.f32	s5, s14, s5
 801922a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801922e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019232:	eeb0 6a43 	vmov.f32	s12, s6
 8019236:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801923a:	ee12 2a90 	vmov	r2, s5
 801923e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019242:	fb92 f3f3 	sdiv	r3, r2, r3
 8019246:	ee13 2a10 	vmov	r2, s6
 801924a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801924e:	9311      	str	r3, [sp, #68]	; 0x44
 8019250:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019252:	fb92 f3f3 	sdiv	r3, r2, r3
 8019256:	9a03      	ldr	r2, [sp, #12]
 8019258:	9312      	str	r3, [sp, #72]	; 0x48
 801925a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801925e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019260:	eeb0 3a67 	vmov.f32	s6, s15
 8019264:	bf08      	it	eq
 8019266:	4613      	moveq	r3, r2
 8019268:	eef0 2a47 	vmov.f32	s5, s14
 801926c:	e789      	b.n	8019182 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801926e:	140f      	asrs	r7, r1, #16
 8019270:	d424      	bmi.n	80192bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019272:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019276:	42bd      	cmp	r5, r7
 8019278:	dd20      	ble.n	80192bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801927a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801927e:	d41d      	bmi.n	80192bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019280:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8019284:	4560      	cmp	r0, ip
 8019286:	dd19      	ble.n	80192bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019288:	b22d      	sxth	r5, r5
 801928a:	fb0c 7505 	mla	r5, ip, r5, r7
 801928e:	9801      	ldr	r0, [sp, #4]
 8019290:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8019294:	0e07      	lsrs	r7, r0, #24
 8019296:	2fff      	cmp	r7, #255	; 0xff
 8019298:	d116      	bne.n	80192c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801929a:	f06f 0501 	mvn.w	r5, #1
 801929e:	fb05 f706 	mul.w	r7, r5, r6
 80192a2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80192a6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80192aa:	0945      	lsrs	r5, r0, #5
 80192ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80192b0:	ea4c 0505 	orr.w	r5, ip, r5
 80192b4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80192b8:	4305      	orrs	r5, r0
 80192ba:	53e5      	strh	r5, [r4, r7]
 80192bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80192be:	4401      	add	r1, r0
 80192c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80192c2:	3e01      	subs	r6, #1
 80192c4:	4402      	add	r2, r0
 80192c6:	e790      	b.n	80191ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80192c8:	b2fd      	uxtb	r5, r7
 80192ca:	2f00      	cmp	r7, #0
 80192cc:	d0f6      	beq.n	80192bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80192ce:	f06f 0701 	mvn.w	r7, #1
 80192d2:	4377      	muls	r7, r6
 80192d4:	fa1f f985 	uxth.w	r9, r5
 80192d8:	f834 e007 	ldrh.w	lr, [r4, r7]
 80192dc:	9702      	str	r7, [sp, #8]
 80192de:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80192e2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80192e6:	43ed      	mvns	r5, r5
 80192e8:	b2ed      	uxtb	r5, r5
 80192ea:	fb17 f709 	smulbb	r7, r7, r9
 80192ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80192f2:	fb0c 7c05 	mla	ip, ip, r5, r7
 80192f6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80192fa:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80192fe:	b2c0      	uxtb	r0, r0
 8019300:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019304:	fa5f fe8e 	uxtb.w	lr, lr
 8019308:	fb10 f009 	smulbb	r0, r0, r9
 801930c:	fb0e 0005 	mla	r0, lr, r5, r0
 8019310:	b280      	uxth	r0, r0
 8019312:	fa1f fc8c 	uxth.w	ip, ip
 8019316:	fb1a fa09 	smulbb	sl, sl, r9
 801931a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801931e:	fb07 a705 	mla	r7, r7, r5, sl
 8019322:	f100 0a01 	add.w	sl, r0, #1
 8019326:	f10c 0501 	add.w	r5, ip, #1
 801932a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801932e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019332:	b2bf      	uxth	r7, r7
 8019334:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019338:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801933c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019340:	f107 0a01 	add.w	sl, r7, #1
 8019344:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019348:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801934c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019350:	9802      	ldr	r0, [sp, #8]
 8019352:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019356:	f824 c000 	strh.w	ip, [r4, r0]
 801935a:	e7af      	b.n	80192bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801935c:	f04f 0e00 	mov.w	lr, #0
 8019360:	eba3 000e 	sub.w	r0, r3, lr
 8019364:	2800      	cmp	r0, #0
 8019366:	f77f af43 	ble.w	80191f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801936a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801936e:	140d      	asrs	r5, r1, #16
 8019370:	1410      	asrs	r0, r2, #16
 8019372:	fb06 5000 	mla	r0, r6, r0, r5
 8019376:	9d01      	ldr	r5, [sp, #4]
 8019378:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801937c:	0e2e      	lsrs	r6, r5, #24
 801937e:	2eff      	cmp	r6, #255	; 0xff
 8019380:	d112      	bne.n	80193a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8019382:	482c      	ldr	r0, [pc, #176]	; (8019434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8019384:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019388:	0968      	lsrs	r0, r5, #5
 801938a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801938e:	4330      	orrs	r0, r6
 8019390:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019394:	4328      	orrs	r0, r5
 8019396:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801939a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801939c:	4401      	add	r1, r0
 801939e:	9812      	ldr	r0, [sp, #72]	; 0x48
 80193a0:	f10e 0e01 	add.w	lr, lr, #1
 80193a4:	4402      	add	r2, r0
 80193a6:	e7db      	b.n	8019360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80193a8:	b2f0      	uxtb	r0, r6
 80193aa:	2e00      	cmp	r6, #0
 80193ac:	d0f5      	beq.n	801939a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80193ae:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80193b2:	fa1f f980 	uxth.w	r9, r0
 80193b6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80193ba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80193be:	43c0      	mvns	r0, r0
 80193c0:	b2c0      	uxtb	r0, r0
 80193c2:	fb16 f609 	smulbb	r6, r6, r9
 80193c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80193ca:	fb07 6700 	mla	r7, r7, r0, r6
 80193ce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80193d2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80193d6:	b2ed      	uxtb	r5, r5
 80193d8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80193dc:	fa5f fc8c 	uxtb.w	ip, ip
 80193e0:	fb15 f509 	smulbb	r5, r5, r9
 80193e4:	fb0c 5500 	mla	r5, ip, r0, r5
 80193e8:	b2bf      	uxth	r7, r7
 80193ea:	fb1a fa09 	smulbb	sl, sl, r9
 80193ee:	b2ad      	uxth	r5, r5
 80193f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80193f4:	fb06 a600 	mla	r6, r6, r0, sl
 80193f8:	1c78      	adds	r0, r7, #1
 80193fa:	f105 0a01 	add.w	sl, r5, #1
 80193fe:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019402:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019406:	b2b6      	uxth	r6, r6
 8019408:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801940c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019410:	ea4a 0707 	orr.w	r7, sl, r7
 8019414:	f106 0a01 	add.w	sl, r6, #1
 8019418:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801941c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019420:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019424:	ea47 070a 	orr.w	r7, r7, sl
 8019428:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801942c:	e7b5      	b.n	801939a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801942e:	b005      	add	sp, #20
 8019430:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019434:	fffff800 	.word	0xfffff800

08019438 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801943c:	b087      	sub	sp, #28
 801943e:	468b      	mov	fp, r1
 8019440:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019442:	9203      	str	r2, [sp, #12]
 8019444:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019448:	9204      	str	r2, [sp, #16]
 801944a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801944e:	6841      	ldr	r1, [r0, #4]
 8019450:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8019454:	fb01 2404 	mla	r4, r1, r4, r2
 8019458:	6802      	ldr	r2, [r0, #0]
 801945a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801945e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8019462:	3201      	adds	r2, #1
 8019464:	f022 0201 	bic.w	r2, r2, #1
 8019468:	9200      	str	r2, [sp, #0]
 801946a:	f8d9 2000 	ldr.w	r2, [r9]
 801946e:	9201      	str	r2, [sp, #4]
 8019470:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019474:	f1bb 0f00 	cmp.w	fp, #0
 8019478:	dc03      	bgt.n	8019482 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801947a:	9a03      	ldr	r2, [sp, #12]
 801947c:	2a00      	cmp	r2, #0
 801947e:	f340 8169 	ble.w	8019754 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8019482:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019484:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019488:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801948c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019490:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019492:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019496:	2b00      	cmp	r3, #0
 8019498:	dd0e      	ble.n	80194b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801949a:	1402      	asrs	r2, r0, #16
 801949c:	d405      	bmi.n	80194aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801949e:	42ba      	cmp	r2, r7
 80194a0:	da03      	bge.n	80194aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80194a2:	140a      	asrs	r2, r1, #16
 80194a4:	d401      	bmi.n	80194aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80194a6:	42b2      	cmp	r2, r6
 80194a8:	db07      	blt.n	80194ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80194aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80194ac:	4410      	add	r0, r2
 80194ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80194b0:	3b01      	subs	r3, #1
 80194b2:	4411      	add	r1, r2
 80194b4:	3402      	adds	r4, #2
 80194b6:	e7ee      	b.n	8019496 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80194b8:	d017      	beq.n	80194ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80194ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80194bc:	1e5a      	subs	r2, r3, #1
 80194be:	fb05 0502 	mla	r5, r5, r2, r0
 80194c2:	142d      	asrs	r5, r5, #16
 80194c4:	d409      	bmi.n	80194da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80194c6:	42bd      	cmp	r5, r7
 80194c8:	da07      	bge.n	80194da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80194ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80194cc:	fb05 1202 	mla	r2, r5, r2, r1
 80194d0:	1412      	asrs	r2, r2, #16
 80194d2:	d402      	bmi.n	80194da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80194d4:	42b2      	cmp	r2, r6
 80194d6:	f2c0 80c7 	blt.w	8019668 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80194da:	2700      	movs	r7, #0
 80194dc:	19da      	adds	r2, r3, r7
 80194de:	2a00      	cmp	r2, #0
 80194e0:	dc3e      	bgt.n	8019560 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80194e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80194e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80194ea:	f1bb 0f00 	cmp.w	fp, #0
 80194ee:	f340 8131 	ble.w	8019754 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80194f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80194f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80194fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80194fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019500:	f1bb 0b01 	subs.w	fp, fp, #1
 8019504:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019508:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801950c:	eeb0 6a62 	vmov.f32	s12, s5
 8019510:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019514:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019518:	ee77 2a62 	vsub.f32	s5, s14, s5
 801951c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019520:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019524:	eeb0 6a43 	vmov.f32	s12, s6
 8019528:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801952c:	ee12 2a90 	vmov	r2, s5
 8019530:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019534:	fb92 f3f3 	sdiv	r3, r2, r3
 8019538:	ee13 2a10 	vmov	r2, s6
 801953c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019540:	9313      	str	r3, [sp, #76]	; 0x4c
 8019542:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019544:	fb92 f3f3 	sdiv	r3, r2, r3
 8019548:	9a03      	ldr	r2, [sp, #12]
 801954a:	9314      	str	r3, [sp, #80]	; 0x50
 801954c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019550:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019552:	eeb0 3a67 	vmov.f32	s6, s15
 8019556:	bf08      	it	eq
 8019558:	4613      	moveq	r3, r2
 801955a:	eef0 2a47 	vmov.f32	s5, s14
 801955e:	e789      	b.n	8019474 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019560:	1405      	asrs	r5, r0, #16
 8019562:	d435      	bmi.n	80195d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019564:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8019568:	42aa      	cmp	r2, r5
 801956a:	dd31      	ble.n	80195d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801956c:	140e      	asrs	r6, r1, #16
 801956e:	d42f      	bmi.n	80195d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019570:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019574:	42b2      	cmp	r2, r6
 8019576:	dd2b      	ble.n	80195d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019578:	9a00      	ldr	r2, [sp, #0]
 801957a:	fb06 5502 	mla	r5, r6, r2, r5
 801957e:	086a      	lsrs	r2, r5, #1
 8019580:	9e01      	ldr	r6, [sp, #4]
 8019582:	5cb2      	ldrb	r2, [r6, r2]
 8019584:	07ee      	lsls	r6, r5, #31
 8019586:	bf54      	ite	pl
 8019588:	f002 020f 	andpl.w	r2, r2, #15
 801958c:	1112      	asrmi	r2, r2, #4
 801958e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019592:	b2d2      	uxtb	r2, r2
 8019594:	b1e2      	cbz	r2, 80195d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019596:	9d04      	ldr	r5, [sp, #16]
 8019598:	436a      	muls	r2, r5
 801959a:	1c55      	adds	r5, r2, #1
 801959c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80195a0:	4d6e      	ldr	r5, [pc, #440]	; (801975c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80195a2:	682d      	ldr	r5, [r5, #0]
 80195a4:	1212      	asrs	r2, r2, #8
 80195a6:	0a2e      	lsrs	r6, r5, #8
 80195a8:	2aff      	cmp	r2, #255	; 0xff
 80195aa:	9605      	str	r6, [sp, #20]
 80195ac:	d116      	bne.n	80195dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80195ae:	f06f 0201 	mvn.w	r2, #1
 80195b2:	fb02 fc07 	mul.w	ip, r2, r7
 80195b6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80195ba:	096a      	lsrs	r2, r5, #5
 80195bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80195c0:	f026 0607 	bic.w	r6, r6, #7
 80195c4:	4316      	orrs	r6, r2
 80195c6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80195ca:	432e      	orrs	r6, r5
 80195cc:	f824 600c 	strh.w	r6, [r4, ip]
 80195d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80195d2:	4410      	add	r0, r2
 80195d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80195d6:	3f01      	subs	r7, #1
 80195d8:	4411      	add	r1, r2
 80195da:	e77f      	b.n	80194dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80195dc:	f06f 0601 	mvn.w	r6, #1
 80195e0:	437e      	muls	r6, r7
 80195e2:	fa1f fa82 	uxth.w	sl, r2
 80195e6:	f834 8006 	ldrh.w	r8, [r4, r6]
 80195ea:	9602      	str	r6, [sp, #8]
 80195ec:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80195f0:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80195f4:	43d2      	mvns	r2, r2
 80195f6:	b2d2      	uxtb	r2, r2
 80195f8:	fb1c fc0a 	smulbb	ip, ip, sl
 80195fc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019600:	fb0e ce02 	mla	lr, lr, r2, ip
 8019604:	b2ed      	uxtb	r5, r5
 8019606:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801960a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801960e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019612:	fa5f f888 	uxtb.w	r8, r8
 8019616:	fb15 f50a 	smulbb	r5, r5, sl
 801961a:	fb08 5502 	mla	r5, r8, r2, r5
 801961e:	fa1f fe8e 	uxth.w	lr, lr
 8019622:	fb16 f60a 	smulbb	r6, r6, sl
 8019626:	b2ad      	uxth	r5, r5
 8019628:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801962c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8019630:	f10e 0201 	add.w	r2, lr, #1
 8019634:	1c6e      	adds	r6, r5, #1
 8019636:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801963a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801963e:	fa1f fc8c 	uxth.w	ip, ip
 8019642:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019646:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801964a:	ea46 0e0e 	orr.w	lr, r6, lr
 801964e:	f10c 0601 	add.w	r6, ip, #1
 8019652:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019656:	0976      	lsrs	r6, r6, #5
 8019658:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801965c:	9a02      	ldr	r2, [sp, #8]
 801965e:	ea4e 0e06 	orr.w	lr, lr, r6
 8019662:	f824 e002 	strh.w	lr, [r4, r2]
 8019666:	e7b3      	b.n	80195d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019668:	f04f 0800 	mov.w	r8, #0
 801966c:	eba3 0208 	sub.w	r2, r3, r8
 8019670:	2a00      	cmp	r2, #0
 8019672:	f77f af36 	ble.w	80194e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019676:	9e00      	ldr	r6, [sp, #0]
 8019678:	1402      	asrs	r2, r0, #16
 801967a:	140d      	asrs	r5, r1, #16
 801967c:	fb06 2505 	mla	r5, r6, r5, r2
 8019680:	086a      	lsrs	r2, r5, #1
 8019682:	9e01      	ldr	r6, [sp, #4]
 8019684:	5cb2      	ldrb	r2, [r6, r2]
 8019686:	07ed      	lsls	r5, r5, #31
 8019688:	bf54      	ite	pl
 801968a:	f002 020f 	andpl.w	r2, r2, #15
 801968e:	1112      	asrmi	r2, r2, #4
 8019690:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019694:	b2d2      	uxtb	r2, r2
 8019696:	b1c2      	cbz	r2, 80196ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019698:	9d04      	ldr	r5, [sp, #16]
 801969a:	436a      	muls	r2, r5
 801969c:	1c55      	adds	r5, r2, #1
 801969e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80196a2:	4d2e      	ldr	r5, [pc, #184]	; (801975c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80196a4:	1212      	asrs	r2, r2, #8
 80196a6:	682e      	ldr	r6, [r5, #0]
 80196a8:	2aff      	cmp	r2, #255	; 0xff
 80196aa:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80196ae:	d113      	bne.n	80196d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80196b0:	0972      	lsrs	r2, r6, #5
 80196b2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80196b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80196ba:	f025 0507 	bic.w	r5, r5, #7
 80196be:	4315      	orrs	r5, r2
 80196c0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80196c4:	4335      	orrs	r5, r6
 80196c6:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80196ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80196cc:	4410      	add	r0, r2
 80196ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80196d0:	f108 0801 	add.w	r8, r8, #1
 80196d4:	4411      	add	r1, r2
 80196d6:	e7c9      	b.n	801966c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80196d8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80196dc:	fa1f fa82 	uxth.w	sl, r2
 80196e0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80196e4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80196e8:	43d2      	mvns	r2, r2
 80196ea:	b2d2      	uxtb	r2, r2
 80196ec:	fb17 f70a 	smulbb	r7, r7, sl
 80196f0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80196f4:	fb0c 7c02 	mla	ip, ip, r2, r7
 80196f8:	b2f6      	uxtb	r6, r6
 80196fa:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80196fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019702:	fa5f fe8e 	uxtb.w	lr, lr
 8019706:	fb16 f60a 	smulbb	r6, r6, sl
 801970a:	fb0e 6602 	mla	r6, lr, r2, r6
 801970e:	b2ed      	uxtb	r5, r5
 8019710:	fa1f fc8c 	uxth.w	ip, ip
 8019714:	fb15 f50a 	smulbb	r5, r5, sl
 8019718:	b2b6      	uxth	r6, r6
 801971a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801971e:	fb07 5702 	mla	r7, r7, r2, r5
 8019722:	f10c 0201 	add.w	r2, ip, #1
 8019726:	1c75      	adds	r5, r6, #1
 8019728:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801972c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8019730:	b2bf      	uxth	r7, r7
 8019732:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019736:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801973a:	ea45 0c0c 	orr.w	ip, r5, ip
 801973e:	1c7d      	adds	r5, r7, #1
 8019740:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8019744:	096d      	lsrs	r5, r5, #5
 8019746:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801974a:	ea4c 0c05 	orr.w	ip, ip, r5
 801974e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8019752:	e7ba      	b.n	80196ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019754:	b007      	add	sp, #28
 8019756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801975a:	bf00      	nop
 801975c:	200137cc 	.word	0x200137cc

08019760 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019764:	b087      	sub	sp, #28
 8019766:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8019a74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801976a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801976c:	9205      	str	r2, [sp, #20]
 801976e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019772:	9101      	str	r1, [sp, #4]
 8019774:	6841      	ldr	r1, [r0, #4]
 8019776:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801977a:	fb01 2404 	mla	r4, r1, r4, r2
 801977e:	6802      	ldr	r2, [r0, #0]
 8019780:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019784:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019788:	3201      	adds	r2, #1
 801978a:	f022 0201 	bic.w	r2, r2, #1
 801978e:	9202      	str	r2, [sp, #8]
 8019790:	f8db 2000 	ldr.w	r2, [fp]
 8019794:	9203      	str	r2, [sp, #12]
 8019796:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801979a:	9a01      	ldr	r2, [sp, #4]
 801979c:	2a00      	cmp	r2, #0
 801979e:	dc03      	bgt.n	80197a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80197a0:	9a05      	ldr	r2, [sp, #20]
 80197a2:	2a00      	cmp	r2, #0
 80197a4:	f340 8162 	ble.w	8019a6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80197a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80197aa:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80197ae:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80197b2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80197b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80197b8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80197bc:	2b00      	cmp	r3, #0
 80197be:	dd0e      	ble.n	80197de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80197c0:	1402      	asrs	r2, r0, #16
 80197c2:	d405      	bmi.n	80197d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80197c4:	42ba      	cmp	r2, r7
 80197c6:	da03      	bge.n	80197d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80197c8:	140a      	asrs	r2, r1, #16
 80197ca:	d401      	bmi.n	80197d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80197cc:	42b2      	cmp	r2, r6
 80197ce:	db07      	blt.n	80197e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80197d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80197d2:	4410      	add	r0, r2
 80197d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80197d6:	3b01      	subs	r3, #1
 80197d8:	4411      	add	r1, r2
 80197da:	3402      	adds	r4, #2
 80197dc:	e7ee      	b.n	80197bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80197de:	d017      	beq.n	8019810 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80197e0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80197e2:	1e5a      	subs	r2, r3, #1
 80197e4:	fb05 0502 	mla	r5, r5, r2, r0
 80197e8:	142d      	asrs	r5, r5, #16
 80197ea:	d409      	bmi.n	8019800 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80197ec:	42bd      	cmp	r5, r7
 80197ee:	da07      	bge.n	8019800 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80197f0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80197f2:	fb05 1202 	mla	r2, r5, r2, r1
 80197f6:	1412      	asrs	r2, r2, #16
 80197f8:	d402      	bmi.n	8019800 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80197fa:	42b2      	cmp	r2, r6
 80197fc:	f2c0 80c3 	blt.w	8019986 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8019800:	2500      	movs	r5, #0
 8019802:	195a      	adds	r2, r3, r5
 8019804:	2a00      	cmp	r2, #0
 8019806:	dc3f      	bgt.n	8019888 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019808:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801980c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019810:	9b01      	ldr	r3, [sp, #4]
 8019812:	2b00      	cmp	r3, #0
 8019814:	f340 812a 	ble.w	8019a6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019818:	ee30 0a04 	vadd.f32	s0, s0, s8
 801981c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019820:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019824:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019826:	ee31 1a05 	vadd.f32	s2, s2, s10
 801982a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801982e:	eeb0 6a62 	vmov.f32	s12, s5
 8019832:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019836:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801983a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801983e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019842:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019846:	eeb0 6a43 	vmov.f32	s12, s6
 801984a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801984e:	ee12 2a90 	vmov	r2, s5
 8019852:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019856:	fb92 f3f3 	sdiv	r3, r2, r3
 801985a:	ee13 2a10 	vmov	r2, s6
 801985e:	9313      	str	r3, [sp, #76]	; 0x4c
 8019860:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019862:	fb92 f3f3 	sdiv	r3, r2, r3
 8019866:	9314      	str	r3, [sp, #80]	; 0x50
 8019868:	9b01      	ldr	r3, [sp, #4]
 801986a:	9a05      	ldr	r2, [sp, #20]
 801986c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019870:	3b01      	subs	r3, #1
 8019872:	9301      	str	r3, [sp, #4]
 8019874:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019878:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801987a:	eeb0 3a67 	vmov.f32	s6, s15
 801987e:	bf08      	it	eq
 8019880:	4613      	moveq	r3, r2
 8019882:	eef0 2a47 	vmov.f32	s5, s14
 8019886:	e788      	b.n	801979a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019888:	1406      	asrs	r6, r0, #16
 801988a:	d42c      	bmi.n	80198e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801988c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019890:	42b2      	cmp	r2, r6
 8019892:	dd28      	ble.n	80198e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019894:	140f      	asrs	r7, r1, #16
 8019896:	d426      	bmi.n	80198e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019898:	f8db 200c 	ldr.w	r2, [fp, #12]
 801989c:	42ba      	cmp	r2, r7
 801989e:	dd22      	ble.n	80198e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80198a0:	9a02      	ldr	r2, [sp, #8]
 80198a2:	fb07 6602 	mla	r6, r7, r2, r6
 80198a6:	0872      	lsrs	r2, r6, #1
 80198a8:	9f03      	ldr	r7, [sp, #12]
 80198aa:	5cba      	ldrb	r2, [r7, r2]
 80198ac:	07f6      	lsls	r6, r6, #31
 80198ae:	bf54      	ite	pl
 80198b0:	f002 020f 	andpl.w	r2, r2, #15
 80198b4:	1112      	asrmi	r2, r2, #4
 80198b6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80198ba:	b2d2      	uxtb	r2, r2
 80198bc:	2aff      	cmp	r2, #255	; 0xff
 80198be:	d118      	bne.n	80198f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80198c0:	f8d8 2000 	ldr.w	r2, [r8]
 80198c4:	f06f 0601 	mvn.w	r6, #1
 80198c8:	fb06 f705 	mul.w	r7, r6, r5
 80198cc:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80198d0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80198d4:	0956      	lsrs	r6, r2, #5
 80198d6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80198da:	ea4c 0606 	orr.w	r6, ip, r6
 80198de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80198e2:	4316      	orrs	r6, r2
 80198e4:	53e6      	strh	r6, [r4, r7]
 80198e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80198e8:	4410      	add	r0, r2
 80198ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80198ec:	3d01      	subs	r5, #1
 80198ee:	4411      	add	r1, r2
 80198f0:	e787      	b.n	8019802 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80198f2:	2a00      	cmp	r2, #0
 80198f4:	d0f7      	beq.n	80198e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80198f6:	f06f 0601 	mvn.w	r6, #1
 80198fa:	436e      	muls	r6, r5
 80198fc:	f8d8 c000 	ldr.w	ip, [r8]
 8019900:	f834 e006 	ldrh.w	lr, [r4, r6]
 8019904:	9604      	str	r6, [sp, #16]
 8019906:	fa1f f982 	uxth.w	r9, r2
 801990a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801990e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8019912:	43d2      	mvns	r2, r2
 8019914:	b2d2      	uxtb	r2, r2
 8019916:	fb16 f609 	smulbb	r6, r6, r9
 801991a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801991e:	fb07 6702 	mla	r7, r7, r2, r6
 8019922:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8019926:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801992a:	fa5f fc8c 	uxtb.w	ip, ip
 801992e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019932:	fa5f fe8e 	uxtb.w	lr, lr
 8019936:	fb1c fc09 	smulbb	ip, ip, r9
 801993a:	fb0e cc02 	mla	ip, lr, r2, ip
 801993e:	b2bf      	uxth	r7, r7
 8019940:	fb1a fa09 	smulbb	sl, sl, r9
 8019944:	fa1f fc8c 	uxth.w	ip, ip
 8019948:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801994c:	fb06 a602 	mla	r6, r6, r2, sl
 8019950:	1c7a      	adds	r2, r7, #1
 8019952:	f10c 0a01 	add.w	sl, ip, #1
 8019956:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801995a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801995e:	b2b6      	uxth	r6, r6
 8019960:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019964:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019968:	ea4a 0707 	orr.w	r7, sl, r7
 801996c:	f106 0a01 	add.w	sl, r6, #1
 8019970:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019974:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019978:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801997c:	9a04      	ldr	r2, [sp, #16]
 801997e:	ea47 070a 	orr.w	r7, r7, sl
 8019982:	52a7      	strh	r7, [r4, r2]
 8019984:	e7af      	b.n	80198e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019986:	f04f 0e00 	mov.w	lr, #0
 801998a:	eba3 020e 	sub.w	r2, r3, lr
 801998e:	2a00      	cmp	r2, #0
 8019990:	f77f af3a 	ble.w	8019808 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019994:	9e02      	ldr	r6, [sp, #8]
 8019996:	1402      	asrs	r2, r0, #16
 8019998:	140d      	asrs	r5, r1, #16
 801999a:	fb06 2505 	mla	r5, r6, r5, r2
 801999e:	086a      	lsrs	r2, r5, #1
 80199a0:	9e03      	ldr	r6, [sp, #12]
 80199a2:	5cb2      	ldrb	r2, [r6, r2]
 80199a4:	07ed      	lsls	r5, r5, #31
 80199a6:	bf54      	ite	pl
 80199a8:	f002 020f 	andpl.w	r2, r2, #15
 80199ac:	1112      	asrmi	r2, r2, #4
 80199ae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80199b2:	b2d2      	uxtb	r2, r2
 80199b4:	2aff      	cmp	r2, #255	; 0xff
 80199b6:	d115      	bne.n	80199e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80199b8:	f8d8 5000 	ldr.w	r5, [r8]
 80199bc:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 80199c0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80199c4:	096a      	lsrs	r2, r5, #5
 80199c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80199ca:	4332      	orrs	r2, r6
 80199cc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80199d0:	432a      	orrs	r2, r5
 80199d2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80199d6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80199d8:	4410      	add	r0, r2
 80199da:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80199dc:	f10e 0e01 	add.w	lr, lr, #1
 80199e0:	4411      	add	r1, r2
 80199e2:	e7d2      	b.n	801998a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80199e4:	2a00      	cmp	r2, #0
 80199e6:	d0f6      	beq.n	80199d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80199e8:	f8d8 7000 	ldr.w	r7, [r8]
 80199ec:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80199f0:	fa1f f982 	uxth.w	r9, r2
 80199f4:	ea4f 262c 	mov.w	r6, ip, asr #8
 80199f8:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80199fc:	43d2      	mvns	r2, r2
 80199fe:	b2d2      	uxtb	r2, r2
 8019a00:	fb15 f509 	smulbb	r5, r5, r9
 8019a04:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019a08:	fb06 5602 	mla	r6, r6, r2, r5
 8019a0c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8019a10:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019a14:	b2ff      	uxtb	r7, r7
 8019a16:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019a1a:	fa5f fc8c 	uxtb.w	ip, ip
 8019a1e:	fb17 f709 	smulbb	r7, r7, r9
 8019a22:	fb0c 7702 	mla	r7, ip, r2, r7
 8019a26:	b2b6      	uxth	r6, r6
 8019a28:	fb1a fa09 	smulbb	sl, sl, r9
 8019a2c:	b2bf      	uxth	r7, r7
 8019a2e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019a32:	fb05 a502 	mla	r5, r5, r2, sl
 8019a36:	1c72      	adds	r2, r6, #1
 8019a38:	f107 0a01 	add.w	sl, r7, #1
 8019a3c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8019a40:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019a44:	b2ad      	uxth	r5, r5
 8019a46:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019a4a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8019a4e:	ea4a 0606 	orr.w	r6, sl, r6
 8019a52:	f105 0a01 	add.w	sl, r5, #1
 8019a56:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019a5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019a5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019a62:	ea46 060a 	orr.w	r6, r6, sl
 8019a66:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8019a6a:	e7b4      	b.n	80199d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019a6c:	b007      	add	sp, #28
 8019a6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a72:	bf00      	nop
 8019a74:	200137cc 	.word	0x200137cc

08019a78 <_ZN8touchgfx8LCD16bppD1Ev>:
 8019a78:	4770      	bx	lr

08019a7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8019a7a:	4770      	bx	lr

08019a7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8019a7c:	4770      	bx	lr

08019a7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8019a7e:	4770      	bx	lr

08019a80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8019a80:	4770      	bx	lr

08019a82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8019a82:	4770      	bx	lr

08019a84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8019a84:	4770      	bx	lr

08019a86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8019a86:	4770      	bx	lr

08019a88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019a88:	4770      	bx	lr

08019a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019a8a:	4770      	bx	lr

08019a8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019a8c:	4770      	bx	lr

08019a8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019a8e:	4770      	bx	lr

08019a90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019a90:	4770      	bx	lr

08019a92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019a92:	4770      	bx	lr

08019a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019a94:	4770      	bx	lr

08019a96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019a96:	4770      	bx	lr

08019a98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019a98:	4770      	bx	lr

08019a9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019a9a:	4770      	bx	lr

08019a9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019a9c:	4770      	bx	lr

08019a9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019a9e:	4770      	bx	lr

08019aa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019aa0:	4770      	bx	lr

08019aa2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019aa2:	4770      	bx	lr

08019aa4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019aa4:	4770      	bx	lr

08019aa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019aa6:	4770      	bx	lr

08019aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019aa8:	4770      	bx	lr

08019aaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8019aaa:	4770      	bx	lr

08019aac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019aac:	4770      	bx	lr

08019aae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8019aae:	4770      	bx	lr

08019ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019ab0:	4770      	bx	lr

08019ab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019ab2:	4770      	bx	lr

08019ab4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019ab4:	4770      	bx	lr

08019ab6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019ab6:	4770      	bx	lr

08019ab8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8019ab8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019abc:	b088      	sub	sp, #32
 8019abe:	ac08      	add	r4, sp, #32
 8019ac0:	4606      	mov	r6, r0
 8019ac2:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8019ac6:	4620      	mov	r0, r4
 8019ac8:	4688      	mov	r8, r1
 8019aca:	4691      	mov	r9, r2
 8019acc:	f7fd fc62 	bl	8017394 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019ad0:	6833      	ldr	r3, [r6, #0]
 8019ad2:	4605      	mov	r5, r0
 8019ad4:	4620      	mov	r0, r4
 8019ad6:	699f      	ldr	r7, [r3, #24]
 8019ad8:	f7fd fb70 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019adc:	4682      	mov	sl, r0
 8019ade:	4620      	mov	r0, r4
 8019ae0:	f7fd fba0 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019ae4:	9500      	str	r5, [sp, #0]
 8019ae6:	e9cd a001 	strd	sl, r0, [sp, #4]
 8019aea:	464b      	mov	r3, r9
 8019aec:	a806      	add	r0, sp, #24
 8019aee:	4642      	mov	r2, r8
 8019af0:	4631      	mov	r1, r6
 8019af2:	47b8      	blx	r7
 8019af4:	4628      	mov	r0, r5
 8019af6:	b008      	add	sp, #32
 8019af8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08019afc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8019afc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8019b00:	2300      	movs	r3, #0
 8019b02:	9300      	str	r3, [sp, #0]
 8019b04:	4b3d      	ldr	r3, [pc, #244]	; (8019bfc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8019b06:	781b      	ldrb	r3, [r3, #0]
 8019b08:	2b00      	cmp	r3, #0
 8019b0a:	d137      	bne.n	8019b7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8019b0c:	4a3c      	ldr	r2, [pc, #240]	; (8019c00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019b0e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8019b12:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019b16:	2b00      	cmp	r3, #0
 8019b18:	d132      	bne.n	8019b80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8019b1a:	4b3a      	ldr	r3, [pc, #232]	; (8019c04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8019b1c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019b20:	6808      	ldr	r0, [r1, #0]
 8019b22:	6849      	ldr	r1, [r1, #4]
 8019b24:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019b28:	ac02      	add	r4, sp, #8
 8019b2a:	ab02      	add	r3, sp, #8
 8019b2c:	c303      	stmia	r3!, {r0, r1}
 8019b2e:	4669      	mov	r1, sp
 8019b30:	4620      	mov	r0, r4
 8019b32:	f7f9 ffb5 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019b36:	4668      	mov	r0, sp
 8019b38:	f7f9 ff6e 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019b3c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8019b40:	f8bd 2000 	ldrh.w	r2, [sp]
 8019b44:	4d30      	ldr	r5, [pc, #192]	; (8019c08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8019b46:	4413      	add	r3, r2
 8019b48:	f8ad 3008 	strh.w	r3, [sp, #8]
 8019b4c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8019b50:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8019b54:	6828      	ldr	r0, [r5, #0]
 8019b56:	4413      	add	r3, r2
 8019b58:	f8ad 300a 	strh.w	r3, [sp, #10]
 8019b5c:	6803      	ldr	r3, [r0, #0]
 8019b5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019b60:	4798      	blx	r3
 8019b62:	f010 0f01 	tst.w	r0, #1
 8019b66:	462f      	mov	r7, r5
 8019b68:	d00c      	beq.n	8019b84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8019b6a:	6828      	ldr	r0, [r5, #0]
 8019b6c:	6803      	ldr	r3, [r0, #0]
 8019b6e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8019b72:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8019b74:	4798      	blx	r3
 8019b76:	b004      	add	sp, #16
 8019b78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019b7c:	4a21      	ldr	r2, [pc, #132]	; (8019c04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8019b7e:	e7c6      	b.n	8019b0e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8019b80:	4b1f      	ldr	r3, [pc, #124]	; (8019c00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019b82:	e7cb      	b.n	8019b1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8019b84:	6838      	ldr	r0, [r7, #0]
 8019b86:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8019b8a:	6803      	ldr	r3, [r0, #0]
 8019b8c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8019b90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019b92:	4798      	blx	r3
 8019b94:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8019b98:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019b9c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8019ba0:	fb16 3602 	smlabb	r6, r6, r2, r3
 8019ba4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019ba8:	6838      	ldr	r0, [r7, #0]
 8019baa:	6803      	ldr	r3, [r0, #0]
 8019bac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019bae:	4798      	blx	r3
 8019bb0:	4a13      	ldr	r2, [pc, #76]	; (8019c00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019bb2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8019bb6:	8813      	ldrh	r3, [r2, #0]
 8019bb8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8019bbc:	fb03 1404 	mla	r4, r3, r4, r1
 8019bc0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019bc4:	435d      	muls	r5, r3
 8019bc6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019bca:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8019bce:	4691      	mov	r9, r2
 8019bd0:	6838      	ldr	r0, [r7, #0]
 8019bd2:	42ac      	cmp	r4, r5
 8019bd4:	6803      	ldr	r3, [r0, #0]
 8019bd6:	d20e      	bcs.n	8019bf6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8019bd8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8019bdc:	4632      	mov	r2, r6
 8019bde:	4643      	mov	r3, r8
 8019be0:	4621      	mov	r1, r4
 8019be2:	47d0      	blx	sl
 8019be4:	f8b9 3000 	ldrh.w	r3, [r9]
 8019be8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019bec:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8019bf0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019bf4:	e7ec      	b.n	8019bd0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8019bf6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019bf8:	4798      	blx	r3
 8019bfa:	e7bc      	b.n	8019b76 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8019bfc:	200137b4 	.word	0x200137b4
 8019c00:	200137b6 	.word	0x200137b6
 8019c04:	200137b8 	.word	0x200137b8
 8019c08:	200137bc 	.word	0x200137bc

08019c0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8019c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c10:	b08b      	sub	sp, #44	; 0x2c
 8019c12:	460f      	mov	r7, r1
 8019c14:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8019c18:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8019c1c:	4616      	mov	r6, r2
 8019c1e:	f1bb 0f00 	cmp.w	fp, #0
 8019c22:	d04a      	beq.n	8019cba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8019c24:	6810      	ldr	r0, [r2, #0]
 8019c26:	6851      	ldr	r1, [r2, #4]
 8019c28:	ad06      	add	r5, sp, #24
 8019c2a:	c503      	stmia	r5!, {r0, r1}
 8019c2c:	6818      	ldr	r0, [r3, #0]
 8019c2e:	6859      	ldr	r1, [r3, #4]
 8019c30:	ad08      	add	r5, sp, #32
 8019c32:	c503      	stmia	r5!, {r0, r1}
 8019c34:	a806      	add	r0, sp, #24
 8019c36:	f7f9 feef 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019c3a:	4631      	mov	r1, r6
 8019c3c:	a808      	add	r0, sp, #32
 8019c3e:	f7f9 ff2f 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019c42:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8019c46:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8019c4a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8019c4e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8019c52:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8019c56:	fb16 2103 	smlabb	r1, r6, r3, r2
 8019c5a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8019c5e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8019c62:	4f5f      	ldr	r7, [pc, #380]	; (8019de0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8019c64:	440a      	add	r2, r1
 8019c66:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019c6a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019c6e:	6838      	ldr	r0, [r7, #0]
 8019c70:	4413      	add	r3, r2
 8019c72:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019c76:	6803      	ldr	r3, [r0, #0]
 8019c78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019c7a:	4798      	blx	r3
 8019c7c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019c80:	46b9      	mov	r9, r7
 8019c82:	d11d      	bne.n	8019cc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8019c84:	b9fc      	cbnz	r4, 8019cc6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8019c86:	f010 0f01 	tst.w	r0, #1
 8019c8a:	d01c      	beq.n	8019cc6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8019c8c:	f8d9 0000 	ldr.w	r0, [r9]
 8019c90:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8019c94:	6801      	ldr	r1, [r0, #0]
 8019c96:	f8cd b00c 	str.w	fp, [sp, #12]
 8019c9a:	2700      	movs	r7, #0
 8019c9c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8019ca0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8019ca4:	9402      	str	r4, [sp, #8]
 8019ca6:	b2ad      	uxth	r5, r5
 8019ca8:	fa1f f488 	uxth.w	r4, r8
 8019cac:	9501      	str	r5, [sp, #4]
 8019cae:	9400      	str	r4, [sp, #0]
 8019cb0:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8019cb2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8019cb6:	4631      	mov	r1, r6
 8019cb8:	47a0      	blx	r4
 8019cba:	b00b      	add	sp, #44	; 0x2c
 8019cbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019cc0:	f010 0f04 	tst.w	r0, #4
 8019cc4:	e7e1      	b.n	8019c8a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8019cc6:	f8d9 0000 	ldr.w	r0, [r9]
 8019cca:	6803      	ldr	r3, [r0, #0]
 8019ccc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019cce:	4798      	blx	r3
 8019cd0:	4b44      	ldr	r3, [pc, #272]	; (8019de4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8019cd2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8019cd6:	881a      	ldrh	r2, [r3, #0]
 8019cd8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8019cdc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019ce0:	fb02 1404 	mla	r4, r2, r4, r1
 8019ce4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019ce8:	469a      	mov	sl, r3
 8019cea:	fb05 f502 	mul.w	r5, r5, r2
 8019cee:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8019cf2:	d059      	beq.n	8019da8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8019cf4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8019cf8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019cfc:	fa1f f28b 	uxth.w	r2, fp
 8019d00:	fa1f f989 	uxth.w	r9, r9
 8019d04:	469e      	mov	lr, r3
 8019d06:	42ac      	cmp	r4, r5
 8019d08:	d264      	bcs.n	8019dd4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8019d0a:	eb04 0a07 	add.w	sl, r4, r7
 8019d0e:	4554      	cmp	r4, sl
 8019d10:	d23d      	bcs.n	8019d8e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8019d12:	8821      	ldrh	r1, [r4, #0]
 8019d14:	f836 3b02 	ldrh.w	r3, [r6], #2
 8019d18:	1208      	asrs	r0, r1, #8
 8019d1a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019d1e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019d22:	fb10 f009 	smulbb	r0, r0, r9
 8019d26:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8019d2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019d2e:	00c9      	lsls	r1, r1, #3
 8019d30:	fb0c 0c02 	mla	ip, ip, r2, r0
 8019d34:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019d38:	10d8      	asrs	r0, r3, #3
 8019d3a:	b2c9      	uxtb	r1, r1
 8019d3c:	00db      	lsls	r3, r3, #3
 8019d3e:	fa1f fc8c 	uxth.w	ip, ip
 8019d42:	fb1b fb09 	smulbb	fp, fp, r9
 8019d46:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019d4a:	b2db      	uxtb	r3, r3
 8019d4c:	fb11 f109 	smulbb	r1, r1, r9
 8019d50:	fb00 b002 	mla	r0, r0, r2, fp
 8019d54:	fb03 1302 	mla	r3, r3, r2, r1
 8019d58:	f10c 0b01 	add.w	fp, ip, #1
 8019d5c:	b29b      	uxth	r3, r3
 8019d5e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8019d62:	b280      	uxth	r0, r0
 8019d64:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8019d68:	f103 0c01 	add.w	ip, r3, #1
 8019d6c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019d70:	1c43      	adds	r3, r0, #1
 8019d72:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019d76:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019d7a:	0940      	lsrs	r0, r0, #5
 8019d7c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019d80:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019d84:	ea4c 0c00 	orr.w	ip, ip, r0
 8019d88:	f824 cb02 	strh.w	ip, [r4], #2
 8019d8c:	e7bf      	b.n	8019d0e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8019d8e:	f8be 3000 	ldrh.w	r3, [lr]
 8019d92:	eba3 0308 	sub.w	r3, r3, r8
 8019d96:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019d9a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019d9e:	eba3 0308 	sub.w	r3, r3, r8
 8019da2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019da6:	e7ae      	b.n	8019d06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8019da8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019dac:	f8d9 0000 	ldr.w	r0, [r9]
 8019db0:	42ac      	cmp	r4, r5
 8019db2:	6803      	ldr	r3, [r0, #0]
 8019db4:	d20e      	bcs.n	8019dd4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8019db6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8019dba:	4632      	mov	r2, r6
 8019dbc:	463b      	mov	r3, r7
 8019dbe:	4621      	mov	r1, r4
 8019dc0:	47c0      	blx	r8
 8019dc2:	f8ba 3000 	ldrh.w	r3, [sl]
 8019dc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019dca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019dce:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019dd2:	e7eb      	b.n	8019dac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8019dd4:	4b02      	ldr	r3, [pc, #8]	; (8019de0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8019dd6:	6818      	ldr	r0, [r3, #0]
 8019dd8:	6803      	ldr	r3, [r0, #0]
 8019dda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019ddc:	4798      	blx	r3
 8019dde:	e76c      	b.n	8019cba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8019de0:	200137bc 	.word	0x200137bc
 8019de4:	200137b6 	.word	0x200137b6

08019de8 <_ZN8touchgfx8LCD16bppD0Ev>:
 8019de8:	b510      	push	{r4, lr}
 8019dea:	2184      	movs	r1, #132	; 0x84
 8019dec:	4604      	mov	r4, r0
 8019dee:	f00c fd26 	bl	802683e <_ZdlPvj>
 8019df2:	4620      	mov	r0, r4
 8019df4:	bd10      	pop	{r4, pc}

08019df6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8019df6:	b510      	push	{r4, lr}
 8019df8:	2104      	movs	r1, #4
 8019dfa:	4604      	mov	r4, r0
 8019dfc:	f00c fd1f 	bl	802683e <_ZdlPvj>
 8019e00:	4620      	mov	r0, r4
 8019e02:	bd10      	pop	{r4, pc}

08019e04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8019e04:	b510      	push	{r4, lr}
 8019e06:	2104      	movs	r1, #4
 8019e08:	4604      	mov	r4, r0
 8019e0a:	f00c fd18 	bl	802683e <_ZdlPvj>
 8019e0e:	4620      	mov	r0, r4
 8019e10:	bd10      	pop	{r4, pc}

08019e12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8019e12:	b510      	push	{r4, lr}
 8019e14:	f640 0144 	movw	r1, #2116	; 0x844
 8019e18:	4604      	mov	r4, r0
 8019e1a:	f00c fd10 	bl	802683e <_ZdlPvj>
 8019e1e:	4620      	mov	r0, r4
 8019e20:	bd10      	pop	{r4, pc}

08019e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019e22:	b510      	push	{r4, lr}
 8019e24:	2104      	movs	r1, #4
 8019e26:	4604      	mov	r4, r0
 8019e28:	f00c fd09 	bl	802683e <_ZdlPvj>
 8019e2c:	4620      	mov	r0, r4
 8019e2e:	bd10      	pop	{r4, pc}

08019e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8019e30:	b510      	push	{r4, lr}
 8019e32:	2104      	movs	r1, #4
 8019e34:	4604      	mov	r4, r0
 8019e36:	f00c fd02 	bl	802683e <_ZdlPvj>
 8019e3a:	4620      	mov	r0, r4
 8019e3c:	bd10      	pop	{r4, pc}

08019e3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019e3e:	b510      	push	{r4, lr}
 8019e40:	2104      	movs	r1, #4
 8019e42:	4604      	mov	r4, r0
 8019e44:	f00c fcfb 	bl	802683e <_ZdlPvj>
 8019e48:	4620      	mov	r0, r4
 8019e4a:	bd10      	pop	{r4, pc}

08019e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019e4c:	b510      	push	{r4, lr}
 8019e4e:	2104      	movs	r1, #4
 8019e50:	4604      	mov	r4, r0
 8019e52:	f00c fcf4 	bl	802683e <_ZdlPvj>
 8019e56:	4620      	mov	r0, r4
 8019e58:	bd10      	pop	{r4, pc}

08019e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019e5a:	b510      	push	{r4, lr}
 8019e5c:	2104      	movs	r1, #4
 8019e5e:	4604      	mov	r4, r0
 8019e60:	f00c fced 	bl	802683e <_ZdlPvj>
 8019e64:	4620      	mov	r0, r4
 8019e66:	bd10      	pop	{r4, pc}

08019e68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8019e68:	b510      	push	{r4, lr}
 8019e6a:	2104      	movs	r1, #4
 8019e6c:	4604      	mov	r4, r0
 8019e6e:	f00c fce6 	bl	802683e <_ZdlPvj>
 8019e72:	4620      	mov	r0, r4
 8019e74:	bd10      	pop	{r4, pc}

08019e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019e76:	b510      	push	{r4, lr}
 8019e78:	2104      	movs	r1, #4
 8019e7a:	4604      	mov	r4, r0
 8019e7c:	f00c fcdf 	bl	802683e <_ZdlPvj>
 8019e80:	4620      	mov	r0, r4
 8019e82:	bd10      	pop	{r4, pc}

08019e84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8019e84:	b510      	push	{r4, lr}
 8019e86:	2104      	movs	r1, #4
 8019e88:	4604      	mov	r4, r0
 8019e8a:	f00c fcd8 	bl	802683e <_ZdlPvj>
 8019e8e:	4620      	mov	r0, r4
 8019e90:	bd10      	pop	{r4, pc}

08019e92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019e92:	b510      	push	{r4, lr}
 8019e94:	2104      	movs	r1, #4
 8019e96:	4604      	mov	r4, r0
 8019e98:	f00c fcd1 	bl	802683e <_ZdlPvj>
 8019e9c:	4620      	mov	r0, r4
 8019e9e:	bd10      	pop	{r4, pc}

08019ea0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019ea0:	b510      	push	{r4, lr}
 8019ea2:	2104      	movs	r1, #4
 8019ea4:	4604      	mov	r4, r0
 8019ea6:	f00c fcca 	bl	802683e <_ZdlPvj>
 8019eaa:	4620      	mov	r0, r4
 8019eac:	bd10      	pop	{r4, pc}

08019eae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019eae:	b510      	push	{r4, lr}
 8019eb0:	2104      	movs	r1, #4
 8019eb2:	4604      	mov	r4, r0
 8019eb4:	f00c fcc3 	bl	802683e <_ZdlPvj>
 8019eb8:	4620      	mov	r0, r4
 8019eba:	bd10      	pop	{r4, pc}

08019ebc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019ebc:	b510      	push	{r4, lr}
 8019ebe:	2104      	movs	r1, #4
 8019ec0:	4604      	mov	r4, r0
 8019ec2:	f00c fcbc 	bl	802683e <_ZdlPvj>
 8019ec6:	4620      	mov	r0, r4
 8019ec8:	bd10      	pop	{r4, pc}

08019eca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019eca:	b510      	push	{r4, lr}
 8019ecc:	2104      	movs	r1, #4
 8019ece:	4604      	mov	r4, r0
 8019ed0:	f00c fcb5 	bl	802683e <_ZdlPvj>
 8019ed4:	4620      	mov	r0, r4
 8019ed6:	bd10      	pop	{r4, pc}

08019ed8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8019ed8:	b510      	push	{r4, lr}
 8019eda:	2104      	movs	r1, #4
 8019edc:	4604      	mov	r4, r0
 8019ede:	f00c fcae 	bl	802683e <_ZdlPvj>
 8019ee2:	4620      	mov	r0, r4
 8019ee4:	bd10      	pop	{r4, pc}

08019ee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019ee6:	b510      	push	{r4, lr}
 8019ee8:	2104      	movs	r1, #4
 8019eea:	4604      	mov	r4, r0
 8019eec:	f00c fca7 	bl	802683e <_ZdlPvj>
 8019ef0:	4620      	mov	r0, r4
 8019ef2:	bd10      	pop	{r4, pc}

08019ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019ef4:	b510      	push	{r4, lr}
 8019ef6:	2104      	movs	r1, #4
 8019ef8:	4604      	mov	r4, r0
 8019efa:	f00c fca0 	bl	802683e <_ZdlPvj>
 8019efe:	4620      	mov	r0, r4
 8019f00:	bd10      	pop	{r4, pc}

08019f02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019f02:	b510      	push	{r4, lr}
 8019f04:	2104      	movs	r1, #4
 8019f06:	4604      	mov	r4, r0
 8019f08:	f00c fc99 	bl	802683e <_ZdlPvj>
 8019f0c:	4620      	mov	r0, r4
 8019f0e:	bd10      	pop	{r4, pc}

08019f10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019f10:	b510      	push	{r4, lr}
 8019f12:	2104      	movs	r1, #4
 8019f14:	4604      	mov	r4, r0
 8019f16:	f00c fc92 	bl	802683e <_ZdlPvj>
 8019f1a:	4620      	mov	r0, r4
 8019f1c:	bd10      	pop	{r4, pc}

08019f1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019f1e:	b510      	push	{r4, lr}
 8019f20:	2104      	movs	r1, #4
 8019f22:	4604      	mov	r4, r0
 8019f24:	f00c fc8b 	bl	802683e <_ZdlPvj>
 8019f28:	4620      	mov	r0, r4
 8019f2a:	bd10      	pop	{r4, pc}

08019f2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019f2c:	b510      	push	{r4, lr}
 8019f2e:	2104      	movs	r1, #4
 8019f30:	4604      	mov	r4, r0
 8019f32:	f00c fc84 	bl	802683e <_ZdlPvj>
 8019f36:	4620      	mov	r0, r4
 8019f38:	bd10      	pop	{r4, pc}

08019f3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019f3a:	b510      	push	{r4, lr}
 8019f3c:	2104      	movs	r1, #4
 8019f3e:	4604      	mov	r4, r0
 8019f40:	f00c fc7d 	bl	802683e <_ZdlPvj>
 8019f44:	4620      	mov	r0, r4
 8019f46:	bd10      	pop	{r4, pc}

08019f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019f48:	b510      	push	{r4, lr}
 8019f4a:	2104      	movs	r1, #4
 8019f4c:	4604      	mov	r4, r0
 8019f4e:	f00c fc76 	bl	802683e <_ZdlPvj>
 8019f52:	4620      	mov	r0, r4
 8019f54:	bd10      	pop	{r4, pc}

08019f56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019f56:	b510      	push	{r4, lr}
 8019f58:	2104      	movs	r1, #4
 8019f5a:	4604      	mov	r4, r0
 8019f5c:	f00c fc6f 	bl	802683e <_ZdlPvj>
 8019f60:	4620      	mov	r0, r4
 8019f62:	bd10      	pop	{r4, pc}

08019f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019f64:	b510      	push	{r4, lr}
 8019f66:	2104      	movs	r1, #4
 8019f68:	4604      	mov	r4, r0
 8019f6a:	f00c fc68 	bl	802683e <_ZdlPvj>
 8019f6e:	4620      	mov	r0, r4
 8019f70:	bd10      	pop	{r4, pc}

08019f72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8019f72:	b510      	push	{r4, lr}
 8019f74:	2104      	movs	r1, #4
 8019f76:	4604      	mov	r4, r0
 8019f78:	f00c fc61 	bl	802683e <_ZdlPvj>
 8019f7c:	4620      	mov	r0, r4
 8019f7e:	bd10      	pop	{r4, pc}

08019f80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8019f80:	b510      	push	{r4, lr}
 8019f82:	2104      	movs	r1, #4
 8019f84:	4604      	mov	r4, r0
 8019f86:	f00c fc5a 	bl	802683e <_ZdlPvj>
 8019f8a:	4620      	mov	r0, r4
 8019f8c:	bd10      	pop	{r4, pc}

08019f8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8019f8e:	b510      	push	{r4, lr}
 8019f90:	2104      	movs	r1, #4
 8019f92:	4604      	mov	r4, r0
 8019f94:	f00c fc53 	bl	802683e <_ZdlPvj>
 8019f98:	4620      	mov	r0, r4
 8019f9a:	bd10      	pop	{r4, pc}

08019f9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8019f9c:	b510      	push	{r4, lr}
 8019f9e:	2104      	movs	r1, #4
 8019fa0:	4604      	mov	r4, r0
 8019fa2:	f00c fc4c 	bl	802683e <_ZdlPvj>
 8019fa6:	4620      	mov	r0, r4
 8019fa8:	bd10      	pop	{r4, pc}
	...

08019fac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8019fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fb0:	b08f      	sub	sp, #60	; 0x3c
 8019fb2:	461c      	mov	r4, r3
 8019fb4:	9205      	str	r2, [sp, #20]
 8019fb6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019fba:	9100      	str	r1, [sp, #0]
 8019fbc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019fbe:	9201      	str	r2, [sp, #4]
 8019fc0:	2a00      	cmp	r2, #0
 8019fc2:	f000 8115 	beq.w	801a1f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8019fc6:	6820      	ldr	r0, [r4, #0]
 8019fc8:	6861      	ldr	r1, [r4, #4]
 8019fca:	aa0a      	add	r2, sp, #40	; 0x28
 8019fcc:	c203      	stmia	r2!, {r0, r1}
 8019fce:	6818      	ldr	r0, [r3, #0]
 8019fd0:	6859      	ldr	r1, [r3, #4]
 8019fd2:	aa0c      	add	r2, sp, #48	; 0x30
 8019fd4:	c203      	stmia	r2!, {r0, r1}
 8019fd6:	a80a      	add	r0, sp, #40	; 0x28
 8019fd8:	f7f9 fd1e 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019fdc:	4621      	mov	r1, r4
 8019fde:	a80c      	add	r0, sp, #48	; 0x30
 8019fe0:	f7f9 fd5e 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019fe4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8019fe8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8019fec:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8019ff0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8019ff4:	bfde      	ittt	le
 8019ff6:	b2b3      	uxthle	r3, r6
 8019ff8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8019ffc:	fb92 f3f3 	sdivle	r3, r2, r3
 801a000:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a004:	bfc8      	it	gt
 801a006:	2301      	movgt	r3, #1
 801a008:	fb92 f1f3 	sdiv	r1, r2, r3
 801a00c:	fa1f fc81 	uxth.w	ip, r1
 801a010:	fb0c 2413 	mls	r4, ip, r3, r2
 801a014:	fb14 f406 	smulbb	r4, r4, r6
 801a018:	441d      	add	r5, r3
 801a01a:	4404      	add	r4, r0
 801a01c:	4661      	mov	r1, ip
 801a01e:	3d01      	subs	r5, #1
 801a020:	b2a4      	uxth	r4, r4
 801a022:	fb95 f5f3 	sdiv	r5, r5, r3
 801a026:	b131      	cbz	r1, 801a036 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801a028:	9b05      	ldr	r3, [sp, #20]
 801a02a:	9900      	ldr	r1, [sp, #0]
 801a02c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a030:	ba1b      	rev	r3, r3
 801a032:	4419      	add	r1, r3
 801a034:	9100      	str	r1, [sp, #0]
 801a036:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801a03a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801a03e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801a042:	4418      	add	r0, r3
 801a044:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801a048:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801a04c:	441a      	add	r2, r3
 801a04e:	4b6a      	ldr	r3, [pc, #424]	; (801a1f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801a050:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801a054:	6818      	ldr	r0, [r3, #0]
 801a056:	6803      	ldr	r3, [r0, #0]
 801a058:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a05a:	4798      	blx	r3
 801a05c:	4967      	ldr	r1, [pc, #412]	; (801a1fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801a05e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a062:	880b      	ldrh	r3, [r1, #0]
 801a064:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801a068:	9109      	str	r1, [sp, #36]	; 0x24
 801a06a:	fb03 c202 	mla	r2, r3, r2, ip
 801a06e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a072:	4373      	muls	r3, r6
 801a074:	b2ad      	uxth	r5, r5
 801a076:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a07a:	00ad      	lsls	r5, r5, #2
 801a07c:	9306      	str	r3, [sp, #24]
 801a07e:	1d2b      	adds	r3, r5, #4
 801a080:	9307      	str	r3, [sp, #28]
 801a082:	9b01      	ldr	r3, [sp, #4]
 801a084:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801a088:	9103      	str	r1, [sp, #12]
 801a08a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801a08e:	2c00      	cmp	r4, #0
 801a090:	bf0c      	ite	eq
 801a092:	46c6      	moveq	lr, r8
 801a094:	f04f 0e00 	movne.w	lr, #0
 801a098:	2300      	movs	r3, #0
 801a09a:	b292      	uxth	r2, r2
 801a09c:	fa1f fe8e 	uxth.w	lr, lr
 801a0a0:	9302      	str	r3, [sp, #8]
 801a0a2:	9204      	str	r2, [sp, #16]
 801a0a4:	9a06      	ldr	r2, [sp, #24]
 801a0a6:	4282      	cmp	r2, r0
 801a0a8:	f240 809d 	bls.w	801a1e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801a0ac:	b963      	cbnz	r3, 801a0c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801a0ae:	9b00      	ldr	r3, [sp, #0]
 801a0b0:	781a      	ldrb	r2, [r3, #0]
 801a0b2:	0993      	lsrs	r3, r2, #6
 801a0b4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801a0b8:	9202      	str	r2, [sp, #8]
 801a0ba:	1e5a      	subs	r2, r3, #1
 801a0bc:	2a02      	cmp	r2, #2
 801a0be:	d815      	bhi.n	801a0ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801a0c0:	9a00      	ldr	r2, [sp, #0]
 801a0c2:	3201      	adds	r2, #1
 801a0c4:	9200      	str	r2, [sp, #0]
 801a0c6:	b29b      	uxth	r3, r3
 801a0c8:	b1b4      	cbz	r4, 801a0f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801a0ca:	429c      	cmp	r4, r3
 801a0cc:	bf95      	itete	ls
 801a0ce:	1b1c      	subls	r4, r3, r4
 801a0d0:	1ae4      	subhi	r4, r4, r3
 801a0d2:	fa1f fa84 	uxthls.w	sl, r4
 801a0d6:	b2a4      	uxthhi	r4, r4
 801a0d8:	bf87      	ittee	hi
 801a0da:	4671      	movhi	r1, lr
 801a0dc:	f04f 0a00 	movhi.w	sl, #0
 801a0e0:	fa1f f188 	uxthls.w	r1, r8
 801a0e4:	2400      	movls	r4, #0
 801a0e6:	4653      	mov	r3, sl
 801a0e8:	468e      	mov	lr, r1
 801a0ea:	e7db      	b.n	801a0a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801a0ec:	9a00      	ldr	r2, [sp, #0]
 801a0ee:	9b00      	ldr	r3, [sp, #0]
 801a0f0:	3202      	adds	r2, #2
 801a0f2:	785b      	ldrb	r3, [r3, #1]
 801a0f4:	9200      	str	r2, [sp, #0]
 801a0f6:	e7e7      	b.n	801a0c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801a0f8:	2202      	movs	r2, #2
 801a0fa:	4615      	mov	r5, r2
 801a0fc:	9907      	ldr	r1, [sp, #28]
 801a0fe:	9a02      	ldr	r2, [sp, #8]
 801a100:	fb15 1202 	smlabb	r2, r5, r2, r1
 801a104:	9905      	ldr	r1, [sp, #20]
 801a106:	4573      	cmp	r3, lr
 801a108:	f831 c002 	ldrh.w	ip, [r1, r2]
 801a10c:	9a01      	ldr	r2, [sp, #4]
 801a10e:	bf2b      	itete	cs
 801a110:	eba3 0a0e 	subcs.w	sl, r3, lr
 801a114:	ebae 0103 	subcc.w	r1, lr, r3
 801a118:	46f1      	movcs	r9, lr
 801a11a:	4699      	movcc	r9, r3
 801a11c:	bf27      	ittee	cs
 801a11e:	fa1f fa8a 	uxthcs.w	sl, sl
 801a122:	4621      	movcs	r1, r4
 801a124:	b289      	uxthcc	r1, r1
 801a126:	46a2      	movcc	sl, r4
 801a128:	2aff      	cmp	r2, #255	; 0xff
 801a12a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a12e:	d105      	bne.n	801a13c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801a130:	4481      	add	r9, r0
 801a132:	4581      	cmp	r9, r0
 801a134:	d045      	beq.n	801a1c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801a136:	f820 cb02 	strh.w	ip, [r0], #2
 801a13a:	e7fa      	b.n	801a132 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801a13c:	9d03      	ldr	r5, [sp, #12]
 801a13e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801a142:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a146:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a14a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a14e:	436a      	muls	r2, r5
 801a150:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a154:	fa5f fc8c 	uxtb.w	ip, ip
 801a158:	9208      	str	r2, [sp, #32]
 801a15a:	fb0b fb05 	mul.w	fp, fp, r5
 801a15e:	fb0c fc05 	mul.w	ip, ip, r5
 801a162:	4481      	add	r9, r0
 801a164:	4581      	cmp	r9, r0
 801a166:	d02c      	beq.n	801a1c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801a168:	8802      	ldrh	r2, [r0, #0]
 801a16a:	9d04      	ldr	r5, [sp, #16]
 801a16c:	9f04      	ldr	r7, [sp, #16]
 801a16e:	1216      	asrs	r6, r2, #8
 801a170:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a174:	fb16 f605 	smulbb	r6, r6, r5
 801a178:	9d08      	ldr	r5, [sp, #32]
 801a17a:	442e      	add	r6, r5
 801a17c:	10d5      	asrs	r5, r2, #3
 801a17e:	00d2      	lsls	r2, r2, #3
 801a180:	b2d2      	uxtb	r2, r2
 801a182:	fb12 f207 	smulbb	r2, r2, r7
 801a186:	b2b6      	uxth	r6, r6
 801a188:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a18c:	4462      	add	r2, ip
 801a18e:	fb15 f507 	smulbb	r5, r5, r7
 801a192:	b292      	uxth	r2, r2
 801a194:	1c77      	adds	r7, r6, #1
 801a196:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801a19a:	1c57      	adds	r7, r2, #1
 801a19c:	445d      	add	r5, fp
 801a19e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801a1a2:	b2ad      	uxth	r5, r5
 801a1a4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a1a8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a1ac:	4316      	orrs	r6, r2
 801a1ae:	1c6a      	adds	r2, r5, #1
 801a1b0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801a1b4:	096d      	lsrs	r5, r5, #5
 801a1b6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a1ba:	432e      	orrs	r6, r5
 801a1bc:	f820 6b02 	strh.w	r6, [r0], #2
 801a1c0:	e7d0      	b.n	801a164 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801a1c2:	4573      	cmp	r3, lr
 801a1c4:	d38f      	bcc.n	801a0e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801a1c6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801a1ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1cc:	fa1f f188 	uxth.w	r1, r8
 801a1d0:	1a64      	subs	r4, r4, r1
 801a1d2:	881b      	ldrh	r3, [r3, #0]
 801a1d4:	b2a4      	uxth	r4, r4
 801a1d6:	2c00      	cmp	r4, #0
 801a1d8:	eba3 0308 	sub.w	r3, r3, r8
 801a1dc:	bf18      	it	ne
 801a1de:	2100      	movne	r1, #0
 801a1e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a1e4:	e77f      	b.n	801a0e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801a1e6:	4b04      	ldr	r3, [pc, #16]	; (801a1f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801a1e8:	6818      	ldr	r0, [r3, #0]
 801a1ea:	6803      	ldr	r3, [r0, #0]
 801a1ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a1ee:	4798      	blx	r3
 801a1f0:	b00f      	add	sp, #60	; 0x3c
 801a1f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1f6:	bf00      	nop
 801a1f8:	200137bc 	.word	0x200137bc
 801a1fc:	200137b6 	.word	0x200137b6

0801a200 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801a200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a204:	b09f      	sub	sp, #124	; 0x7c
 801a206:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801a20a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801a20e:	9209      	str	r2, [sp, #36]	; 0x24
 801a210:	461d      	mov	r5, r3
 801a212:	4604      	mov	r4, r0
 801a214:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a216:	2a00      	cmp	r2, #0
 801a218:	f000 81eb 	beq.w	801a5f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801a21c:	6828      	ldr	r0, [r5, #0]
 801a21e:	6869      	ldr	r1, [r5, #4]
 801a220:	aa1a      	add	r2, sp, #104	; 0x68
 801a222:	c203      	stmia	r2!, {r0, r1}
 801a224:	6818      	ldr	r0, [r3, #0]
 801a226:	6859      	ldr	r1, [r3, #4]
 801a228:	aa1c      	add	r2, sp, #112	; 0x70
 801a22a:	c203      	stmia	r2!, {r0, r1}
 801a22c:	a81a      	add	r0, sp, #104	; 0x68
 801a22e:	f7f9 fbf3 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a232:	4629      	mov	r1, r5
 801a234:	a81c      	add	r0, sp, #112	; 0x70
 801a236:	f7f9 fc33 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a23a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801a23e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801a242:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801a246:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801a24a:	bfd7      	itett	le
 801a24c:	b29a      	uxthle	r2, r3
 801a24e:	2201      	movgt	r2, #1
 801a250:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801a254:	fb91 f2f2 	sdivle	r2, r1, r2
 801a258:	9202      	str	r2, [sp, #8]
 801a25a:	9802      	ldr	r0, [sp, #8]
 801a25c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801a260:	fb92 f0f0 	sdiv	r0, r2, r0
 801a264:	b280      	uxth	r0, r0
 801a266:	9010      	str	r0, [sp, #64]	; 0x40
 801a268:	9902      	ldr	r1, [sp, #8]
 801a26a:	9802      	ldr	r0, [sp, #8]
 801a26c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a26e:	4488      	add	r8, r1
 801a270:	fb05 2510 	mls	r5, r5, r0, r2
 801a274:	fb15 f503 	smulbb	r5, r5, r3
 801a278:	f108 38ff 	add.w	r8, r8, #4294967295
 801a27c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801a280:	fb98 f8f1 	sdiv	r8, r8, r1
 801a284:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801a288:	440d      	add	r5, r1
 801a28a:	4419      	add	r1, r3
 801a28c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801a290:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801a294:	441a      	add	r2, r3
 801a296:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801a29a:	9304      	str	r3, [sp, #16]
 801a29c:	4b95      	ldr	r3, [pc, #596]	; (801a4f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801a29e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801a2a2:	6818      	ldr	r0, [r3, #0]
 801a2a4:	6803      	ldr	r3, [r0, #0]
 801a2a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a2a8:	4798      	blx	r3
 801a2aa:	4b93      	ldr	r3, [pc, #588]	; (801a4f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801a2ac:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801a2b0:	881a      	ldrh	r2, [r3, #0]
 801a2b2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801a2b6:	9318      	str	r3, [sp, #96]	; 0x60
 801a2b8:	fb02 7101 	mla	r1, r2, r1, r7
 801a2bc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a2c0:	4356      	muls	r6, r2
 801a2c2:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801a2c6:	f108 0801 	add.w	r8, r8, #1
 801a2ca:	920a      	str	r2, [sp, #40]	; 0x28
 801a2cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a2ce:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801a2d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801a2d4:	fa1f f888 	uxth.w	r8, r8
 801a2d8:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801a2dc:	f108 0204 	add.w	r2, r8, #4
 801a2e0:	9211      	str	r2, [sp, #68]	; 0x44
 801a2e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a2e4:	4b85      	ldr	r3, [pc, #532]	; (801a4fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801a2e6:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801a2ea:	b2ad      	uxth	r5, r5
 801a2ec:	9215      	str	r2, [sp, #84]	; 0x54
 801a2ee:	2d00      	cmp	r5, #0
 801a2f0:	9a04      	ldr	r2, [sp, #16]
 801a2f2:	f04f 0100 	mov.w	r1, #0
 801a2f6:	bf18      	it	ne
 801a2f8:	2200      	movne	r2, #0
 801a2fa:	1b1b      	subs	r3, r3, r4
 801a2fc:	b292      	uxth	r2, r2
 801a2fe:	910d      	str	r1, [sp, #52]	; 0x34
 801a300:	9319      	str	r3, [sp, #100]	; 0x64
 801a302:	9910      	ldr	r1, [sp, #64]	; 0x40
 801a304:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a306:	fa11 f383 	uxtah	r3, r1, r3
 801a30a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801a30c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801a310:	3304      	adds	r3, #4
 801a312:	9306      	str	r3, [sp, #24]
 801a314:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a316:	4283      	cmp	r3, r0
 801a318:	f240 8166 	bls.w	801a5e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801a31c:	9902      	ldr	r1, [sp, #8]
 801a31e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801a322:	fbb5 f3f3 	udiv	r3, r5, r3
 801a326:	1acb      	subs	r3, r1, r3
 801a328:	b29b      	uxth	r3, r3
 801a32a:	9316      	str	r3, [sp, #88]	; 0x58
 801a32c:	9b06      	ldr	r3, [sp, #24]
 801a32e:	9e06      	ldr	r6, [sp, #24]
 801a330:	7859      	ldrb	r1, [r3, #1]
 801a332:	789b      	ldrb	r3, [r3, #2]
 801a334:	7836      	ldrb	r6, [r6, #0]
 801a336:	9612      	str	r6, [sp, #72]	; 0x48
 801a338:	021b      	lsls	r3, r3, #8
 801a33a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801a33e:	9906      	ldr	r1, [sp, #24]
 801a340:	78c9      	ldrb	r1, [r1, #3]
 801a342:	430b      	orrs	r3, r1
 801a344:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801a346:	3601      	adds	r6, #1
 801a348:	4419      	add	r1, r3
 801a34a:	9605      	str	r6, [sp, #20]
 801a34c:	1c4e      	adds	r6, r1, #1
 801a34e:	9603      	str	r6, [sp, #12]
 801a350:	7849      	ldrb	r1, [r1, #1]
 801a352:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a354:	0209      	lsls	r1, r1, #8
 801a356:	5cf3      	ldrb	r3, [r6, r3]
 801a358:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801a35c:	4319      	orrs	r1, r3
 801a35e:	b28b      	uxth	r3, r1
 801a360:	930c      	str	r3, [sp, #48]	; 0x30
 801a362:	2300      	movs	r3, #0
 801a364:	f04f 0a01 	mov.w	sl, #1
 801a368:	9307      	str	r3, [sp, #28]
 801a36a:	469c      	mov	ip, r3
 801a36c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801a370:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801a374:	46d3      	mov	fp, sl
 801a376:	4657      	mov	r7, sl
 801a378:	930e      	str	r3, [sp, #56]	; 0x38
 801a37a:	2d00      	cmp	r5, #0
 801a37c:	d07e      	beq.n	801a47c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801a37e:	42af      	cmp	r7, r5
 801a380:	d26e      	bcs.n	801a460 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801a382:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a384:	9201      	str	r2, [sp, #4]
 801a386:	1bed      	subs	r5, r5, r7
 801a388:	4283      	cmp	r3, r0
 801a38a:	b2ad      	uxth	r5, r5
 801a38c:	d802      	bhi.n	801a394 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801a38e:	e073      	b.n	801a478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801a390:	2b00      	cmp	r3, #0
 801a392:	d15f      	bne.n	801a454 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801a394:	9b03      	ldr	r3, [sp, #12]
 801a396:	785b      	ldrb	r3, [r3, #1]
 801a398:	f1cb 0207 	rsb	r2, fp, #7
 801a39c:	4093      	lsls	r3, r2
 801a39e:	005b      	lsls	r3, r3, #1
 801a3a0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801a3a4:	9b03      	ldr	r3, [sp, #12]
 801a3a6:	781b      	ldrb	r3, [r3, #0]
 801a3a8:	fa43 f30b 	asr.w	r3, r3, fp
 801a3ac:	b2db      	uxtb	r3, r3
 801a3ae:	4313      	orrs	r3, r2
 801a3b0:	f10b 0201 	add.w	r2, fp, #1
 801a3b4:	fa5f fb82 	uxtb.w	fp, r2
 801a3b8:	9a03      	ldr	r2, [sp, #12]
 801a3ba:	f1bb 0f08 	cmp.w	fp, #8
 801a3be:	bf15      	itete	ne
 801a3c0:	3201      	addne	r2, #1
 801a3c2:	3202      	addeq	r2, #2
 801a3c4:	9203      	strne	r2, [sp, #12]
 801a3c6:	9203      	streq	r2, [sp, #12]
 801a3c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a3ca:	b29f      	uxth	r7, r3
 801a3cc:	bf08      	it	eq
 801a3ce:	f04f 0b00 	moveq.w	fp, #0
 801a3d2:	42ba      	cmp	r2, r7
 801a3d4:	d309      	bcc.n	801a3ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801a3d6:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801a3da:	2301      	movs	r3, #1
 801a3dc:	9a05      	ldr	r2, [sp, #20]
 801a3de:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801a3e2:	d30e      	bcc.n	801a402 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801a3e4:	469a      	mov	sl, r3
 801a3e6:	2600      	movs	r6, #0
 801a3e8:	e035      	b.n	801a456 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801a3ea:	9b05      	ldr	r3, [sp, #20]
 801a3ec:	429f      	cmp	r7, r3
 801a3ee:	d318      	bcc.n	801a422 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801a3f0:	eb04 030a 	add.w	r3, r4, sl
 801a3f4:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801a3f8:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801a3fc:	f10a 0301 	add.w	r3, sl, #1
 801a400:	b29b      	uxth	r3, r3
 801a402:	9a05      	ldr	r2, [sp, #20]
 801a404:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801a408:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a40a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801a40e:	7116      	strb	r6, [r2, #4]
 801a410:	f10a 0601 	add.w	r6, sl, #1
 801a414:	80d1      	strh	r1, [r2, #6]
 801a416:	7156      	strb	r6, [r2, #5]
 801a418:	9a05      	ldr	r2, [sp, #20]
 801a41a:	3201      	adds	r2, #1
 801a41c:	b292      	uxth	r2, r2
 801a41e:	9205      	str	r2, [sp, #20]
 801a420:	e7e0      	b.n	801a3e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801a422:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801a426:	463a      	mov	r2, r7
 801a428:	795b      	ldrb	r3, [r3, #5]
 801a42a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801a42e:	4426      	add	r6, r4
 801a430:	9919      	ldr	r1, [sp, #100]	; 0x64
 801a432:	eb01 0c06 	add.w	ip, r1, r6
 801a436:	f1bc 0f00 	cmp.w	ip, #0
 801a43a:	dd07      	ble.n	801a44c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801a43c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801a440:	f892 c004 	ldrb.w	ip, [r2, #4]
 801a444:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801a448:	88d2      	ldrh	r2, [r2, #6]
 801a44a:	e7f1      	b.n	801a430 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801a44c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801a450:	b29b      	uxth	r3, r3
 801a452:	e7c3      	b.n	801a3dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801a454:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801a456:	970c      	str	r7, [sp, #48]	; 0x30
 801a458:	9a01      	ldr	r2, [sp, #4]
 801a45a:	46b4      	mov	ip, r6
 801a45c:	461f      	mov	r7, r3
 801a45e:	e78c      	b.n	801a37a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801a460:	1b7b      	subs	r3, r7, r5
 801a462:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a466:	9201      	str	r2, [sp, #4]
 801a468:	eb0c 0605 	add.w	r6, ip, r5
 801a46c:	b29b      	uxth	r3, r3
 801a46e:	b2b6      	uxth	r6, r6
 801a470:	2500      	movs	r5, #0
 801a472:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a474:	4282      	cmp	r2, r0
 801a476:	d88b      	bhi.n	801a390 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801a478:	9a01      	ldr	r2, [sp, #4]
 801a47a:	e74b      	b.n	801a314 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801a47c:	4297      	cmp	r7, r2
 801a47e:	d332      	bcc.n	801a4e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801a480:	1abb      	subs	r3, r7, r2
 801a482:	b29b      	uxth	r3, r3
 801a484:	9208      	str	r2, [sp, #32]
 801a486:	9501      	str	r5, [sp, #4]
 801a488:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a48a:	29ff      	cmp	r1, #255	; 0xff
 801a48c:	9908      	ldr	r1, [sp, #32]
 801a48e:	eb0c 0601 	add.w	r6, ip, r1
 801a492:	d135      	bne.n	801a500 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801a494:	f1a0 0e02 	sub.w	lr, r0, #2
 801a498:	b2b6      	uxth	r6, r6
 801a49a:	45b4      	cmp	ip, r6
 801a49c:	f040 808c 	bne.w	801a5b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801a4a0:	9908      	ldr	r1, [sp, #32]
 801a4a2:	4297      	cmp	r7, r2
 801a4a4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a4a8:	d3e2      	bcc.n	801a470 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801a4aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a4ac:	9904      	ldr	r1, [sp, #16]
 801a4ae:	8812      	ldrh	r2, [r2, #0]
 801a4b0:	1a52      	subs	r2, r2, r1
 801a4b2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a4b6:	9a07      	ldr	r2, [sp, #28]
 801a4b8:	9916      	ldr	r1, [sp, #88]	; 0x58
 801a4ba:	3201      	adds	r2, #1
 801a4bc:	428a      	cmp	r2, r1
 801a4be:	9207      	str	r2, [sp, #28]
 801a4c0:	f040 8087 	bne.w	801a5d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801a4c4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801a4c8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801a4cc:	9b04      	ldr	r3, [sp, #16]
 801a4ce:	1bed      	subs	r5, r5, r7
 801a4d0:	b2ad      	uxth	r5, r5
 801a4d2:	2d00      	cmp	r5, #0
 801a4d4:	bf08      	it	eq
 801a4d6:	461a      	moveq	r2, r3
 801a4d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a4da:	bf18      	it	ne
 801a4dc:	2200      	movne	r2, #0
 801a4de:	3301      	adds	r3, #1
 801a4e0:	930d      	str	r3, [sp, #52]	; 0x34
 801a4e2:	b292      	uxth	r2, r2
 801a4e4:	e70d      	b.n	801a302 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801a4e6:	1bd1      	subs	r1, r2, r7
 801a4e8:	b28b      	uxth	r3, r1
 801a4ea:	9301      	str	r3, [sp, #4]
 801a4ec:	9708      	str	r7, [sp, #32]
 801a4ee:	462b      	mov	r3, r5
 801a4f0:	e7ca      	b.n	801a488 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801a4f2:	bf00      	nop
 801a4f4:	200137bc 	.word	0x200137bc
 801a4f8:	200137b6 	.word	0x200137b6
 801a4fc:	fffff7fb 	.word	0xfffff7fb
 801a500:	b2b6      	uxth	r6, r6
 801a502:	900b      	str	r0, [sp, #44]	; 0x2c
 801a504:	45b4      	cmp	ip, r6
 801a506:	d0cb      	beq.n	801a4a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801a508:	f10c 0101 	add.w	r1, ip, #1
 801a50c:	44a4      	add	ip, r4
 801a50e:	9117      	str	r1, [sp, #92]	; 0x5c
 801a510:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801a514:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a516:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801a51a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a51c:	f8b1 c000 	ldrh.w	ip, [r1]
 801a520:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a522:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801a526:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a52a:	fb1e fe01 	smulbb	lr, lr, r1
 801a52e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801a532:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a534:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801a538:	fb08 e801 	mla	r8, r8, r1, lr
 801a53c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801a540:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a542:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a546:	fb19 f901 	smulbb	r9, r9, r1
 801a54a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801a54e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a550:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a554:	fb0e 9e01 	mla	lr, lr, r1, r9
 801a558:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a55c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a55e:	fa5f fc8c 	uxtb.w	ip, ip
 801a562:	fb1c fc01 	smulbb	ip, ip, r1
 801a566:	00ed      	lsls	r5, r5, #3
 801a568:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a56a:	b2ed      	uxtb	r5, r5
 801a56c:	fb05 c501 	mla	r5, r5, r1, ip
 801a570:	fa1f f888 	uxth.w	r8, r8
 801a574:	fa1f fe8e 	uxth.w	lr, lr
 801a578:	b2ad      	uxth	r5, r5
 801a57a:	f108 0c01 	add.w	ip, r8, #1
 801a57e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801a582:	f10e 0901 	add.w	r9, lr, #1
 801a586:	f105 0c01 	add.w	ip, r5, #1
 801a58a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801a58e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801a592:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a596:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801a59a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a59e:	ea4c 0808 	orr.w	r8, ip, r8
 801a5a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a5a4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801a5a8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a5ac:	ea48 0809 	orr.w	r8, r8, r9
 801a5b0:	f821 8b02 	strh.w	r8, [r1], #2
 801a5b4:	910b      	str	r1, [sp, #44]	; 0x2c
 801a5b6:	e7a5      	b.n	801a504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801a5b8:	f10c 0801 	add.w	r8, ip, #1
 801a5bc:	44a4      	add	ip, r4
 801a5be:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a5c0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801a5c4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801a5c8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801a5cc:	fa1f fc88 	uxth.w	ip, r8
 801a5d0:	e763      	b.n	801a49a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801a5d2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a5d6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801a5da:	1aad      	subs	r5, r5, r2
 801a5dc:	b2ad      	uxth	r5, r5
 801a5de:	2d00      	cmp	r5, #0
 801a5e0:	bf18      	it	ne
 801a5e2:	2200      	movne	r2, #0
 801a5e4:	9201      	str	r2, [sp, #4]
 801a5e6:	e744      	b.n	801a472 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801a5e8:	4b03      	ldr	r3, [pc, #12]	; (801a5f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801a5ea:	6818      	ldr	r0, [r3, #0]
 801a5ec:	6803      	ldr	r3, [r0, #0]
 801a5ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a5f0:	4798      	blx	r3
 801a5f2:	b01f      	add	sp, #124	; 0x7c
 801a5f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5f8:	200137bc 	.word	0x200137bc

0801a5fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801a5fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a600:	b08f      	sub	sp, #60	; 0x3c
 801a602:	461c      	mov	r4, r3
 801a604:	9203      	str	r2, [sp, #12]
 801a606:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a60a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a60c:	9202      	str	r2, [sp, #8]
 801a60e:	460f      	mov	r7, r1
 801a610:	2a00      	cmp	r2, #0
 801a612:	f000 8128 	beq.w	801a866 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801a616:	6820      	ldr	r0, [r4, #0]
 801a618:	6861      	ldr	r1, [r4, #4]
 801a61a:	aa0a      	add	r2, sp, #40	; 0x28
 801a61c:	c203      	stmia	r2!, {r0, r1}
 801a61e:	6818      	ldr	r0, [r3, #0]
 801a620:	6859      	ldr	r1, [r3, #4]
 801a622:	aa0c      	add	r2, sp, #48	; 0x30
 801a624:	c203      	stmia	r2!, {r0, r1}
 801a626:	a80a      	add	r0, sp, #40	; 0x28
 801a628:	f7f9 f9f6 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a62c:	4621      	mov	r1, r4
 801a62e:	a80c      	add	r0, sp, #48	; 0x30
 801a630:	f7f9 fa36 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a634:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801a638:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801a63c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801a640:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801a644:	bfde      	ittt	le
 801a646:	b2b3      	uxthle	r3, r6
 801a648:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801a64c:	fb92 f3f3 	sdivle	r3, r2, r3
 801a650:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a654:	bfc8      	it	gt
 801a656:	2301      	movgt	r3, #1
 801a658:	fb92 f1f3 	sdiv	r1, r2, r3
 801a65c:	fa1f fc81 	uxth.w	ip, r1
 801a660:	fb0c 2413 	mls	r4, ip, r3, r2
 801a664:	fb14 f406 	smulbb	r4, r4, r6
 801a668:	441d      	add	r5, r3
 801a66a:	4404      	add	r4, r0
 801a66c:	4661      	mov	r1, ip
 801a66e:	3d01      	subs	r5, #1
 801a670:	b2a4      	uxth	r4, r4
 801a672:	fb95 f5f3 	sdiv	r5, r5, r3
 801a676:	b121      	cbz	r1, 801a682 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801a678:	9b03      	ldr	r3, [sp, #12]
 801a67a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a67e:	ba1b      	rev	r3, r3
 801a680:	441f      	add	r7, r3
 801a682:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801a686:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a68a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801a68e:	4418      	add	r0, r3
 801a690:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801a694:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801a698:	441a      	add	r2, r3
 801a69a:	4b74      	ldr	r3, [pc, #464]	; (801a86c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801a69c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801a6a0:	6818      	ldr	r0, [r3, #0]
 801a6a2:	6803      	ldr	r3, [r0, #0]
 801a6a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a6a6:	4798      	blx	r3
 801a6a8:	4a71      	ldr	r2, [pc, #452]	; (801a870 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801a6aa:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801a6ae:	8813      	ldrh	r3, [r2, #0]
 801a6b0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801a6b4:	9209      	str	r2, [sp, #36]	; 0x24
 801a6b6:	fb03 c101 	mla	r1, r3, r1, ip
 801a6ba:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a6be:	4373      	muls	r3, r6
 801a6c0:	b2ad      	uxth	r5, r5
 801a6c2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a6c6:	00ad      	lsls	r5, r5, #2
 801a6c8:	2c00      	cmp	r4, #0
 801a6ca:	9304      	str	r3, [sp, #16]
 801a6cc:	f105 0304 	add.w	r3, r5, #4
 801a6d0:	9305      	str	r3, [sp, #20]
 801a6d2:	bf0c      	ite	eq
 801a6d4:	46c8      	moveq	r8, r9
 801a6d6:	f04f 0800 	movne.w	r8, #0
 801a6da:	2300      	movs	r3, #0
 801a6dc:	fa1f f888 	uxth.w	r8, r8
 801a6e0:	9301      	str	r3, [sp, #4]
 801a6e2:	9a04      	ldr	r2, [sp, #16]
 801a6e4:	4282      	cmp	r2, r0
 801a6e6:	f240 80b9 	bls.w	801a85c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801a6ea:	b95b      	cbnz	r3, 801a704 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801a6ec:	783a      	ldrb	r2, [r7, #0]
 801a6ee:	0993      	lsrs	r3, r2, #6
 801a6f0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801a6f4:	9201      	str	r2, [sp, #4]
 801a6f6:	1e5a      	subs	r2, r3, #1
 801a6f8:	2a02      	cmp	r2, #2
 801a6fa:	bf8d      	iteet	hi
 801a6fc:	787b      	ldrbhi	r3, [r7, #1]
 801a6fe:	3701      	addls	r7, #1
 801a700:	b29b      	uxthls	r3, r3
 801a702:	3702      	addhi	r7, #2
 801a704:	b184      	cbz	r4, 801a728 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801a706:	429c      	cmp	r4, r3
 801a708:	bf95      	itete	ls
 801a70a:	1b1c      	subls	r4, r3, r4
 801a70c:	1ae4      	subhi	r4, r4, r3
 801a70e:	fa1f fa84 	uxthls.w	sl, r4
 801a712:	b2a4      	uxthhi	r4, r4
 801a714:	bf87      	ittee	hi
 801a716:	46c4      	movhi	ip, r8
 801a718:	f04f 0a00 	movhi.w	sl, #0
 801a71c:	fa1f fc89 	uxthls.w	ip, r9
 801a720:	2400      	movls	r4, #0
 801a722:	4653      	mov	r3, sl
 801a724:	46e0      	mov	r8, ip
 801a726:	e7dc      	b.n	801a6e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801a728:	2204      	movs	r2, #4
 801a72a:	4615      	mov	r5, r2
 801a72c:	9905      	ldr	r1, [sp, #20]
 801a72e:	9a01      	ldr	r2, [sp, #4]
 801a730:	fb15 1202 	smlabb	r2, r5, r2, r1
 801a734:	9903      	ldr	r1, [sp, #12]
 801a736:	588a      	ldr	r2, [r1, r2]
 801a738:	4543      	cmp	r3, r8
 801a73a:	bf27      	ittee	cs
 801a73c:	eba3 0a08 	subcs.w	sl, r3, r8
 801a740:	46c6      	movcs	lr, r8
 801a742:	eba8 0c03 	subcc.w	ip, r8, r3
 801a746:	469e      	movcc	lr, r3
 801a748:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801a74c:	bf27      	ittee	cs
 801a74e:	fa1f fa8a 	uxthcs.w	sl, sl
 801a752:	46a4      	movcs	ip, r4
 801a754:	fa1f fc8c 	uxthcc.w	ip, ip
 801a758:	46a2      	movcc	sl, r4
 801a75a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801a75e:	2900      	cmp	r1, #0
 801a760:	d066      	beq.n	801a830 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801a762:	29ff      	cmp	r1, #255	; 0xff
 801a764:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801a768:	d114      	bne.n	801a794 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801a76a:	9d02      	ldr	r5, [sp, #8]
 801a76c:	2dff      	cmp	r5, #255	; 0xff
 801a76e:	d111      	bne.n	801a794 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801a770:	0951      	lsrs	r1, r2, #5
 801a772:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a776:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a77a:	f026 0607 	bic.w	r6, r6, #7
 801a77e:	430e      	orrs	r6, r1
 801a780:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a784:	4316      	orrs	r6, r2
 801a786:	b2b6      	uxth	r6, r6
 801a788:	4486      	add	lr, r0
 801a78a:	4586      	cmp	lr, r0
 801a78c:	d051      	beq.n	801a832 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801a78e:	f820 6b02 	strh.w	r6, [r0], #2
 801a792:	e7fa      	b.n	801a78a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801a794:	9d02      	ldr	r5, [sp, #8]
 801a796:	4369      	muls	r1, r5
 801a798:	1c4d      	adds	r5, r1, #1
 801a79a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801a79e:	122d      	asrs	r5, r5, #8
 801a7a0:	ea6f 0b05 	mvn.w	fp, r5
 801a7a4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801a7a8:	b2ad      	uxth	r5, r5
 801a7aa:	b2f6      	uxtb	r6, r6
 801a7ac:	b2d2      	uxtb	r2, r2
 801a7ae:	fb11 f105 	smulbb	r1, r1, r5
 801a7b2:	fb16 f605 	smulbb	r6, r6, r5
 801a7b6:	fb12 f205 	smulbb	r2, r2, r5
 801a7ba:	b289      	uxth	r1, r1
 801a7bc:	b2b6      	uxth	r6, r6
 801a7be:	b292      	uxth	r2, r2
 801a7c0:	9106      	str	r1, [sp, #24]
 801a7c2:	9607      	str	r6, [sp, #28]
 801a7c4:	9208      	str	r2, [sp, #32]
 801a7c6:	4486      	add	lr, r0
 801a7c8:	fa5f fb8b 	uxtb.w	fp, fp
 801a7cc:	4586      	cmp	lr, r0
 801a7ce:	d030      	beq.n	801a832 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801a7d0:	8802      	ldrh	r2, [r0, #0]
 801a7d2:	9906      	ldr	r1, [sp, #24]
 801a7d4:	1216      	asrs	r6, r2, #8
 801a7d6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a7da:	10d5      	asrs	r5, r2, #3
 801a7dc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a7e0:	fb06 160b 	mla	r6, r6, fp, r1
 801a7e4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a7e8:	9907      	ldr	r1, [sp, #28]
 801a7ea:	00d2      	lsls	r2, r2, #3
 801a7ec:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a7f0:	fb05 150b 	mla	r5, r5, fp, r1
 801a7f4:	b2d2      	uxtb	r2, r2
 801a7f6:	9908      	ldr	r1, [sp, #32]
 801a7f8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a7fc:	b2b6      	uxth	r6, r6
 801a7fe:	fb02 120b 	mla	r2, r2, fp, r1
 801a802:	b292      	uxth	r2, r2
 801a804:	1c71      	adds	r1, r6, #1
 801a806:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801a80a:	1c51      	adds	r1, r2, #1
 801a80c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a810:	b2ad      	uxth	r5, r5
 801a812:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a816:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a81a:	4316      	orrs	r6, r2
 801a81c:	1c6a      	adds	r2, r5, #1
 801a81e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801a822:	096d      	lsrs	r5, r5, #5
 801a824:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a828:	432e      	orrs	r6, r5
 801a82a:	f820 6b02 	strh.w	r6, [r0], #2
 801a82e:	e7cd      	b.n	801a7cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801a830:	4470      	add	r0, lr
 801a832:	4543      	cmp	r3, r8
 801a834:	f4ff af75 	bcc.w	801a722 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801a838:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801a83c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a83e:	fa1f fc89 	uxth.w	ip, r9
 801a842:	eba4 040c 	sub.w	r4, r4, ip
 801a846:	881b      	ldrh	r3, [r3, #0]
 801a848:	b2a4      	uxth	r4, r4
 801a84a:	2c00      	cmp	r4, #0
 801a84c:	eba3 0309 	sub.w	r3, r3, r9
 801a850:	bf18      	it	ne
 801a852:	f04f 0c00 	movne.w	ip, #0
 801a856:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a85a:	e762      	b.n	801a722 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801a85c:	4b03      	ldr	r3, [pc, #12]	; (801a86c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801a85e:	6818      	ldr	r0, [r3, #0]
 801a860:	6803      	ldr	r3, [r0, #0]
 801a862:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a864:	4798      	blx	r3
 801a866:	b00f      	add	sp, #60	; 0x3c
 801a868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a86c:	200137bc 	.word	0x200137bc
 801a870:	200137b6 	.word	0x200137b6

0801a874 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801a874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a878:	b093      	sub	sp, #76	; 0x4c
 801a87a:	461c      	mov	r4, r3
 801a87c:	9205      	str	r2, [sp, #20]
 801a87e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801a882:	9101      	str	r1, [sp, #4]
 801a884:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a886:	9202      	str	r2, [sp, #8]
 801a888:	2a00      	cmp	r2, #0
 801a88a:	f000 812c 	beq.w	801aae6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801a88e:	6820      	ldr	r0, [r4, #0]
 801a890:	6861      	ldr	r1, [r4, #4]
 801a892:	aa0e      	add	r2, sp, #56	; 0x38
 801a894:	c203      	stmia	r2!, {r0, r1}
 801a896:	6818      	ldr	r0, [r3, #0]
 801a898:	6859      	ldr	r1, [r3, #4]
 801a89a:	aa10      	add	r2, sp, #64	; 0x40
 801a89c:	c203      	stmia	r2!, {r0, r1}
 801a89e:	a80e      	add	r0, sp, #56	; 0x38
 801a8a0:	f7f9 f8ba 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a8a4:	4621      	mov	r1, r4
 801a8a6:	a810      	add	r0, sp, #64	; 0x40
 801a8a8:	f7f9 f8fa 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a8ac:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801a8b0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801a8b4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801a8b8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801a8bc:	bfde      	ittt	le
 801a8be:	b2b3      	uxthle	r3, r6
 801a8c0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801a8c4:	fb92 f3f3 	sdivle	r3, r2, r3
 801a8c8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801a8cc:	bfc8      	it	gt
 801a8ce:	2301      	movgt	r3, #1
 801a8d0:	fb92 f1f3 	sdiv	r1, r2, r3
 801a8d4:	fa1f fc81 	uxth.w	ip, r1
 801a8d8:	fb0c 2413 	mls	r4, ip, r3, r2
 801a8dc:	fb14 f406 	smulbb	r4, r4, r6
 801a8e0:	441d      	add	r5, r3
 801a8e2:	4404      	add	r4, r0
 801a8e4:	4661      	mov	r1, ip
 801a8e6:	3d01      	subs	r5, #1
 801a8e8:	b2a4      	uxth	r4, r4
 801a8ea:	fb95 f5f3 	sdiv	r5, r5, r3
 801a8ee:	b131      	cbz	r1, 801a8fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801a8f0:	9b05      	ldr	r3, [sp, #20]
 801a8f2:	9901      	ldr	r1, [sp, #4]
 801a8f4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a8f8:	ba1b      	rev	r3, r3
 801a8fa:	4419      	add	r1, r3
 801a8fc:	9101      	str	r1, [sp, #4]
 801a8fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801a902:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801a906:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801a90a:	4418      	add	r0, r3
 801a90c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801a910:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801a914:	441a      	add	r2, r3
 801a916:	4b75      	ldr	r3, [pc, #468]	; (801aaec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801a918:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801a91c:	6818      	ldr	r0, [r3, #0]
 801a91e:	6803      	ldr	r3, [r0, #0]
 801a920:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a922:	4798      	blx	r3
 801a924:	4972      	ldr	r1, [pc, #456]	; (801aaf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801a926:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801a92a:	880b      	ldrh	r3, [r1, #0]
 801a92c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801a930:	910d      	str	r1, [sp, #52]	; 0x34
 801a932:	fb03 c202 	mla	r2, r3, r2, ip
 801a936:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a93a:	4373      	muls	r3, r6
 801a93c:	b2ad      	uxth	r5, r5
 801a93e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a942:	00ad      	lsls	r5, r5, #2
 801a944:	9308      	str	r3, [sp, #32]
 801a946:	1d2b      	adds	r3, r5, #4
 801a948:	9309      	str	r3, [sp, #36]	; 0x24
 801a94a:	9b02      	ldr	r3, [sp, #8]
 801a94c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801a950:	9106      	str	r1, [sp, #24]
 801a952:	43da      	mvns	r2, r3
 801a954:	2c00      	cmp	r4, #0
 801a956:	bf0c      	ite	eq
 801a958:	46dc      	moveq	ip, fp
 801a95a:	f04f 0c00 	movne.w	ip, #0
 801a95e:	2300      	movs	r3, #0
 801a960:	b2d2      	uxtb	r2, r2
 801a962:	fa1f fc8c 	uxth.w	ip, ip
 801a966:	9303      	str	r3, [sp, #12]
 801a968:	9207      	str	r2, [sp, #28]
 801a96a:	9a08      	ldr	r2, [sp, #32]
 801a96c:	4282      	cmp	r2, r0
 801a96e:	f240 80b5 	bls.w	801aadc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801a972:	b963      	cbnz	r3, 801a98e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801a974:	9b01      	ldr	r3, [sp, #4]
 801a976:	781a      	ldrb	r2, [r3, #0]
 801a978:	0993      	lsrs	r3, r2, #6
 801a97a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801a97e:	9203      	str	r2, [sp, #12]
 801a980:	1e5a      	subs	r2, r3, #1
 801a982:	2a02      	cmp	r2, #2
 801a984:	d815      	bhi.n	801a9b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801a986:	9a01      	ldr	r2, [sp, #4]
 801a988:	3201      	adds	r2, #1
 801a98a:	9201      	str	r2, [sp, #4]
 801a98c:	b29b      	uxth	r3, r3
 801a98e:	b1b4      	cbz	r4, 801a9be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801a990:	429c      	cmp	r4, r3
 801a992:	bf95      	itete	ls
 801a994:	1b1c      	subls	r4, r3, r4
 801a996:	1ae4      	subhi	r4, r4, r3
 801a998:	fa1f f884 	uxthls.w	r8, r4
 801a99c:	b2a4      	uxthhi	r4, r4
 801a99e:	bf87      	ittee	hi
 801a9a0:	4666      	movhi	r6, ip
 801a9a2:	f04f 0800 	movhi.w	r8, #0
 801a9a6:	fa1f f68b 	uxthls.w	r6, fp
 801a9aa:	2400      	movls	r4, #0
 801a9ac:	4643      	mov	r3, r8
 801a9ae:	46b4      	mov	ip, r6
 801a9b0:	e7db      	b.n	801a96a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801a9b2:	9a01      	ldr	r2, [sp, #4]
 801a9b4:	9b01      	ldr	r3, [sp, #4]
 801a9b6:	3202      	adds	r2, #2
 801a9b8:	785b      	ldrb	r3, [r3, #1]
 801a9ba:	9201      	str	r2, [sp, #4]
 801a9bc:	e7e7      	b.n	801a98e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801a9be:	2203      	movs	r2, #3
 801a9c0:	4615      	mov	r5, r2
 801a9c2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a9c4:	9a03      	ldr	r2, [sp, #12]
 801a9c6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801a9ca:	9905      	ldr	r1, [sp, #20]
 801a9cc:	4563      	cmp	r3, ip
 801a9ce:	eb01 0502 	add.w	r5, r1, r2
 801a9d2:	9902      	ldr	r1, [sp, #8]
 801a9d4:	bf29      	itett	cs
 801a9d6:	eba3 080c 	subcs.w	r8, r3, ip
 801a9da:	ebac 0603 	subcc.w	r6, ip, r3
 801a9de:	fa1f f888 	uxthcs.w	r8, r8
 801a9e2:	46e1      	movcs	r9, ip
 801a9e4:	bf2f      	iteee	cs
 801a9e6:	4626      	movcs	r6, r4
 801a9e8:	b2b6      	uxthcc	r6, r6
 801a9ea:	4699      	movcc	r9, r3
 801a9ec:	46a0      	movcc	r8, r4
 801a9ee:	29ff      	cmp	r1, #255	; 0xff
 801a9f0:	d04a      	beq.n	801aa88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801a9f2:	9f06      	ldr	r7, [sp, #24]
 801a9f4:	78a9      	ldrb	r1, [r5, #2]
 801a9f6:	9004      	str	r0, [sp, #16]
 801a9f8:	4379      	muls	r1, r7
 801a9fa:	910a      	str	r1, [sp, #40]	; 0x28
 801a9fc:	7869      	ldrb	r1, [r5, #1]
 801a9fe:	4379      	muls	r1, r7
 801aa00:	910b      	str	r1, [sp, #44]	; 0x2c
 801aa02:	9905      	ldr	r1, [sp, #20]
 801aa04:	5c8a      	ldrb	r2, [r1, r2]
 801aa06:	437a      	muls	r2, r7
 801aa08:	920c      	str	r2, [sp, #48]	; 0x30
 801aa0a:	46ca      	mov	sl, r9
 801aa0c:	f1ba 0f00 	cmp.w	sl, #0
 801aa10:	d03d      	beq.n	801aa8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801aa12:	9a04      	ldr	r2, [sp, #16]
 801aa14:	9f07      	ldr	r7, [sp, #28]
 801aa16:	8812      	ldrh	r2, [r2, #0]
 801aa18:	1215      	asrs	r5, r2, #8
 801aa1a:	46be      	mov	lr, r7
 801aa1c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801aa20:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801aa22:	10d1      	asrs	r1, r2, #3
 801aa24:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801aa28:	fb05 750e 	mla	r5, r5, lr, r7
 801aa2c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801aa30:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801aa32:	00d2      	lsls	r2, r2, #3
 801aa34:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801aa38:	fb01 710e 	mla	r1, r1, lr, r7
 801aa3c:	b2d2      	uxtb	r2, r2
 801aa3e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801aa40:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801aa44:	b2ad      	uxth	r5, r5
 801aa46:	fb02 720e 	mla	r2, r2, lr, r7
 801aa4a:	b292      	uxth	r2, r2
 801aa4c:	f105 0e01 	add.w	lr, r5, #1
 801aa50:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801aa54:	f102 0e01 	add.w	lr, r2, #1
 801aa58:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801aa5c:	b289      	uxth	r1, r1
 801aa5e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aa62:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801aa66:	4315      	orrs	r5, r2
 801aa68:	1c4a      	adds	r2, r1, #1
 801aa6a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801aa6e:	0949      	lsrs	r1, r1, #5
 801aa70:	9a04      	ldr	r2, [sp, #16]
 801aa72:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801aa76:	430d      	orrs	r5, r1
 801aa78:	f822 5b02 	strh.w	r5, [r2], #2
 801aa7c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801aa80:	9204      	str	r2, [sp, #16]
 801aa82:	fa1f fa8a 	uxth.w	sl, sl
 801aa86:	e7c1      	b.n	801aa0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801aa88:	4649      	mov	r1, r9
 801aa8a:	4686      	mov	lr, r0
 801aa8c:	b999      	cbnz	r1, 801aab6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801aa8e:	4563      	cmp	r3, ip
 801aa90:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801aa94:	d38a      	bcc.n	801a9ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801aa96:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801aa9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aa9c:	fa1f f68b 	uxth.w	r6, fp
 801aaa0:	1ba4      	subs	r4, r4, r6
 801aaa2:	881b      	ldrh	r3, [r3, #0]
 801aaa4:	b2a4      	uxth	r4, r4
 801aaa6:	2c00      	cmp	r4, #0
 801aaa8:	eba3 030b 	sub.w	r3, r3, fp
 801aaac:	bf18      	it	ne
 801aaae:	2600      	movne	r6, #0
 801aab0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aab4:	e77a      	b.n	801a9ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801aab6:	78aa      	ldrb	r2, [r5, #2]
 801aab8:	4f0e      	ldr	r7, [pc, #56]	; (801aaf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801aaba:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801aabe:	786a      	ldrb	r2, [r5, #1]
 801aac0:	00d2      	lsls	r2, r2, #3
 801aac2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aac6:	ea4a 0202 	orr.w	r2, sl, r2
 801aaca:	f895 a000 	ldrb.w	sl, [r5]
 801aace:	3901      	subs	r1, #1
 801aad0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801aad4:	f82e 2b02 	strh.w	r2, [lr], #2
 801aad8:	b289      	uxth	r1, r1
 801aada:	e7d7      	b.n	801aa8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801aadc:	4b03      	ldr	r3, [pc, #12]	; (801aaec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801aade:	6818      	ldr	r0, [r3, #0]
 801aae0:	6803      	ldr	r3, [r0, #0]
 801aae2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aae4:	4798      	blx	r3
 801aae6:	b013      	add	sp, #76	; 0x4c
 801aae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aaec:	200137bc 	.word	0x200137bc
 801aaf0:	200137b6 	.word	0x200137b6
 801aaf4:	fffff800 	.word	0xfffff800

0801aaf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801aaf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aafc:	b09d      	sub	sp, #116	; 0x74
 801aafe:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801ab02:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801ab06:	920e      	str	r2, [sp, #56]	; 0x38
 801ab08:	461c      	mov	r4, r3
 801ab0a:	4683      	mov	fp, r0
 801ab0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ab0e:	2a00      	cmp	r2, #0
 801ab10:	f000 81e0 	beq.w	801aed4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801ab14:	6820      	ldr	r0, [r4, #0]
 801ab16:	6861      	ldr	r1, [r4, #4]
 801ab18:	aa18      	add	r2, sp, #96	; 0x60
 801ab1a:	c203      	stmia	r2!, {r0, r1}
 801ab1c:	6818      	ldr	r0, [r3, #0]
 801ab1e:	6859      	ldr	r1, [r3, #4]
 801ab20:	aa1a      	add	r2, sp, #104	; 0x68
 801ab22:	c203      	stmia	r2!, {r0, r1}
 801ab24:	a818      	add	r0, sp, #96	; 0x60
 801ab26:	f7f8 ff77 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ab2a:	4621      	mov	r1, r4
 801ab2c:	a81a      	add	r0, sp, #104	; 0x68
 801ab2e:	f7f8 ffb7 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ab32:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801ab36:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801ab3a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ab3e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ab42:	bfd7      	itett	le
 801ab44:	b29a      	uxthle	r2, r3
 801ab46:	2201      	movgt	r2, #1
 801ab48:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ab4c:	fb91 f2f2 	sdivle	r2, r1, r2
 801ab50:	9202      	str	r2, [sp, #8]
 801ab52:	9802      	ldr	r0, [sp, #8]
 801ab54:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801ab58:	fb92 f0f0 	sdiv	r0, r2, r0
 801ab5c:	b280      	uxth	r0, r0
 801ab5e:	900f      	str	r0, [sp, #60]	; 0x3c
 801ab60:	9902      	ldr	r1, [sp, #8]
 801ab62:	9802      	ldr	r0, [sp, #8]
 801ab64:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ab66:	440c      	add	r4, r1
 801ab68:	fb05 2510 	mls	r5, r5, r0, r2
 801ab6c:	fb15 f503 	smulbb	r5, r5, r3
 801ab70:	3c01      	subs	r4, #1
 801ab72:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801ab76:	fb94 f4f1 	sdiv	r4, r4, r1
 801ab7a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801ab7e:	440d      	add	r5, r1
 801ab80:	4419      	add	r1, r3
 801ab82:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801ab86:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801ab8a:	441a      	add	r2, r3
 801ab8c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ab90:	9306      	str	r3, [sp, #24]
 801ab92:	4bb3      	ldr	r3, [pc, #716]	; (801ae60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801ab94:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801ab98:	6818      	ldr	r0, [r3, #0]
 801ab9a:	6803      	ldr	r3, [r0, #0]
 801ab9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ab9e:	4798      	blx	r3
 801aba0:	4bb0      	ldr	r3, [pc, #704]	; (801ae64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801aba2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801aba6:	881a      	ldrh	r2, [r3, #0]
 801aba8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801abac:	9316      	str	r3, [sp, #88]	; 0x58
 801abae:	fb02 7101 	mla	r1, r2, r1, r7
 801abb2:	3401      	adds	r4, #1
 801abb4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801abb8:	b2a4      	uxth	r4, r4
 801abba:	4356      	muls	r6, r2
 801abbc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801abc0:	00a4      	lsls	r4, r4, #2
 801abc2:	920a      	str	r2, [sp, #40]	; 0x28
 801abc4:	1d22      	adds	r2, r4, #4
 801abc6:	b2ad      	uxth	r5, r5
 801abc8:	9213      	str	r2, [sp, #76]	; 0x4c
 801abca:	4ba7      	ldr	r3, [pc, #668]	; (801ae68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801abcc:	9a06      	ldr	r2, [sp, #24]
 801abce:	2d00      	cmp	r5, #0
 801abd0:	bf0c      	ite	eq
 801abd2:	4611      	moveq	r1, r2
 801abd4:	2100      	movne	r1, #0
 801abd6:	2200      	movs	r2, #0
 801abd8:	eba3 030b 	sub.w	r3, r3, fp
 801abdc:	b289      	uxth	r1, r1
 801abde:	920d      	str	r2, [sp, #52]	; 0x34
 801abe0:	9317      	str	r3, [sp, #92]	; 0x5c
 801abe2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801abe4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801abe6:	fa12 f383 	uxtah	r3, r2, r3
 801abea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801abec:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801abf0:	3304      	adds	r3, #4
 801abf2:	9308      	str	r3, [sp, #32]
 801abf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801abf6:	4543      	cmp	r3, r8
 801abf8:	f240 8167 	bls.w	801aeca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801abfc:	9a02      	ldr	r2, [sp, #8]
 801abfe:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801ac02:	fbb5 f3f3 	udiv	r3, r5, r3
 801ac06:	1ad3      	subs	r3, r2, r3
 801ac08:	b29b      	uxth	r3, r3
 801ac0a:	9314      	str	r3, [sp, #80]	; 0x50
 801ac0c:	9b08      	ldr	r3, [sp, #32]
 801ac0e:	9808      	ldr	r0, [sp, #32]
 801ac10:	785a      	ldrb	r2, [r3, #1]
 801ac12:	789b      	ldrb	r3, [r3, #2]
 801ac14:	7800      	ldrb	r0, [r0, #0]
 801ac16:	9010      	str	r0, [sp, #64]	; 0x40
 801ac18:	021b      	lsls	r3, r3, #8
 801ac1a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ac1e:	9a08      	ldr	r2, [sp, #32]
 801ac20:	78d2      	ldrb	r2, [r2, #3]
 801ac22:	4313      	orrs	r3, r2
 801ac24:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ac26:	3001      	adds	r0, #1
 801ac28:	441a      	add	r2, r3
 801ac2a:	9007      	str	r0, [sp, #28]
 801ac2c:	1c50      	adds	r0, r2, #1
 801ac2e:	9005      	str	r0, [sp, #20]
 801ac30:	7852      	ldrb	r2, [r2, #1]
 801ac32:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ac34:	0212      	lsls	r2, r2, #8
 801ac36:	5cc3      	ldrb	r3, [r0, r3]
 801ac38:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801ac3c:	431a      	orrs	r2, r3
 801ac3e:	b293      	uxth	r3, r2
 801ac40:	930b      	str	r3, [sp, #44]	; 0x2c
 801ac42:	2300      	movs	r3, #0
 801ac44:	9309      	str	r3, [sp, #36]	; 0x24
 801ac46:	2301      	movs	r3, #1
 801ac48:	9301      	str	r3, [sp, #4]
 801ac4a:	9304      	str	r3, [sp, #16]
 801ac4c:	2300      	movs	r3, #0
 801ac4e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801ac52:	9303      	str	r3, [sp, #12]
 801ac54:	f04f 0e01 	mov.w	lr, #1
 801ac58:	2d00      	cmp	r5, #0
 801ac5a:	d07c      	beq.n	801ad56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801ac5c:	45ae      	cmp	lr, r5
 801ac5e:	d26b      	bcs.n	801ad38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801ac60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ac62:	eba5 050e 	sub.w	r5, r5, lr
 801ac66:	4543      	cmp	r3, r8
 801ac68:	b2ad      	uxth	r5, r5
 801ac6a:	460c      	mov	r4, r1
 801ac6c:	d802      	bhi.n	801ac74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801ac6e:	e070      	b.n	801ad52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801ac70:	2b00      	cmp	r3, #0
 801ac72:	d15c      	bne.n	801ad2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ac74:	9b05      	ldr	r3, [sp, #20]
 801ac76:	9a04      	ldr	r2, [sp, #16]
 801ac78:	785b      	ldrb	r3, [r3, #1]
 801ac7a:	9904      	ldr	r1, [sp, #16]
 801ac7c:	f1c2 0207 	rsb	r2, r2, #7
 801ac80:	4093      	lsls	r3, r2
 801ac82:	005b      	lsls	r3, r3, #1
 801ac84:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801ac88:	9b05      	ldr	r3, [sp, #20]
 801ac8a:	781b      	ldrb	r3, [r3, #0]
 801ac8c:	410b      	asrs	r3, r1
 801ac8e:	3101      	adds	r1, #1
 801ac90:	b2c9      	uxtb	r1, r1
 801ac92:	2908      	cmp	r1, #8
 801ac94:	9104      	str	r1, [sp, #16]
 801ac96:	9905      	ldr	r1, [sp, #20]
 801ac98:	bf0a      	itet	eq
 801ac9a:	3102      	addeq	r1, #2
 801ac9c:	3101      	addne	r1, #1
 801ac9e:	9105      	streq	r1, [sp, #20]
 801aca0:	b2db      	uxtb	r3, r3
 801aca2:	bf0a      	itet	eq
 801aca4:	2100      	moveq	r1, #0
 801aca6:	9105      	strne	r1, [sp, #20]
 801aca8:	9104      	streq	r1, [sp, #16]
 801acaa:	4313      	orrs	r3, r2
 801acac:	9910      	ldr	r1, [sp, #64]	; 0x40
 801acae:	b29a      	uxth	r2, r3
 801acb0:	4291      	cmp	r1, r2
 801acb2:	d30a      	bcc.n	801acca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801acb4:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801acb8:	2301      	movs	r3, #1
 801acba:	9907      	ldr	r1, [sp, #28]
 801acbc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801acc0:	d30f      	bcc.n	801ace2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801acc2:	2100      	movs	r1, #0
 801acc4:	9301      	str	r3, [sp, #4]
 801acc6:	9103      	str	r1, [sp, #12]
 801acc8:	e032      	b.n	801ad30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801acca:	9b07      	ldr	r3, [sp, #28]
 801accc:	429a      	cmp	r2, r3
 801acce:	d318      	bcc.n	801ad02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801acd0:	9b01      	ldr	r3, [sp, #4]
 801acd2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801acd6:	445b      	add	r3, fp
 801acd8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801acdc:	9b01      	ldr	r3, [sp, #4]
 801acde:	3301      	adds	r3, #1
 801ace0:	b29b      	uxth	r3, r3
 801ace2:	9907      	ldr	r1, [sp, #28]
 801ace4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801ace8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801acec:	7108      	strb	r0, [r1, #4]
 801acee:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801acf0:	80c8      	strh	r0, [r1, #6]
 801acf2:	9801      	ldr	r0, [sp, #4]
 801acf4:	3001      	adds	r0, #1
 801acf6:	7148      	strb	r0, [r1, #5]
 801acf8:	9907      	ldr	r1, [sp, #28]
 801acfa:	3101      	adds	r1, #1
 801acfc:	b289      	uxth	r1, r1
 801acfe:	9107      	str	r1, [sp, #28]
 801ad00:	e7df      	b.n	801acc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801ad02:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801ad06:	4611      	mov	r1, r2
 801ad08:	795b      	ldrb	r3, [r3, #5]
 801ad0a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801ad0e:	4458      	add	r0, fp
 801ad10:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801ad12:	4406      	add	r6, r0
 801ad14:	2e00      	cmp	r6, #0
 801ad16:	dd06      	ble.n	801ad26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801ad18:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ad1c:	790e      	ldrb	r6, [r1, #4]
 801ad1e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801ad22:	88c9      	ldrh	r1, [r1, #6]
 801ad24:	e7f4      	b.n	801ad10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801ad26:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801ad2a:	b29b      	uxth	r3, r3
 801ad2c:	e7c5      	b.n	801acba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801ad2e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ad30:	920b      	str	r2, [sp, #44]	; 0x2c
 801ad32:	4621      	mov	r1, r4
 801ad34:	469e      	mov	lr, r3
 801ad36:	e78f      	b.n	801ac58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801ad38:	9a03      	ldr	r2, [sp, #12]
 801ad3a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ad3e:	442a      	add	r2, r5
 801ad40:	ebae 0305 	sub.w	r3, lr, r5
 801ad44:	b292      	uxth	r2, r2
 801ad46:	b29b      	uxth	r3, r3
 801ad48:	9203      	str	r2, [sp, #12]
 801ad4a:	2500      	movs	r5, #0
 801ad4c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ad4e:	4542      	cmp	r2, r8
 801ad50:	d88e      	bhi.n	801ac70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801ad52:	4621      	mov	r1, r4
 801ad54:	e74e      	b.n	801abf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801ad56:	458e      	cmp	lr, r1
 801ad58:	bf29      	itett	cs
 801ad5a:	ebae 0301 	subcs.w	r3, lr, r1
 801ad5e:	eba1 040e 	subcc.w	r4, r1, lr
 801ad62:	b29b      	uxthcs	r3, r3
 801ad64:	910c      	strcs	r1, [sp, #48]	; 0x30
 801ad66:	bf2f      	iteee	cs
 801ad68:	462c      	movcs	r4, r5
 801ad6a:	b2a4      	uxthcc	r4, r4
 801ad6c:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801ad70:	462b      	movcc	r3, r5
 801ad72:	f04f 0900 	mov.w	r9, #0
 801ad76:	9a03      	ldr	r2, [sp, #12]
 801ad78:	980c      	ldr	r0, [sp, #48]	; 0x30
 801ad7a:	444a      	add	r2, r9
 801ad7c:	4548      	cmp	r0, r9
 801ad7e:	b292      	uxth	r2, r2
 801ad80:	d074      	beq.n	801ae6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801ad82:	445a      	add	r2, fp
 801ad84:	2004      	movs	r0, #4
 801ad86:	4605      	mov	r5, r0
 801ad88:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801ad8c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ad8e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801ad92:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ad94:	5880      	ldr	r0, [r0, r2]
 801ad96:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801ad9a:	d014      	beq.n	801adc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ad9c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ada0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801ada4:	d112      	bne.n	801adcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801ada6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ada8:	2aff      	cmp	r2, #255	; 0xff
 801adaa:	d10f      	bne.n	801adcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801adac:	0942      	lsrs	r2, r0, #5
 801adae:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801adb2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801adb6:	f025 0507 	bic.w	r5, r5, #7
 801adba:	4315      	orrs	r5, r2
 801adbc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801adc0:	4305      	orrs	r5, r0
 801adc2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801adc6:	f109 0901 	add.w	r9, r9, #1
 801adca:	e7d4      	b.n	801ad76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801adcc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801add0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801add4:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801add8:	9215      	str	r2, [sp, #84]	; 0x54
 801adda:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801addc:	fb02 fa0a 	mul.w	sl, r2, sl
 801ade0:	f10a 0201 	add.w	r2, sl, #1
 801ade4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801ade8:	ea4f 272c 	mov.w	r7, ip, asr #8
 801adec:	1212      	asrs	r2, r2, #8
 801adee:	fa1f fa82 	uxth.w	sl, r2
 801adf2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801adf6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801adfa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801adfe:	43d2      	mvns	r2, r2
 801ae00:	b2d2      	uxtb	r2, r2
 801ae02:	fb16 f60a 	smulbb	r6, r6, sl
 801ae06:	fa5f fc8c 	uxtb.w	ip, ip
 801ae0a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ae0e:	b2c0      	uxtb	r0, r0
 801ae10:	fb07 6702 	mla	r7, r7, r2, r6
 801ae14:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801ae18:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801ae1a:	fb10 f00a 	smulbb	r0, r0, sl
 801ae1e:	fb0c 0002 	mla	r0, ip, r2, r0
 801ae22:	b2ed      	uxtb	r5, r5
 801ae24:	b2bf      	uxth	r7, r7
 801ae26:	fb15 f50a 	smulbb	r5, r5, sl
 801ae2a:	b280      	uxth	r0, r0
 801ae2c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ae30:	fb06 5602 	mla	r6, r6, r2, r5
 801ae34:	1c7a      	adds	r2, r7, #1
 801ae36:	1c45      	adds	r5, r0, #1
 801ae38:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ae3c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ae40:	b2b6      	uxth	r6, r6
 801ae42:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ae46:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ae4a:	432f      	orrs	r7, r5
 801ae4c:	1c75      	adds	r5, r6, #1
 801ae4e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ae52:	096d      	lsrs	r5, r5, #5
 801ae54:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ae58:	432f      	orrs	r7, r5
 801ae5a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801ae5e:	e7b2      	b.n	801adc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ae60:	200137bc 	.word	0x200137bc
 801ae64:	200137b6 	.word	0x200137b6
 801ae68:	fffff7fb 	.word	0xfffff7fb
 801ae6c:	9203      	str	r2, [sp, #12]
 801ae6e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ae70:	458e      	cmp	lr, r1
 801ae72:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ae76:	f4ff af68 	bcc.w	801ad4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801ae7a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801ae7c:	9906      	ldr	r1, [sp, #24]
 801ae7e:	8812      	ldrh	r2, [r2, #0]
 801ae80:	1a52      	subs	r2, r2, r1
 801ae82:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ae86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ae88:	9914      	ldr	r1, [sp, #80]	; 0x50
 801ae8a:	3201      	adds	r2, #1
 801ae8c:	428a      	cmp	r2, r1
 801ae8e:	9209      	str	r2, [sp, #36]	; 0x24
 801ae90:	d111      	bne.n	801aeb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801ae92:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801ae96:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801ae9a:	9b06      	ldr	r3, [sp, #24]
 801ae9c:	eba5 0509 	sub.w	r5, r5, r9
 801aea0:	b2ad      	uxth	r5, r5
 801aea2:	2d00      	cmp	r5, #0
 801aea4:	bf08      	it	eq
 801aea6:	4619      	moveq	r1, r3
 801aea8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aeaa:	bf18      	it	ne
 801aeac:	2100      	movne	r1, #0
 801aeae:	3301      	adds	r3, #1
 801aeb0:	930d      	str	r3, [sp, #52]	; 0x34
 801aeb2:	b289      	uxth	r1, r1
 801aeb4:	e695      	b.n	801abe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801aeb6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801aeba:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801aebe:	1b2d      	subs	r5, r5, r4
 801aec0:	b2ad      	uxth	r5, r5
 801aec2:	2d00      	cmp	r5, #0
 801aec4:	bf18      	it	ne
 801aec6:	2400      	movne	r4, #0
 801aec8:	e740      	b.n	801ad4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801aeca:	4b04      	ldr	r3, [pc, #16]	; (801aedc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801aecc:	6818      	ldr	r0, [r3, #0]
 801aece:	6803      	ldr	r3, [r0, #0]
 801aed0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aed2:	4798      	blx	r3
 801aed4:	b01d      	add	sp, #116	; 0x74
 801aed6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aeda:	bf00      	nop
 801aedc:	200137bc 	.word	0x200137bc

0801aee0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801aee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aee4:	b09f      	sub	sp, #124	; 0x7c
 801aee6:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801aeea:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801aeee:	920a      	str	r2, [sp, #40]	; 0x28
 801aef0:	461d      	mov	r5, r3
 801aef2:	4604      	mov	r4, r0
 801aef4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aef6:	2a00      	cmp	r2, #0
 801aef8:	f000 81fa 	beq.w	801b2f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801aefc:	6828      	ldr	r0, [r5, #0]
 801aefe:	6869      	ldr	r1, [r5, #4]
 801af00:	aa1a      	add	r2, sp, #104	; 0x68
 801af02:	c203      	stmia	r2!, {r0, r1}
 801af04:	6818      	ldr	r0, [r3, #0]
 801af06:	6859      	ldr	r1, [r3, #4]
 801af08:	aa1c      	add	r2, sp, #112	; 0x70
 801af0a:	c203      	stmia	r2!, {r0, r1}
 801af0c:	a81a      	add	r0, sp, #104	; 0x68
 801af0e:	f7f8 fd83 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801af12:	4629      	mov	r1, r5
 801af14:	a81c      	add	r0, sp, #112	; 0x70
 801af16:	f7f8 fdc3 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801af1a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801af1e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801af22:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801af26:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801af2a:	bfd7      	itett	le
 801af2c:	b29a      	uxthle	r2, r3
 801af2e:	2201      	movgt	r2, #1
 801af30:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801af34:	fb91 f2f2 	sdivle	r2, r1, r2
 801af38:	9201      	str	r2, [sp, #4]
 801af3a:	9801      	ldr	r0, [sp, #4]
 801af3c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801af40:	fb92 f0f0 	sdiv	r0, r2, r0
 801af44:	b280      	uxth	r0, r0
 801af46:	9010      	str	r0, [sp, #64]	; 0x40
 801af48:	9901      	ldr	r1, [sp, #4]
 801af4a:	9801      	ldr	r0, [sp, #4]
 801af4c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801af4e:	440e      	add	r6, r1
 801af50:	fb05 2510 	mls	r5, r5, r0, r2
 801af54:	fb15 f503 	smulbb	r5, r5, r3
 801af58:	3e01      	subs	r6, #1
 801af5a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801af5e:	fb96 f6f1 	sdiv	r6, r6, r1
 801af62:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801af66:	440d      	add	r5, r1
 801af68:	4419      	add	r1, r3
 801af6a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801af6e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801af72:	441a      	add	r2, r3
 801af74:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801af78:	9304      	str	r3, [sp, #16]
 801af7a:	4b96      	ldr	r3, [pc, #600]	; (801b1d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801af7c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801af80:	6818      	ldr	r0, [r3, #0]
 801af82:	6803      	ldr	r3, [r0, #0]
 801af84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801af86:	4798      	blx	r3
 801af88:	4b93      	ldr	r3, [pc, #588]	; (801b1d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801af8a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801af8e:	881a      	ldrh	r2, [r3, #0]
 801af90:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801af94:	9318      	str	r3, [sp, #96]	; 0x60
 801af96:	fb02 c101 	mla	r1, r2, r1, ip
 801af9a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801af9e:	4357      	muls	r7, r2
 801afa0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801afa4:	3601      	adds	r6, #1
 801afa6:	920b      	str	r2, [sp, #44]	; 0x2c
 801afa8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801afaa:	4b8c      	ldr	r3, [pc, #560]	; (801b1dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801afac:	b2b6      	uxth	r6, r6
 801afae:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801afb2:	1d32      	adds	r2, r6, #4
 801afb4:	9206      	str	r2, [sp, #24]
 801afb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801afb8:	43d2      	mvns	r2, r2
 801afba:	b2d2      	uxtb	r2, r2
 801afbc:	b2ad      	uxth	r5, r5
 801afbe:	9215      	str	r2, [sp, #84]	; 0x54
 801afc0:	9a04      	ldr	r2, [sp, #16]
 801afc2:	2d00      	cmp	r5, #0
 801afc4:	bf0c      	ite	eq
 801afc6:	4611      	moveq	r1, r2
 801afc8:	2100      	movne	r1, #0
 801afca:	2200      	movs	r2, #0
 801afcc:	1b1b      	subs	r3, r3, r4
 801afce:	b289      	uxth	r1, r1
 801afd0:	920d      	str	r2, [sp, #52]	; 0x34
 801afd2:	9319      	str	r3, [sp, #100]	; 0x64
 801afd4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801afd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801afd8:	fa12 f383 	uxtah	r3, r2, r3
 801afdc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801afde:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801afe2:	3304      	adds	r3, #4
 801afe4:	9307      	str	r3, [sp, #28]
 801afe6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801afe8:	455b      	cmp	r3, fp
 801afea:	f240 817c 	bls.w	801b2e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801afee:	9a01      	ldr	r2, [sp, #4]
 801aff0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801aff4:	fbb5 f3f3 	udiv	r3, r5, r3
 801aff8:	1ad3      	subs	r3, r2, r3
 801affa:	b29b      	uxth	r3, r3
 801affc:	9316      	str	r3, [sp, #88]	; 0x58
 801affe:	9b07      	ldr	r3, [sp, #28]
 801b000:	9807      	ldr	r0, [sp, #28]
 801b002:	785a      	ldrb	r2, [r3, #1]
 801b004:	789b      	ldrb	r3, [r3, #2]
 801b006:	7800      	ldrb	r0, [r0, #0]
 801b008:	9011      	str	r0, [sp, #68]	; 0x44
 801b00a:	021b      	lsls	r3, r3, #8
 801b00c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801b010:	9a07      	ldr	r2, [sp, #28]
 801b012:	78d2      	ldrb	r2, [r2, #3]
 801b014:	4313      	orrs	r3, r2
 801b016:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b018:	3001      	adds	r0, #1
 801b01a:	441a      	add	r2, r3
 801b01c:	9005      	str	r0, [sp, #20]
 801b01e:	1c50      	adds	r0, r2, #1
 801b020:	9003      	str	r0, [sp, #12]
 801b022:	7852      	ldrb	r2, [r2, #1]
 801b024:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b026:	0212      	lsls	r2, r2, #8
 801b028:	5cc3      	ldrb	r3, [r0, r3]
 801b02a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801b02e:	431a      	orrs	r2, r3
 801b030:	b293      	uxth	r3, r2
 801b032:	930c      	str	r3, [sp, #48]	; 0x30
 801b034:	2300      	movs	r3, #0
 801b036:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b03a:	9308      	str	r3, [sp, #32]
 801b03c:	461a      	mov	r2, r3
 801b03e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b042:	930e      	str	r3, [sp, #56]	; 0x38
 801b044:	f04f 0801 	mov.w	r8, #1
 801b048:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b04c:	f8cd 8008 	str.w	r8, [sp, #8]
 801b050:	46c4      	mov	ip, r8
 801b052:	930f      	str	r3, [sp, #60]	; 0x3c
 801b054:	2d00      	cmp	r5, #0
 801b056:	d07c      	beq.n	801b152 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801b058:	45ac      	cmp	ip, r5
 801b05a:	d26c      	bcs.n	801b136 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801b05c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b05e:	eba5 050c 	sub.w	r5, r5, ip
 801b062:	455b      	cmp	r3, fp
 801b064:	b2ad      	uxth	r5, r5
 801b066:	4608      	mov	r0, r1
 801b068:	d802      	bhi.n	801b070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801b06a:	e070      	b.n	801b14e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801b06c:	2b00      	cmp	r3, #0
 801b06e:	d15c      	bne.n	801b12a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801b070:	9b03      	ldr	r3, [sp, #12]
 801b072:	9a02      	ldr	r2, [sp, #8]
 801b074:	785b      	ldrb	r3, [r3, #1]
 801b076:	9902      	ldr	r1, [sp, #8]
 801b078:	f1c2 0207 	rsb	r2, r2, #7
 801b07c:	4093      	lsls	r3, r2
 801b07e:	005b      	lsls	r3, r3, #1
 801b080:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b084:	9b03      	ldr	r3, [sp, #12]
 801b086:	781b      	ldrb	r3, [r3, #0]
 801b088:	410b      	asrs	r3, r1
 801b08a:	3101      	adds	r1, #1
 801b08c:	b2c9      	uxtb	r1, r1
 801b08e:	2908      	cmp	r1, #8
 801b090:	9102      	str	r1, [sp, #8]
 801b092:	9903      	ldr	r1, [sp, #12]
 801b094:	bf0a      	itet	eq
 801b096:	3102      	addeq	r1, #2
 801b098:	3101      	addne	r1, #1
 801b09a:	9103      	streq	r1, [sp, #12]
 801b09c:	b2db      	uxtb	r3, r3
 801b09e:	bf0a      	itet	eq
 801b0a0:	2100      	moveq	r1, #0
 801b0a2:	9103      	strne	r1, [sp, #12]
 801b0a4:	9102      	streq	r1, [sp, #8]
 801b0a6:	4313      	orrs	r3, r2
 801b0a8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b0aa:	b29a      	uxth	r2, r3
 801b0ac:	4291      	cmp	r1, r2
 801b0ae:	d30a      	bcc.n	801b0c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801b0b0:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b0b4:	2301      	movs	r3, #1
 801b0b6:	9905      	ldr	r1, [sp, #20]
 801b0b8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801b0bc:	d30f      	bcc.n	801b0de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801b0be:	2100      	movs	r1, #0
 801b0c0:	4698      	mov	r8, r3
 801b0c2:	9100      	str	r1, [sp, #0]
 801b0c4:	e032      	b.n	801b12c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801b0c6:	9b05      	ldr	r3, [sp, #20]
 801b0c8:	429a      	cmp	r2, r3
 801b0ca:	d318      	bcc.n	801b0fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801b0cc:	eb04 0308 	add.w	r3, r4, r8
 801b0d0:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801b0d4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801b0d8:	f108 0301 	add.w	r3, r8, #1
 801b0dc:	b29b      	uxth	r3, r3
 801b0de:	9905      	ldr	r1, [sp, #20]
 801b0e0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b0e4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801b0e8:	710e      	strb	r6, [r1, #4]
 801b0ea:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801b0ec:	80ce      	strh	r6, [r1, #6]
 801b0ee:	f108 0601 	add.w	r6, r8, #1
 801b0f2:	714e      	strb	r6, [r1, #5]
 801b0f4:	9905      	ldr	r1, [sp, #20]
 801b0f6:	3101      	adds	r1, #1
 801b0f8:	b289      	uxth	r1, r1
 801b0fa:	9105      	str	r1, [sp, #20]
 801b0fc:	e7df      	b.n	801b0be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801b0fe:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801b102:	4611      	mov	r1, r2
 801b104:	795b      	ldrb	r3, [r3, #5]
 801b106:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b10a:	4426      	add	r6, r4
 801b10c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801b10e:	4437      	add	r7, r6
 801b110:	2f00      	cmp	r7, #0
 801b112:	dd06      	ble.n	801b122 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801b114:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801b118:	790f      	ldrb	r7, [r1, #4]
 801b11a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801b11e:	88c9      	ldrh	r1, [r1, #6]
 801b120:	e7f4      	b.n	801b10c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801b122:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b126:	b29b      	uxth	r3, r3
 801b128:	e7c5      	b.n	801b0b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801b12a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b12c:	920c      	str	r2, [sp, #48]	; 0x30
 801b12e:	4601      	mov	r1, r0
 801b130:	9a00      	ldr	r2, [sp, #0]
 801b132:	469c      	mov	ip, r3
 801b134:	e78e      	b.n	801b054 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801b136:	1957      	adds	r7, r2, r5
 801b138:	ebac 0305 	sub.w	r3, ip, r5
 801b13c:	b2ba      	uxth	r2, r7
 801b13e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801b142:	9200      	str	r2, [sp, #0]
 801b144:	b29b      	uxth	r3, r3
 801b146:	2500      	movs	r5, #0
 801b148:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b14a:	455a      	cmp	r2, fp
 801b14c:	d88e      	bhi.n	801b06c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801b14e:	4601      	mov	r1, r0
 801b150:	e749      	b.n	801afe6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801b152:	458c      	cmp	ip, r1
 801b154:	bf2c      	ite	cs
 801b156:	4628      	movcs	r0, r5
 801b158:	462b      	movcc	r3, r5
 801b15a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801b15c:	bf27      	ittee	cs
 801b15e:	9109      	strcs	r1, [sp, #36]	; 0x24
 801b160:	ebac 0301 	subcs.w	r3, ip, r1
 801b164:	eba1 000c 	subcc.w	r0, r1, ip
 801b168:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801b16c:	bf2c      	ite	cs
 801b16e:	b29b      	uxthcs	r3, r3
 801b170:	b280      	uxthcc	r0, r0
 801b172:	2dff      	cmp	r5, #255	; 0xff
 801b174:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b176:	eb02 0705 	add.w	r7, r2, r5
 801b17a:	b2bd      	uxth	r5, r7
 801b17c:	9500      	str	r5, [sp, #0]
 801b17e:	d12f      	bne.n	801b1e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801b180:	465e      	mov	r6, fp
 801b182:	9d00      	ldr	r5, [sp, #0]
 801b184:	42aa      	cmp	r2, r5
 801b186:	f040 8084 	bne.w	801b292 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801b18a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b18c:	458c      	cmp	ip, r1
 801b18e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801b192:	d3d8      	bcc.n	801b146 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801b194:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b196:	9904      	ldr	r1, [sp, #16]
 801b198:	8812      	ldrh	r2, [r2, #0]
 801b19a:	1a52      	subs	r2, r2, r1
 801b19c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801b1a0:	9a08      	ldr	r2, [sp, #32]
 801b1a2:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b1a4:	3201      	adds	r2, #1
 801b1a6:	428a      	cmp	r2, r1
 801b1a8:	9208      	str	r2, [sp, #32]
 801b1aa:	f040 8092 	bne.w	801b2d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b1ae:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b1b2:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801b1b6:	9b04      	ldr	r3, [sp, #16]
 801b1b8:	eba5 050c 	sub.w	r5, r5, ip
 801b1bc:	b2ad      	uxth	r5, r5
 801b1be:	2d00      	cmp	r5, #0
 801b1c0:	bf08      	it	eq
 801b1c2:	4619      	moveq	r1, r3
 801b1c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b1c6:	bf18      	it	ne
 801b1c8:	2100      	movne	r1, #0
 801b1ca:	3301      	adds	r3, #1
 801b1cc:	930d      	str	r3, [sp, #52]	; 0x34
 801b1ce:	b289      	uxth	r1, r1
 801b1d0:	e700      	b.n	801afd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801b1d2:	bf00      	nop
 801b1d4:	200137bc 	.word	0x200137bc
 801b1d8:	200137b6 	.word	0x200137b6
 801b1dc:	fffff7fb 	.word	0xfffff7fb
 801b1e0:	46d9      	mov	r9, fp
 801b1e2:	9d00      	ldr	r5, [sp, #0]
 801b1e4:	42aa      	cmp	r2, r5
 801b1e6:	d0d0      	beq.n	801b18a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801b1e8:	1c55      	adds	r5, r2, #1
 801b1ea:	4422      	add	r2, r4
 801b1ec:	9517      	str	r5, [sp, #92]	; 0x5c
 801b1ee:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801b1f2:	9a06      	ldr	r2, [sp, #24]
 801b1f4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b1f8:	4472      	add	r2, lr
 801b1fa:	9212      	str	r2, [sp, #72]	; 0x48
 801b1fc:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801b1fe:	f8b9 2000 	ldrh.w	r2, [r9]
 801b202:	f897 a002 	ldrb.w	sl, [r7, #2]
 801b206:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801b208:	1216      	asrs	r6, r2, #8
 801b20a:	fb1a fa07 	smulbb	sl, sl, r7
 801b20e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b212:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b214:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b218:	fb06 a607 	mla	r6, r6, r7, sl
 801b21c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801b21e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801b222:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801b224:	10d5      	asrs	r5, r2, #3
 801b226:	fb1a fa07 	smulbb	sl, sl, r7
 801b22a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b22e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b230:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b234:	fb05 a507 	mla	r5, r5, r7, sl
 801b238:	9f06      	ldr	r7, [sp, #24]
 801b23a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b23e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801b240:	00d2      	lsls	r2, r2, #3
 801b242:	fb1e fe07 	smulbb	lr, lr, r7
 801b246:	b2d2      	uxtb	r2, r2
 801b248:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b24a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b24e:	b2b6      	uxth	r6, r6
 801b250:	fb02 e207 	mla	r2, r2, r7, lr
 801b254:	b292      	uxth	r2, r2
 801b256:	b2ad      	uxth	r5, r5
 801b258:	f106 0a01 	add.w	sl, r6, #1
 801b25c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801b260:	f102 0e01 	add.w	lr, r2, #1
 801b264:	f105 0a01 	add.w	sl, r5, #1
 801b268:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801b26c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b270:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b274:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b278:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b27c:	ea4e 0606 	orr.w	r6, lr, r6
 801b280:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b284:	ea46 060a 	orr.w	r6, r6, sl
 801b288:	f829 6b02 	strh.w	r6, [r9], #2
 801b28c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801b290:	e7a7      	b.n	801b1e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801b292:	f102 0e01 	add.w	lr, r2, #1
 801b296:	4422      	add	r2, r4
 801b298:	9f06      	ldr	r7, [sp, #24]
 801b29a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801b29e:	9a06      	ldr	r2, [sp, #24]
 801b2a0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b2a4:	eb02 0a05 	add.w	sl, r2, r5
 801b2a8:	4a13      	ldr	r2, [pc, #76]	; (801b2f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801b2aa:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801b2ae:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801b2b2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b2b6:	00d2      	lsls	r2, r2, #3
 801b2b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b2bc:	ea49 0202 	orr.w	r2, r9, r2
 801b2c0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801b2c4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801b2c8:	f826 2b02 	strh.w	r2, [r6], #2
 801b2cc:	fa1f f28e 	uxth.w	r2, lr
 801b2d0:	e757      	b.n	801b182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801b2d2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801b2d6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b2da:	1a2d      	subs	r5, r5, r0
 801b2dc:	b2ad      	uxth	r5, r5
 801b2de:	2d00      	cmp	r5, #0
 801b2e0:	bf18      	it	ne
 801b2e2:	2000      	movne	r0, #0
 801b2e4:	e730      	b.n	801b148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801b2e6:	4b05      	ldr	r3, [pc, #20]	; (801b2fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801b2e8:	6818      	ldr	r0, [r3, #0]
 801b2ea:	6803      	ldr	r3, [r0, #0]
 801b2ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b2ee:	4798      	blx	r3
 801b2f0:	b01f      	add	sp, #124	; 0x7c
 801b2f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2f6:	bf00      	nop
 801b2f8:	fffff800 	.word	0xfffff800
 801b2fc:	200137bc 	.word	0x200137bc

0801b300 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801b300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b304:	b091      	sub	sp, #68	; 0x44
 801b306:	469b      	mov	fp, r3
 801b308:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801b30c:	4616      	mov	r6, r2
 801b30e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801b312:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b316:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b31a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801b31e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801b322:	4604      	mov	r4, r0
 801b324:	460d      	mov	r5, r1
 801b326:	4640      	mov	r0, r8
 801b328:	4659      	mov	r1, fp
 801b32a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801b32e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801b332:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801b336:	f7f3 fc11 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 801b33a:	4631      	mov	r1, r6
 801b33c:	4640      	mov	r0, r8
 801b33e:	f7f3 fc0d 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 801b342:	4b74      	ldr	r3, [pc, #464]	; (801b514 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801b344:	8818      	ldrh	r0, [r3, #0]
 801b346:	4b74      	ldr	r3, [pc, #464]	; (801b518 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801b348:	8819      	ldrh	r1, [r3, #0]
 801b34a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801b34e:	2b00      	cmp	r3, #0
 801b350:	b202      	sxth	r2, r0
 801b352:	b20e      	sxth	r6, r1
 801b354:	da07      	bge.n	801b366 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801b356:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801b35a:	4463      	add	r3, ip
 801b35c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801b360:	2300      	movs	r3, #0
 801b362:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801b366:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801b36a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801b36e:	1ad2      	subs	r2, r2, r3
 801b370:	4594      	cmp	ip, r2
 801b372:	bfc4      	itt	gt
 801b374:	1ac2      	subgt	r2, r0, r3
 801b376:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801b37a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b37e:	2a00      	cmp	r2, #0
 801b380:	da07      	bge.n	801b392 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801b382:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801b386:	4462      	add	r2, ip
 801b388:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801b38c:	2200      	movs	r2, #0
 801b38e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801b392:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801b396:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801b39a:	eba6 060a 	sub.w	r6, r6, sl
 801b39e:	42b2      	cmp	r2, r6
 801b3a0:	bfc4      	itt	gt
 801b3a2:	eba1 020a 	subgt.w	r2, r1, sl
 801b3a6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801b3aa:	4a5c      	ldr	r2, [pc, #368]	; (801b51c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801b3ac:	7812      	ldrb	r2, [r2, #0]
 801b3ae:	b9a2      	cbnz	r2, 801b3da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801b3b0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b3b4:	4286      	cmp	r6, r0
 801b3b6:	4640      	mov	r0, r8
 801b3b8:	9303      	str	r3, [sp, #12]
 801b3ba:	bf14      	ite	ne
 801b3bc:	2600      	movne	r6, #0
 801b3be:	2601      	moveq	r6, #1
 801b3c0:	f7f3 fc0f 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b3c4:	9b03      	ldr	r3, [sp, #12]
 801b3c6:	b160      	cbz	r0, 801b3e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801b3c8:	2300      	movs	r3, #0
 801b3ca:	8023      	strh	r3, [r4, #0]
 801b3cc:	8063      	strh	r3, [r4, #2]
 801b3ce:	80a3      	strh	r3, [r4, #4]
 801b3d0:	4620      	mov	r0, r4
 801b3d2:	80e3      	strh	r3, [r4, #6]
 801b3d4:	b011      	add	sp, #68	; 0x44
 801b3d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3da:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801b3de:	428e      	cmp	r6, r1
 801b3e0:	e7e9      	b.n	801b3b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801b3e2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801b3e6:	9205      	str	r2, [sp, #20]
 801b3e8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801b3ec:	9206      	str	r2, [sp, #24]
 801b3ee:	f8bb 2000 	ldrh.w	r2, [fp]
 801b3f2:	900e      	str	r0, [sp, #56]	; 0x38
 801b3f4:	1a9b      	subs	r3, r3, r2
 801b3f6:	b21b      	sxth	r3, r3
 801b3f8:	9303      	str	r3, [sp, #12]
 801b3fa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801b3fe:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801b402:	ebaa 0a03 	sub.w	sl, sl, r3
 801b406:	fa0f f38a 	sxth.w	r3, sl
 801b40a:	9304      	str	r3, [sp, #16]
 801b40c:	9b03      	ldr	r3, [sp, #12]
 801b40e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801b412:	9b04      	ldr	r3, [sp, #16]
 801b414:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801b418:	9b05      	ldr	r3, [sp, #20]
 801b41a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801b41e:	a90e      	add	r1, sp, #56	; 0x38
 801b420:	9b06      	ldr	r3, [sp, #24]
 801b422:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801b426:	a80c      	add	r0, sp, #48	; 0x30
 801b428:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801b42c:	f7f8 fb38 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b430:	4640      	mov	r0, r8
 801b432:	f7f8 faf1 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b436:	a80e      	add	r0, sp, #56	; 0x38
 801b438:	f7f8 faee 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b43c:	4b38      	ldr	r3, [pc, #224]	; (801b520 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801b43e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801b442:	881b      	ldrh	r3, [r3, #0]
 801b444:	9307      	str	r3, [sp, #28]
 801b446:	682b      	ldr	r3, [r5, #0]
 801b448:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801b524 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801b44c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b44e:	4628      	mov	r0, r5
 801b450:	4798      	blx	r3
 801b452:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801b456:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801b45a:	4681      	mov	r9, r0
 801b45c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801b460:	f8db 0000 	ldr.w	r0, [fp]
 801b464:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801b466:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b46a:	6803      	ldr	r3, [r0, #0]
 801b46c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b46e:	4798      	blx	r3
 801b470:	4607      	mov	r7, r0
 801b472:	f8db 0000 	ldr.w	r0, [fp]
 801b476:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801b47a:	6803      	ldr	r3, [r0, #0]
 801b47c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b480:	9109      	str	r1, [sp, #36]	; 0x24
 801b482:	9208      	str	r2, [sp, #32]
 801b484:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b486:	4798      	blx	r3
 801b488:	f010 0f01 	tst.w	r0, #1
 801b48c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b490:	d012      	beq.n	801b4b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801b492:	f8db 0000 	ldr.w	r0, [fp]
 801b496:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801b49a:	6803      	ldr	r3, [r0, #0]
 801b49c:	9200      	str	r2, [sp, #0]
 801b49e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801b4a0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801b4a4:	462b      	mov	r3, r5
 801b4a6:	47b0      	blx	r6
 801b4a8:	9b03      	ldr	r3, [sp, #12]
 801b4aa:	8023      	strh	r3, [r4, #0]
 801b4ac:	9b04      	ldr	r3, [sp, #16]
 801b4ae:	8063      	strh	r3, [r4, #2]
 801b4b0:	9b05      	ldr	r3, [sp, #20]
 801b4b2:	80a3      	strh	r3, [r4, #4]
 801b4b4:	9b06      	ldr	r3, [sp, #24]
 801b4b6:	e78b      	b.n	801b3d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801b4b8:	fb09 f202 	mul.w	r2, r9, r2
 801b4bc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801b4c0:	440f      	add	r7, r1
 801b4c2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801b4c6:	b166      	cbz	r6, 801b4e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801b4c8:	9a07      	ldr	r2, [sp, #28]
 801b4ca:	4592      	cmp	sl, r2
 801b4cc:	d109      	bne.n	801b4e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801b4ce:	f8db 0000 	ldr.w	r0, [fp]
 801b4d2:	6802      	ldr	r2, [r0, #0]
 801b4d4:	fb09 f303 	mul.w	r3, r9, r3
 801b4d8:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801b4da:	4629      	mov	r1, r5
 801b4dc:	463a      	mov	r2, r7
 801b4de:	47b0      	blx	r6
 801b4e0:	e7e2      	b.n	801b4a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801b4e2:	fb0a f303 	mul.w	r3, sl, r3
 801b4e6:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801b524 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801b4ea:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801b4ee:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801b4f2:	4545      	cmp	r5, r8
 801b4f4:	d2d8      	bcs.n	801b4a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801b4f6:	f8db 0000 	ldr.w	r0, [fp]
 801b4fa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801b4fe:	6802      	ldr	r2, [r0, #0]
 801b500:	4629      	mov	r1, r5
 801b502:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801b506:	005b      	lsls	r3, r3, #1
 801b508:	463a      	mov	r2, r7
 801b50a:	47d0      	blx	sl
 801b50c:	444f      	add	r7, r9
 801b50e:	4435      	add	r5, r6
 801b510:	e7ef      	b.n	801b4f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801b512:	bf00      	nop
 801b514:	200137b0 	.word	0x200137b0
 801b518:	200137b2 	.word	0x200137b2
 801b51c:	200137b4 	.word	0x200137b4
 801b520:	200137b6 	.word	0x200137b6
 801b524:	200137bc 	.word	0x200137bc

0801b528 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801b528:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b52a:	4606      	mov	r6, r0
 801b52c:	b087      	sub	sp, #28
 801b52e:	460c      	mov	r4, r1
 801b530:	4617      	mov	r7, r2
 801b532:	461d      	mov	r5, r3
 801b534:	b333      	cbz	r3, 801b584 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b536:	4608      	mov	r0, r1
 801b538:	f7f3 fb53 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b53c:	bb10      	cbnz	r0, 801b584 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b53e:	6820      	ldr	r0, [r4, #0]
 801b540:	6861      	ldr	r1, [r4, #4]
 801b542:	4c1c      	ldr	r4, [pc, #112]	; (801b5b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801b544:	ab04      	add	r3, sp, #16
 801b546:	c303      	stmia	r3!, {r0, r1}
 801b548:	a804      	add	r0, sp, #16
 801b54a:	f7f8 fa65 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b54e:	6820      	ldr	r0, [r4, #0]
 801b550:	6803      	ldr	r3, [r0, #0]
 801b552:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b554:	4798      	blx	r3
 801b556:	2dff      	cmp	r5, #255	; 0xff
 801b558:	d016      	beq.n	801b588 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801b55a:	f010 0f08 	tst.w	r0, #8
 801b55e:	6820      	ldr	r0, [r4, #0]
 801b560:	d015      	beq.n	801b58e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801b562:	2400      	movs	r4, #0
 801b564:	6801      	ldr	r1, [r0, #0]
 801b566:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801b56a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b56e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801b572:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801b576:	9401      	str	r4, [sp, #4]
 801b578:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801b57c:	9400      	str	r4, [sp, #0]
 801b57e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801b580:	4639      	mov	r1, r7
 801b582:	47a0      	blx	r4
 801b584:	b007      	add	sp, #28
 801b586:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b588:	f010 0f02 	tst.w	r0, #2
 801b58c:	e7e7      	b.n	801b55e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801b58e:	6803      	ldr	r3, [r0, #0]
 801b590:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b592:	4798      	blx	r3
 801b594:	4b08      	ldr	r3, [pc, #32]	; (801b5b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801b596:	881a      	ldrh	r2, [r3, #0]
 801b598:	6833      	ldr	r3, [r6, #0]
 801b59a:	e9cd 7500 	strd	r7, r5, [sp]
 801b59e:	4601      	mov	r1, r0
 801b5a0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801b5a2:	4630      	mov	r0, r6
 801b5a4:	ab04      	add	r3, sp, #16
 801b5a6:	47a8      	blx	r5
 801b5a8:	6820      	ldr	r0, [r4, #0]
 801b5aa:	6803      	ldr	r3, [r0, #0]
 801b5ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b5ae:	4798      	blx	r3
 801b5b0:	e7e8      	b.n	801b584 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b5b2:	bf00      	nop
 801b5b4:	200137bc 	.word	0x200137bc
 801b5b8:	200137b6 	.word	0x200137b6

0801b5bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801b5bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b5c0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801b5c4:	9e08      	ldr	r6, [sp, #32]
 801b5c6:	4688      	mov	r8, r1
 801b5c8:	4614      	mov	r4, r2
 801b5ca:	461d      	mov	r5, r3
 801b5cc:	2f00      	cmp	r7, #0
 801b5ce:	f000 80a9 	beq.w	801b724 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b5d2:	4618      	mov	r0, r3
 801b5d4:	f7f3 fb05 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b5d8:	2800      	cmp	r0, #0
 801b5da:	f040 80a3 	bne.w	801b724 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b5de:	f9b5 1000 	ldrsh.w	r1, [r5]
 801b5e2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801b5e6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801b5ea:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801b5ee:	fb04 1303 	mla	r3, r4, r3, r1
 801b5f2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801b5f6:	4365      	muls	r5, r4
 801b5f8:	2fff      	cmp	r7, #255	; 0xff
 801b5fa:	eba4 0200 	sub.w	r2, r4, r0
 801b5fe:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801b602:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801b606:	d04a      	beq.n	801b69e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801b608:	b2bc      	uxth	r4, r7
 801b60a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801b60e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801b612:	fa5f f788 	uxtb.w	r7, r8
 801b616:	b2f3      	uxtb	r3, r6
 801b618:	0040      	lsls	r0, r0, #1
 801b61a:	fb0e fe04 	mul.w	lr, lr, r4
 801b61e:	4367      	muls	r7, r4
 801b620:	4363      	muls	r3, r4
 801b622:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801b626:	fa1f fc8c 	uxth.w	ip, ip
 801b62a:	42a9      	cmp	r1, r5
 801b62c:	d27a      	bcs.n	801b724 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b62e:	eb01 0900 	add.w	r9, r1, r0
 801b632:	4549      	cmp	r1, r9
 801b634:	d231      	bcs.n	801b69a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801b636:	880a      	ldrh	r2, [r1, #0]
 801b638:	1214      	asrs	r4, r2, #8
 801b63a:	10d6      	asrs	r6, r2, #3
 801b63c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b640:	00d2      	lsls	r2, r2, #3
 801b642:	b2d2      	uxtb	r2, r2
 801b644:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801b648:	fb14 f40c 	smulbb	r4, r4, ip
 801b64c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b650:	4474      	add	r4, lr
 801b652:	fb12 f20c 	smulbb	r2, r2, ip
 801b656:	b2a4      	uxth	r4, r4
 801b658:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b65c:	441a      	add	r2, r3
 801b65e:	b292      	uxth	r2, r2
 801b660:	f104 0a01 	add.w	sl, r4, #1
 801b664:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801b668:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b66c:	fb16 f60c 	smulbb	r6, r6, ip
 801b670:	f102 0a01 	add.w	sl, r2, #1
 801b674:	443e      	add	r6, r7
 801b676:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801b67a:	b2b6      	uxth	r6, r6
 801b67c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b680:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b684:	4322      	orrs	r2, r4
 801b686:	1c74      	adds	r4, r6, #1
 801b688:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801b68c:	0976      	lsrs	r6, r6, #5
 801b68e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b692:	4332      	orrs	r2, r6
 801b694:	f821 2b02 	strh.w	r2, [r1], #2
 801b698:	e7cb      	b.n	801b632 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801b69a:	4441      	add	r1, r8
 801b69c:	e7c5      	b.n	801b62a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801b69e:	4f22      	ldr	r7, [pc, #136]	; (801b728 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801b6a0:	0973      	lsrs	r3, r6, #5
 801b6a2:	ea08 0707 	and.w	r7, r8, r7
 801b6a6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b6aa:	433b      	orrs	r3, r7
 801b6ac:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b6b0:	4333      	orrs	r3, r6
 801b6b2:	07e7      	lsls	r7, r4, #31
 801b6b4:	b29b      	uxth	r3, r3
 801b6b6:	d50b      	bpl.n	801b6d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801b6b8:	0040      	lsls	r0, r0, #1
 801b6ba:	0052      	lsls	r2, r2, #1
 801b6bc:	42a9      	cmp	r1, r5
 801b6be:	d231      	bcs.n	801b724 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b6c0:	180c      	adds	r4, r1, r0
 801b6c2:	42a1      	cmp	r1, r4
 801b6c4:	d202      	bcs.n	801b6cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801b6c6:	f821 3b02 	strh.w	r3, [r1], #2
 801b6ca:	e7fa      	b.n	801b6c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801b6cc:	4411      	add	r1, r2
 801b6ce:	e7f5      	b.n	801b6bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801b6d0:	078e      	lsls	r6, r1, #30
 801b6d2:	d008      	beq.n	801b6e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801b6d4:	0066      	lsls	r6, r4, #1
 801b6d6:	460a      	mov	r2, r1
 801b6d8:	42aa      	cmp	r2, r5
 801b6da:	d202      	bcs.n	801b6e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801b6dc:	8013      	strh	r3, [r2, #0]
 801b6de:	4432      	add	r2, r6
 801b6e0:	e7fa      	b.n	801b6d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801b6e2:	3102      	adds	r1, #2
 801b6e4:	3801      	subs	r0, #1
 801b6e6:	07c2      	lsls	r2, r0, #31
 801b6e8:	d50b      	bpl.n	801b702 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801b6ea:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801b6ee:	3a01      	subs	r2, #1
 801b6f0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801b6f4:	0066      	lsls	r6, r4, #1
 801b6f6:	42aa      	cmp	r2, r5
 801b6f8:	d202      	bcs.n	801b700 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801b6fa:	8013      	strh	r3, [r2, #0]
 801b6fc:	4432      	add	r2, r6
 801b6fe:	e7fa      	b.n	801b6f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801b700:	3801      	subs	r0, #1
 801b702:	b178      	cbz	r0, 801b724 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b704:	1040      	asrs	r0, r0, #1
 801b706:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801b70a:	0080      	lsls	r0, r0, #2
 801b70c:	0064      	lsls	r4, r4, #1
 801b70e:	42a9      	cmp	r1, r5
 801b710:	d208      	bcs.n	801b724 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b712:	180e      	adds	r6, r1, r0
 801b714:	460a      	mov	r2, r1
 801b716:	42b2      	cmp	r2, r6
 801b718:	d202      	bcs.n	801b720 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801b71a:	f842 3b04 	str.w	r3, [r2], #4
 801b71e:	e7fa      	b.n	801b716 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801b720:	4421      	add	r1, r4
 801b722:	e7f4      	b.n	801b70e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801b724:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b728:	00fff800 	.word	0x00fff800

0801b72c <_ZN8touchgfx8LCD16bppC1Ev>:
 801b72c:	2200      	movs	r2, #0
 801b72e:	4912      	ldr	r1, [pc, #72]	; (801b778 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801b730:	6042      	str	r2, [r0, #4]
 801b732:	6001      	str	r1, [r0, #0]
 801b734:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801b738:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801b73c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801b740:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801b744:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801b748:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801b74c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801b750:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801b754:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801b758:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801b75c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801b760:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801b764:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801b768:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801b76c:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801b770:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801b774:	4770      	bx	lr
 801b776:	bf00      	nop
 801b778:	0802bb54 	.word	0x0802bb54

0801b77c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801b77c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b780:	460d      	mov	r5, r1
 801b782:	b08d      	sub	sp, #52	; 0x34
 801b784:	4604      	mov	r4, r0
 801b786:	6808      	ldr	r0, [r1, #0]
 801b788:	6849      	ldr	r1, [r1, #4]
 801b78a:	4699      	mov	r9, r3
 801b78c:	ab08      	add	r3, sp, #32
 801b78e:	c303      	stmia	r3!, {r0, r1}
 801b790:	6810      	ldr	r0, [r2, #0]
 801b792:	6851      	ldr	r1, [r2, #4]
 801b794:	ab0a      	add	r3, sp, #40	; 0x28
 801b796:	c303      	stmia	r3!, {r0, r1}
 801b798:	a808      	add	r0, sp, #32
 801b79a:	f7f8 f93d 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b79e:	4629      	mov	r1, r5
 801b7a0:	a80a      	add	r0, sp, #40	; 0x28
 801b7a2:	f7f8 f97d 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b7a6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801b7aa:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801b7ae:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801b7b2:	4d63      	ldr	r5, [pc, #396]	; (801b940 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801b7b4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801b7b8:	6828      	ldr	r0, [r5, #0]
 801b7ba:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801b7be:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b7c2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801b7c6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801b7ca:	440a      	add	r2, r1
 801b7cc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801b7d0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801b7d4:	4413      	add	r3, r2
 801b7d6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801b7da:	6803      	ldr	r3, [r0, #0]
 801b7dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b7de:	4798      	blx	r3
 801b7e0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b7e4:	d119      	bne.n	801b81a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801b7e6:	f010 0f20 	tst.w	r0, #32
 801b7ea:	6828      	ldr	r0, [r5, #0]
 801b7ec:	d018      	beq.n	801b820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801b7ee:	2500      	movs	r5, #0
 801b7f0:	6801      	ldr	r1, [r0, #0]
 801b7f2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b7f6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801b7fa:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801b7fe:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801b802:	9502      	str	r5, [sp, #8]
 801b804:	b2b6      	uxth	r6, r6
 801b806:	fa1f f588 	uxth.w	r5, r8
 801b80a:	9601      	str	r6, [sp, #4]
 801b80c:	9500      	str	r5, [sp, #0]
 801b80e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801b810:	4621      	mov	r1, r4
 801b812:	47a8      	blx	r5
 801b814:	b00d      	add	sp, #52	; 0x34
 801b816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b81a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801b81e:	e7e4      	b.n	801b7ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801b820:	6803      	ldr	r3, [r0, #0]
 801b822:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b824:	4798      	blx	r3
 801b826:	4947      	ldr	r1, [pc, #284]	; (801b944 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801b828:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b82c:	880b      	ldrh	r3, [r1, #0]
 801b82e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801b832:	fb03 5202 	mla	r2, r3, r2, r5
 801b836:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b83a:	4373      	muls	r3, r6
 801b83c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b840:	9307      	str	r3, [sp, #28]
 801b842:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801b846:	9306      	str	r3, [sp, #24]
 801b848:	468a      	mov	sl, r1
 801b84a:	9b07      	ldr	r3, [sp, #28]
 801b84c:	4298      	cmp	r0, r3
 801b84e:	d270      	bcs.n	801b932 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801b850:	9b06      	ldr	r3, [sp, #24]
 801b852:	4621      	mov	r1, r4
 801b854:	eb00 0b03 	add.w	fp, r0, r3
 801b858:	4558      	cmp	r0, fp
 801b85a:	d25d      	bcs.n	801b918 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801b85c:	f851 4b04 	ldr.w	r4, [r1], #4
 801b860:	0e23      	lsrs	r3, r4, #24
 801b862:	d014      	beq.n	801b88e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801b864:	2bff      	cmp	r3, #255	; 0xff
 801b866:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801b86a:	d112      	bne.n	801b892 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801b86c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b870:	d10f      	bne.n	801b892 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801b872:	0963      	lsrs	r3, r4, #5
 801b874:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801b878:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b87c:	f02c 0c07 	bic.w	ip, ip, #7
 801b880:	ea43 0c0c 	orr.w	ip, r3, ip
 801b884:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b888:	ea4c 0404 	orr.w	r4, ip, r4
 801b88c:	8004      	strh	r4, [r0, #0]
 801b88e:	3002      	adds	r0, #2
 801b890:	e7e2      	b.n	801b858 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801b892:	fb09 f303 	mul.w	r3, r9, r3
 801b896:	8807      	ldrh	r7, [r0, #0]
 801b898:	1c5a      	adds	r2, r3, #1
 801b89a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801b89e:	1212      	asrs	r2, r2, #8
 801b8a0:	123e      	asrs	r6, r7, #8
 801b8a2:	b293      	uxth	r3, r2
 801b8a4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801b8a8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b8ac:	43d2      	mvns	r2, r2
 801b8ae:	b2d2      	uxtb	r2, r2
 801b8b0:	10fd      	asrs	r5, r7, #3
 801b8b2:	fb1e fe03 	smulbb	lr, lr, r3
 801b8b6:	00ff      	lsls	r7, r7, #3
 801b8b8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b8bc:	fb06 e602 	mla	r6, r6, r2, lr
 801b8c0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b8c4:	b2ff      	uxtb	r7, r7
 801b8c6:	fa5f fc8c 	uxtb.w	ip, ip
 801b8ca:	b2e4      	uxtb	r4, r4
 801b8cc:	b2b6      	uxth	r6, r6
 801b8ce:	fb1c fc03 	smulbb	ip, ip, r3
 801b8d2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b8d6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801b8da:	fb14 f403 	smulbb	r4, r4, r3
 801b8de:	fb05 c502 	mla	r5, r5, r2, ip
 801b8e2:	f106 0e01 	add.w	lr, r6, #1
 801b8e6:	fb07 4702 	mla	r7, r7, r2, r4
 801b8ea:	b2ad      	uxth	r5, r5
 801b8ec:	b2bf      	uxth	r7, r7
 801b8ee:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801b8f2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801b8f6:	f105 0c01 	add.w	ip, r5, #1
 801b8fa:	1c7e      	adds	r6, r7, #1
 801b8fc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b900:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b904:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b908:	096d      	lsrs	r5, r5, #5
 801b90a:	ea46 060e 	orr.w	r6, r6, lr
 801b90e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b912:	432e      	orrs	r6, r5
 801b914:	8006      	strh	r6, [r0, #0]
 801b916:	e7ba      	b.n	801b88e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801b918:	f8ba 3000 	ldrh.w	r3, [sl]
 801b91c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801b920:	eba3 0308 	sub.w	r3, r3, r8
 801b924:	eba4 0408 	sub.w	r4, r4, r8
 801b928:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b92c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801b930:	e78b      	b.n	801b84a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801b932:	4b03      	ldr	r3, [pc, #12]	; (801b940 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801b934:	6818      	ldr	r0, [r3, #0]
 801b936:	6803      	ldr	r3, [r0, #0]
 801b938:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b93a:	4798      	blx	r3
 801b93c:	e76a      	b.n	801b814 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801b93e:	bf00      	nop
 801b940:	200137bc 	.word	0x200137bc
 801b944:	200137b6 	.word	0x200137b6

0801b948 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801b948:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b94c:	460c      	mov	r4, r1
 801b94e:	b085      	sub	sp, #20
 801b950:	6810      	ldr	r0, [r2, #0]
 801b952:	6851      	ldr	r1, [r2, #4]
 801b954:	466d      	mov	r5, sp
 801b956:	c503      	stmia	r5!, {r0, r1}
 801b958:	6818      	ldr	r0, [r3, #0]
 801b95a:	6859      	ldr	r1, [r3, #4]
 801b95c:	4616      	mov	r6, r2
 801b95e:	c503      	stmia	r5!, {r0, r1}
 801b960:	4668      	mov	r0, sp
 801b962:	f7f8 f859 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b966:	4631      	mov	r1, r6
 801b968:	a802      	add	r0, sp, #8
 801b96a:	f7f8 f899 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b96e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801b972:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801b976:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b97a:	4d28      	ldr	r5, [pc, #160]	; (801ba1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801b97c:	4e28      	ldr	r6, [pc, #160]	; (801ba20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801b97e:	6828      	ldr	r0, [r5, #0]
 801b980:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801b984:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801b988:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b98c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801b990:	f8bd 1000 	ldrh.w	r1, [sp]
 801b994:	440a      	add	r2, r1
 801b996:	f8ad 2008 	strh.w	r2, [sp, #8]
 801b99a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b99e:	4413      	add	r3, r2
 801b9a0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b9a4:	6803      	ldr	r3, [r0, #0]
 801b9a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b9a8:	4798      	blx	r3
 801b9aa:	8833      	ldrh	r3, [r6, #0]
 801b9ac:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801b9b0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b9b4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801ba24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801b9b8:	fb03 1202 	mla	r2, r3, r2, r1
 801b9bc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b9c0:	fb08 f303 	mul.w	r3, r8, r3
 801b9c4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b9c8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801b9cc:	4298      	cmp	r0, r3
 801b9ce:	d21d      	bcs.n	801ba0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801b9d0:	eb00 080c 	add.w	r8, r0, ip
 801b9d4:	4540      	cmp	r0, r8
 801b9d6:	d20f      	bcs.n	801b9f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801b9d8:	f854 1b04 	ldr.w	r1, [r4], #4
 801b9dc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801b9e0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801b9e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b9e8:	ea42 0209 	orr.w	r2, r2, r9
 801b9ec:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801b9f0:	430a      	orrs	r2, r1
 801b9f2:	f820 2b02 	strh.w	r2, [r0], #2
 801b9f6:	e7ed      	b.n	801b9d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801b9f8:	8832      	ldrh	r2, [r6, #0]
 801b9fa:	1bd2      	subs	r2, r2, r7
 801b9fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ba00:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801ba04:	1bd2      	subs	r2, r2, r7
 801ba06:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801ba0a:	e7df      	b.n	801b9cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801ba0c:	6828      	ldr	r0, [r5, #0]
 801ba0e:	6803      	ldr	r3, [r0, #0]
 801ba10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ba12:	4798      	blx	r3
 801ba14:	b005      	add	sp, #20
 801ba16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ba1a:	bf00      	nop
 801ba1c:	200137bc 	.word	0x200137bc
 801ba20:	200137b6 	.word	0x200137b6
 801ba24:	fffff800 	.word	0xfffff800

0801ba28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801ba28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ba2c:	460e      	mov	r6, r1
 801ba2e:	b08e      	sub	sp, #56	; 0x38
 801ba30:	4604      	mov	r4, r0
 801ba32:	6808      	ldr	r0, [r1, #0]
 801ba34:	6849      	ldr	r1, [r1, #4]
 801ba36:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801bc10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801ba3a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801bc14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801ba3e:	461d      	mov	r5, r3
 801ba40:	ab0a      	add	r3, sp, #40	; 0x28
 801ba42:	c303      	stmia	r3!, {r0, r1}
 801ba44:	6810      	ldr	r0, [r2, #0]
 801ba46:	6851      	ldr	r1, [r2, #4]
 801ba48:	ab0c      	add	r3, sp, #48	; 0x30
 801ba4a:	c303      	stmia	r3!, {r0, r1}
 801ba4c:	a80a      	add	r0, sp, #40	; 0x28
 801ba4e:	f7f7 ffe3 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ba52:	4631      	mov	r1, r6
 801ba54:	a80c      	add	r0, sp, #48	; 0x30
 801ba56:	f7f8 f823 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ba5a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801ba5e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801ba62:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ba66:	f8d8 0000 	ldr.w	r0, [r8]
 801ba6a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801ba6e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ba72:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ba76:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ba7a:	440c      	add	r4, r1
 801ba7c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801ba80:	440a      	add	r2, r1
 801ba82:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801ba86:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801ba8a:	4413      	add	r3, r2
 801ba8c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ba90:	6803      	ldr	r3, [r0, #0]
 801ba92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ba94:	4798      	blx	r3
 801ba96:	2dff      	cmp	r5, #255	; 0xff
 801ba98:	d124      	bne.n	801bae4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801ba9a:	f010 0f01 	tst.w	r0, #1
 801ba9e:	f8d8 0000 	ldr.w	r0, [r8]
 801baa2:	d022      	beq.n	801baea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801baa4:	2100      	movs	r1, #0
 801baa6:	f8d0 c000 	ldr.w	ip, [r0]
 801baaa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801baae:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801bab2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801bab6:	f04f 0e01 	mov.w	lr, #1
 801baba:	f8cd e018 	str.w	lr, [sp, #24]
 801babe:	f8b9 e000 	ldrh.w	lr, [r9]
 801bac2:	9503      	str	r5, [sp, #12]
 801bac4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801bac8:	b2b6      	uxth	r6, r6
 801baca:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801bace:	9102      	str	r1, [sp, #8]
 801bad0:	b2bf      	uxth	r7, r7
 801bad2:	9601      	str	r6, [sp, #4]
 801bad4:	9700      	str	r7, [sp, #0]
 801bad6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801bada:	4621      	mov	r1, r4
 801badc:	47a8      	blx	r5
 801bade:	b00e      	add	sp, #56	; 0x38
 801bae0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bae4:	f010 0f04 	tst.w	r0, #4
 801bae8:	e7d9      	b.n	801ba9e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801baea:	6803      	ldr	r3, [r0, #0]
 801baec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801baee:	4798      	blx	r3
 801baf0:	f8b9 3000 	ldrh.w	r3, [r9]
 801baf4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801baf8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801bafc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801bb00:	fb03 1202 	mla	r2, r3, r2, r1
 801bb04:	ebac 0c07 	sub.w	ip, ip, r7
 801bb08:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bb0c:	435e      	muls	r6, r3
 801bb0e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801bb12:	2dff      	cmp	r5, #255	; 0xff
 801bb14:	eba3 0707 	sub.w	r7, r3, r7
 801bb18:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801bb1c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801bb20:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801bb24:	d049      	beq.n	801bbba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801bb26:	43eb      	mvns	r3, r5
 801bb28:	fa1f f985 	uxth.w	r9, r5
 801bb2c:	b2db      	uxtb	r3, r3
 801bb2e:	42b0      	cmp	r0, r6
 801bb30:	d266      	bcs.n	801bc00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801bb32:	eb00 0a0e 	add.w	sl, r0, lr
 801bb36:	4550      	cmp	r0, sl
 801bb38:	4621      	mov	r1, r4
 801bb3a:	f104 0403 	add.w	r4, r4, #3
 801bb3e:	d25b      	bcs.n	801bbf8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801bb40:	8802      	ldrh	r2, [r0, #0]
 801bb42:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801bb46:	ea4f 2822 	mov.w	r8, r2, asr #8
 801bb4a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801bb4e:	fb11 f109 	smulbb	r1, r1, r9
 801bb52:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801bb56:	10d5      	asrs	r5, r2, #3
 801bb58:	fb08 1803 	mla	r8, r8, r3, r1
 801bb5c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801bb60:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bb64:	fb11 f109 	smulbb	r1, r1, r9
 801bb68:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bb6c:	fb05 1503 	mla	r5, r5, r3, r1
 801bb70:	00d2      	lsls	r2, r2, #3
 801bb72:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801bb76:	b2d2      	uxtb	r2, r2
 801bb78:	fb11 f109 	smulbb	r1, r1, r9
 801bb7c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bb80:	fa1f f888 	uxth.w	r8, r8
 801bb84:	fb02 1203 	mla	r2, r2, r3, r1
 801bb88:	b292      	uxth	r2, r2
 801bb8a:	f108 0101 	add.w	r1, r8, #1
 801bb8e:	b2ad      	uxth	r5, r5
 801bb90:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801bb94:	1c51      	adds	r1, r2, #1
 801bb96:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bb9a:	1c69      	adds	r1, r5, #1
 801bb9c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801bba0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801bba4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bba8:	096d      	lsrs	r5, r5, #5
 801bbaa:	ea42 0208 	orr.w	r2, r2, r8
 801bbae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bbb2:	432a      	orrs	r2, r5
 801bbb4:	f820 2b02 	strh.w	r2, [r0], #2
 801bbb8:	e7bd      	b.n	801bb36 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801bbba:	4a14      	ldr	r2, [pc, #80]	; (801bc0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801bbbc:	42b0      	cmp	r0, r6
 801bbbe:	d21f      	bcs.n	801bc00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801bbc0:	eb00 050e 	add.w	r5, r0, lr
 801bbc4:	42a8      	cmp	r0, r5
 801bbc6:	4621      	mov	r1, r4
 801bbc8:	f104 0403 	add.w	r4, r4, #3
 801bbcc:	d210      	bcs.n	801bbf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801bbce:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801bbd2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801bbd6:	00db      	lsls	r3, r3, #3
 801bbd8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801bbdc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bbe0:	430b      	orrs	r3, r1
 801bbe2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801bbe6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801bbea:	f820 3b02 	strh.w	r3, [r0], #2
 801bbee:	e7e9      	b.n	801bbc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801bbf0:	4438      	add	r0, r7
 801bbf2:	eb01 040c 	add.w	r4, r1, ip
 801bbf6:	e7e1      	b.n	801bbbc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801bbf8:	4438      	add	r0, r7
 801bbfa:	eb01 040c 	add.w	r4, r1, ip
 801bbfe:	e796      	b.n	801bb2e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801bc00:	4b03      	ldr	r3, [pc, #12]	; (801bc10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801bc02:	6818      	ldr	r0, [r3, #0]
 801bc04:	6803      	ldr	r3, [r0, #0]
 801bc06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bc08:	4798      	blx	r3
 801bc0a:	e768      	b.n	801bade <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801bc0c:	fffff800 	.word	0xfffff800
 801bc10:	200137bc 	.word	0x200137bc
 801bc14:	200137b6 	.word	0x200137b6

0801bc18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801bc18:	b4f0      	push	{r4, r5, r6, r7}
 801bc1a:	4616      	mov	r6, r2
 801bc1c:	2e01      	cmp	r6, #1
 801bc1e:	461c      	mov	r4, r3
 801bc20:	460d      	mov	r5, r1
 801bc22:	9a04      	ldr	r2, [sp, #16]
 801bc24:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801bc28:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801bc2c:	d012      	beq.n	801bc54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801bc2e:	d303      	bcc.n	801bc38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801bc30:	2e02      	cmp	r6, #2
 801bc32:	d00a      	beq.n	801bc4a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801bc34:	bcf0      	pop	{r4, r5, r6, r7}
 801bc36:	4770      	bx	lr
 801bc38:	6805      	ldr	r5, [r0, #0]
 801bc3a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801bc3e:	68ed      	ldr	r5, [r5, #12]
 801bc40:	4613      	mov	r3, r2
 801bc42:	46ac      	mov	ip, r5
 801bc44:	4622      	mov	r2, r4
 801bc46:	bcf0      	pop	{r4, r5, r6, r7}
 801bc48:	4760      	bx	ip
 801bc4a:	4621      	mov	r1, r4
 801bc4c:	4628      	mov	r0, r5
 801bc4e:	bcf0      	pop	{r4, r5, r6, r7}
 801bc50:	f7ff bd94 	b.w	801b77c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801bc54:	4621      	mov	r1, r4
 801bc56:	4628      	mov	r0, r5
 801bc58:	bcf0      	pop	{r4, r5, r6, r7}
 801bc5a:	f7ff bee5 	b.w	801ba28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801bc60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801bc60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc64:	4681      	mov	r9, r0
 801bc66:	b093      	sub	sp, #76	; 0x4c
 801bc68:	6810      	ldr	r0, [r2, #0]
 801bc6a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801bc6e:	4f6d      	ldr	r7, [pc, #436]	; (801be24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801bc70:	4688      	mov	r8, r1
 801bc72:	6851      	ldr	r1, [r2, #4]
 801bc74:	ac0e      	add	r4, sp, #56	; 0x38
 801bc76:	c403      	stmia	r4!, {r0, r1}
 801bc78:	6818      	ldr	r0, [r3, #0]
 801bc7a:	6859      	ldr	r1, [r3, #4]
 801bc7c:	ac10      	add	r4, sp, #64	; 0x40
 801bc7e:	4616      	mov	r6, r2
 801bc80:	c403      	stmia	r4!, {r0, r1}
 801bc82:	a80e      	add	r0, sp, #56	; 0x38
 801bc84:	f7f7 fec8 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc88:	4631      	mov	r1, r6
 801bc8a:	a810      	add	r0, sp, #64	; 0x40
 801bc8c:	f7f7 ff08 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bc90:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801bc94:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801bc98:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801bc9c:	4e62      	ldr	r6, [pc, #392]	; (801be28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801bc9e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801bca2:	6830      	ldr	r0, [r6, #0]
 801bca4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801bca8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801bcac:	4489      	add	r9, r1
 801bcae:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801bcb2:	440a      	add	r2, r1
 801bcb4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801bcb8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801bcbc:	4413      	add	r3, r2
 801bcbe:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801bcc2:	6803      	ldr	r3, [r0, #0]
 801bcc4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bcc6:	4798      	blx	r3
 801bcc8:	f010 0f80 	tst.w	r0, #128	; 0x80
 801bccc:	6830      	ldr	r0, [r6, #0]
 801bcce:	d01d      	beq.n	801bd0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801bcd0:	2200      	movs	r2, #0
 801bcd2:	6801      	ldr	r1, [r0, #0]
 801bcd4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801bcd8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801bcdc:	220b      	movs	r2, #11
 801bcde:	9207      	str	r2, [sp, #28]
 801bce0:	883a      	ldrh	r2, [r7, #0]
 801bce2:	9206      	str	r2, [sp, #24]
 801bce4:	2201      	movs	r2, #1
 801bce6:	e9cd a204 	strd	sl, r2, [sp, #16]
 801bcea:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801bcee:	9203      	str	r2, [sp, #12]
 801bcf0:	b2a4      	uxth	r4, r4
 801bcf2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801bcf6:	9200      	str	r2, [sp, #0]
 801bcf8:	b2ad      	uxth	r5, r5
 801bcfa:	9502      	str	r5, [sp, #8]
 801bcfc:	9401      	str	r4, [sp, #4]
 801bcfe:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801bd00:	4642      	mov	r2, r8
 801bd02:	4649      	mov	r1, r9
 801bd04:	47a0      	blx	r4
 801bd06:	b013      	add	sp, #76	; 0x4c
 801bd08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd0c:	6803      	ldr	r3, [r0, #0]
 801bd0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bd10:	4798      	blx	r3
 801bd12:	883b      	ldrh	r3, [r7, #0]
 801bd14:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bd18:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801bd1c:	fb03 1202 	mla	r2, r3, r2, r1
 801bd20:	435d      	muls	r5, r3
 801bd22:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bd26:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801bd2a:	920c      	str	r2, [sp, #48]	; 0x30
 801bd2c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801bd30:	1b12      	subs	r2, r2, r4
 801bd32:	920d      	str	r2, [sp, #52]	; 0x34
 801bd34:	0062      	lsls	r2, r4, #1
 801bd36:	1b1c      	subs	r4, r3, r4
 801bd38:	0063      	lsls	r3, r4, #1
 801bd3a:	920a      	str	r2, [sp, #40]	; 0x28
 801bd3c:	930b      	str	r3, [sp, #44]	; 0x2c
 801bd3e:	f04f 0e04 	mov.w	lr, #4
 801bd42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bd44:	4298      	cmp	r0, r3
 801bd46:	d266      	bcs.n	801be16 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801bd48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd4a:	eb00 0b03 	add.w	fp, r0, r3
 801bd4e:	4558      	cmp	r0, fp
 801bd50:	d25c      	bcs.n	801be0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801bd52:	f819 3b01 	ldrb.w	r3, [r9], #1
 801bd56:	fb1e e303 	smlabb	r3, lr, r3, lr
 801bd5a:	f858 2003 	ldr.w	r2, [r8, r3]
 801bd5e:	0e11      	lsrs	r1, r2, #24
 801bd60:	d012      	beq.n	801bd88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801bd62:	29ff      	cmp	r1, #255	; 0xff
 801bd64:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801bd68:	d110      	bne.n	801bd8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801bd6a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801bd6e:	d10d      	bne.n	801bd8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801bd70:	0953      	lsrs	r3, r2, #5
 801bd72:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801bd76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bd7a:	f027 0707 	bic.w	r7, r7, #7
 801bd7e:	431f      	orrs	r7, r3
 801bd80:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bd84:	433a      	orrs	r2, r7
 801bd86:	8002      	strh	r2, [r0, #0]
 801bd88:	3002      	adds	r0, #2
 801bd8a:	e7e0      	b.n	801bd4e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801bd8c:	fb0a f101 	mul.w	r1, sl, r1
 801bd90:	8806      	ldrh	r6, [r0, #0]
 801bd92:	1c4b      	adds	r3, r1, #1
 801bd94:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801bd98:	1235      	asrs	r5, r6, #8
 801bd9a:	10f4      	asrs	r4, r6, #3
 801bd9c:	121b      	asrs	r3, r3, #8
 801bd9e:	00f6      	lsls	r6, r6, #3
 801bda0:	b299      	uxth	r1, r3
 801bda2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801bda6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bdaa:	b2f6      	uxtb	r6, r6
 801bdac:	43db      	mvns	r3, r3
 801bdae:	b2d2      	uxtb	r2, r2
 801bdb0:	b2db      	uxtb	r3, r3
 801bdb2:	fb1c fc01 	smulbb	ip, ip, r1
 801bdb6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bdba:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bdbe:	fb12 f201 	smulbb	r2, r2, r1
 801bdc2:	fb05 c503 	mla	r5, r5, r3, ip
 801bdc6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bdca:	b2ff      	uxtb	r7, r7
 801bdcc:	fb06 2203 	mla	r2, r6, r3, r2
 801bdd0:	b2ad      	uxth	r5, r5
 801bdd2:	fb17 f701 	smulbb	r7, r7, r1
 801bdd6:	b292      	uxth	r2, r2
 801bdd8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801bddc:	fb04 7403 	mla	r4, r4, r3, r7
 801bde0:	f105 0c01 	add.w	ip, r5, #1
 801bde4:	1c57      	adds	r7, r2, #1
 801bde6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801bdea:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801bdee:	b2a4      	uxth	r4, r4
 801bdf0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801bdf4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bdf8:	433d      	orrs	r5, r7
 801bdfa:	1c67      	adds	r7, r4, #1
 801bdfc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801be00:	0964      	lsrs	r4, r4, #5
 801be02:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801be06:	4325      	orrs	r5, r4
 801be08:	8005      	strh	r5, [r0, #0]
 801be0a:	e7bd      	b.n	801bd88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801be0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801be0e:	4418      	add	r0, r3
 801be10:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be12:	4499      	add	r9, r3
 801be14:	e795      	b.n	801bd42 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801be16:	4b04      	ldr	r3, [pc, #16]	; (801be28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801be18:	6818      	ldr	r0, [r3, #0]
 801be1a:	6803      	ldr	r3, [r0, #0]
 801be1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801be1e:	4798      	blx	r3
 801be20:	e771      	b.n	801bd06 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801be22:	bf00      	nop
 801be24:	200137b6 	.word	0x200137b6
 801be28:	200137bc 	.word	0x200137bc

0801be2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801be2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be30:	b087      	sub	sp, #28
 801be32:	4680      	mov	r8, r0
 801be34:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801be38:	460d      	mov	r5, r1
 801be3a:	4614      	mov	r4, r2
 801be3c:	2e00      	cmp	r6, #0
 801be3e:	f000 80b9 	beq.w	801bfb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801be42:	6810      	ldr	r0, [r2, #0]
 801be44:	6851      	ldr	r1, [r2, #4]
 801be46:	af02      	add	r7, sp, #8
 801be48:	c703      	stmia	r7!, {r0, r1}
 801be4a:	6818      	ldr	r0, [r3, #0]
 801be4c:	6859      	ldr	r1, [r3, #4]
 801be4e:	af04      	add	r7, sp, #16
 801be50:	c703      	stmia	r7!, {r0, r1}
 801be52:	a802      	add	r0, sp, #8
 801be54:	f7f7 fde0 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801be58:	4621      	mov	r1, r4
 801be5a:	a804      	add	r0, sp, #16
 801be5c:	f7f7 fe20 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801be60:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801be64:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801be68:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801be6c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801be70:	fb14 2103 	smlabb	r1, r4, r3, r2
 801be74:	eb08 0401 	add.w	r4, r8, r1
 801be78:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801be7c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801be80:	440a      	add	r2, r1
 801be82:	f8ad 2010 	strh.w	r2, [sp, #16]
 801be86:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801be8a:	4413      	add	r3, r2
 801be8c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801be90:	4b4a      	ldr	r3, [pc, #296]	; (801bfbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801be92:	6818      	ldr	r0, [r3, #0]
 801be94:	6803      	ldr	r3, [r0, #0]
 801be96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be98:	4798      	blx	r3
 801be9a:	4b49      	ldr	r3, [pc, #292]	; (801bfc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801be9c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801bea0:	881a      	ldrh	r2, [r3, #0]
 801bea2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801bea6:	2eff      	cmp	r6, #255	; 0xff
 801bea8:	fb02 c101 	mla	r1, r2, r1, ip
 801beac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801beb0:	fb02 f207 	mul.w	r2, r2, r7
 801beb4:	f105 0104 	add.w	r1, r5, #4
 801beb8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801bebc:	461d      	mov	r5, r3
 801bebe:	d05a      	beq.n	801bf76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801bec0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801bec4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801bec8:	b2b6      	uxth	r6, r6
 801beca:	fa1f fe8e 	uxth.w	lr, lr
 801bece:	9301      	str	r3, [sp, #4]
 801bed0:	4282      	cmp	r2, r0
 801bed2:	d96a      	bls.n	801bfaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801bed4:	eb00 0b0a 	add.w	fp, r0, sl
 801bed8:	4583      	cmp	fp, r0
 801beda:	d940      	bls.n	801bf5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801bedc:	f814 3b01 	ldrb.w	r3, [r4], #1
 801bee0:	8805      	ldrh	r5, [r0, #0]
 801bee2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801bee6:	122f      	asrs	r7, r5, #8
 801bee8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801beec:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bef0:	fb17 f70e 	smulbb	r7, r7, lr
 801bef4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801bef8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801befc:	00ed      	lsls	r5, r5, #3
 801befe:	fb0c 7c06 	mla	ip, ip, r6, r7
 801bf02:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bf06:	10df      	asrs	r7, r3, #3
 801bf08:	b2ed      	uxtb	r5, r5
 801bf0a:	00db      	lsls	r3, r3, #3
 801bf0c:	fa1f fc8c 	uxth.w	ip, ip
 801bf10:	fb19 f90e 	smulbb	r9, r9, lr
 801bf14:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bf18:	b2db      	uxtb	r3, r3
 801bf1a:	fb15 f50e 	smulbb	r5, r5, lr
 801bf1e:	fb07 9706 	mla	r7, r7, r6, r9
 801bf22:	fb03 5306 	mla	r3, r3, r6, r5
 801bf26:	f10c 0901 	add.w	r9, ip, #1
 801bf2a:	b29b      	uxth	r3, r3
 801bf2c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801bf30:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801bf34:	f103 0c01 	add.w	ip, r3, #1
 801bf38:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bf3c:	b2bf      	uxth	r7, r7
 801bf3e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bf42:	ea4c 0c09 	orr.w	ip, ip, r9
 801bf46:	f107 0901 	add.w	r9, r7, #1
 801bf4a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801bf4e:	097f      	lsrs	r7, r7, #5
 801bf50:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bf54:	ea4c 0c07 	orr.w	ip, ip, r7
 801bf58:	f820 cb02 	strh.w	ip, [r0], #2
 801bf5c:	e7bc      	b.n	801bed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801bf5e:	9b01      	ldr	r3, [sp, #4]
 801bf60:	881b      	ldrh	r3, [r3, #0]
 801bf62:	eba3 0308 	sub.w	r3, r3, r8
 801bf66:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bf6a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801bf6e:	eba3 0308 	sub.w	r3, r3, r8
 801bf72:	441c      	add	r4, r3
 801bf74:	e7ac      	b.n	801bed0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801bf76:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801bf7a:	4282      	cmp	r2, r0
 801bf7c:	d915      	bls.n	801bfaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801bf7e:	eb00 060a 	add.w	r6, r0, sl
 801bf82:	4286      	cmp	r6, r0
 801bf84:	d906      	bls.n	801bf94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801bf86:	f814 3b01 	ldrb.w	r3, [r4], #1
 801bf8a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801bf8e:	f820 3b02 	strh.w	r3, [r0], #2
 801bf92:	e7f6      	b.n	801bf82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801bf94:	882b      	ldrh	r3, [r5, #0]
 801bf96:	eba3 0308 	sub.w	r3, r3, r8
 801bf9a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bf9e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801bfa2:	eba3 0308 	sub.w	r3, r3, r8
 801bfa6:	441c      	add	r4, r3
 801bfa8:	e7e7      	b.n	801bf7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801bfaa:	4b04      	ldr	r3, [pc, #16]	; (801bfbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801bfac:	6818      	ldr	r0, [r3, #0]
 801bfae:	6803      	ldr	r3, [r0, #0]
 801bfb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bfb2:	4798      	blx	r3
 801bfb4:	b007      	add	sp, #28
 801bfb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfba:	bf00      	nop
 801bfbc:	200137bc 	.word	0x200137bc
 801bfc0:	200137b6 	.word	0x200137b6

0801bfc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801bfc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfc8:	b091      	sub	sp, #68	; 0x44
 801bfca:	4680      	mov	r8, r0
 801bfcc:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801bfd0:	460f      	mov	r7, r1
 801bfd2:	4614      	mov	r4, r2
 801bfd4:	2d00      	cmp	r5, #0
 801bfd6:	d051      	beq.n	801c07c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801bfd8:	6810      	ldr	r0, [r2, #0]
 801bfda:	6851      	ldr	r1, [r2, #4]
 801bfdc:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801c1e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801bfe0:	ae0c      	add	r6, sp, #48	; 0x30
 801bfe2:	c603      	stmia	r6!, {r0, r1}
 801bfe4:	6818      	ldr	r0, [r3, #0]
 801bfe6:	6859      	ldr	r1, [r3, #4]
 801bfe8:	ae0e      	add	r6, sp, #56	; 0x38
 801bfea:	c603      	stmia	r6!, {r0, r1}
 801bfec:	a80c      	add	r0, sp, #48	; 0x30
 801bfee:	f7f7 fd13 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bff2:	4621      	mov	r1, r4
 801bff4:	a80e      	add	r0, sp, #56	; 0x38
 801bff6:	f7f7 fd53 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bffa:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801bffe:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801c002:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801c006:	f8d9 0000 	ldr.w	r0, [r9]
 801c00a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801c00e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801c012:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c016:	eb08 0401 	add.w	r4, r8, r1
 801c01a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801c01e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801c1e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801c022:	440a      	add	r2, r1
 801c024:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801c028:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801c02c:	4413      	add	r3, r2
 801c02e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801c032:	6803      	ldr	r3, [r0, #0]
 801c034:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c036:	4798      	blx	r3
 801c038:	f010 0f80 	tst.w	r0, #128	; 0x80
 801c03c:	f8d9 0000 	ldr.w	r0, [r9]
 801c040:	d01f      	beq.n	801c082 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801c042:	2200      	movs	r2, #0
 801c044:	6801      	ldr	r1, [r0, #0]
 801c046:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801c04a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801c04e:	220b      	movs	r2, #11
 801c050:	9207      	str	r2, [sp, #28]
 801c052:	f8b8 2000 	ldrh.w	r2, [r8]
 801c056:	9206      	str	r2, [sp, #24]
 801c058:	2201      	movs	r2, #1
 801c05a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801c05e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801c062:	9203      	str	r2, [sp, #12]
 801c064:	fa1f f28a 	uxth.w	r2, sl
 801c068:	9202      	str	r2, [sp, #8]
 801c06a:	b2b6      	uxth	r6, r6
 801c06c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801c070:	9200      	str	r2, [sp, #0]
 801c072:	9601      	str	r6, [sp, #4]
 801c074:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801c076:	463a      	mov	r2, r7
 801c078:	4621      	mov	r1, r4
 801c07a:	47a8      	blx	r5
 801c07c:	b011      	add	sp, #68	; 0x44
 801c07e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c082:	6803      	ldr	r3, [r0, #0]
 801c084:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c086:	4798      	blx	r3
 801c088:	f8b8 2000 	ldrh.w	r2, [r8]
 801c08c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801c090:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801c094:	2dff      	cmp	r5, #255	; 0xff
 801c096:	fb02 1303 	mla	r3, r2, r3, r1
 801c09a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c09e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801c0a2:	fb0a fa02 	mul.w	sl, sl, r2
 801c0a6:	d062      	beq.n	801c16e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801c0a8:	ea6f 0c05 	mvn.w	ip, r5
 801c0ac:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801c0b0:	930a      	str	r3, [sp, #40]	; 0x28
 801c0b2:	b2ad      	uxth	r5, r5
 801c0b4:	fa5f fc8c 	uxtb.w	ip, ip
 801c0b8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801c0bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c0be:	4298      	cmp	r0, r3
 801c0c0:	f080 8085 	bcs.w	801c1ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801c0c4:	eb00 0b09 	add.w	fp, r0, r9
 801c0c8:	4558      	cmp	r0, fp
 801c0ca:	d246      	bcs.n	801c15a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801c0cc:	f814 eb01 	ldrb.w	lr, [r4], #1
 801c0d0:	2303      	movs	r3, #3
 801c0d2:	2204      	movs	r2, #4
 801c0d4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801c0d8:	eb07 0a0e 	add.w	sl, r7, lr
 801c0dc:	8803      	ldrh	r3, [r0, #0]
 801c0de:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801c0e2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c0e6:	1219      	asrs	r1, r3, #8
 801c0e8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c0ec:	fb18 f805 	smulbb	r8, r8, r5
 801c0f0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801c0f4:	10da      	asrs	r2, r3, #3
 801c0f6:	fb01 810c 	mla	r1, r1, ip, r8
 801c0fa:	00db      	lsls	r3, r3, #3
 801c0fc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c100:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c104:	b2db      	uxtb	r3, r3
 801c106:	fb18 f805 	smulbb	r8, r8, r5
 801c10a:	fb1e fe05 	smulbb	lr, lr, r5
 801c10e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801c112:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801c116:	b289      	uxth	r1, r1
 801c118:	fb02 820c 	mla	r2, r2, ip, r8
 801c11c:	fb03 e30c 	mla	r3, r3, ip, lr
 801c120:	b292      	uxth	r2, r2
 801c122:	b29b      	uxth	r3, r3
 801c124:	f101 0801 	add.w	r8, r1, #1
 801c128:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801c12c:	f103 0e01 	add.w	lr, r3, #1
 801c130:	f102 0801 	add.w	r8, r2, #1
 801c134:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801c138:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801c13c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801c140:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c144:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c148:	ea4e 0101 	orr.w	r1, lr, r1
 801c14c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c150:	ea41 0108 	orr.w	r1, r1, r8
 801c154:	f820 1b02 	strh.w	r1, [r0], #2
 801c158:	e7b6      	b.n	801c0c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801c15a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c15c:	881b      	ldrh	r3, [r3, #0]
 801c15e:	1b9b      	subs	r3, r3, r6
 801c160:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c164:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c168:	1b9b      	subs	r3, r3, r6
 801c16a:	441c      	add	r4, r3
 801c16c:	e7a6      	b.n	801c0bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801c16e:	491b      	ldr	r1, [pc, #108]	; (801c1dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801c170:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801c174:	2203      	movs	r2, #3
 801c176:	2504      	movs	r5, #4
 801c178:	4550      	cmp	r0, sl
 801c17a:	d228      	bcs.n	801c1ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801c17c:	eb00 0c09 	add.w	ip, r0, r9
 801c180:	4560      	cmp	r0, ip
 801c182:	4623      	mov	r3, r4
 801c184:	d219      	bcs.n	801c1ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801c186:	f893 e000 	ldrb.w	lr, [r3]
 801c18a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801c18e:	eb07 0b0e 	add.w	fp, r7, lr
 801c192:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c196:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801c19a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801c19e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801c1a2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801c1a6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801c1aa:	ea43 030b 	orr.w	r3, r3, fp
 801c1ae:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801c1b2:	3401      	adds	r4, #1
 801c1b4:	f820 3b02 	strh.w	r3, [r0], #2
 801c1b8:	e7e2      	b.n	801c180 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801c1ba:	f8b8 3000 	ldrh.w	r3, [r8]
 801c1be:	1b9b      	subs	r3, r3, r6
 801c1c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c1c4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c1c8:	1b9b      	subs	r3, r3, r6
 801c1ca:	441c      	add	r4, r3
 801c1cc:	e7d4      	b.n	801c178 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801c1ce:	4b04      	ldr	r3, [pc, #16]	; (801c1e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801c1d0:	6818      	ldr	r0, [r3, #0]
 801c1d2:	6803      	ldr	r3, [r0, #0]
 801c1d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c1d6:	4798      	blx	r3
 801c1d8:	e750      	b.n	801c07c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801c1da:	bf00      	nop
 801c1dc:	fffff800 	.word	0xfffff800
 801c1e0:	200137bc 	.word	0x200137bc
 801c1e4:	200137b6 	.word	0x200137b6

0801c1e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801c1e8:	b4f0      	push	{r4, r5, r6, r7}
 801c1ea:	460c      	mov	r4, r1
 801c1ec:	4611      	mov	r1, r2
 801c1ee:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801c1f2:	780f      	ldrb	r7, [r1, #0]
 801c1f4:	784e      	ldrb	r6, [r1, #1]
 801c1f6:	2f01      	cmp	r7, #1
 801c1f8:	461a      	mov	r2, r3
 801c1fa:	9b04      	ldr	r3, [sp, #16]
 801c1fc:	d036      	beq.n	801c26c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801c1fe:	d31e      	bcc.n	801c23e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801c200:	2f02      	cmp	r7, #2
 801c202:	d14a      	bne.n	801c29a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c204:	2e03      	cmp	r6, #3
 801c206:	d848      	bhi.n	801c29a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c208:	e8df f006 	tbb	[pc, r6]
 801c20c:	16140702 	.word	0x16140702
 801c210:	9504      	str	r5, [sp, #16]
 801c212:	4620      	mov	r0, r4
 801c214:	bcf0      	pop	{r4, r5, r6, r7}
 801c216:	f7ff be09 	b.w	801be2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801c21a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801c21c:	2800      	cmp	r0, #0
 801c21e:	d03c      	beq.n	801c29a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c220:	6806      	ldr	r6, [r0, #0]
 801c222:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801c226:	68b5      	ldr	r5, [r6, #8]
 801c228:	4613      	mov	r3, r2
 801c22a:	46ac      	mov	ip, r5
 801c22c:	460a      	mov	r2, r1
 801c22e:	4621      	mov	r1, r4
 801c230:	bcf0      	pop	{r4, r5, r6, r7}
 801c232:	4760      	bx	ip
 801c234:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801c236:	e7f1      	b.n	801c21c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801c238:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801c23c:	e7ee      	b.n	801c21c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801c23e:	2e03      	cmp	r6, #3
 801c240:	d82b      	bhi.n	801c29a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c242:	e8df f006 	tbb	[pc, r6]
 801c246:	0702      	.short	0x0702
 801c248:	100e      	.short	0x100e
 801c24a:	9504      	str	r5, [sp, #16]
 801c24c:	4620      	mov	r0, r4
 801c24e:	bcf0      	pop	{r4, r5, r6, r7}
 801c250:	f7ff bd06 	b.w	801bc60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801c254:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801c256:	b300      	cbz	r0, 801c29a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c258:	6806      	ldr	r6, [r0, #0]
 801c25a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801c25e:	68f5      	ldr	r5, [r6, #12]
 801c260:	e7e2      	b.n	801c228 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801c262:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801c264:	e7f7      	b.n	801c256 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801c266:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801c26a:	e7f4      	b.n	801c256 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801c26c:	2e03      	cmp	r6, #3
 801c26e:	d814      	bhi.n	801c29a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c270:	e8df f006 	tbb	[pc, r6]
 801c274:	100e0702 	.word	0x100e0702
 801c278:	9504      	str	r5, [sp, #16]
 801c27a:	4620      	mov	r0, r4
 801c27c:	bcf0      	pop	{r4, r5, r6, r7}
 801c27e:	f7ff bea1 	b.w	801bfc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801c282:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801c284:	b148      	cbz	r0, 801c29a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801c286:	6806      	ldr	r6, [r0, #0]
 801c288:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801c28c:	6935      	ldr	r5, [r6, #16]
 801c28e:	e7cb      	b.n	801c228 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801c290:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801c292:	e7f7      	b.n	801c284 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801c294:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801c298:	e7f4      	b.n	801c284 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801c29a:	bcf0      	pop	{r4, r5, r6, r7}
 801c29c:	4770      	bx	lr
	...

0801c2a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801c2a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2a4:	4604      	mov	r4, r0
 801c2a6:	b087      	sub	sp, #28
 801c2a8:	6810      	ldr	r0, [r2, #0]
 801c2aa:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801c2ae:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801c4e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801c2b2:	460e      	mov	r6, r1
 801c2b4:	6851      	ldr	r1, [r2, #4]
 801c2b6:	ad02      	add	r5, sp, #8
 801c2b8:	c503      	stmia	r5!, {r0, r1}
 801c2ba:	6818      	ldr	r0, [r3, #0]
 801c2bc:	6859      	ldr	r1, [r3, #4]
 801c2be:	ad04      	add	r5, sp, #16
 801c2c0:	4617      	mov	r7, r2
 801c2c2:	c503      	stmia	r5!, {r0, r1}
 801c2c4:	a802      	add	r0, sp, #8
 801c2c6:	f7f7 fba7 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c2ca:	4639      	mov	r1, r7
 801c2cc:	a804      	add	r0, sp, #16
 801c2ce:	f7f7 fbe7 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c2d2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c2d6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c2da:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801c2de:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801c2e2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801c2e6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c2ea:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801c2ee:	440e      	add	r6, r1
 801c2f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c2f4:	440a      	add	r2, r1
 801c2f6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801c2fa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c2fe:	4413      	add	r3, r2
 801c300:	f8ad 3012 	strh.w	r3, [sp, #18]
 801c304:	4b77      	ldr	r3, [pc, #476]	; (801c4e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801c306:	6818      	ldr	r0, [r3, #0]
 801c308:	6803      	ldr	r3, [r0, #0]
 801c30a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c30c:	4798      	blx	r3
 801c30e:	f8b9 b000 	ldrh.w	fp, [r9]
 801c312:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c316:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c31a:	fb0b 2303 	mla	r3, fp, r3, r2
 801c31e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c322:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c326:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c32a:	fb05 f50b 	mul.w	r5, r5, fp
 801c32e:	9300      	str	r3, [sp, #0]
 801c330:	d069      	beq.n	801c406 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801c332:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801c336:	4558      	cmp	r0, fp
 801c338:	f080 80cc 	bcs.w	801c4d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801c33c:	9b00      	ldr	r3, [sp, #0]
 801c33e:	18c3      	adds	r3, r0, r3
 801c340:	9301      	str	r3, [sp, #4]
 801c342:	4631      	mov	r1, r6
 801c344:	9b01      	ldr	r3, [sp, #4]
 801c346:	4298      	cmp	r0, r3
 801c348:	d24f      	bcs.n	801c3ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801c34a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801c34e:	2a00      	cmp	r2, #0
 801c350:	d048      	beq.n	801c3e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801c352:	fb0a f202 	mul.w	r2, sl, r2
 801c356:	1c53      	adds	r3, r2, #1
 801c358:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c35c:	121b      	asrs	r3, r3, #8
 801c35e:	d041      	beq.n	801c3e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801c360:	8802      	ldrh	r2, [r0, #0]
 801c362:	f8b4 c000 	ldrh.w	ip, [r4]
 801c366:	b29e      	uxth	r6, r3
 801c368:	1215      	asrs	r5, r2, #8
 801c36a:	43db      	mvns	r3, r3
 801c36c:	b2db      	uxtb	r3, r3
 801c36e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c372:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c376:	fb15 f503 	smulbb	r5, r5, r3
 801c37a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801c37e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c382:	00d2      	lsls	r2, r2, #3
 801c384:	fb07 5706 	mla	r7, r7, r6, r5
 801c388:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c38c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c390:	b2d2      	uxtb	r2, r2
 801c392:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c396:	b2bf      	uxth	r7, r7
 801c398:	fb1e fe03 	smulbb	lr, lr, r3
 801c39c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c3a0:	fa5f fc8c 	uxtb.w	ip, ip
 801c3a4:	fb12 f203 	smulbb	r2, r2, r3
 801c3a8:	fb05 e506 	mla	r5, r5, r6, lr
 801c3ac:	fb0c 2c06 	mla	ip, ip, r6, r2
 801c3b0:	f107 0e01 	add.w	lr, r7, #1
 801c3b4:	fa1f fc8c 	uxth.w	ip, ip
 801c3b8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801c3bc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801c3c0:	f10c 0701 	add.w	r7, ip, #1
 801c3c4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c3c8:	b2ad      	uxth	r5, r5
 801c3ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c3ce:	ea47 070e 	orr.w	r7, r7, lr
 801c3d2:	f105 0e01 	add.w	lr, r5, #1
 801c3d6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c3da:	096d      	lsrs	r5, r5, #5
 801c3dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3e0:	432f      	orrs	r7, r5
 801c3e2:	8007      	strh	r7, [r0, #0]
 801c3e4:	3002      	adds	r0, #2
 801c3e6:	3402      	adds	r4, #2
 801c3e8:	e7ac      	b.n	801c344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801c3ea:	f8b9 3000 	ldrh.w	r3, [r9]
 801c3ee:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c3f2:	eba3 0308 	sub.w	r3, r3, r8
 801c3f6:	eba6 0608 	sub.w	r6, r6, r8
 801c3fa:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801c3fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c402:	440e      	add	r6, r1
 801c404:	e797      	b.n	801c336 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801c406:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801c40a:	42a8      	cmp	r0, r5
 801c40c:	d262      	bcs.n	801c4d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801c40e:	9b00      	ldr	r3, [sp, #0]
 801c410:	4631      	mov	r1, r6
 801c412:	eb00 0b03 	add.w	fp, r0, r3
 801c416:	4558      	cmp	r0, fp
 801c418:	d24e      	bcs.n	801c4b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801c41a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801c41e:	b12b      	cbz	r3, 801c42c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801c420:	2bff      	cmp	r3, #255	; 0xff
 801c422:	f8b4 e000 	ldrh.w	lr, [r4]
 801c426:	d104      	bne.n	801c432 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801c428:	f8a0 e000 	strh.w	lr, [r0]
 801c42c:	3002      	adds	r0, #2
 801c42e:	3402      	adds	r4, #2
 801c430:	e7f1      	b.n	801c416 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801c432:	8802      	ldrh	r2, [r0, #0]
 801c434:	b29f      	uxth	r7, r3
 801c436:	1216      	asrs	r6, r2, #8
 801c438:	43db      	mvns	r3, r3
 801c43a:	b2db      	uxtb	r3, r3
 801c43c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c440:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c444:	fb16 f603 	smulbb	r6, r6, r3
 801c448:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801c44c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c450:	00d2      	lsls	r2, r2, #3
 801c452:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c456:	b2d2      	uxtb	r2, r2
 801c458:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c45c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801c460:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c464:	fb1a fa03 	smulbb	sl, sl, r3
 801c468:	fa1f fc8c 	uxth.w	ip, ip
 801c46c:	fb12 f303 	smulbb	r3, r2, r3
 801c470:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c474:	fa5f fe8e 	uxtb.w	lr, lr
 801c478:	fb06 a607 	mla	r6, r6, r7, sl
 801c47c:	f10c 0201 	add.w	r2, ip, #1
 801c480:	fb0e 3307 	mla	r3, lr, r7, r3
 801c484:	b2b6      	uxth	r6, r6
 801c486:	b29b      	uxth	r3, r3
 801c488:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c48c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801c490:	f106 0a01 	add.w	sl, r6, #1
 801c494:	f103 0c01 	add.w	ip, r3, #1
 801c498:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c49c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c4a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c4a4:	0976      	lsrs	r6, r6, #5
 801c4a6:	ea4c 0c02 	orr.w	ip, ip, r2
 801c4aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c4ae:	ea4c 0c06 	orr.w	ip, ip, r6
 801c4b2:	f8a0 c000 	strh.w	ip, [r0]
 801c4b6:	e7b9      	b.n	801c42c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801c4b8:	f8b9 3000 	ldrh.w	r3, [r9]
 801c4bc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c4c0:	eba3 0308 	sub.w	r3, r3, r8
 801c4c4:	eba6 0608 	sub.w	r6, r6, r8
 801c4c8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801c4cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c4d0:	440e      	add	r6, r1
 801c4d2:	e79a      	b.n	801c40a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801c4d4:	4b03      	ldr	r3, [pc, #12]	; (801c4e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801c4d6:	6818      	ldr	r0, [r3, #0]
 801c4d8:	6803      	ldr	r3, [r0, #0]
 801c4da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c4dc:	4798      	blx	r3
 801c4de:	b007      	add	sp, #28
 801c4e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4e4:	200137bc 	.word	0x200137bc
 801c4e8:	200137b6 	.word	0x200137b6

0801c4ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801c4ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4f0:	b089      	sub	sp, #36	; 0x24
 801c4f2:	4682      	mov	sl, r0
 801c4f4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801c4f8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c4fa:	460f      	mov	r7, r1
 801c4fc:	4691      	mov	r9, r2
 801c4fe:	4698      	mov	r8, r3
 801c500:	2e00      	cmp	r6, #0
 801c502:	d03d      	beq.n	801c580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c504:	4608      	mov	r0, r1
 801c506:	f7fa fe59 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c50a:	4605      	mov	r5, r0
 801c50c:	4638      	mov	r0, r7
 801c50e:	f7fa fe89 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c512:	f8ad 000e 	strh.w	r0, [sp, #14]
 801c516:	4638      	mov	r0, r7
 801c518:	f8ad 9008 	strh.w	r9, [sp, #8]
 801c51c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801c520:	f8ad 800a 	strh.w	r8, [sp, #10]
 801c524:	f7fa ff36 	bl	8017394 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c528:	4605      	mov	r5, r0
 801c52a:	4638      	mov	r0, r7
 801c52c:	f7fa ff62 	bl	80173f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801c530:	4681      	mov	r9, r0
 801c532:	4638      	mov	r0, r7
 801c534:	f7fa ffb2 	bl	801749c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801c538:	280b      	cmp	r0, #11
 801c53a:	d821      	bhi.n	801c580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c53c:	e8df f000 	tbb	[pc, r0]
 801c540:	2006aebe 	.word	0x2006aebe
 801c544:	20202020 	.word	0x20202020
 801c548:	b5202020 	.word	0xb5202020
 801c54c:	4bb0      	ldr	r3, [pc, #704]	; (801c810 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801c54e:	6818      	ldr	r0, [r3, #0]
 801c550:	6803      	ldr	r3, [r0, #0]
 801c552:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c554:	4798      	blx	r3
 801c556:	2eff      	cmp	r6, #255	; 0xff
 801c558:	d101      	bne.n	801c55e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801c55a:	0683      	lsls	r3, r0, #26
 801c55c:	d506      	bpl.n	801c56c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801c55e:	4633      	mov	r3, r6
 801c560:	4622      	mov	r2, r4
 801c562:	a902      	add	r1, sp, #8
 801c564:	4628      	mov	r0, r5
 801c566:	f7ff f909 	bl	801b77c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c56a:	e009      	b.n	801c580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c56c:	4638      	mov	r0, r7
 801c56e:	f7fa fed9 	bl	8017324 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c572:	b940      	cbnz	r0, 801c586 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801c574:	4623      	mov	r3, r4
 801c576:	aa02      	add	r2, sp, #8
 801c578:	4629      	mov	r1, r5
 801c57a:	4650      	mov	r0, sl
 801c57c:	f7ff f9e4 	bl	801b948 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801c580:	b009      	add	sp, #36	; 0x24
 801c582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c586:	f10d 0818 	add.w	r8, sp, #24
 801c58a:	4639      	mov	r1, r7
 801c58c:	4640      	mov	r0, r8
 801c58e:	f7fa fe7d 	bl	801728c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801c592:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c596:	af04      	add	r7, sp, #16
 801c598:	e887 0003 	stmia.w	r7, {r0, r1}
 801c59c:	4638      	mov	r0, r7
 801c59e:	4621      	mov	r1, r4
 801c5a0:	f7f2 fadc 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 801c5a4:	4638      	mov	r0, r7
 801c5a6:	f7f2 fb1c 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c5aa:	2800      	cmp	r0, #0
 801c5ac:	d1d7      	bne.n	801c55e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801c5ae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c5b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c5b6:	4293      	cmp	r3, r2
 801c5b8:	dd12      	ble.n	801c5e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801c5ba:	1a9b      	subs	r3, r3, r2
 801c5bc:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c5c0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c5c4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801c5c8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801c5cc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c5d0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c5d4:	4642      	mov	r2, r8
 801c5d6:	4633      	mov	r3, r6
 801c5d8:	a902      	add	r1, sp, #8
 801c5da:	4628      	mov	r0, r5
 801c5dc:	f7ff f8ce 	bl	801b77c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c5e0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801c5e4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801c5e8:	4293      	cmp	r3, r2
 801c5ea:	dd12      	ble.n	801c612 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801c5ec:	1a9b      	subs	r3, r3, r2
 801c5ee:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801c5f2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c5f6:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c5fa:	f8ad 001a 	strh.w	r0, [sp, #26]
 801c5fe:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c602:	f8ad 101e 	strh.w	r1, [sp, #30]
 801c606:	23ff      	movs	r3, #255	; 0xff
 801c608:	4642      	mov	r2, r8
 801c60a:	a902      	add	r1, sp, #8
 801c60c:	4628      	mov	r0, r5
 801c60e:	f7ff f8b5 	bl	801b77c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c612:	463b      	mov	r3, r7
 801c614:	aa02      	add	r2, sp, #8
 801c616:	4629      	mov	r1, r5
 801c618:	4650      	mov	r0, sl
 801c61a:	f7ff f995 	bl	801b948 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801c61e:	88a2      	ldrh	r2, [r4, #4]
 801c620:	8823      	ldrh	r3, [r4, #0]
 801c622:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801c626:	4413      	add	r3, r2
 801c628:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c62c:	440a      	add	r2, r1
 801c62e:	b29b      	uxth	r3, r3
 801c630:	b292      	uxth	r2, r2
 801c632:	b211      	sxth	r1, r2
 801c634:	b218      	sxth	r0, r3
 801c636:	4288      	cmp	r0, r1
 801c638:	dd12      	ble.n	801c660 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801c63a:	1a9b      	subs	r3, r3, r2
 801c63c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801c640:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801c644:	f8ad 1018 	strh.w	r1, [sp, #24]
 801c648:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c64c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801c650:	23ff      	movs	r3, #255	; 0xff
 801c652:	4642      	mov	r2, r8
 801c654:	a902      	add	r1, sp, #8
 801c656:	4628      	mov	r0, r5
 801c658:	f8ad 601a 	strh.w	r6, [sp, #26]
 801c65c:	f7ff f88e 	bl	801b77c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c660:	88e2      	ldrh	r2, [r4, #6]
 801c662:	8863      	ldrh	r3, [r4, #2]
 801c664:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801c668:	4413      	add	r3, r2
 801c66a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801c66e:	440a      	add	r2, r1
 801c670:	b29b      	uxth	r3, r3
 801c672:	b292      	uxth	r2, r2
 801c674:	b211      	sxth	r1, r2
 801c676:	b218      	sxth	r0, r3
 801c678:	4288      	cmp	r0, r1
 801c67a:	dd81      	ble.n	801c580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c67c:	1a9b      	subs	r3, r3, r2
 801c67e:	f9b4 6000 	ldrsh.w	r6, [r4]
 801c682:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801c686:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c68a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801c68e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c692:	f8ad 001c 	strh.w	r0, [sp, #28]
 801c696:	23ff      	movs	r3, #255	; 0xff
 801c698:	4642      	mov	r2, r8
 801c69a:	e762      	b.n	801c562 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801c69c:	4633      	mov	r3, r6
 801c69e:	4622      	mov	r2, r4
 801c6a0:	a902      	add	r1, sp, #8
 801c6a2:	4628      	mov	r0, r5
 801c6a4:	f7ff f9c0 	bl	801ba28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801c6a8:	e76a      	b.n	801c580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c6aa:	e9cd 4600 	strd	r4, r6, [sp]
 801c6ae:	ab02      	add	r3, sp, #8
 801c6b0:	464a      	mov	r2, r9
 801c6b2:	4629      	mov	r1, r5
 801c6b4:	4650      	mov	r0, sl
 801c6b6:	f7ff fd97 	bl	801c1e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801c6ba:	e761      	b.n	801c580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c6bc:	4638      	mov	r0, r7
 801c6be:	f7fa fe31 	bl	8017324 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c6c2:	b950      	cbnz	r0, 801c6da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801c6c4:	e9cd 6000 	strd	r6, r0, [sp]
 801c6c8:	f8da 3000 	ldr.w	r3, [sl]
 801c6cc:	aa02      	add	r2, sp, #8
 801c6ce:	68de      	ldr	r6, [r3, #12]
 801c6d0:	4629      	mov	r1, r5
 801c6d2:	4623      	mov	r3, r4
 801c6d4:	4650      	mov	r0, sl
 801c6d6:	47b0      	blx	r6
 801c6d8:	e752      	b.n	801c580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c6da:	f10d 0818 	add.w	r8, sp, #24
 801c6de:	4639      	mov	r1, r7
 801c6e0:	4640      	mov	r0, r8
 801c6e2:	f7fa fdd3 	bl	801728c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801c6e6:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c6ea:	af04      	add	r7, sp, #16
 801c6ec:	e887 0003 	stmia.w	r7, {r0, r1}
 801c6f0:	4638      	mov	r0, r7
 801c6f2:	4621      	mov	r1, r4
 801c6f4:	f7f2 fa32 	bl	800eb5c <_ZN8touchgfx4RectaNERKS0_>
 801c6f8:	4638      	mov	r0, r7
 801c6fa:	f7f2 fa72 	bl	800ebe2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c6fe:	b138      	cbz	r0, 801c710 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801c700:	9600      	str	r6, [sp, #0]
 801c702:	4623      	mov	r3, r4
 801c704:	aa02      	add	r2, sp, #8
 801c706:	4649      	mov	r1, r9
 801c708:	4628      	mov	r0, r5
 801c70a:	f7ff fdc9 	bl	801c2a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c70e:	e737      	b.n	801c580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c710:	e9cd 6000 	strd	r6, r0, [sp]
 801c714:	f8da 3000 	ldr.w	r3, [sl]
 801c718:	aa02      	add	r2, sp, #8
 801c71a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801c71e:	4629      	mov	r1, r5
 801c720:	463b      	mov	r3, r7
 801c722:	4650      	mov	r0, sl
 801c724:	47d8      	blx	fp
 801c726:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c72a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c72e:	4293      	cmp	r3, r2
 801c730:	dd13      	ble.n	801c75a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801c732:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c736:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c73a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801c73e:	1a9b      	subs	r3, r3, r2
 801c740:	f8ad 201a 	strh.w	r2, [sp, #26]
 801c744:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c748:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c74c:	9600      	str	r6, [sp, #0]
 801c74e:	4643      	mov	r3, r8
 801c750:	aa02      	add	r2, sp, #8
 801c752:	4649      	mov	r1, r9
 801c754:	4628      	mov	r0, r5
 801c756:	f7ff fda3 	bl	801c2a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c75a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801c75e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801c762:	4293      	cmp	r3, r2
 801c764:	dd13      	ble.n	801c78e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801c766:	1a9b      	subs	r3, r3, r2
 801c768:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801c76c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c770:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c774:	f8ad 001a 	strh.w	r0, [sp, #26]
 801c778:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c77c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801c780:	9600      	str	r6, [sp, #0]
 801c782:	4643      	mov	r3, r8
 801c784:	aa02      	add	r2, sp, #8
 801c786:	4649      	mov	r1, r9
 801c788:	4628      	mov	r0, r5
 801c78a:	f7ff fd89 	bl	801c2a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c78e:	88a2      	ldrh	r2, [r4, #4]
 801c790:	8823      	ldrh	r3, [r4, #0]
 801c792:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801c796:	4413      	add	r3, r2
 801c798:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c79c:	440a      	add	r2, r1
 801c79e:	b29b      	uxth	r3, r3
 801c7a0:	b292      	uxth	r2, r2
 801c7a2:	b211      	sxth	r1, r2
 801c7a4:	b218      	sxth	r0, r3
 801c7a6:	4288      	cmp	r0, r1
 801c7a8:	dd13      	ble.n	801c7d2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801c7aa:	1a9b      	subs	r3, r3, r2
 801c7ac:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801c7b0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801c7b4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801c7b8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c7bc:	f8ad 001e 	strh.w	r0, [sp, #30]
 801c7c0:	9600      	str	r6, [sp, #0]
 801c7c2:	4643      	mov	r3, r8
 801c7c4:	aa02      	add	r2, sp, #8
 801c7c6:	4649      	mov	r1, r9
 801c7c8:	4628      	mov	r0, r5
 801c7ca:	f8ad 701a 	strh.w	r7, [sp, #26]
 801c7ce:	f7ff fd67 	bl	801c2a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c7d2:	88e2      	ldrh	r2, [r4, #6]
 801c7d4:	8863      	ldrh	r3, [r4, #2]
 801c7d6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801c7da:	4413      	add	r3, r2
 801c7dc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801c7e0:	440a      	add	r2, r1
 801c7e2:	b29b      	uxth	r3, r3
 801c7e4:	b292      	uxth	r2, r2
 801c7e6:	b211      	sxth	r1, r2
 801c7e8:	b218      	sxth	r0, r3
 801c7ea:	4288      	cmp	r0, r1
 801c7ec:	f77f aec8 	ble.w	801c580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c7f0:	f9b4 7000 	ldrsh.w	r7, [r4]
 801c7f4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801c7f8:	f8ad 7018 	strh.w	r7, [sp, #24]
 801c7fc:	1a9b      	subs	r3, r3, r2
 801c7fe:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c802:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c806:	f8ad 001c 	strh.w	r0, [sp, #28]
 801c80a:	9600      	str	r6, [sp, #0]
 801c80c:	4643      	mov	r3, r8
 801c80e:	e779      	b.n	801c704 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801c810:	200137bc 	.word	0x200137bc

0801c814 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801c814:	b180      	cbz	r0, 801c838 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801c816:	2903      	cmp	r1, #3
 801c818:	d81c      	bhi.n	801c854 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801c81a:	e8df f001 	tbb	[pc, r1]
 801c81e:	1d02      	.short	0x1d02
 801c820:	1f08      	.short	0x1f08
 801c822:	4b10      	ldr	r3, [pc, #64]	; (801c864 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801c824:	8818      	ldrh	r0, [r3, #0]
 801c826:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c82a:	4240      	negs	r0, r0
 801c82c:	4770      	bx	lr
 801c82e:	4b0d      	ldr	r3, [pc, #52]	; (801c864 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801c830:	8818      	ldrh	r0, [r3, #0]
 801c832:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c836:	4770      	bx	lr
 801c838:	2903      	cmp	r1, #3
 801c83a:	d80b      	bhi.n	801c854 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801c83c:	a301      	add	r3, pc, #4	; (adr r3, 801c844 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801c83e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801c842:	bf00      	nop
 801c844:	0801c859 	.word	0x0801c859
 801c848:	0801c82f 	.word	0x0801c82f
 801c84c:	0801c85d 	.word	0x0801c85d
 801c850:	0801c823 	.word	0x0801c823
 801c854:	2000      	movs	r0, #0
 801c856:	4770      	bx	lr
 801c858:	2001      	movs	r0, #1
 801c85a:	4770      	bx	lr
 801c85c:	f04f 30ff 	mov.w	r0, #4294967295
 801c860:	4770      	bx	lr
 801c862:	bf00      	nop
 801c864:	200137b6 	.word	0x200137b6

0801c868 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801c868:	b180      	cbz	r0, 801c88c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801c86a:	2903      	cmp	r1, #3
 801c86c:	d81c      	bhi.n	801c8a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801c86e:	e8df f001 	tbb	[pc, r1]
 801c872:	021d      	.short	0x021d
 801c874:	071f      	.short	0x071f
 801c876:	4b10      	ldr	r3, [pc, #64]	; (801c8b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801c878:	8818      	ldrh	r0, [r3, #0]
 801c87a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c87e:	4770      	bx	lr
 801c880:	4b0d      	ldr	r3, [pc, #52]	; (801c8b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801c882:	8818      	ldrh	r0, [r3, #0]
 801c884:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c888:	4240      	negs	r0, r0
 801c88a:	4770      	bx	lr
 801c88c:	2903      	cmp	r1, #3
 801c88e:	d80b      	bhi.n	801c8a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801c890:	a301      	add	r3, pc, #4	; (adr r3, 801c898 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801c892:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801c896:	bf00      	nop
 801c898:	0801c877 	.word	0x0801c877
 801c89c:	0801c8b1 	.word	0x0801c8b1
 801c8a0:	0801c881 	.word	0x0801c881
 801c8a4:	0801c8ad 	.word	0x0801c8ad
 801c8a8:	2000      	movs	r0, #0
 801c8aa:	4770      	bx	lr
 801c8ac:	2001      	movs	r0, #1
 801c8ae:	4770      	bx	lr
 801c8b0:	f04f 30ff 	mov.w	r0, #4294967295
 801c8b4:	4770      	bx	lr
 801c8b6:	bf00      	nop
 801c8b8:	200137b6 	.word	0x200137b6

0801c8bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801c8bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8c0:	b099      	sub	sp, #100	; 0x64
 801c8c2:	910b      	str	r1, [sp, #44]	; 0x2c
 801c8c4:	a914      	add	r1, sp, #80	; 0x50
 801c8c6:	e881 000c 	stmia.w	r1, {r2, r3}
 801c8ca:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801c8ce:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801c8d2:	f891 900d 	ldrb.w	r9, [r1, #13]
 801c8d6:	9309      	str	r3, [sp, #36]	; 0x24
 801c8d8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c8dc:	9310      	str	r3, [sp, #64]	; 0x40
 801c8de:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801c8e2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801c8e6:	930c      	str	r3, [sp, #48]	; 0x30
 801c8e8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801c8ec:	798f      	ldrb	r7, [r1, #6]
 801c8ee:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801c8f2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801c8f6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801c8fa:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801c8fe:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801c902:	431f      	orrs	r7, r3
 801c904:	f000 8195 	beq.w	801cc32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c908:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801c90c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801c910:	f891 9007 	ldrb.w	r9, [r1, #7]
 801c914:	ea59 0903 	orrs.w	r9, r9, r3
 801c918:	f000 818b 	beq.w	801cc32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c91c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801c920:	b29b      	uxth	r3, r3
 801c922:	2d00      	cmp	r5, #0
 801c924:	f000 812e 	beq.w	801cb84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801c928:	1aed      	subs	r5, r5, r3
 801c92a:	b2ad      	uxth	r5, r5
 801c92c:	042b      	lsls	r3, r5, #16
 801c92e:	d502      	bpl.n	801c936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801c930:	1b64      	subs	r4, r4, r5
 801c932:	b224      	sxth	r4, r4
 801c934:	2500      	movs	r5, #0
 801c936:	f9b2 1000 	ldrsh.w	r1, [r2]
 801c93a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801c93e:	428c      	cmp	r4, r1
 801c940:	b28b      	uxth	r3, r1
 801c942:	bfbf      	itttt	lt
 801c944:	18ed      	addlt	r5, r5, r3
 801c946:	1b2c      	sublt	r4, r5, r4
 801c948:	b2a5      	uxthlt	r5, r4
 801c94a:	460c      	movlt	r4, r1
 801c94c:	8891      	ldrh	r1, [r2, #4]
 801c94e:	440b      	add	r3, r1
 801c950:	b21b      	sxth	r3, r3
 801c952:	930f      	str	r3, [sp, #60]	; 0x3c
 801c954:	88d3      	ldrh	r3, [r2, #6]
 801c956:	8852      	ldrh	r2, [r2, #2]
 801c958:	4413      	add	r3, r2
 801c95a:	b21b      	sxth	r3, r3
 801c95c:	930d      	str	r3, [sp, #52]	; 0x34
 801c95e:	4bbe      	ldr	r3, [pc, #760]	; (801cc58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801c960:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c962:	f893 b000 	ldrb.w	fp, [r3]
 801c966:	f10b 3cff 	add.w	ip, fp, #4294967295
 801c96a:	f1dc 0300 	rsbs	r3, ip, #0
 801c96e:	eb43 030c 	adc.w	r3, r3, ip
 801c972:	930e      	str	r3, [sp, #56]	; 0x38
 801c974:	4621      	mov	r1, r4
 801c976:	4653      	mov	r3, sl
 801c978:	a814      	add	r0, sp, #80	; 0x50
 801c97a:	f7f6 fec2 	bl	8013702 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801c97e:	4621      	mov	r1, r4
 801c980:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801c984:	4653      	mov	r3, sl
 801c986:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c988:	a814      	add	r0, sp, #80	; 0x50
 801c98a:	f7f6 fed7 	bl	801373c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801c98e:	a918      	add	r1, sp, #96	; 0x60
 801c990:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801c994:	a817      	add	r0, sp, #92	; 0x5c
 801c996:	f7f6 fffd 	bl	8013994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801c99a:	f1ba 0f00 	cmp.w	sl, #0
 801c99e:	f040 80f4 	bne.w	801cb8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801c9a2:	f1bb 0f01 	cmp.w	fp, #1
 801c9a6:	f040 80f8 	bne.w	801cb9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801c9aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c9ac:	2b00      	cmp	r3, #0
 801c9ae:	f040 8145 	bne.w	801cc3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801c9b2:	b2ba      	uxth	r2, r7
 801c9b4:	b905      	cbnz	r5, 801c9b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801c9b6:	b16e      	cbz	r6, 801c9d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801c9b8:	fb06 5302 	mla	r3, r6, r2, r5
 801c9bc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801c9be:	fb08 f303 	mul.w	r3, r8, r3
 801c9c2:	4631      	mov	r1, r6
 801c9c4:	f003 0607 	and.w	r6, r3, #7
 801c9c8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801c9cc:	9328      	str	r3, [sp, #160]	; 0xa0
 801c9ce:	eba9 0301 	sub.w	r3, r9, r1
 801c9d2:	930a      	str	r3, [sp, #40]	; 0x28
 801c9d4:	4651      	mov	r1, sl
 801c9d6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c9d8:	f7ff ff1c 	bl	801c814 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801c9dc:	4681      	mov	r9, r0
 801c9de:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c9e0:	f7ff ff42 	bl	801c868 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801c9e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c9e6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c9e8:	eba3 0a01 	sub.w	sl, r3, r1
 801c9ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c9ee:	459a      	cmp	sl, r3
 801c9f0:	bfa8      	it	ge
 801c9f2:	469a      	movge	sl, r3
 801c9f4:	f1ba 0f00 	cmp.w	sl, #0
 801c9f8:	4683      	mov	fp, r0
 801c9fa:	f340 811a 	ble.w	801cc32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c9fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ca00:	1b64      	subs	r4, r4, r5
 801ca02:	1b1c      	subs	r4, r3, r4
 801ca04:	42bc      	cmp	r4, r7
 801ca06:	bfd4      	ite	le
 801ca08:	ebc5 0504 	rsble	r5, r5, r4
 801ca0c:	ebc5 0507 	rsbgt	r5, r5, r7
 801ca10:	2d00      	cmp	r5, #0
 801ca12:	f340 810e 	ble.w	801cc32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ca16:	1b52      	subs	r2, r2, r5
 801ca18:	fb08 f302 	mul.w	r3, r8, r2
 801ca1c:	930f      	str	r3, [sp, #60]	; 0x3c
 801ca1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ca20:	2b00      	cmp	r3, #0
 801ca22:	f040 8116 	bne.w	801cc52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ca26:	4b8d      	ldr	r3, [pc, #564]	; (801cc5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801ca28:	6818      	ldr	r0, [r3, #0]
 801ca2a:	6803      	ldr	r3, [r0, #0]
 801ca2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca2e:	4798      	blx	r3
 801ca30:	2301      	movs	r3, #1
 801ca32:	fa03 f308 	lsl.w	r3, r3, r8
 801ca36:	4a8a      	ldr	r2, [pc, #552]	; (801cc60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801ca38:	3b01      	subs	r3, #1
 801ca3a:	b2db      	uxtb	r3, r3
 801ca3c:	8811      	ldrh	r1, [r2, #0]
 801ca3e:	930e      	str	r3, [sp, #56]	; 0x38
 801ca40:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801ca44:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801ca48:	fb01 2303 	mla	r3, r1, r3, r2
 801ca4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ca50:	930a      	str	r3, [sp, #40]	; 0x28
 801ca52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ca54:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801ca58:	9313      	str	r3, [sp, #76]	; 0x4c
 801ca5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ca5c:	0a19      	lsrs	r1, r3, #8
 801ca5e:	b2cb      	uxtb	r3, r1
 801ca60:	9312      	str	r3, [sp, #72]	; 0x48
 801ca62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ca64:	b2db      	uxtb	r3, r3
 801ca66:	9311      	str	r3, [sp, #68]	; 0x44
 801ca68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ca6a:	095a      	lsrs	r2, r3, #5
 801ca6c:	4b7d      	ldr	r3, [pc, #500]	; (801cc64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ca6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ca72:	400b      	ands	r3, r1
 801ca74:	4313      	orrs	r3, r2
 801ca76:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ca78:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ca7c:	4313      	orrs	r3, r2
 801ca7e:	b29b      	uxth	r3, r3
 801ca80:	9310      	str	r3, [sp, #64]	; 0x40
 801ca82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ca84:	781a      	ldrb	r2, [r3, #0]
 801ca86:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801ca8a:	4132      	asrs	r2, r6
 801ca8c:	fb05 b919 	mls	r9, r5, r9, fp
 801ca90:	fb03 fb05 	mul.w	fp, r3, r5
 801ca94:	b2d2      	uxtb	r2, r2
 801ca96:	930d      	str	r3, [sp, #52]	; 0x34
 801ca98:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801ca9c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801caa0:	f0c0 80f5 	bcc.w	801cc8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801caa4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801caa8:	46ae      	mov	lr, r5
 801caaa:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801caae:	f0c0 80dd 	bcc.w	801cc6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801cab2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cab4:	4013      	ands	r3, r2
 801cab6:	d055      	beq.n	801cb64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801cab8:	20ff      	movs	r0, #255	; 0xff
 801caba:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cabc:	fb90 f1f1 	sdiv	r1, r0, r1
 801cac0:	434b      	muls	r3, r1
 801cac2:	2bfe      	cmp	r3, #254	; 0xfe
 801cac4:	dd03      	ble.n	801cace <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801cac6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cac8:	4281      	cmp	r1, r0
 801caca:	f000 80cd 	beq.w	801cc68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801cace:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cad0:	f8bc 4000 	ldrh.w	r4, [ip]
 801cad4:	fb11 f303 	smulbb	r3, r1, r3
 801cad8:	b29b      	uxth	r3, r3
 801cada:	1c59      	adds	r1, r3, #1
 801cadc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801cae0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cae4:	b29f      	uxth	r7, r3
 801cae6:	43db      	mvns	r3, r3
 801cae8:	b2db      	uxtb	r3, r3
 801caea:	9309      	str	r3, [sp, #36]	; 0x24
 801caec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801caee:	1220      	asrs	r0, r4, #8
 801caf0:	fb13 f907 	smulbb	r9, r3, r7
 801caf4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801caf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cafa:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801cafe:	fb00 9003 	mla	r0, r0, r3, r9
 801cb02:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801cb04:	10e1      	asrs	r1, r4, #3
 801cb06:	fb13 f907 	smulbb	r9, r3, r7
 801cb0a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cb0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb10:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801cb14:	fb01 9103 	mla	r1, r1, r3, r9
 801cb18:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cb1a:	00e4      	lsls	r4, r4, #3
 801cb1c:	fb13 f707 	smulbb	r7, r3, r7
 801cb20:	b2e4      	uxtb	r4, r4
 801cb22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb24:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801cb28:	fb04 7403 	mla	r4, r4, r3, r7
 801cb2c:	b280      	uxth	r0, r0
 801cb2e:	b2a4      	uxth	r4, r4
 801cb30:	1c43      	adds	r3, r0, #1
 801cb32:	f104 0901 	add.w	r9, r4, #1
 801cb36:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801cb3a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801cb3e:	b289      	uxth	r1, r1
 801cb40:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801cb44:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801cb48:	ea49 0000 	orr.w	r0, r9, r0
 801cb4c:	f101 0901 	add.w	r9, r1, #1
 801cb50:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801cb54:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cb58:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cb5c:	ea40 0009 	orr.w	r0, r0, r9
 801cb60:	f8ac 0000 	strh.w	r0, [ip]
 801cb64:	4446      	add	r6, r8
 801cb66:	b2b6      	uxth	r6, r6
 801cb68:	2e07      	cmp	r6, #7
 801cb6a:	bf81      	itttt	hi
 801cb6c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801cb6e:	785a      	ldrbhi	r2, [r3, #1]
 801cb70:	3301      	addhi	r3, #1
 801cb72:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801cb74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cb76:	bf9a      	itte	ls
 801cb78:	fa42 f208 	asrls.w	r2, r2, r8
 801cb7c:	b2d2      	uxtbls	r2, r2
 801cb7e:	2600      	movhi	r6, #0
 801cb80:	449c      	add	ip, r3
 801cb82:	e792      	b.n	801caaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801cb84:	441c      	add	r4, r3
 801cb86:	b224      	sxth	r4, r4
 801cb88:	e6d5      	b.n	801c936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801cb8a:	f1ba 0f01 	cmp.w	sl, #1
 801cb8e:	f47f af0c 	bne.w	801c9aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cb92:	f1bb 0f01 	cmp.w	fp, #1
 801cb96:	f47f af08 	bne.w	801c9aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cb9a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801cc5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801cb9e:	f8db 0000 	ldr.w	r0, [fp]
 801cba2:	6803      	ldr	r3, [r0, #0]
 801cba4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cba6:	4798      	blx	r3
 801cba8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801cbac:	465a      	mov	r2, fp
 801cbae:	d006      	beq.n	801cbbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801cbb0:	f1b8 0f04 	cmp.w	r8, #4
 801cbb4:	d140      	bne.n	801cc38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801cbb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cbb8:	3300      	adds	r3, #0
 801cbba:	bf18      	it	ne
 801cbbc:	2301      	movne	r3, #1
 801cbbe:	0580      	lsls	r0, r0, #22
 801cbc0:	d56e      	bpl.n	801cca0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801cbc2:	f1b8 0f08 	cmp.w	r8, #8
 801cbc6:	d16b      	bne.n	801cca0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801cbc8:	2b00      	cmp	r3, #0
 801cbca:	bf0c      	ite	eq
 801cbcc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801cbd0:	f44f 7180 	movne.w	r1, #256	; 0x100
 801cbd4:	2d00      	cmp	r5, #0
 801cbd6:	f47f aee8 	bne.w	801c9aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cbda:	2e00      	cmp	r6, #0
 801cbdc:	f47f aee5 	bne.w	801c9aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cbe0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801cbe2:	19e3      	adds	r3, r4, r7
 801cbe4:	4283      	cmp	r3, r0
 801cbe6:	f73f aee0 	bgt.w	801c9aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cbea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cbec:	980d      	ldr	r0, [sp, #52]	; 0x34
 801cbee:	444b      	add	r3, r9
 801cbf0:	4283      	cmp	r3, r0
 801cbf2:	f73f aeda 	bgt.w	801c9aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cbf6:	6810      	ldr	r0, [r2, #0]
 801cbf8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801cbfc:	6804      	ldr	r4, [r0, #0]
 801cbfe:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801cc02:	b2bf      	uxth	r7, r7
 801cc04:	f1b8 0f08 	cmp.w	r8, #8
 801cc08:	f04f 0500 	mov.w	r5, #0
 801cc0c:	bf18      	it	ne
 801cc0e:	3701      	addne	r7, #1
 801cc10:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801cc14:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cc16:	9104      	str	r1, [sp, #16]
 801cc18:	bf18      	it	ne
 801cc1a:	f027 0701 	bicne.w	r7, r7, #1
 801cc1e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801cc20:	bf18      	it	ne
 801cc22:	b2bf      	uxthne	r7, r7
 801cc24:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801cc28:	e9cd 7900 	strd	r7, r9, [sp]
 801cc2c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801cc2e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801cc30:	47a0      	blx	r4
 801cc32:	b019      	add	sp, #100	; 0x64
 801cc34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc38:	2300      	movs	r3, #0
 801cc3a:	e7c0      	b.n	801cbbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801cc3c:	2208      	movs	r2, #8
 801cc3e:	fb92 f3f8 	sdiv	r3, r2, r8
 801cc42:	1e5a      	subs	r2, r3, #1
 801cc44:	443a      	add	r2, r7
 801cc46:	fb92 f2f3 	sdiv	r2, r2, r3
 801cc4a:	fb12 f203 	smulbb	r2, r2, r3
 801cc4e:	b292      	uxth	r2, r2
 801cc50:	e6b0      	b.n	801c9b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801cc52:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801cc54:	e6ec      	b.n	801ca30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801cc56:	bf00      	nop
 801cc58:	200137b4 	.word	0x200137b4
 801cc5c:	200137bc 	.word	0x200137bc
 801cc60:	200137b6 	.word	0x200137b6
 801cc64:	00fff800 	.word	0x00fff800
 801cc68:	9810      	ldr	r0, [sp, #64]	; 0x40
 801cc6a:	e779      	b.n	801cb60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801cc6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cc6e:	b153      	cbz	r3, 801cc86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801cc70:	441e      	add	r6, r3
 801cc72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cc74:	b2b6      	uxth	r6, r6
 801cc76:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801cc7a:	f006 0607 	and.w	r6, r6, #7
 801cc7e:	781a      	ldrb	r2, [r3, #0]
 801cc80:	9328      	str	r3, [sp, #160]	; 0xa0
 801cc82:	4132      	asrs	r2, r6
 801cc84:	b2d2      	uxtb	r2, r2
 801cc86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cc88:	445b      	add	r3, fp
 801cc8a:	930a      	str	r3, [sp, #40]	; 0x28
 801cc8c:	e706      	b.n	801ca9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801cc8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cc90:	2b00      	cmp	r3, #0
 801cc92:	d1ce      	bne.n	801cc32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801cc94:	4b05      	ldr	r3, [pc, #20]	; (801ccac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801cc96:	6818      	ldr	r0, [r3, #0]
 801cc98:	6803      	ldr	r3, [r0, #0]
 801cc9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc9c:	4798      	blx	r3
 801cc9e:	e7c8      	b.n	801cc32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801cca0:	2b00      	cmp	r3, #0
 801cca2:	f43f ae82 	beq.w	801c9aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801cca6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801ccaa:	e793      	b.n	801cbd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ccac:	200137bc 	.word	0x200137bc

0801ccb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801ccb0:	b538      	push	{r3, r4, r5, lr}
 801ccb2:	4c15      	ldr	r4, [pc, #84]	; (801cd08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801ccb4:	7823      	ldrb	r3, [r4, #0]
 801ccb6:	f3bf 8f5b 	dmb	ish
 801ccba:	07da      	lsls	r2, r3, #31
 801ccbc:	4605      	mov	r5, r0
 801ccbe:	d40b      	bmi.n	801ccd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ccc0:	4620      	mov	r0, r4
 801ccc2:	f009 fdbe 	bl	8026842 <__cxa_guard_acquire>
 801ccc6:	b138      	cbz	r0, 801ccd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ccc8:	4620      	mov	r0, r4
 801ccca:	f009 fdc6 	bl	802685a <__cxa_guard_release>
 801ccce:	4a0f      	ldr	r2, [pc, #60]	; (801cd0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ccd0:	490f      	ldr	r1, [pc, #60]	; (801cd10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801ccd2:	4810      	ldr	r0, [pc, #64]	; (801cd14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801ccd4:	f009 fdae 	bl	8026834 <__aeabi_atexit>
 801ccd8:	4c0f      	ldr	r4, [pc, #60]	; (801cd18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801ccda:	7823      	ldrb	r3, [r4, #0]
 801ccdc:	f3bf 8f5b 	dmb	ish
 801cce0:	07db      	lsls	r3, r3, #31
 801cce2:	d40b      	bmi.n	801ccfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801cce4:	4620      	mov	r0, r4
 801cce6:	f009 fdac 	bl	8026842 <__cxa_guard_acquire>
 801ccea:	b138      	cbz	r0, 801ccfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801ccec:	4620      	mov	r0, r4
 801ccee:	f009 fdb4 	bl	802685a <__cxa_guard_release>
 801ccf2:	4a06      	ldr	r2, [pc, #24]	; (801cd0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ccf4:	4909      	ldr	r1, [pc, #36]	; (801cd1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801ccf6:	480a      	ldr	r0, [pc, #40]	; (801cd20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801ccf8:	f009 fd9c 	bl	8026834 <__aeabi_atexit>
 801ccfc:	4b05      	ldr	r3, [pc, #20]	; (801cd14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801ccfe:	612b      	str	r3, [r5, #16]
 801cd00:	4b07      	ldr	r3, [pc, #28]	; (801cd20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801cd02:	616b      	str	r3, [r5, #20]
 801cd04:	bd38      	pop	{r3, r4, r5, pc}
 801cd06:	bf00      	nop
 801cd08:	2001389c 	.word	0x2001389c
 801cd0c:	20000000 	.word	0x20000000
 801cd10:	08019ab3 	.word	0x08019ab3
 801cd14:	200000d4 	.word	0x200000d4
 801cd18:	200138a0 	.word	0x200138a0
 801cd1c:	08019ab1 	.word	0x08019ab1
 801cd20:	200000d8 	.word	0x200000d8

0801cd24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801cd24:	b538      	push	{r3, r4, r5, lr}
 801cd26:	4c15      	ldr	r4, [pc, #84]	; (801cd7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801cd28:	7823      	ldrb	r3, [r4, #0]
 801cd2a:	f3bf 8f5b 	dmb	ish
 801cd2e:	07da      	lsls	r2, r3, #31
 801cd30:	4605      	mov	r5, r0
 801cd32:	d40b      	bmi.n	801cd4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801cd34:	4620      	mov	r0, r4
 801cd36:	f009 fd84 	bl	8026842 <__cxa_guard_acquire>
 801cd3a:	b138      	cbz	r0, 801cd4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801cd3c:	4620      	mov	r0, r4
 801cd3e:	f009 fd8c 	bl	802685a <__cxa_guard_release>
 801cd42:	4a0f      	ldr	r2, [pc, #60]	; (801cd80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801cd44:	490f      	ldr	r1, [pc, #60]	; (801cd84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801cd46:	4810      	ldr	r0, [pc, #64]	; (801cd88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801cd48:	f009 fd74 	bl	8026834 <__aeabi_atexit>
 801cd4c:	4c0f      	ldr	r4, [pc, #60]	; (801cd8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801cd4e:	7823      	ldrb	r3, [r4, #0]
 801cd50:	f3bf 8f5b 	dmb	ish
 801cd54:	07db      	lsls	r3, r3, #31
 801cd56:	d40b      	bmi.n	801cd70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801cd58:	4620      	mov	r0, r4
 801cd5a:	f009 fd72 	bl	8026842 <__cxa_guard_acquire>
 801cd5e:	b138      	cbz	r0, 801cd70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801cd60:	4620      	mov	r0, r4
 801cd62:	f009 fd7a 	bl	802685a <__cxa_guard_release>
 801cd66:	4a06      	ldr	r2, [pc, #24]	; (801cd80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801cd68:	4909      	ldr	r1, [pc, #36]	; (801cd90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801cd6a:	480a      	ldr	r0, [pc, #40]	; (801cd94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801cd6c:	f009 fd62 	bl	8026834 <__aeabi_atexit>
 801cd70:	4b05      	ldr	r3, [pc, #20]	; (801cd88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801cd72:	60ab      	str	r3, [r5, #8]
 801cd74:	4b07      	ldr	r3, [pc, #28]	; (801cd94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801cd76:	60eb      	str	r3, [r5, #12]
 801cd78:	bd38      	pop	{r3, r4, r5, pc}
 801cd7a:	bf00      	nop
 801cd7c:	20013874 	.word	0x20013874
 801cd80:	20000000 	.word	0x20000000
 801cd84:	08019ab7 	.word	0x08019ab7
 801cd88:	200000ac 	.word	0x200000ac
 801cd8c:	20013878 	.word	0x20013878
 801cd90:	08019ab5 	.word	0x08019ab5
 801cd94:	200000b0 	.word	0x200000b0

0801cd98 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801cd98:	b510      	push	{r4, lr}
 801cd9a:	4604      	mov	r4, r0
 801cd9c:	f7ff ff88 	bl	801ccb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801cda0:	4620      	mov	r0, r4
 801cda2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cda6:	f7ff bfbd 	b.w	801cd24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801cdac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801cdac:	b538      	push	{r3, r4, r5, lr}
 801cdae:	4c15      	ldr	r4, [pc, #84]	; (801ce04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801cdb0:	7823      	ldrb	r3, [r4, #0]
 801cdb2:	f3bf 8f5b 	dmb	ish
 801cdb6:	07da      	lsls	r2, r3, #31
 801cdb8:	4605      	mov	r5, r0
 801cdba:	d40b      	bmi.n	801cdd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801cdbc:	4620      	mov	r0, r4
 801cdbe:	f009 fd40 	bl	8026842 <__cxa_guard_acquire>
 801cdc2:	b138      	cbz	r0, 801cdd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801cdc4:	4620      	mov	r0, r4
 801cdc6:	f009 fd48 	bl	802685a <__cxa_guard_release>
 801cdca:	4a0f      	ldr	r2, [pc, #60]	; (801ce08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801cdcc:	490f      	ldr	r1, [pc, #60]	; (801ce0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801cdce:	4810      	ldr	r0, [pc, #64]	; (801ce10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801cdd0:	f009 fd30 	bl	8026834 <__aeabi_atexit>
 801cdd4:	4c0f      	ldr	r4, [pc, #60]	; (801ce14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801cdd6:	7823      	ldrb	r3, [r4, #0]
 801cdd8:	f3bf 8f5b 	dmb	ish
 801cddc:	07db      	lsls	r3, r3, #31
 801cdde:	d40b      	bmi.n	801cdf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801cde0:	4620      	mov	r0, r4
 801cde2:	f009 fd2e 	bl	8026842 <__cxa_guard_acquire>
 801cde6:	b138      	cbz	r0, 801cdf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801cde8:	4620      	mov	r0, r4
 801cdea:	f009 fd36 	bl	802685a <__cxa_guard_release>
 801cdee:	4a06      	ldr	r2, [pc, #24]	; (801ce08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801cdf0:	4909      	ldr	r1, [pc, #36]	; (801ce18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801cdf2:	480a      	ldr	r0, [pc, #40]	; (801ce1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801cdf4:	f009 fd1e 	bl	8026834 <__aeabi_atexit>
 801cdf8:	4b05      	ldr	r3, [pc, #20]	; (801ce10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801cdfa:	622b      	str	r3, [r5, #32]
 801cdfc:	4b07      	ldr	r3, [pc, #28]	; (801ce1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801cdfe:	626b      	str	r3, [r5, #36]	; 0x24
 801ce00:	bd38      	pop	{r3, r4, r5, pc}
 801ce02:	bf00      	nop
 801ce04:	200138a4 	.word	0x200138a4
 801ce08:	20000000 	.word	0x20000000
 801ce0c:	08019aab 	.word	0x08019aab
 801ce10:	200000dc 	.word	0x200000dc
 801ce14:	200138a8 	.word	0x200138a8
 801ce18:	08019aa9 	.word	0x08019aa9
 801ce1c:	200000e0 	.word	0x200000e0

0801ce20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801ce20:	b538      	push	{r3, r4, r5, lr}
 801ce22:	4c15      	ldr	r4, [pc, #84]	; (801ce78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801ce24:	7823      	ldrb	r3, [r4, #0]
 801ce26:	f3bf 8f5b 	dmb	ish
 801ce2a:	07da      	lsls	r2, r3, #31
 801ce2c:	4605      	mov	r5, r0
 801ce2e:	d40b      	bmi.n	801ce48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ce30:	4620      	mov	r0, r4
 801ce32:	f009 fd06 	bl	8026842 <__cxa_guard_acquire>
 801ce36:	b138      	cbz	r0, 801ce48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ce38:	4620      	mov	r0, r4
 801ce3a:	f009 fd0e 	bl	802685a <__cxa_guard_release>
 801ce3e:	4a0f      	ldr	r2, [pc, #60]	; (801ce7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801ce40:	490f      	ldr	r1, [pc, #60]	; (801ce80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801ce42:	4810      	ldr	r0, [pc, #64]	; (801ce84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ce44:	f009 fcf6 	bl	8026834 <__aeabi_atexit>
 801ce48:	4c0f      	ldr	r4, [pc, #60]	; (801ce88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801ce4a:	7823      	ldrb	r3, [r4, #0]
 801ce4c:	f3bf 8f5b 	dmb	ish
 801ce50:	07db      	lsls	r3, r3, #31
 801ce52:	d40b      	bmi.n	801ce6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ce54:	4620      	mov	r0, r4
 801ce56:	f009 fcf4 	bl	8026842 <__cxa_guard_acquire>
 801ce5a:	b138      	cbz	r0, 801ce6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ce5c:	4620      	mov	r0, r4
 801ce5e:	f009 fcfc 	bl	802685a <__cxa_guard_release>
 801ce62:	4a06      	ldr	r2, [pc, #24]	; (801ce7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801ce64:	4909      	ldr	r1, [pc, #36]	; (801ce8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801ce66:	480a      	ldr	r0, [pc, #40]	; (801ce90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801ce68:	f009 fce4 	bl	8026834 <__aeabi_atexit>
 801ce6c:	4b05      	ldr	r3, [pc, #20]	; (801ce84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ce6e:	61ab      	str	r3, [r5, #24]
 801ce70:	4b07      	ldr	r3, [pc, #28]	; (801ce90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801ce72:	61eb      	str	r3, [r5, #28]
 801ce74:	bd38      	pop	{r3, r4, r5, pc}
 801ce76:	bf00      	nop
 801ce78:	2001387c 	.word	0x2001387c
 801ce7c:	20000000 	.word	0x20000000
 801ce80:	08019aaf 	.word	0x08019aaf
 801ce84:	200000b4 	.word	0x200000b4
 801ce88:	20013880 	.word	0x20013880
 801ce8c:	08019aad 	.word	0x08019aad
 801ce90:	200000b8 	.word	0x200000b8

0801ce94 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801ce94:	b510      	push	{r4, lr}
 801ce96:	4604      	mov	r4, r0
 801ce98:	f7ff ff88 	bl	801cdac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801ce9c:	4620      	mov	r0, r4
 801ce9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cea2:	f7ff bfbd 	b.w	801ce20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801cea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801cea8:	b538      	push	{r3, r4, r5, lr}
 801ceaa:	4c15      	ldr	r4, [pc, #84]	; (801cf00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801ceac:	7823      	ldrb	r3, [r4, #0]
 801ceae:	f3bf 8f5b 	dmb	ish
 801ceb2:	07da      	lsls	r2, r3, #31
 801ceb4:	4605      	mov	r5, r0
 801ceb6:	d40b      	bmi.n	801ced0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801ceb8:	4620      	mov	r0, r4
 801ceba:	f009 fcc2 	bl	8026842 <__cxa_guard_acquire>
 801cebe:	b138      	cbz	r0, 801ced0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801cec0:	4620      	mov	r0, r4
 801cec2:	f009 fcca 	bl	802685a <__cxa_guard_release>
 801cec6:	4a0f      	ldr	r2, [pc, #60]	; (801cf04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801cec8:	490f      	ldr	r1, [pc, #60]	; (801cf08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801ceca:	4810      	ldr	r0, [pc, #64]	; (801cf0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801cecc:	f009 fcb2 	bl	8026834 <__aeabi_atexit>
 801ced0:	4c0f      	ldr	r4, [pc, #60]	; (801cf10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801ced2:	7823      	ldrb	r3, [r4, #0]
 801ced4:	f3bf 8f5b 	dmb	ish
 801ced8:	07db      	lsls	r3, r3, #31
 801ceda:	d40b      	bmi.n	801cef4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801cedc:	4620      	mov	r0, r4
 801cede:	f009 fcb0 	bl	8026842 <__cxa_guard_acquire>
 801cee2:	b138      	cbz	r0, 801cef4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801cee4:	4620      	mov	r0, r4
 801cee6:	f009 fcb8 	bl	802685a <__cxa_guard_release>
 801ceea:	4a06      	ldr	r2, [pc, #24]	; (801cf04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801ceec:	4909      	ldr	r1, [pc, #36]	; (801cf14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801ceee:	480a      	ldr	r0, [pc, #40]	; (801cf18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801cef0:	f009 fca0 	bl	8026834 <__aeabi_atexit>
 801cef4:	4b05      	ldr	r3, [pc, #20]	; (801cf0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801cef6:	632b      	str	r3, [r5, #48]	; 0x30
 801cef8:	4b07      	ldr	r3, [pc, #28]	; (801cf18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801cefa:	636b      	str	r3, [r5, #52]	; 0x34
 801cefc:	bd38      	pop	{r3, r4, r5, pc}
 801cefe:	bf00      	nop
 801cf00:	200138b4 	.word	0x200138b4
 801cf04:	20000000 	.word	0x20000000
 801cf08:	08019aa3 	.word	0x08019aa3
 801cf0c:	200000ec 	.word	0x200000ec
 801cf10:	200138b8 	.word	0x200138b8
 801cf14:	08019aa1 	.word	0x08019aa1
 801cf18:	200000f0 	.word	0x200000f0

0801cf1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801cf1c:	b538      	push	{r3, r4, r5, lr}
 801cf1e:	4c15      	ldr	r4, [pc, #84]	; (801cf74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801cf20:	7823      	ldrb	r3, [r4, #0]
 801cf22:	f3bf 8f5b 	dmb	ish
 801cf26:	07da      	lsls	r2, r3, #31
 801cf28:	4605      	mov	r5, r0
 801cf2a:	d40b      	bmi.n	801cf44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801cf2c:	4620      	mov	r0, r4
 801cf2e:	f009 fc88 	bl	8026842 <__cxa_guard_acquire>
 801cf32:	b138      	cbz	r0, 801cf44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801cf34:	4620      	mov	r0, r4
 801cf36:	f009 fc90 	bl	802685a <__cxa_guard_release>
 801cf3a:	4a0f      	ldr	r2, [pc, #60]	; (801cf78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801cf3c:	490f      	ldr	r1, [pc, #60]	; (801cf7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801cf3e:	4810      	ldr	r0, [pc, #64]	; (801cf80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801cf40:	f009 fc78 	bl	8026834 <__aeabi_atexit>
 801cf44:	4c0f      	ldr	r4, [pc, #60]	; (801cf84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801cf46:	7823      	ldrb	r3, [r4, #0]
 801cf48:	f3bf 8f5b 	dmb	ish
 801cf4c:	07db      	lsls	r3, r3, #31
 801cf4e:	d40b      	bmi.n	801cf68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801cf50:	4620      	mov	r0, r4
 801cf52:	f009 fc76 	bl	8026842 <__cxa_guard_acquire>
 801cf56:	b138      	cbz	r0, 801cf68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801cf58:	4620      	mov	r0, r4
 801cf5a:	f009 fc7e 	bl	802685a <__cxa_guard_release>
 801cf5e:	4a06      	ldr	r2, [pc, #24]	; (801cf78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801cf60:	4909      	ldr	r1, [pc, #36]	; (801cf88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801cf62:	480a      	ldr	r0, [pc, #40]	; (801cf8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801cf64:	f009 fc66 	bl	8026834 <__aeabi_atexit>
 801cf68:	4b05      	ldr	r3, [pc, #20]	; (801cf80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801cf6a:	62ab      	str	r3, [r5, #40]	; 0x28
 801cf6c:	4b07      	ldr	r3, [pc, #28]	; (801cf8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801cf6e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801cf70:	bd38      	pop	{r3, r4, r5, pc}
 801cf72:	bf00      	nop
 801cf74:	20013884 	.word	0x20013884
 801cf78:	20000000 	.word	0x20000000
 801cf7c:	08019aa7 	.word	0x08019aa7
 801cf80:	200000bc 	.word	0x200000bc
 801cf84:	20013888 	.word	0x20013888
 801cf88:	08019aa5 	.word	0x08019aa5
 801cf8c:	200000c0 	.word	0x200000c0

0801cf90 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801cf90:	b510      	push	{r4, lr}
 801cf92:	4604      	mov	r4, r0
 801cf94:	f7ff ff88 	bl	801cea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801cf98:	4620      	mov	r0, r4
 801cf9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cf9e:	f7ff bfbd 	b.w	801cf1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801cfa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801cfa4:	b538      	push	{r3, r4, r5, lr}
 801cfa6:	4c15      	ldr	r4, [pc, #84]	; (801cffc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801cfa8:	7823      	ldrb	r3, [r4, #0]
 801cfaa:	f3bf 8f5b 	dmb	ish
 801cfae:	07da      	lsls	r2, r3, #31
 801cfb0:	4605      	mov	r5, r0
 801cfb2:	d40b      	bmi.n	801cfcc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801cfb4:	4620      	mov	r0, r4
 801cfb6:	f009 fc44 	bl	8026842 <__cxa_guard_acquire>
 801cfba:	b138      	cbz	r0, 801cfcc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801cfbc:	4620      	mov	r0, r4
 801cfbe:	f009 fc4c 	bl	802685a <__cxa_guard_release>
 801cfc2:	4a0f      	ldr	r2, [pc, #60]	; (801d000 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801cfc4:	490f      	ldr	r1, [pc, #60]	; (801d004 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801cfc6:	4810      	ldr	r0, [pc, #64]	; (801d008 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801cfc8:	f009 fc34 	bl	8026834 <__aeabi_atexit>
 801cfcc:	4c0f      	ldr	r4, [pc, #60]	; (801d00c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801cfce:	7823      	ldrb	r3, [r4, #0]
 801cfd0:	f3bf 8f5b 	dmb	ish
 801cfd4:	07db      	lsls	r3, r3, #31
 801cfd6:	d40b      	bmi.n	801cff0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801cfd8:	4620      	mov	r0, r4
 801cfda:	f009 fc32 	bl	8026842 <__cxa_guard_acquire>
 801cfde:	b138      	cbz	r0, 801cff0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801cfe0:	4620      	mov	r0, r4
 801cfe2:	f009 fc3a 	bl	802685a <__cxa_guard_release>
 801cfe6:	4a06      	ldr	r2, [pc, #24]	; (801d000 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801cfe8:	4909      	ldr	r1, [pc, #36]	; (801d010 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801cfea:	480a      	ldr	r0, [pc, #40]	; (801d014 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801cfec:	f009 fc22 	bl	8026834 <__aeabi_atexit>
 801cff0:	4b05      	ldr	r3, [pc, #20]	; (801d008 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801cff2:	652b      	str	r3, [r5, #80]	; 0x50
 801cff4:	4b07      	ldr	r3, [pc, #28]	; (801d014 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801cff6:	656b      	str	r3, [r5, #84]	; 0x54
 801cff8:	bd38      	pop	{r3, r4, r5, pc}
 801cffa:	bf00      	nop
 801cffc:	200138bc 	.word	0x200138bc
 801d000:	20000000 	.word	0x20000000
 801d004:	08019a93 	.word	0x08019a93
 801d008:	200000f4 	.word	0x200000f4
 801d00c:	200138c0 	.word	0x200138c0
 801d010:	08019a91 	.word	0x08019a91
 801d014:	200000f8 	.word	0x200000f8

0801d018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801d018:	b538      	push	{r3, r4, r5, lr}
 801d01a:	4c15      	ldr	r4, [pc, #84]	; (801d070 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801d01c:	7823      	ldrb	r3, [r4, #0]
 801d01e:	f3bf 8f5b 	dmb	ish
 801d022:	07da      	lsls	r2, r3, #31
 801d024:	4605      	mov	r5, r0
 801d026:	d40b      	bmi.n	801d040 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801d028:	4620      	mov	r0, r4
 801d02a:	f009 fc0a 	bl	8026842 <__cxa_guard_acquire>
 801d02e:	b138      	cbz	r0, 801d040 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801d030:	4620      	mov	r0, r4
 801d032:	f009 fc12 	bl	802685a <__cxa_guard_release>
 801d036:	4a0f      	ldr	r2, [pc, #60]	; (801d074 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801d038:	490f      	ldr	r1, [pc, #60]	; (801d078 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801d03a:	4810      	ldr	r0, [pc, #64]	; (801d07c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801d03c:	f009 fbfa 	bl	8026834 <__aeabi_atexit>
 801d040:	4c0f      	ldr	r4, [pc, #60]	; (801d080 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801d042:	7823      	ldrb	r3, [r4, #0]
 801d044:	f3bf 8f5b 	dmb	ish
 801d048:	07db      	lsls	r3, r3, #31
 801d04a:	d40b      	bmi.n	801d064 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801d04c:	4620      	mov	r0, r4
 801d04e:	f009 fbf8 	bl	8026842 <__cxa_guard_acquire>
 801d052:	b138      	cbz	r0, 801d064 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801d054:	4620      	mov	r0, r4
 801d056:	f009 fc00 	bl	802685a <__cxa_guard_release>
 801d05a:	4a06      	ldr	r2, [pc, #24]	; (801d074 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801d05c:	4909      	ldr	r1, [pc, #36]	; (801d084 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801d05e:	480a      	ldr	r0, [pc, #40]	; (801d088 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801d060:	f009 fbe8 	bl	8026834 <__aeabi_atexit>
 801d064:	4b05      	ldr	r3, [pc, #20]	; (801d07c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801d066:	64ab      	str	r3, [r5, #72]	; 0x48
 801d068:	4b07      	ldr	r3, [pc, #28]	; (801d088 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801d06a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801d06c:	bd38      	pop	{r3, r4, r5, pc}
 801d06e:	bf00      	nop
 801d070:	200138c4 	.word	0x200138c4
 801d074:	20000000 	.word	0x20000000
 801d078:	08019a97 	.word	0x08019a97
 801d07c:	200000fc 	.word	0x200000fc
 801d080:	200138c8 	.word	0x200138c8
 801d084:	08019a95 	.word	0x08019a95
 801d088:	20000100 	.word	0x20000100

0801d08c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801d08c:	b538      	push	{r3, r4, r5, lr}
 801d08e:	4c15      	ldr	r4, [pc, #84]	; (801d0e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801d090:	7823      	ldrb	r3, [r4, #0]
 801d092:	f3bf 8f5b 	dmb	ish
 801d096:	07da      	lsls	r2, r3, #31
 801d098:	4605      	mov	r5, r0
 801d09a:	d40b      	bmi.n	801d0b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801d09c:	4620      	mov	r0, r4
 801d09e:	f009 fbd0 	bl	8026842 <__cxa_guard_acquire>
 801d0a2:	b138      	cbz	r0, 801d0b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801d0a4:	4620      	mov	r0, r4
 801d0a6:	f009 fbd8 	bl	802685a <__cxa_guard_release>
 801d0aa:	4a0f      	ldr	r2, [pc, #60]	; (801d0e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801d0ac:	490f      	ldr	r1, [pc, #60]	; (801d0ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801d0ae:	4810      	ldr	r0, [pc, #64]	; (801d0f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801d0b0:	f009 fbc0 	bl	8026834 <__aeabi_atexit>
 801d0b4:	4c0f      	ldr	r4, [pc, #60]	; (801d0f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801d0b6:	7823      	ldrb	r3, [r4, #0]
 801d0b8:	f3bf 8f5b 	dmb	ish
 801d0bc:	07db      	lsls	r3, r3, #31
 801d0be:	d40b      	bmi.n	801d0d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801d0c0:	4620      	mov	r0, r4
 801d0c2:	f009 fbbe 	bl	8026842 <__cxa_guard_acquire>
 801d0c6:	b138      	cbz	r0, 801d0d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801d0c8:	4620      	mov	r0, r4
 801d0ca:	f009 fbc6 	bl	802685a <__cxa_guard_release>
 801d0ce:	4a06      	ldr	r2, [pc, #24]	; (801d0e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801d0d0:	4909      	ldr	r1, [pc, #36]	; (801d0f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801d0d2:	480a      	ldr	r0, [pc, #40]	; (801d0fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801d0d4:	f009 fbae 	bl	8026834 <__aeabi_atexit>
 801d0d8:	4b05      	ldr	r3, [pc, #20]	; (801d0f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801d0da:	642b      	str	r3, [r5, #64]	; 0x40
 801d0dc:	4b07      	ldr	r3, [pc, #28]	; (801d0fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801d0de:	646b      	str	r3, [r5, #68]	; 0x44
 801d0e0:	bd38      	pop	{r3, r4, r5, pc}
 801d0e2:	bf00      	nop
 801d0e4:	2001388c 	.word	0x2001388c
 801d0e8:	20000000 	.word	0x20000000
 801d0ec:	08019a9b 	.word	0x08019a9b
 801d0f0:	200000c4 	.word	0x200000c4
 801d0f4:	20013890 	.word	0x20013890
 801d0f8:	08019a99 	.word	0x08019a99
 801d0fc:	200000c8 	.word	0x200000c8

0801d100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801d100:	b538      	push	{r3, r4, r5, lr}
 801d102:	4c15      	ldr	r4, [pc, #84]	; (801d158 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801d104:	7823      	ldrb	r3, [r4, #0]
 801d106:	f3bf 8f5b 	dmb	ish
 801d10a:	07da      	lsls	r2, r3, #31
 801d10c:	4605      	mov	r5, r0
 801d10e:	d40b      	bmi.n	801d128 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801d110:	4620      	mov	r0, r4
 801d112:	f009 fb96 	bl	8026842 <__cxa_guard_acquire>
 801d116:	b138      	cbz	r0, 801d128 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801d118:	4620      	mov	r0, r4
 801d11a:	f009 fb9e 	bl	802685a <__cxa_guard_release>
 801d11e:	4a0f      	ldr	r2, [pc, #60]	; (801d15c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801d120:	490f      	ldr	r1, [pc, #60]	; (801d160 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801d122:	4810      	ldr	r0, [pc, #64]	; (801d164 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801d124:	f009 fb86 	bl	8026834 <__aeabi_atexit>
 801d128:	4c0f      	ldr	r4, [pc, #60]	; (801d168 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801d12a:	7823      	ldrb	r3, [r4, #0]
 801d12c:	f3bf 8f5b 	dmb	ish
 801d130:	07db      	lsls	r3, r3, #31
 801d132:	d40b      	bmi.n	801d14c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801d134:	4620      	mov	r0, r4
 801d136:	f009 fb84 	bl	8026842 <__cxa_guard_acquire>
 801d13a:	b138      	cbz	r0, 801d14c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801d13c:	4620      	mov	r0, r4
 801d13e:	f009 fb8c 	bl	802685a <__cxa_guard_release>
 801d142:	4a06      	ldr	r2, [pc, #24]	; (801d15c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801d144:	4909      	ldr	r1, [pc, #36]	; (801d16c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801d146:	480a      	ldr	r0, [pc, #40]	; (801d170 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801d148:	f009 fb74 	bl	8026834 <__aeabi_atexit>
 801d14c:	4b05      	ldr	r3, [pc, #20]	; (801d164 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801d14e:	63ab      	str	r3, [r5, #56]	; 0x38
 801d150:	4b07      	ldr	r3, [pc, #28]	; (801d170 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801d152:	63eb      	str	r3, [r5, #60]	; 0x3c
 801d154:	bd38      	pop	{r3, r4, r5, pc}
 801d156:	bf00      	nop
 801d158:	200138ac 	.word	0x200138ac
 801d15c:	20000000 	.word	0x20000000
 801d160:	08019a9f 	.word	0x08019a9f
 801d164:	200000e4 	.word	0x200000e4
 801d168:	200138b0 	.word	0x200138b0
 801d16c:	08019a9d 	.word	0x08019a9d
 801d170:	200000e8 	.word	0x200000e8

0801d174 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801d174:	b510      	push	{r4, lr}
 801d176:	4604      	mov	r4, r0
 801d178:	f7ff ff14 	bl	801cfa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801d17c:	4620      	mov	r0, r4
 801d17e:	f7ff ff85 	bl	801d08c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801d182:	4620      	mov	r0, r4
 801d184:	f7ff ff48 	bl	801d018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801d188:	4620      	mov	r0, r4
 801d18a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d18e:	f7ff bfb7 	b.w	801d100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801d194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801d194:	b538      	push	{r3, r4, r5, lr}
 801d196:	4c15      	ldr	r4, [pc, #84]	; (801d1ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801d198:	7823      	ldrb	r3, [r4, #0]
 801d19a:	f3bf 8f5b 	dmb	ish
 801d19e:	07da      	lsls	r2, r3, #31
 801d1a0:	4605      	mov	r5, r0
 801d1a2:	d40b      	bmi.n	801d1bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801d1a4:	4620      	mov	r0, r4
 801d1a6:	f009 fb4c 	bl	8026842 <__cxa_guard_acquire>
 801d1aa:	b138      	cbz	r0, 801d1bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801d1ac:	4620      	mov	r0, r4
 801d1ae:	f009 fb54 	bl	802685a <__cxa_guard_release>
 801d1b2:	4a0f      	ldr	r2, [pc, #60]	; (801d1f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801d1b4:	490f      	ldr	r1, [pc, #60]	; (801d1f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801d1b6:	4810      	ldr	r0, [pc, #64]	; (801d1f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801d1b8:	f009 fb3c 	bl	8026834 <__aeabi_atexit>
 801d1bc:	4c0f      	ldr	r4, [pc, #60]	; (801d1fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801d1be:	7823      	ldrb	r3, [r4, #0]
 801d1c0:	f3bf 8f5b 	dmb	ish
 801d1c4:	07db      	lsls	r3, r3, #31
 801d1c6:	d40b      	bmi.n	801d1e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801d1c8:	4620      	mov	r0, r4
 801d1ca:	f009 fb3a 	bl	8026842 <__cxa_guard_acquire>
 801d1ce:	b138      	cbz	r0, 801d1e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801d1d0:	4620      	mov	r0, r4
 801d1d2:	f009 fb42 	bl	802685a <__cxa_guard_release>
 801d1d6:	4a06      	ldr	r2, [pc, #24]	; (801d1f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801d1d8:	4909      	ldr	r1, [pc, #36]	; (801d200 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801d1da:	480a      	ldr	r0, [pc, #40]	; (801d204 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801d1dc:	f009 fb2a 	bl	8026834 <__aeabi_atexit>
 801d1e0:	4b05      	ldr	r3, [pc, #20]	; (801d1f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801d1e2:	662b      	str	r3, [r5, #96]	; 0x60
 801d1e4:	4b07      	ldr	r3, [pc, #28]	; (801d204 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801d1e6:	666b      	str	r3, [r5, #100]	; 0x64
 801d1e8:	bd38      	pop	{r3, r4, r5, pc}
 801d1ea:	bf00      	nop
 801d1ec:	20013894 	.word	0x20013894
 801d1f0:	20000000 	.word	0x20000000
 801d1f4:	08019a8b 	.word	0x08019a8b
 801d1f8:	200000cc 	.word	0x200000cc
 801d1fc:	20013898 	.word	0x20013898
 801d200:	08019a89 	.word	0x08019a89
 801d204:	200000d0 	.word	0x200000d0

0801d208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801d208:	b538      	push	{r3, r4, r5, lr}
 801d20a:	4c15      	ldr	r4, [pc, #84]	; (801d260 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801d20c:	7823      	ldrb	r3, [r4, #0]
 801d20e:	f3bf 8f5b 	dmb	ish
 801d212:	07da      	lsls	r2, r3, #31
 801d214:	4605      	mov	r5, r0
 801d216:	d40b      	bmi.n	801d230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801d218:	4620      	mov	r0, r4
 801d21a:	f009 fb12 	bl	8026842 <__cxa_guard_acquire>
 801d21e:	b138      	cbz	r0, 801d230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801d220:	4620      	mov	r0, r4
 801d222:	f009 fb1a 	bl	802685a <__cxa_guard_release>
 801d226:	4a0f      	ldr	r2, [pc, #60]	; (801d264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801d228:	490f      	ldr	r1, [pc, #60]	; (801d268 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801d22a:	4810      	ldr	r0, [pc, #64]	; (801d26c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801d22c:	f009 fb02 	bl	8026834 <__aeabi_atexit>
 801d230:	4c0f      	ldr	r4, [pc, #60]	; (801d270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801d232:	7823      	ldrb	r3, [r4, #0]
 801d234:	f3bf 8f5b 	dmb	ish
 801d238:	07db      	lsls	r3, r3, #31
 801d23a:	d40b      	bmi.n	801d254 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801d23c:	4620      	mov	r0, r4
 801d23e:	f009 fb00 	bl	8026842 <__cxa_guard_acquire>
 801d242:	b138      	cbz	r0, 801d254 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801d244:	4620      	mov	r0, r4
 801d246:	f009 fb08 	bl	802685a <__cxa_guard_release>
 801d24a:	4a06      	ldr	r2, [pc, #24]	; (801d264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801d24c:	4909      	ldr	r1, [pc, #36]	; (801d274 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801d24e:	480a      	ldr	r0, [pc, #40]	; (801d278 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801d250:	f009 faf0 	bl	8026834 <__aeabi_atexit>
 801d254:	4b05      	ldr	r3, [pc, #20]	; (801d26c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801d256:	65ab      	str	r3, [r5, #88]	; 0x58
 801d258:	4b07      	ldr	r3, [pc, #28]	; (801d278 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801d25a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801d25c:	bd38      	pop	{r3, r4, r5, pc}
 801d25e:	bf00      	nop
 801d260:	2001386c 	.word	0x2001386c
 801d264:	20000000 	.word	0x20000000
 801d268:	08019a8f 	.word	0x08019a8f
 801d26c:	200000a4 	.word	0x200000a4
 801d270:	20013870 	.word	0x20013870
 801d274:	08019a8d 	.word	0x08019a8d
 801d278:	200000a8 	.word	0x200000a8

0801d27c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801d27c:	b510      	push	{r4, lr}
 801d27e:	4604      	mov	r4, r0
 801d280:	f7ff ff88 	bl	801d194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801d284:	4620      	mov	r0, r4
 801d286:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d28a:	f7ff bfbd 	b.w	801d208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801d290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801d290:	b538      	push	{r3, r4, r5, lr}
 801d292:	4c15      	ldr	r4, [pc, #84]	; (801d2e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801d294:	7823      	ldrb	r3, [r4, #0]
 801d296:	f3bf 8f5b 	dmb	ish
 801d29a:	07da      	lsls	r2, r3, #31
 801d29c:	4605      	mov	r5, r0
 801d29e:	d40b      	bmi.n	801d2b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801d2a0:	4620      	mov	r0, r4
 801d2a2:	f009 face 	bl	8026842 <__cxa_guard_acquire>
 801d2a6:	b138      	cbz	r0, 801d2b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801d2a8:	4620      	mov	r0, r4
 801d2aa:	f009 fad6 	bl	802685a <__cxa_guard_release>
 801d2ae:	4a0f      	ldr	r2, [pc, #60]	; (801d2ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801d2b0:	490f      	ldr	r1, [pc, #60]	; (801d2f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801d2b2:	4810      	ldr	r0, [pc, #64]	; (801d2f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801d2b4:	f009 fabe 	bl	8026834 <__aeabi_atexit>
 801d2b8:	4c0f      	ldr	r4, [pc, #60]	; (801d2f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801d2ba:	7823      	ldrb	r3, [r4, #0]
 801d2bc:	f3bf 8f5b 	dmb	ish
 801d2c0:	07db      	lsls	r3, r3, #31
 801d2c2:	d40b      	bmi.n	801d2dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801d2c4:	4620      	mov	r0, r4
 801d2c6:	f009 fabc 	bl	8026842 <__cxa_guard_acquire>
 801d2ca:	b138      	cbz	r0, 801d2dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801d2cc:	4620      	mov	r0, r4
 801d2ce:	f009 fac4 	bl	802685a <__cxa_guard_release>
 801d2d2:	4a06      	ldr	r2, [pc, #24]	; (801d2ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801d2d4:	4909      	ldr	r1, [pc, #36]	; (801d2fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801d2d6:	480a      	ldr	r0, [pc, #40]	; (801d300 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801d2d8:	f009 faac 	bl	8026834 <__aeabi_atexit>
 801d2dc:	4b05      	ldr	r3, [pc, #20]	; (801d2f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801d2de:	672b      	str	r3, [r5, #112]	; 0x70
 801d2e0:	4b07      	ldr	r3, [pc, #28]	; (801d300 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801d2e2:	676b      	str	r3, [r5, #116]	; 0x74
 801d2e4:	bd38      	pop	{r3, r4, r5, pc}
 801d2e6:	bf00      	nop
 801d2e8:	20013864 	.word	0x20013864
 801d2ec:	20000000 	.word	0x20000000
 801d2f0:	08019a83 	.word	0x08019a83
 801d2f4:	2000009c 	.word	0x2000009c
 801d2f8:	20013868 	.word	0x20013868
 801d2fc:	08019a81 	.word	0x08019a81
 801d300:	200000a0 	.word	0x200000a0

0801d304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801d304:	b538      	push	{r3, r4, r5, lr}
 801d306:	4c15      	ldr	r4, [pc, #84]	; (801d35c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801d308:	7823      	ldrb	r3, [r4, #0]
 801d30a:	f3bf 8f5b 	dmb	ish
 801d30e:	07da      	lsls	r2, r3, #31
 801d310:	4605      	mov	r5, r0
 801d312:	d40b      	bmi.n	801d32c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801d314:	4620      	mov	r0, r4
 801d316:	f009 fa94 	bl	8026842 <__cxa_guard_acquire>
 801d31a:	b138      	cbz	r0, 801d32c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801d31c:	4620      	mov	r0, r4
 801d31e:	f009 fa9c 	bl	802685a <__cxa_guard_release>
 801d322:	4a0f      	ldr	r2, [pc, #60]	; (801d360 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801d324:	490f      	ldr	r1, [pc, #60]	; (801d364 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801d326:	4810      	ldr	r0, [pc, #64]	; (801d368 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801d328:	f009 fa84 	bl	8026834 <__aeabi_atexit>
 801d32c:	4c0f      	ldr	r4, [pc, #60]	; (801d36c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801d32e:	7823      	ldrb	r3, [r4, #0]
 801d330:	f3bf 8f5b 	dmb	ish
 801d334:	07db      	lsls	r3, r3, #31
 801d336:	d40b      	bmi.n	801d350 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801d338:	4620      	mov	r0, r4
 801d33a:	f009 fa82 	bl	8026842 <__cxa_guard_acquire>
 801d33e:	b138      	cbz	r0, 801d350 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801d340:	4620      	mov	r0, r4
 801d342:	f009 fa8a 	bl	802685a <__cxa_guard_release>
 801d346:	4a06      	ldr	r2, [pc, #24]	; (801d360 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801d348:	4909      	ldr	r1, [pc, #36]	; (801d370 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801d34a:	480a      	ldr	r0, [pc, #40]	; (801d374 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801d34c:	f009 fa72 	bl	8026834 <__aeabi_atexit>
 801d350:	4b05      	ldr	r3, [pc, #20]	; (801d368 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801d352:	66ab      	str	r3, [r5, #104]	; 0x68
 801d354:	4b07      	ldr	r3, [pc, #28]	; (801d374 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801d356:	66eb      	str	r3, [r5, #108]	; 0x6c
 801d358:	bd38      	pop	{r3, r4, r5, pc}
 801d35a:	bf00      	nop
 801d35c:	2001385c 	.word	0x2001385c
 801d360:	20000000 	.word	0x20000000
 801d364:	08019a87 	.word	0x08019a87
 801d368:	20000094 	.word	0x20000094
 801d36c:	20013860 	.word	0x20013860
 801d370:	08019a85 	.word	0x08019a85
 801d374:	20000098 	.word	0x20000098

0801d378 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801d378:	b510      	push	{r4, lr}
 801d37a:	4604      	mov	r4, r0
 801d37c:	f7ff ff88 	bl	801d290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801d380:	4620      	mov	r0, r4
 801d382:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d386:	f7ff bfbd 	b.w	801d304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801d38a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801d38a:	b510      	push	{r4, lr}
 801d38c:	4604      	mov	r4, r0
 801d38e:	f7ff fff3 	bl	801d378 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801d392:	4620      	mov	r0, r4
 801d394:	f7ff ff72 	bl	801d27c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801d398:	4620      	mov	r0, r4
 801d39a:	f7ff fdf9 	bl	801cf90 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801d39e:	4620      	mov	r0, r4
 801d3a0:	f7ff fcfa 	bl	801cd98 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801d3a4:	4620      	mov	r0, r4
 801d3a6:	f7ff fd75 	bl	801ce94 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801d3aa:	4620      	mov	r0, r4
 801d3ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d3b0:	f7ff bee0 	b.w	801d174 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801d3b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801d3b4:	b538      	push	{r3, r4, r5, lr}
 801d3b6:	4c0b      	ldr	r4, [pc, #44]	; (801d3e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801d3b8:	7823      	ldrb	r3, [r4, #0]
 801d3ba:	f3bf 8f5b 	dmb	ish
 801d3be:	07db      	lsls	r3, r3, #31
 801d3c0:	4605      	mov	r5, r0
 801d3c2:	d40b      	bmi.n	801d3dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801d3c4:	4620      	mov	r0, r4
 801d3c6:	f009 fa3c 	bl	8026842 <__cxa_guard_acquire>
 801d3ca:	b138      	cbz	r0, 801d3dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801d3cc:	4620      	mov	r0, r4
 801d3ce:	f009 fa44 	bl	802685a <__cxa_guard_release>
 801d3d2:	4a05      	ldr	r2, [pc, #20]	; (801d3e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801d3d4:	4905      	ldr	r1, [pc, #20]	; (801d3ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801d3d6:	4806      	ldr	r0, [pc, #24]	; (801d3f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801d3d8:	f009 fa2c 	bl	8026834 <__aeabi_atexit>
 801d3dc:	4b04      	ldr	r3, [pc, #16]	; (801d3f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801d3de:	67ab      	str	r3, [r5, #120]	; 0x78
 801d3e0:	bd38      	pop	{r3, r4, r5, pc}
 801d3e2:	bf00      	nop
 801d3e4:	20013850 	.word	0x20013850
 801d3e8:	20000000 	.word	0x20000000
 801d3ec:	08019a7f 	.word	0x08019a7f
 801d3f0:	2000008c 	.word	0x2000008c

0801d3f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801d3f4:	b538      	push	{r3, r4, r5, lr}
 801d3f6:	4c0b      	ldr	r4, [pc, #44]	; (801d424 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801d3f8:	7823      	ldrb	r3, [r4, #0]
 801d3fa:	f3bf 8f5b 	dmb	ish
 801d3fe:	07db      	lsls	r3, r3, #31
 801d400:	4605      	mov	r5, r0
 801d402:	d40b      	bmi.n	801d41c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801d404:	4620      	mov	r0, r4
 801d406:	f009 fa1c 	bl	8026842 <__cxa_guard_acquire>
 801d40a:	b138      	cbz	r0, 801d41c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801d40c:	4620      	mov	r0, r4
 801d40e:	f009 fa24 	bl	802685a <__cxa_guard_release>
 801d412:	4a05      	ldr	r2, [pc, #20]	; (801d428 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801d414:	4905      	ldr	r1, [pc, #20]	; (801d42c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801d416:	4806      	ldr	r0, [pc, #24]	; (801d430 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801d418:	f009 fa0c 	bl	8026834 <__aeabi_atexit>
 801d41c:	4b04      	ldr	r3, [pc, #16]	; (801d430 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801d41e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801d420:	bd38      	pop	{r3, r4, r5, pc}
 801d422:	bf00      	nop
 801d424:	20013854 	.word	0x20013854
 801d428:	20000000 	.word	0x20000000
 801d42c:	08019a7d 	.word	0x08019a7d
 801d430:	20000090 	.word	0x20000090

0801d434 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801d434:	b570      	push	{r4, r5, r6, lr}
 801d436:	4d0d      	ldr	r5, [pc, #52]	; (801d46c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801d438:	4c0d      	ldr	r4, [pc, #52]	; (801d470 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801d43a:	782b      	ldrb	r3, [r5, #0]
 801d43c:	f3bf 8f5b 	dmb	ish
 801d440:	f013 0f01 	tst.w	r3, #1
 801d444:	4606      	mov	r6, r0
 801d446:	d10d      	bne.n	801d464 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801d448:	4628      	mov	r0, r5
 801d44a:	f009 f9fa 	bl	8026842 <__cxa_guard_acquire>
 801d44e:	b148      	cbz	r0, 801d464 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801d450:	4b08      	ldr	r3, [pc, #32]	; (801d474 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801d452:	6023      	str	r3, [r4, #0]
 801d454:	4628      	mov	r0, r5
 801d456:	f009 fa00 	bl	802685a <__cxa_guard_release>
 801d45a:	4a07      	ldr	r2, [pc, #28]	; (801d478 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801d45c:	4907      	ldr	r1, [pc, #28]	; (801d47c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801d45e:	4620      	mov	r0, r4
 801d460:	f009 f9e8 	bl	8026834 <__aeabi_atexit>
 801d464:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801d468:	bd70      	pop	{r4, r5, r6, pc}
 801d46a:	bf00      	nop
 801d46c:	20013858 	.word	0x20013858
 801d470:	200138cc 	.word	0x200138cc
 801d474:	0802b908 	.word	0x0802b908
 801d478:	20000000 	.word	0x20000000
 801d47c:	08019a7b 	.word	0x08019a7b

0801d480 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801d480:	b510      	push	{r4, lr}
 801d482:	4604      	mov	r4, r0
 801d484:	f7ff ff96 	bl	801d3b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801d488:	4620      	mov	r0, r4
 801d48a:	f7ff ffb3 	bl	801d3f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801d48e:	4620      	mov	r0, r4
 801d490:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d494:	f7ff bfce 	b.w	801d434 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801d498 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801d498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d49c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801d4a0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801d4a4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801d4a8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801d4ac:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801d4b0:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801d4b4:	8808      	ldrh	r0, [r1, #0]
 801d4b6:	fb05 4c0e 	mla	ip, r5, lr, r4
 801d4ba:	2d00      	cmp	r5, #0
 801d4bc:	eb02 0a0c 	add.w	sl, r2, ip
 801d4c0:	f2c0 80b0 	blt.w	801d624 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801d4c4:	45ab      	cmp	fp, r5
 801d4c6:	f340 80ad 	ble.w	801d624 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801d4ca:	2c00      	cmp	r4, #0
 801d4cc:	f2c0 80a8 	blt.w	801d620 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801d4d0:	45a6      	cmp	lr, r4
 801d4d2:	f340 80a5 	ble.w	801d620 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801d4d6:	f812 200c 	ldrb.w	r2, [r2, ip]
 801d4da:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801d4de:	1c62      	adds	r2, r4, #1
 801d4e0:	f100 80a3 	bmi.w	801d62a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d4e4:	4596      	cmp	lr, r2
 801d4e6:	f340 80a0 	ble.w	801d62a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d4ea:	f1b9 0f00 	cmp.w	r9, #0
 801d4ee:	f000 809c 	beq.w	801d62a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d4f2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d4f6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801d4fa:	3501      	adds	r5, #1
 801d4fc:	f100 8099 	bmi.w	801d632 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d500:	45ab      	cmp	fp, r5
 801d502:	f340 8096 	ble.w	801d632 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d506:	2f00      	cmp	r7, #0
 801d508:	f000 8093 	beq.w	801d632 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d50c:	2c00      	cmp	r4, #0
 801d50e:	f2c0 808e 	blt.w	801d62e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801d512:	45a6      	cmp	lr, r4
 801d514:	f340 808b 	ble.w	801d62e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801d518:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801d51c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801d520:	3401      	adds	r4, #1
 801d522:	f100 8089 	bmi.w	801d638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d526:	45a6      	cmp	lr, r4
 801d528:	f340 8086 	ble.w	801d638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d52c:	f1b9 0f00 	cmp.w	r9, #0
 801d530:	f000 8082 	beq.w	801d638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d534:	44d6      	add	lr, sl
 801d536:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d53a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801d53e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d542:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d546:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d54a:	fb19 fe07 	smulbb	lr, r9, r7
 801d54e:	ea44 0808 	orr.w	r8, r4, r8
 801d552:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d556:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d55a:	f1c7 0210 	rsb	r2, r7, #16
 801d55e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d562:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d566:	ea44 0c0c 	orr.w	ip, r4, ip
 801d56a:	eba2 0209 	sub.w	r2, r2, r9
 801d56e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d572:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d576:	fb04 f40c 	mul.w	r4, r4, ip
 801d57a:	fb02 4808 	mla	r8, r2, r8, r4
 801d57e:	041a      	lsls	r2, r3, #16
 801d580:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d584:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d588:	4313      	orrs	r3, r2
 801d58a:	042a      	lsls	r2, r5, #16
 801d58c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d590:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d594:	fb0e 8303 	mla	r3, lr, r3, r8
 801d598:	432a      	orrs	r2, r5
 801d59a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d59e:	fb07 3202 	mla	r2, r7, r2, r3
 801d5a2:	0d53      	lsrs	r3, r2, #21
 801d5a4:	0952      	lsrs	r2, r2, #5
 801d5a6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d5aa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d5ae:	431a      	orrs	r2, r3
 801d5b0:	b293      	uxth	r3, r2
 801d5b2:	b2b4      	uxth	r4, r6
 801d5b4:	1202      	asrs	r2, r0, #8
 801d5b6:	43f6      	mvns	r6, r6
 801d5b8:	b2f6      	uxtb	r6, r6
 801d5ba:	121d      	asrs	r5, r3, #8
 801d5bc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d5c0:	fb12 f206 	smulbb	r2, r2, r6
 801d5c4:	10c7      	asrs	r7, r0, #3
 801d5c6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d5ca:	00c0      	lsls	r0, r0, #3
 801d5cc:	fb05 2504 	mla	r5, r5, r4, r2
 801d5d0:	b2c0      	uxtb	r0, r0
 801d5d2:	10da      	asrs	r2, r3, #3
 801d5d4:	00db      	lsls	r3, r3, #3
 801d5d6:	b2db      	uxtb	r3, r3
 801d5d8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d5dc:	fb10 f006 	smulbb	r0, r0, r6
 801d5e0:	b2ad      	uxth	r5, r5
 801d5e2:	fb03 0004 	mla	r0, r3, r4, r0
 801d5e6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d5ea:	fb17 f706 	smulbb	r7, r7, r6
 801d5ee:	b280      	uxth	r0, r0
 801d5f0:	1c6b      	adds	r3, r5, #1
 801d5f2:	fb02 7204 	mla	r2, r2, r4, r7
 801d5f6:	b292      	uxth	r2, r2
 801d5f8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d5fc:	1c43      	adds	r3, r0, #1
 801d5fe:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d602:	1c50      	adds	r0, r2, #1
 801d604:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d608:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d60c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d610:	0952      	lsrs	r2, r2, #5
 801d612:	432b      	orrs	r3, r5
 801d614:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d618:	4313      	orrs	r3, r2
 801d61a:	800b      	strh	r3, [r1, #0]
 801d61c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d620:	4680      	mov	r8, r0
 801d622:	e75c      	b.n	801d4de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801d624:	4684      	mov	ip, r0
 801d626:	4680      	mov	r8, r0
 801d628:	e767      	b.n	801d4fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801d62a:	4684      	mov	ip, r0
 801d62c:	e765      	b.n	801d4fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801d62e:	4605      	mov	r5, r0
 801d630:	e776      	b.n	801d520 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801d632:	4603      	mov	r3, r0
 801d634:	4605      	mov	r5, r0
 801d636:	e782      	b.n	801d53e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801d638:	4603      	mov	r3, r0
 801d63a:	e780      	b.n	801d53e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801d63c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d63c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d640:	b099      	sub	sp, #100	; 0x64
 801d642:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801d646:	9215      	str	r2, [sp, #84]	; 0x54
 801d648:	9309      	str	r3, [sp, #36]	; 0x24
 801d64a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801d64c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801d650:	930d      	str	r3, [sp, #52]	; 0x34
 801d652:	910c      	str	r1, [sp, #48]	; 0x30
 801d654:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801d658:	9016      	str	r0, [sp, #88]	; 0x58
 801d65a:	6850      	ldr	r0, [r2, #4]
 801d65c:	6812      	ldr	r2, [r2, #0]
 801d65e:	fb00 1303 	mla	r3, r0, r3, r1
 801d662:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801d666:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d668:	681b      	ldr	r3, [r3, #0]
 801d66a:	930b      	str	r3, [sp, #44]	; 0x2c
 801d66c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d66e:	685e      	ldr	r6, [r3, #4]
 801d670:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d672:	43db      	mvns	r3, r3
 801d674:	b2db      	uxtb	r3, r3
 801d676:	3604      	adds	r6, #4
 801d678:	930a      	str	r3, [sp, #40]	; 0x28
 801d67a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d67c:	2b00      	cmp	r3, #0
 801d67e:	dc03      	bgt.n	801d688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801d680:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801d682:	2b00      	cmp	r3, #0
 801d684:	f340 8225 	ble.w	801dad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801d688:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d68a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d68e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d692:	1e48      	subs	r0, r1, #1
 801d694:	1e57      	subs	r7, r2, #1
 801d696:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d698:	2b00      	cmp	r3, #0
 801d69a:	f340 80e3 	ble.w	801d864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d69e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801d6a2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d6a6:	d406      	bmi.n	801d6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d6a8:	4584      	cmp	ip, r0
 801d6aa:	da04      	bge.n	801d6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d6ac:	2b00      	cmp	r3, #0
 801d6ae:	db02      	blt.n	801d6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d6b0:	42bb      	cmp	r3, r7
 801d6b2:	f2c0 80d8 	blt.w	801d866 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801d6b6:	f11c 0c01 	adds.w	ip, ip, #1
 801d6ba:	f100 80c9 	bmi.w	801d850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d6be:	4561      	cmp	r1, ip
 801d6c0:	f2c0 80c6 	blt.w	801d850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d6c4:	3301      	adds	r3, #1
 801d6c6:	f100 80c3 	bmi.w	801d850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d6ca:	429a      	cmp	r2, r3
 801d6cc:	f2c0 80c0 	blt.w	801d850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d6d0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801d6d4:	4647      	mov	r7, r8
 801d6d6:	f1bb 0f00 	cmp.w	fp, #0
 801d6da:	f340 80e3 	ble.w	801d8a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801d6de:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801d6e0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d6e2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d6e6:	689b      	ldr	r3, [r3, #8]
 801d6e8:	ea5f 422a 	movs.w	r2, sl, asr #16
 801d6ec:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d6f0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801d6f4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d6f8:	f100 8121 	bmi.w	801d93e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d6fc:	f103 39ff 	add.w	r9, r3, #4294967295
 801d700:	454a      	cmp	r2, r9
 801d702:	f280 811c 	bge.w	801d93e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d706:	f1bc 0f00 	cmp.w	ip, #0
 801d70a:	f2c0 8118 	blt.w	801d93e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d70e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801d712:	45cc      	cmp	ip, r9
 801d714:	f280 8113 	bge.w	801d93e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d718:	b21b      	sxth	r3, r3
 801d71a:	fb0c 2203 	mla	r2, ip, r3, r2
 801d71e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d720:	eb04 0902 	add.w	r9, r4, r2
 801d724:	5ca2      	ldrb	r2, [r4, r2]
 801d726:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801d72a:	2800      	cmp	r0, #0
 801d72c:	f000 80fe 	beq.w	801d92c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d730:	f899 2001 	ldrb.w	r2, [r9, #1]
 801d734:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801d738:	9211      	str	r2, [sp, #68]	; 0x44
 801d73a:	b151      	cbz	r1, 801d752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d73c:	eb09 0203 	add.w	r2, r9, r3
 801d740:	f819 3003 	ldrb.w	r3, [r9, r3]
 801d744:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d748:	930f      	str	r3, [sp, #60]	; 0x3c
 801d74a:	7853      	ldrb	r3, [r2, #1]
 801d74c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d750:	9312      	str	r3, [sp, #72]	; 0x48
 801d752:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d754:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d756:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d75a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d75e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d762:	ea4c 0c03 	orr.w	ip, ip, r3
 801d766:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d768:	041b      	lsls	r3, r3, #16
 801d76a:	fb10 f201 	smulbb	r2, r0, r1
 801d76e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801d772:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d776:	10d2      	asrs	r2, r2, #3
 801d778:	4323      	orrs	r3, r4
 801d77a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801d77e:	4353      	muls	r3, r2
 801d780:	fb09 330c 	mla	r3, r9, ip, r3
 801d784:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801d788:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d78c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d790:	ea4c 0e0e 	orr.w	lr, ip, lr
 801d794:	f1c1 0c10 	rsb	ip, r1, #16
 801d798:	ebac 0c00 	sub.w	ip, ip, r0
 801d79c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d7a0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801d7a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d7a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d7a8:	0418      	lsls	r0, r3, #16
 801d7aa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d7ae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d7b2:	4318      	orrs	r0, r3
 801d7b4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801d7b8:	fb02 c200 	mla	r2, r2, r0, ip
 801d7bc:	0d53      	lsrs	r3, r2, #21
 801d7be:	0952      	lsrs	r2, r2, #5
 801d7c0:	8838      	ldrh	r0, [r7, #0]
 801d7c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d7c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d7ca:	431a      	orrs	r2, r3
 801d7cc:	b292      	uxth	r2, r2
 801d7ce:	1201      	asrs	r1, r0, #8
 801d7d0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801d7d4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801d7d8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d7dc:	fb11 f104 	smulbb	r1, r1, r4
 801d7e0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d7e4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d7e8:	00c0      	lsls	r0, r0, #3
 801d7ea:	fb0c 1c03 	mla	ip, ip, r3, r1
 801d7ee:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d7f2:	10d1      	asrs	r1, r2, #3
 801d7f4:	b2c0      	uxtb	r0, r0
 801d7f6:	00d2      	lsls	r2, r2, #3
 801d7f8:	b2d2      	uxtb	r2, r2
 801d7fa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d7fe:	fb1e fe04 	smulbb	lr, lr, r4
 801d802:	fb10 f004 	smulbb	r0, r0, r4
 801d806:	fa1f fc8c 	uxth.w	ip, ip
 801d80a:	fb01 e103 	mla	r1, r1, r3, lr
 801d80e:	fb02 0303 	mla	r3, r2, r3, r0
 801d812:	b29a      	uxth	r2, r3
 801d814:	f10c 0301 	add.w	r3, ip, #1
 801d818:	b289      	uxth	r1, r1
 801d81a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d81e:	1c53      	adds	r3, r2, #1
 801d820:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d824:	1c4a      	adds	r2, r1, #1
 801d826:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d82a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d82e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d832:	0949      	lsrs	r1, r1, #5
 801d834:	ea43 030c 	orr.w	r3, r3, ip
 801d838:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d83c:	430b      	orrs	r3, r1
 801d83e:	803b      	strh	r3, [r7, #0]
 801d840:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d842:	449a      	add	sl, r3
 801d844:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d846:	3702      	adds	r7, #2
 801d848:	441d      	add	r5, r3
 801d84a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d84e:	e742      	b.n	801d6d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d850:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d852:	449a      	add	sl, r3
 801d854:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d856:	441d      	add	r5, r3
 801d858:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d85a:	3b01      	subs	r3, #1
 801d85c:	9309      	str	r3, [sp, #36]	; 0x24
 801d85e:	f108 0802 	add.w	r8, r8, #2
 801d862:	e718      	b.n	801d696 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d864:	d023      	beq.n	801d8ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801d866:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d868:	9825      	ldr	r0, [sp, #148]	; 0x94
 801d86a:	3b01      	subs	r3, #1
 801d86c:	fb00 a003 	mla	r0, r0, r3, sl
 801d870:	1400      	asrs	r0, r0, #16
 801d872:	f53f af2d 	bmi.w	801d6d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d876:	3901      	subs	r1, #1
 801d878:	4288      	cmp	r0, r1
 801d87a:	f6bf af29 	bge.w	801d6d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d87e:	9926      	ldr	r1, [sp, #152]	; 0x98
 801d880:	fb01 5303 	mla	r3, r1, r3, r5
 801d884:	141b      	asrs	r3, r3, #16
 801d886:	f53f af23 	bmi.w	801d6d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d88a:	3a01      	subs	r2, #1
 801d88c:	4293      	cmp	r3, r2
 801d88e:	f6bf af1f 	bge.w	801d6d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d892:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801d896:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801d89a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801d89e:	f1be 0f00 	cmp.w	lr, #0
 801d8a2:	dc6c      	bgt.n	801d97e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801d8a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d8a6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d8aa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801d8ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d8b0:	2b00      	cmp	r3, #0
 801d8b2:	f340 810e 	ble.w	801dad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801d8b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d8ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d8be:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d8c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d8c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d8c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d8cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d8d0:	eef0 6a62 	vmov.f32	s13, s5
 801d8d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d8d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d8dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d8e0:	ee16 aa90 	vmov	sl, s13
 801d8e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d8e8:	eef0 6a43 	vmov.f32	s13, s6
 801d8ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d8f0:	ee12 2a90 	vmov	r2, s5
 801d8f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d8f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d8fc:	ee13 2a10 	vmov	r2, s6
 801d900:	9325      	str	r3, [sp, #148]	; 0x94
 801d902:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d904:	fb92 f3f3 	sdiv	r3, r2, r3
 801d908:	9326      	str	r3, [sp, #152]	; 0x98
 801d90a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d90c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801d90e:	3b01      	subs	r3, #1
 801d910:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d914:	930c      	str	r3, [sp, #48]	; 0x30
 801d916:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d918:	bf08      	it	eq
 801d91a:	4613      	moveq	r3, r2
 801d91c:	ee16 5a90 	vmov	r5, s13
 801d920:	9309      	str	r3, [sp, #36]	; 0x24
 801d922:	eeb0 3a67 	vmov.f32	s6, s15
 801d926:	eef0 2a47 	vmov.f32	s5, s14
 801d92a:	e6a6      	b.n	801d67a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d92c:	2900      	cmp	r1, #0
 801d92e:	f43f af10 	beq.w	801d752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d932:	f819 3003 	ldrb.w	r3, [r9, r3]
 801d936:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d93a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d93c:	e709      	b.n	801d752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d93e:	f112 0901 	adds.w	r9, r2, #1
 801d942:	f53f af7d 	bmi.w	801d840 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d946:	454b      	cmp	r3, r9
 801d948:	f6ff af7a 	blt.w	801d840 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d94c:	f11c 0901 	adds.w	r9, ip, #1
 801d950:	f53f af76 	bmi.w	801d840 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d954:	45ce      	cmp	lr, r9
 801d956:	f6ff af73 	blt.w	801d840 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d95a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d95c:	9202      	str	r2, [sp, #8]
 801d95e:	b21b      	sxth	r3, r3
 801d960:	fa0f f28e 	sxth.w	r2, lr
 801d964:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801d968:	e9cd c003 	strd	ip, r0, [sp, #12]
 801d96c:	9201      	str	r2, [sp, #4]
 801d96e:	9300      	str	r3, [sp, #0]
 801d970:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d972:	9816      	ldr	r0, [sp, #88]	; 0x58
 801d974:	4633      	mov	r3, r6
 801d976:	4639      	mov	r1, r7
 801d978:	f7ff fd8e 	bl	801d498 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801d97c:	e760      	b.n	801d840 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d97e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d980:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d982:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d986:	ea4f 422a 	mov.w	r2, sl, asr #16
 801d98a:	1429      	asrs	r1, r5, #16
 801d98c:	fb03 2101 	mla	r1, r3, r1, r2
 801d990:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d992:	440a      	add	r2, r1
 801d994:	5c61      	ldrb	r1, [r4, r1]
 801d996:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801d99a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d99e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801d9a2:	f1bc 0f00 	cmp.w	ip, #0
 801d9a6:	f000 808c 	beq.w	801dac2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801d9aa:	7857      	ldrb	r7, [r2, #1]
 801d9ac:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801d9b0:	9413      	str	r4, [sp, #76]	; 0x4c
 801d9b2:	b140      	cbz	r0, 801d9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d9b4:	18d7      	adds	r7, r2, r3
 801d9b6:	5cd3      	ldrb	r3, [r2, r3]
 801d9b8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d9bc:	9310      	str	r3, [sp, #64]	; 0x40
 801d9be:	787b      	ldrb	r3, [r7, #1]
 801d9c0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d9c4:	9314      	str	r3, [sp, #80]	; 0x50
 801d9c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d9c8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d9ca:	fb1c f200 	smulbb	r2, ip, r0
 801d9ce:	041f      	lsls	r7, r3, #16
 801d9d0:	10d2      	asrs	r2, r2, #3
 801d9d2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d9d6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801d9da:	431f      	orrs	r7, r3
 801d9dc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801d9e0:	9317      	str	r3, [sp, #92]	; 0x5c
 801d9e2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801d9e4:	041b      	lsls	r3, r3, #16
 801d9e6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801d9ea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d9ee:	ea43 030b 	orr.w	r3, r3, fp
 801d9f2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801d9f4:	4353      	muls	r3, r2
 801d9f6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d9fa:	fb04 3707 	mla	r7, r4, r7, r3
 801d9fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801da02:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801da06:	ea43 0b01 	orr.w	fp, r3, r1
 801da0a:	f1c0 0110 	rsb	r1, r0, #16
 801da0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801da10:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801da12:	eba1 0c0c 	sub.w	ip, r1, ip
 801da16:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801da1a:	fb0c 770b 	mla	r7, ip, fp, r7
 801da1e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801da22:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801da26:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801da2a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801da2e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801da32:	fb02 770c 	mla	r7, r2, ip, r7
 801da36:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801da38:	0d79      	lsrs	r1, r7, #21
 801da3a:	097f      	lsrs	r7, r7, #5
 801da3c:	8812      	ldrh	r2, [r2, #0]
 801da3e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801da42:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801da46:	430f      	orrs	r7, r1
 801da48:	b2bb      	uxth	r3, r7
 801da4a:	1211      	asrs	r1, r2, #8
 801da4c:	1218      	asrs	r0, r3, #8
 801da4e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801da52:	fb11 f104 	smulbb	r1, r1, r4
 801da56:	10d7      	asrs	r7, r2, #3
 801da58:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801da5c:	00d2      	lsls	r2, r2, #3
 801da5e:	fb00 1009 	mla	r0, r0, r9, r1
 801da62:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801da66:	10d9      	asrs	r1, r3, #3
 801da68:	b2d2      	uxtb	r2, r2
 801da6a:	00db      	lsls	r3, r3, #3
 801da6c:	fb17 f704 	smulbb	r7, r7, r4
 801da70:	fb12 f204 	smulbb	r2, r2, r4
 801da74:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801da78:	b2db      	uxtb	r3, r3
 801da7a:	b280      	uxth	r0, r0
 801da7c:	fb01 7109 	mla	r1, r1, r9, r7
 801da80:	fb03 2309 	mla	r3, r3, r9, r2
 801da84:	b29b      	uxth	r3, r3
 801da86:	b289      	uxth	r1, r1
 801da88:	1c42      	adds	r2, r0, #1
 801da8a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801da8e:	1c4f      	adds	r7, r1, #1
 801da90:	1c5a      	adds	r2, r3, #1
 801da92:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801da96:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801da9a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801da9e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801daa2:	0949      	lsrs	r1, r1, #5
 801daa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801daa6:	4310      	orrs	r0, r2
 801daa8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801daac:	4308      	orrs	r0, r1
 801daae:	f823 0b02 	strh.w	r0, [r3], #2
 801dab2:	930e      	str	r3, [sp, #56]	; 0x38
 801dab4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801dab6:	449a      	add	sl, r3
 801dab8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801daba:	f10e 3eff 	add.w	lr, lr, #4294967295
 801dabe:	441d      	add	r5, r3
 801dac0:	e6ed      	b.n	801d89e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801dac2:	2800      	cmp	r0, #0
 801dac4:	f43f af7f 	beq.w	801d9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801dac8:	5cd3      	ldrb	r3, [r2, r3]
 801daca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801dace:	9310      	str	r3, [sp, #64]	; 0x40
 801dad0:	e779      	b.n	801d9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801dad2:	b019      	add	sp, #100	; 0x64
 801dad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801dad8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dadc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801dae0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801dae4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801dae8:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801daec:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801daf0:	8808      	ldrh	r0, [r1, #0]
 801daf2:	fb08 470e 	mla	r7, r8, lr, r4
 801daf6:	f1b8 0f00 	cmp.w	r8, #0
 801dafa:	eb02 0907 	add.w	r9, r2, r7
 801dafe:	db67      	blt.n	801dbd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801db00:	45c2      	cmp	sl, r8
 801db02:	dd65      	ble.n	801dbd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801db04:	2c00      	cmp	r4, #0
 801db06:	db61      	blt.n	801dbcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801db08:	45a6      	cmp	lr, r4
 801db0a:	dd5f      	ble.n	801dbcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801db0c:	5dd2      	ldrb	r2, [r2, r7]
 801db0e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801db12:	1c62      	adds	r2, r4, #1
 801db14:	d45f      	bmi.n	801dbd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801db16:	4596      	cmp	lr, r2
 801db18:	dd5d      	ble.n	801dbd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801db1a:	2d00      	cmp	r5, #0
 801db1c:	d05b      	beq.n	801dbd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801db1e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801db22:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801db26:	f118 0801 	adds.w	r8, r8, #1
 801db2a:	d458      	bmi.n	801dbde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801db2c:	45c2      	cmp	sl, r8
 801db2e:	dd56      	ble.n	801dbde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801db30:	2e00      	cmp	r6, #0
 801db32:	d054      	beq.n	801dbde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801db34:	2c00      	cmp	r4, #0
 801db36:	db50      	blt.n	801dbda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801db38:	45a6      	cmp	lr, r4
 801db3a:	dd4e      	ble.n	801dbda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801db3c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801db40:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801db44:	3401      	adds	r4, #1
 801db46:	d407      	bmi.n	801db58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801db48:	45a6      	cmp	lr, r4
 801db4a:	dd05      	ble.n	801db58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801db4c:	b125      	cbz	r5, 801db58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801db4e:	44ce      	add	lr, r9
 801db50:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801db54:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801db58:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801db5c:	fb15 f406 	smulbb	r4, r5, r6
 801db60:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801db64:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801db68:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801db6c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801db70:	ea43 0c0c 	orr.w	ip, r3, ip
 801db74:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801db78:	f1c6 0310 	rsb	r3, r6, #16
 801db7c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801db80:	1b5b      	subs	r3, r3, r5
 801db82:	ea4e 0707 	orr.w	r7, lr, r7
 801db86:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801db8a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801db8e:	437d      	muls	r5, r7
 801db90:	fb03 5c0c 	mla	ip, r3, ip, r5
 801db94:	0403      	lsls	r3, r0, #16
 801db96:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801db9a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801db9e:	4318      	orrs	r0, r3
 801dba0:	0413      	lsls	r3, r2, #16
 801dba2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dba6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dbaa:	4313      	orrs	r3, r2
 801dbac:	fb04 c000 	mla	r0, r4, r0, ip
 801dbb0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801dbb4:	fb06 0003 	mla	r0, r6, r3, r0
 801dbb8:	0d43      	lsrs	r3, r0, #21
 801dbba:	0940      	lsrs	r0, r0, #5
 801dbbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dbc0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dbc4:	4318      	orrs	r0, r3
 801dbc6:	8008      	strh	r0, [r1, #0]
 801dbc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dbcc:	4684      	mov	ip, r0
 801dbce:	e7a0      	b.n	801db12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801dbd0:	4607      	mov	r7, r0
 801dbd2:	4684      	mov	ip, r0
 801dbd4:	e7a7      	b.n	801db26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801dbd6:	4607      	mov	r7, r0
 801dbd8:	e7a5      	b.n	801db26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801dbda:	4602      	mov	r2, r0
 801dbdc:	e7b2      	b.n	801db44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801dbde:	4602      	mov	r2, r0
 801dbe0:	e7ba      	b.n	801db58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801dbe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dbe2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dbe6:	b093      	sub	sp, #76	; 0x4c
 801dbe8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801dbec:	920f      	str	r2, [sp, #60]	; 0x3c
 801dbee:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801dbf0:	9108      	str	r1, [sp, #32]
 801dbf2:	9306      	str	r3, [sp, #24]
 801dbf4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801dbf8:	9010      	str	r0, [sp, #64]	; 0x40
 801dbfa:	6850      	ldr	r0, [r2, #4]
 801dbfc:	6812      	ldr	r2, [r2, #0]
 801dbfe:	fb00 1303 	mla	r3, r0, r3, r1
 801dc02:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801dc06:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc08:	681b      	ldr	r3, [r3, #0]
 801dc0a:	9307      	str	r3, [sp, #28]
 801dc0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc0e:	685f      	ldr	r7, [r3, #4]
 801dc10:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dc14:	3704      	adds	r7, #4
 801dc16:	9b08      	ldr	r3, [sp, #32]
 801dc18:	2b00      	cmp	r3, #0
 801dc1a:	dc03      	bgt.n	801dc24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801dc1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dc1e:	2b00      	cmp	r3, #0
 801dc20:	f340 81b2 	ble.w	801df88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801dc24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc2a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dc2e:	1e48      	subs	r0, r1, #1
 801dc30:	f102 3cff 	add.w	ip, r2, #4294967295
 801dc34:	9b06      	ldr	r3, [sp, #24]
 801dc36:	2b00      	cmp	r3, #0
 801dc38:	f340 80a9 	ble.w	801dd8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801dc3c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dc40:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dc44:	d406      	bmi.n	801dc54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801dc46:	4586      	cmp	lr, r0
 801dc48:	da04      	bge.n	801dc54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801dc4a:	2b00      	cmp	r3, #0
 801dc4c:	db02      	blt.n	801dc54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801dc4e:	4563      	cmp	r3, ip
 801dc50:	f2c0 809e 	blt.w	801dd90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801dc54:	f11e 0e01 	adds.w	lr, lr, #1
 801dc58:	f100 808f 	bmi.w	801dd7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc5c:	4571      	cmp	r1, lr
 801dc5e:	f2c0 808c 	blt.w	801dd7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc62:	3301      	adds	r3, #1
 801dc64:	f100 8089 	bmi.w	801dd7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc68:	429a      	cmp	r2, r3
 801dc6a:	f2c0 8086 	blt.w	801dd7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc6e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801dc72:	46c8      	mov	r8, r9
 801dc74:	f1bb 0f00 	cmp.w	fp, #0
 801dc78:	f340 80a6 	ble.w	801ddc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801dc7c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801dc7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc80:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801dc84:	689b      	ldr	r3, [r3, #8]
 801dc86:	1422      	asrs	r2, r4, #16
 801dc88:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801dc8c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801dc90:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801dc94:	f100 80e3 	bmi.w	801de5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dc98:	f103 3aff 	add.w	sl, r3, #4294967295
 801dc9c:	4552      	cmp	r2, sl
 801dc9e:	f280 80de 	bge.w	801de5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dca2:	f1bc 0f00 	cmp.w	ip, #0
 801dca6:	f2c0 80da 	blt.w	801de5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dcaa:	f10e 3aff 	add.w	sl, lr, #4294967295
 801dcae:	45d4      	cmp	ip, sl
 801dcb0:	f280 80d5 	bge.w	801de5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801dcb4:	b21b      	sxth	r3, r3
 801dcb6:	fb0c 2203 	mla	r2, ip, r3, r2
 801dcba:	9d07      	ldr	r5, [sp, #28]
 801dcbc:	eb05 0a02 	add.w	sl, r5, r2
 801dcc0:	5caa      	ldrb	r2, [r5, r2]
 801dcc2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801dcc6:	2800      	cmp	r0, #0
 801dcc8:	f000 80c0 	beq.w	801de4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801dccc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801dcd0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801dcd4:	920b      	str	r2, [sp, #44]	; 0x2c
 801dcd6:	b151      	cbz	r1, 801dcee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801dcd8:	eb0a 0203 	add.w	r2, sl, r3
 801dcdc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801dce0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dce4:	9309      	str	r3, [sp, #36]	; 0x24
 801dce6:	7853      	ldrb	r3, [r2, #1]
 801dce8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dcec:	930c      	str	r3, [sp, #48]	; 0x30
 801dcee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dcf0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dcf2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801dcf6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801dcfa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dcfe:	ea4c 0c03 	orr.w	ip, ip, r3
 801dd02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801dd04:	041b      	lsls	r3, r3, #16
 801dd06:	fb10 f201 	smulbb	r2, r0, r1
 801dd0a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dd0e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801dd12:	10d2      	asrs	r2, r2, #3
 801dd14:	432b      	orrs	r3, r5
 801dd16:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801dd1a:	4353      	muls	r3, r2
 801dd1c:	fb0a 330c 	mla	r3, sl, ip, r3
 801dd20:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801dd24:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801dd28:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801dd2c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801dd30:	f1c1 0c10 	rsb	ip, r1, #16
 801dd34:	ebac 0c00 	sub.w	ip, ip, r0
 801dd38:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801dd3c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801dd40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd42:	0418      	lsls	r0, r3, #16
 801dd44:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dd48:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dd4c:	4318      	orrs	r0, r3
 801dd4e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801dd52:	fb02 c200 	mla	r2, r2, r0, ip
 801dd56:	0d53      	lsrs	r3, r2, #21
 801dd58:	0952      	lsrs	r2, r2, #5
 801dd5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dd5e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dd62:	431a      	orrs	r2, r3
 801dd64:	f8a8 2000 	strh.w	r2, [r8]
 801dd68:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dd6a:	441c      	add	r4, r3
 801dd6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dd6e:	f108 0802 	add.w	r8, r8, #2
 801dd72:	441e      	add	r6, r3
 801dd74:	f10b 3bff 	add.w	fp, fp, #4294967295
 801dd78:	e77c      	b.n	801dc74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801dd7a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dd7c:	441c      	add	r4, r3
 801dd7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dd80:	441e      	add	r6, r3
 801dd82:	9b06      	ldr	r3, [sp, #24]
 801dd84:	3b01      	subs	r3, #1
 801dd86:	9306      	str	r3, [sp, #24]
 801dd88:	f109 0902 	add.w	r9, r9, #2
 801dd8c:	e752      	b.n	801dc34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801dd8e:	d020      	beq.n	801ddd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801dd90:	9b06      	ldr	r3, [sp, #24]
 801dd92:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801dd94:	3b01      	subs	r3, #1
 801dd96:	fb00 4003 	mla	r0, r0, r3, r4
 801dd9a:	1400      	asrs	r0, r0, #16
 801dd9c:	f53f af67 	bmi.w	801dc6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dda0:	3901      	subs	r1, #1
 801dda2:	4288      	cmp	r0, r1
 801dda4:	f6bf af63 	bge.w	801dc6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dda8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ddaa:	fb01 6303 	mla	r3, r1, r3, r6
 801ddae:	141b      	asrs	r3, r3, #16
 801ddb0:	f53f af5d 	bmi.w	801dc6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ddb4:	3a01      	subs	r2, #1
 801ddb6:	4293      	cmp	r3, r2
 801ddb8:	f6bf af59 	bge.w	801dc6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ddbc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ddc0:	46ca      	mov	sl, r9
 801ddc2:	f1b8 0f00 	cmp.w	r8, #0
 801ddc6:	dc67      	bgt.n	801de98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ddc8:	9b06      	ldr	r3, [sp, #24]
 801ddca:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ddce:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ddd2:	9b08      	ldr	r3, [sp, #32]
 801ddd4:	2b00      	cmp	r3, #0
 801ddd6:	f340 80d7 	ble.w	801df88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ddda:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ddde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dde2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dde6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dde8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ddec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ddf0:	eeb0 6a62 	vmov.f32	s12, s5
 801ddf4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ddf8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ddfc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de00:	ee16 4a10 	vmov	r4, s12
 801de04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de08:	eeb0 6a43 	vmov.f32	s12, s6
 801de0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de10:	ee12 2a90 	vmov	r2, s5
 801de14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de18:	fb92 f3f3 	sdiv	r3, r2, r3
 801de1c:	ee13 2a10 	vmov	r2, s6
 801de20:	931f      	str	r3, [sp, #124]	; 0x7c
 801de22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801de24:	fb92 f3f3 	sdiv	r3, r2, r3
 801de28:	9320      	str	r3, [sp, #128]	; 0x80
 801de2a:	9b08      	ldr	r3, [sp, #32]
 801de2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801de2e:	3b01      	subs	r3, #1
 801de30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de34:	9308      	str	r3, [sp, #32]
 801de36:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801de38:	bf08      	it	eq
 801de3a:	4613      	moveq	r3, r2
 801de3c:	ee16 6a10 	vmov	r6, s12
 801de40:	9306      	str	r3, [sp, #24]
 801de42:	eeb0 3a67 	vmov.f32	s6, s15
 801de46:	eef0 2a47 	vmov.f32	s5, s14
 801de4a:	e6e4      	b.n	801dc16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801de4c:	2900      	cmp	r1, #0
 801de4e:	f43f af4e 	beq.w	801dcee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801de52:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801de56:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801de5a:	9309      	str	r3, [sp, #36]	; 0x24
 801de5c:	e747      	b.n	801dcee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801de5e:	f112 0a01 	adds.w	sl, r2, #1
 801de62:	d481      	bmi.n	801dd68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de64:	4553      	cmp	r3, sl
 801de66:	f6ff af7f 	blt.w	801dd68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de6a:	f11c 0a01 	adds.w	sl, ip, #1
 801de6e:	f53f af7b 	bmi.w	801dd68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de72:	45d6      	cmp	lr, sl
 801de74:	f6ff af78 	blt.w	801dd68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de78:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801de7c:	b21b      	sxth	r3, r3
 801de7e:	fa0f f28e 	sxth.w	r2, lr
 801de82:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801de86:	9201      	str	r2, [sp, #4]
 801de88:	9300      	str	r3, [sp, #0]
 801de8a:	9a07      	ldr	r2, [sp, #28]
 801de8c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801de8e:	463b      	mov	r3, r7
 801de90:	4641      	mov	r1, r8
 801de92:	f7ff fe21 	bl	801dad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801de96:	e767      	b.n	801dd68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801de9a:	9d07      	ldr	r5, [sp, #28]
 801de9c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dea0:	1422      	asrs	r2, r4, #16
 801dea2:	1431      	asrs	r1, r6, #16
 801dea4:	fb03 2101 	mla	r1, r3, r1, r2
 801dea8:	9a07      	ldr	r2, [sp, #28]
 801deaa:	440a      	add	r2, r1
 801deac:	5c69      	ldrb	r1, [r5, r1]
 801deae:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801deb2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801deb6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801deba:	f1be 0f00 	cmp.w	lr, #0
 801debe:	d05c      	beq.n	801df7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801dec0:	f892 c001 	ldrb.w	ip, [r2, #1]
 801dec4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801dec8:	950d      	str	r5, [sp, #52]	; 0x34
 801deca:	b150      	cbz	r0, 801dee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801decc:	eb02 0c03 	add.w	ip, r2, r3
 801ded0:	5cd3      	ldrb	r3, [r2, r3]
 801ded2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ded6:	930a      	str	r3, [sp, #40]	; 0x28
 801ded8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801dedc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dee0:	930e      	str	r3, [sp, #56]	; 0x38
 801dee2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dee4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dee6:	fb1e f200 	smulbb	r2, lr, r0
 801deea:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801deee:	10d2      	asrs	r2, r2, #3
 801def0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801def4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801def8:	ea4c 0c03 	orr.w	ip, ip, r3
 801defc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801df00:	9311      	str	r3, [sp, #68]	; 0x44
 801df02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df04:	041b      	lsls	r3, r3, #16
 801df06:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801df0a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801df0e:	ea43 030b 	orr.w	r3, r3, fp
 801df12:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801df14:	4353      	muls	r3, r2
 801df16:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801df1a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801df1e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801df22:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801df26:	ea43 0b01 	orr.w	fp, r3, r1
 801df2a:	f1c0 0110 	rsb	r1, r0, #16
 801df2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801df30:	eba1 0e0e 	sub.w	lr, r1, lr
 801df34:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801df38:	fb0e cc0b 	mla	ip, lr, fp, ip
 801df3c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801df40:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801df44:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801df48:	ea4b 0e0e 	orr.w	lr, fp, lr
 801df4c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801df50:	fb02 cc0e 	mla	ip, r2, lr, ip
 801df54:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801df58:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801df5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801df60:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801df64:	ea43 0c0c 	orr.w	ip, r3, ip
 801df68:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801df6a:	f82a cb02 	strh.w	ip, [sl], #2
 801df6e:	441c      	add	r4, r3
 801df70:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801df72:	f108 38ff 	add.w	r8, r8, #4294967295
 801df76:	441e      	add	r6, r3
 801df78:	e723      	b.n	801ddc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801df7a:	2800      	cmp	r0, #0
 801df7c:	d0b1      	beq.n	801dee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801df7e:	5cd3      	ldrb	r3, [r2, r3]
 801df80:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801df84:	930a      	str	r3, [sp, #40]	; 0x28
 801df86:	e7ac      	b.n	801dee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801df88:	b013      	add	sp, #76	; 0x4c
 801df8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801df8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801df8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df92:	880d      	ldrh	r5, [r1, #0]
 801df94:	b087      	sub	sp, #28
 801df96:	10ef      	asrs	r7, r5, #3
 801df98:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801df9c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dfa0:	00ed      	lsls	r5, r5, #3
 801dfa2:	9701      	str	r7, [sp, #4]
 801dfa4:	b2ed      	uxtb	r5, r5
 801dfa6:	9502      	str	r5, [sp, #8]
 801dfa8:	9d01      	ldr	r5, [sp, #4]
 801dfaa:	9103      	str	r1, [sp, #12]
 801dfac:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801dfb0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801dfb4:	9902      	ldr	r1, [sp, #8]
 801dfb6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801dfba:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801dfbe:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801dfc2:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801dfc6:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801dfca:	022d      	lsls	r5, r5, #8
 801dfcc:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801dfd0:	fb06 0709 	mla	r7, r6, r9, r0
 801dfd4:	430d      	orrs	r5, r1
 801dfd6:	2e00      	cmp	r6, #0
 801dfd8:	eb02 0c07 	add.w	ip, r2, r7
 801dfdc:	9505      	str	r5, [sp, #20]
 801dfde:	f2c0 80b6 	blt.w	801e14e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801dfe2:	45b3      	cmp	fp, r6
 801dfe4:	f340 80b3 	ble.w	801e14e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801dfe8:	2800      	cmp	r0, #0
 801dfea:	f2c0 80ae 	blt.w	801e14a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801dfee:	4581      	cmp	r9, r0
 801dff0:	f340 80ab 	ble.w	801e14a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801dff4:	5dd7      	ldrb	r7, [r2, r7]
 801dff6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801dffa:	441f      	add	r7, r3
 801dffc:	1c42      	adds	r2, r0, #1
 801dffe:	f100 80a9 	bmi.w	801e154 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801e002:	4591      	cmp	r9, r2
 801e004:	f340 80a6 	ble.w	801e154 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801e008:	2c00      	cmp	r4, #0
 801e00a:	f000 80a3 	beq.w	801e154 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801e00e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801e012:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e016:	441d      	add	r5, r3
 801e018:	3601      	adds	r6, #1
 801e01a:	f100 809f 	bmi.w	801e15c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801e01e:	45b3      	cmp	fp, r6
 801e020:	f340 809c 	ble.w	801e15c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801e024:	f1be 0f00 	cmp.w	lr, #0
 801e028:	f000 8098 	beq.w	801e15c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801e02c:	2800      	cmp	r0, #0
 801e02e:	f2c0 8093 	blt.w	801e158 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801e032:	4581      	cmp	r9, r0
 801e034:	f340 8090 	ble.w	801e158 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801e038:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801e03c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e040:	441e      	add	r6, r3
 801e042:	3001      	adds	r0, #1
 801e044:	f100 808d 	bmi.w	801e162 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801e048:	4581      	cmp	r9, r0
 801e04a:	f340 808a 	ble.w	801e162 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801e04e:	2c00      	cmp	r4, #0
 801e050:	f000 8087 	beq.w	801e162 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801e054:	44e1      	add	r9, ip
 801e056:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e05a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e05e:	4413      	add	r3, r2
 801e060:	b2a4      	uxth	r4, r4
 801e062:	fa1f fe8e 	uxth.w	lr, lr
 801e066:	fb04 fb0e 	mul.w	fp, r4, lr
 801e06a:	0124      	lsls	r4, r4, #4
 801e06c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801e070:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801e074:	eba4 040b 	sub.w	r4, r4, fp
 801e078:	fa1f f08e 	uxth.w	r0, lr
 801e07c:	b2a2      	uxth	r2, r4
 801e07e:	78ac      	ldrb	r4, [r5, #2]
 801e080:	f897 c002 	ldrb.w	ip, [r7, #2]
 801e084:	9901      	ldr	r1, [sp, #4]
 801e086:	eba9 0900 	sub.w	r9, r9, r0
 801e08a:	fa1f f989 	uxth.w	r9, r9
 801e08e:	4354      	muls	r4, r2
 801e090:	fb09 440c 	mla	r4, r9, ip, r4
 801e094:	f896 c002 	ldrb.w	ip, [r6, #2]
 801e098:	fb00 440c 	mla	r4, r0, ip, r4
 801e09c:	f893 c002 	ldrb.w	ip, [r3, #2]
 801e0a0:	fa1f fe88 	uxth.w	lr, r8
 801e0a4:	ea6f 0808 	mvn.w	r8, r8
 801e0a8:	fa5f f888 	uxtb.w	r8, r8
 801e0ac:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801e0b0:	fb1a fa08 	smulbb	sl, sl, r8
 801e0b4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801e0b8:	fb0c ac0e 	mla	ip, ip, lr, sl
 801e0bc:	f895 a001 	ldrb.w	sl, [r5, #1]
 801e0c0:	787c      	ldrb	r4, [r7, #1]
 801e0c2:	782d      	ldrb	r5, [r5, #0]
 801e0c4:	783f      	ldrb	r7, [r7, #0]
 801e0c6:	fb02 fa0a 	mul.w	sl, r2, sl
 801e0ca:	fb09 aa04 	mla	sl, r9, r4, sl
 801e0ce:	7874      	ldrb	r4, [r6, #1]
 801e0d0:	436a      	muls	r2, r5
 801e0d2:	7835      	ldrb	r5, [r6, #0]
 801e0d4:	fb00 aa04 	mla	sl, r0, r4, sl
 801e0d8:	fb09 2207 	mla	r2, r9, r7, r2
 801e0dc:	785c      	ldrb	r4, [r3, #1]
 801e0de:	781b      	ldrb	r3, [r3, #0]
 801e0e0:	fb00 2005 	mla	r0, r0, r5, r2
 801e0e4:	fb0b a404 	mla	r4, fp, r4, sl
 801e0e8:	fb0b 0b03 	mla	fp, fp, r3, r0
 801e0ec:	9b02      	ldr	r3, [sp, #8]
 801e0ee:	fb11 fa08 	smulbb	sl, r1, r8
 801e0f2:	fa1f fc8c 	uxth.w	ip, ip
 801e0f6:	fb13 f808 	smulbb	r8, r3, r8
 801e0fa:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801e0fe:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801e102:	fb04 a40e 	mla	r4, r4, lr, sl
 801e106:	f10c 0301 	add.w	r3, ip, #1
 801e10a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801e10e:	fa1f fe8e 	uxth.w	lr, lr
 801e112:	b2a4      	uxth	r4, r4
 801e114:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e118:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801e11c:	f104 0a01 	add.w	sl, r4, #1
 801e120:	f10e 0c01 	add.w	ip, lr, #1
 801e124:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e128:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e12c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e130:	0964      	lsrs	r4, r4, #5
 801e132:	ea4c 0c03 	orr.w	ip, ip, r3
 801e136:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e13a:	9b03      	ldr	r3, [sp, #12]
 801e13c:	ea4c 0c04 	orr.w	ip, ip, r4
 801e140:	f8a3 c000 	strh.w	ip, [r3]
 801e144:	b007      	add	sp, #28
 801e146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e14a:	af05      	add	r7, sp, #20
 801e14c:	e756      	b.n	801dffc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801e14e:	ad05      	add	r5, sp, #20
 801e150:	462f      	mov	r7, r5
 801e152:	e761      	b.n	801e018 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801e154:	ad05      	add	r5, sp, #20
 801e156:	e75f      	b.n	801e018 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801e158:	ae05      	add	r6, sp, #20
 801e15a:	e772      	b.n	801e042 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801e15c:	ab05      	add	r3, sp, #20
 801e15e:	461e      	mov	r6, r3
 801e160:	e77e      	b.n	801e060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801e162:	ab05      	add	r3, sp, #20
 801e164:	e77c      	b.n	801e060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801e166 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e166:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e16a:	b095      	sub	sp, #84	; 0x54
 801e16c:	9212      	str	r2, [sp, #72]	; 0x48
 801e16e:	9309      	str	r3, [sp, #36]	; 0x24
 801e170:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801e172:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801e176:	930f      	str	r3, [sp, #60]	; 0x3c
 801e178:	910e      	str	r1, [sp, #56]	; 0x38
 801e17a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801e17e:	9013      	str	r0, [sp, #76]	; 0x4c
 801e180:	6850      	ldr	r0, [r2, #4]
 801e182:	6812      	ldr	r2, [r2, #0]
 801e184:	fb00 1303 	mla	r3, r0, r3, r1
 801e188:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e18c:	930a      	str	r3, [sp, #40]	; 0x28
 801e18e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e190:	681b      	ldr	r3, [r3, #0]
 801e192:	930d      	str	r3, [sp, #52]	; 0x34
 801e194:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e196:	685c      	ldr	r4, [r3, #4]
 801e198:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e19a:	43db      	mvns	r3, r3
 801e19c:	b2db      	uxtb	r3, r3
 801e19e:	3404      	adds	r4, #4
 801e1a0:	930b      	str	r3, [sp, #44]	; 0x2c
 801e1a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e1a4:	2b00      	cmp	r3, #0
 801e1a6:	dc03      	bgt.n	801e1b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e1a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e1aa:	2b00      	cmp	r3, #0
 801e1ac:	f340 8255 	ble.w	801e65a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801e1b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e1b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e1b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e1ba:	1e48      	subs	r0, r1, #1
 801e1bc:	1e55      	subs	r5, r2, #1
 801e1be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e1c0:	2b00      	cmp	r3, #0
 801e1c2:	f340 80f9 	ble.w	801e3b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801e1c6:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801e1c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e1ca:	1436      	asrs	r6, r6, #16
 801e1cc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e1d0:	d406      	bmi.n	801e1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e1d2:	4286      	cmp	r6, r0
 801e1d4:	da04      	bge.n	801e1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e1d6:	2b00      	cmp	r3, #0
 801e1d8:	db02      	blt.n	801e1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e1da:	42ab      	cmp	r3, r5
 801e1dc:	f2c0 80ed 	blt.w	801e3ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801e1e0:	3601      	adds	r6, #1
 801e1e2:	f100 80da 	bmi.w	801e39a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e1e6:	42b1      	cmp	r1, r6
 801e1e8:	f2c0 80d7 	blt.w	801e39a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e1ec:	3301      	adds	r3, #1
 801e1ee:	f100 80d4 	bmi.w	801e39a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e1f2:	429a      	cmp	r2, r3
 801e1f4:	f2c0 80d1 	blt.w	801e39a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e1f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e1fa:	9311      	str	r3, [sp, #68]	; 0x44
 801e1fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e1fe:	930c      	str	r3, [sp, #48]	; 0x30
 801e200:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e202:	2b00      	cmp	r3, #0
 801e204:	f340 80fa 	ble.w	801e3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801e208:	9826      	ldr	r0, [sp, #152]	; 0x98
 801e20a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e20c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e20e:	68c6      	ldr	r6, [r0, #12]
 801e210:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e212:	141d      	asrs	r5, r3, #16
 801e214:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801e218:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e21a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801e21c:	1400      	asrs	r0, r0, #16
 801e21e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801e222:	6892      	ldr	r2, [r2, #8]
 801e224:	f100 813e 	bmi.w	801e4a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e228:	1e57      	subs	r7, r2, #1
 801e22a:	42b8      	cmp	r0, r7
 801e22c:	f280 813a 	bge.w	801e4a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e230:	2d00      	cmp	r5, #0
 801e232:	f2c0 8137 	blt.w	801e4a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e236:	1e77      	subs	r7, r6, #1
 801e238:	42bd      	cmp	r5, r7
 801e23a:	f280 8133 	bge.w	801e4a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e23e:	b212      	sxth	r2, r2
 801e240:	fb05 0002 	mla	r0, r5, r2, r0
 801e244:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e246:	f815 a000 	ldrb.w	sl, [r5, r0]
 801e24a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801e24e:	182e      	adds	r6, r5, r0
 801e250:	eb04 050a 	add.w	r5, r4, sl
 801e254:	2b00      	cmp	r3, #0
 801e256:	f000 8117 	beq.w	801e488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801e25a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801e25e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e262:	44a4      	add	ip, r4
 801e264:	2900      	cmp	r1, #0
 801e266:	f000 8117 	beq.w	801e498 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801e26a:	18b0      	adds	r0, r6, r2
 801e26c:	5cb2      	ldrb	r2, [r6, r2]
 801e26e:	7840      	ldrb	r0, [r0, #1]
 801e270:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e274:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e278:	4422      	add	r2, r4
 801e27a:	4420      	add	r0, r4
 801e27c:	b29b      	uxth	r3, r3
 801e27e:	b289      	uxth	r1, r1
 801e280:	fb03 f901 	mul.w	r9, r3, r1
 801e284:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e288:	011b      	lsls	r3, r3, #4
 801e28a:	b289      	uxth	r1, r1
 801e28c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801e290:	f895 b002 	ldrb.w	fp, [r5, #2]
 801e294:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e296:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801e29a:	f8b6 e000 	ldrh.w	lr, [r6]
 801e29e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801e2a2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801e2a6:	eba3 0309 	sub.w	r3, r3, r9
 801e2aa:	b29b      	uxth	r3, r3
 801e2ac:	eba8 0801 	sub.w	r8, r8, r1
 801e2b0:	fa1f f888 	uxth.w	r8, r8
 801e2b4:	435f      	muls	r7, r3
 801e2b6:	fb08 770b 	mla	r7, r8, fp, r7
 801e2ba:	f892 b002 	ldrb.w	fp, [r2, #2]
 801e2be:	9310      	str	r3, [sp, #64]	; 0x40
 801e2c0:	fb01 770b 	mla	r7, r1, fp, r7
 801e2c4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801e2c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e2ca:	fb09 770b 	mla	r7, r9, fp, r7
 801e2ce:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801e2d2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801e2d6:	fb1b fb03 	smulbb	fp, fp, r3
 801e2da:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e2de:	fb07 b706 	mla	r7, r7, r6, fp
 801e2e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e2e4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801e2e8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801e2ec:	f89c c000 	ldrb.w	ip, [ip]
 801e2f0:	435d      	muls	r5, r3
 801e2f2:	fb08 550b 	mla	r5, r8, fp, r5
 801e2f6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801e2fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e2fc:	fb01 550b 	mla	r5, r1, fp, r5
 801e300:	f890 b001 	ldrb.w	fp, [r0, #1]
 801e304:	fb09 550b 	mla	r5, r9, fp, r5
 801e308:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801e30c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e310:	fb1b fb03 	smulbb	fp, fp, r3
 801e314:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e316:	fb03 f30c 	mul.w	r3, r3, ip
 801e31a:	f892 c000 	ldrb.w	ip, [r2]
 801e31e:	fb08 330a 	mla	r3, r8, sl, r3
 801e322:	fb01 330c 	mla	r3, r1, ip, r3
 801e326:	f890 c000 	ldrb.w	ip, [r0]
 801e32a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e32e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801e332:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e334:	fa5f fe8e 	uxtb.w	lr, lr
 801e338:	b2bf      	uxth	r7, r7
 801e33a:	fb1e fe03 	smulbb	lr, lr, r3
 801e33e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e342:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801e346:	fb05 b506 	mla	r5, r5, r6, fp
 801e34a:	1c7b      	adds	r3, r7, #1
 801e34c:	fb0c e606 	mla	r6, ip, r6, lr
 801e350:	b2ad      	uxth	r5, r5
 801e352:	b2b6      	uxth	r6, r6
 801e354:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801e358:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801e35c:	f105 0b01 	add.w	fp, r5, #1
 801e360:	1c77      	adds	r7, r6, #1
 801e362:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801e366:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801e36a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e36e:	096d      	lsrs	r5, r5, #5
 801e370:	431f      	orrs	r7, r3
 801e372:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e376:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e378:	433d      	orrs	r5, r7
 801e37a:	801d      	strh	r5, [r3, #0]
 801e37c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e37e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e380:	3302      	adds	r3, #2
 801e382:	930c      	str	r3, [sp, #48]	; 0x30
 801e384:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e386:	4413      	add	r3, r2
 801e388:	931f      	str	r3, [sp, #124]	; 0x7c
 801e38a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e38c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e38e:	4413      	add	r3, r2
 801e390:	9320      	str	r3, [sp, #128]	; 0x80
 801e392:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e394:	3b01      	subs	r3, #1
 801e396:	9311      	str	r3, [sp, #68]	; 0x44
 801e398:	e732      	b.n	801e200 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e39a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e39c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801e39e:	4433      	add	r3, r6
 801e3a0:	931f      	str	r3, [sp, #124]	; 0x7c
 801e3a2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801e3a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e3a6:	4433      	add	r3, r6
 801e3a8:	9320      	str	r3, [sp, #128]	; 0x80
 801e3aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e3ac:	3b01      	subs	r3, #1
 801e3ae:	9309      	str	r3, [sp, #36]	; 0x24
 801e3b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e3b2:	3302      	adds	r3, #2
 801e3b4:	930a      	str	r3, [sp, #40]	; 0x28
 801e3b6:	e702      	b.n	801e1be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e3b8:	d027      	beq.n	801e40a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801e3ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e3bc:	9821      	ldr	r0, [sp, #132]	; 0x84
 801e3be:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801e3c0:	3b01      	subs	r3, #1
 801e3c2:	fb00 5003 	mla	r0, r0, r3, r5
 801e3c6:	1400      	asrs	r0, r0, #16
 801e3c8:	f53f af16 	bmi.w	801e1f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e3cc:	3901      	subs	r1, #1
 801e3ce:	4288      	cmp	r0, r1
 801e3d0:	f6bf af12 	bge.w	801e1f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e3d4:	9922      	ldr	r1, [sp, #136]	; 0x88
 801e3d6:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e3d8:	fb01 0303 	mla	r3, r1, r3, r0
 801e3dc:	141b      	asrs	r3, r3, #16
 801e3de:	f53f af0b 	bmi.w	801e1f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e3e2:	3a01      	subs	r2, #1
 801e3e4:	4293      	cmp	r3, r2
 801e3e6:	f6bf af07 	bge.w	801e1f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e3ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e3ec:	9311      	str	r3, [sp, #68]	; 0x44
 801e3ee:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801e3f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e3f4:	930c      	str	r3, [sp, #48]	; 0x30
 801e3f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e3f8:	2b00      	cmp	r3, #0
 801e3fa:	dc70      	bgt.n	801e4de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e3fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e3fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e400:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e404:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e408:	930a      	str	r3, [sp, #40]	; 0x28
 801e40a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e40c:	2b00      	cmp	r3, #0
 801e40e:	f340 8124 	ble.w	801e65a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801e412:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e416:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e41a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e41e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e420:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e424:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e428:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e42c:	eef0 6a62 	vmov.f32	s13, s5
 801e430:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e434:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e438:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e43c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801e440:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e444:	eef0 6a43 	vmov.f32	s13, s6
 801e448:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e44c:	ee12 2a90 	vmov	r2, s5
 801e450:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e454:	fb92 f3f3 	sdiv	r3, r2, r3
 801e458:	ee13 2a10 	vmov	r2, s6
 801e45c:	9321      	str	r3, [sp, #132]	; 0x84
 801e45e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e460:	fb92 f3f3 	sdiv	r3, r2, r3
 801e464:	9322      	str	r3, [sp, #136]	; 0x88
 801e466:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e468:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e46a:	3b01      	subs	r3, #1
 801e46c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e470:	930e      	str	r3, [sp, #56]	; 0x38
 801e472:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e474:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801e478:	bf08      	it	eq
 801e47a:	4613      	moveq	r3, r2
 801e47c:	9309      	str	r3, [sp, #36]	; 0x24
 801e47e:	eeb0 3a67 	vmov.f32	s6, s15
 801e482:	eef0 2a47 	vmov.f32	s5, s14
 801e486:	e68c      	b.n	801e1a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e488:	b149      	cbz	r1, 801e49e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801e48a:	5cb2      	ldrb	r2, [r6, r2]
 801e48c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e490:	4422      	add	r2, r4
 801e492:	4628      	mov	r0, r5
 801e494:	46ac      	mov	ip, r5
 801e496:	e6f1      	b.n	801e27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e498:	4628      	mov	r0, r5
 801e49a:	462a      	mov	r2, r5
 801e49c:	e6ee      	b.n	801e27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e49e:	4628      	mov	r0, r5
 801e4a0:	462a      	mov	r2, r5
 801e4a2:	e7f7      	b.n	801e494 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801e4a4:	1c47      	adds	r7, r0, #1
 801e4a6:	f53f af69 	bmi.w	801e37c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e4aa:	42ba      	cmp	r2, r7
 801e4ac:	f6ff af66 	blt.w	801e37c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e4b0:	1c6f      	adds	r7, r5, #1
 801e4b2:	f53f af63 	bmi.w	801e37c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e4b6:	42be      	cmp	r6, r7
 801e4b8:	f6ff af60 	blt.w	801e37c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e4bc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e4be:	9002      	str	r0, [sp, #8]
 801e4c0:	b236      	sxth	r6, r6
 801e4c2:	b212      	sxth	r2, r2
 801e4c4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801e4c8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801e4cc:	9200      	str	r2, [sp, #0]
 801e4ce:	9601      	str	r6, [sp, #4]
 801e4d0:	4623      	mov	r3, r4
 801e4d2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801e4d6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e4d8:	f7ff fd59 	bl	801df8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801e4dc:	e74e      	b.n	801e37c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e4de:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e4e0:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e4e2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801e4e4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e4e6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801e4ea:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801e4ec:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801e4f0:	142d      	asrs	r5, r5, #16
 801e4f2:	1400      	asrs	r0, r0, #16
 801e4f4:	fb02 5000 	mla	r0, r2, r0, r5
 801e4f8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e4fa:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e4fe:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801e502:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801e506:	182e      	adds	r6, r5, r0
 801e508:	eb04 0509 	add.w	r5, r4, r9
 801e50c:	2b00      	cmp	r3, #0
 801e50e:	f000 8096 	beq.w	801e63e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801e512:	7877      	ldrb	r7, [r6, #1]
 801e514:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e518:	4427      	add	r7, r4
 801e51a:	2900      	cmp	r1, #0
 801e51c:	f000 8097 	beq.w	801e64e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801e520:	18b0      	adds	r0, r6, r2
 801e522:	5cb2      	ldrb	r2, [r6, r2]
 801e524:	7840      	ldrb	r0, [r0, #1]
 801e526:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e52a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e52e:	4422      	add	r2, r4
 801e530:	4420      	add	r0, r4
 801e532:	b29b      	uxth	r3, r3
 801e534:	b289      	uxth	r1, r1
 801e536:	fb03 f801 	mul.w	r8, r3, r1
 801e53a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e53c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801e540:	f8b6 c000 	ldrh.w	ip, [r6]
 801e544:	78be      	ldrb	r6, [r7, #2]
 801e546:	f814 9009 	ldrb.w	r9, [r4, r9]
 801e54a:	011b      	lsls	r3, r3, #4
 801e54c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801e550:	b289      	uxth	r1, r1
 801e552:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e556:	eba3 0308 	sub.w	r3, r3, r8
 801e55a:	b29b      	uxth	r3, r3
 801e55c:	ebae 0e01 	sub.w	lr, lr, r1
 801e560:	fa1f fe8e 	uxth.w	lr, lr
 801e564:	435e      	muls	r6, r3
 801e566:	fb0e 660b 	mla	r6, lr, fp, r6
 801e56a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801e56e:	9310      	str	r3, [sp, #64]	; 0x40
 801e570:	fb01 660b 	mla	r6, r1, fp, r6
 801e574:	f890 b002 	ldrb.w	fp, [r0, #2]
 801e578:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e57a:	fb08 660b 	mla	r6, r8, fp, r6
 801e57e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801e582:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801e586:	fb1b fb03 	smulbb	fp, fp, r3
 801e58a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e58e:	fb06 b60a 	mla	r6, r6, sl, fp
 801e592:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e594:	f895 b001 	ldrb.w	fp, [r5, #1]
 801e598:	787d      	ldrb	r5, [r7, #1]
 801e59a:	783f      	ldrb	r7, [r7, #0]
 801e59c:	435d      	muls	r5, r3
 801e59e:	fb0e 550b 	mla	r5, lr, fp, r5
 801e5a2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801e5a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e5a8:	fb01 550b 	mla	r5, r1, fp, r5
 801e5ac:	f890 b001 	ldrb.w	fp, [r0, #1]
 801e5b0:	fb08 550b 	mla	r5, r8, fp, r5
 801e5b4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801e5b8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e5bc:	fb1b fb03 	smulbb	fp, fp, r3
 801e5c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5c2:	437b      	muls	r3, r7
 801e5c4:	7817      	ldrb	r7, [r2, #0]
 801e5c6:	fb0e 3309 	mla	r3, lr, r9, r3
 801e5ca:	fb01 3307 	mla	r3, r1, r7, r3
 801e5ce:	7807      	ldrb	r7, [r0, #0]
 801e5d0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e5d4:	fb08 3707 	mla	r7, r8, r7, r3
 801e5d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e5da:	fa5f fc8c 	uxtb.w	ip, ip
 801e5de:	fb1c fc03 	smulbb	ip, ip, r3
 801e5e2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e5e6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e5ea:	fb05 b50a 	mla	r5, r5, sl, fp
 801e5ee:	fb07 c70a 	mla	r7, r7, sl, ip
 801e5f2:	b2b6      	uxth	r6, r6
 801e5f4:	b2ad      	uxth	r5, r5
 801e5f6:	b2bf      	uxth	r7, r7
 801e5f8:	1c73      	adds	r3, r6, #1
 801e5fa:	1c7a      	adds	r2, r7, #1
 801e5fc:	f105 0b01 	add.w	fp, r5, #1
 801e600:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801e604:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801e608:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801e60c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e610:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e614:	096d      	lsrs	r5, r5, #5
 801e616:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e618:	4316      	orrs	r6, r2
 801e61a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e61e:	432e      	orrs	r6, r5
 801e620:	f823 6b02 	strh.w	r6, [r3], #2
 801e624:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e626:	930c      	str	r3, [sp, #48]	; 0x30
 801e628:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e62a:	4413      	add	r3, r2
 801e62c:	931f      	str	r3, [sp, #124]	; 0x7c
 801e62e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e630:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e632:	4413      	add	r3, r2
 801e634:	9320      	str	r3, [sp, #128]	; 0x80
 801e636:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e638:	3b01      	subs	r3, #1
 801e63a:	9311      	str	r3, [sp, #68]	; 0x44
 801e63c:	e6db      	b.n	801e3f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801e63e:	b149      	cbz	r1, 801e654 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801e640:	5cb2      	ldrb	r2, [r6, r2]
 801e642:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e646:	4422      	add	r2, r4
 801e648:	4628      	mov	r0, r5
 801e64a:	462f      	mov	r7, r5
 801e64c:	e771      	b.n	801e532 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801e64e:	4628      	mov	r0, r5
 801e650:	462a      	mov	r2, r5
 801e652:	e76e      	b.n	801e532 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801e654:	4628      	mov	r0, r5
 801e656:	462a      	mov	r2, r5
 801e658:	e7f7      	b.n	801e64a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e65a:	b015      	add	sp, #84	; 0x54
 801e65c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e660 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801e660:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e664:	880f      	ldrh	r7, [r1, #0]
 801e666:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801e66a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801e66e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801e672:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e676:	023c      	lsls	r4, r7, #8
 801e678:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801e67c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801e680:	017c      	lsls	r4, r7, #5
 801e682:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801e686:	00ff      	lsls	r7, r7, #3
 801e688:	ea4b 0404 	orr.w	r4, fp, r4
 801e68c:	b2ff      	uxtb	r7, r7
 801e68e:	fb05 ca0e 	mla	sl, r5, lr, ip
 801e692:	4327      	orrs	r7, r4
 801e694:	2d00      	cmp	r5, #0
 801e696:	eb02 080a 	add.w	r8, r2, sl
 801e69a:	9701      	str	r7, [sp, #4]
 801e69c:	db7e      	blt.n	801e79c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801e69e:	45a9      	cmp	r9, r5
 801e6a0:	dd7c      	ble.n	801e79c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801e6a2:	f1bc 0f00 	cmp.w	ip, #0
 801e6a6:	db77      	blt.n	801e798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801e6a8:	45e6      	cmp	lr, ip
 801e6aa:	dd75      	ble.n	801e798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801e6ac:	f812 700a 	ldrb.w	r7, [r2, sl]
 801e6b0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e6b4:	441f      	add	r7, r3
 801e6b6:	f11c 0201 	adds.w	r2, ip, #1
 801e6ba:	d472      	bmi.n	801e7a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e6bc:	4596      	cmp	lr, r2
 801e6be:	dd70      	ble.n	801e7a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e6c0:	2800      	cmp	r0, #0
 801e6c2:	d06e      	beq.n	801e7a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e6c4:	f898 4001 	ldrb.w	r4, [r8, #1]
 801e6c8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801e6cc:	441c      	add	r4, r3
 801e6ce:	3501      	adds	r5, #1
 801e6d0:	d46b      	bmi.n	801e7aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e6d2:	45a9      	cmp	r9, r5
 801e6d4:	dd69      	ble.n	801e7aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e6d6:	2e00      	cmp	r6, #0
 801e6d8:	d067      	beq.n	801e7aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e6da:	f1bc 0f00 	cmp.w	ip, #0
 801e6de:	db62      	blt.n	801e7a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801e6e0:	45e6      	cmp	lr, ip
 801e6e2:	dd60      	ble.n	801e7a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801e6e4:	f818 500e 	ldrb.w	r5, [r8, lr]
 801e6e8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e6ec:	441d      	add	r5, r3
 801e6ee:	f11c 0201 	adds.w	r2, ip, #1
 801e6f2:	d45d      	bmi.n	801e7b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e6f4:	4596      	cmp	lr, r2
 801e6f6:	dd5b      	ble.n	801e7b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e6f8:	2800      	cmp	r0, #0
 801e6fa:	d059      	beq.n	801e7b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e6fc:	44c6      	add	lr, r8
 801e6fe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e702:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e706:	4413      	add	r3, r2
 801e708:	b280      	uxth	r0, r0
 801e70a:	b2b2      	uxth	r2, r6
 801e70c:	fb00 f602 	mul.w	r6, r0, r2
 801e710:	0100      	lsls	r0, r0, #4
 801e712:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801e716:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801e71a:	1b80      	subs	r0, r0, r6
 801e71c:	fa1f fc82 	uxth.w	ip, r2
 801e720:	b282      	uxth	r2, r0
 801e722:	78a0      	ldrb	r0, [r4, #2]
 801e724:	f897 e002 	ldrb.w	lr, [r7, #2]
 801e728:	f897 9000 	ldrb.w	r9, [r7]
 801e72c:	787f      	ldrb	r7, [r7, #1]
 801e72e:	eba8 080c 	sub.w	r8, r8, ip
 801e732:	fa1f f888 	uxth.w	r8, r8
 801e736:	4350      	muls	r0, r2
 801e738:	fb08 0e0e 	mla	lr, r8, lr, r0
 801e73c:	78a8      	ldrb	r0, [r5, #2]
 801e73e:	fb0c e000 	mla	r0, ip, r0, lr
 801e742:	f893 e002 	ldrb.w	lr, [r3, #2]
 801e746:	fb06 0e0e 	mla	lr, r6, lr, r0
 801e74a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801e74e:	f894 e000 	ldrb.w	lr, [r4]
 801e752:	fb02 fe0e 	mul.w	lr, r2, lr
 801e756:	fb08 e909 	mla	r9, r8, r9, lr
 801e75a:	f895 e000 	ldrb.w	lr, [r5]
 801e75e:	fb0c 990e 	mla	r9, ip, lr, r9
 801e762:	f893 e000 	ldrb.w	lr, [r3]
 801e766:	785b      	ldrb	r3, [r3, #1]
 801e768:	fb06 9e0e 	mla	lr, r6, lr, r9
 801e76c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e770:	ea4e 0e00 	orr.w	lr, lr, r0
 801e774:	7860      	ldrb	r0, [r4, #1]
 801e776:	4350      	muls	r0, r2
 801e778:	786a      	ldrb	r2, [r5, #1]
 801e77a:	fb08 0007 	mla	r0, r8, r7, r0
 801e77e:	fb0c 0202 	mla	r2, ip, r2, r0
 801e782:	fb06 2303 	mla	r3, r6, r3, r2
 801e786:	095b      	lsrs	r3, r3, #5
 801e788:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e78c:	ea4e 0303 	orr.w	r3, lr, r3
 801e790:	800b      	strh	r3, [r1, #0]
 801e792:	b003      	add	sp, #12
 801e794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e798:	af01      	add	r7, sp, #4
 801e79a:	e78c      	b.n	801e6b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801e79c:	ac01      	add	r4, sp, #4
 801e79e:	4627      	mov	r7, r4
 801e7a0:	e795      	b.n	801e6ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801e7a2:	ac01      	add	r4, sp, #4
 801e7a4:	e793      	b.n	801e6ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801e7a6:	ad01      	add	r5, sp, #4
 801e7a8:	e7a1      	b.n	801e6ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801e7aa:	ab01      	add	r3, sp, #4
 801e7ac:	461d      	mov	r5, r3
 801e7ae:	e7ab      	b.n	801e708 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801e7b0:	ab01      	add	r3, sp, #4
 801e7b2:	e7a9      	b.n	801e708 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801e7b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e7b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7b8:	b08f      	sub	sp, #60	; 0x3c
 801e7ba:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801e7be:	920c      	str	r2, [sp, #48]	; 0x30
 801e7c0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801e7c2:	910a      	str	r1, [sp, #40]	; 0x28
 801e7c4:	9306      	str	r3, [sp, #24]
 801e7c6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801e7ca:	900d      	str	r0, [sp, #52]	; 0x34
 801e7cc:	6850      	ldr	r0, [r2, #4]
 801e7ce:	6812      	ldr	r2, [r2, #0]
 801e7d0:	fb00 1303 	mla	r3, r0, r3, r1
 801e7d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e7d8:	9307      	str	r3, [sp, #28]
 801e7da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e7dc:	681b      	ldr	r3, [r3, #0]
 801e7de:	9308      	str	r3, [sp, #32]
 801e7e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e7e2:	685c      	ldr	r4, [r3, #4]
 801e7e4:	3404      	adds	r4, #4
 801e7e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e7e8:	2b00      	cmp	r3, #0
 801e7ea:	dc03      	bgt.n	801e7f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801e7ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e7ee:	2b00      	cmp	r3, #0
 801e7f0:	f340 81d6 	ble.w	801eba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801e7f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e7f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e7fa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e7fe:	1e48      	subs	r0, r1, #1
 801e800:	1e56      	subs	r6, r2, #1
 801e802:	9b06      	ldr	r3, [sp, #24]
 801e804:	2b00      	cmp	r3, #0
 801e806:	f340 80b7 	ble.w	801e978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801e80a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801e80e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e812:	d406      	bmi.n	801e822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e814:	4287      	cmp	r7, r0
 801e816:	da04      	bge.n	801e822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e818:	2b00      	cmp	r3, #0
 801e81a:	db02      	blt.n	801e822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e81c:	42b3      	cmp	r3, r6
 801e81e:	f2c0 80ac 	blt.w	801e97a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801e822:	3701      	adds	r7, #1
 801e824:	f100 809d 	bmi.w	801e962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e828:	42b9      	cmp	r1, r7
 801e82a:	f2c0 809a 	blt.w	801e962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e82e:	3301      	adds	r3, #1
 801e830:	f100 8097 	bmi.w	801e962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e834:	429a      	cmp	r2, r3
 801e836:	f2c0 8094 	blt.w	801e962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e83a:	9b06      	ldr	r3, [sp, #24]
 801e83c:	930b      	str	r3, [sp, #44]	; 0x2c
 801e83e:	9b07      	ldr	r3, [sp, #28]
 801e840:	9309      	str	r3, [sp, #36]	; 0x24
 801e842:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e844:	2b00      	cmp	r3, #0
 801e846:	f340 80b5 	ble.w	801e9b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e84a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e84c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e84e:	68c7      	ldr	r7, [r0, #12]
 801e850:	6892      	ldr	r2, [r2, #8]
 801e852:	ea5f 402b 	movs.w	r0, fp, asr #16
 801e856:	ea4f 4625 	mov.w	r6, r5, asr #16
 801e85a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801e85e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e862:	f100 80fb 	bmi.w	801ea5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e866:	f102 3cff 	add.w	ip, r2, #4294967295
 801e86a:	4560      	cmp	r0, ip
 801e86c:	f280 80f6 	bge.w	801ea5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e870:	2e00      	cmp	r6, #0
 801e872:	f2c0 80f3 	blt.w	801ea5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e876:	f107 3cff 	add.w	ip, r7, #4294967295
 801e87a:	4566      	cmp	r6, ip
 801e87c:	f280 80ee 	bge.w	801ea5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e880:	b212      	sxth	r2, r2
 801e882:	fb06 0002 	mla	r0, r6, r2, r0
 801e886:	9e08      	ldr	r6, [sp, #32]
 801e888:	1837      	adds	r7, r6, r0
 801e88a:	5c30      	ldrb	r0, [r6, r0]
 801e88c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801e890:	eb04 0c08 	add.w	ip, r4, r8
 801e894:	2b00      	cmp	r3, #0
 801e896:	f000 80d3 	beq.w	801ea40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e89a:	787e      	ldrb	r6, [r7, #1]
 801e89c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e8a0:	4426      	add	r6, r4
 801e8a2:	2900      	cmp	r1, #0
 801e8a4:	f000 80d4 	beq.w	801ea50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801e8a8:	18b8      	adds	r0, r7, r2
 801e8aa:	5cba      	ldrb	r2, [r7, r2]
 801e8ac:	7840      	ldrb	r0, [r0, #1]
 801e8ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e8b2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e8b6:	4422      	add	r2, r4
 801e8b8:	4420      	add	r0, r4
 801e8ba:	b29b      	uxth	r3, r3
 801e8bc:	b289      	uxth	r1, r1
 801e8be:	fb03 f901 	mul.w	r9, r3, r1
 801e8c2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e8c6:	011b      	lsls	r3, r3, #4
 801e8c8:	b289      	uxth	r1, r1
 801e8ca:	78b7      	ldrb	r7, [r6, #2]
 801e8cc:	f89c a002 	ldrb.w	sl, [ip, #2]
 801e8d0:	f89c c001 	ldrb.w	ip, [ip, #1]
 801e8d4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e8d8:	eba3 0309 	sub.w	r3, r3, r9
 801e8dc:	b29b      	uxth	r3, r3
 801e8de:	ebae 0e01 	sub.w	lr, lr, r1
 801e8e2:	fa1f fe8e 	uxth.w	lr, lr
 801e8e6:	435f      	muls	r7, r3
 801e8e8:	fb0e 770a 	mla	r7, lr, sl, r7
 801e8ec:	f892 a002 	ldrb.w	sl, [r2, #2]
 801e8f0:	fb01 770a 	mla	r7, r1, sl, r7
 801e8f4:	f890 a002 	ldrb.w	sl, [r0, #2]
 801e8f8:	fb09 7a0a 	mla	sl, r9, sl, r7
 801e8fc:	f814 7008 	ldrb.w	r7, [r4, r8]
 801e900:	f896 8000 	ldrb.w	r8, [r6]
 801e904:	7876      	ldrb	r6, [r6, #1]
 801e906:	fb03 f808 	mul.w	r8, r3, r8
 801e90a:	fb0e 8807 	mla	r8, lr, r7, r8
 801e90e:	7817      	ldrb	r7, [r2, #0]
 801e910:	fb01 8807 	mla	r8, r1, r7, r8
 801e914:	7807      	ldrb	r7, [r0, #0]
 801e916:	fb09 8707 	mla	r7, r9, r7, r8
 801e91a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801e91e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e922:	ea47 070a 	orr.w	r7, r7, sl
 801e926:	4373      	muls	r3, r6
 801e928:	f892 a001 	ldrb.w	sl, [r2, #1]
 801e92c:	fb0e 330c 	mla	r3, lr, ip, r3
 801e930:	fb01 310a 	mla	r1, r1, sl, r3
 801e934:	f890 a001 	ldrb.w	sl, [r0, #1]
 801e938:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e93a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801e93e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e942:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e946:	ea47 070a 	orr.w	r7, r7, sl
 801e94a:	801f      	strh	r7, [r3, #0]
 801e94c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e94e:	3302      	adds	r3, #2
 801e950:	9309      	str	r3, [sp, #36]	; 0x24
 801e952:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e954:	449b      	add	fp, r3
 801e956:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e958:	441d      	add	r5, r3
 801e95a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e95c:	3b01      	subs	r3, #1
 801e95e:	930b      	str	r3, [sp, #44]	; 0x2c
 801e960:	e76f      	b.n	801e842 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e962:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e964:	449b      	add	fp, r3
 801e966:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e968:	441d      	add	r5, r3
 801e96a:	9b06      	ldr	r3, [sp, #24]
 801e96c:	3b01      	subs	r3, #1
 801e96e:	9306      	str	r3, [sp, #24]
 801e970:	9b07      	ldr	r3, [sp, #28]
 801e972:	3302      	adds	r3, #2
 801e974:	9307      	str	r3, [sp, #28]
 801e976:	e744      	b.n	801e802 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801e978:	d023      	beq.n	801e9c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801e97a:	9b06      	ldr	r3, [sp, #24]
 801e97c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e97e:	3b01      	subs	r3, #1
 801e980:	fb00 b003 	mla	r0, r0, r3, fp
 801e984:	1400      	asrs	r0, r0, #16
 801e986:	f53f af58 	bmi.w	801e83a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e98a:	3901      	subs	r1, #1
 801e98c:	4288      	cmp	r0, r1
 801e98e:	f6bf af54 	bge.w	801e83a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e992:	991c      	ldr	r1, [sp, #112]	; 0x70
 801e994:	fb01 5303 	mla	r3, r1, r3, r5
 801e998:	141b      	asrs	r3, r3, #16
 801e99a:	f53f af4e 	bmi.w	801e83a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e99e:	3a01      	subs	r2, #1
 801e9a0:	4293      	cmp	r3, r2
 801e9a2:	f6bf af4a 	bge.w	801e83a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e9a6:	9b06      	ldr	r3, [sp, #24]
 801e9a8:	9309      	str	r3, [sp, #36]	; 0x24
 801e9aa:	9b07      	ldr	r3, [sp, #28]
 801e9ac:	930b      	str	r3, [sp, #44]	; 0x2c
 801e9ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e9b0:	2b00      	cmp	r3, #0
 801e9b2:	dc70      	bgt.n	801ea96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801e9b4:	9b06      	ldr	r3, [sp, #24]
 801e9b6:	9a07      	ldr	r2, [sp, #28]
 801e9b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e9bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e9c0:	9307      	str	r3, [sp, #28]
 801e9c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e9c4:	2b00      	cmp	r3, #0
 801e9c6:	f340 80eb 	ble.w	801eba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801e9ca:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e9ce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e9d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e9d6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e9d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e9dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e9e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e9e4:	eef0 6a62 	vmov.f32	s13, s5
 801e9e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e9ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e9f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e9f4:	ee16 ba90 	vmov	fp, s13
 801e9f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e9fc:	eef0 6a43 	vmov.f32	s13, s6
 801ea00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ea04:	ee12 2a90 	vmov	r2, s5
 801ea08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ea0c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea10:	ee13 2a10 	vmov	r2, s6
 801ea14:	931b      	str	r3, [sp, #108]	; 0x6c
 801ea16:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ea18:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea1c:	931c      	str	r3, [sp, #112]	; 0x70
 801ea1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ea20:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ea22:	3b01      	subs	r3, #1
 801ea24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea28:	930a      	str	r3, [sp, #40]	; 0x28
 801ea2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ea2c:	bf08      	it	eq
 801ea2e:	4613      	moveq	r3, r2
 801ea30:	ee16 5a90 	vmov	r5, s13
 801ea34:	9306      	str	r3, [sp, #24]
 801ea36:	eeb0 3a67 	vmov.f32	s6, s15
 801ea3a:	eef0 2a47 	vmov.f32	s5, s14
 801ea3e:	e6d2      	b.n	801e7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ea40:	b149      	cbz	r1, 801ea56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ea42:	5cba      	ldrb	r2, [r7, r2]
 801ea44:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ea48:	4422      	add	r2, r4
 801ea4a:	4660      	mov	r0, ip
 801ea4c:	4666      	mov	r6, ip
 801ea4e:	e734      	b.n	801e8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ea50:	4660      	mov	r0, ip
 801ea52:	4662      	mov	r2, ip
 801ea54:	e731      	b.n	801e8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ea56:	4660      	mov	r0, ip
 801ea58:	4662      	mov	r2, ip
 801ea5a:	e7f7      	b.n	801ea4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801ea5c:	f110 0c01 	adds.w	ip, r0, #1
 801ea60:	f53f af74 	bmi.w	801e94c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ea64:	4562      	cmp	r2, ip
 801ea66:	f6ff af71 	blt.w	801e94c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ea6a:	f116 0c01 	adds.w	ip, r6, #1
 801ea6e:	f53f af6d 	bmi.w	801e94c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ea72:	4567      	cmp	r7, ip
 801ea74:	f6ff af6a 	blt.w	801e94c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ea78:	b23f      	sxth	r7, r7
 801ea7a:	b212      	sxth	r2, r2
 801ea7c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801ea80:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801ea84:	9200      	str	r2, [sp, #0]
 801ea86:	9701      	str	r7, [sp, #4]
 801ea88:	4623      	mov	r3, r4
 801ea8a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ea8e:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ea90:	f7ff fde6 	bl	801e660 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801ea94:	e75a      	b.n	801e94c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ea96:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ea98:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ea9c:	ea4f 462b 	mov.w	r6, fp, asr #16
 801eaa0:	1428      	asrs	r0, r5, #16
 801eaa2:	fb02 6000 	mla	r0, r2, r0, r6
 801eaa6:	9e08      	ldr	r6, [sp, #32]
 801eaa8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801eaac:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801eab0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801eab4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801eab8:	1837      	adds	r7, r6, r0
 801eaba:	eb04 0c08 	add.w	ip, r4, r8
 801eabe:	2b00      	cmp	r3, #0
 801eac0:	d060      	beq.n	801eb84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801eac2:	787e      	ldrb	r6, [r7, #1]
 801eac4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801eac8:	4426      	add	r6, r4
 801eaca:	2900      	cmp	r1, #0
 801eacc:	d062      	beq.n	801eb94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801eace:	18b8      	adds	r0, r7, r2
 801ead0:	5cba      	ldrb	r2, [r7, r2]
 801ead2:	7840      	ldrb	r0, [r0, #1]
 801ead4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ead8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801eadc:	4422      	add	r2, r4
 801eade:	4420      	add	r0, r4
 801eae0:	b29b      	uxth	r3, r3
 801eae2:	b289      	uxth	r1, r1
 801eae4:	fb03 f901 	mul.w	r9, r3, r1
 801eae8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801eaec:	011b      	lsls	r3, r3, #4
 801eaee:	b289      	uxth	r1, r1
 801eaf0:	78b7      	ldrb	r7, [r6, #2]
 801eaf2:	f89c a002 	ldrb.w	sl, [ip, #2]
 801eaf6:	f89c c001 	ldrb.w	ip, [ip, #1]
 801eafa:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801eafe:	eba3 0309 	sub.w	r3, r3, r9
 801eb02:	b29b      	uxth	r3, r3
 801eb04:	ebae 0e01 	sub.w	lr, lr, r1
 801eb08:	fa1f fe8e 	uxth.w	lr, lr
 801eb0c:	435f      	muls	r7, r3
 801eb0e:	fb0e 770a 	mla	r7, lr, sl, r7
 801eb12:	f892 a002 	ldrb.w	sl, [r2, #2]
 801eb16:	fb01 770a 	mla	r7, r1, sl, r7
 801eb1a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801eb1e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801eb22:	f814 7008 	ldrb.w	r7, [r4, r8]
 801eb26:	f896 8000 	ldrb.w	r8, [r6]
 801eb2a:	7876      	ldrb	r6, [r6, #1]
 801eb2c:	fb03 f808 	mul.w	r8, r3, r8
 801eb30:	fb0e 8807 	mla	r8, lr, r7, r8
 801eb34:	7817      	ldrb	r7, [r2, #0]
 801eb36:	fb01 8807 	mla	r8, r1, r7, r8
 801eb3a:	7807      	ldrb	r7, [r0, #0]
 801eb3c:	fb09 8707 	mla	r7, r9, r7, r8
 801eb40:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801eb44:	4373      	muls	r3, r6
 801eb46:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801eb4a:	7856      	ldrb	r6, [r2, #1]
 801eb4c:	ea47 070a 	orr.w	r7, r7, sl
 801eb50:	fb0e 330c 	mla	r3, lr, ip, r3
 801eb54:	f890 a001 	ldrb.w	sl, [r0, #1]
 801eb58:	fb01 3306 	mla	r3, r1, r6, r3
 801eb5c:	fb09 3a0a 	mla	sl, r9, sl, r3
 801eb60:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eb64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eb66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eb6a:	ea47 070a 	orr.w	r7, r7, sl
 801eb6e:	f823 7b02 	strh.w	r7, [r3], #2
 801eb72:	930b      	str	r3, [sp, #44]	; 0x2c
 801eb74:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801eb76:	449b      	add	fp, r3
 801eb78:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eb7a:	441d      	add	r5, r3
 801eb7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb7e:	3b01      	subs	r3, #1
 801eb80:	9309      	str	r3, [sp, #36]	; 0x24
 801eb82:	e714      	b.n	801e9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801eb84:	b149      	cbz	r1, 801eb9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801eb86:	5cba      	ldrb	r2, [r7, r2]
 801eb88:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801eb8c:	4422      	add	r2, r4
 801eb8e:	4660      	mov	r0, ip
 801eb90:	4666      	mov	r6, ip
 801eb92:	e7a5      	b.n	801eae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801eb94:	4660      	mov	r0, ip
 801eb96:	4662      	mov	r2, ip
 801eb98:	e7a2      	b.n	801eae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801eb9a:	4660      	mov	r0, ip
 801eb9c:	4662      	mov	r2, ip
 801eb9e:	e7f7      	b.n	801eb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801eba0:	b00f      	add	sp, #60	; 0x3c
 801eba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eba6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801eba6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ebaa:	b085      	sub	sp, #20
 801ebac:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801ebb0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801ebb4:	9102      	str	r1, [sp, #8]
 801ebb6:	2c00      	cmp	r4, #0
 801ebb8:	fb04 710c 	mla	r1, r4, ip, r7
 801ebbc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801ebc0:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801ebc4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801ebc8:	eb02 0e01 	add.w	lr, r2, r1
 801ebcc:	f2c0 8122 	blt.w	801ee14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ebd0:	45a0      	cmp	r8, r4
 801ebd2:	f340 811f 	ble.w	801ee14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ebd6:	2f00      	cmp	r7, #0
 801ebd8:	f2c0 811a 	blt.w	801ee10 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ebdc:	45bc      	cmp	ip, r7
 801ebde:	f340 8117 	ble.w	801ee10 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ebe2:	5c52      	ldrb	r2, [r2, r1]
 801ebe4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801ebe8:	1c7a      	adds	r2, r7, #1
 801ebea:	f100 8116 	bmi.w	801ee1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ebee:	4594      	cmp	ip, r2
 801ebf0:	f340 8113 	ble.w	801ee1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ebf4:	2e00      	cmp	r6, #0
 801ebf6:	f000 8112 	beq.w	801ee1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801ebfa:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ebfe:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ec02:	3401      	adds	r4, #1
 801ec04:	f100 810f 	bmi.w	801ee26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ec08:	45a0      	cmp	r8, r4
 801ec0a:	f340 810c 	ble.w	801ee26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ec0e:	2800      	cmp	r0, #0
 801ec10:	f000 810c 	beq.w	801ee2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801ec14:	2f00      	cmp	r7, #0
 801ec16:	f2c0 8104 	blt.w	801ee22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ec1a:	45bc      	cmp	ip, r7
 801ec1c:	f340 8101 	ble.w	801ee22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ec20:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801ec24:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801ec28:	3701      	adds	r7, #1
 801ec2a:	f100 8102 	bmi.w	801ee32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ec2e:	45bc      	cmp	ip, r7
 801ec30:	f340 80ff 	ble.w	801ee32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ec34:	2e00      	cmp	r6, #0
 801ec36:	f000 80fe 	beq.w	801ee36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801ec3a:	44f4      	add	ip, lr
 801ec3c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801ec40:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801ec44:	b2b6      	uxth	r6, r6
 801ec46:	b280      	uxth	r0, r0
 801ec48:	fb00 fe06 	mul.w	lr, r0, r6
 801ec4c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ec50:	0136      	lsls	r6, r6, #4
 801ec52:	eba6 070e 	sub.w	r7, r6, lr
 801ec56:	b280      	uxth	r0, r0
 801ec58:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ec5c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ec60:	b2bf      	uxth	r7, r7
 801ec62:	1a1b      	subs	r3, r3, r0
 801ec64:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ec68:	b29b      	uxth	r3, r3
 801ec6a:	fb0a f607 	mul.w	r6, sl, r7
 801ec6e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ec72:	fb0b 6603 	mla	r6, fp, r3, r6
 801ec76:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ec7a:	fb00 6609 	mla	r6, r0, r9, r6
 801ec7e:	fb0e 6608 	mla	r6, lr, r8, r6
 801ec82:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ec86:	9600      	str	r6, [sp, #0]
 801ec88:	2e00      	cmp	r6, #0
 801ec8a:	f000 80be 	beq.w	801ee0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801ec8e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ec92:	fb0b fc0c 	mul.w	ip, fp, ip
 801ec96:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ec9a:	fb0b f505 	mul.w	r5, fp, r5
 801ec9e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801eca2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801eca6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ecaa:	44dc      	add	ip, fp
 801ecac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecb0:	9501      	str	r5, [sp, #4]
 801ecb2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ecb6:	9503      	str	r5, [sp, #12]
 801ecb8:	9d01      	ldr	r5, [sp, #4]
 801ecba:	9e02      	ldr	r6, [sp, #8]
 801ecbc:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ecc0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ecc4:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ecc8:	fb0a fc0c 	mul.w	ip, sl, ip
 801eccc:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ecd0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ecd4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ecd8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ecdc:	4465      	add	r5, ip
 801ecde:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ece2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ece6:	fb09 fc0c 	mul.w	ip, r9, ip
 801ecea:	fb09 f904 	mul.w	r9, r9, r4
 801ecee:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ecf2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ecf6:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ecfa:	fb08 f404 	mul.w	r4, r8, r4
 801ecfe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ed02:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ed06:	fb08 f802 	mul.w	r8, r8, r2
 801ed0a:	fb0a fa01 	mul.w	sl, sl, r1
 801ed0e:	0a22      	lsrs	r2, r4, #8
 801ed10:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ed14:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ed18:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ed1c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ed20:	4414      	add	r4, r2
 801ed22:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ed26:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ed2a:	0a2d      	lsrs	r5, r5, #8
 801ed2c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ed30:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ed34:	9a03      	ldr	r2, [sp, #12]
 801ed36:	8836      	ldrh	r6, [r6, #0]
 801ed38:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ed3c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ed40:	437d      	muls	r5, r7
 801ed42:	4461      	add	r1, ip
 801ed44:	0a24      	lsrs	r4, r4, #8
 801ed46:	fb02 5503 	mla	r5, r2, r3, r5
 801ed4a:	0a09      	lsrs	r1, r1, #8
 801ed4c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ed50:	fb04 540e 	mla	r4, r4, lr, r5
 801ed54:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ed58:	fb01 4100 	mla	r1, r1, r0, r4
 801ed5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed60:	0a09      	lsrs	r1, r1, #8
 801ed62:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed66:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ed6a:	fb07 f70a 	mul.w	r7, r7, sl
 801ed6e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ed72:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ed76:	fb03 7101 	mla	r1, r3, r1, r7
 801ed7a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ed7e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ed82:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ed86:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ed8a:	fb00 e101 	mla	r1, r0, r1, lr
 801ed8e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801ed92:	9a00      	ldr	r2, [sp, #0]
 801ed94:	b287      	uxth	r7, r0
 801ed96:	437a      	muls	r2, r7
 801ed98:	0a09      	lsrs	r1, r1, #8
 801ed9a:	1c53      	adds	r3, r2, #1
 801ed9c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801eda0:	4321      	orrs	r1, r4
 801eda2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eda6:	1235      	asrs	r5, r6, #8
 801eda8:	0c0a      	lsrs	r2, r1, #16
 801edaa:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801edae:	b2db      	uxtb	r3, r3
 801edb0:	fb12 f207 	smulbb	r2, r2, r7
 801edb4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801edb8:	fb05 2503 	mla	r5, r5, r3, r2
 801edbc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801edc0:	10f2      	asrs	r2, r6, #3
 801edc2:	b2c8      	uxtb	r0, r1
 801edc4:	00f6      	lsls	r6, r6, #3
 801edc6:	fb14 f407 	smulbb	r4, r4, r7
 801edca:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801edce:	b2f6      	uxtb	r6, r6
 801edd0:	fb10 f007 	smulbb	r0, r0, r7
 801edd4:	fb02 4203 	mla	r2, r2, r3, r4
 801edd8:	b2ad      	uxth	r5, r5
 801edda:	fb06 0303 	mla	r3, r6, r3, r0
 801edde:	b299      	uxth	r1, r3
 801ede0:	b294      	uxth	r4, r2
 801ede2:	1c6b      	adds	r3, r5, #1
 801ede4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ede8:	1c62      	adds	r2, r4, #1
 801edea:	1c4b      	adds	r3, r1, #1
 801edec:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801edf0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801edf4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801edf8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801edfc:	0952      	lsrs	r2, r2, #5
 801edfe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ee02:	432b      	orrs	r3, r5
 801ee04:	4313      	orrs	r3, r2
 801ee06:	9a02      	ldr	r2, [sp, #8]
 801ee08:	8013      	strh	r3, [r2, #0]
 801ee0a:	b005      	add	sp, #20
 801ee0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee10:	2500      	movs	r5, #0
 801ee12:	e6e9      	b.n	801ebe8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ee14:	2100      	movs	r1, #0
 801ee16:	460d      	mov	r5, r1
 801ee18:	e6f3      	b.n	801ec02 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ee1a:	2100      	movs	r1, #0
 801ee1c:	e6f1      	b.n	801ec02 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ee1e:	4631      	mov	r1, r6
 801ee20:	e6ef      	b.n	801ec02 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ee22:	2400      	movs	r4, #0
 801ee24:	e700      	b.n	801ec28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ee26:	2200      	movs	r2, #0
 801ee28:	4614      	mov	r4, r2
 801ee2a:	e70b      	b.n	801ec44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ee2c:	4602      	mov	r2, r0
 801ee2e:	4604      	mov	r4, r0
 801ee30:	e708      	b.n	801ec44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ee32:	2200      	movs	r2, #0
 801ee34:	e706      	b.n	801ec44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ee36:	4632      	mov	r2, r6
 801ee38:	e704      	b.n	801ec44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ee3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee3e:	b09f      	sub	sp, #124	; 0x7c
 801ee40:	921b      	str	r2, [sp, #108]	; 0x6c
 801ee42:	9309      	str	r3, [sp, #36]	; 0x24
 801ee44:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ee46:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ee4a:	931c      	str	r3, [sp, #112]	; 0x70
 801ee4c:	9119      	str	r1, [sp, #100]	; 0x64
 801ee4e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ee52:	901d      	str	r0, [sp, #116]	; 0x74
 801ee54:	6850      	ldr	r0, [r2, #4]
 801ee56:	6812      	ldr	r2, [r2, #0]
 801ee58:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801ee5a:	fb00 1303 	mla	r3, r0, r3, r1
 801ee5e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ee62:	930c      	str	r3, [sp, #48]	; 0x30
 801ee64:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ee66:	681b      	ldr	r3, [r3, #0]
 801ee68:	9312      	str	r3, [sp, #72]	; 0x48
 801ee6a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ee6c:	685e      	ldr	r6, [r3, #4]
 801ee6e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801ee72:	930d      	str	r3, [sp, #52]	; 0x34
 801ee74:	3604      	adds	r6, #4
 801ee76:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ee78:	2b00      	cmp	r3, #0
 801ee7a:	dc03      	bgt.n	801ee84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ee7c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ee7e:	2b00      	cmp	r3, #0
 801ee80:	f340 8388 	ble.w	801f594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ee84:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ee86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ee8e:	1e48      	subs	r0, r1, #1
 801ee90:	1e57      	subs	r7, r2, #1
 801ee92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee94:	2b00      	cmp	r3, #0
 801ee96:	f340 8195 	ble.w	801f1c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ee9a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ee9c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801eea0:	ea4f 4325 	mov.w	r3, r5, asr #16
 801eea4:	d406      	bmi.n	801eeb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eea6:	4584      	cmp	ip, r0
 801eea8:	da04      	bge.n	801eeb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eeaa:	2b00      	cmp	r3, #0
 801eeac:	db02      	blt.n	801eeb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eeae:	42bb      	cmp	r3, r7
 801eeb0:	f2c0 8189 	blt.w	801f1c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801eeb4:	f11c 0c01 	adds.w	ip, ip, #1
 801eeb8:	f100 8177 	bmi.w	801f1aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801eebc:	4561      	cmp	r1, ip
 801eebe:	f2c0 8174 	blt.w	801f1aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801eec2:	3301      	adds	r3, #1
 801eec4:	f100 8171 	bmi.w	801f1aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801eec8:	429a      	cmp	r2, r3
 801eeca:	f2c0 816e 	blt.w	801f1aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801eece:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eed0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801eed2:	931a      	str	r3, [sp, #104]	; 0x68
 801eed4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801eed6:	2b00      	cmp	r3, #0
 801eed8:	f340 8193 	ble.w	801f202 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801eedc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801eede:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801eee2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801eee4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801eee8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801eeea:	141b      	asrs	r3, r3, #16
 801eeec:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801eef0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801eef4:	f100 81d6 	bmi.w	801f2a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801eef8:	f100 38ff 	add.w	r8, r0, #4294967295
 801eefc:	4543      	cmp	r3, r8
 801eefe:	f280 81d1 	bge.w	801f2a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ef02:	f1bc 0f00 	cmp.w	ip, #0
 801ef06:	f2c0 81cd 	blt.w	801f2a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ef0a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ef0e:	45c4      	cmp	ip, r8
 801ef10:	f280 81c8 	bge.w	801f2a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ef14:	b200      	sxth	r0, r0
 801ef16:	fb0c 3300 	mla	r3, ip, r0, r3
 801ef1a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ef1c:	eb04 0803 	add.w	r8, r4, r3
 801ef20:	5ce3      	ldrb	r3, [r4, r3]
 801ef22:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ef26:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ef2a:	2a00      	cmp	r2, #0
 801ef2c:	f000 81af 	beq.w	801f28e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ef30:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ef34:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ef38:	940e      	str	r4, [sp, #56]	; 0x38
 801ef3a:	0e24      	lsrs	r4, r4, #24
 801ef3c:	9415      	str	r4, [sp, #84]	; 0x54
 801ef3e:	b179      	cbz	r1, 801ef60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ef40:	eb08 0c00 	add.w	ip, r8, r0
 801ef44:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ef48:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ef4c:	900a      	str	r0, [sp, #40]	; 0x28
 801ef4e:	0e00      	lsrs	r0, r0, #24
 801ef50:	9013      	str	r0, [sp, #76]	; 0x4c
 801ef52:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ef56:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ef5a:	900f      	str	r0, [sp, #60]	; 0x3c
 801ef5c:	0e00      	lsrs	r0, r0, #24
 801ef5e:	9016      	str	r0, [sp, #88]	; 0x58
 801ef60:	b292      	uxth	r2, r2
 801ef62:	b289      	uxth	r1, r1
 801ef64:	fb02 f901 	mul.w	r9, r2, r1
 801ef68:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ef6c:	0112      	lsls	r2, r2, #4
 801ef6e:	eba2 0809 	sub.w	r8, r2, r9
 801ef72:	b289      	uxth	r1, r1
 801ef74:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ef78:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ef7a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ef7c:	fa1f f888 	uxth.w	r8, r8
 801ef80:	1a52      	subs	r2, r2, r1
 801ef82:	b292      	uxth	r2, r2
 801ef84:	fb08 f000 	mul.w	r0, r8, r0
 801ef88:	fb02 000e 	mla	r0, r2, lr, r0
 801ef8c:	fb01 0004 	mla	r0, r1, r4, r0
 801ef90:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ef92:	fb09 0004 	mla	r0, r9, r4, r0
 801ef96:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ef9a:	2800      	cmp	r0, #0
 801ef9c:	f000 80fa 	beq.w	801f194 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801efa0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801efa4:	d01b      	beq.n	801efde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801efa6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801efaa:	fb0e fa0a 	mul.w	sl, lr, sl
 801efae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801efb2:	fb0e fe03 	mul.w	lr, lr, r3
 801efb6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801efba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801efbe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801efc2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801efc6:	4453      	add	r3, sl
 801efc8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801efcc:	0a1b      	lsrs	r3, r3, #8
 801efce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801efd2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801efd6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801efda:	ea43 030c 	orr.w	r3, r3, ip
 801efde:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801efe0:	2cff      	cmp	r4, #255	; 0xff
 801efe2:	d021      	beq.n	801f028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801efe4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801efe6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801efea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801efec:	fb04 fb0b 	mul.w	fp, r4, fp
 801eff0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801eff2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801eff6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801eff8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801effc:	fb04 fa0a 	mul.w	sl, r4, sl
 801f000:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f004:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f008:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f00c:	44de      	add	lr, fp
 801f00e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f012:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f016:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f01a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f01e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f022:	ea4e 040a 	orr.w	r4, lr, sl
 801f026:	940e      	str	r4, [sp, #56]	; 0x38
 801f028:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f02a:	2cff      	cmp	r4, #255	; 0xff
 801f02c:	d021      	beq.n	801f072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801f02e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f030:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f034:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f036:	fb04 fb0b 	mul.w	fp, r4, fp
 801f03a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f03c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f040:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f042:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f046:	fb04 fa0a 	mul.w	sl, r4, sl
 801f04a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f04e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f052:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f056:	44de      	add	lr, fp
 801f058:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f05c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f060:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f064:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f068:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f06c:	ea4e 040a 	orr.w	r4, lr, sl
 801f070:	940a      	str	r4, [sp, #40]	; 0x28
 801f072:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f074:	2cff      	cmp	r4, #255	; 0xff
 801f076:	d021      	beq.n	801f0bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801f078:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f07a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f07e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f080:	fb04 fb0b 	mul.w	fp, r4, fp
 801f084:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f086:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f08a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801f08c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f090:	fb04 fa0a 	mul.w	sl, r4, sl
 801f094:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f098:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f09c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f0a0:	44de      	add	lr, fp
 801f0a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f0a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f0aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f0ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f0b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f0b6:	ea4e 040a 	orr.w	r4, lr, sl
 801f0ba:	940f      	str	r4, [sp, #60]	; 0x3c
 801f0bc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f0be:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f0c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f0c4:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801f0c8:	fb08 fc0c 	mul.w	ip, r8, ip
 801f0cc:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f0d0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f0d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f0d6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f0da:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f0de:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801f0e0:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f0e4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801f0e8:	fb08 f80e 	mul.w	r8, r8, lr
 801f0ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f0f0:	fb02 8303 	mla	r3, r2, r3, r8
 801f0f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f0f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f0f8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f0fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f0fe:	fb01 330a 	mla	r3, r1, sl, r3
 801f102:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801f106:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801f108:	fb09 3901 	mla	r9, r9, r1, r3
 801f10c:	4342      	muls	r2, r0
 801f10e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f112:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f116:	883b      	ldrh	r3, [r7, #0]
 801f118:	1c50      	adds	r0, r2, #1
 801f11a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f11e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f122:	ea4c 0c09 	orr.w	ip, ip, r9
 801f126:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801f12a:	1219      	asrs	r1, r3, #8
 801f12c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801f130:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801f134:	b2c0      	uxtb	r0, r0
 801f136:	fb12 f204 	smulbb	r2, r2, r4
 801f13a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f13e:	fb01 2100 	mla	r1, r1, r0, r2
 801f142:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801f146:	10da      	asrs	r2, r3, #3
 801f148:	fa5f fc8c 	uxtb.w	ip, ip
 801f14c:	00db      	lsls	r3, r3, #3
 801f14e:	fb1c fc04 	smulbb	ip, ip, r4
 801f152:	b2db      	uxtb	r3, r3
 801f154:	b289      	uxth	r1, r1
 801f156:	fb03 c300 	mla	r3, r3, r0, ip
 801f15a:	fa1f fc83 	uxth.w	ip, r3
 801f15e:	1c4b      	adds	r3, r1, #1
 801f160:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f164:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f168:	fb1e fe04 	smulbb	lr, lr, r4
 801f16c:	f10c 0301 	add.w	r3, ip, #1
 801f170:	fb02 e200 	mla	r2, r2, r0, lr
 801f174:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f178:	b292      	uxth	r2, r2
 801f17a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f17e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f182:	430b      	orrs	r3, r1
 801f184:	1c51      	adds	r1, r2, #1
 801f186:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f18a:	0952      	lsrs	r2, r2, #5
 801f18c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f190:	4313      	orrs	r3, r2
 801f192:	803b      	strh	r3, [r7, #0]
 801f194:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f196:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f198:	441a      	add	r2, r3
 801f19a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f19c:	9229      	str	r2, [sp, #164]	; 0xa4
 801f19e:	441d      	add	r5, r3
 801f1a0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801f1a2:	3b01      	subs	r3, #1
 801f1a4:	3702      	adds	r7, #2
 801f1a6:	931a      	str	r3, [sp, #104]	; 0x68
 801f1a8:	e694      	b.n	801eed4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f1aa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f1ac:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f1ae:	441c      	add	r4, r3
 801f1b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f1b2:	9429      	str	r4, [sp, #164]	; 0xa4
 801f1b4:	441d      	add	r5, r3
 801f1b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f1b8:	3b01      	subs	r3, #1
 801f1ba:	9309      	str	r3, [sp, #36]	; 0x24
 801f1bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f1be:	3302      	adds	r3, #2
 801f1c0:	930c      	str	r3, [sp, #48]	; 0x30
 801f1c2:	e666      	b.n	801ee92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f1c4:	d024      	beq.n	801f210 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801f1c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f1c8:	982b      	ldr	r0, [sp, #172]	; 0xac
 801f1ca:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f1cc:	3b01      	subs	r3, #1
 801f1ce:	fb00 4003 	mla	r0, r0, r3, r4
 801f1d2:	1400      	asrs	r0, r0, #16
 801f1d4:	f53f ae7b 	bmi.w	801eece <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f1d8:	3901      	subs	r1, #1
 801f1da:	4288      	cmp	r0, r1
 801f1dc:	f6bf ae77 	bge.w	801eece <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f1e0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801f1e2:	fb01 5303 	mla	r3, r1, r3, r5
 801f1e6:	141b      	asrs	r3, r3, #16
 801f1e8:	f53f ae71 	bmi.w	801eece <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f1ec:	3a01      	subs	r2, #1
 801f1ee:	4293      	cmp	r3, r2
 801f1f0:	f6bf ae6d 	bge.w	801eece <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f1f4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f1f8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801f1fc:	f1bb 0f00 	cmp.w	fp, #0
 801f200:	dc70      	bgt.n	801f2e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801f202:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f204:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f208:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f20a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f20e:	930c      	str	r3, [sp, #48]	; 0x30
 801f210:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f212:	2b00      	cmp	r3, #0
 801f214:	f340 81be 	ble.w	801f594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801f218:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f21c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f220:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f224:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f226:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f22a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f22e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f232:	eef0 6a62 	vmov.f32	s13, s5
 801f236:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f23a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f23e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f242:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801f246:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f24a:	eef0 6a43 	vmov.f32	s13, s6
 801f24e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f252:	ee12 2a90 	vmov	r2, s5
 801f256:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f25a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f25e:	ee13 2a10 	vmov	r2, s6
 801f262:	932b      	str	r3, [sp, #172]	; 0xac
 801f264:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f266:	fb92 f3f3 	sdiv	r3, r2, r3
 801f26a:	932c      	str	r3, [sp, #176]	; 0xb0
 801f26c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f26e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801f270:	3b01      	subs	r3, #1
 801f272:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f276:	9319      	str	r3, [sp, #100]	; 0x64
 801f278:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f27a:	bf08      	it	eq
 801f27c:	4613      	moveq	r3, r2
 801f27e:	ee16 5a90 	vmov	r5, s13
 801f282:	9309      	str	r3, [sp, #36]	; 0x24
 801f284:	eeb0 3a67 	vmov.f32	s6, s15
 801f288:	eef0 2a47 	vmov.f32	s5, s14
 801f28c:	e5f3      	b.n	801ee76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f28e:	2900      	cmp	r1, #0
 801f290:	f43f ae66 	beq.w	801ef60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801f294:	f818 0000 	ldrb.w	r0, [r8, r0]
 801f298:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801f29c:	900a      	str	r0, [sp, #40]	; 0x28
 801f29e:	0e00      	lsrs	r0, r0, #24
 801f2a0:	9013      	str	r0, [sp, #76]	; 0x4c
 801f2a2:	e65d      	b.n	801ef60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801f2a4:	f113 0801 	adds.w	r8, r3, #1
 801f2a8:	f53f af74 	bmi.w	801f194 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f2ac:	4540      	cmp	r0, r8
 801f2ae:	f6ff af71 	blt.w	801f194 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f2b2:	f11c 0801 	adds.w	r8, ip, #1
 801f2b6:	f53f af6d 	bmi.w	801f194 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f2ba:	45c6      	cmp	lr, r8
 801f2bc:	f6ff af6a 	blt.w	801f194 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f2c0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801f2c2:	9302      	str	r3, [sp, #8]
 801f2c4:	b200      	sxth	r0, r0
 801f2c6:	fa0f f38e 	sxth.w	r3, lr
 801f2ca:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801f2ce:	e9cd c203 	strd	ip, r2, [sp, #12]
 801f2d2:	9301      	str	r3, [sp, #4]
 801f2d4:	9000      	str	r0, [sp, #0]
 801f2d6:	4633      	mov	r3, r6
 801f2d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f2da:	981d      	ldr	r0, [sp, #116]	; 0x74
 801f2dc:	4639      	mov	r1, r7
 801f2de:	f7ff fc62 	bl	801eba6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801f2e2:	e757      	b.n	801f194 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f2e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f2e6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801f2e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f2ec:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f2ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f2f2:	1427      	asrs	r7, r4, #16
 801f2f4:	142b      	asrs	r3, r5, #16
 801f2f6:	fb01 7303 	mla	r3, r1, r3, r7
 801f2fa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f2fc:	18e7      	adds	r7, r4, r3
 801f2fe:	5ce3      	ldrb	r3, [r4, r3]
 801f300:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f304:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f308:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f30c:	2a00      	cmp	r2, #0
 801f30e:	f000 8137 	beq.w	801f580 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f312:	f897 e001 	ldrb.w	lr, [r7, #1]
 801f316:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801f31a:	9410      	str	r4, [sp, #64]	; 0x40
 801f31c:	0e24      	lsrs	r4, r4, #24
 801f31e:	9417      	str	r4, [sp, #92]	; 0x5c
 801f320:	b170      	cbz	r0, 801f340 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f322:	eb07 0e01 	add.w	lr, r7, r1
 801f326:	5c79      	ldrb	r1, [r7, r1]
 801f328:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f32c:	910b      	str	r1, [sp, #44]	; 0x2c
 801f32e:	0e09      	lsrs	r1, r1, #24
 801f330:	9114      	str	r1, [sp, #80]	; 0x50
 801f332:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801f336:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f33a:	9111      	str	r1, [sp, #68]	; 0x44
 801f33c:	0e09      	lsrs	r1, r1, #24
 801f33e:	9118      	str	r1, [sp, #96]	; 0x60
 801f340:	b292      	uxth	r2, r2
 801f342:	b280      	uxth	r0, r0
 801f344:	fb02 f800 	mul.w	r8, r2, r0
 801f348:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f34c:	0112      	lsls	r2, r2, #4
 801f34e:	eba2 0e08 	sub.w	lr, r2, r8
 801f352:	b280      	uxth	r0, r0
 801f354:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f358:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801f35a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f35c:	fa1f fe8e 	uxth.w	lr, lr
 801f360:	1a12      	subs	r2, r2, r0
 801f362:	b292      	uxth	r2, r2
 801f364:	fb0e f101 	mul.w	r1, lr, r1
 801f368:	fb02 110c 	mla	r1, r2, ip, r1
 801f36c:	fb00 1104 	mla	r1, r0, r4, r1
 801f370:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f372:	fb08 1104 	mla	r1, r8, r4, r1
 801f376:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f37a:	2900      	cmp	r1, #0
 801f37c:	f000 80f5 	beq.w	801f56a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f380:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f384:	d019      	beq.n	801f3ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801f386:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f38a:	fb0c fa0a 	mul.w	sl, ip, sl
 801f38e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f392:	fb0c fc03 	mul.w	ip, ip, r3
 801f396:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f39a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f39e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f3a2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f3a6:	4453      	add	r3, sl
 801f3a8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f3ac:	0a1b      	lsrs	r3, r3, #8
 801f3ae:	0a3f      	lsrs	r7, r7, #8
 801f3b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f3b4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f3b8:	433b      	orrs	r3, r7
 801f3ba:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f3bc:	2cff      	cmp	r4, #255	; 0xff
 801f3be:	d020      	beq.n	801f402 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801f3c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f3c2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f3c6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f3c8:	4367      	muls	r7, r4
 801f3ca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f3cc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f3d0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f3d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f3d6:	fb04 fa0a 	mul.w	sl, r4, sl
 801f3da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f3de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f3e2:	44bc      	add	ip, r7
 801f3e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f3e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f3ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f3f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f3f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f3f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f3fc:	ea4c 040a 	orr.w	r4, ip, sl
 801f400:	9410      	str	r4, [sp, #64]	; 0x40
 801f402:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f404:	2cff      	cmp	r4, #255	; 0xff
 801f406:	d020      	beq.n	801f44a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801f408:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f40a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f40e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f410:	4367      	muls	r7, r4
 801f412:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f414:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f418:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f41a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f41e:	fb04 fa0a 	mul.w	sl, r4, sl
 801f422:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f426:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f42a:	44bc      	add	ip, r7
 801f42c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f430:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f434:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f438:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f43c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f440:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f444:	ea4c 040a 	orr.w	r4, ip, sl
 801f448:	940b      	str	r4, [sp, #44]	; 0x2c
 801f44a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f44c:	2cff      	cmp	r4, #255	; 0xff
 801f44e:	d020      	beq.n	801f492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801f450:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f452:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f456:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f458:	4367      	muls	r7, r4
 801f45a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f45c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f460:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f462:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f466:	fb04 fa0a 	mul.w	sl, r4, sl
 801f46a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f46e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f472:	44bc      	add	ip, r7
 801f474:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f478:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f47c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f480:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f484:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f488:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f48c:	ea4c 040a 	orr.w	r4, ip, sl
 801f490:	9411      	str	r4, [sp, #68]	; 0x44
 801f492:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f494:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f498:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f49a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f49e:	fb0e f707 	mul.w	r7, lr, r7
 801f4a2:	fb02 770c 	mla	r7, r2, ip, r7
 801f4a6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f4aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f4ac:	fb00 770c 	mla	r7, r0, ip, r7
 801f4b0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f4b4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f4b6:	fb08 770c 	mla	r7, r8, ip, r7
 801f4ba:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801f4be:	fb0e fe0c 	mul.w	lr, lr, ip
 801f4c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f4c6:	fb02 e303 	mla	r3, r2, r3, lr
 801f4ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f4cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f4ce:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f4d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f4d4:	fb00 330a 	mla	r3, r0, sl, r3
 801f4d8:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801f4dc:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f4e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f4e2:	f8b9 0000 	ldrh.w	r0, [r9]
 801f4e6:	434b      	muls	r3, r1
 801f4e8:	0a3f      	lsrs	r7, r7, #8
 801f4ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f4ee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f4f2:	1c59      	adds	r1, r3, #1
 801f4f4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f4f8:	ea47 070c 	orr.w	r7, r7, ip
 801f4fc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801f500:	1202      	asrs	r2, r0, #8
 801f502:	0c3b      	lsrs	r3, r7, #16
 801f504:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f508:	b2c9      	uxtb	r1, r1
 801f50a:	fb13 f304 	smulbb	r3, r3, r4
 801f50e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f512:	fb02 3201 	mla	r2, r2, r1, r3
 801f516:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f51a:	10c3      	asrs	r3, r0, #3
 801f51c:	b2ff      	uxtb	r7, r7
 801f51e:	00c0      	lsls	r0, r0, #3
 801f520:	b292      	uxth	r2, r2
 801f522:	fb1c fc04 	smulbb	ip, ip, r4
 801f526:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801f52a:	b2c0      	uxtb	r0, r0
 801f52c:	fb17 f704 	smulbb	r7, r7, r4
 801f530:	fb03 c301 	mla	r3, r3, r1, ip
 801f534:	fb00 7001 	mla	r0, r0, r1, r7
 801f538:	f102 0c01 	add.w	ip, r2, #1
 801f53c:	b280      	uxth	r0, r0
 801f53e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801f542:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801f546:	1c42      	adds	r2, r0, #1
 801f548:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f54c:	b29b      	uxth	r3, r3
 801f54e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f552:	ea42 020c 	orr.w	r2, r2, ip
 801f556:	f103 0c01 	add.w	ip, r3, #1
 801f55a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f55e:	095b      	lsrs	r3, r3, #5
 801f560:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f564:	431a      	orrs	r2, r3
 801f566:	f8a9 2000 	strh.w	r2, [r9]
 801f56a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f56c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f56e:	441a      	add	r2, r3
 801f570:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f572:	9229      	str	r2, [sp, #164]	; 0xa4
 801f574:	f109 0902 	add.w	r9, r9, #2
 801f578:	441d      	add	r5, r3
 801f57a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f57e:	e63d      	b.n	801f1fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801f580:	2800      	cmp	r0, #0
 801f582:	f43f aedd 	beq.w	801f340 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f586:	5c79      	ldrb	r1, [r7, r1]
 801f588:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f58c:	910b      	str	r1, [sp, #44]	; 0x2c
 801f58e:	0e09      	lsrs	r1, r1, #24
 801f590:	9114      	str	r1, [sp, #80]	; 0x50
 801f592:	e6d5      	b.n	801f340 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f594:	b01f      	add	sp, #124	; 0x7c
 801f596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f59a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801f59a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f59e:	b089      	sub	sp, #36	; 0x24
 801f5a0:	9101      	str	r1, [sp, #4]
 801f5a2:	9801      	ldr	r0, [sp, #4]
 801f5a4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801f5a8:	8800      	ldrh	r0, [r0, #0]
 801f5aa:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801f5ae:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801f5b2:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801f5b6:	1206      	asrs	r6, r0, #8
 801f5b8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801f5bc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f5c0:	9602      	str	r6, [sp, #8]
 801f5c2:	10c6      	asrs	r6, r0, #3
 801f5c4:	00c0      	lsls	r0, r0, #3
 801f5c6:	b2c0      	uxtb	r0, r0
 801f5c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f5cc:	9004      	str	r0, [sp, #16]
 801f5ce:	2f00      	cmp	r7, #0
 801f5d0:	fb07 100c 	mla	r0, r7, ip, r1
 801f5d4:	9603      	str	r6, [sp, #12]
 801f5d6:	eb02 0e00 	add.w	lr, r2, r0
 801f5da:	f2c0 810a 	blt.w	801f7f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801f5de:	45b8      	cmp	r8, r7
 801f5e0:	f340 8107 	ble.w	801f7f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801f5e4:	2900      	cmp	r1, #0
 801f5e6:	f2c0 8102 	blt.w	801f7ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801f5ea:	458c      	cmp	ip, r1
 801f5ec:	f340 80ff 	ble.w	801f7ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801f5f0:	5c12      	ldrb	r2, [r2, r0]
 801f5f2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801f5f6:	1c4a      	adds	r2, r1, #1
 801f5f8:	f100 80fe 	bmi.w	801f7f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801f5fc:	4594      	cmp	ip, r2
 801f5fe:	f340 80fb 	ble.w	801f7f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801f602:	2d00      	cmp	r5, #0
 801f604:	f000 80fa 	beq.w	801f7fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801f608:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f60c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801f610:	3701      	adds	r7, #1
 801f612:	f100 80f7 	bmi.w	801f804 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801f616:	45b8      	cmp	r8, r7
 801f618:	f340 80f4 	ble.w	801f804 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801f61c:	2c00      	cmp	r4, #0
 801f61e:	f000 80f4 	beq.w	801f80a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801f622:	2900      	cmp	r1, #0
 801f624:	eb0e 020c 	add.w	r2, lr, ip
 801f628:	f2c0 80ea 	blt.w	801f800 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801f62c:	458c      	cmp	ip, r1
 801f62e:	f340 80e7 	ble.w	801f800 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801f632:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801f636:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801f63a:	3101      	adds	r1, #1
 801f63c:	f100 80e8 	bmi.w	801f810 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801f640:	458c      	cmp	ip, r1
 801f642:	f340 80e5 	ble.w	801f810 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801f646:	2d00      	cmp	r5, #0
 801f648:	f000 80e4 	beq.w	801f814 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801f64c:	7852      	ldrb	r2, [r2, #1]
 801f64e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f652:	0e0b      	lsrs	r3, r1, #24
 801f654:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801f658:	9300      	str	r3, [sp, #0]
 801f65a:	b2a4      	uxth	r4, r4
 801f65c:	b2ab      	uxth	r3, r5
 801f65e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801f662:	fb03 f904 	mul.w	r9, r3, r4
 801f666:	fb0a f505 	mul.w	r5, sl, r5
 801f66a:	011b      	lsls	r3, r3, #4
 801f66c:	eba3 0e09 	sub.w	lr, r3, r9
 801f670:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801f674:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801f678:	0a28      	lsrs	r0, r5, #8
 801f67a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f67e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801f682:	4405      	add	r5, r0
 801f684:	0a2d      	lsrs	r5, r5, #8
 801f686:	fb0a f303 	mul.w	r3, sl, r3
 801f68a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801f68e:	9005      	str	r0, [sp, #20]
 801f690:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801f694:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801f698:	0a1b      	lsrs	r3, r3, #8
 801f69a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801f69e:	9306      	str	r3, [sp, #24]
 801f6a0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801f6a4:	fb0b f303 	mul.w	r3, fp, r3
 801f6a8:	0a1d      	lsrs	r5, r3, #8
 801f6aa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801f6ae:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801f6b2:	fb0b f606 	mul.w	r6, fp, r6
 801f6b6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801f6ba:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801f6be:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f6c2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f6c6:	fb08 f707 	mul.w	r7, r8, r7
 801f6ca:	441d      	add	r5, r3
 801f6cc:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801f6d0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f6d4:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801f6d8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801f6dc:	fb08 fc0c 	mul.w	ip, r8, ip
 801f6e0:	0a1b      	lsrs	r3, r3, #8
 801f6e2:	9307      	str	r3, [sp, #28]
 801f6e4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801f6e8:	0e0b      	lsrs	r3, r1, #24
 801f6ea:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801f6ee:	435f      	muls	r7, r3
 801f6f0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f6f4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f6f8:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801f6fc:	4460      	add	r0, ip
 801f6fe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f702:	b2a4      	uxth	r4, r4
 801f704:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f708:	0a2d      	lsrs	r5, r5, #8
 801f70a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f70e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f712:	fa1f fe8e 	uxth.w	lr, lr
 801f716:	4359      	muls	r1, r3
 801f718:	1b12      	subs	r2, r2, r4
 801f71a:	9b05      	ldr	r3, [sp, #20]
 801f71c:	44bc      	add	ip, r7
 801f71e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f722:	b292      	uxth	r2, r2
 801f724:	fb05 f50e 	mul.w	r5, r5, lr
 801f728:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f72c:	fb03 5502 	mla	r5, r3, r2, r5
 801f730:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f734:	9b06      	ldr	r3, [sp, #24]
 801f736:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801f73a:	0a36      	lsrs	r6, r6, #8
 801f73c:	0a00      	lsrs	r0, r0, #8
 801f73e:	fb0c 5509 	mla	r5, ip, r9, r5
 801f742:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f746:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f74a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801f74e:	fb00 5504 	mla	r5, r0, r4, r5
 801f752:	fb0e f606 	mul.w	r6, lr, r6
 801f756:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801f75a:	0a09      	lsrs	r1, r1, #8
 801f75c:	9b07      	ldr	r3, [sp, #28]
 801f75e:	fb02 6000 	mla	r0, r2, r0, r6
 801f762:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f766:	fb09 0001 	mla	r0, r9, r1, r0
 801f76a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f76e:	fb0e fe0b 	mul.w	lr, lr, fp
 801f772:	fb04 0003 	mla	r0, r4, r3, r0
 801f776:	fb02 e20a 	mla	r2, r2, sl, lr
 801f77a:	9b00      	ldr	r3, [sp, #0]
 801f77c:	fb04 2408 	mla	r4, r4, r8, r2
 801f780:	fb09 4903 	mla	r9, r9, r3, r4
 801f784:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801f788:	9b02      	ldr	r3, [sp, #8]
 801f78a:	9a04      	ldr	r2, [sp, #16]
 801f78c:	fa5f f989 	uxtb.w	r9, r9
 801f790:	fb03 f109 	mul.w	r1, r3, r9
 801f794:	9b03      	ldr	r3, [sp, #12]
 801f796:	0a2d      	lsrs	r5, r5, #8
 801f798:	0a00      	lsrs	r0, r0, #8
 801f79a:	fb03 f309 	mul.w	r3, r3, r9
 801f79e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801f7a2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f7a6:	4305      	orrs	r5, r0
 801f7a8:	fb02 f909 	mul.w	r9, r2, r9
 801f7ac:	1c58      	adds	r0, r3, #1
 801f7ae:	1c4a      	adds	r2, r1, #1
 801f7b0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f7b4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f7b8:	0a2b      	lsrs	r3, r5, #8
 801f7ba:	0c2a      	lsrs	r2, r5, #16
 801f7bc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f7c0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801f7c4:	00db      	lsls	r3, r3, #3
 801f7c6:	0212      	lsls	r2, r2, #8
 801f7c8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801f7cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f7d0:	4313      	orrs	r3, r2
 801f7d2:	f109 0201 	add.w	r2, r9, #1
 801f7d6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801f7da:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801f7de:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801f7e2:	431d      	orrs	r5, r3
 801f7e4:	9b01      	ldr	r3, [sp, #4]
 801f7e6:	801d      	strh	r5, [r3, #0]
 801f7e8:	b009      	add	sp, #36	; 0x24
 801f7ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f7ee:	2000      	movs	r0, #0
 801f7f0:	e701      	b.n	801f5f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801f7f2:	2600      	movs	r6, #0
 801f7f4:	4630      	mov	r0, r6
 801f7f6:	e70b      	b.n	801f610 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f7f8:	2600      	movs	r6, #0
 801f7fa:	e709      	b.n	801f610 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f7fc:	462e      	mov	r6, r5
 801f7fe:	e707      	b.n	801f610 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f800:	2700      	movs	r7, #0
 801f802:	e71a      	b.n	801f63a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801f804:	2100      	movs	r1, #0
 801f806:	460f      	mov	r7, r1
 801f808:	e723      	b.n	801f652 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f80a:	4621      	mov	r1, r4
 801f80c:	4627      	mov	r7, r4
 801f80e:	e720      	b.n	801f652 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f810:	2100      	movs	r1, #0
 801f812:	e71e      	b.n	801f652 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f814:	4629      	mov	r1, r5
 801f816:	e71c      	b.n	801f652 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801f818 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f81c:	b09b      	sub	sp, #108	; 0x6c
 801f81e:	9218      	str	r2, [sp, #96]	; 0x60
 801f820:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f822:	9116      	str	r1, [sp, #88]	; 0x58
 801f824:	9307      	str	r3, [sp, #28]
 801f826:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801f82a:	9019      	str	r0, [sp, #100]	; 0x64
 801f82c:	6850      	ldr	r0, [r2, #4]
 801f82e:	6812      	ldr	r2, [r2, #0]
 801f830:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801f832:	fb00 1303 	mla	r3, r0, r3, r1
 801f836:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f83a:	930a      	str	r3, [sp, #40]	; 0x28
 801f83c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f83e:	681b      	ldr	r3, [r3, #0]
 801f840:	930f      	str	r3, [sp, #60]	; 0x3c
 801f842:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f844:	685e      	ldr	r6, [r3, #4]
 801f846:	3604      	adds	r6, #4
 801f848:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f84a:	2b00      	cmp	r3, #0
 801f84c:	dc03      	bgt.n	801f856 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f84e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f850:	2b00      	cmp	r3, #0
 801f852:	f340 8373 	ble.w	801ff3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801f856:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f858:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f85c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f860:	1e48      	subs	r0, r1, #1
 801f862:	1e57      	subs	r7, r2, #1
 801f864:	9b07      	ldr	r3, [sp, #28]
 801f866:	2b00      	cmp	r3, #0
 801f868:	f340 8190 	ble.w	801fb8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801f86c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801f86e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f872:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f876:	d406      	bmi.n	801f886 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f878:	4584      	cmp	ip, r0
 801f87a:	da04      	bge.n	801f886 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f87c:	2b00      	cmp	r3, #0
 801f87e:	db02      	blt.n	801f886 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f880:	42bb      	cmp	r3, r7
 801f882:	f2c0 8184 	blt.w	801fb8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801f886:	f11c 0c01 	adds.w	ip, ip, #1
 801f88a:	f100 8172 	bmi.w	801fb72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f88e:	4561      	cmp	r1, ip
 801f890:	f2c0 816f 	blt.w	801fb72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f894:	3301      	adds	r3, #1
 801f896:	f100 816c 	bmi.w	801fb72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f89a:	429a      	cmp	r2, r3
 801f89c:	f2c0 8169 	blt.w	801fb72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f8a0:	9b07      	ldr	r3, [sp, #28]
 801f8a2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f8a4:	9317      	str	r3, [sp, #92]	; 0x5c
 801f8a6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f8a8:	2b00      	cmp	r3, #0
 801f8aa:	f340 818e 	ble.w	801fbca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801f8ae:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f8b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f8b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f8b6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801f8ba:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f8bc:	141b      	asrs	r3, r3, #16
 801f8be:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f8c2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f8c6:	f100 81d1 	bmi.w	801fc6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f8ca:	f101 38ff 	add.w	r8, r1, #4294967295
 801f8ce:	4543      	cmp	r3, r8
 801f8d0:	f280 81cc 	bge.w	801fc6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f8d4:	f1bc 0f00 	cmp.w	ip, #0
 801f8d8:	f2c0 81c8 	blt.w	801fc6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f8dc:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f8e0:	45c4      	cmp	ip, r8
 801f8e2:	f280 81c3 	bge.w	801fc6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f8e6:	b209      	sxth	r1, r1
 801f8e8:	fb0c 3301 	mla	r3, ip, r1, r3
 801f8ec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f8ee:	eb04 0803 	add.w	r8, r4, r3
 801f8f2:	5ce3      	ldrb	r3, [r4, r3]
 801f8f4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f8f8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801f8fc:	2a00      	cmp	r2, #0
 801f8fe:	f000 81aa 	beq.w	801fc56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801f902:	f898 c001 	ldrb.w	ip, [r8, #1]
 801f906:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801f90a:	940b      	str	r4, [sp, #44]	; 0x2c
 801f90c:	0e24      	lsrs	r4, r4, #24
 801f90e:	9412      	str	r4, [sp, #72]	; 0x48
 801f910:	b178      	cbz	r0, 801f932 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801f912:	eb08 0c01 	add.w	ip, r8, r1
 801f916:	f818 1001 	ldrb.w	r1, [r8, r1]
 801f91a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f91e:	9108      	str	r1, [sp, #32]
 801f920:	0e09      	lsrs	r1, r1, #24
 801f922:	9110      	str	r1, [sp, #64]	; 0x40
 801f924:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801f928:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f92c:	910c      	str	r1, [sp, #48]	; 0x30
 801f92e:	0e09      	lsrs	r1, r1, #24
 801f930:	9113      	str	r1, [sp, #76]	; 0x4c
 801f932:	b292      	uxth	r2, r2
 801f934:	b280      	uxth	r0, r0
 801f936:	fb02 f900 	mul.w	r9, r2, r0
 801f93a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f93e:	0112      	lsls	r2, r2, #4
 801f940:	eba2 0809 	sub.w	r8, r2, r9
 801f944:	b280      	uxth	r0, r0
 801f946:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f94a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f94c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f94e:	fa1f f888 	uxth.w	r8, r8
 801f952:	1a12      	subs	r2, r2, r0
 801f954:	b292      	uxth	r2, r2
 801f956:	fb08 f101 	mul.w	r1, r8, r1
 801f95a:	fb02 110e 	mla	r1, r2, lr, r1
 801f95e:	fb00 1104 	mla	r1, r0, r4, r1
 801f962:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f964:	fb09 1104 	mla	r1, r9, r4, r1
 801f968:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f96c:	2900      	cmp	r1, #0
 801f96e:	f000 80f5 	beq.w	801fb5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f972:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f976:	d01b      	beq.n	801f9b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f978:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f97c:	fb0e fa0a 	mul.w	sl, lr, sl
 801f980:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f984:	fb0e fe03 	mul.w	lr, lr, r3
 801f988:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f98c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f990:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f994:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f998:	4453      	add	r3, sl
 801f99a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f99e:	0a1b      	lsrs	r3, r3, #8
 801f9a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f9a4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f9a8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f9ac:	ea43 030c 	orr.w	r3, r3, ip
 801f9b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f9b2:	2cff      	cmp	r4, #255	; 0xff
 801f9b4:	d021      	beq.n	801f9fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801f9b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f9b8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f9bc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f9be:	fb04 fb0b 	mul.w	fp, r4, fp
 801f9c2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f9c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f9c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f9ca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f9ce:	fb04 fa0a 	mul.w	sl, r4, sl
 801f9d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f9d6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f9da:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f9de:	44de      	add	lr, fp
 801f9e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f9e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f9e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f9ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f9f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f9f4:	ea4e 040a 	orr.w	r4, lr, sl
 801f9f8:	940b      	str	r4, [sp, #44]	; 0x2c
 801f9fa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f9fc:	2cff      	cmp	r4, #255	; 0xff
 801f9fe:	d021      	beq.n	801fa44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801fa00:	9c08      	ldr	r4, [sp, #32]
 801fa02:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fa06:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801fa08:	fb04 fb0b 	mul.w	fp, r4, fp
 801fa0c:	9c08      	ldr	r4, [sp, #32]
 801fa0e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fa12:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801fa14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fa18:	fb04 fa0a 	mul.w	sl, r4, sl
 801fa1c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fa20:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fa24:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fa28:	44de      	add	lr, fp
 801fa2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fa2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fa32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fa3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fa3e:	ea4e 040a 	orr.w	r4, lr, sl
 801fa42:	9408      	str	r4, [sp, #32]
 801fa44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fa46:	2cff      	cmp	r4, #255	; 0xff
 801fa48:	d021      	beq.n	801fa8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801fa4a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801fa4c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fa50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fa52:	fb04 fb0b 	mul.w	fp, r4, fp
 801fa56:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801fa58:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fa5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fa5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fa62:	fb04 fa0a 	mul.w	sl, r4, sl
 801fa66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fa6a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fa6e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fa72:	44de      	add	lr, fp
 801fa74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fa78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fa7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fa84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fa88:	ea4e 040a 	orr.w	r4, lr, sl
 801fa8c:	940c      	str	r4, [sp, #48]	; 0x30
 801fa8e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fa90:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fa94:	9c08      	ldr	r4, [sp, #32]
 801fa96:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801fa9a:	fb08 fc0c 	mul.w	ip, r8, ip
 801fa9e:	fb02 cc0e 	mla	ip, r2, lr, ip
 801faa2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801faa6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801faa8:	fb00 cc0e 	mla	ip, r0, lr, ip
 801faac:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801fab0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fab2:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fab6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801faba:	fb08 f80e 	mul.w	r8, r8, lr
 801fabe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fac2:	fb02 8303 	mla	r3, r2, r3, r8
 801fac6:	9a08      	ldr	r2, [sp, #32]
 801fac8:	f8b7 8000 	ldrh.w	r8, [r7]
 801facc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801fad0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fad2:	fb00 330a 	mla	r3, r0, sl, r3
 801fad6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801fada:	fb09 3900 	mla	r9, r9, r0, r3
 801fade:	43c9      	mvns	r1, r1
 801fae0:	ea4f 2228 	mov.w	r2, r8, asr #8
 801fae4:	fa5f fe81 	uxtb.w	lr, r1
 801fae8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801faec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801faf0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801faf4:	fb02 f20e 	mul.w	r2, r2, lr
 801faf8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fafc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801fb00:	ea4c 0c09 	orr.w	ip, ip, r9
 801fb04:	1c53      	adds	r3, r2, #1
 801fb06:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801fb0a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801fb0e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801fb12:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fb16:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fb1a:	4a63      	ldr	r2, [pc, #396]	; (801fca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801fb1c:	fb00 f00e 	mul.w	r0, r0, lr
 801fb20:	b2db      	uxtb	r3, r3
 801fb22:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801fb26:	1c43      	adds	r3, r0, #1
 801fb28:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fb2c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801fb30:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801fb34:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801fb38:	b2c9      	uxtb	r1, r1
 801fb3a:	00db      	lsls	r3, r3, #3
 801fb3c:	fb01 f10e 	mul.w	r1, r1, lr
 801fb40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fb44:	4313      	orrs	r3, r2
 801fb46:	1c4a      	adds	r2, r1, #1
 801fb48:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fb4c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801fb50:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801fb54:	ea4c 0c03 	orr.w	ip, ip, r3
 801fb58:	f8a7 c000 	strh.w	ip, [r7]
 801fb5c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fb5e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801fb60:	441a      	add	r2, r3
 801fb62:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fb64:	9225      	str	r2, [sp, #148]	; 0x94
 801fb66:	441d      	add	r5, r3
 801fb68:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801fb6a:	3b01      	subs	r3, #1
 801fb6c:	3702      	adds	r7, #2
 801fb6e:	9317      	str	r3, [sp, #92]	; 0x5c
 801fb70:	e699      	b.n	801f8a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fb72:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fb74:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801fb76:	441c      	add	r4, r3
 801fb78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fb7a:	9425      	str	r4, [sp, #148]	; 0x94
 801fb7c:	441d      	add	r5, r3
 801fb7e:	9b07      	ldr	r3, [sp, #28]
 801fb80:	3b01      	subs	r3, #1
 801fb82:	9307      	str	r3, [sp, #28]
 801fb84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb86:	3302      	adds	r3, #2
 801fb88:	930a      	str	r3, [sp, #40]	; 0x28
 801fb8a:	e66b      	b.n	801f864 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801fb8c:	d024      	beq.n	801fbd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801fb8e:	9b07      	ldr	r3, [sp, #28]
 801fb90:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801fb92:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801fb94:	3b01      	subs	r3, #1
 801fb96:	fb00 4003 	mla	r0, r0, r3, r4
 801fb9a:	1400      	asrs	r0, r0, #16
 801fb9c:	f53f ae80 	bmi.w	801f8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fba0:	3901      	subs	r1, #1
 801fba2:	4288      	cmp	r0, r1
 801fba4:	f6bf ae7c 	bge.w	801f8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fba8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fbaa:	fb01 5303 	mla	r3, r1, r3, r5
 801fbae:	141b      	asrs	r3, r3, #16
 801fbb0:	f53f ae76 	bmi.w	801f8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fbb4:	3a01      	subs	r2, #1
 801fbb6:	4293      	cmp	r3, r2
 801fbb8:	f6bf ae72 	bge.w	801f8a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fbbc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fbc0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801fbc4:	f1bb 0f00 	cmp.w	fp, #0
 801fbc8:	dc70      	bgt.n	801fcac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801fbca:	9b07      	ldr	r3, [sp, #28]
 801fbcc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fbd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fbd2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801fbd6:	930a      	str	r3, [sp, #40]	; 0x28
 801fbd8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fbda:	2b00      	cmp	r3, #0
 801fbdc:	f340 81ae 	ble.w	801ff3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801fbe0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fbe4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fbe8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fbec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fbee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fbf2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fbf6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fbfa:	eef0 6a62 	vmov.f32	s13, s5
 801fbfe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc06:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc0a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801fc0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc12:	eef0 6a43 	vmov.f32	s13, s6
 801fc16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc1a:	ee12 2a90 	vmov	r2, s5
 801fc1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc22:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc26:	ee13 2a10 	vmov	r2, s6
 801fc2a:	9327      	str	r3, [sp, #156]	; 0x9c
 801fc2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fc2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc32:	9328      	str	r3, [sp, #160]	; 0xa0
 801fc34:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fc36:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801fc38:	3b01      	subs	r3, #1
 801fc3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc3e:	9316      	str	r3, [sp, #88]	; 0x58
 801fc40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fc42:	bf08      	it	eq
 801fc44:	4613      	moveq	r3, r2
 801fc46:	ee16 5a90 	vmov	r5, s13
 801fc4a:	9307      	str	r3, [sp, #28]
 801fc4c:	eeb0 3a67 	vmov.f32	s6, s15
 801fc50:	eef0 2a47 	vmov.f32	s5, s14
 801fc54:	e5f8      	b.n	801f848 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801fc56:	2800      	cmp	r0, #0
 801fc58:	f43f ae6b 	beq.w	801f932 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801fc5c:	f818 1001 	ldrb.w	r1, [r8, r1]
 801fc60:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fc64:	9108      	str	r1, [sp, #32]
 801fc66:	0e09      	lsrs	r1, r1, #24
 801fc68:	9110      	str	r1, [sp, #64]	; 0x40
 801fc6a:	e662      	b.n	801f932 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801fc6c:	f113 0801 	adds.w	r8, r3, #1
 801fc70:	f53f af74 	bmi.w	801fb5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fc74:	4541      	cmp	r1, r8
 801fc76:	f6ff af71 	blt.w	801fb5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fc7a:	f11c 0801 	adds.w	r8, ip, #1
 801fc7e:	f53f af6d 	bmi.w	801fb5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fc82:	45c6      	cmp	lr, r8
 801fc84:	f6ff af6a 	blt.w	801fb5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fc88:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801fc8c:	b209      	sxth	r1, r1
 801fc8e:	fa0f f38e 	sxth.w	r3, lr
 801fc92:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801fc96:	9301      	str	r3, [sp, #4]
 801fc98:	9100      	str	r1, [sp, #0]
 801fc9a:	4633      	mov	r3, r6
 801fc9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fc9e:	9819      	ldr	r0, [sp, #100]	; 0x64
 801fca0:	4639      	mov	r1, r7
 801fca2:	f7ff fc7a 	bl	801f59a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801fca6:	e759      	b.n	801fb5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801fca8:	fffff800 	.word	0xfffff800
 801fcac:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fcae:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801fcb0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fcb4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fcb6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fcba:	1427      	asrs	r7, r4, #16
 801fcbc:	142b      	asrs	r3, r5, #16
 801fcbe:	fb01 7303 	mla	r3, r1, r3, r7
 801fcc2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801fcc4:	18e7      	adds	r7, r4, r3
 801fcc6:	5ce3      	ldrb	r3, [r4, r3]
 801fcc8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801fccc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fcd0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801fcd4:	2a00      	cmp	r2, #0
 801fcd6:	f000 8127 	beq.w	801ff28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801fcda:	f897 e001 	ldrb.w	lr, [r7, #1]
 801fcde:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801fce2:	940d      	str	r4, [sp, #52]	; 0x34
 801fce4:	0e24      	lsrs	r4, r4, #24
 801fce6:	9414      	str	r4, [sp, #80]	; 0x50
 801fce8:	b170      	cbz	r0, 801fd08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801fcea:	eb07 0e01 	add.w	lr, r7, r1
 801fcee:	5c79      	ldrb	r1, [r7, r1]
 801fcf0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fcf4:	9109      	str	r1, [sp, #36]	; 0x24
 801fcf6:	0e09      	lsrs	r1, r1, #24
 801fcf8:	9111      	str	r1, [sp, #68]	; 0x44
 801fcfa:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801fcfe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fd02:	910e      	str	r1, [sp, #56]	; 0x38
 801fd04:	0e09      	lsrs	r1, r1, #24
 801fd06:	9115      	str	r1, [sp, #84]	; 0x54
 801fd08:	b292      	uxth	r2, r2
 801fd0a:	b280      	uxth	r0, r0
 801fd0c:	fb02 f800 	mul.w	r8, r2, r0
 801fd10:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801fd14:	0112      	lsls	r2, r2, #4
 801fd16:	eba2 0e08 	sub.w	lr, r2, r8
 801fd1a:	b280      	uxth	r0, r0
 801fd1c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801fd20:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801fd22:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fd24:	fa1f fe8e 	uxth.w	lr, lr
 801fd28:	1a09      	subs	r1, r1, r0
 801fd2a:	b289      	uxth	r1, r1
 801fd2c:	fb0e f202 	mul.w	r2, lr, r2
 801fd30:	fb01 220c 	mla	r2, r1, ip, r2
 801fd34:	fb00 2204 	mla	r2, r0, r4, r2
 801fd38:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fd3a:	fb08 2204 	mla	r2, r8, r4, r2
 801fd3e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801fd42:	2a00      	cmp	r2, #0
 801fd44:	f000 80e5 	beq.w	801ff12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801fd48:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801fd4c:	d019      	beq.n	801fd82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801fd4e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801fd52:	fb0c fa0a 	mul.w	sl, ip, sl
 801fd56:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fd5a:	fb0c fc03 	mul.w	ip, ip, r3
 801fd5e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fd62:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fd66:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fd6a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801fd6e:	4453      	add	r3, sl
 801fd70:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801fd74:	0a1b      	lsrs	r3, r3, #8
 801fd76:	0a3f      	lsrs	r7, r7, #8
 801fd78:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fd7c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801fd80:	433b      	orrs	r3, r7
 801fd82:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fd84:	2cff      	cmp	r4, #255	; 0xff
 801fd86:	d020      	beq.n	801fdca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801fd88:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fd8a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fd8e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fd90:	4367      	muls	r7, r4
 801fd92:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fd94:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fd98:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fd9a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fd9e:	fb04 fa0a 	mul.w	sl, r4, sl
 801fda2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fda6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fdaa:	44bc      	add	ip, r7
 801fdac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fdb0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fdb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fdb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fdbc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fdc0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fdc4:	ea4c 040a 	orr.w	r4, ip, sl
 801fdc8:	940d      	str	r4, [sp, #52]	; 0x34
 801fdca:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fdcc:	2cff      	cmp	r4, #255	; 0xff
 801fdce:	d020      	beq.n	801fe12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801fdd0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fdd2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fdd6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fdd8:	4367      	muls	r7, r4
 801fdda:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fddc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fde0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fde2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fde6:	fb04 fa0a 	mul.w	sl, r4, sl
 801fdea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fdee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fdf2:	44bc      	add	ip, r7
 801fdf4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fdf8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fdfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fe04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fe08:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fe0c:	ea4c 040a 	orr.w	r4, ip, sl
 801fe10:	9409      	str	r4, [sp, #36]	; 0x24
 801fe12:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fe14:	2cff      	cmp	r4, #255	; 0xff
 801fe16:	d020      	beq.n	801fe5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801fe18:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fe1a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fe1e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fe20:	4367      	muls	r7, r4
 801fe22:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fe24:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fe28:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fe2a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fe2e:	fb04 fa0a 	mul.w	sl, r4, sl
 801fe32:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fe36:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fe3a:	44bc      	add	ip, r7
 801fe3c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fe40:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fe44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fe4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fe50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fe54:	ea4c 040a 	orr.w	r4, ip, sl
 801fe58:	940e      	str	r4, [sp, #56]	; 0x38
 801fe5a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fe5c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fe60:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fe62:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801fe66:	fb0e f707 	mul.w	r7, lr, r7
 801fe6a:	fb01 770c 	mla	r7, r1, ip, r7
 801fe6e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fe72:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fe74:	fb00 770c 	mla	r7, r0, ip, r7
 801fe78:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fe7c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fe7e:	fb08 770c 	mla	r7, r8, ip, r7
 801fe82:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801fe86:	fb0e fe0c 	mul.w	lr, lr, ip
 801fe8a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fe8e:	fb01 e303 	mla	r3, r1, r3, lr
 801fe92:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fe94:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801fe98:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fe9a:	fb00 330a 	mla	r3, r0, sl, r3
 801fe9e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801fea2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801fea6:	f8b9 3000 	ldrh.w	r3, [r9]
 801feaa:	43d2      	mvns	r2, r2
 801feac:	1218      	asrs	r0, r3, #8
 801feae:	b2d2      	uxtb	r2, r2
 801feb0:	10d9      	asrs	r1, r3, #3
 801feb2:	0a3f      	lsrs	r7, r7, #8
 801feb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801feb8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801febc:	00db      	lsls	r3, r3, #3
 801febe:	4350      	muls	r0, r2
 801fec0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801fec4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fec8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fecc:	b2db      	uxtb	r3, r3
 801fece:	ea47 070c 	orr.w	r7, r7, ip
 801fed2:	4351      	muls	r1, r2
 801fed4:	4353      	muls	r3, r2
 801fed6:	1c42      	adds	r2, r0, #1
 801fed8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fedc:	0c3a      	lsrs	r2, r7, #16
 801fede:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fee2:	4a18      	ldr	r2, [pc, #96]	; (801ff44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801fee4:	b2c0      	uxtb	r0, r0
 801fee6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801feea:	1c4a      	adds	r2, r1, #1
 801feec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fef0:	0a3a      	lsrs	r2, r7, #8
 801fef2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fef6:	00c9      	lsls	r1, r1, #3
 801fef8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fefc:	4301      	orrs	r1, r0
 801fefe:	1c58      	adds	r0, r3, #1
 801ff00:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ff04:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ff08:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801ff0c:	4308      	orrs	r0, r1
 801ff0e:	f8a9 0000 	strh.w	r0, [r9]
 801ff12:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ff14:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ff16:	441a      	add	r2, r3
 801ff18:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff1a:	9225      	str	r2, [sp, #148]	; 0x94
 801ff1c:	f109 0902 	add.w	r9, r9, #2
 801ff20:	441d      	add	r5, r3
 801ff22:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ff26:	e64d      	b.n	801fbc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801ff28:	2800      	cmp	r0, #0
 801ff2a:	f43f aeed 	beq.w	801fd08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ff2e:	5c79      	ldrb	r1, [r7, r1]
 801ff30:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ff34:	9109      	str	r1, [sp, #36]	; 0x24
 801ff36:	0e09      	lsrs	r1, r1, #24
 801ff38:	9111      	str	r1, [sp, #68]	; 0x44
 801ff3a:	e6e5      	b.n	801fd08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ff3c:	b01b      	add	sp, #108	; 0x6c
 801ff3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff42:	bf00      	nop
 801ff44:	fffff800 	.word	0xfffff800

0801ff48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801ff48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff4c:	b085      	sub	sp, #20
 801ff4e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801ff52:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ff56:	9103      	str	r1, [sp, #12]
 801ff58:	fb00 7406 	mla	r4, r0, r6, r7
 801ff5c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801ff60:	2800      	cmp	r0, #0
 801ff62:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801ff66:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801ff6a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801ff6e:	9501      	str	r5, [sp, #4]
 801ff70:	eb03 0904 	add.w	r9, r3, r4
 801ff74:	f2c0 8150 	blt.w	8020218 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ff78:	4583      	cmp	fp, r0
 801ff7a:	f340 814d 	ble.w	8020218 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ff7e:	2f00      	cmp	r7, #0
 801ff80:	f2c0 8146 	blt.w	8020210 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ff84:	42be      	cmp	r6, r7
 801ff86:	f340 8143 	ble.w	8020210 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ff8a:	f813 c004 	ldrb.w	ip, [r3, r4]
 801ff8e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801ff92:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ff96:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801ff9a:	4355      	muls	r5, r2
 801ff9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ffa0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801ffa4:	fb0c f203 	mul.w	r2, ip, r3
 801ffa8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801ffac:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801ffb0:	441d      	add	r5, r3
 801ffb2:	f102 0320 	add.w	r3, r2, #32
 801ffb6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ffba:	0a1b      	lsrs	r3, r3, #8
 801ffbc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801ffc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ffc4:	431c      	orrs	r4, r3
 801ffc6:	1c7b      	adds	r3, r7, #1
 801ffc8:	f100 812b 	bmi.w	8020222 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801ffcc:	429e      	cmp	r6, r3
 801ffce:	f340 8128 	ble.w	8020222 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801ffd2:	2900      	cmp	r1, #0
 801ffd4:	f000 8128 	beq.w	8020228 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801ffd8:	9a01      	ldr	r2, [sp, #4]
 801ffda:	f899 3001 	ldrb.w	r3, [r9, #1]
 801ffde:	8855      	ldrh	r5, [r2, #2]
 801ffe0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801ffe4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801ffe8:	fb08 f802 	mul.w	r8, r8, r2
 801ffec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fff0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801fff4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801fff8:	435d      	muls	r5, r3
 801fffa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801fffe:	44d0      	add	r8, sl
 8020000:	f105 0a20 	add.w	sl, r5, #32
 8020004:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020008:	0a2d      	lsrs	r5, r5, #8
 802000a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802000e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020012:	432a      	orrs	r2, r5
 8020014:	3001      	adds	r0, #1
 8020016:	f100 810d 	bmi.w	8020234 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802001a:	4583      	cmp	fp, r0
 802001c:	f340 810a 	ble.w	8020234 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020020:	f1be 0f00 	cmp.w	lr, #0
 8020024:	f000 810b 	beq.w	802023e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8020028:	2f00      	cmp	r7, #0
 802002a:	f2c0 8100 	blt.w	802022e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802002e:	42be      	cmp	r6, r7
 8020030:	f340 80fd 	ble.w	802022e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020034:	9801      	ldr	r0, [sp, #4]
 8020036:	f819 5006 	ldrb.w	r5, [r9, r6]
 802003a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802003e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8020042:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8020046:	fb0a fa00 	mul.w	sl, sl, r0
 802004a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802004e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020052:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8020056:	fb05 f808 	mul.w	r8, r5, r8
 802005a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802005e:	4482      	add	sl, r0
 8020060:	f108 0020 	add.w	r0, r8, #32
 8020064:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020068:	0a00      	lsrs	r0, r0, #8
 802006a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802006e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020072:	ea4b 0b00 	orr.w	fp, fp, r0
 8020076:	3701      	adds	r7, #1
 8020078:	f100 80e6 	bmi.w	8020248 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802007c:	42be      	cmp	r6, r7
 802007e:	f340 80e3 	ble.w	8020248 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020082:	2900      	cmp	r1, #0
 8020084:	f000 80e3 	beq.w	802024e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8020088:	3601      	adds	r6, #1
 802008a:	9801      	ldr	r0, [sp, #4]
 802008c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020090:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8020094:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020098:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802009c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80200a0:	fb09 f906 	mul.w	r9, r9, r6
 80200a4:	fb07 f800 	mul.w	r8, r7, r0
 80200a8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80200ac:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80200b0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80200b4:	44d1      	add	r9, sl
 80200b6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80200ba:	f108 0020 	add.w	r0, r8, #32
 80200be:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80200c2:	0a00      	lsrs	r0, r0, #8
 80200c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80200c8:	4330      	orrs	r0, r6
 80200ca:	b28e      	uxth	r6, r1
 80200cc:	fa1f f98e 	uxth.w	r9, lr
 80200d0:	fb06 f809 	mul.w	r8, r6, r9
 80200d4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80200d8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80200dc:	0136      	lsls	r6, r6, #4
 80200de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80200e2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80200e6:	9601      	str	r6, [sp, #4]
 80200e8:	ea4a 0404 	orr.w	r4, sl, r4
 80200ec:	fa1f f689 	uxth.w	r6, r9
 80200f0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80200f4:	fb11 f90e 	smulbb	r9, r1, lr
 80200f8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80200fc:	9602      	str	r6, [sp, #8]
 80200fe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020102:	4626      	mov	r6, r4
 8020104:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020108:	f1ce 0410 	rsb	r4, lr, #16
 802010c:	1a64      	subs	r4, r4, r1
 802010e:	ea4a 0202 	orr.w	r2, sl, r2
 8020112:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8020116:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802011a:	434a      	muls	r2, r1
 802011c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020120:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020124:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020128:	fb04 2406 	mla	r4, r4, r6, r2
 802012c:	ea4a 0000 	orr.w	r0, sl, r0
 8020130:	fb09 4200 	mla	r2, r9, r0, r4
 8020134:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020138:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802013c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020140:	ea44 0b0b 	orr.w	fp, r4, fp
 8020144:	9c01      	ldr	r4, [sp, #4]
 8020146:	9e02      	ldr	r6, [sp, #8]
 8020148:	9903      	ldr	r1, [sp, #12]
 802014a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802014e:	1ba4      	subs	r4, r4, r6
 8020150:	9e01      	ldr	r6, [sp, #4]
 8020152:	8808      	ldrh	r0, [r1, #0]
 8020154:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8020158:	eba6 0608 	sub.w	r6, r6, r8
 802015c:	b2b6      	uxth	r6, r6
 802015e:	b2a4      	uxth	r4, r4
 8020160:	4373      	muls	r3, r6
 8020162:	fb0c 3304 	mla	r3, ip, r4, r3
 8020166:	9c02      	ldr	r4, [sp, #8]
 8020168:	fb04 3505 	mla	r5, r4, r5, r3
 802016c:	fb08 5707 	mla	r7, r8, r7, r5
 8020170:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020174:	b289      	uxth	r1, r1
 8020176:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802017a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802017e:	434f      	muls	r7, r1
 8020180:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020184:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020188:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802018c:	1c7b      	adds	r3, r7, #1
 802018e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020192:	ea42 0e0e 	orr.w	lr, r2, lr
 8020196:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802019a:	fa1f f28e 	uxth.w	r2, lr
 802019e:	1203      	asrs	r3, r0, #8
 80201a0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80201a4:	b2ff      	uxtb	r7, r7
 80201a6:	1215      	asrs	r5, r2, #8
 80201a8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80201ac:	fb13 f307 	smulbb	r3, r3, r7
 80201b0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80201b4:	fb05 3501 	mla	r5, r5, r1, r3
 80201b8:	10c3      	asrs	r3, r0, #3
 80201ba:	10d4      	asrs	r4, r2, #3
 80201bc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80201c0:	fb13 f307 	smulbb	r3, r3, r7
 80201c4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80201c8:	fb04 3401 	mla	r4, r4, r1, r3
 80201cc:	00c3      	lsls	r3, r0, #3
 80201ce:	00d2      	lsls	r2, r2, #3
 80201d0:	b2db      	uxtb	r3, r3
 80201d2:	fb13 f307 	smulbb	r3, r3, r7
 80201d6:	b2d2      	uxtb	r2, r2
 80201d8:	fb02 3101 	mla	r1, r2, r1, r3
 80201dc:	b2ad      	uxth	r5, r5
 80201de:	b289      	uxth	r1, r1
 80201e0:	b2a4      	uxth	r4, r4
 80201e2:	1c6b      	adds	r3, r5, #1
 80201e4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80201e8:	1c62      	adds	r2, r4, #1
 80201ea:	1c4b      	adds	r3, r1, #1
 80201ec:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80201f0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80201f4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80201f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80201fc:	0964      	lsrs	r4, r4, #5
 80201fe:	432b      	orrs	r3, r5
 8020200:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020204:	9a03      	ldr	r2, [sp, #12]
 8020206:	4323      	orrs	r3, r4
 8020208:	8013      	strh	r3, [r2, #0]
 802020a:	b005      	add	sp, #20
 802020c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020210:	f04f 0c00 	mov.w	ip, #0
 8020214:	4664      	mov	r4, ip
 8020216:	e6d6      	b.n	801ffc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8020218:	2300      	movs	r3, #0
 802021a:	469c      	mov	ip, r3
 802021c:	461a      	mov	r2, r3
 802021e:	461c      	mov	r4, r3
 8020220:	e6f8      	b.n	8020014 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020222:	2300      	movs	r3, #0
 8020224:	461a      	mov	r2, r3
 8020226:	e6f5      	b.n	8020014 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020228:	460b      	mov	r3, r1
 802022a:	460a      	mov	r2, r1
 802022c:	e6f2      	b.n	8020014 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802022e:	2500      	movs	r5, #0
 8020230:	46ab      	mov	fp, r5
 8020232:	e720      	b.n	8020076 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8020234:	2700      	movs	r7, #0
 8020236:	463d      	mov	r5, r7
 8020238:	4638      	mov	r0, r7
 802023a:	46bb      	mov	fp, r7
 802023c:	e745      	b.n	80200ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802023e:	4677      	mov	r7, lr
 8020240:	4675      	mov	r5, lr
 8020242:	4670      	mov	r0, lr
 8020244:	46f3      	mov	fp, lr
 8020246:	e740      	b.n	80200ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020248:	2700      	movs	r7, #0
 802024a:	4638      	mov	r0, r7
 802024c:	e73d      	b.n	80200ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802024e:	460f      	mov	r7, r1
 8020250:	4608      	mov	r0, r1
 8020252:	e73a      	b.n	80200ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08020254 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020258:	b097      	sub	sp, #92	; 0x5c
 802025a:	9214      	str	r2, [sp, #80]	; 0x50
 802025c:	9308      	str	r3, [sp, #32]
 802025e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020260:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8020264:	9312      	str	r3, [sp, #72]	; 0x48
 8020266:	9111      	str	r1, [sp, #68]	; 0x44
 8020268:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802026c:	9015      	str	r0, [sp, #84]	; 0x54
 802026e:	6850      	ldr	r0, [r2, #4]
 8020270:	6812      	ldr	r2, [r2, #0]
 8020272:	fb00 1303 	mla	r3, r0, r3, r1
 8020276:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802027a:	9309      	str	r3, [sp, #36]	; 0x24
 802027c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802027e:	681b      	ldr	r3, [r3, #0]
 8020280:	930b      	str	r3, [sp, #44]	; 0x2c
 8020282:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020284:	685b      	ldr	r3, [r3, #4]
 8020286:	930c      	str	r3, [sp, #48]	; 0x30
 8020288:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 802028c:	930a      	str	r3, [sp, #40]	; 0x28
 802028e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020290:	2b00      	cmp	r3, #0
 8020292:	dc03      	bgt.n	802029c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020294:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020296:	2b00      	cmp	r3, #0
 8020298:	f340 83cb 	ble.w	8020a32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802029c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802029e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80202a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80202a6:	1e48      	subs	r0, r1, #1
 80202a8:	1e55      	subs	r5, r2, #1
 80202aa:	9b08      	ldr	r3, [sp, #32]
 80202ac:	2b00      	cmp	r3, #0
 80202ae:	f340 81a3 	ble.w	80205f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80202b2:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80202b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80202b6:	1436      	asrs	r6, r6, #16
 80202b8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80202bc:	d406      	bmi.n	80202cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80202be:	4286      	cmp	r6, r0
 80202c0:	da04      	bge.n	80202cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80202c2:	2b00      	cmp	r3, #0
 80202c4:	db02      	blt.n	80202cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80202c6:	42ab      	cmp	r3, r5
 80202c8:	f2c0 8197 	blt.w	80205fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80202cc:	3601      	adds	r6, #1
 80202ce:	f100 8184 	bmi.w	80205da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80202d2:	42b1      	cmp	r1, r6
 80202d4:	f2c0 8181 	blt.w	80205da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80202d8:	3301      	adds	r3, #1
 80202da:	f100 817e 	bmi.w	80205da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80202de:	429a      	cmp	r2, r3
 80202e0:	f2c0 817b 	blt.w	80205da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80202e4:	9b08      	ldr	r3, [sp, #32]
 80202e6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80202e8:	9313      	str	r3, [sp, #76]	; 0x4c
 80202ea:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80202ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80202f0:	2b00      	cmp	r3, #0
 80202f2:	f340 81a4 	ble.w	802063e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80202f6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80202f8:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80202fa:	1418      	asrs	r0, r3, #16
 80202fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80202fe:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8020302:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020304:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8020308:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802030a:	142d      	asrs	r5, r5, #16
 802030c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8020310:	f100 81f8 	bmi.w	8020704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020314:	f102 3eff 	add.w	lr, r2, #4294967295
 8020318:	4575      	cmp	r5, lr
 802031a:	f280 81f3 	bge.w	8020704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802031e:	2800      	cmp	r0, #0
 8020320:	f2c0 81f0 	blt.w	8020704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020324:	f103 3eff 	add.w	lr, r3, #4294967295
 8020328:	4570      	cmp	r0, lr
 802032a:	f280 81eb 	bge.w	8020704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802032e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020330:	b212      	sxth	r2, r2
 8020332:	fb00 5002 	mla	r0, r0, r2, r5
 8020336:	fa1f fe81 	uxth.w	lr, r1
 802033a:	eb03 0a00 	add.w	sl, r3, r0
 802033e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8020342:	f813 9000 	ldrb.w	r9, [r3, r0]
 8020346:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802034a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802034e:	b29b      	uxth	r3, r3
 8020350:	f1bc 0f00 	cmp.w	ip, #0
 8020354:	f000 81b9 	beq.w	80206ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8020358:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802035c:	940d      	str	r4, [sp, #52]	; 0x34
 802035e:	eb0a 0b02 	add.w	fp, sl, r2
 8020362:	fa1f fa8c 	uxth.w	sl, ip
 8020366:	fb0a fe0e 	mul.w	lr, sl, lr
 802036a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802036e:	fa1f fa8a 	uxth.w	sl, sl
 8020372:	eba5 050e 	sub.w	r5, r5, lr
 8020376:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802037a:	940e      	str	r4, [sp, #56]	; 0x38
 802037c:	eba3 030a 	sub.w	r3, r3, sl
 8020380:	b2ad      	uxth	r5, r5
 8020382:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020384:	b29b      	uxth	r3, r3
 8020386:	fb08 f505 	mul.w	r5, r8, r5
 802038a:	fb09 5303 	mla	r3, r9, r3, r5
 802038e:	fb0a 3304 	mla	r3, sl, r4, r3
 8020392:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020394:	fb0e 3304 	mla	r3, lr, r4, r3
 8020398:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802039c:	2b00      	cmp	r3, #0
 802039e:	f000 810f 	beq.w	80205c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80203a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80203a4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80203a8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80203ac:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80203b0:	f000 8190 	beq.w	80206d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80203b4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80203b8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80203bc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80203c0:	fb09 f000 	mul.w	r0, r9, r0
 80203c4:	fb0a fe0e 	mul.w	lr, sl, lr
 80203c8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80203cc:	f100 0b20 	add.w	fp, r0, #32
 80203d0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80203d4:	44ce      	add	lr, r9
 80203d6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80203da:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80203de:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80203e2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80203e6:	ea4e 0909 	orr.w	r9, lr, r9
 80203ea:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80203ee:	8868      	ldrh	r0, [r5, #2]
 80203f0:	d019      	beq.n	8020426 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80203f2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80203f6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80203fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80203fe:	fb08 f800 	mul.w	r8, r8, r0
 8020402:	fb0a fe0e 	mul.w	lr, sl, lr
 8020406:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802040a:	f108 0b20 	add.w	fp, r8, #32
 802040e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020412:	4486      	add	lr, r0
 8020414:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020418:	0a00      	lsrs	r0, r0, #8
 802041a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802041e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020422:	ea4e 0000 	orr.w	r0, lr, r0
 8020426:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802042a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802042e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020432:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020436:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802043a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802043e:	ea4e 0909 	orr.w	r9, lr, r9
 8020442:	ea4a 0000 	orr.w	r0, sl, r0
 8020446:	f1bc 0f00 	cmp.w	ip, #0
 802044a:	f000 8145 	beq.w	80206d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802044e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8020452:	3a01      	subs	r2, #1
 8020454:	0052      	lsls	r2, r2, #1
 8020456:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020458:	3202      	adds	r2, #2
 802045a:	2cff      	cmp	r4, #255	; 0xff
 802045c:	eb05 0e02 	add.w	lr, r5, r2
 8020460:	5aaa      	ldrh	r2, [r5, r2]
 8020462:	d018      	beq.n	8020496 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020464:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8020468:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802046c:	fb04 fa02 	mul.w	sl, r4, r2
 8020470:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020474:	fb08 f805 	mul.w	r8, r8, r5
 8020478:	f10a 0520 	add.w	r5, sl, #32
 802047c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8020480:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8020484:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020488:	4442      	add	r2, r8
 802048a:	0a2d      	lsrs	r5, r5, #8
 802048c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8020490:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020494:	432a      	orrs	r2, r5
 8020496:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020498:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802049c:	2cff      	cmp	r4, #255	; 0xff
 802049e:	d01a      	beq.n	80204d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80204a0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80204a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80204a8:	fb04 fa05 	mul.w	sl, r4, r5
 80204ac:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80204b0:	fb08 f80e 	mul.w	r8, r8, lr
 80204b4:	f10a 0e20 	add.w	lr, sl, #32
 80204b8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80204bc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80204c0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80204c4:	4445      	add	r5, r8
 80204c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80204ca:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80204ce:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80204d2:	ea45 050e 	orr.w	r5, r5, lr
 80204d6:	fb1c fe01 	smulbb	lr, ip, r1
 80204da:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80204de:	f1cc 0810 	rsb	r8, ip, #16
 80204e2:	eba8 0801 	sub.w	r8, r8, r1
 80204e6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80204ea:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80204ee:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80204f2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80204f6:	4341      	muls	r1, r0
 80204f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80204fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020500:	ea4a 0202 	orr.w	r2, sl, r2
 8020504:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8020508:	fb09 1108 	mla	r1, r9, r8, r1
 802050c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020510:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020514:	fb0c 1102 	mla	r1, ip, r2, r1
 8020518:	ea4b 0505 	orr.w	r5, fp, r5
 802051c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8020520:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020524:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020528:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802052c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020530:	ea42 0e0e 	orr.w	lr, r2, lr
 8020534:	fa1f f28e 	uxth.w	r2, lr
 8020538:	2bff      	cmp	r3, #255	; 0xff
 802053a:	d103      	bne.n	8020544 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802053c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802053e:	29ff      	cmp	r1, #255	; 0xff
 8020540:	f000 80de 	beq.w	8020700 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8020544:	990a      	ldr	r1, [sp, #40]	; 0x28
 8020546:	8838      	ldrh	r0, [r7, #0]
 8020548:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802054a:	434b      	muls	r3, r1
 802054c:	f103 0c01 	add.w	ip, r3, #1
 8020550:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8020554:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8020558:	fa5f fc83 	uxtb.w	ip, r3
 802055c:	1203      	asrs	r3, r0, #8
 802055e:	1215      	asrs	r5, r2, #8
 8020560:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020564:	fb13 f30c 	smulbb	r3, r3, ip
 8020568:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802056c:	fb05 3501 	mla	r5, r5, r1, r3
 8020570:	10c3      	asrs	r3, r0, #3
 8020572:	10d1      	asrs	r1, r2, #3
 8020574:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020578:	fb13 f30c 	smulbb	r3, r3, ip
 802057c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020580:	fb01 3104 	mla	r1, r1, r4, r3
 8020584:	00c3      	lsls	r3, r0, #3
 8020586:	00d2      	lsls	r2, r2, #3
 8020588:	b2db      	uxtb	r3, r3
 802058a:	b2d2      	uxtb	r2, r2
 802058c:	fb13 f30c 	smulbb	r3, r3, ip
 8020590:	b2ad      	uxth	r5, r5
 8020592:	fb02 3304 	mla	r3, r2, r4, r3
 8020596:	b29a      	uxth	r2, r3
 8020598:	1c6b      	adds	r3, r5, #1
 802059a:	b289      	uxth	r1, r1
 802059c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80205a0:	1c53      	adds	r3, r2, #1
 80205a2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80205a6:	1c4a      	adds	r2, r1, #1
 80205a8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80205ac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80205b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80205b4:	0949      	lsrs	r1, r1, #5
 80205b6:	432b      	orrs	r3, r5
 80205b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80205bc:	430b      	orrs	r3, r1
 80205be:	803b      	strh	r3, [r7, #0]
 80205c0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80205c2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80205c4:	4413      	add	r3, r2
 80205c6:	9321      	str	r3, [sp, #132]	; 0x84
 80205c8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80205ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80205cc:	441a      	add	r2, r3
 80205ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80205d0:	9222      	str	r2, [sp, #136]	; 0x88
 80205d2:	3b01      	subs	r3, #1
 80205d4:	3702      	adds	r7, #2
 80205d6:	9313      	str	r3, [sp, #76]	; 0x4c
 80205d8:	e689      	b.n	80202ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80205da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80205dc:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80205de:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80205e0:	4433      	add	r3, r6
 80205e2:	9321      	str	r3, [sp, #132]	; 0x84
 80205e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80205e6:	441c      	add	r4, r3
 80205e8:	9b08      	ldr	r3, [sp, #32]
 80205ea:	9422      	str	r4, [sp, #136]	; 0x88
 80205ec:	3b01      	subs	r3, #1
 80205ee:	9308      	str	r3, [sp, #32]
 80205f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205f2:	3302      	adds	r3, #2
 80205f4:	9309      	str	r3, [sp, #36]	; 0x24
 80205f6:	e658      	b.n	80202aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80205f8:	d028      	beq.n	802064c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80205fa:	9b08      	ldr	r3, [sp, #32]
 80205fc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80205fe:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8020600:	3b01      	subs	r3, #1
 8020602:	fb00 5003 	mla	r0, r0, r3, r5
 8020606:	1400      	asrs	r0, r0, #16
 8020608:	f53f ae6c 	bmi.w	80202e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802060c:	3901      	subs	r1, #1
 802060e:	4288      	cmp	r0, r1
 8020610:	f6bf ae68 	bge.w	80202e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020614:	9924      	ldr	r1, [sp, #144]	; 0x90
 8020616:	9822      	ldr	r0, [sp, #136]	; 0x88
 8020618:	fb01 0303 	mla	r3, r1, r3, r0
 802061c:	141b      	asrs	r3, r3, #16
 802061e:	f53f ae61 	bmi.w	80202e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020622:	3a01      	subs	r2, #1
 8020624:	4293      	cmp	r3, r2
 8020626:	f6bf ae5d 	bge.w	80202e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802062a:	9b08      	ldr	r3, [sp, #32]
 802062c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8020630:	9313      	str	r3, [sp, #76]	; 0x4c
 8020632:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020636:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020638:	2b00      	cmp	r3, #0
 802063a:	f300 8082 	bgt.w	8020742 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802063e:	9b08      	ldr	r3, [sp, #32]
 8020640:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020644:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020646:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802064a:	9309      	str	r3, [sp, #36]	; 0x24
 802064c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802064e:	2b00      	cmp	r3, #0
 8020650:	f340 81ef 	ble.w	8020a32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8020654:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020658:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802065c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020660:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020662:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020666:	ee31 1a05 	vadd.f32	s2, s2, s10
 802066a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802066e:	eef0 6a62 	vmov.f32	s13, s5
 8020672:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020676:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802067a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802067e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8020682:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020686:	eef0 6a43 	vmov.f32	s13, s6
 802068a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802068e:	ee12 2a90 	vmov	r2, s5
 8020692:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020696:	fb92 f3f3 	sdiv	r3, r2, r3
 802069a:	ee13 2a10 	vmov	r2, s6
 802069e:	9323      	str	r3, [sp, #140]	; 0x8c
 80206a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80206a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80206a6:	9324      	str	r3, [sp, #144]	; 0x90
 80206a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80206aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80206ac:	3b01      	subs	r3, #1
 80206ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80206b2:	9311      	str	r3, [sp, #68]	; 0x44
 80206b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80206b6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80206ba:	bf08      	it	eq
 80206bc:	4613      	moveq	r3, r2
 80206be:	9308      	str	r3, [sp, #32]
 80206c0:	eeb0 3a67 	vmov.f32	s6, s15
 80206c4:	eef0 2a47 	vmov.f32	s5, s14
 80206c8:	e5e1      	b.n	802028e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80206ca:	fb08 f505 	mul.w	r5, r8, r5
 80206ce:	fb09 5303 	mla	r3, r9, r3, r5
 80206d2:	e661      	b.n	8020398 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80206d4:	4681      	mov	r9, r0
 80206d6:	e688      	b.n	80203ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80206d8:	f1c1 0210 	rsb	r2, r1, #16
 80206dc:	4341      	muls	r1, r0
 80206de:	fb09 1902 	mla	r9, r9, r2, r1
 80206e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80206e6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80206ea:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80206ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80206f2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80206f6:	ea42 0909 	orr.w	r9, r2, r9
 80206fa:	fa1f f289 	uxth.w	r2, r9
 80206fe:	e71b      	b.n	8020538 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8020700:	803a      	strh	r2, [r7, #0]
 8020702:	e75d      	b.n	80205c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020704:	f115 0e01 	adds.w	lr, r5, #1
 8020708:	f53f af5a 	bmi.w	80205c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802070c:	4572      	cmp	r2, lr
 802070e:	f6ff af57 	blt.w	80205c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020712:	f110 0e01 	adds.w	lr, r0, #1
 8020716:	f53f af53 	bmi.w	80205c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802071a:	4573      	cmp	r3, lr
 802071c:	f6ff af50 	blt.w	80205c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020720:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020722:	9502      	str	r5, [sp, #8]
 8020724:	b21b      	sxth	r3, r3
 8020726:	b212      	sxth	r2, r2
 8020728:	e9cd 0103 	strd	r0, r1, [sp, #12]
 802072c:	9301      	str	r3, [sp, #4]
 802072e:	9200      	str	r2, [sp, #0]
 8020730:	e9cd c405 	strd	ip, r4, [sp, #20]
 8020734:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8020738:	4639      	mov	r1, r7
 802073a:	9815      	ldr	r0, [sp, #84]	; 0x54
 802073c:	f7ff fc04 	bl	801ff48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8020740:	e73e      	b.n	80205c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020742:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020744:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020748:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802074a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802074e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020750:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020754:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020756:	141f      	asrs	r7, r3, #16
 8020758:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802075a:	141b      	asrs	r3, r3, #16
 802075c:	fb01 3707 	mla	r7, r1, r7, r3
 8020760:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020762:	fa1f fc82 	uxth.w	ip, r2
 8020766:	eb03 0a07 	add.w	sl, r3, r7
 802076a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802076e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8020772:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020776:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802077a:	b29b      	uxth	r3, r3
 802077c:	2d00      	cmp	r5, #0
 802077e:	f000 813d 	beq.w	80209fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8020782:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8020786:	940f      	str	r4, [sp, #60]	; 0x3c
 8020788:	eb0a 0b01 	add.w	fp, sl, r1
 802078c:	fa1f fa85 	uxth.w	sl, r5
 8020790:	fb0a fc0c 	mul.w	ip, sl, ip
 8020794:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8020798:	fa1f fa8a 	uxth.w	sl, sl
 802079c:	eba0 000c 	sub.w	r0, r0, ip
 80207a0:	eba3 030a 	sub.w	r3, r3, sl
 80207a4:	b280      	uxth	r0, r0
 80207a6:	fb08 f000 	mul.w	r0, r8, r0
 80207aa:	b29b      	uxth	r3, r3
 80207ac:	fb09 0303 	mla	r3, r9, r3, r0
 80207b0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80207b2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80207b6:	9410      	str	r4, [sp, #64]	; 0x40
 80207b8:	fb0a 3300 	mla	r3, sl, r0, r3
 80207bc:	fb0c 3304 	mla	r3, ip, r4, r3
 80207c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80207c4:	2b00      	cmp	r3, #0
 80207c6:	f000 810b 	beq.w	80209e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80207ca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80207cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80207ce:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80207d2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80207d6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80207da:	f000 8114 	beq.w	8020a06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80207de:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80207e2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80207e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80207ea:	fb09 f707 	mul.w	r7, r9, r7
 80207ee:	fb0a fc0c 	mul.w	ip, sl, ip
 80207f2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80207f6:	f107 0b20 	add.w	fp, r7, #32
 80207fa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80207fe:	44cc      	add	ip, r9
 8020800:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8020804:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020808:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802080c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020810:	ea4c 0909 	orr.w	r9, ip, r9
 8020814:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020818:	8847      	ldrh	r7, [r0, #2]
 802081a:	d019      	beq.n	8020850 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 802081c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8020820:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020824:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020828:	fb08 f807 	mul.w	r8, r8, r7
 802082c:	fb0a fc0c 	mul.w	ip, sl, ip
 8020830:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8020834:	f108 0b20 	add.w	fp, r8, #32
 8020838:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802083c:	44bc      	add	ip, r7
 802083e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8020842:	0a3f      	lsrs	r7, r7, #8
 8020844:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8020848:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802084c:	ea4c 0707 	orr.w	r7, ip, r7
 8020850:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8020854:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8020858:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802085c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020860:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020864:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020868:	ea4c 0909 	orr.w	r9, ip, r9
 802086c:	ea4a 0707 	orr.w	r7, sl, r7
 8020870:	2d00      	cmp	r5, #0
 8020872:	f000 80ca 	beq.w	8020a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8020876:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802087a:	3901      	subs	r1, #1
 802087c:	0049      	lsls	r1, r1, #1
 802087e:	3102      	adds	r1, #2
 8020880:	eb00 0c01 	add.w	ip, r0, r1
 8020884:	5a41      	ldrh	r1, [r0, r1]
 8020886:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020888:	28ff      	cmp	r0, #255	; 0xff
 802088a:	d019      	beq.n	80208c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 802088c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802088e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8020892:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020896:	fb04 fa01 	mul.w	sl, r4, r1
 802089a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802089e:	fb08 f800 	mul.w	r8, r8, r0
 80208a2:	f10a 0020 	add.w	r0, sl, #32
 80208a6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80208aa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80208ae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80208b2:	4441      	add	r1, r8
 80208b4:	0a00      	lsrs	r0, r0, #8
 80208b6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80208ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80208be:	4301      	orrs	r1, r0
 80208c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80208c2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80208c6:	2cff      	cmp	r4, #255	; 0xff
 80208c8:	d01a      	beq.n	8020900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80208ca:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80208ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80208d2:	fb04 fa00 	mul.w	sl, r4, r0
 80208d6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80208da:	fb08 f80c 	mul.w	r8, r8, ip
 80208de:	f10a 0c20 	add.w	ip, sl, #32
 80208e2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80208e6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80208ea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80208ee:	4440      	add	r0, r8
 80208f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208f4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80208f8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80208fc:	ea40 000c 	orr.w	r0, r0, ip
 8020900:	fb15 fc02 	smulbb	ip, r5, r2
 8020904:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8020908:	f1c5 0810 	rsb	r8, r5, #16
 802090c:	eba8 0802 	sub.w	r8, r8, r2
 8020910:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8020914:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8020918:	437a      	muls	r2, r7
 802091a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802091e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8020922:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020926:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802092a:	fb09 2208 	mla	r2, r9, r8, r2
 802092e:	ea4a 0101 	orr.w	r1, sl, r1
 8020932:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8020936:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802093a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802093e:	fb05 2201 	mla	r2, r5, r1, r2
 8020942:	ea4b 0000 	orr.w	r0, fp, r0
 8020946:	fb0c 2200 	mla	r2, ip, r0, r2
 802094a:	0d57      	lsrs	r7, r2, #21
 802094c:	0952      	lsrs	r2, r2, #5
 802094e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020952:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020956:	433a      	orrs	r2, r7
 8020958:	2bff      	cmp	r3, #255	; 0xff
 802095a:	b292      	uxth	r2, r2
 802095c:	d102      	bne.n	8020964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802095e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020960:	29ff      	cmp	r1, #255	; 0xff
 8020962:	d063      	beq.n	8020a2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8020964:	980a      	ldr	r0, [sp, #40]	; 0x28
 8020966:	f8be 1000 	ldrh.w	r1, [lr]
 802096a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802096c:	4343      	muls	r3, r0
 802096e:	1c58      	adds	r0, r3, #1
 8020970:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8020974:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8020978:	1208      	asrs	r0, r1, #8
 802097a:	b2db      	uxtb	r3, r3
 802097c:	1215      	asrs	r5, r2, #8
 802097e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020982:	fb10 f003 	smulbb	r0, r0, r3
 8020986:	10cf      	asrs	r7, r1, #3
 8020988:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802098c:	00c9      	lsls	r1, r1, #3
 802098e:	fb05 0504 	mla	r5, r5, r4, r0
 8020992:	b2c9      	uxtb	r1, r1
 8020994:	10d0      	asrs	r0, r2, #3
 8020996:	00d2      	lsls	r2, r2, #3
 8020998:	fb11 f103 	smulbb	r1, r1, r3
 802099c:	b2d2      	uxtb	r2, r2
 802099e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80209a2:	fb02 1204 	mla	r2, r2, r4, r1
 80209a6:	fb17 f703 	smulbb	r7, r7, r3
 80209aa:	b2ad      	uxth	r5, r5
 80209ac:	b292      	uxth	r2, r2
 80209ae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80209b2:	fb00 7004 	mla	r0, r0, r4, r7
 80209b6:	1c6b      	adds	r3, r5, #1
 80209b8:	1c57      	adds	r7, r2, #1
 80209ba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80209be:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80209c2:	b280      	uxth	r0, r0
 80209c4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80209c8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80209cc:	433d      	orrs	r5, r7
 80209ce:	1c47      	adds	r7, r0, #1
 80209d0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80209d4:	097f      	lsrs	r7, r7, #5
 80209d6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80209da:	433d      	orrs	r5, r7
 80209dc:	f8ae 5000 	strh.w	r5, [lr]
 80209e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80209e2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80209e4:	4413      	add	r3, r2
 80209e6:	9321      	str	r3, [sp, #132]	; 0x84
 80209e8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80209ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80209ec:	441a      	add	r2, r3
 80209ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80209f0:	9222      	str	r2, [sp, #136]	; 0x88
 80209f2:	3b01      	subs	r3, #1
 80209f4:	f10e 0e02 	add.w	lr, lr, #2
 80209f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80209fa:	e61c      	b.n	8020636 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80209fc:	fb08 f000 	mul.w	r0, r8, r0
 8020a00:	fb09 0303 	mla	r3, r9, r3, r0
 8020a04:	e6dc      	b.n	80207c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8020a06:	46b9      	mov	r9, r7
 8020a08:	e704      	b.n	8020814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8020a0a:	f1c2 0110 	rsb	r1, r2, #16
 8020a0e:	437a      	muls	r2, r7
 8020a10:	fb09 2901 	mla	r9, r9, r1, r2
 8020a14:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020a18:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8020a1c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8020a20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020a24:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020a28:	4302      	orrs	r2, r0
 8020a2a:	e795      	b.n	8020958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8020a2c:	f8ae 2000 	strh.w	r2, [lr]
 8020a30:	e7d6      	b.n	80209e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8020a32:	b017      	add	sp, #92	; 0x5c
 8020a34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020a38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a3c:	b085      	sub	sp, #20
 8020a3e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8020a42:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8020a46:	9103      	str	r1, [sp, #12]
 8020a48:	fb00 7406 	mla	r4, r0, r6, r7
 8020a4c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8020a50:	2800      	cmp	r0, #0
 8020a52:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8020a56:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8020a5a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8020a5e:	9501      	str	r5, [sp, #4]
 8020a60:	eb02 0904 	add.w	r9, r2, r4
 8020a64:	f2c0 8141 	blt.w	8020cea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8020a68:	4583      	cmp	fp, r0
 8020a6a:	f340 813e 	ble.w	8020cea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8020a6e:	2f00      	cmp	r7, #0
 8020a70:	f2c0 8137 	blt.w	8020ce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8020a74:	42be      	cmp	r6, r7
 8020a76:	f340 8134 	ble.w	8020ce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8020a7a:	f812 c004 	ldrb.w	ip, [r2, r4]
 8020a7e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8020a82:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020a86:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8020a8a:	4355      	muls	r5, r2
 8020a8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a90:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8020a94:	fb0c f203 	mul.w	r2, ip, r3
 8020a98:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8020a9c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8020aa0:	441d      	add	r5, r3
 8020aa2:	f102 0320 	add.w	r3, r2, #32
 8020aa6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020aaa:	0a1b      	lsrs	r3, r3, #8
 8020aac:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020ab0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ab4:	431c      	orrs	r4, r3
 8020ab6:	1c7b      	adds	r3, r7, #1
 8020ab8:	f100 811c 	bmi.w	8020cf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8020abc:	429e      	cmp	r6, r3
 8020abe:	f340 8119 	ble.w	8020cf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8020ac2:	2900      	cmp	r1, #0
 8020ac4:	f000 8119 	beq.w	8020cfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8020ac8:	9a01      	ldr	r2, [sp, #4]
 8020aca:	f899 3001 	ldrb.w	r3, [r9, #1]
 8020ace:	8855      	ldrh	r5, [r2, #2]
 8020ad0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8020ad4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8020ad8:	fb08 f802 	mul.w	r8, r8, r2
 8020adc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020ae0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8020ae4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8020ae8:	435d      	muls	r5, r3
 8020aea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020aee:	44d0      	add	r8, sl
 8020af0:	f105 0a20 	add.w	sl, r5, #32
 8020af4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020af8:	0a2d      	lsrs	r5, r5, #8
 8020afa:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8020afe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020b02:	432a      	orrs	r2, r5
 8020b04:	3001      	adds	r0, #1
 8020b06:	f100 80fe 	bmi.w	8020d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8020b0a:	4583      	cmp	fp, r0
 8020b0c:	f340 80fb 	ble.w	8020d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8020b10:	f1be 0f00 	cmp.w	lr, #0
 8020b14:	f000 80fc 	beq.w	8020d10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8020b18:	2f00      	cmp	r7, #0
 8020b1a:	f2c0 80f1 	blt.w	8020d00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8020b1e:	42be      	cmp	r6, r7
 8020b20:	f340 80ee 	ble.w	8020d00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8020b24:	9801      	ldr	r0, [sp, #4]
 8020b26:	f819 5006 	ldrb.w	r5, [r9, r6]
 8020b2a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8020b2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8020b32:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8020b36:	fb0a fa00 	mul.w	sl, sl, r0
 8020b3a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8020b3e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020b42:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8020b46:	fb05 f808 	mul.w	r8, r5, r8
 8020b4a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8020b4e:	4482      	add	sl, r0
 8020b50:	f108 0020 	add.w	r0, r8, #32
 8020b54:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020b58:	0a00      	lsrs	r0, r0, #8
 8020b5a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8020b5e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020b62:	ea4b 0b00 	orr.w	fp, fp, r0
 8020b66:	3701      	adds	r7, #1
 8020b68:	f100 80d7 	bmi.w	8020d1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8020b6c:	42be      	cmp	r6, r7
 8020b6e:	f340 80d4 	ble.w	8020d1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8020b72:	2900      	cmp	r1, #0
 8020b74:	f000 80d4 	beq.w	8020d20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8020b78:	3601      	adds	r6, #1
 8020b7a:	9801      	ldr	r0, [sp, #4]
 8020b7c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020b80:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8020b84:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020b88:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8020b8c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020b90:	fb09 f906 	mul.w	r9, r9, r6
 8020b94:	fb07 f800 	mul.w	r8, r7, r0
 8020b98:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8020b9c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8020ba0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8020ba4:	44d1      	add	r9, sl
 8020ba6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8020baa:	f108 0020 	add.w	r0, r8, #32
 8020bae:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020bb2:	0a00      	lsrs	r0, r0, #8
 8020bb4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020bb8:	4330      	orrs	r0, r6
 8020bba:	b28e      	uxth	r6, r1
 8020bbc:	fa1f f98e 	uxth.w	r9, lr
 8020bc0:	fb06 f809 	mul.w	r8, r6, r9
 8020bc4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8020bc8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8020bcc:	0136      	lsls	r6, r6, #4
 8020bce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020bd2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020bd6:	9601      	str	r6, [sp, #4]
 8020bd8:	ea4a 0404 	orr.w	r4, sl, r4
 8020bdc:	fa1f f689 	uxth.w	r6, r9
 8020be0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020be4:	fb11 f90e 	smulbb	r9, r1, lr
 8020be8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8020bec:	9602      	str	r6, [sp, #8]
 8020bee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020bf2:	4626      	mov	r6, r4
 8020bf4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020bf8:	f1ce 0410 	rsb	r4, lr, #16
 8020bfc:	1a64      	subs	r4, r4, r1
 8020bfe:	ea4a 0202 	orr.w	r2, sl, r2
 8020c02:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8020c06:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020c0a:	434a      	muls	r2, r1
 8020c0c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020c10:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020c14:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020c18:	fb04 2406 	mla	r4, r4, r6, r2
 8020c1c:	ea4a 0000 	orr.w	r0, sl, r0
 8020c20:	fb09 4200 	mla	r2, r9, r0, r4
 8020c24:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020c28:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020c2c:	9801      	ldr	r0, [sp, #4]
 8020c2e:	9903      	ldr	r1, [sp, #12]
 8020c30:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020c34:	ea44 0b0b 	orr.w	fp, r4, fp
 8020c38:	9c02      	ldr	r4, [sp, #8]
 8020c3a:	8809      	ldrh	r1, [r1, #0]
 8020c3c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8020c40:	1b00      	subs	r0, r0, r4
 8020c42:	9c01      	ldr	r4, [sp, #4]
 8020c44:	eba4 0608 	sub.w	r6, r4, r8
 8020c48:	b2b6      	uxth	r6, r6
 8020c4a:	b280      	uxth	r0, r0
 8020c4c:	4373      	muls	r3, r6
 8020c4e:	fb0c 3300 	mla	r3, ip, r0, r3
 8020c52:	9802      	ldr	r0, [sp, #8]
 8020c54:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020c58:	fb00 3505 	mla	r5, r0, r5, r3
 8020c5c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8020c60:	fb08 5707 	mla	r7, r8, r7, r5
 8020c64:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020c68:	120b      	asrs	r3, r1, #8
 8020c6a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020c6e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8020c72:	b2ff      	uxtb	r7, r7
 8020c74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020c78:	10c8      	asrs	r0, r1, #3
 8020c7a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020c7e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020c82:	00c9      	lsls	r1, r1, #3
 8020c84:	437b      	muls	r3, r7
 8020c86:	ea42 0e0e 	orr.w	lr, r2, lr
 8020c8a:	b2c9      	uxtb	r1, r1
 8020c8c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020c90:	fa1f f28e 	uxth.w	r2, lr
 8020c94:	4378      	muls	r0, r7
 8020c96:	434f      	muls	r7, r1
 8020c98:	1c59      	adds	r1, r3, #1
 8020c9a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020c9e:	1213      	asrs	r3, r2, #8
 8020ca0:	f023 0307 	bic.w	r3, r3, #7
 8020ca4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020ca8:	1c41      	adds	r1, r0, #1
 8020caa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020cae:	10d1      	asrs	r1, r2, #3
 8020cb0:	f021 0103 	bic.w	r1, r1, #3
 8020cb4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020cb8:	021b      	lsls	r3, r3, #8
 8020cba:	00c9      	lsls	r1, r1, #3
 8020cbc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020cc0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8020cc4:	430b      	orrs	r3, r1
 8020cc6:	1c79      	adds	r1, r7, #1
 8020cc8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8020ccc:	00d2      	lsls	r2, r2, #3
 8020cce:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020cd2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020cd6:	431a      	orrs	r2, r3
 8020cd8:	9b03      	ldr	r3, [sp, #12]
 8020cda:	801a      	strh	r2, [r3, #0]
 8020cdc:	b005      	add	sp, #20
 8020cde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ce2:	f04f 0c00 	mov.w	ip, #0
 8020ce6:	4664      	mov	r4, ip
 8020ce8:	e6e5      	b.n	8020ab6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8020cea:	2300      	movs	r3, #0
 8020cec:	469c      	mov	ip, r3
 8020cee:	461a      	mov	r2, r3
 8020cf0:	461c      	mov	r4, r3
 8020cf2:	e707      	b.n	8020b04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020cf4:	2300      	movs	r3, #0
 8020cf6:	461a      	mov	r2, r3
 8020cf8:	e704      	b.n	8020b04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020cfa:	460b      	mov	r3, r1
 8020cfc:	460a      	mov	r2, r1
 8020cfe:	e701      	b.n	8020b04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020d00:	2500      	movs	r5, #0
 8020d02:	46ab      	mov	fp, r5
 8020d04:	e72f      	b.n	8020b66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8020d06:	2700      	movs	r7, #0
 8020d08:	463d      	mov	r5, r7
 8020d0a:	4638      	mov	r0, r7
 8020d0c:	46bb      	mov	fp, r7
 8020d0e:	e754      	b.n	8020bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020d10:	4677      	mov	r7, lr
 8020d12:	4675      	mov	r5, lr
 8020d14:	4670      	mov	r0, lr
 8020d16:	46f3      	mov	fp, lr
 8020d18:	e74f      	b.n	8020bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020d1a:	2700      	movs	r7, #0
 8020d1c:	4638      	mov	r0, r7
 8020d1e:	e74c      	b.n	8020bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020d20:	460f      	mov	r7, r1
 8020d22:	4608      	mov	r0, r1
 8020d24:	e749      	b.n	8020bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08020d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d2c:	b093      	sub	sp, #76	; 0x4c
 8020d2e:	9210      	str	r2, [sp, #64]	; 0x40
 8020d30:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020d32:	910e      	str	r1, [sp, #56]	; 0x38
 8020d34:	9306      	str	r3, [sp, #24]
 8020d36:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020d3a:	9011      	str	r0, [sp, #68]	; 0x44
 8020d3c:	6850      	ldr	r0, [r2, #4]
 8020d3e:	6812      	ldr	r2, [r2, #0]
 8020d40:	fb00 1303 	mla	r3, r0, r3, r1
 8020d44:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020d48:	9307      	str	r3, [sp, #28]
 8020d4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020d4c:	681b      	ldr	r3, [r3, #0]
 8020d4e:	9308      	str	r3, [sp, #32]
 8020d50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020d52:	685b      	ldr	r3, [r3, #4]
 8020d54:	9309      	str	r3, [sp, #36]	; 0x24
 8020d56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020d58:	2b00      	cmp	r3, #0
 8020d5a:	dc03      	bgt.n	8020d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020d5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020d5e:	2b00      	cmp	r3, #0
 8020d60:	f340 83b4 	ble.w	80214cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8020d64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020d66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d6a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020d6e:	1e48      	subs	r0, r1, #1
 8020d70:	1e55      	subs	r5, r2, #1
 8020d72:	9b06      	ldr	r3, [sp, #24]
 8020d74:	2b00      	cmp	r3, #0
 8020d76:	f340 8163 	ble.w	8021040 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8020d7a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8020d7c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020d7e:	1436      	asrs	r6, r6, #16
 8020d80:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020d84:	d406      	bmi.n	8020d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020d86:	4286      	cmp	r6, r0
 8020d88:	da04      	bge.n	8020d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020d8a:	2b00      	cmp	r3, #0
 8020d8c:	db02      	blt.n	8020d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020d8e:	42ab      	cmp	r3, r5
 8020d90:	f2c0 8157 	blt.w	8021042 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8020d94:	3601      	adds	r6, #1
 8020d96:	f100 8144 	bmi.w	8021022 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020d9a:	42b1      	cmp	r1, r6
 8020d9c:	f2c0 8141 	blt.w	8021022 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020da0:	3301      	adds	r3, #1
 8020da2:	f100 813e 	bmi.w	8021022 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020da6:	429a      	cmp	r2, r3
 8020da8:	f2c0 813b 	blt.w	8021022 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8020dac:	9b06      	ldr	r3, [sp, #24]
 8020dae:	9f07      	ldr	r7, [sp, #28]
 8020db0:	930f      	str	r3, [sp, #60]	; 0x3c
 8020db2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020db6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020db8:	2b00      	cmp	r3, #0
 8020dba:	f340 8164 	ble.w	8021086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8020dbe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020dc0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8020dc2:	1418      	asrs	r0, r3, #16
 8020dc4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020dc6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8020dca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020dcc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8020dd0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020dd2:	142d      	asrs	r5, r5, #16
 8020dd4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8020dd8:	f100 81ee 	bmi.w	80211b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020ddc:	f102 3eff 	add.w	lr, r2, #4294967295
 8020de0:	4575      	cmp	r5, lr
 8020de2:	f280 81e9 	bge.w	80211b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020de6:	2800      	cmp	r0, #0
 8020de8:	f2c0 81e6 	blt.w	80211b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020dec:	f103 3eff 	add.w	lr, r3, #4294967295
 8020df0:	4570      	cmp	r0, lr
 8020df2:	f280 81e1 	bge.w	80211b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020df6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020df8:	b212      	sxth	r2, r2
 8020dfa:	fb00 5002 	mla	r0, r0, r2, r5
 8020dfe:	fa1f fe81 	uxth.w	lr, r1
 8020e02:	eb03 0a00 	add.w	sl, r3, r0
 8020e06:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8020e0a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8020e0e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020e12:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8020e16:	b29b      	uxth	r3, r3
 8020e18:	f1bc 0f00 	cmp.w	ip, #0
 8020e1c:	f000 8179 	beq.w	8021112 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8020e20:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8020e24:	940a      	str	r4, [sp, #40]	; 0x28
 8020e26:	eb0a 0b02 	add.w	fp, sl, r2
 8020e2a:	fa1f fa8c 	uxth.w	sl, ip
 8020e2e:	fb0a fe0e 	mul.w	lr, sl, lr
 8020e32:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8020e36:	fa1f fa8a 	uxth.w	sl, sl
 8020e3a:	eba5 050e 	sub.w	r5, r5, lr
 8020e3e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020e42:	940b      	str	r4, [sp, #44]	; 0x2c
 8020e44:	eba3 030a 	sub.w	r3, r3, sl
 8020e48:	b2ad      	uxth	r5, r5
 8020e4a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020e4c:	b29b      	uxth	r3, r3
 8020e4e:	fb08 f505 	mul.w	r5, r8, r5
 8020e52:	fb09 5303 	mla	r3, r9, r3, r5
 8020e56:	fb0a 3304 	mla	r3, sl, r4, r3
 8020e5a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020e5c:	fb0e 3304 	mla	r3, lr, r4, r3
 8020e60:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020e64:	2b00      	cmp	r3, #0
 8020e66:	f000 80cf 	beq.w	8021008 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020e6a:	9c08      	ldr	r4, [sp, #32]
 8020e6c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020e70:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8020e74:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8020e78:	f000 8150 	beq.w	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020e7c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020e80:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020e84:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020e88:	fb09 f000 	mul.w	r0, r9, r0
 8020e8c:	fb0a fe0e 	mul.w	lr, sl, lr
 8020e90:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8020e94:	f100 0b20 	add.w	fp, r0, #32
 8020e98:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020e9c:	44ce      	add	lr, r9
 8020e9e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8020ea2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020ea6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020eaa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020eae:	ea4e 0909 	orr.w	r9, lr, r9
 8020eb2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020eb6:	8868      	ldrh	r0, [r5, #2]
 8020eb8:	d019      	beq.n	8020eee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020eba:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020ebe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020ec2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020ec6:	fb08 f800 	mul.w	r8, r8, r0
 8020eca:	fb0a fe0e 	mul.w	lr, sl, lr
 8020ece:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8020ed2:	f108 0b20 	add.w	fp, r8, #32
 8020ed6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020eda:	4486      	add	lr, r0
 8020edc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020ee0:	0a00      	lsrs	r0, r0, #8
 8020ee2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020ee6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020eea:	ea4e 0000 	orr.w	r0, lr, r0
 8020eee:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8020ef2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020ef6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020efa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020efe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020f02:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020f06:	ea4e 0909 	orr.w	r9, lr, r9
 8020f0a:	ea4a 0000 	orr.w	r0, sl, r0
 8020f0e:	f1bc 0f00 	cmp.w	ip, #0
 8020f12:	f000 8105 	beq.w	8021120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020f16:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8020f1a:	3a01      	subs	r2, #1
 8020f1c:	0052      	lsls	r2, r2, #1
 8020f1e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020f20:	3202      	adds	r2, #2
 8020f22:	2cff      	cmp	r4, #255	; 0xff
 8020f24:	eb05 0e02 	add.w	lr, r5, r2
 8020f28:	5aaa      	ldrh	r2, [r5, r2]
 8020f2a:	d018      	beq.n	8020f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8020f2c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8020f30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020f34:	fb04 fa02 	mul.w	sl, r4, r2
 8020f38:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020f3c:	fb08 f805 	mul.w	r8, r8, r5
 8020f40:	f10a 0520 	add.w	r5, sl, #32
 8020f44:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8020f48:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8020f4c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020f50:	4442      	add	r2, r8
 8020f52:	0a2d      	lsrs	r5, r5, #8
 8020f54:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8020f58:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020f5c:	432a      	orrs	r2, r5
 8020f5e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020f60:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8020f64:	2cff      	cmp	r4, #255	; 0xff
 8020f66:	d01a      	beq.n	8020f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020f68:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8020f6c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020f70:	fb04 fa05 	mul.w	sl, r4, r5
 8020f74:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020f78:	fb08 f80e 	mul.w	r8, r8, lr
 8020f7c:	f10a 0e20 	add.w	lr, sl, #32
 8020f80:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8020f84:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8020f88:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020f8c:	4445      	add	r5, r8
 8020f8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f92:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8020f96:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8020f9a:	ea45 050e 	orr.w	r5, r5, lr
 8020f9e:	fb1c fe01 	smulbb	lr, ip, r1
 8020fa2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8020fa6:	f1cc 0810 	rsb	r8, ip, #16
 8020faa:	eba8 0801 	sub.w	r8, r8, r1
 8020fae:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020fb2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8020fb6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8020fba:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8020fbe:	4341      	muls	r1, r0
 8020fc0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020fc4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020fc8:	ea4a 0202 	orr.w	r2, sl, r2
 8020fcc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8020fd0:	fb09 1108 	mla	r1, r9, r8, r1
 8020fd4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020fd8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020fdc:	fb0c 1102 	mla	r1, ip, r2, r1
 8020fe0:	ea4b 0505 	orr.w	r5, fp, r5
 8020fe4:	fb0e 1e05 	mla	lr, lr, r5, r1
 8020fe8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020fec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020ff0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020ff4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020ff8:	ea42 0e0e 	orr.w	lr, r2, lr
 8020ffc:	fa1f f28e 	uxth.w	r2, lr
 8021000:	2bff      	cmp	r3, #255	; 0xff
 8021002:	f040 80a1 	bne.w	8021148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8021006:	803a      	strh	r2, [r7, #0]
 8021008:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802100a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802100c:	4413      	add	r3, r2
 802100e:	931d      	str	r3, [sp, #116]	; 0x74
 8021010:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8021012:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021014:	441a      	add	r2, r3
 8021016:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021018:	921e      	str	r2, [sp, #120]	; 0x78
 802101a:	3b01      	subs	r3, #1
 802101c:	3702      	adds	r7, #2
 802101e:	930f      	str	r3, [sp, #60]	; 0x3c
 8021020:	e6c9      	b.n	8020db6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021022:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021024:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8021026:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8021028:	4433      	add	r3, r6
 802102a:	931d      	str	r3, [sp, #116]	; 0x74
 802102c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802102e:	441c      	add	r4, r3
 8021030:	9b06      	ldr	r3, [sp, #24]
 8021032:	941e      	str	r4, [sp, #120]	; 0x78
 8021034:	3b01      	subs	r3, #1
 8021036:	9306      	str	r3, [sp, #24]
 8021038:	9b07      	ldr	r3, [sp, #28]
 802103a:	3302      	adds	r3, #2
 802103c:	9307      	str	r3, [sp, #28]
 802103e:	e698      	b.n	8020d72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021040:	d028      	beq.n	8021094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021042:	9b06      	ldr	r3, [sp, #24]
 8021044:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021046:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021048:	3b01      	subs	r3, #1
 802104a:	fb00 5003 	mla	r0, r0, r3, r5
 802104e:	1400      	asrs	r0, r0, #16
 8021050:	f53f aeac 	bmi.w	8020dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021054:	3901      	subs	r1, #1
 8021056:	4288      	cmp	r0, r1
 8021058:	f6bf aea8 	bge.w	8020dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802105c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802105e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8021060:	fb01 0303 	mla	r3, r1, r3, r0
 8021064:	141b      	asrs	r3, r3, #16
 8021066:	f53f aea1 	bmi.w	8020dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802106a:	3a01      	subs	r2, #1
 802106c:	4293      	cmp	r3, r2
 802106e:	f6bf ae9d 	bge.w	8020dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021072:	9b06      	ldr	r3, [sp, #24]
 8021074:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8021078:	930f      	str	r3, [sp, #60]	; 0x3c
 802107a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802107e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021080:	2b00      	cmp	r3, #0
 8021082:	f300 80b6 	bgt.w	80211f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8021086:	9b06      	ldr	r3, [sp, #24]
 8021088:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802108c:	9b07      	ldr	r3, [sp, #28]
 802108e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021092:	9307      	str	r3, [sp, #28]
 8021094:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021096:	2b00      	cmp	r3, #0
 8021098:	f340 8218 	ble.w	80214cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802109c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80210a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80210a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80210a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80210aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80210ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80210b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80210b6:	eef0 6a62 	vmov.f32	s13, s5
 80210ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80210be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80210c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80210c6:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80210ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80210ce:	eef0 6a43 	vmov.f32	s13, s6
 80210d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80210d6:	ee12 2a90 	vmov	r2, s5
 80210da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80210de:	fb92 f3f3 	sdiv	r3, r2, r3
 80210e2:	ee13 2a10 	vmov	r2, s6
 80210e6:	931f      	str	r3, [sp, #124]	; 0x7c
 80210e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80210ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80210ee:	9320      	str	r3, [sp, #128]	; 0x80
 80210f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80210f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80210f4:	3b01      	subs	r3, #1
 80210f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80210fa:	930e      	str	r3, [sp, #56]	; 0x38
 80210fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80210fe:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8021102:	bf08      	it	eq
 8021104:	4613      	moveq	r3, r2
 8021106:	9306      	str	r3, [sp, #24]
 8021108:	eeb0 3a67 	vmov.f32	s6, s15
 802110c:	eef0 2a47 	vmov.f32	s5, s14
 8021110:	e621      	b.n	8020d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8021112:	fb08 f505 	mul.w	r5, r8, r5
 8021116:	fb09 5303 	mla	r3, r9, r3, r5
 802111a:	e6a1      	b.n	8020e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802111c:	4681      	mov	r9, r0
 802111e:	e6c8      	b.n	8020eb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8021120:	f1c1 0210 	rsb	r2, r1, #16
 8021124:	4341      	muls	r1, r0
 8021126:	fb09 1902 	mla	r9, r9, r2, r1
 802112a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802112e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021132:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021136:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802113a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802113e:	ea42 0909 	orr.w	r9, r2, r9
 8021142:	fa1f f289 	uxth.w	r2, r9
 8021146:	e75b      	b.n	8021000 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021148:	f8b7 c000 	ldrh.w	ip, [r7]
 802114c:	43db      	mvns	r3, r3
 802114e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8021152:	fa5f fe83 	uxtb.w	lr, r3
 8021156:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802115a:	fb00 f00e 	mul.w	r0, r0, lr
 802115e:	1c41      	adds	r1, r0, #1
 8021160:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021164:	1211      	asrs	r1, r2, #8
 8021166:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802116a:	f021 0107 	bic.w	r1, r1, #7
 802116e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021172:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021176:	48d7      	ldr	r0, [pc, #860]	; (80214d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8021178:	fb05 f50e 	mul.w	r5, r5, lr
 802117c:	b2c9      	uxtb	r1, r1
 802117e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8021182:	1c69      	adds	r1, r5, #1
 8021184:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8021188:	10d1      	asrs	r1, r2, #3
 802118a:	f021 0103 	bic.w	r1, r1, #3
 802118e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8021192:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8021196:	b2db      	uxtb	r3, r3
 8021198:	00c9      	lsls	r1, r1, #3
 802119a:	fb03 f30e 	mul.w	r3, r3, lr
 802119e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80211a2:	4301      	orrs	r1, r0
 80211a4:	1c58      	adds	r0, r3, #1
 80211a6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80211aa:	00d2      	lsls	r2, r2, #3
 80211ac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80211b0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80211b4:	430a      	orrs	r2, r1
 80211b6:	e726      	b.n	8021006 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80211b8:	f115 0e01 	adds.w	lr, r5, #1
 80211bc:	f53f af24 	bmi.w	8021008 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80211c0:	4572      	cmp	r2, lr
 80211c2:	f6ff af21 	blt.w	8021008 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80211c6:	f110 0e01 	adds.w	lr, r0, #1
 80211ca:	f53f af1d 	bmi.w	8021008 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80211ce:	4573      	cmp	r3, lr
 80211d0:	f6ff af1a 	blt.w	8021008 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80211d4:	b21b      	sxth	r3, r3
 80211d6:	b212      	sxth	r2, r2
 80211d8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80211dc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80211e0:	9301      	str	r3, [sp, #4]
 80211e2:	9200      	str	r2, [sp, #0]
 80211e4:	4639      	mov	r1, r7
 80211e6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80211ea:	9811      	ldr	r0, [sp, #68]	; 0x44
 80211ec:	f7ff fc24 	bl	8020a38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80211f0:	e70a      	b.n	8021008 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80211f2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80211f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80211f8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80211fa:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80211fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021200:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021204:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021206:	141f      	asrs	r7, r3, #16
 8021208:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802120a:	141b      	asrs	r3, r3, #16
 802120c:	fb01 3707 	mla	r7, r1, r7, r3
 8021210:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021212:	fa1f fc82 	uxth.w	ip, r2
 8021216:	eb03 0a07 	add.w	sl, r3, r7
 802121a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802121e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021222:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021226:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802122a:	b29b      	uxth	r3, r3
 802122c:	2d00      	cmp	r5, #0
 802122e:	f000 80fe 	beq.w	802142e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8021232:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021236:	940c      	str	r4, [sp, #48]	; 0x30
 8021238:	eb0a 0b01 	add.w	fp, sl, r1
 802123c:	fa1f fa85 	uxth.w	sl, r5
 8021240:	fb0a fc0c 	mul.w	ip, sl, ip
 8021244:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021248:	fa1f fa8a 	uxth.w	sl, sl
 802124c:	eba0 000c 	sub.w	r0, r0, ip
 8021250:	eba3 030a 	sub.w	r3, r3, sl
 8021254:	b280      	uxth	r0, r0
 8021256:	fb08 f000 	mul.w	r0, r8, r0
 802125a:	b29b      	uxth	r3, r3
 802125c:	fb09 0303 	mla	r3, r9, r3, r0
 8021260:	980c      	ldr	r0, [sp, #48]	; 0x30
 8021262:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021266:	940d      	str	r4, [sp, #52]	; 0x34
 8021268:	fb0a 3300 	mla	r3, sl, r0, r3
 802126c:	fb0c 3304 	mla	r3, ip, r4, r3
 8021270:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021274:	2b00      	cmp	r3, #0
 8021276:	f000 80cc 	beq.w	8021412 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802127a:	9808      	ldr	r0, [sp, #32]
 802127c:	9c08      	ldr	r4, [sp, #32]
 802127e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021282:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021286:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802128a:	f000 80d5 	beq.w	8021438 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802128e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021292:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021296:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802129a:	fb09 f707 	mul.w	r7, r9, r7
 802129e:	fb0a fc0c 	mul.w	ip, sl, ip
 80212a2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80212a6:	f107 0b20 	add.w	fp, r7, #32
 80212aa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80212ae:	44cc      	add	ip, r9
 80212b0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80212b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80212b8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80212bc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80212c0:	ea4c 0909 	orr.w	r9, ip, r9
 80212c4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80212c8:	8847      	ldrh	r7, [r0, #2]
 80212ca:	d019      	beq.n	8021300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80212cc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80212d0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80212d4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80212d8:	fb08 f807 	mul.w	r8, r8, r7
 80212dc:	fb0a fc0c 	mul.w	ip, sl, ip
 80212e0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80212e4:	f108 0b20 	add.w	fp, r8, #32
 80212e8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80212ec:	44bc      	add	ip, r7
 80212ee:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80212f2:	0a3f      	lsrs	r7, r7, #8
 80212f4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80212f8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80212fc:	ea4c 0707 	orr.w	r7, ip, r7
 8021300:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021304:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021308:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802130c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021310:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021314:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021318:	ea4c 0909 	orr.w	r9, ip, r9
 802131c:	ea4a 0707 	orr.w	r7, sl, r7
 8021320:	2d00      	cmp	r5, #0
 8021322:	f000 808b 	beq.w	802143c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8021326:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802132a:	3901      	subs	r1, #1
 802132c:	0049      	lsls	r1, r1, #1
 802132e:	3102      	adds	r1, #2
 8021330:	eb00 0c01 	add.w	ip, r0, r1
 8021334:	5a41      	ldrh	r1, [r0, r1]
 8021336:	980c      	ldr	r0, [sp, #48]	; 0x30
 8021338:	28ff      	cmp	r0, #255	; 0xff
 802133a:	d019      	beq.n	8021370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802133c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802133e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021342:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021346:	fb04 fa01 	mul.w	sl, r4, r1
 802134a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802134e:	fb08 f800 	mul.w	r8, r8, r0
 8021352:	f10a 0020 	add.w	r0, sl, #32
 8021356:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802135a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802135e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021362:	4441      	add	r1, r8
 8021364:	0a00      	lsrs	r0, r0, #8
 8021366:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802136a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802136e:	4301      	orrs	r1, r0
 8021370:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021372:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021376:	2cff      	cmp	r4, #255	; 0xff
 8021378:	d01a      	beq.n	80213b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802137a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802137e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021382:	fb04 fa00 	mul.w	sl, r4, r0
 8021386:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802138a:	fb08 f80c 	mul.w	r8, r8, ip
 802138e:	f10a 0c20 	add.w	ip, sl, #32
 8021392:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021396:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802139a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802139e:	4440      	add	r0, r8
 80213a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213a4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80213a8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80213ac:	ea40 000c 	orr.w	r0, r0, ip
 80213b0:	fb15 fc02 	smulbb	ip, r5, r2
 80213b4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80213b8:	f1c5 0810 	rsb	r8, r5, #16
 80213bc:	eba8 0802 	sub.w	r8, r8, r2
 80213c0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80213c4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80213c8:	437a      	muls	r2, r7
 80213ca:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80213ce:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80213d2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80213d6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80213da:	fb09 2208 	mla	r2, r9, r8, r2
 80213de:	ea4a 0101 	orr.w	r1, sl, r1
 80213e2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80213e6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80213ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80213ee:	fb05 2201 	mla	r2, r5, r1, r2
 80213f2:	ea4b 0000 	orr.w	r0, fp, r0
 80213f6:	fb0c 2200 	mla	r2, ip, r0, r2
 80213fa:	0d57      	lsrs	r7, r2, #21
 80213fc:	0952      	lsrs	r2, r2, #5
 80213fe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021402:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021406:	433a      	orrs	r2, r7
 8021408:	2bff      	cmp	r3, #255	; 0xff
 802140a:	b292      	uxth	r2, r2
 802140c:	d127      	bne.n	802145e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802140e:	f8ae 2000 	strh.w	r2, [lr]
 8021412:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021414:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8021416:	4413      	add	r3, r2
 8021418:	931d      	str	r3, [sp, #116]	; 0x74
 802141a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802141c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802141e:	441a      	add	r2, r3
 8021420:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021422:	921e      	str	r2, [sp, #120]	; 0x78
 8021424:	3b01      	subs	r3, #1
 8021426:	f10e 0e02 	add.w	lr, lr, #2
 802142a:	930f      	str	r3, [sp, #60]	; 0x3c
 802142c:	e627      	b.n	802107e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802142e:	fb08 f000 	mul.w	r0, r8, r0
 8021432:	fb09 0303 	mla	r3, r9, r3, r0
 8021436:	e71b      	b.n	8021270 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8021438:	46b9      	mov	r9, r7
 802143a:	e743      	b.n	80212c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802143c:	f1c2 0110 	rsb	r1, r2, #16
 8021440:	437a      	muls	r2, r7
 8021442:	fb09 2901 	mla	r9, r9, r1, r2
 8021446:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802144a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802144e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021452:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021456:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802145a:	4302      	orrs	r2, r0
 802145c:	e7d4      	b.n	8021408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802145e:	f8be 7000 	ldrh.w	r7, [lr]
 8021462:	4c1c      	ldr	r4, [pc, #112]	; (80214d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8021464:	43db      	mvns	r3, r3
 8021466:	1238      	asrs	r0, r7, #8
 8021468:	fa5f fc83 	uxtb.w	ip, r3
 802146c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021470:	10fd      	asrs	r5, r7, #3
 8021472:	fb00 f00c 	mul.w	r0, r0, ip
 8021476:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802147a:	fb05 f10c 	mul.w	r1, r5, ip
 802147e:	1c45      	adds	r5, r0, #1
 8021480:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8021484:	1215      	asrs	r5, r2, #8
 8021486:	f025 0507 	bic.w	r5, r5, #7
 802148a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802148e:	1c4d      	adds	r5, r1, #1
 8021490:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8021494:	10d1      	asrs	r1, r2, #3
 8021496:	f021 0103 	bic.w	r1, r1, #3
 802149a:	00fb      	lsls	r3, r7, #3
 802149c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80214a0:	b2db      	uxtb	r3, r3
 80214a2:	b2c0      	uxtb	r0, r0
 80214a4:	00c9      	lsls	r1, r1, #3
 80214a6:	fb03 f30c 	mul.w	r3, r3, ip
 80214aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80214ae:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80214b2:	4308      	orrs	r0, r1
 80214b4:	1c59      	adds	r1, r3, #1
 80214b6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80214ba:	00d2      	lsls	r2, r2, #3
 80214bc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80214c0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80214c4:	4318      	orrs	r0, r3
 80214c6:	f8ae 0000 	strh.w	r0, [lr]
 80214ca:	e7a2      	b.n	8021412 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80214cc:	b013      	add	sp, #76	; 0x4c
 80214ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80214d2:	bf00      	nop
 80214d4:	fffff800 	.word	0xfffff800

080214d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80214d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80214dc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80214e0:	fb05 4c03 	mla	ip, r5, r3, r4
 80214e4:	2d00      	cmp	r5, #0
 80214e6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80214ea:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80214ee:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80214f2:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80214f6:	8808      	ldrh	r0, [r1, #0]
 80214f8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80214fc:	f2c0 80a7 	blt.w	802164e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8021500:	45aa      	cmp	sl, r5
 8021502:	f340 80a4 	ble.w	802164e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8021506:	2c00      	cmp	r4, #0
 8021508:	f2c0 809f 	blt.w	802164a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802150c:	42a3      	cmp	r3, r4
 802150e:	f340 809c 	ble.w	802164a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8021512:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8021516:	1c62      	adds	r2, r4, #1
 8021518:	f100 809c 	bmi.w	8021654 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802151c:	4293      	cmp	r3, r2
 802151e:	f340 8099 	ble.w	8021654 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8021522:	f1b9 0f00 	cmp.w	r9, #0
 8021526:	f000 8095 	beq.w	8021654 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802152a:	f8be c002 	ldrh.w	ip, [lr, #2]
 802152e:	3501      	adds	r5, #1
 8021530:	f100 8094 	bmi.w	802165c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8021534:	45aa      	cmp	sl, r5
 8021536:	f340 8091 	ble.w	802165c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802153a:	2f00      	cmp	r7, #0
 802153c:	f000 808e 	beq.w	802165c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8021540:	2c00      	cmp	r4, #0
 8021542:	f2c0 8089 	blt.w	8021658 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8021546:	42a3      	cmp	r3, r4
 8021548:	f340 8086 	ble.w	8021658 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802154c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8021550:	3401      	adds	r4, #1
 8021552:	f100 8086 	bmi.w	8021662 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8021556:	42a3      	cmp	r3, r4
 8021558:	f340 8083 	ble.w	8021662 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802155c:	f1b9 0f00 	cmp.w	r9, #0
 8021560:	d07f      	beq.n	8021662 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8021562:	3301      	adds	r3, #1
 8021564:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8021568:	ea4f 4408 	mov.w	r4, r8, lsl #16
 802156c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021570:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8021574:	fb19 fe07 	smulbb	lr, r9, r7
 8021578:	ea44 0808 	orr.w	r8, r4, r8
 802157c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8021580:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8021584:	f1c7 0210 	rsb	r2, r7, #16
 8021588:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802158c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021590:	ea44 0c0c 	orr.w	ip, r4, ip
 8021594:	eba2 0209 	sub.w	r2, r2, r9
 8021598:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 802159c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80215a0:	fb04 f40c 	mul.w	r4, r4, ip
 80215a4:	fb02 4808 	mla	r8, r2, r8, r4
 80215a8:	041a      	lsls	r2, r3, #16
 80215aa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80215ae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80215b2:	4313      	orrs	r3, r2
 80215b4:	042a      	lsls	r2, r5, #16
 80215b6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80215ba:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80215be:	fb0e 8303 	mla	r3, lr, r3, r8
 80215c2:	432a      	orrs	r2, r5
 80215c4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80215c8:	fb07 3202 	mla	r2, r7, r2, r3
 80215cc:	0d53      	lsrs	r3, r2, #21
 80215ce:	0952      	lsrs	r2, r2, #5
 80215d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80215d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80215d8:	431a      	orrs	r2, r3
 80215da:	b293      	uxth	r3, r2
 80215dc:	b2b4      	uxth	r4, r6
 80215de:	1202      	asrs	r2, r0, #8
 80215e0:	43f6      	mvns	r6, r6
 80215e2:	b2f6      	uxtb	r6, r6
 80215e4:	121d      	asrs	r5, r3, #8
 80215e6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80215ea:	fb12 f206 	smulbb	r2, r2, r6
 80215ee:	10c7      	asrs	r7, r0, #3
 80215f0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80215f4:	00c0      	lsls	r0, r0, #3
 80215f6:	fb05 2504 	mla	r5, r5, r4, r2
 80215fa:	b2c0      	uxtb	r0, r0
 80215fc:	10da      	asrs	r2, r3, #3
 80215fe:	00db      	lsls	r3, r3, #3
 8021600:	b2db      	uxtb	r3, r3
 8021602:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021606:	fb10 f006 	smulbb	r0, r0, r6
 802160a:	b2ad      	uxth	r5, r5
 802160c:	fb03 0004 	mla	r0, r3, r4, r0
 8021610:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021614:	fb17 f706 	smulbb	r7, r7, r6
 8021618:	b280      	uxth	r0, r0
 802161a:	1c6b      	adds	r3, r5, #1
 802161c:	fb02 7204 	mla	r2, r2, r4, r7
 8021620:	b292      	uxth	r2, r2
 8021622:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021626:	1c43      	adds	r3, r0, #1
 8021628:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802162c:	1c50      	adds	r0, r2, #1
 802162e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8021632:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021636:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802163a:	0952      	lsrs	r2, r2, #5
 802163c:	432b      	orrs	r3, r5
 802163e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021642:	4313      	orrs	r3, r2
 8021644:	800b      	strh	r3, [r1, #0]
 8021646:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802164a:	4680      	mov	r8, r0
 802164c:	e763      	b.n	8021516 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 802164e:	4684      	mov	ip, r0
 8021650:	4680      	mov	r8, r0
 8021652:	e76c      	b.n	802152e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8021654:	4684      	mov	ip, r0
 8021656:	e76a      	b.n	802152e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8021658:	4605      	mov	r5, r0
 802165a:	e779      	b.n	8021550 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 802165c:	4603      	mov	r3, r0
 802165e:	4605      	mov	r5, r0
 8021660:	e782      	b.n	8021568 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8021662:	4603      	mov	r3, r0
 8021664:	e780      	b.n	8021568 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08021666 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021666:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802166a:	b093      	sub	sp, #76	; 0x4c
 802166c:	461d      	mov	r5, r3
 802166e:	9210      	str	r2, [sp, #64]	; 0x40
 8021670:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021672:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8021676:	920b      	str	r2, [sp, #44]	; 0x2c
 8021678:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 802167c:	910a      	str	r1, [sp, #40]	; 0x28
 802167e:	6859      	ldr	r1, [r3, #4]
 8021680:	681b      	ldr	r3, [r3, #0]
 8021682:	9011      	str	r0, [sp, #68]	; 0x44
 8021684:	fb01 2707 	mla	r7, r1, r7, r2
 8021688:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802168c:	9307      	str	r3, [sp, #28]
 802168e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021690:	681b      	ldr	r3, [r3, #0]
 8021692:	9309      	str	r3, [sp, #36]	; 0x24
 8021694:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021696:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802169a:	43db      	mvns	r3, r3
 802169c:	b2db      	uxtb	r3, r3
 802169e:	9308      	str	r3, [sp, #32]
 80216a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80216a2:	2b00      	cmp	r3, #0
 80216a4:	dc03      	bgt.n	80216ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80216a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80216a8:	2b00      	cmp	r3, #0
 80216aa:	f340 8203 	ble.w	8021ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80216ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80216b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80216b4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80216b8:	1e48      	subs	r0, r1, #1
 80216ba:	f102 3cff 	add.w	ip, r2, #4294967295
 80216be:	2d00      	cmp	r5, #0
 80216c0:	f340 80da 	ble.w	8021878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80216c4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80216c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80216cc:	d406      	bmi.n	80216dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80216ce:	4586      	cmp	lr, r0
 80216d0:	da04      	bge.n	80216dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80216d2:	2b00      	cmp	r3, #0
 80216d4:	db02      	blt.n	80216dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80216d6:	4563      	cmp	r3, ip
 80216d8:	f2c0 80cf 	blt.w	802187a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80216dc:	f11e 0e01 	adds.w	lr, lr, #1
 80216e0:	f100 80c1 	bmi.w	8021866 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80216e4:	4571      	cmp	r1, lr
 80216e6:	f2c0 80be 	blt.w	8021866 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80216ea:	3301      	adds	r3, #1
 80216ec:	f100 80bb 	bmi.w	8021866 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80216f0:	429a      	cmp	r2, r3
 80216f2:	f2c0 80b8 	blt.w	8021866 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80216f6:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80216fa:	46a9      	mov	r9, r5
 80216fc:	f1b9 0f00 	cmp.w	r9, #0
 8021700:	f340 80d8 	ble.w	80218b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8021704:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021706:	1421      	asrs	r1, r4, #16
 8021708:	ea4f 4026 	mov.w	r0, r6, asr #16
 802170c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021710:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021714:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8021718:	f100 8111 	bmi.w	802193e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802171c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8021720:	4551      	cmp	r1, sl
 8021722:	f280 810c 	bge.w	802193e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021726:	2800      	cmp	r0, #0
 8021728:	f2c0 8109 	blt.w	802193e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802172c:	f103 3aff 	add.w	sl, r3, #4294967295
 8021730:	4550      	cmp	r0, sl
 8021732:	f280 8104 	bge.w	802193e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021736:	fa0f f38e 	sxth.w	r3, lr
 802173a:	fb00 1103 	mla	r1, r0, r3, r1
 802173e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8021740:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8021744:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8021748:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 802174c:	f1bc 0f00 	cmp.w	ip, #0
 8021750:	d007      	beq.n	8021762 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8021752:	005b      	lsls	r3, r3, #1
 8021754:	eb0a 0003 	add.w	r0, sl, r3
 8021758:	f83a 3003 	ldrh.w	r3, [sl, r3]
 802175c:	930c      	str	r3, [sp, #48]	; 0x30
 802175e:	8843      	ldrh	r3, [r0, #2]
 8021760:	930d      	str	r3, [sp, #52]	; 0x34
 8021762:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8021766:	fb12 f30c 	smulbb	r3, r2, ip
 802176a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802176e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021772:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021776:	10db      	asrs	r3, r3, #3
 8021778:	ea40 000e 	orr.w	r0, r0, lr
 802177c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021780:	f1cc 0e10 	rsb	lr, ip, #16
 8021784:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021788:	ebae 0e02 	sub.w	lr, lr, r2
 802178c:	ea4a 0101 	orr.w	r1, sl, r1
 8021790:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021794:	4351      	muls	r1, r2
 8021796:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021798:	9f08      	ldr	r7, [sp, #32]
 802179a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802179e:	fb0e 1e00 	mla	lr, lr, r0, r1
 80217a2:	0410      	lsls	r0, r2, #16
 80217a4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80217a8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80217ac:	4310      	orrs	r0, r2
 80217ae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80217b0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80217b2:	0412      	lsls	r2, r2, #16
 80217b4:	fb03 e000 	mla	r0, r3, r0, lr
 80217b8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80217bc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80217c0:	ea42 020e 	orr.w	r2, r2, lr
 80217c4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80217c8:	fb03 0302 	mla	r3, r3, r2, r0
 80217cc:	0d5a      	lsrs	r2, r3, #21
 80217ce:	095b      	lsrs	r3, r3, #5
 80217d0:	f8b8 0000 	ldrh.w	r0, [r8]
 80217d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80217d8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80217dc:	4313      	orrs	r3, r2
 80217de:	b29b      	uxth	r3, r3
 80217e0:	1201      	asrs	r1, r0, #8
 80217e2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80217e6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80217ea:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80217ee:	fb11 f107 	smulbb	r1, r1, r7
 80217f2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80217f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80217fa:	00c0      	lsls	r0, r0, #3
 80217fc:	fb0c 1c02 	mla	ip, ip, r2, r1
 8021800:	b2c0      	uxtb	r0, r0
 8021802:	10d9      	asrs	r1, r3, #3
 8021804:	00db      	lsls	r3, r3, #3
 8021806:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802180a:	b2db      	uxtb	r3, r3
 802180c:	fb10 f007 	smulbb	r0, r0, r7
 8021810:	fa1f fc8c 	uxth.w	ip, ip
 8021814:	fb03 0302 	mla	r3, r3, r2, r0
 8021818:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802181c:	fb1e fe07 	smulbb	lr, lr, r7
 8021820:	fb01 e102 	mla	r1, r1, r2, lr
 8021824:	b29a      	uxth	r2, r3
 8021826:	f10c 0301 	add.w	r3, ip, #1
 802182a:	b289      	uxth	r1, r1
 802182c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8021830:	1c53      	adds	r3, r2, #1
 8021832:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021836:	1c4a      	adds	r2, r1, #1
 8021838:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802183c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8021840:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021844:	0949      	lsrs	r1, r1, #5
 8021846:	ea43 030c 	orr.w	r3, r3, ip
 802184a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802184e:	430b      	orrs	r3, r1
 8021850:	f8a8 3000 	strh.w	r3, [r8]
 8021854:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021856:	441c      	add	r4, r3
 8021858:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802185a:	f108 0802 	add.w	r8, r8, #2
 802185e:	441e      	add	r6, r3
 8021860:	f109 39ff 	add.w	r9, r9, #4294967295
 8021864:	e74a      	b.n	80216fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021866:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021868:	441c      	add	r4, r3
 802186a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802186c:	441e      	add	r6, r3
 802186e:	9b07      	ldr	r3, [sp, #28]
 8021870:	3302      	adds	r3, #2
 8021872:	3d01      	subs	r5, #1
 8021874:	9307      	str	r3, [sp, #28]
 8021876:	e722      	b.n	80216be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021878:	d022      	beq.n	80218c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802187a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802187c:	1e6b      	subs	r3, r5, #1
 802187e:	fb00 4003 	mla	r0, r0, r3, r4
 8021882:	1400      	asrs	r0, r0, #16
 8021884:	f53f af37 	bmi.w	80216f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021888:	3901      	subs	r1, #1
 802188a:	4288      	cmp	r0, r1
 802188c:	f6bf af33 	bge.w	80216f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021890:	9920      	ldr	r1, [sp, #128]	; 0x80
 8021892:	fb01 6303 	mla	r3, r1, r3, r6
 8021896:	141b      	asrs	r3, r3, #16
 8021898:	f53f af2d 	bmi.w	80216f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802189c:	3a01      	subs	r2, #1
 802189e:	4293      	cmp	r3, r2
 80218a0:	f6bf af29 	bge.w	80216f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80218a4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80218a8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80218ac:	46a8      	mov	r8, r5
 80218ae:	f1b8 0f00 	cmp.w	r8, #0
 80218b2:	dc5e      	bgt.n	8021972 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80218b4:	9b07      	ldr	r3, [sp, #28]
 80218b6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80218ba:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80218be:	9307      	str	r3, [sp, #28]
 80218c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80218c2:	2b00      	cmp	r3, #0
 80218c4:	f340 80f6 	ble.w	8021ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80218c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80218cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80218d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80218d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80218d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80218da:	ee31 1a05 	vadd.f32	s2, s2, s10
 80218de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80218e2:	eef0 6a62 	vmov.f32	s13, s5
 80218e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80218ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 80218f2:	ee16 4a90 	vmov	r4, s13
 80218f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80218fa:	eef0 6a43 	vmov.f32	s13, s6
 80218fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021902:	ee12 2a90 	vmov	r2, s5
 8021906:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802190a:	fb92 f3f3 	sdiv	r3, r2, r3
 802190e:	ee13 2a10 	vmov	r2, s6
 8021912:	931f      	str	r3, [sp, #124]	; 0x7c
 8021914:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021916:	fb92 f3f3 	sdiv	r3, r2, r3
 802191a:	9320      	str	r3, [sp, #128]	; 0x80
 802191c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802191e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8021920:	3b01      	subs	r3, #1
 8021922:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021926:	930a      	str	r3, [sp, #40]	; 0x28
 8021928:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802192a:	ee16 6a90 	vmov	r6, s13
 802192e:	bf14      	ite	ne
 8021930:	461d      	movne	r5, r3
 8021932:	4615      	moveq	r5, r2
 8021934:	eeb0 3a67 	vmov.f32	s6, s15
 8021938:	eef0 2a47 	vmov.f32	s5, s14
 802193c:	e6b0      	b.n	80216a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802193e:	f111 0a01 	adds.w	sl, r1, #1
 8021942:	d487      	bmi.n	8021854 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021944:	45d6      	cmp	lr, sl
 8021946:	db85      	blt.n	8021854 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021948:	f110 0a01 	adds.w	sl, r0, #1
 802194c:	d482      	bmi.n	8021854 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802194e:	4553      	cmp	r3, sl
 8021950:	db80      	blt.n	8021854 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021952:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8021954:	9101      	str	r1, [sp, #4]
 8021956:	b21b      	sxth	r3, r3
 8021958:	e9cd 0202 	strd	r0, r2, [sp, #8]
 802195c:	9300      	str	r3, [sp, #0]
 802195e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8021962:	fa0f f38e 	sxth.w	r3, lr
 8021966:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021968:	9811      	ldr	r0, [sp, #68]	; 0x44
 802196a:	4641      	mov	r1, r8
 802196c:	f7ff fdb4 	bl	80214d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8021970:	e770      	b.n	8021854 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021972:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021974:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021976:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802197a:	1430      	asrs	r0, r6, #16
 802197c:	1423      	asrs	r3, r4, #16
 802197e:	fb01 3000 	mla	r0, r1, r0, r3
 8021982:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021984:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8021988:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 802198c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8021990:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021994:	8858      	ldrh	r0, [r3, #2]
 8021996:	f1be 0f00 	cmp.w	lr, #0
 802199a:	d00b      	beq.n	80219b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802199c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80219a0:	3901      	subs	r1, #1
 80219a2:	0049      	lsls	r1, r1, #1
 80219a4:	3102      	adds	r1, #2
 80219a6:	eb03 0b01 	add.w	fp, r3, r1
 80219aa:	5a5b      	ldrh	r3, [r3, r1]
 80219ac:	930e      	str	r3, [sp, #56]	; 0x38
 80219ae:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80219b2:	930f      	str	r3, [sp, #60]	; 0x3c
 80219b4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80219b8:	fb12 f30e 	smulbb	r3, r2, lr
 80219bc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80219c0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80219c4:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80219c8:	10db      	asrs	r3, r3, #3
 80219ca:	ea41 010c 	orr.w	r1, r1, ip
 80219ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80219d2:	f1ce 0c10 	rsb	ip, lr, #16
 80219d6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80219da:	ebac 0c02 	sub.w	ip, ip, r2
 80219de:	ea4b 0000 	orr.w	r0, fp, r0
 80219e2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80219e6:	4350      	muls	r0, r2
 80219e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80219ea:	9f08      	ldr	r7, [sp, #32]
 80219ec:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80219f0:	fb0c 0c01 	mla	ip, ip, r1, r0
 80219f4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80219f8:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80219fc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80219fe:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021a00:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021a04:	0412      	lsls	r2, r2, #16
 8021a06:	ea4b 0101 	orr.w	r1, fp, r1
 8021a0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021a0e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021a12:	fb03 c101 	mla	r1, r3, r1, ip
 8021a16:	4302      	orrs	r2, r0
 8021a18:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8021a1c:	fb03 1202 	mla	r2, r3, r2, r1
 8021a20:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8021a24:	0952      	lsrs	r2, r2, #5
 8021a26:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8021a2a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8021a2e:	f8b9 2000 	ldrh.w	r2, [r9]
 8021a32:	ea4b 0303 	orr.w	r3, fp, r3
 8021a36:	b29b      	uxth	r3, r3
 8021a38:	1211      	asrs	r1, r2, #8
 8021a3a:	1218      	asrs	r0, r3, #8
 8021a3c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021a40:	fb11 f107 	smulbb	r1, r1, r7
 8021a44:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8021a48:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021a4c:	00d2      	lsls	r2, r2, #3
 8021a4e:	fb00 100a 	mla	r0, r0, sl, r1
 8021a52:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8021a56:	10d9      	asrs	r1, r3, #3
 8021a58:	b2d2      	uxtb	r2, r2
 8021a5a:	00db      	lsls	r3, r3, #3
 8021a5c:	fb1c fc07 	smulbb	ip, ip, r7
 8021a60:	fb12 f207 	smulbb	r2, r2, r7
 8021a64:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021a68:	b2db      	uxtb	r3, r3
 8021a6a:	b280      	uxth	r0, r0
 8021a6c:	fb01 c10a 	mla	r1, r1, sl, ip
 8021a70:	fb03 230a 	mla	r3, r3, sl, r2
 8021a74:	b29b      	uxth	r3, r3
 8021a76:	b289      	uxth	r1, r1
 8021a78:	1c42      	adds	r2, r0, #1
 8021a7a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021a7e:	f101 0c01 	add.w	ip, r1, #1
 8021a82:	1c5a      	adds	r2, r3, #1
 8021a84:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021a88:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021a8c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021a8e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021a92:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021a96:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021a9a:	4310      	orrs	r0, r2
 8021a9c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021aa0:	441c      	add	r4, r3
 8021aa2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021aa4:	ea40 000c 	orr.w	r0, r0, ip
 8021aa8:	f829 0b02 	strh.w	r0, [r9], #2
 8021aac:	441e      	add	r6, r3
 8021aae:	f108 38ff 	add.w	r8, r8, #4294967295
 8021ab2:	e6fc      	b.n	80218ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8021ab4:	b013      	add	sp, #76	; 0x4c
 8021ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021aba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8021aba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021abe:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8021ac2:	fb0e 4703 	mla	r7, lr, r3, r4
 8021ac6:	f1be 0f00 	cmp.w	lr, #0
 8021aca:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8021ace:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8021ad2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8021ad6:	8808      	ldrh	r0, [r1, #0]
 8021ad8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8021adc:	db60      	blt.n	8021ba0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8021ade:	45f1      	cmp	r9, lr
 8021ae0:	dd5e      	ble.n	8021ba0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8021ae2:	2c00      	cmp	r4, #0
 8021ae4:	db5a      	blt.n	8021b9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8021ae6:	42a3      	cmp	r3, r4
 8021ae8:	dd58      	ble.n	8021b9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8021aea:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8021aee:	1c62      	adds	r2, r4, #1
 8021af0:	d459      	bmi.n	8021ba6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021af2:	4293      	cmp	r3, r2
 8021af4:	dd57      	ble.n	8021ba6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021af6:	2d00      	cmp	r5, #0
 8021af8:	d055      	beq.n	8021ba6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021afa:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8021afe:	f11e 0e01 	adds.w	lr, lr, #1
 8021b02:	d454      	bmi.n	8021bae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021b04:	45f1      	cmp	r9, lr
 8021b06:	dd52      	ble.n	8021bae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021b08:	2e00      	cmp	r6, #0
 8021b0a:	d050      	beq.n	8021bae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021b0c:	2c00      	cmp	r4, #0
 8021b0e:	db4c      	blt.n	8021baa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8021b10:	42a3      	cmp	r3, r4
 8021b12:	dd4a      	ble.n	8021baa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8021b14:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8021b18:	3401      	adds	r4, #1
 8021b1a:	d405      	bmi.n	8021b28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021b1c:	42a3      	cmp	r3, r4
 8021b1e:	dd03      	ble.n	8021b28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021b20:	b115      	cbz	r5, 8021b28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021b22:	3301      	adds	r3, #1
 8021b24:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8021b28:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8021b2c:	fb15 f406 	smulbb	r4, r5, r6
 8021b30:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021b34:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8021b38:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021b3c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8021b40:	ea43 0c0c 	orr.w	ip, r3, ip
 8021b44:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021b48:	f1c6 0310 	rsb	r3, r6, #16
 8021b4c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021b50:	1b5b      	subs	r3, r3, r5
 8021b52:	ea4e 0707 	orr.w	r7, lr, r7
 8021b56:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8021b5a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021b5e:	437d      	muls	r5, r7
 8021b60:	fb03 5c0c 	mla	ip, r3, ip, r5
 8021b64:	0403      	lsls	r3, r0, #16
 8021b66:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021b6a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b6e:	4318      	orrs	r0, r3
 8021b70:	0413      	lsls	r3, r2, #16
 8021b72:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021b76:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021b7a:	4313      	orrs	r3, r2
 8021b7c:	fb04 c000 	mla	r0, r4, r0, ip
 8021b80:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8021b84:	fb06 0003 	mla	r0, r6, r3, r0
 8021b88:	0d43      	lsrs	r3, r0, #21
 8021b8a:	0940      	lsrs	r0, r0, #5
 8021b8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b90:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b94:	4318      	orrs	r0, r3
 8021b96:	8008      	strh	r0, [r1, #0]
 8021b98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021b9c:	4684      	mov	ip, r0
 8021b9e:	e7a6      	b.n	8021aee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8021ba0:	4607      	mov	r7, r0
 8021ba2:	4684      	mov	ip, r0
 8021ba4:	e7ab      	b.n	8021afe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8021ba6:	4607      	mov	r7, r0
 8021ba8:	e7a9      	b.n	8021afe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8021baa:	4602      	mov	r2, r0
 8021bac:	e7b4      	b.n	8021b18 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8021bae:	4602      	mov	r2, r0
 8021bb0:	e7ba      	b.n	8021b28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08021bb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021bb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bb6:	b08f      	sub	sp, #60	; 0x3c
 8021bb8:	461d      	mov	r5, r3
 8021bba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021bbc:	920c      	str	r2, [sp, #48]	; 0x30
 8021bbe:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8021bc2:	9107      	str	r1, [sp, #28]
 8021bc4:	6859      	ldr	r1, [r3, #4]
 8021bc6:	681b      	ldr	r3, [r3, #0]
 8021bc8:	900d      	str	r0, [sp, #52]	; 0x34
 8021bca:	fb01 2707 	mla	r7, r1, r7, r2
 8021bce:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8021bd2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021bd4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8021bd8:	f8d3 8000 	ldr.w	r8, [r3]
 8021bdc:	9b07      	ldr	r3, [sp, #28]
 8021bde:	2b00      	cmp	r3, #0
 8021be0:	dc03      	bgt.n	8021bea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8021be2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021be4:	2b00      	cmp	r3, #0
 8021be6:	f340 8181 	ble.w	8021eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8021bea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021bec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021bf0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021bf4:	1e48      	subs	r0, r1, #1
 8021bf6:	f102 3cff 	add.w	ip, r2, #4294967295
 8021bfa:	2d00      	cmp	r5, #0
 8021bfc:	f340 809b 	ble.w	8021d36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8021c00:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021c04:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021c08:	d406      	bmi.n	8021c18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021c0a:	4586      	cmp	lr, r0
 8021c0c:	da04      	bge.n	8021c18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021c0e:	2b00      	cmp	r3, #0
 8021c10:	db02      	blt.n	8021c18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021c12:	4563      	cmp	r3, ip
 8021c14:	f2c0 8090 	blt.w	8021d38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021c18:	f11e 0e01 	adds.w	lr, lr, #1
 8021c1c:	f100 8084 	bmi.w	8021d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021c20:	4571      	cmp	r1, lr
 8021c22:	f2c0 8081 	blt.w	8021d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021c26:	3301      	adds	r3, #1
 8021c28:	d47e      	bmi.n	8021d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021c2a:	429a      	cmp	r2, r3
 8021c2c:	db7c      	blt.n	8021d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021c2e:	46aa      	mov	sl, r5
 8021c30:	46b9      	mov	r9, r7
 8021c32:	f1ba 0f00 	cmp.w	sl, #0
 8021c36:	f340 8099 	ble.w	8021d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8021c3a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021c3c:	1421      	asrs	r1, r4, #16
 8021c3e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021c42:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021c46:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021c4a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8021c4e:	f100 80d0 	bmi.w	8021df2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021c52:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021c56:	4559      	cmp	r1, fp
 8021c58:	f280 80cb 	bge.w	8021df2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021c5c:	2800      	cmp	r0, #0
 8021c5e:	f2c0 80c8 	blt.w	8021df2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021c62:	f103 3bff 	add.w	fp, r3, #4294967295
 8021c66:	4558      	cmp	r0, fp
 8021c68:	f280 80c3 	bge.w	8021df2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8021c6c:	fa0f fe8e 	sxth.w	lr, lr
 8021c70:	fb00 110e 	mla	r1, r0, lr, r1
 8021c74:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021c78:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8021c7c:	8841      	ldrh	r1, [r0, #2]
 8021c7e:	f1bc 0f00 	cmp.w	ip, #0
 8021c82:	d00b      	beq.n	8021c9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8021c84:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8021c88:	3b01      	subs	r3, #1
 8021c8a:	005b      	lsls	r3, r3, #1
 8021c8c:	3302      	adds	r3, #2
 8021c8e:	eb00 0e03 	add.w	lr, r0, r3
 8021c92:	5ac3      	ldrh	r3, [r0, r3]
 8021c94:	9308      	str	r3, [sp, #32]
 8021c96:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8021c9a:	9309      	str	r3, [sp, #36]	; 0x24
 8021c9c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8021ca0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021ca4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021ca8:	ea40 000b 	orr.w	r0, r0, fp
 8021cac:	fb12 f30c 	smulbb	r3, r2, ip
 8021cb0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021cb4:	10db      	asrs	r3, r3, #3
 8021cb6:	f1cc 0e10 	rsb	lr, ip, #16
 8021cba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021cbe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021cc2:	ebae 0e02 	sub.w	lr, lr, r2
 8021cc6:	ea4b 0101 	orr.w	r1, fp, r1
 8021cca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021cce:	4351      	muls	r1, r2
 8021cd0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021cd2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8021cd6:	fb0e 1e00 	mla	lr, lr, r0, r1
 8021cda:	0410      	lsls	r0, r2, #16
 8021cdc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021ce0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021ce4:	4310      	orrs	r0, r2
 8021ce6:	9a08      	ldr	r2, [sp, #32]
 8021ce8:	9908      	ldr	r1, [sp, #32]
 8021cea:	0412      	lsls	r2, r2, #16
 8021cec:	fb03 e000 	mla	r0, r3, r0, lr
 8021cf0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021cf4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8021cf8:	ea42 020e 	orr.w	r2, r2, lr
 8021cfc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021d00:	fb03 0302 	mla	r3, r3, r2, r0
 8021d04:	0d5a      	lsrs	r2, r3, #21
 8021d06:	095b      	lsrs	r3, r3, #5
 8021d08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021d0c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021d10:	4313      	orrs	r3, r2
 8021d12:	f8a9 3000 	strh.w	r3, [r9]
 8021d16:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021d18:	441c      	add	r4, r3
 8021d1a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021d1c:	f109 0902 	add.w	r9, r9, #2
 8021d20:	441e      	add	r6, r3
 8021d22:	f10a 3aff 	add.w	sl, sl, #4294967295
 8021d26:	e784      	b.n	8021c32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8021d28:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021d2a:	441c      	add	r4, r3
 8021d2c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021d2e:	3d01      	subs	r5, #1
 8021d30:	441e      	add	r6, r3
 8021d32:	3702      	adds	r7, #2
 8021d34:	e761      	b.n	8021bfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021d36:	d01d      	beq.n	8021d74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021d38:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021d3a:	1e6b      	subs	r3, r5, #1
 8021d3c:	fb00 4003 	mla	r0, r0, r3, r4
 8021d40:	1400      	asrs	r0, r0, #16
 8021d42:	f53f af74 	bmi.w	8021c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021d46:	3901      	subs	r1, #1
 8021d48:	4288      	cmp	r0, r1
 8021d4a:	f6bf af70 	bge.w	8021c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021d4e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021d50:	fb01 6303 	mla	r3, r1, r3, r6
 8021d54:	141b      	asrs	r3, r3, #16
 8021d56:	f53f af6a 	bmi.w	8021c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021d5a:	3a01      	subs	r2, #1
 8021d5c:	4293      	cmp	r3, r2
 8021d5e:	f6bf af66 	bge.w	8021c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021d62:	46a9      	mov	r9, r5
 8021d64:	46ba      	mov	sl, r7
 8021d66:	f1b9 0f00 	cmp.w	r9, #0
 8021d6a:	dc5a      	bgt.n	8021e22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8021d6c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021d70:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8021d74:	9b07      	ldr	r3, [sp, #28]
 8021d76:	2b00      	cmp	r3, #0
 8021d78:	f340 80b8 	ble.w	8021eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8021d7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021d80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021d84:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021d88:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021d8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021d8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021d92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021d96:	eef0 6a62 	vmov.f32	s13, s5
 8021d9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021d9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021da2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021da6:	ee16 4a90 	vmov	r4, s13
 8021daa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021dae:	eef0 6a43 	vmov.f32	s13, s6
 8021db2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021db6:	ee12 2a90 	vmov	r2, s5
 8021dba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021dbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dc2:	ee13 2a10 	vmov	r2, s6
 8021dc6:	931b      	str	r3, [sp, #108]	; 0x6c
 8021dc8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021dca:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dce:	931c      	str	r3, [sp, #112]	; 0x70
 8021dd0:	9b07      	ldr	r3, [sp, #28]
 8021dd2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021dd4:	3b01      	subs	r3, #1
 8021dd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dda:	9307      	str	r3, [sp, #28]
 8021ddc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021dde:	ee16 6a90 	vmov	r6, s13
 8021de2:	bf14      	ite	ne
 8021de4:	461d      	movne	r5, r3
 8021de6:	4615      	moveq	r5, r2
 8021de8:	eeb0 3a67 	vmov.f32	s6, s15
 8021dec:	eef0 2a47 	vmov.f32	s5, s14
 8021df0:	e6f4      	b.n	8021bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8021df2:	f111 0b01 	adds.w	fp, r1, #1
 8021df6:	d48e      	bmi.n	8021d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021df8:	45de      	cmp	lr, fp
 8021dfa:	db8c      	blt.n	8021d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021dfc:	f110 0b01 	adds.w	fp, r0, #1
 8021e00:	d489      	bmi.n	8021d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021e02:	455b      	cmp	r3, fp
 8021e04:	db87      	blt.n	8021d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021e06:	b21b      	sxth	r3, r3
 8021e08:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8021e0c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8021e10:	9300      	str	r3, [sp, #0]
 8021e12:	4642      	mov	r2, r8
 8021e14:	fa0f f38e 	sxth.w	r3, lr
 8021e18:	4649      	mov	r1, r9
 8021e1a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021e1c:	f7ff fe4d 	bl	8021aba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8021e20:	e779      	b.n	8021d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021e22:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021e24:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021e28:	1420      	asrs	r0, r4, #16
 8021e2a:	1431      	asrs	r1, r6, #16
 8021e2c:	fb03 0101 	mla	r1, r3, r1, r0
 8021e30:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021e34:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8021e38:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8021e3c:	8841      	ldrh	r1, [r0, #2]
 8021e3e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021e42:	f1be 0f00 	cmp.w	lr, #0
 8021e46:	d00b      	beq.n	8021e60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021e48:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8021e4c:	3b01      	subs	r3, #1
 8021e4e:	005b      	lsls	r3, r3, #1
 8021e50:	3302      	adds	r3, #2
 8021e52:	eb00 0b03 	add.w	fp, r0, r3
 8021e56:	5ac3      	ldrh	r3, [r0, r3]
 8021e58:	930a      	str	r3, [sp, #40]	; 0x28
 8021e5a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8021e5e:	930b      	str	r3, [sp, #44]	; 0x2c
 8021e60:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8021e64:	fb12 f30e 	smulbb	r3, r2, lr
 8021e68:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021e6c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021e70:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021e74:	10db      	asrs	r3, r3, #3
 8021e76:	ea40 000c 	orr.w	r0, r0, ip
 8021e7a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021e7e:	f1ce 0c10 	rsb	ip, lr, #16
 8021e82:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021e86:	ebac 0c02 	sub.w	ip, ip, r2
 8021e8a:	ea4b 0101 	orr.w	r1, fp, r1
 8021e8e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021e92:	4351      	muls	r1, r2
 8021e94:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021e96:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8021e9a:	fb0c 1c00 	mla	ip, ip, r0, r1
 8021e9e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8021ea2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8021ea6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021ea8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021eaa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021eae:	0412      	lsls	r2, r2, #16
 8021eb0:	ea4b 0000 	orr.w	r0, fp, r0
 8021eb4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021eb8:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8021ebc:	fb03 c000 	mla	r0, r3, r0, ip
 8021ec0:	ea42 0b0b 	orr.w	fp, r2, fp
 8021ec4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8021ec8:	fb03 000b 	mla	r0, r3, fp, r0
 8021ecc:	0d43      	lsrs	r3, r0, #21
 8021ece:	0940      	lsrs	r0, r0, #5
 8021ed0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021ed4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021ed8:	4318      	orrs	r0, r3
 8021eda:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021edc:	f82a 0b02 	strh.w	r0, [sl], #2
 8021ee0:	441c      	add	r4, r3
 8021ee2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021ee4:	f109 39ff 	add.w	r9, r9, #4294967295
 8021ee8:	441e      	add	r6, r3
 8021eea:	e73c      	b.n	8021d66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021eec:	b00f      	add	sp, #60	; 0x3c
 8021eee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021ef2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8021ef2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ef6:	b085      	sub	sp, #20
 8021ef8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8021efc:	9102      	str	r1, [sp, #8]
 8021efe:	2c00      	cmp	r4, #0
 8021f00:	fb04 7103 	mla	r1, r4, r3, r7
 8021f04:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8021f08:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8021f0c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8021f10:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8021f14:	f2c0 811b 	blt.w	802214e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021f18:	45a6      	cmp	lr, r4
 8021f1a:	f340 8118 	ble.w	802214e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021f1e:	2f00      	cmp	r7, #0
 8021f20:	f2c0 8113 	blt.w	802214a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8021f24:	42bb      	cmp	r3, r7
 8021f26:	f340 8110 	ble.w	802214a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8021f2a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021f2e:	1c7a      	adds	r2, r7, #1
 8021f30:	f100 8110 	bmi.w	8022154 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8021f34:	4293      	cmp	r3, r2
 8021f36:	f340 810d 	ble.w	8022154 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8021f3a:	2e00      	cmp	r6, #0
 8021f3c:	f000 810c 	beq.w	8022158 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8021f40:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8021f44:	3401      	adds	r4, #1
 8021f46:	f100 810b 	bmi.w	8022160 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021f4a:	45a6      	cmp	lr, r4
 8021f4c:	f340 8108 	ble.w	8022160 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021f50:	2800      	cmp	r0, #0
 8021f52:	f000 8108 	beq.w	8022166 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8021f56:	2f00      	cmp	r7, #0
 8021f58:	f2c0 8100 	blt.w	802215c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021f5c:	42bb      	cmp	r3, r7
 8021f5e:	f340 80fd 	ble.w	802215c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021f62:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021f66:	3701      	adds	r7, #1
 8021f68:	f100 8100 	bmi.w	802216c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021f6c:	42bb      	cmp	r3, r7
 8021f6e:	f340 80fd 	ble.w	802216c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021f72:	2e00      	cmp	r6, #0
 8021f74:	f000 80fc 	beq.w	8022170 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8021f78:	3301      	adds	r3, #1
 8021f7a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8021f7e:	b2b6      	uxth	r6, r6
 8021f80:	b280      	uxth	r0, r0
 8021f82:	fb00 fe06 	mul.w	lr, r0, r6
 8021f86:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021f8a:	0136      	lsls	r6, r6, #4
 8021f8c:	eba6 070e 	sub.w	r7, r6, lr
 8021f90:	b280      	uxth	r0, r0
 8021f92:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021f96:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021f9a:	b2bf      	uxth	r7, r7
 8021f9c:	1a1b      	subs	r3, r3, r0
 8021f9e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021fa2:	b29b      	uxth	r3, r3
 8021fa4:	fb0a f607 	mul.w	r6, sl, r7
 8021fa8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021fac:	fb0b 6603 	mla	r6, fp, r3, r6
 8021fb0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021fb4:	fb00 6609 	mla	r6, r0, r9, r6
 8021fb8:	fb0e 6608 	mla	r6, lr, r8, r6
 8021fbc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021fc0:	9600      	str	r6, [sp, #0]
 8021fc2:	2e00      	cmp	r6, #0
 8021fc4:	f000 80be 	beq.w	8022144 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8021fc8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021fcc:	fb0b fc0c 	mul.w	ip, fp, ip
 8021fd0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8021fd4:	fb0b f505 	mul.w	r5, fp, r5
 8021fd8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021fdc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8021fe0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021fe4:	44dc      	add	ip, fp
 8021fe6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021fea:	9501      	str	r5, [sp, #4]
 8021fec:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8021ff0:	9503      	str	r5, [sp, #12]
 8021ff2:	9d01      	ldr	r5, [sp, #4]
 8021ff4:	9e02      	ldr	r6, [sp, #8]
 8021ff6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021ffa:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021ffe:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8022002:	fb0a fc0c 	mul.w	ip, sl, ip
 8022006:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802200a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802200e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022012:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022016:	4465      	add	r5, ip
 8022018:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802201c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022020:	fb09 fc0c 	mul.w	ip, r9, ip
 8022024:	fb09 f904 	mul.w	r9, r9, r4
 8022028:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802202c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022030:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8022034:	fb08 f404 	mul.w	r4, r8, r4
 8022038:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802203c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022040:	fb08 f802 	mul.w	r8, r8, r2
 8022044:	fb0a fa01 	mul.w	sl, sl, r1
 8022048:	0a22      	lsrs	r2, r4, #8
 802204a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802204e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022052:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8022056:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802205a:	4414      	add	r4, r2
 802205c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022060:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8022064:	0a2d      	lsrs	r5, r5, #8
 8022066:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802206a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802206e:	9a03      	ldr	r2, [sp, #12]
 8022070:	8836      	ldrh	r6, [r6, #0]
 8022072:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022076:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802207a:	437d      	muls	r5, r7
 802207c:	4461      	add	r1, ip
 802207e:	0a24      	lsrs	r4, r4, #8
 8022080:	fb02 5503 	mla	r5, r2, r3, r5
 8022084:	0a09      	lsrs	r1, r1, #8
 8022086:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802208a:	fb04 540e 	mla	r4, r4, lr, r5
 802208e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022092:	fb01 4100 	mla	r1, r1, r0, r4
 8022096:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802209a:	0a09      	lsrs	r1, r1, #8
 802209c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80220a0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80220a4:	fb07 f70a 	mul.w	r7, r7, sl
 80220a8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80220ac:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80220b0:	fb03 7101 	mla	r1, r3, r1, r7
 80220b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80220b8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80220bc:	fb0e 1e08 	mla	lr, lr, r8, r1
 80220c0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80220c4:	fb00 e101 	mla	r1, r0, r1, lr
 80220c8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80220cc:	9a00      	ldr	r2, [sp, #0]
 80220ce:	b287      	uxth	r7, r0
 80220d0:	437a      	muls	r2, r7
 80220d2:	0a09      	lsrs	r1, r1, #8
 80220d4:	1c53      	adds	r3, r2, #1
 80220d6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80220da:	4321      	orrs	r1, r4
 80220dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80220e0:	1235      	asrs	r5, r6, #8
 80220e2:	0c0a      	lsrs	r2, r1, #16
 80220e4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80220e8:	b2db      	uxtb	r3, r3
 80220ea:	fb12 f207 	smulbb	r2, r2, r7
 80220ee:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80220f2:	fb05 2503 	mla	r5, r5, r3, r2
 80220f6:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80220fa:	10f2      	asrs	r2, r6, #3
 80220fc:	b2c8      	uxtb	r0, r1
 80220fe:	00f6      	lsls	r6, r6, #3
 8022100:	fb14 f407 	smulbb	r4, r4, r7
 8022104:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022108:	b2f6      	uxtb	r6, r6
 802210a:	fb10 f007 	smulbb	r0, r0, r7
 802210e:	fb02 4203 	mla	r2, r2, r3, r4
 8022112:	b2ad      	uxth	r5, r5
 8022114:	fb06 0303 	mla	r3, r6, r3, r0
 8022118:	b299      	uxth	r1, r3
 802211a:	b294      	uxth	r4, r2
 802211c:	1c6b      	adds	r3, r5, #1
 802211e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022122:	1c62      	adds	r2, r4, #1
 8022124:	1c4b      	adds	r3, r1, #1
 8022126:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802212a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802212e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022132:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022136:	0952      	lsrs	r2, r2, #5
 8022138:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802213c:	432b      	orrs	r3, r5
 802213e:	4313      	orrs	r3, r2
 8022140:	9a02      	ldr	r2, [sp, #8]
 8022142:	8013      	strh	r3, [r2, #0]
 8022144:	b005      	add	sp, #20
 8022146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802214a:	2500      	movs	r5, #0
 802214c:	e6ef      	b.n	8021f2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802214e:	2100      	movs	r1, #0
 8022150:	460d      	mov	r5, r1
 8022152:	e6f7      	b.n	8021f44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022154:	2100      	movs	r1, #0
 8022156:	e6f5      	b.n	8021f44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022158:	4631      	mov	r1, r6
 802215a:	e6f3      	b.n	8021f44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802215c:	2400      	movs	r4, #0
 802215e:	e702      	b.n	8021f66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8022160:	2200      	movs	r2, #0
 8022162:	4614      	mov	r4, r2
 8022164:	e70b      	b.n	8021f7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022166:	4602      	mov	r2, r0
 8022168:	4604      	mov	r4, r0
 802216a:	e708      	b.n	8021f7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802216c:	2200      	movs	r2, #0
 802216e:	e706      	b.n	8021f7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022170:	4632      	mov	r2, r6
 8022172:	e704      	b.n	8021f7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08022174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022178:	b09d      	sub	sp, #116	; 0x74
 802217a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802217e:	9219      	str	r2, [sp, #100]	; 0x64
 8022180:	9307      	str	r3, [sp, #28]
 8022182:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8022184:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8022188:	931a      	str	r3, [sp, #104]	; 0x68
 802218a:	9117      	str	r1, [sp, #92]	; 0x5c
 802218c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8022190:	901b      	str	r0, [sp, #108]	; 0x6c
 8022192:	6850      	ldr	r0, [r2, #4]
 8022194:	6812      	ldr	r2, [r2, #0]
 8022196:	fb00 1303 	mla	r3, r0, r3, r1
 802219a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802219e:	930a      	str	r3, [sp, #40]	; 0x28
 80221a0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80221a2:	681b      	ldr	r3, [r3, #0]
 80221a4:	9310      	str	r3, [sp, #64]	; 0x40
 80221a6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80221aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80221ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80221ae:	2b00      	cmp	r3, #0
 80221b0:	dc03      	bgt.n	80221ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80221b2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80221b4:	2b00      	cmp	r3, #0
 80221b6:	f340 8375 	ble.w	80228a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80221ba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80221bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80221c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80221c4:	1e48      	subs	r0, r1, #1
 80221c6:	1e57      	subs	r7, r2, #1
 80221c8:	9b07      	ldr	r3, [sp, #28]
 80221ca:	2b00      	cmp	r3, #0
 80221cc:	f340 818e 	ble.w	80224ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80221d0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80221d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80221d8:	d406      	bmi.n	80221e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80221da:	4584      	cmp	ip, r0
 80221dc:	da04      	bge.n	80221e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80221de:	2b00      	cmp	r3, #0
 80221e0:	db02      	blt.n	80221e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80221e2:	42bb      	cmp	r3, r7
 80221e4:	f2c0 8183 	blt.w	80224ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80221e8:	f11c 0c01 	adds.w	ip, ip, #1
 80221ec:	f100 8173 	bmi.w	80224d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80221f0:	4561      	cmp	r1, ip
 80221f2:	f2c0 8170 	blt.w	80224d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80221f6:	3301      	adds	r3, #1
 80221f8:	f100 816d 	bmi.w	80224d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80221fc:	429a      	cmp	r2, r3
 80221fe:	f2c0 816a 	blt.w	80224d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022202:	9b07      	ldr	r3, [sp, #28]
 8022204:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022206:	9318      	str	r3, [sp, #96]	; 0x60
 8022208:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802220a:	2b00      	cmp	r3, #0
 802220c:	f340 818c 	ble.w	8022528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8022210:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8022212:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022214:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022218:	689b      	ldr	r3, [r3, #8]
 802221a:	1422      	asrs	r2, r4, #16
 802221c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022220:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022224:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022228:	f100 81cd 	bmi.w	80225c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802222c:	f103 38ff 	add.w	r8, r3, #4294967295
 8022230:	4542      	cmp	r2, r8
 8022232:	f280 81c8 	bge.w	80225c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022236:	f1bc 0f00 	cmp.w	ip, #0
 802223a:	f2c0 81c4 	blt.w	80225c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802223e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022242:	45c4      	cmp	ip, r8
 8022244:	f280 81bf 	bge.w	80225c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022248:	b21b      	sxth	r3, r3
 802224a:	fb0c 2203 	mla	r2, ip, r3, r2
 802224e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022250:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022254:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8022258:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802225c:	2800      	cmp	r0, #0
 802225e:	f000 81a9 	beq.w	80225b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8022262:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022266:	950c      	str	r5, [sp, #48]	; 0x30
 8022268:	0e2d      	lsrs	r5, r5, #24
 802226a:	9513      	str	r5, [sp, #76]	; 0x4c
 802226c:	b181      	cbz	r1, 8022290 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802226e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8022272:	3b01      	subs	r3, #1
 8022274:	009b      	lsls	r3, r3, #2
 8022276:	3304      	adds	r3, #4
 8022278:	eb08 0c03 	add.w	ip, r8, r3
 802227c:	f858 3003 	ldr.w	r3, [r8, r3]
 8022280:	9308      	str	r3, [sp, #32]
 8022282:	0e1b      	lsrs	r3, r3, #24
 8022284:	9311      	str	r3, [sp, #68]	; 0x44
 8022286:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802228a:	930d      	str	r3, [sp, #52]	; 0x34
 802228c:	0e1b      	lsrs	r3, r3, #24
 802228e:	9314      	str	r3, [sp, #80]	; 0x50
 8022290:	b280      	uxth	r0, r0
 8022292:	b289      	uxth	r1, r1
 8022294:	fb00 f901 	mul.w	r9, r0, r1
 8022298:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802229c:	0100      	lsls	r0, r0, #4
 802229e:	eba0 0809 	sub.w	r8, r0, r9
 80222a2:	b289      	uxth	r1, r1
 80222a4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80222a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80222aa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80222ac:	fa1f f888 	uxth.w	r8, r8
 80222b0:	1a5b      	subs	r3, r3, r1
 80222b2:	b29b      	uxth	r3, r3
 80222b4:	fb08 f000 	mul.w	r0, r8, r0
 80222b8:	fb03 000e 	mla	r0, r3, lr, r0
 80222bc:	fb01 0005 	mla	r0, r1, r5, r0
 80222c0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80222c2:	fb09 0005 	mla	r0, r9, r5, r0
 80222c6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80222ca:	2800      	cmp	r0, #0
 80222cc:	f000 80fa 	beq.w	80224c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80222d0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80222d4:	d01b      	beq.n	802230e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80222d6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80222da:	fb0e fa0a 	mul.w	sl, lr, sl
 80222de:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80222e2:	fb0e fe02 	mul.w	lr, lr, r2
 80222e6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80222ea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80222ee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80222f2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80222f6:	4452      	add	r2, sl
 80222f8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80222fc:	0a12      	lsrs	r2, r2, #8
 80222fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022302:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022306:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802230a:	ea42 020c 	orr.w	r2, r2, ip
 802230e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022310:	2dff      	cmp	r5, #255	; 0xff
 8022312:	d021      	beq.n	8022358 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8022314:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022316:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802231a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802231c:	fb05 fb0b 	mul.w	fp, r5, fp
 8022320:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022322:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022326:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022328:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802232c:	fb05 fa0a 	mul.w	sl, r5, sl
 8022330:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022334:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022338:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802233c:	44de      	add	lr, fp
 802233e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022342:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022346:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802234a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802234e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022352:	ea4e 050a 	orr.w	r5, lr, sl
 8022356:	950c      	str	r5, [sp, #48]	; 0x30
 8022358:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802235a:	2dff      	cmp	r5, #255	; 0xff
 802235c:	d021      	beq.n	80223a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802235e:	9d08      	ldr	r5, [sp, #32]
 8022360:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022364:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022366:	fb05 fb0b 	mul.w	fp, r5, fp
 802236a:	9d08      	ldr	r5, [sp, #32]
 802236c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022370:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022372:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022376:	fb05 fa0a 	mul.w	sl, r5, sl
 802237a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802237e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022382:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022386:	44de      	add	lr, fp
 8022388:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802238c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022390:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022394:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022398:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802239c:	ea4e 050a 	orr.w	r5, lr, sl
 80223a0:	9508      	str	r5, [sp, #32]
 80223a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80223a4:	2dff      	cmp	r5, #255	; 0xff
 80223a6:	d021      	beq.n	80223ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80223a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80223aa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80223ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80223b0:	fb05 fb0b 	mul.w	fp, r5, fp
 80223b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80223b6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80223ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80223bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223c0:	fb05 fa0a 	mul.w	sl, r5, sl
 80223c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223c8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80223cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80223d0:	44de      	add	lr, fp
 80223d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80223d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80223da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223e6:	ea4e 050a 	orr.w	r5, lr, sl
 80223ea:	950d      	str	r5, [sp, #52]	; 0x34
 80223ec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80223ee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80223f2:	9d08      	ldr	r5, [sp, #32]
 80223f4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80223f8:	fb08 fc0c 	mul.w	ip, r8, ip
 80223fc:	fb03 cc0e 	mla	ip, r3, lr, ip
 8022400:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022404:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022406:	fb01 cc0e 	mla	ip, r1, lr, ip
 802240a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802240e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022410:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022414:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022418:	fb08 f80e 	mul.w	r8, r8, lr
 802241c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022420:	fb03 8202 	mla	r2, r3, r2, r8
 8022424:	9b08      	ldr	r3, [sp, #32]
 8022426:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022428:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802242c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802242e:	fb01 220a 	mla	r2, r1, sl, r2
 8022432:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8022436:	fb09 2901 	mla	r9, r9, r1, r2
 802243a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802243c:	883b      	ldrh	r3, [r7, #0]
 802243e:	4342      	muls	r2, r0
 8022440:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022444:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022448:	1c50      	adds	r0, r2, #1
 802244a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802244e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022452:	ea4c 0c09 	orr.w	ip, ip, r9
 8022456:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802245a:	1219      	asrs	r1, r3, #8
 802245c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8022460:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8022464:	b2c0      	uxtb	r0, r0
 8022466:	fb12 f205 	smulbb	r2, r2, r5
 802246a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802246e:	fb01 2100 	mla	r1, r1, r0, r2
 8022472:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8022476:	10da      	asrs	r2, r3, #3
 8022478:	fa5f fc8c 	uxtb.w	ip, ip
 802247c:	00db      	lsls	r3, r3, #3
 802247e:	fb1c fc05 	smulbb	ip, ip, r5
 8022482:	b2db      	uxtb	r3, r3
 8022484:	b289      	uxth	r1, r1
 8022486:	fb03 c300 	mla	r3, r3, r0, ip
 802248a:	fa1f fc83 	uxth.w	ip, r3
 802248e:	1c4b      	adds	r3, r1, #1
 8022490:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022494:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022498:	fb1e fe05 	smulbb	lr, lr, r5
 802249c:	f10c 0301 	add.w	r3, ip, #1
 80224a0:	fb02 e200 	mla	r2, r2, r0, lr
 80224a4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80224a8:	b292      	uxth	r2, r2
 80224aa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80224ae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80224b2:	430b      	orrs	r3, r1
 80224b4:	1c51      	adds	r1, r2, #1
 80224b6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80224ba:	0952      	lsrs	r2, r2, #5
 80224bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80224c0:	4313      	orrs	r3, r2
 80224c2:	803b      	strh	r3, [r7, #0]
 80224c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80224c6:	441c      	add	r4, r3
 80224c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80224ca:	441e      	add	r6, r3
 80224cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80224ce:	3b01      	subs	r3, #1
 80224d0:	3702      	adds	r7, #2
 80224d2:	9318      	str	r3, [sp, #96]	; 0x60
 80224d4:	e698      	b.n	8022208 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80224d6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80224d8:	441c      	add	r4, r3
 80224da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80224dc:	441e      	add	r6, r3
 80224de:	9b07      	ldr	r3, [sp, #28]
 80224e0:	3b01      	subs	r3, #1
 80224e2:	9307      	str	r3, [sp, #28]
 80224e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80224e6:	3302      	adds	r3, #2
 80224e8:	930a      	str	r3, [sp, #40]	; 0x28
 80224ea:	e66d      	b.n	80221c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80224ec:	d023      	beq.n	8022536 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80224ee:	9b07      	ldr	r3, [sp, #28]
 80224f0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80224f2:	3b01      	subs	r3, #1
 80224f4:	fb00 4003 	mla	r0, r0, r3, r4
 80224f8:	1400      	asrs	r0, r0, #16
 80224fa:	f53f ae82 	bmi.w	8022202 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80224fe:	3901      	subs	r1, #1
 8022500:	4288      	cmp	r0, r1
 8022502:	f6bf ae7e 	bge.w	8022202 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022506:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8022508:	fb01 6303 	mla	r3, r1, r3, r6
 802250c:	141b      	asrs	r3, r3, #16
 802250e:	f53f ae78 	bmi.w	8022202 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022512:	3a01      	subs	r2, #1
 8022514:	4293      	cmp	r3, r2
 8022516:	f6bf ae74 	bge.w	8022202 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802251a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802251e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022522:	f1bb 0f00 	cmp.w	fp, #0
 8022526:	dc6c      	bgt.n	8022602 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8022528:	9b07      	ldr	r3, [sp, #28]
 802252a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802252e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022530:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022534:	930a      	str	r3, [sp, #40]	; 0x28
 8022536:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022538:	2b00      	cmp	r3, #0
 802253a:	f340 81b3 	ble.w	80228a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802253e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022542:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022546:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802254a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802254c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022550:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022554:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022558:	eef0 6a62 	vmov.f32	s13, s5
 802255c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022560:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022564:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022568:	ee16 4a90 	vmov	r4, s13
 802256c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022570:	eef0 6a43 	vmov.f32	s13, s6
 8022574:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022578:	ee12 2a90 	vmov	r2, s5
 802257c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022580:	fb92 f3f3 	sdiv	r3, r2, r3
 8022584:	ee13 2a10 	vmov	r2, s6
 8022588:	9329      	str	r3, [sp, #164]	; 0xa4
 802258a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802258c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022590:	932a      	str	r3, [sp, #168]	; 0xa8
 8022592:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022594:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8022596:	3b01      	subs	r3, #1
 8022598:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802259c:	9317      	str	r3, [sp, #92]	; 0x5c
 802259e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80225a0:	bf08      	it	eq
 80225a2:	4613      	moveq	r3, r2
 80225a4:	ee16 6a90 	vmov	r6, s13
 80225a8:	9307      	str	r3, [sp, #28]
 80225aa:	eeb0 3a67 	vmov.f32	s6, s15
 80225ae:	eef0 2a47 	vmov.f32	s5, s14
 80225b2:	e5fb      	b.n	80221ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80225b4:	2900      	cmp	r1, #0
 80225b6:	f43f ae6b 	beq.w	8022290 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80225ba:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80225be:	9308      	str	r3, [sp, #32]
 80225c0:	0e1b      	lsrs	r3, r3, #24
 80225c2:	9311      	str	r3, [sp, #68]	; 0x44
 80225c4:	e664      	b.n	8022290 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80225c6:	f112 0801 	adds.w	r8, r2, #1
 80225ca:	f53f af7b 	bmi.w	80224c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80225ce:	4543      	cmp	r3, r8
 80225d0:	f6ff af78 	blt.w	80224c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80225d4:	f11c 0801 	adds.w	r8, ip, #1
 80225d8:	f53f af74 	bmi.w	80224c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80225dc:	45c6      	cmp	lr, r8
 80225de:	f6ff af71 	blt.w	80224c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80225e2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80225e4:	9201      	str	r2, [sp, #4]
 80225e6:	fa0f f28e 	sxth.w	r2, lr
 80225ea:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80225ee:	e9cd c002 	strd	ip, r0, [sp, #8]
 80225f2:	9200      	str	r2, [sp, #0]
 80225f4:	b21b      	sxth	r3, r3
 80225f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80225f8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80225fa:	4639      	mov	r1, r7
 80225fc:	f7ff fc79 	bl	8021ef2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8022600:	e760      	b.n	80224c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022602:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022604:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022606:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802260a:	1427      	asrs	r7, r4, #16
 802260c:	1433      	asrs	r3, r6, #16
 802260e:	fb01 7303 	mla	r3, r1, r3, r7
 8022612:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8022616:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802261a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802261e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022622:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022626:	2a00      	cmp	r2, #0
 8022628:	f000 8133 	beq.w	8022892 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802262c:	687d      	ldr	r5, [r7, #4]
 802262e:	950e      	str	r5, [sp, #56]	; 0x38
 8022630:	0e2d      	lsrs	r5, r5, #24
 8022632:	9515      	str	r5, [sp, #84]	; 0x54
 8022634:	b178      	cbz	r0, 8022656 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8022636:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802263a:	3901      	subs	r1, #1
 802263c:	0089      	lsls	r1, r1, #2
 802263e:	3104      	adds	r1, #4
 8022640:	eb07 0e01 	add.w	lr, r7, r1
 8022644:	5879      	ldr	r1, [r7, r1]
 8022646:	9109      	str	r1, [sp, #36]	; 0x24
 8022648:	0e09      	lsrs	r1, r1, #24
 802264a:	9112      	str	r1, [sp, #72]	; 0x48
 802264c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8022650:	910f      	str	r1, [sp, #60]	; 0x3c
 8022652:	0e09      	lsrs	r1, r1, #24
 8022654:	9116      	str	r1, [sp, #88]	; 0x58
 8022656:	b292      	uxth	r2, r2
 8022658:	b280      	uxth	r0, r0
 802265a:	fb02 f800 	mul.w	r8, r2, r0
 802265e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022662:	0112      	lsls	r2, r2, #4
 8022664:	eba2 0e08 	sub.w	lr, r2, r8
 8022668:	b280      	uxth	r0, r0
 802266a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802266e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8022670:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022672:	fa1f fe8e 	uxth.w	lr, lr
 8022676:	1a12      	subs	r2, r2, r0
 8022678:	b292      	uxth	r2, r2
 802267a:	fb0e f101 	mul.w	r1, lr, r1
 802267e:	fb02 110c 	mla	r1, r2, ip, r1
 8022682:	fb00 1105 	mla	r1, r0, r5, r1
 8022686:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022688:	fb08 1105 	mla	r1, r8, r5, r1
 802268c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022690:	2900      	cmp	r1, #0
 8022692:	f000 80f5 	beq.w	8022880 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8022696:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802269a:	d019      	beq.n	80226d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802269c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80226a0:	fb0c fa0a 	mul.w	sl, ip, sl
 80226a4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80226a8:	fb0c fc03 	mul.w	ip, ip, r3
 80226ac:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80226b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80226b4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80226b8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80226bc:	4453      	add	r3, sl
 80226be:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80226c2:	0a1b      	lsrs	r3, r3, #8
 80226c4:	0a3f      	lsrs	r7, r7, #8
 80226c6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80226ca:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80226ce:	433b      	orrs	r3, r7
 80226d0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80226d2:	2dff      	cmp	r5, #255	; 0xff
 80226d4:	d020      	beq.n	8022718 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80226d6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80226d8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80226dc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80226de:	436f      	muls	r7, r5
 80226e0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80226e2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80226e6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80226e8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80226ec:	fb05 fa0a 	mul.w	sl, r5, sl
 80226f0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80226f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80226f8:	44bc      	add	ip, r7
 80226fa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80226fe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022702:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022706:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802270a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802270e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022712:	ea4c 050a 	orr.w	r5, ip, sl
 8022716:	950e      	str	r5, [sp, #56]	; 0x38
 8022718:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802271a:	2dff      	cmp	r5, #255	; 0xff
 802271c:	d020      	beq.n	8022760 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802271e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022720:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022724:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022726:	436f      	muls	r7, r5
 8022728:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802272a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802272e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022730:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022734:	fb05 fa0a 	mul.w	sl, r5, sl
 8022738:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802273c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022740:	44bc      	add	ip, r7
 8022742:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022746:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802274a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802274e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022752:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022756:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802275a:	ea4c 050a 	orr.w	r5, ip, sl
 802275e:	9509      	str	r5, [sp, #36]	; 0x24
 8022760:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022762:	2dff      	cmp	r5, #255	; 0xff
 8022764:	d020      	beq.n	80227a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8022766:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022768:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802276c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802276e:	436f      	muls	r7, r5
 8022770:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022772:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022776:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022778:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802277c:	fb05 fa0a 	mul.w	sl, r5, sl
 8022780:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022784:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022788:	44bc      	add	ip, r7
 802278a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802278e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022792:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022796:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802279a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802279e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80227a2:	ea4c 050a 	orr.w	r5, ip, sl
 80227a6:	950f      	str	r5, [sp, #60]	; 0x3c
 80227a8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80227aa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80227ae:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80227b0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80227b4:	fb0e f707 	mul.w	r7, lr, r7
 80227b8:	fb02 770c 	mla	r7, r2, ip, r7
 80227bc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80227c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80227c2:	fb00 770c 	mla	r7, r0, ip, r7
 80227c6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80227ca:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80227cc:	fb08 770c 	mla	r7, r8, ip, r7
 80227d0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80227d4:	fb0e fe0c 	mul.w	lr, lr, ip
 80227d8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80227dc:	fb02 e303 	mla	r3, r2, r3, lr
 80227e0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80227e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80227e4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80227e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80227ea:	fb00 330a 	mla	r3, r0, sl, r3
 80227ee:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80227f2:	fb08 3c0c 	mla	ip, r8, ip, r3
 80227f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80227f8:	f8b9 0000 	ldrh.w	r0, [r9]
 80227fc:	4359      	muls	r1, r3
 80227fe:	0a3f      	lsrs	r7, r7, #8
 8022800:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022804:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022808:	1c4b      	adds	r3, r1, #1
 802280a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802280e:	ea47 070c 	orr.w	r7, r7, ip
 8022812:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022816:	1202      	asrs	r2, r0, #8
 8022818:	0c3b      	lsrs	r3, r7, #16
 802281a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802281e:	b2c9      	uxtb	r1, r1
 8022820:	fb13 f305 	smulbb	r3, r3, r5
 8022824:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022828:	fb02 3201 	mla	r2, r2, r1, r3
 802282c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8022830:	10c3      	asrs	r3, r0, #3
 8022832:	b2ff      	uxtb	r7, r7
 8022834:	00c0      	lsls	r0, r0, #3
 8022836:	b2c0      	uxtb	r0, r0
 8022838:	fb17 f705 	smulbb	r7, r7, r5
 802283c:	fb00 7001 	mla	r0, r0, r1, r7
 8022840:	b292      	uxth	r2, r2
 8022842:	fb1c fc05 	smulbb	ip, ip, r5
 8022846:	b280      	uxth	r0, r0
 8022848:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802284c:	fb03 c301 	mla	r3, r3, r1, ip
 8022850:	1c51      	adds	r1, r2, #1
 8022852:	f100 0c01 	add.w	ip, r0, #1
 8022856:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802285a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802285e:	b29b      	uxth	r3, r3
 8022860:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8022864:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022868:	ea4c 0202 	orr.w	r2, ip, r2
 802286c:	f103 0c01 	add.w	ip, r3, #1
 8022870:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8022874:	095b      	lsrs	r3, r3, #5
 8022876:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802287a:	431a      	orrs	r2, r3
 802287c:	f8a9 2000 	strh.w	r2, [r9]
 8022880:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022882:	441c      	add	r4, r3
 8022884:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022886:	f109 0902 	add.w	r9, r9, #2
 802288a:	441e      	add	r6, r3
 802288c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022890:	e647      	b.n	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8022892:	2800      	cmp	r0, #0
 8022894:	f43f aedf 	beq.w	8022656 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8022898:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802289c:	9109      	str	r1, [sp, #36]	; 0x24
 802289e:	0e09      	lsrs	r1, r1, #24
 80228a0:	9112      	str	r1, [sp, #72]	; 0x48
 80228a2:	e6d8      	b.n	8022656 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80228a4:	b01d      	add	sp, #116	; 0x74
 80228a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080228aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80228aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228ae:	b085      	sub	sp, #20
 80228b0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80228b4:	9102      	str	r1, [sp, #8]
 80228b6:	2c00      	cmp	r4, #0
 80228b8:	fb04 7103 	mla	r1, r4, r3, r7
 80228bc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80228c0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80228c4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80228c8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80228cc:	f2c0 810c 	blt.w	8022ae8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80228d0:	45a6      	cmp	lr, r4
 80228d2:	f340 8109 	ble.w	8022ae8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80228d6:	2f00      	cmp	r7, #0
 80228d8:	f2c0 8104 	blt.w	8022ae4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80228dc:	42bb      	cmp	r3, r7
 80228de:	f340 8101 	ble.w	8022ae4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80228e2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80228e6:	1c7a      	adds	r2, r7, #1
 80228e8:	f100 8101 	bmi.w	8022aee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80228ec:	4293      	cmp	r3, r2
 80228ee:	f340 80fe 	ble.w	8022aee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80228f2:	2e00      	cmp	r6, #0
 80228f4:	f000 80fd 	beq.w	8022af2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80228f8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80228fc:	3401      	adds	r4, #1
 80228fe:	f100 80fc 	bmi.w	8022afa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8022902:	45a6      	cmp	lr, r4
 8022904:	f340 80f9 	ble.w	8022afa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8022908:	2800      	cmp	r0, #0
 802290a:	f000 80f9 	beq.w	8022b00 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802290e:	2f00      	cmp	r7, #0
 8022910:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8022914:	f2c0 80ef 	blt.w	8022af6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8022918:	42bb      	cmp	r3, r7
 802291a:	f340 80ec 	ble.w	8022af6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802291e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022922:	3701      	adds	r7, #1
 8022924:	f100 80ef 	bmi.w	8022b06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8022928:	42bb      	cmp	r3, r7
 802292a:	f340 80ec 	ble.w	8022b06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802292e:	2e00      	cmp	r6, #0
 8022930:	f000 80eb 	beq.w	8022b0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8022934:	6852      	ldr	r2, [r2, #4]
 8022936:	b2b6      	uxth	r6, r6
 8022938:	b280      	uxth	r0, r0
 802293a:	fb00 fe06 	mul.w	lr, r0, r6
 802293e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022942:	0136      	lsls	r6, r6, #4
 8022944:	eba6 070e 	sub.w	r7, r6, lr
 8022948:	b280      	uxth	r0, r0
 802294a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802294e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022952:	b2bf      	uxth	r7, r7
 8022954:	1a1b      	subs	r3, r3, r0
 8022956:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802295a:	b29b      	uxth	r3, r3
 802295c:	fb07 f60a 	mul.w	r6, r7, sl
 8022960:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022964:	fb0b 6603 	mla	r6, fp, r3, r6
 8022968:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802296c:	fb00 6609 	mla	r6, r0, r9, r6
 8022970:	fb0e 6608 	mla	r6, lr, r8, r6
 8022974:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022978:	9600      	str	r6, [sp, #0]
 802297a:	2e00      	cmp	r6, #0
 802297c:	f000 80af 	beq.w	8022ade <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8022980:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022984:	fb0b fc0c 	mul.w	ip, fp, ip
 8022988:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802298c:	fb0b f505 	mul.w	r5, fp, r5
 8022990:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022994:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8022998:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802299c:	44dc      	add	ip, fp
 802299e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80229a2:	9501      	str	r5, [sp, #4]
 80229a4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80229a8:	9503      	str	r5, [sp, #12]
 80229aa:	9d01      	ldr	r5, [sp, #4]
 80229ac:	9e02      	ldr	r6, [sp, #8]
 80229ae:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80229b2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80229b6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80229ba:	fb0a fc0c 	mul.w	ip, sl, ip
 80229be:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80229c2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80229c6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80229ca:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80229ce:	4465      	add	r5, ip
 80229d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80229d4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80229d8:	fb09 fc0c 	mul.w	ip, r9, ip
 80229dc:	fb09 f904 	mul.w	r9, r9, r4
 80229e0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80229e4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80229e8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80229ec:	fb08 f404 	mul.w	r4, r8, r4
 80229f0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80229f4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80229f8:	fb08 f802 	mul.w	r8, r8, r2
 80229fc:	fb0a fa01 	mul.w	sl, sl, r1
 8022a00:	0a22      	lsrs	r2, r4, #8
 8022a02:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8022a06:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022a0a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8022a0e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022a12:	4414      	add	r4, r2
 8022a14:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022a18:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8022a1c:	0a2d      	lsrs	r5, r5, #8
 8022a1e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022a22:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022a26:	9a03      	ldr	r2, [sp, #12]
 8022a28:	8836      	ldrh	r6, [r6, #0]
 8022a2a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022a2e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022a32:	437d      	muls	r5, r7
 8022a34:	4461      	add	r1, ip
 8022a36:	0a24      	lsrs	r4, r4, #8
 8022a38:	fb02 5503 	mla	r5, r2, r3, r5
 8022a3c:	0a09      	lsrs	r1, r1, #8
 8022a3e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022a42:	fb04 540e 	mla	r4, r4, lr, r5
 8022a46:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022a4a:	fb01 4100 	mla	r1, r1, r0, r4
 8022a4e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022a52:	0a09      	lsrs	r1, r1, #8
 8022a54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022a58:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8022a5c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022a60:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8022a64:	fb07 f70a 	mul.w	r7, r7, sl
 8022a68:	fb03 7101 	mla	r1, r3, r1, r7
 8022a6c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022a70:	9b00      	ldr	r3, [sp, #0]
 8022a72:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022a76:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022a7a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8022a7e:	fb00 e101 	mla	r1, r0, r1, lr
 8022a82:	43da      	mvns	r2, r3
 8022a84:	1233      	asrs	r3, r6, #8
 8022a86:	b2d2      	uxtb	r2, r2
 8022a88:	10f0      	asrs	r0, r6, #3
 8022a8a:	0a09      	lsrs	r1, r1, #8
 8022a8c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022a90:	00f6      	lsls	r6, r6, #3
 8022a92:	4353      	muls	r3, r2
 8022a94:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022a98:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022a9c:	b2f6      	uxtb	r6, r6
 8022a9e:	4321      	orrs	r1, r4
 8022aa0:	4350      	muls	r0, r2
 8022aa2:	4356      	muls	r6, r2
 8022aa4:	1c5a      	adds	r2, r3, #1
 8022aa6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022aaa:	0c0b      	lsrs	r3, r1, #16
 8022aac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022ab0:	1c42      	adds	r2, r0, #1
 8022ab2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022ab6:	0a0a      	lsrs	r2, r1, #8
 8022ab8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022abc:	021b      	lsls	r3, r3, #8
 8022abe:	00d2      	lsls	r2, r2, #3
 8022ac0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ac4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8022ac8:	4313      	orrs	r3, r2
 8022aca:	1c72      	adds	r2, r6, #1
 8022acc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8022ad0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8022ad4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8022ad8:	4319      	orrs	r1, r3
 8022ada:	9b02      	ldr	r3, [sp, #8]
 8022adc:	8019      	strh	r1, [r3, #0]
 8022ade:	b005      	add	sp, #20
 8022ae0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022ae4:	2500      	movs	r5, #0
 8022ae6:	e6fe      	b.n	80228e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8022ae8:	2100      	movs	r1, #0
 8022aea:	460d      	mov	r5, r1
 8022aec:	e706      	b.n	80228fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022aee:	2100      	movs	r1, #0
 8022af0:	e704      	b.n	80228fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022af2:	4631      	mov	r1, r6
 8022af4:	e702      	b.n	80228fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022af6:	2400      	movs	r4, #0
 8022af8:	e713      	b.n	8022922 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8022afa:	2200      	movs	r2, #0
 8022afc:	4614      	mov	r4, r2
 8022afe:	e71a      	b.n	8022936 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022b00:	4602      	mov	r2, r0
 8022b02:	4604      	mov	r4, r0
 8022b04:	e717      	b.n	8022936 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022b06:	2200      	movs	r2, #0
 8022b08:	e715      	b.n	8022936 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022b0a:	4632      	mov	r2, r6
 8022b0c:	e713      	b.n	8022936 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08022b10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b14:	b09b      	sub	sp, #108	; 0x6c
 8022b16:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8022b1a:	9218      	str	r2, [sp, #96]	; 0x60
 8022b1c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022b1e:	9116      	str	r1, [sp, #88]	; 0x58
 8022b20:	9307      	str	r3, [sp, #28]
 8022b22:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022b26:	9019      	str	r0, [sp, #100]	; 0x64
 8022b28:	6850      	ldr	r0, [r2, #4]
 8022b2a:	6812      	ldr	r2, [r2, #0]
 8022b2c:	fb00 1303 	mla	r3, r0, r3, r1
 8022b30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022b34:	930a      	str	r3, [sp, #40]	; 0x28
 8022b36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022b38:	681b      	ldr	r3, [r3, #0]
 8022b3a:	930f      	str	r3, [sp, #60]	; 0x3c
 8022b3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022b3e:	2b00      	cmp	r3, #0
 8022b40:	dc03      	bgt.n	8022b4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022b42:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022b44:	2b00      	cmp	r3, #0
 8022b46:	f340 8386 	ble.w	8023256 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022b4a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022b4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022b50:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022b54:	1e48      	subs	r0, r1, #1
 8022b56:	1e57      	subs	r7, r2, #1
 8022b58:	9b07      	ldr	r3, [sp, #28]
 8022b5a:	2b00      	cmp	r3, #0
 8022b5c:	f340 8166 	ble.w	8022e2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8022b60:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022b64:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022b68:	d406      	bmi.n	8022b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022b6a:	4584      	cmp	ip, r0
 8022b6c:	da04      	bge.n	8022b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022b6e:	2b00      	cmp	r3, #0
 8022b70:	db02      	blt.n	8022b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022b72:	42bb      	cmp	r3, r7
 8022b74:	f2c0 815b 	blt.w	8022e2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8022b78:	f11c 0c01 	adds.w	ip, ip, #1
 8022b7c:	f100 814b 	bmi.w	8022e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022b80:	4561      	cmp	r1, ip
 8022b82:	f2c0 8148 	blt.w	8022e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022b86:	3301      	adds	r3, #1
 8022b88:	f100 8145 	bmi.w	8022e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022b8c:	429a      	cmp	r2, r3
 8022b8e:	f2c0 8142 	blt.w	8022e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022b92:	9b07      	ldr	r3, [sp, #28]
 8022b94:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022b96:	9317      	str	r3, [sp, #92]	; 0x5c
 8022b98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022b9a:	2b00      	cmp	r3, #0
 8022b9c:	f340 8165 	ble.w	8022e6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022ba0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8022ba2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022ba4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022ba8:	689b      	ldr	r3, [r3, #8]
 8022baa:	1422      	asrs	r2, r4, #16
 8022bac:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022bb0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8022bb4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022bb8:	f100 81d5 	bmi.w	8022f66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022bbc:	f103 38ff 	add.w	r8, r3, #4294967295
 8022bc0:	4542      	cmp	r2, r8
 8022bc2:	f280 81d0 	bge.w	8022f66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022bc6:	f1bc 0f00 	cmp.w	ip, #0
 8022bca:	f2c0 81cc 	blt.w	8022f66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022bce:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022bd2:	45c4      	cmp	ip, r8
 8022bd4:	f280 81c7 	bge.w	8022f66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022bd8:	b21b      	sxth	r3, r3
 8022bda:	fb0c 2203 	mla	r2, ip, r3, r2
 8022bde:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022be0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022be4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8022be8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8022bec:	2900      	cmp	r1, #0
 8022bee:	f000 8182 	beq.w	8022ef6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8022bf2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022bf6:	950b      	str	r5, [sp, #44]	; 0x2c
 8022bf8:	0e2d      	lsrs	r5, r5, #24
 8022bfa:	9512      	str	r5, [sp, #72]	; 0x48
 8022bfc:	b180      	cbz	r0, 8022c20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022bfe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8022c02:	3b01      	subs	r3, #1
 8022c04:	009b      	lsls	r3, r3, #2
 8022c06:	3304      	adds	r3, #4
 8022c08:	eb08 0c03 	add.w	ip, r8, r3
 8022c0c:	f858 3003 	ldr.w	r3, [r8, r3]
 8022c10:	9308      	str	r3, [sp, #32]
 8022c12:	0e1b      	lsrs	r3, r3, #24
 8022c14:	9310      	str	r3, [sp, #64]	; 0x40
 8022c16:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022c1a:	930c      	str	r3, [sp, #48]	; 0x30
 8022c1c:	0e1b      	lsrs	r3, r3, #24
 8022c1e:	9313      	str	r3, [sp, #76]	; 0x4c
 8022c20:	b289      	uxth	r1, r1
 8022c22:	b280      	uxth	r0, r0
 8022c24:	fb01 f900 	mul.w	r9, r1, r0
 8022c28:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022c2c:	0109      	lsls	r1, r1, #4
 8022c2e:	eba1 0809 	sub.w	r8, r1, r9
 8022c32:	b280      	uxth	r0, r0
 8022c34:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8022c38:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8022c3a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022c3c:	fa1f f888 	uxth.w	r8, r8
 8022c40:	1a09      	subs	r1, r1, r0
 8022c42:	b289      	uxth	r1, r1
 8022c44:	fb08 f303 	mul.w	r3, r8, r3
 8022c48:	fb01 330e 	mla	r3, r1, lr, r3
 8022c4c:	fb00 3305 	mla	r3, r0, r5, r3
 8022c50:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022c52:	fb09 3305 	mla	r3, r9, r5, r3
 8022c56:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022c5a:	2b00      	cmp	r3, #0
 8022c5c:	f000 80d2 	beq.w	8022e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022c60:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022c64:	d01b      	beq.n	8022c9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8022c66:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8022c6a:	fb0e fa0a 	mul.w	sl, lr, sl
 8022c6e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022c72:	fb0e fe02 	mul.w	lr, lr, r2
 8022c76:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8022c7a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022c7e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022c82:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022c86:	4452      	add	r2, sl
 8022c88:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022c8c:	0a12      	lsrs	r2, r2, #8
 8022c8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022c92:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022c96:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022c9a:	ea42 020c 	orr.w	r2, r2, ip
 8022c9e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022ca0:	2dff      	cmp	r5, #255	; 0xff
 8022ca2:	d021      	beq.n	8022ce8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8022ca4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022ca6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022caa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022cac:	fb05 fb0b 	mul.w	fp, r5, fp
 8022cb0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022cb2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022cb6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022cb8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022cbc:	fb05 fa0a 	mul.w	sl, r5, sl
 8022cc0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022cc4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022cc8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022ccc:	44de      	add	lr, fp
 8022cce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022cd2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022cd6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022cda:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022cde:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022ce2:	ea4e 050a 	orr.w	r5, lr, sl
 8022ce6:	950b      	str	r5, [sp, #44]	; 0x2c
 8022ce8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022cea:	2dff      	cmp	r5, #255	; 0xff
 8022cec:	d021      	beq.n	8022d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8022cee:	9d08      	ldr	r5, [sp, #32]
 8022cf0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022cf4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022cf6:	fb05 fb0b 	mul.w	fp, r5, fp
 8022cfa:	9d08      	ldr	r5, [sp, #32]
 8022cfc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022d00:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022d02:	fb05 fa0e 	mul.w	sl, r5, lr
 8022d06:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022d0a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d0e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022d12:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022d16:	44de      	add	lr, fp
 8022d18:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022d1c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022d20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d2c:	ea4e 050a 	orr.w	r5, lr, sl
 8022d30:	9508      	str	r5, [sp, #32]
 8022d32:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022d34:	2dff      	cmp	r5, #255	; 0xff
 8022d36:	d021      	beq.n	8022d7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8022d38:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022d3a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022d3e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022d40:	fb05 fb0b 	mul.w	fp, r5, fp
 8022d44:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022d46:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022d4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022d4c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022d50:	fb05 fa0a 	mul.w	sl, r5, sl
 8022d54:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d58:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022d5c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022d60:	44de      	add	lr, fp
 8022d62:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022d66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022d6a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d72:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d76:	ea4e 050a 	orr.w	r5, lr, sl
 8022d7a:	950c      	str	r5, [sp, #48]	; 0x30
 8022d7c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022d7e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022d82:	9d08      	ldr	r5, [sp, #32]
 8022d84:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8022d88:	fb08 fc0c 	mul.w	ip, r8, ip
 8022d8c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8022d90:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022d94:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022d96:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022d9a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022d9e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022da0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022da4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022da8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022dac:	fb08 f80e 	mul.w	r8, r8, lr
 8022db0:	fb01 8202 	mla	r2, r1, r2, r8
 8022db4:	9908      	ldr	r1, [sp, #32]
 8022db6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022dba:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022dbc:	fb00 220a 	mla	r2, r0, sl, r2
 8022dc0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8022dc4:	fb09 2900 	mla	r9, r9, r0, r2
 8022dc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022dcc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022dd0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022dd4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022dd8:	ea4c 0c09 	orr.w	ip, ip, r9
 8022ddc:	2bff      	cmp	r3, #255	; 0xff
 8022dde:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8022de2:	f040 8091 	bne.w	8022f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022de6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8022dea:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8022dee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022df2:	f022 0207 	bic.w	r2, r2, #7
 8022df6:	431a      	orrs	r2, r3
 8022df8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022dfc:	ea4c 0c02 	orr.w	ip, ip, r2
 8022e00:	f8a7 c000 	strh.w	ip, [r7]
 8022e04:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022e06:	441c      	add	r4, r3
 8022e08:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022e0a:	441e      	add	r6, r3
 8022e0c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022e0e:	3b01      	subs	r3, #1
 8022e10:	3702      	adds	r7, #2
 8022e12:	9317      	str	r3, [sp, #92]	; 0x5c
 8022e14:	e6c0      	b.n	8022b98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022e16:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022e18:	441c      	add	r4, r3
 8022e1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022e1c:	441e      	add	r6, r3
 8022e1e:	9b07      	ldr	r3, [sp, #28]
 8022e20:	3b01      	subs	r3, #1
 8022e22:	9307      	str	r3, [sp, #28]
 8022e24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022e26:	3302      	adds	r3, #2
 8022e28:	930a      	str	r3, [sp, #40]	; 0x28
 8022e2a:	e695      	b.n	8022b58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022e2c:	d024      	beq.n	8022e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022e2e:	9b07      	ldr	r3, [sp, #28]
 8022e30:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022e32:	3b01      	subs	r3, #1
 8022e34:	fb00 4003 	mla	r0, r0, r3, r4
 8022e38:	1400      	asrs	r0, r0, #16
 8022e3a:	f53f aeaa 	bmi.w	8022b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022e3e:	3901      	subs	r1, #1
 8022e40:	4288      	cmp	r0, r1
 8022e42:	f6bf aea6 	bge.w	8022b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022e46:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022e48:	fb01 6303 	mla	r3, r1, r3, r6
 8022e4c:	141b      	asrs	r3, r3, #16
 8022e4e:	f53f aea0 	bmi.w	8022b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022e52:	3a01      	subs	r2, #1
 8022e54:	4293      	cmp	r3, r2
 8022e56:	f6bf ae9c 	bge.w	8022b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022e5a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022e5e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8022e62:	f1bb 0f00 	cmp.w	fp, #0
 8022e66:	f300 809a 	bgt.w	8022f9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8022e6a:	9b07      	ldr	r3, [sp, #28]
 8022e6c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022e70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022e72:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022e76:	930a      	str	r3, [sp, #40]	; 0x28
 8022e78:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022e7a:	2b00      	cmp	r3, #0
 8022e7c:	f340 81eb 	ble.w	8023256 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022e80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022e84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022e88:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022e8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022e92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022e96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022e9a:	eef0 6a62 	vmov.f32	s13, s5
 8022e9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022ea2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ea6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022eaa:	ee16 4a90 	vmov	r4, s13
 8022eae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022eb2:	eef0 6a43 	vmov.f32	s13, s6
 8022eb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022eba:	ee12 2a90 	vmov	r2, s5
 8022ebe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022ec2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ec6:	ee13 2a10 	vmov	r2, s6
 8022eca:	9327      	str	r3, [sp, #156]	; 0x9c
 8022ecc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ece:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ed2:	9328      	str	r3, [sp, #160]	; 0xa0
 8022ed4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022ed6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022ed8:	3b01      	subs	r3, #1
 8022eda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ede:	9316      	str	r3, [sp, #88]	; 0x58
 8022ee0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ee2:	bf08      	it	eq
 8022ee4:	4613      	moveq	r3, r2
 8022ee6:	ee16 6a90 	vmov	r6, s13
 8022eea:	9307      	str	r3, [sp, #28]
 8022eec:	eeb0 3a67 	vmov.f32	s6, s15
 8022ef0:	eef0 2a47 	vmov.f32	s5, s14
 8022ef4:	e622      	b.n	8022b3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8022ef6:	2800      	cmp	r0, #0
 8022ef8:	f43f ae92 	beq.w	8022c20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022efc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8022f00:	9308      	str	r3, [sp, #32]
 8022f02:	0e1b      	lsrs	r3, r3, #24
 8022f04:	9310      	str	r3, [sp, #64]	; 0x40
 8022f06:	e68b      	b.n	8022c20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022f08:	8839      	ldrh	r1, [r7, #0]
 8022f0a:	4dd4      	ldr	r5, [pc, #848]	; (802325c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8022f0c:	43db      	mvns	r3, r3
 8022f0e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8022f12:	fa5f f883 	uxtb.w	r8, r3
 8022f16:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8022f1a:	fb0e fe08 	mul.w	lr, lr, r8
 8022f1e:	10c8      	asrs	r0, r1, #3
 8022f20:	00cb      	lsls	r3, r1, #3
 8022f22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022f26:	f10e 0101 	add.w	r1, lr, #1
 8022f2a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8022f2e:	fb00 f008 	mul.w	r0, r0, r8
 8022f32:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8022f36:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8022f3a:	f100 0e01 	add.w	lr, r0, #1
 8022f3e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8022f42:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022f46:	b2db      	uxtb	r3, r3
 8022f48:	b2c9      	uxtb	r1, r1
 8022f4a:	00d2      	lsls	r2, r2, #3
 8022f4c:	fb03 f308 	mul.w	r3, r3, r8
 8022f50:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8022f54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022f58:	430a      	orrs	r2, r1
 8022f5a:	1c59      	adds	r1, r3, #1
 8022f5c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022f60:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8022f64:	e748      	b.n	8022df8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8022f66:	f112 0801 	adds.w	r8, r2, #1
 8022f6a:	f53f af4b 	bmi.w	8022e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f6e:	4543      	cmp	r3, r8
 8022f70:	f6ff af48 	blt.w	8022e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f74:	f11c 0801 	adds.w	r8, ip, #1
 8022f78:	f53f af44 	bmi.w	8022e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f7c:	45c6      	cmp	lr, r8
 8022f7e:	f6ff af41 	blt.w	8022e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f82:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8022f86:	fa0f f28e 	sxth.w	r2, lr
 8022f8a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8022f8e:	9200      	str	r2, [sp, #0]
 8022f90:	b21b      	sxth	r3, r3
 8022f92:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022f94:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022f96:	4639      	mov	r1, r7
 8022f98:	f7ff fc87 	bl	80228aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8022f9c:	e732      	b.n	8022e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f9e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022fa0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022fa2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8022fa6:	1421      	asrs	r1, r4, #16
 8022fa8:	1433      	asrs	r3, r6, #16
 8022faa:	fb07 1303 	mla	r3, r7, r3, r1
 8022fae:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8022fb0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8022fb4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8022fb8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022fbc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022fc0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022fc4:	2a00      	cmp	r2, #0
 8022fc6:	f000 8107 	beq.w	80231d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8022fca:	684d      	ldr	r5, [r1, #4]
 8022fcc:	950d      	str	r5, [sp, #52]	; 0x34
 8022fce:	0e2d      	lsrs	r5, r5, #24
 8022fd0:	9514      	str	r5, [sp, #80]	; 0x50
 8022fd2:	b178      	cbz	r0, 8022ff4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022fd4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8022fd8:	3f01      	subs	r7, #1
 8022fda:	00bf      	lsls	r7, r7, #2
 8022fdc:	3704      	adds	r7, #4
 8022fde:	eb01 0e07 	add.w	lr, r1, r7
 8022fe2:	59c9      	ldr	r1, [r1, r7]
 8022fe4:	9109      	str	r1, [sp, #36]	; 0x24
 8022fe6:	0e09      	lsrs	r1, r1, #24
 8022fe8:	9111      	str	r1, [sp, #68]	; 0x44
 8022fea:	f8de 1004 	ldr.w	r1, [lr, #4]
 8022fee:	910e      	str	r1, [sp, #56]	; 0x38
 8022ff0:	0e09      	lsrs	r1, r1, #24
 8022ff2:	9115      	str	r1, [sp, #84]	; 0x54
 8022ff4:	b292      	uxth	r2, r2
 8022ff6:	b280      	uxth	r0, r0
 8022ff8:	fb02 f900 	mul.w	r9, r2, r0
 8022ffc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023000:	0112      	lsls	r2, r2, #4
 8023002:	eba2 0e09 	sub.w	lr, r2, r9
 8023006:	b280      	uxth	r0, r0
 8023008:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802300c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802300e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023010:	fa1f fe8e 	uxth.w	lr, lr
 8023014:	1a09      	subs	r1, r1, r0
 8023016:	b289      	uxth	r1, r1
 8023018:	fb0e f202 	mul.w	r2, lr, r2
 802301c:	fb01 220c 	mla	r2, r1, ip, r2
 8023020:	fb00 2205 	mla	r2, r0, r5, r2
 8023024:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023026:	fb09 2205 	mla	r2, r9, r5, r2
 802302a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802302e:	2a00      	cmp	r2, #0
 8023030:	f000 80c9 	beq.w	80231c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8023034:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023038:	d019      	beq.n	802306e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802303a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802303e:	fb0c fa0a 	mul.w	sl, ip, sl
 8023042:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023046:	fb0c fc03 	mul.w	ip, ip, r3
 802304a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802304e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023052:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023056:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802305a:	4453      	add	r3, sl
 802305c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023060:	0a1b      	lsrs	r3, r3, #8
 8023062:	0a3f      	lsrs	r7, r7, #8
 8023064:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023068:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802306c:	433b      	orrs	r3, r7
 802306e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023070:	2dff      	cmp	r5, #255	; 0xff
 8023072:	d020      	beq.n	80230b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8023074:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023076:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802307a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802307c:	436f      	muls	r7, r5
 802307e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023080:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023084:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023086:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802308a:	fb05 fa0a 	mul.w	sl, r5, sl
 802308e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023092:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023096:	44bc      	add	ip, r7
 8023098:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802309c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80230a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80230a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80230ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80230b0:	ea4c 050a 	orr.w	r5, ip, sl
 80230b4:	950d      	str	r5, [sp, #52]	; 0x34
 80230b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80230b8:	2dff      	cmp	r5, #255	; 0xff
 80230ba:	d020      	beq.n	80230fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80230bc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80230be:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80230c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80230c4:	436f      	muls	r7, r5
 80230c6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80230c8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80230cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80230ce:	fb05 fa0c 	mul.w	sl, r5, ip
 80230d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80230d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80230da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80230de:	44bc      	add	ip, r7
 80230e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80230e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80230e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80230ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80230f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80230f8:	ea4c 050a 	orr.w	r5, ip, sl
 80230fc:	9509      	str	r5, [sp, #36]	; 0x24
 80230fe:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023100:	2dff      	cmp	r5, #255	; 0xff
 8023102:	d020      	beq.n	8023146 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8023104:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023106:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802310a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802310c:	436f      	muls	r7, r5
 802310e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023110:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023114:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023116:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802311a:	fb05 fa0a 	mul.w	sl, r5, sl
 802311e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023122:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023126:	44bc      	add	ip, r7
 8023128:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802312c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023130:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023134:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023138:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802313c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023140:	ea4c 050a 	orr.w	r5, ip, sl
 8023144:	950e      	str	r5, [sp, #56]	; 0x38
 8023146:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023148:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802314c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802314e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023152:	fb0e f707 	mul.w	r7, lr, r7
 8023156:	fb01 770c 	mla	r7, r1, ip, r7
 802315a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802315e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023160:	fb00 770c 	mla	r7, r0, ip, r7
 8023164:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023168:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802316a:	fb09 770c 	mla	r7, r9, ip, r7
 802316e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023172:	fb0e fe0c 	mul.w	lr, lr, ip
 8023176:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802317a:	fb01 e303 	mla	r3, r1, r3, lr
 802317e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023180:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023184:	990e      	ldr	r1, [sp, #56]	; 0x38
 8023186:	fb00 330a 	mla	r3, r0, sl, r3
 802318a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802318e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023192:	0a3f      	lsrs	r7, r7, #8
 8023194:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023198:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802319c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80231a0:	ea47 070c 	orr.w	r7, r7, ip
 80231a4:	2aff      	cmp	r2, #255	; 0xff
 80231a6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80231aa:	d11e      	bne.n	80231ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80231ac:	097a      	lsrs	r2, r7, #5
 80231ae:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80231b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80231b6:	f023 0307 	bic.w	r3, r3, #7
 80231ba:	4313      	orrs	r3, r2
 80231bc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80231c0:	431f      	orrs	r7, r3
 80231c2:	f8a8 7000 	strh.w	r7, [r8]
 80231c6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80231c8:	441c      	add	r4, r3
 80231ca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80231cc:	f108 0802 	add.w	r8, r8, #2
 80231d0:	441e      	add	r6, r3
 80231d2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80231d6:	e644      	b.n	8022e62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80231d8:	2800      	cmp	r0, #0
 80231da:	f43f af0b 	beq.w	8022ff4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80231de:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80231e2:	9109      	str	r1, [sp, #36]	; 0x24
 80231e4:	0e09      	lsrs	r1, r1, #24
 80231e6:	9111      	str	r1, [sp, #68]	; 0x44
 80231e8:	e704      	b.n	8022ff4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80231ea:	f8b8 1000 	ldrh.w	r1, [r8]
 80231ee:	43d2      	mvns	r2, r2
 80231f0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80231f4:	fa5f fe82 	uxtb.w	lr, r2
 80231f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80231fc:	fb0c fc0e 	mul.w	ip, ip, lr
 8023200:	10c8      	asrs	r0, r1, #3
 8023202:	00ca      	lsls	r2, r1, #3
 8023204:	f10c 0101 	add.w	r1, ip, #1
 8023208:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802320c:	0c39      	lsrs	r1, r7, #16
 802320e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023212:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023216:	4911      	ldr	r1, [pc, #68]	; (802325c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8023218:	fb00 f00e 	mul.w	r0, r0, lr
 802321c:	fa5f fc8c 	uxtb.w	ip, ip
 8023220:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8023224:	b2d2      	uxtb	r2, r2
 8023226:	1c41      	adds	r1, r0, #1
 8023228:	fb02 f20e 	mul.w	r2, r2, lr
 802322c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023230:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023234:	1c51      	adds	r1, r2, #1
 8023236:	00c0      	lsls	r0, r0, #3
 8023238:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802323c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023240:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023244:	ea4c 0c00 	orr.w	ip, ip, r0
 8023248:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802324c:	ea47 0c0c 	orr.w	ip, r7, ip
 8023250:	f8a8 c000 	strh.w	ip, [r8]
 8023254:	e7b7      	b.n	80231c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8023256:	b01b      	add	sp, #108	; 0x6c
 8023258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802325c:	fffff800 	.word	0xfffff800

08023260 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8023260:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023264:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8023268:	2d00      	cmp	r5, #0
 802326a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802326e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8023272:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8023276:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802327a:	fb05 0e03 	mla	lr, r5, r3, r0
 802327e:	f2c0 808c 	blt.w	802339a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023282:	45a9      	cmp	r9, r5
 8023284:	f340 8089 	ble.w	802339a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023288:	2800      	cmp	r0, #0
 802328a:	f2c0 8084 	blt.w	8023396 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802328e:	4580      	cmp	r8, r0
 8023290:	f340 8081 	ble.w	8023396 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023294:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8023298:	f01e 0f01 	tst.w	lr, #1
 802329c:	5d16      	ldrb	r6, [r2, r4]
 802329e:	bf0c      	ite	eq
 80232a0:	f006 060f 	andeq.w	r6, r6, #15
 80232a4:	1136      	asrne	r6, r6, #4
 80232a6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80232aa:	b2f6      	uxtb	r6, r6
 80232ac:	1c44      	adds	r4, r0, #1
 80232ae:	d477      	bmi.n	80233a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80232b0:	45a0      	cmp	r8, r4
 80232b2:	dd75      	ble.n	80233a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80232b4:	2f00      	cmp	r7, #0
 80232b6:	d075      	beq.n	80233a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80232b8:	f10e 0a01 	add.w	sl, lr, #1
 80232bc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80232c0:	f01a 0f01 	tst.w	sl, #1
 80232c4:	5d14      	ldrb	r4, [r2, r4]
 80232c6:	bf0c      	ite	eq
 80232c8:	f004 040f 	andeq.w	r4, r4, #15
 80232cc:	1124      	asrne	r4, r4, #4
 80232ce:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80232d2:	b2e4      	uxtb	r4, r4
 80232d4:	3501      	adds	r5, #1
 80232d6:	d469      	bmi.n	80233ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80232d8:	45a9      	cmp	r9, r5
 80232da:	dd67      	ble.n	80233ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80232dc:	f1bc 0f00 	cmp.w	ip, #0
 80232e0:	d067      	beq.n	80233b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80232e2:	2800      	cmp	r0, #0
 80232e4:	db60      	blt.n	80233a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80232e6:	4580      	cmp	r8, r0
 80232e8:	dd5e      	ble.n	80233a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80232ea:	eb03 090e 	add.w	r9, r3, lr
 80232ee:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80232f2:	f019 0f01 	tst.w	r9, #1
 80232f6:	5d55      	ldrb	r5, [r2, r5]
 80232f8:	bf0c      	ite	eq
 80232fa:	f005 050f 	andeq.w	r5, r5, #15
 80232fe:	112d      	asrne	r5, r5, #4
 8023300:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8023304:	b2ed      	uxtb	r5, r5
 8023306:	3001      	adds	r0, #1
 8023308:	d456      	bmi.n	80233b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802330a:	4580      	cmp	r8, r0
 802330c:	dd54      	ble.n	80233b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802330e:	2f00      	cmp	r7, #0
 8023310:	d054      	beq.n	80233bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8023312:	3301      	adds	r3, #1
 8023314:	449e      	add	lr, r3
 8023316:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802331a:	f01e 0f01 	tst.w	lr, #1
 802331e:	5cd0      	ldrb	r0, [r2, r3]
 8023320:	bf0c      	ite	eq
 8023322:	f000 000f 	andeq.w	r0, r0, #15
 8023326:	1100      	asrne	r0, r0, #4
 8023328:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802332c:	b2c3      	uxtb	r3, r0
 802332e:	b2ba      	uxth	r2, r7
 8023330:	fa1f fc8c 	uxth.w	ip, ip
 8023334:	fb02 f00c 	mul.w	r0, r2, ip
 8023338:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802333c:	0112      	lsls	r2, r2, #4
 802333e:	fa1f fc8c 	uxth.w	ip, ip
 8023342:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8023346:	1a12      	subs	r2, r2, r0
 8023348:	eba7 070c 	sub.w	r7, r7, ip
 802334c:	b292      	uxth	r2, r2
 802334e:	b2bf      	uxth	r7, r7
 8023350:	4362      	muls	r2, r4
 8023352:	fb06 2207 	mla	r2, r6, r7, r2
 8023356:	fb0c 2505 	mla	r5, ip, r5, r2
 802335a:	fb00 5303 	mla	r3, r0, r3, r5
 802335e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023362:	b1b3      	cbz	r3, 8023392 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8023364:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8023368:	435a      	muls	r2, r3
 802336a:	1c53      	adds	r3, r2, #1
 802336c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023370:	4a2d      	ldr	r2, [pc, #180]	; (8023428 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8023372:	121b      	asrs	r3, r3, #8
 8023374:	6812      	ldr	r2, [r2, #0]
 8023376:	2bff      	cmp	r3, #255	; 0xff
 8023378:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802337c:	d120      	bne.n	80233c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802337e:	4b2b      	ldr	r3, [pc, #172]	; (802342c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8023380:	0950      	lsrs	r0, r2, #5
 8023382:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023386:	4033      	ands	r3, r6
 8023388:	4318      	orrs	r0, r3
 802338a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802338e:	4302      	orrs	r2, r0
 8023390:	800a      	strh	r2, [r1, #0]
 8023392:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023396:	2600      	movs	r6, #0
 8023398:	e788      	b.n	80232ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802339a:	2400      	movs	r4, #0
 802339c:	4626      	mov	r6, r4
 802339e:	e799      	b.n	80232d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80233a0:	2400      	movs	r4, #0
 80233a2:	e797      	b.n	80232d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80233a4:	463c      	mov	r4, r7
 80233a6:	e795      	b.n	80232d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80233a8:	2500      	movs	r5, #0
 80233aa:	e7ac      	b.n	8023306 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80233ac:	2300      	movs	r3, #0
 80233ae:	461d      	mov	r5, r3
 80233b0:	e7bd      	b.n	802332e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80233b2:	4663      	mov	r3, ip
 80233b4:	4665      	mov	r5, ip
 80233b6:	e7ba      	b.n	802332e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80233b8:	2300      	movs	r3, #0
 80233ba:	e7b8      	b.n	802332e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80233bc:	463b      	mov	r3, r7
 80233be:	e7b6      	b.n	802332e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80233c0:	880d      	ldrh	r5, [r1, #0]
 80233c2:	b29f      	uxth	r7, r3
 80233c4:	122c      	asrs	r4, r5, #8
 80233c6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80233ca:	43db      	mvns	r3, r3
 80233cc:	b2db      	uxtb	r3, r3
 80233ce:	fb10 f007 	smulbb	r0, r0, r7
 80233d2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80233d6:	fb04 0403 	mla	r4, r4, r3, r0
 80233da:	b2f6      	uxtb	r6, r6
 80233dc:	10e8      	asrs	r0, r5, #3
 80233de:	b2d2      	uxtb	r2, r2
 80233e0:	00ed      	lsls	r5, r5, #3
 80233e2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80233e6:	fb12 f207 	smulbb	r2, r2, r7
 80233ea:	fb16 f607 	smulbb	r6, r6, r7
 80233ee:	b2ed      	uxtb	r5, r5
 80233f0:	b2a4      	uxth	r4, r4
 80233f2:	fb00 6603 	mla	r6, r0, r3, r6
 80233f6:	fb05 2303 	mla	r3, r5, r3, r2
 80233fa:	b29a      	uxth	r2, r3
 80233fc:	1c63      	adds	r3, r4, #1
 80233fe:	b2b0      	uxth	r0, r6
 8023400:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8023404:	1c53      	adds	r3, r2, #1
 8023406:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802340a:	1c42      	adds	r2, r0, #1
 802340c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023410:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023414:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023418:	0940      	lsrs	r0, r0, #5
 802341a:	4323      	orrs	r3, r4
 802341c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023420:	4303      	orrs	r3, r0
 8023422:	800b      	strh	r3, [r1, #0]
 8023424:	e7b5      	b.n	8023392 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8023426:	bf00      	nop
 8023428:	200137cc 	.word	0x200137cc
 802342c:	00fff800 	.word	0x00fff800

08023430 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023434:	b097      	sub	sp, #92	; 0x5c
 8023436:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802343a:	9214      	str	r2, [sp, #80]	; 0x50
 802343c:	9309      	str	r3, [sp, #36]	; 0x24
 802343e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8023440:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8023444:	910d      	str	r1, [sp, #52]	; 0x34
 8023446:	930f      	str	r3, [sp, #60]	; 0x3c
 8023448:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802344c:	9015      	str	r0, [sp, #84]	; 0x54
 802344e:	6850      	ldr	r0, [r2, #4]
 8023450:	6812      	ldr	r2, [r2, #0]
 8023452:	fb00 1303 	mla	r3, r0, r3, r1
 8023456:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802345a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802345c:	689b      	ldr	r3, [r3, #8]
 802345e:	3301      	adds	r3, #1
 8023460:	f023 0301 	bic.w	r3, r3, #1
 8023464:	930a      	str	r3, [sp, #40]	; 0x28
 8023466:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023468:	681f      	ldr	r7, [r3, #0]
 802346a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802346c:	2b00      	cmp	r3, #0
 802346e:	dc03      	bgt.n	8023478 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023470:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8023472:	2b00      	cmp	r3, #0
 8023474:	f340 8287 	ble.w	8023986 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8023478:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802347a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802347e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023482:	1e48      	subs	r0, r1, #1
 8023484:	f102 3cff 	add.w	ip, r2, #4294967295
 8023488:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802348a:	2b00      	cmp	r3, #0
 802348c:	f340 80c4 	ble.w	8023618 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8023490:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023494:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023498:	d406      	bmi.n	80234a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802349a:	4586      	cmp	lr, r0
 802349c:	da04      	bge.n	80234a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802349e:	2b00      	cmp	r3, #0
 80234a0:	db02      	blt.n	80234a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80234a2:	4563      	cmp	r3, ip
 80234a4:	f2c0 80b9 	blt.w	802361a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80234a8:	f11e 0e01 	adds.w	lr, lr, #1
 80234ac:	f100 80aa 	bmi.w	8023604 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80234b0:	4571      	cmp	r1, lr
 80234b2:	f2c0 80a7 	blt.w	8023604 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80234b6:	3301      	adds	r3, #1
 80234b8:	f100 80a4 	bmi.w	8023604 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80234bc:	429a      	cmp	r2, r3
 80234be:	f2c0 80a1 	blt.w	8023604 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80234c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80234c4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80234c8:	930e      	str	r3, [sp, #56]	; 0x38
 80234ca:	46c8      	mov	r8, r9
 80234cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80234ce:	2b00      	cmp	r3, #0
 80234d0:	f340 80c3 	ble.w	802365a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80234d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80234d6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80234da:	1423      	asrs	r3, r4, #16
 80234dc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80234e0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80234e4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80234e8:	f100 814d 	bmi.w	8023786 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80234ec:	f10c 3bff 	add.w	fp, ip, #4294967295
 80234f0:	455b      	cmp	r3, fp
 80234f2:	f280 8148 	bge.w	8023786 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80234f6:	2800      	cmp	r0, #0
 80234f8:	f2c0 8145 	blt.w	8023786 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80234fc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023500:	4558      	cmp	r0, fp
 8023502:	f280 8140 	bge.w	8023786 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023506:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023508:	fb00 3305 	mla	r3, r0, r5, r3
 802350c:	0858      	lsrs	r0, r3, #1
 802350e:	07dd      	lsls	r5, r3, #31
 8023510:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023514:	bf54      	ite	pl
 8023516:	f00c 0c0f 	andpl.w	ip, ip, #15
 802351a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802351e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023522:	fa5f fc8c 	uxtb.w	ip, ip
 8023526:	2a00      	cmp	r2, #0
 8023528:	f000 80db 	beq.w	80236e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802352c:	1c58      	adds	r0, r3, #1
 802352e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8023532:	07c0      	lsls	r0, r0, #31
 8023534:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023538:	bf54      	ite	pl
 802353a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802353e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8023542:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8023546:	fa5f f08e 	uxtb.w	r0, lr
 802354a:	9010      	str	r0, [sp, #64]	; 0x40
 802354c:	b1c9      	cbz	r1, 8023582 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802354e:	4453      	add	r3, sl
 8023550:	0858      	lsrs	r0, r3, #1
 8023552:	07dd      	lsls	r5, r3, #31
 8023554:	5c38      	ldrb	r0, [r7, r0]
 8023556:	bf54      	ite	pl
 8023558:	f000 000f 	andpl.w	r0, r0, #15
 802355c:	1100      	asrmi	r0, r0, #4
 802355e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8023562:	3301      	adds	r3, #1
 8023564:	b2c0      	uxtb	r0, r0
 8023566:	900b      	str	r0, [sp, #44]	; 0x2c
 8023568:	0858      	lsrs	r0, r3, #1
 802356a:	07dd      	lsls	r5, r3, #31
 802356c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8023570:	bf54      	ite	pl
 8023572:	f00e 030f 	andpl.w	r3, lr, #15
 8023576:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802357a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802357e:	b2db      	uxtb	r3, r3
 8023580:	9311      	str	r3, [sp, #68]	; 0x44
 8023582:	b292      	uxth	r2, r2
 8023584:	b289      	uxth	r1, r1
 8023586:	fb02 f301 	mul.w	r3, r2, r1
 802358a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802358e:	0112      	lsls	r2, r2, #4
 8023590:	b289      	uxth	r1, r1
 8023592:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8023596:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023598:	1ad2      	subs	r2, r2, r3
 802359a:	1a40      	subs	r0, r0, r1
 802359c:	b292      	uxth	r2, r2
 802359e:	436a      	muls	r2, r5
 80235a0:	b280      	uxth	r0, r0
 80235a2:	fb0c 2c00 	mla	ip, ip, r0, r2
 80235a6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80235a8:	fb01 c102 	mla	r1, r1, r2, ip
 80235ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80235ae:	fb03 1302 	mla	r3, r3, r2, r1
 80235b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80235b6:	b1db      	cbz	r3, 80235f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80235b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80235ba:	4353      	muls	r3, r2
 80235bc:	1c5a      	adds	r2, r3, #1
 80235be:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80235c2:	4ac6      	ldr	r2, [pc, #792]	; (80238dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80235c4:	121b      	asrs	r3, r3, #8
 80235c6:	6812      	ldr	r2, [r2, #0]
 80235c8:	2bff      	cmp	r3, #255	; 0xff
 80235ca:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80235ce:	f040 8099 	bne.w	8023704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80235d2:	0953      	lsrs	r3, r2, #5
 80235d4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80235d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80235dc:	f02c 0c07 	bic.w	ip, ip, #7
 80235e0:	ea43 0c0c 	orr.w	ip, r3, ip
 80235e4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80235e8:	ea4c 0202 	orr.w	r2, ip, r2
 80235ec:	f8a8 2000 	strh.w	r2, [r8]
 80235f0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80235f2:	441c      	add	r4, r3
 80235f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80235f6:	441e      	add	r6, r3
 80235f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80235fa:	3b01      	subs	r3, #1
 80235fc:	f108 0802 	add.w	r8, r8, #2
 8023600:	930e      	str	r3, [sp, #56]	; 0x38
 8023602:	e763      	b.n	80234cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8023604:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023606:	441c      	add	r4, r3
 8023608:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802360a:	441e      	add	r6, r3
 802360c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802360e:	3b01      	subs	r3, #1
 8023610:	9309      	str	r3, [sp, #36]	; 0x24
 8023612:	f109 0902 	add.w	r9, r9, #2
 8023616:	e737      	b.n	8023488 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023618:	d024      	beq.n	8023664 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802361a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802361c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802361e:	3b01      	subs	r3, #1
 8023620:	fb00 4003 	mla	r0, r0, r3, r4
 8023624:	1400      	asrs	r0, r0, #16
 8023626:	f53f af4c 	bmi.w	80234c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802362a:	3901      	subs	r1, #1
 802362c:	4288      	cmp	r0, r1
 802362e:	f6bf af48 	bge.w	80234c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023632:	9924      	ldr	r1, [sp, #144]	; 0x90
 8023634:	fb01 6303 	mla	r3, r1, r3, r6
 8023638:	141b      	asrs	r3, r3, #16
 802363a:	f53f af42 	bmi.w	80234c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802363e:	3a01      	subs	r2, #1
 8023640:	4293      	cmp	r3, r2
 8023642:	f6bf af3e 	bge.w	80234c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023646:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802364a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802364e:	930e      	str	r3, [sp, #56]	; 0x38
 8023650:	46c8      	mov	r8, r9
 8023652:	f1bb 0f00 	cmp.w	fp, #0
 8023656:	f300 80b7 	bgt.w	80237c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802365a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802365c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023660:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8023664:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023666:	2b00      	cmp	r3, #0
 8023668:	f340 818d 	ble.w	8023986 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802366c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023670:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023674:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023678:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802367a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802367e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023682:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023686:	eef0 6a62 	vmov.f32	s13, s5
 802368a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802368e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023692:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023696:	ee16 4a90 	vmov	r4, s13
 802369a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802369e:	eef0 6a43 	vmov.f32	s13, s6
 80236a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80236a6:	ee12 2a90 	vmov	r2, s5
 80236aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80236ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80236b2:	ee13 2a10 	vmov	r2, s6
 80236b6:	9323      	str	r3, [sp, #140]	; 0x8c
 80236b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80236be:	9324      	str	r3, [sp, #144]	; 0x90
 80236c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80236c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80236c4:	3b01      	subs	r3, #1
 80236c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80236ca:	930d      	str	r3, [sp, #52]	; 0x34
 80236cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236ce:	bf08      	it	eq
 80236d0:	4613      	moveq	r3, r2
 80236d2:	ee16 6a90 	vmov	r6, s13
 80236d6:	9309      	str	r3, [sp, #36]	; 0x24
 80236d8:	eeb0 3a67 	vmov.f32	s6, s15
 80236dc:	eef0 2a47 	vmov.f32	s5, s14
 80236e0:	e6c3      	b.n	802346a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80236e2:	2900      	cmp	r1, #0
 80236e4:	f43f af4d 	beq.w	8023582 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80236e8:	eb0a 0003 	add.w	r0, sl, r3
 80236ec:	0843      	lsrs	r3, r0, #1
 80236ee:	07c0      	lsls	r0, r0, #31
 80236f0:	5cfb      	ldrb	r3, [r7, r3]
 80236f2:	bf54      	ite	pl
 80236f4:	f003 030f 	andpl.w	r3, r3, #15
 80236f8:	111b      	asrmi	r3, r3, #4
 80236fa:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80236fe:	b2db      	uxtb	r3, r3
 8023700:	930b      	str	r3, [sp, #44]	; 0x2c
 8023702:	e73e      	b.n	8023582 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023704:	f8b8 e000 	ldrh.w	lr, [r8]
 8023708:	fa1f fb83 	uxth.w	fp, r3
 802370c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8023710:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8023714:	43db      	mvns	r3, r3
 8023716:	b2db      	uxtb	r3, r3
 8023718:	fb11 f10b 	smulbb	r1, r1, fp
 802371c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023720:	fb00 1003 	mla	r0, r0, r3, r1
 8023724:	fa5f fc8c 	uxtb.w	ip, ip
 8023728:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802372c:	b2d2      	uxtb	r2, r2
 802372e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023732:	b280      	uxth	r0, r0
 8023734:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023738:	fb1c fc0b 	smulbb	ip, ip, fp
 802373c:	fa5f fe8e 	uxtb.w	lr, lr
 8023740:	fb12 fb0b 	smulbb	fp, r2, fp
 8023744:	fb01 cc03 	mla	ip, r1, r3, ip
 8023748:	fb0e bb03 	mla	fp, lr, r3, fp
 802374c:	1c43      	adds	r3, r0, #1
 802374e:	fa1f fc8c 	uxth.w	ip, ip
 8023752:	fa1f fb8b 	uxth.w	fp, fp
 8023756:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802375a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 802375e:	f10c 0101 	add.w	r1, ip, #1
 8023762:	f10b 0001 	add.w	r0, fp, #1
 8023766:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802376a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802376e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023772:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023776:	4318      	orrs	r0, r3
 8023778:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802377c:	ea40 000c 	orr.w	r0, r0, ip
 8023780:	f8a8 0000 	strh.w	r0, [r8]
 8023784:	e734      	b.n	80235f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023786:	f113 0b01 	adds.w	fp, r3, #1
 802378a:	f53f af31 	bmi.w	80235f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802378e:	45dc      	cmp	ip, fp
 8023790:	f6ff af2e 	blt.w	80235f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023794:	f110 0b01 	adds.w	fp, r0, #1
 8023798:	f53f af2a 	bmi.w	80235f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802379c:	45de      	cmp	lr, fp
 802379e:	f6ff af27 	blt.w	80235f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80237a2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80237a4:	9302      	str	r3, [sp, #8]
 80237a6:	fa0f f38e 	sxth.w	r3, lr
 80237aa:	9301      	str	r3, [sp, #4]
 80237ac:	fa0f f38c 	sxth.w	r3, ip
 80237b0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80237b4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80237b8:	9300      	str	r3, [sp, #0]
 80237ba:	463a      	mov	r2, r7
 80237bc:	4653      	mov	r3, sl
 80237be:	4641      	mov	r1, r8
 80237c0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80237c2:	f7ff fd4d 	bl	8023260 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80237c6:	e713      	b.n	80235f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80237c8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80237ca:	1422      	asrs	r2, r4, #16
 80237cc:	1433      	asrs	r3, r6, #16
 80237ce:	fb05 2303 	mla	r3, r5, r3, r2
 80237d2:	085a      	lsrs	r2, r3, #1
 80237d4:	07dd      	lsls	r5, r3, #31
 80237d6:	5cba      	ldrb	r2, [r7, r2]
 80237d8:	bf54      	ite	pl
 80237da:	f002 020f 	andpl.w	r2, r2, #15
 80237de:	1112      	asrmi	r2, r2, #4
 80237e0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80237e4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80237e8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80237ec:	b2d2      	uxtb	r2, r2
 80237ee:	2900      	cmp	r1, #0
 80237f0:	d076      	beq.n	80238e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80237f2:	f103 0e01 	add.w	lr, r3, #1
 80237f6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80237fa:	f01e 0f01 	tst.w	lr, #1
 80237fe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023802:	bf0c      	ite	eq
 8023804:	f00c 0c0f 	andeq.w	ip, ip, #15
 8023808:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802380c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023810:	fa5f f58c 	uxtb.w	r5, ip
 8023814:	9512      	str	r5, [sp, #72]	; 0x48
 8023816:	b300      	cbz	r0, 802385a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8023818:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802381a:	442b      	add	r3, r5
 802381c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8023820:	07dd      	lsls	r5, r3, #31
 8023822:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023826:	bf54      	ite	pl
 8023828:	f00c 0c0f 	andpl.w	ip, ip, #15
 802382c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023830:	3301      	adds	r3, #1
 8023832:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023836:	fa5f f58c 	uxtb.w	r5, ip
 802383a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802383e:	950c      	str	r5, [sp, #48]	; 0x30
 8023840:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023844:	07dd      	lsls	r5, r3, #31
 8023846:	bf54      	ite	pl
 8023848:	f00c 0c0f 	andpl.w	ip, ip, #15
 802384c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023850:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023854:	fa5f f38c 	uxtb.w	r3, ip
 8023858:	9313      	str	r3, [sp, #76]	; 0x4c
 802385a:	b289      	uxth	r1, r1
 802385c:	b280      	uxth	r0, r0
 802385e:	fb01 f300 	mul.w	r3, r1, r0
 8023862:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8023866:	0109      	lsls	r1, r1, #4
 8023868:	b280      	uxth	r0, r0
 802386a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 802386e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023870:	1ac9      	subs	r1, r1, r3
 8023872:	ebac 0c00 	sub.w	ip, ip, r0
 8023876:	b289      	uxth	r1, r1
 8023878:	4369      	muls	r1, r5
 802387a:	fa1f fc8c 	uxth.w	ip, ip
 802387e:	fb02 120c 	mla	r2, r2, ip, r1
 8023882:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023884:	fb00 2001 	mla	r0, r0, r1, r2
 8023888:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802388a:	fb03 0302 	mla	r3, r3, r2, r0
 802388e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023892:	b1d3      	cbz	r3, 80238ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8023894:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023896:	4353      	muls	r3, r2
 8023898:	1c5a      	adds	r2, r3, #1
 802389a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802389e:	4a0f      	ldr	r2, [pc, #60]	; (80238dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80238a0:	121b      	asrs	r3, r3, #8
 80238a2:	6812      	ldr	r2, [r2, #0]
 80238a4:	2bff      	cmp	r3, #255	; 0xff
 80238a6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80238aa:	d12d      	bne.n	8023908 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80238ac:	0953      	lsrs	r3, r2, #5
 80238ae:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80238b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80238b6:	f02c 0c07 	bic.w	ip, ip, #7
 80238ba:	ea43 0c0c 	orr.w	ip, r3, ip
 80238be:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80238c2:	ea4c 0202 	orr.w	r2, ip, r2
 80238c6:	f8a8 2000 	strh.w	r2, [r8]
 80238ca:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80238cc:	441c      	add	r4, r3
 80238ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80238d0:	f108 0802 	add.w	r8, r8, #2
 80238d4:	441e      	add	r6, r3
 80238d6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80238da:	e6ba      	b.n	8023652 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80238dc:	200137cc 	.word	0x200137cc
 80238e0:	2800      	cmp	r0, #0
 80238e2:	d0ba      	beq.n	802385a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80238e4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80238e6:	442b      	add	r3, r5
 80238e8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80238ec:	07db      	lsls	r3, r3, #31
 80238ee:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80238f2:	bf54      	ite	pl
 80238f4:	f00c 0c0f 	andpl.w	ip, ip, #15
 80238f8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80238fc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023900:	fa5f f38c 	uxtb.w	r3, ip
 8023904:	930c      	str	r3, [sp, #48]	; 0x30
 8023906:	e7a8      	b.n	802385a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8023908:	f8b8 e000 	ldrh.w	lr, [r8]
 802390c:	fa1f fa83 	uxth.w	sl, r3
 8023910:	ea4f 202e 	mov.w	r0, lr, asr #8
 8023914:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8023918:	43db      	mvns	r3, r3
 802391a:	b2db      	uxtb	r3, r3
 802391c:	fb11 f10a 	smulbb	r1, r1, sl
 8023920:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023924:	fb00 1003 	mla	r0, r0, r3, r1
 8023928:	b2d2      	uxtb	r2, r2
 802392a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802392e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023932:	fa5f fe8e 	uxtb.w	lr, lr
 8023936:	fb12 f20a 	smulbb	r2, r2, sl
 802393a:	fb0e 2203 	mla	r2, lr, r3, r2
 802393e:	fa5f fc8c 	uxtb.w	ip, ip
 8023942:	b280      	uxth	r0, r0
 8023944:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023948:	b292      	uxth	r2, r2
 802394a:	fb1c fc0a 	smulbb	ip, ip, sl
 802394e:	fb01 cc03 	mla	ip, r1, r3, ip
 8023952:	1c43      	adds	r3, r0, #1
 8023954:	1c51      	adds	r1, r2, #1
 8023956:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802395a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802395e:	fa1f fc8c 	uxth.w	ip, ip
 8023962:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8023966:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802396a:	4308      	orrs	r0, r1
 802396c:	f10c 0101 	add.w	r1, ip, #1
 8023970:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023974:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023978:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802397c:	ea40 000c 	orr.w	r0, r0, ip
 8023980:	f8a8 0000 	strh.w	r0, [r8]
 8023984:	e7a1      	b.n	80238ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8023986:	b017      	add	sp, #92	; 0x5c
 8023988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802398c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 802398c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023990:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8023994:	2d00      	cmp	r5, #0
 8023996:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802399a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802399e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80239a2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80239a6:	fb05 0e03 	mla	lr, r5, r3, r0
 80239aa:	f2c0 80b0 	blt.w	8023b0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80239ae:	45a9      	cmp	r9, r5
 80239b0:	f340 80ad 	ble.w	8023b0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80239b4:	2800      	cmp	r0, #0
 80239b6:	f2c0 80a8 	blt.w	8023b0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80239ba:	4580      	cmp	r8, r0
 80239bc:	f340 80a5 	ble.w	8023b0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80239c0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80239c4:	f01e 0f01 	tst.w	lr, #1
 80239c8:	5d16      	ldrb	r6, [r2, r4]
 80239ca:	bf0c      	ite	eq
 80239cc:	f006 060f 	andeq.w	r6, r6, #15
 80239d0:	1136      	asrne	r6, r6, #4
 80239d2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80239d6:	b2f6      	uxtb	r6, r6
 80239d8:	1c44      	adds	r4, r0, #1
 80239da:	f100 809b 	bmi.w	8023b14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80239de:	45a0      	cmp	r8, r4
 80239e0:	f340 8098 	ble.w	8023b14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80239e4:	2f00      	cmp	r7, #0
 80239e6:	f000 8097 	beq.w	8023b18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80239ea:	f10e 0a01 	add.w	sl, lr, #1
 80239ee:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80239f2:	f01a 0f01 	tst.w	sl, #1
 80239f6:	5d14      	ldrb	r4, [r2, r4]
 80239f8:	bf0c      	ite	eq
 80239fa:	f004 040f 	andeq.w	r4, r4, #15
 80239fe:	1124      	asrne	r4, r4, #4
 8023a00:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8023a04:	b2e4      	uxtb	r4, r4
 8023a06:	3501      	adds	r5, #1
 8023a08:	f100 808a 	bmi.w	8023b20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8023a0c:	45a9      	cmp	r9, r5
 8023a0e:	f340 8087 	ble.w	8023b20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8023a12:	f1bc 0f00 	cmp.w	ip, #0
 8023a16:	f000 8086 	beq.w	8023b26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8023a1a:	2800      	cmp	r0, #0
 8023a1c:	db7e      	blt.n	8023b1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8023a1e:	4580      	cmp	r8, r0
 8023a20:	dd7c      	ble.n	8023b1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8023a22:	eb03 090e 	add.w	r9, r3, lr
 8023a26:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8023a2a:	f019 0f01 	tst.w	r9, #1
 8023a2e:	5d55      	ldrb	r5, [r2, r5]
 8023a30:	bf0c      	ite	eq
 8023a32:	f005 050f 	andeq.w	r5, r5, #15
 8023a36:	112d      	asrne	r5, r5, #4
 8023a38:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8023a3c:	b2ed      	uxtb	r5, r5
 8023a3e:	3001      	adds	r0, #1
 8023a40:	d474      	bmi.n	8023b2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8023a42:	4580      	cmp	r8, r0
 8023a44:	dd72      	ble.n	8023b2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8023a46:	2f00      	cmp	r7, #0
 8023a48:	d072      	beq.n	8023b30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8023a4a:	3301      	adds	r3, #1
 8023a4c:	449e      	add	lr, r3
 8023a4e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8023a52:	f01e 0f01 	tst.w	lr, #1
 8023a56:	5cd0      	ldrb	r0, [r2, r3]
 8023a58:	bf0c      	ite	eq
 8023a5a:	f000 000f 	andeq.w	r0, r0, #15
 8023a5e:	1100      	asrne	r0, r0, #4
 8023a60:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8023a64:	b2c3      	uxtb	r3, r0
 8023a66:	b2ba      	uxth	r2, r7
 8023a68:	fa1f fc8c 	uxth.w	ip, ip
 8023a6c:	fb02 f00c 	mul.w	r0, r2, ip
 8023a70:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8023a74:	0112      	lsls	r2, r2, #4
 8023a76:	fa1f fc8c 	uxth.w	ip, ip
 8023a7a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8023a7e:	1a12      	subs	r2, r2, r0
 8023a80:	eba7 070c 	sub.w	r7, r7, ip
 8023a84:	b292      	uxth	r2, r2
 8023a86:	b2bf      	uxth	r7, r7
 8023a88:	4362      	muls	r2, r4
 8023a8a:	fb06 2207 	mla	r2, r6, r7, r2
 8023a8e:	fb0c 2505 	mla	r5, ip, r5, r2
 8023a92:	fb00 5303 	mla	r3, r0, r3, r5
 8023a96:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023a9a:	b3a3      	cbz	r3, 8023b06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8023a9c:	4a25      	ldr	r2, [pc, #148]	; (8023b34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8023a9e:	880e      	ldrh	r6, [r1, #0]
 8023aa0:	6815      	ldr	r5, [r2, #0]
 8023aa2:	1234      	asrs	r4, r6, #8
 8023aa4:	b29a      	uxth	r2, r3
 8023aa6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8023aaa:	43db      	mvns	r3, r3
 8023aac:	b2db      	uxtb	r3, r3
 8023aae:	fb10 f002 	smulbb	r0, r0, r2
 8023ab2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023ab6:	fb04 0403 	mla	r4, r4, r3, r0
 8023aba:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8023abe:	10f0      	asrs	r0, r6, #3
 8023ac0:	b2ed      	uxtb	r5, r5
 8023ac2:	00f6      	lsls	r6, r6, #3
 8023ac4:	fb17 f702 	smulbb	r7, r7, r2
 8023ac8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023acc:	fb15 f202 	smulbb	r2, r5, r2
 8023ad0:	b2f6      	uxtb	r6, r6
 8023ad2:	b2a4      	uxth	r4, r4
 8023ad4:	fb00 7003 	mla	r0, r0, r3, r7
 8023ad8:	fb06 2303 	mla	r3, r6, r3, r2
 8023adc:	b29a      	uxth	r2, r3
 8023ade:	1c63      	adds	r3, r4, #1
 8023ae0:	b280      	uxth	r0, r0
 8023ae2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8023ae6:	1c53      	adds	r3, r2, #1
 8023ae8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023aec:	1c42      	adds	r2, r0, #1
 8023aee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023af2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023af6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023afa:	0940      	lsrs	r0, r0, #5
 8023afc:	4323      	orrs	r3, r4
 8023afe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023b02:	4303      	orrs	r3, r0
 8023b04:	800b      	strh	r3, [r1, #0]
 8023b06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023b0a:	2600      	movs	r6, #0
 8023b0c:	e764      	b.n	80239d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8023b0e:	2400      	movs	r4, #0
 8023b10:	4626      	mov	r6, r4
 8023b12:	e778      	b.n	8023a06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023b14:	2400      	movs	r4, #0
 8023b16:	e776      	b.n	8023a06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023b18:	463c      	mov	r4, r7
 8023b1a:	e774      	b.n	8023a06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023b1c:	2500      	movs	r5, #0
 8023b1e:	e78e      	b.n	8023a3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8023b20:	2300      	movs	r3, #0
 8023b22:	461d      	mov	r5, r3
 8023b24:	e79f      	b.n	8023a66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023b26:	4663      	mov	r3, ip
 8023b28:	4665      	mov	r5, ip
 8023b2a:	e79c      	b.n	8023a66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023b2c:	2300      	movs	r3, #0
 8023b2e:	e79a      	b.n	8023a66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023b30:	463b      	mov	r3, r7
 8023b32:	e798      	b.n	8023a66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023b34:	200137cc 	.word	0x200137cc

08023b38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b3c:	b093      	sub	sp, #76	; 0x4c
 8023b3e:	461d      	mov	r5, r3
 8023b40:	920c      	str	r2, [sp, #48]	; 0x30
 8023b42:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023b44:	9107      	str	r1, [sp, #28]
 8023b46:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023b4a:	9011      	str	r0, [sp, #68]	; 0x44
 8023b4c:	6850      	ldr	r0, [r2, #4]
 8023b4e:	6812      	ldr	r2, [r2, #0]
 8023b50:	fb00 1303 	mla	r3, r0, r3, r1
 8023b54:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8023b58:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b5a:	689b      	ldr	r3, [r3, #8]
 8023b5c:	3301      	adds	r3, #1
 8023b5e:	f023 0301 	bic.w	r3, r3, #1
 8023b62:	9306      	str	r3, [sp, #24]
 8023b64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b66:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023b6a:	681f      	ldr	r7, [r3, #0]
 8023b6c:	9b07      	ldr	r3, [sp, #28]
 8023b6e:	2b00      	cmp	r3, #0
 8023b70:	dc03      	bgt.n	8023b7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8023b72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023b74:	2b00      	cmp	r3, #0
 8023b76:	f340 8267 	ble.w	8024048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8023b7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b80:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023b84:	1e48      	subs	r0, r1, #1
 8023b86:	f102 3cff 	add.w	ip, r2, #4294967295
 8023b8a:	2d00      	cmp	r5, #0
 8023b8c:	f340 80b8 	ble.w	8023d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023b90:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023b94:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023b98:	d406      	bmi.n	8023ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023b9a:	4586      	cmp	lr, r0
 8023b9c:	da04      	bge.n	8023ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023b9e:	2b00      	cmp	r3, #0
 8023ba0:	db02      	blt.n	8023ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023ba2:	4563      	cmp	r3, ip
 8023ba4:	f2c0 80ad 	blt.w	8023d02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8023ba8:	f11e 0e01 	adds.w	lr, lr, #1
 8023bac:	f100 80a0 	bmi.w	8023cf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023bb0:	4571      	cmp	r1, lr
 8023bb2:	f2c0 809d 	blt.w	8023cf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023bb6:	3301      	adds	r3, #1
 8023bb8:	f100 809a 	bmi.w	8023cf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023bbc:	429a      	cmp	r2, r3
 8023bbe:	f2c0 8097 	blt.w	8023cf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023bc2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8023bc6:	9509      	str	r5, [sp, #36]	; 0x24
 8023bc8:	46c8      	mov	r8, r9
 8023bca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023bcc:	2b00      	cmp	r3, #0
 8023bce:	f340 80b6 	ble.w	8023d3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8023bd2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8023bd6:	9308      	str	r3, [sp, #32]
 8023bd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023bda:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8023bde:	1423      	asrs	r3, r4, #16
 8023be0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023be4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023be8:	f100 813e 	bmi.w	8023e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023bec:	f10c 3bff 	add.w	fp, ip, #4294967295
 8023bf0:	455b      	cmp	r3, fp
 8023bf2:	f280 8139 	bge.w	8023e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023bf6:	2800      	cmp	r0, #0
 8023bf8:	f2c0 8136 	blt.w	8023e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023bfc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023c00:	4558      	cmp	r0, fp
 8023c02:	f280 8131 	bge.w	8023e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023c06:	9a06      	ldr	r2, [sp, #24]
 8023c08:	fb00 3302 	mla	r3, r0, r2, r3
 8023c0c:	0858      	lsrs	r0, r3, #1
 8023c0e:	07da      	lsls	r2, r3, #31
 8023c10:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023c14:	9a08      	ldr	r2, [sp, #32]
 8023c16:	bf54      	ite	pl
 8023c18:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023c1c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023c20:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023c24:	fa5f fc8c 	uxtb.w	ip, ip
 8023c28:	2a00      	cmp	r2, #0
 8023c2a:	f000 80cb 	beq.w	8023dc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8023c2e:	1c58      	adds	r0, r3, #1
 8023c30:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8023c34:	07c0      	lsls	r0, r0, #31
 8023c36:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023c3a:	bf54      	ite	pl
 8023c3c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8023c40:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8023c44:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8023c48:	fa5f fe8e 	uxtb.w	lr, lr
 8023c4c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8023c50:	b1b9      	cbz	r1, 8023c82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023c52:	4453      	add	r3, sl
 8023c54:	0858      	lsrs	r0, r3, #1
 8023c56:	07da      	lsls	r2, r3, #31
 8023c58:	5c38      	ldrb	r0, [r7, r0]
 8023c5a:	bf54      	ite	pl
 8023c5c:	f000 000f 	andpl.w	r0, r0, #15
 8023c60:	1100      	asrmi	r0, r0, #4
 8023c62:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8023c66:	b2c0      	uxtb	r0, r0
 8023c68:	900a      	str	r0, [sp, #40]	; 0x28
 8023c6a:	1c58      	adds	r0, r3, #1
 8023c6c:	0843      	lsrs	r3, r0, #1
 8023c6e:	07c2      	lsls	r2, r0, #31
 8023c70:	5cfb      	ldrb	r3, [r7, r3]
 8023c72:	bf54      	ite	pl
 8023c74:	f003 030f 	andpl.w	r3, r3, #15
 8023c78:	111b      	asrmi	r3, r3, #4
 8023c7a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023c7e:	b2db      	uxtb	r3, r3
 8023c80:	930e      	str	r3, [sp, #56]	; 0x38
 8023c82:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8023c86:	b289      	uxth	r1, r1
 8023c88:	fb02 f301 	mul.w	r3, r2, r1
 8023c8c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8023c90:	0112      	lsls	r2, r2, #4
 8023c92:	b289      	uxth	r1, r1
 8023c94:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8023c98:	1a40      	subs	r0, r0, r1
 8023c9a:	fa1f fe80 	uxth.w	lr, r0
 8023c9e:	1ad2      	subs	r2, r2, r3
 8023ca0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023ca2:	b292      	uxth	r2, r2
 8023ca4:	4342      	muls	r2, r0
 8023ca6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8023caa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023cac:	fb01 c102 	mla	r1, r1, r2, ip
 8023cb0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023cb2:	fb03 1302 	mla	r3, r3, r2, r1
 8023cb6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023cba:	2bff      	cmp	r3, #255	; 0xff
 8023cbc:	f040 8093 	bne.w	8023de6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023cc0:	4bbe      	ldr	r3, [pc, #760]	; (8023fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023cc2:	681a      	ldr	r2, [r3, #0]
 8023cc4:	4bbe      	ldr	r3, [pc, #760]	; (8023fc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023cc6:	0951      	lsrs	r1, r2, #5
 8023cc8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8023ccc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023cd0:	430b      	orrs	r3, r1
 8023cd2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023cd6:	4313      	orrs	r3, r2
 8023cd8:	f8a8 3000 	strh.w	r3, [r8]
 8023cdc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023cde:	441c      	add	r4, r3
 8023ce0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ce2:	441e      	add	r6, r3
 8023ce4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023ce6:	3b01      	subs	r3, #1
 8023ce8:	f108 0802 	add.w	r8, r8, #2
 8023cec:	9309      	str	r3, [sp, #36]	; 0x24
 8023cee:	e76c      	b.n	8023bca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023cf0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023cf2:	441c      	add	r4, r3
 8023cf4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023cf6:	3d01      	subs	r5, #1
 8023cf8:	441e      	add	r6, r3
 8023cfa:	f109 0902 	add.w	r9, r9, #2
 8023cfe:	e744      	b.n	8023b8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8023d00:	d021      	beq.n	8023d46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023d02:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023d04:	1e6b      	subs	r3, r5, #1
 8023d06:	fb00 4003 	mla	r0, r0, r3, r4
 8023d0a:	1400      	asrs	r0, r0, #16
 8023d0c:	f53f af59 	bmi.w	8023bc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023d10:	3901      	subs	r1, #1
 8023d12:	4288      	cmp	r0, r1
 8023d14:	f6bf af55 	bge.w	8023bc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023d18:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023d1a:	fb01 6303 	mla	r3, r1, r3, r6
 8023d1e:	141b      	asrs	r3, r3, #16
 8023d20:	f53f af4f 	bmi.w	8023bc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023d24:	3a01      	subs	r2, #1
 8023d26:	4293      	cmp	r3, r2
 8023d28:	f6bf af4b 	bge.w	8023bc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023d2c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8023d30:	9308      	str	r3, [sp, #32]
 8023d32:	46a8      	mov	r8, r5
 8023d34:	46ce      	mov	lr, r9
 8023d36:	f1b8 0f00 	cmp.w	r8, #0
 8023d3a:	f300 80b5 	bgt.w	8023ea8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023d3e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023d42:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8023d46:	9b07      	ldr	r3, [sp, #28]
 8023d48:	2b00      	cmp	r3, #0
 8023d4a:	f340 817d 	ble.w	8024048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8023d4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023d52:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023d56:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023d5a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023d60:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023d64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023d68:	eef0 6a62 	vmov.f32	s13, s5
 8023d6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023d70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023d74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023d78:	ee16 4a90 	vmov	r4, s13
 8023d7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023d80:	eef0 6a43 	vmov.f32	s13, s6
 8023d84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023d88:	ee12 2a90 	vmov	r2, s5
 8023d8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023d90:	fb92 f3f3 	sdiv	r3, r2, r3
 8023d94:	ee13 2a10 	vmov	r2, s6
 8023d98:	931f      	str	r3, [sp, #124]	; 0x7c
 8023d9a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023da0:	9320      	str	r3, [sp, #128]	; 0x80
 8023da2:	9b07      	ldr	r3, [sp, #28]
 8023da4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023da6:	3b01      	subs	r3, #1
 8023da8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023dac:	9307      	str	r3, [sp, #28]
 8023dae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023db0:	ee16 6a90 	vmov	r6, s13
 8023db4:	bf14      	ite	ne
 8023db6:	461d      	movne	r5, r3
 8023db8:	4615      	moveq	r5, r2
 8023dba:	eeb0 3a67 	vmov.f32	s6, s15
 8023dbe:	eef0 2a47 	vmov.f32	s5, s14
 8023dc2:	e6d3      	b.n	8023b6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8023dc4:	2900      	cmp	r1, #0
 8023dc6:	f43f af5c 	beq.w	8023c82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023dca:	eb0a 0003 	add.w	r0, sl, r3
 8023dce:	0843      	lsrs	r3, r0, #1
 8023dd0:	07c0      	lsls	r0, r0, #31
 8023dd2:	5cfb      	ldrb	r3, [r7, r3]
 8023dd4:	bf54      	ite	pl
 8023dd6:	f003 030f 	andpl.w	r3, r3, #15
 8023dda:	111b      	asrmi	r3, r3, #4
 8023ddc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023de0:	b2db      	uxtb	r3, r3
 8023de2:	930a      	str	r3, [sp, #40]	; 0x28
 8023de4:	e74d      	b.n	8023c82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023de6:	2b00      	cmp	r3, #0
 8023de8:	f43f af78 	beq.w	8023cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023dec:	4a73      	ldr	r2, [pc, #460]	; (8023fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023dee:	f8b8 c000 	ldrh.w	ip, [r8]
 8023df2:	6810      	ldr	r0, [r2, #0]
 8023df4:	fa1f fe83 	uxth.w	lr, r3
 8023df8:	ea4f 212c 	mov.w	r1, ip, asr #8
 8023dfc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023e00:	43db      	mvns	r3, r3
 8023e02:	b2db      	uxtb	r3, r3
 8023e04:	fb12 f20e 	smulbb	r2, r2, lr
 8023e08:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023e0c:	fb01 2103 	mla	r1, r1, r3, r2
 8023e10:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023e14:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023e18:	b2c0      	uxtb	r0, r0
 8023e1a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023e1e:	fb1b fb0e 	smulbb	fp, fp, lr
 8023e22:	b289      	uxth	r1, r1
 8023e24:	fb10 fe0e 	smulbb	lr, r0, lr
 8023e28:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023e2c:	fa5f fc8c 	uxtb.w	ip, ip
 8023e30:	fb02 b203 	mla	r2, r2, r3, fp
 8023e34:	1c48      	adds	r0, r1, #1
 8023e36:	fb0c e303 	mla	r3, ip, r3, lr
 8023e3a:	b292      	uxth	r2, r2
 8023e3c:	b29b      	uxth	r3, r3
 8023e3e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8023e42:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8023e46:	f102 0b01 	add.w	fp, r2, #1
 8023e4a:	1c59      	adds	r1, r3, #1
 8023e4c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023e50:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8023e54:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8023e58:	0952      	lsrs	r2, r2, #5
 8023e5a:	4301      	orrs	r1, r0
 8023e5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023e60:	4311      	orrs	r1, r2
 8023e62:	f8a8 1000 	strh.w	r1, [r8]
 8023e66:	e739      	b.n	8023cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e68:	f113 0b01 	adds.w	fp, r3, #1
 8023e6c:	f53f af36 	bmi.w	8023cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e70:	45dc      	cmp	ip, fp
 8023e72:	f6ff af33 	blt.w	8023cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e76:	f110 0b01 	adds.w	fp, r0, #1
 8023e7a:	f53f af2f 	bmi.w	8023cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e7e:	45de      	cmp	lr, fp
 8023e80:	f6ff af2c 	blt.w	8023cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023e84:	9a08      	ldr	r2, [sp, #32]
 8023e86:	9302      	str	r3, [sp, #8]
 8023e88:	fa0f f38e 	sxth.w	r3, lr
 8023e8c:	9301      	str	r3, [sp, #4]
 8023e8e:	fa0f f38c 	sxth.w	r3, ip
 8023e92:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8023e96:	9105      	str	r1, [sp, #20]
 8023e98:	9300      	str	r3, [sp, #0]
 8023e9a:	463a      	mov	r2, r7
 8023e9c:	4653      	mov	r3, sl
 8023e9e:	4641      	mov	r1, r8
 8023ea0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023ea2:	f7ff fd73 	bl	802398c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8023ea6:	e719      	b.n	8023cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023ea8:	9906      	ldr	r1, [sp, #24]
 8023eaa:	1422      	asrs	r2, r4, #16
 8023eac:	1433      	asrs	r3, r6, #16
 8023eae:	fb01 2303 	mla	r3, r1, r3, r2
 8023eb2:	085a      	lsrs	r2, r3, #1
 8023eb4:	07d9      	lsls	r1, r3, #31
 8023eb6:	5cba      	ldrb	r2, [r7, r2]
 8023eb8:	bf54      	ite	pl
 8023eba:	f002 020f 	andpl.w	r2, r2, #15
 8023ebe:	1112      	asrmi	r2, r2, #4
 8023ec0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023ec4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023ec8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023ecc:	b2d2      	uxtb	r2, r2
 8023ece:	2800      	cmp	r0, #0
 8023ed0:	d062      	beq.n	8023f98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8023ed2:	f103 0a01 	add.w	sl, r3, #1
 8023ed6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8023eda:	f01a 0f01 	tst.w	sl, #1
 8023ede:	5c79      	ldrb	r1, [r7, r1]
 8023ee0:	bf0c      	ite	eq
 8023ee2:	f001 010f 	andeq.w	r1, r1, #15
 8023ee6:	1109      	asrne	r1, r1, #4
 8023ee8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023eec:	b2c9      	uxtb	r1, r1
 8023eee:	910f      	str	r1, [sp, #60]	; 0x3c
 8023ef0:	f1bc 0f00 	cmp.w	ip, #0
 8023ef4:	d019      	beq.n	8023f2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023ef6:	9908      	ldr	r1, [sp, #32]
 8023ef8:	440b      	add	r3, r1
 8023efa:	0859      	lsrs	r1, r3, #1
 8023efc:	f013 0f01 	tst.w	r3, #1
 8023f00:	5c79      	ldrb	r1, [r7, r1]
 8023f02:	bf0c      	ite	eq
 8023f04:	f001 010f 	andeq.w	r1, r1, #15
 8023f08:	1109      	asrne	r1, r1, #4
 8023f0a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023f0e:	b2c9      	uxtb	r1, r1
 8023f10:	3301      	adds	r3, #1
 8023f12:	910b      	str	r1, [sp, #44]	; 0x2c
 8023f14:	0859      	lsrs	r1, r3, #1
 8023f16:	07db      	lsls	r3, r3, #31
 8023f18:	5c79      	ldrb	r1, [r7, r1]
 8023f1a:	bf54      	ite	pl
 8023f1c:	f001 010f 	andpl.w	r1, r1, #15
 8023f20:	1109      	asrmi	r1, r1, #4
 8023f22:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023f26:	b2c9      	uxtb	r1, r1
 8023f28:	9110      	str	r1, [sp, #64]	; 0x40
 8023f2a:	b280      	uxth	r0, r0
 8023f2c:	fa1f fc8c 	uxth.w	ip, ip
 8023f30:	fb00 f30c 	mul.w	r3, r0, ip
 8023f34:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8023f38:	0100      	lsls	r0, r0, #4
 8023f3a:	fa1f fc8c 	uxth.w	ip, ip
 8023f3e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8023f42:	eba1 010c 	sub.w	r1, r1, ip
 8023f46:	fa1f fa81 	uxth.w	sl, r1
 8023f4a:	1ac0      	subs	r0, r0, r3
 8023f4c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8023f4e:	b280      	uxth	r0, r0
 8023f50:	4348      	muls	r0, r1
 8023f52:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8023f54:	fb02 020a 	mla	r2, r2, sl, r0
 8023f58:	fb0c 2c01 	mla	ip, ip, r1, r2
 8023f5c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023f5e:	fb03 c302 	mla	r3, r3, r2, ip
 8023f62:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023f66:	2bff      	cmp	r3, #255	; 0xff
 8023f68:	d12c      	bne.n	8023fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8023f6a:	4b14      	ldr	r3, [pc, #80]	; (8023fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023f6c:	681a      	ldr	r2, [r3, #0]
 8023f6e:	4b14      	ldr	r3, [pc, #80]	; (8023fc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023f70:	0951      	lsrs	r1, r2, #5
 8023f72:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8023f76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023f7a:	430b      	orrs	r3, r1
 8023f7c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023f80:	4313      	orrs	r3, r2
 8023f82:	f8ae 3000 	strh.w	r3, [lr]
 8023f86:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023f88:	441c      	add	r4, r3
 8023f8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023f8c:	f10e 0e02 	add.w	lr, lr, #2
 8023f90:	441e      	add	r6, r3
 8023f92:	f108 38ff 	add.w	r8, r8, #4294967295
 8023f96:	e6ce      	b.n	8023d36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8023f98:	f1bc 0f00 	cmp.w	ip, #0
 8023f9c:	d0c5      	beq.n	8023f2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023f9e:	9908      	ldr	r1, [sp, #32]
 8023fa0:	440b      	add	r3, r1
 8023fa2:	0859      	lsrs	r1, r3, #1
 8023fa4:	07db      	lsls	r3, r3, #31
 8023fa6:	5c79      	ldrb	r1, [r7, r1]
 8023fa8:	bf54      	ite	pl
 8023faa:	f001 010f 	andpl.w	r1, r1, #15
 8023fae:	1109      	asrmi	r1, r1, #4
 8023fb0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023fb4:	b2c9      	uxtb	r1, r1
 8023fb6:	910b      	str	r1, [sp, #44]	; 0x2c
 8023fb8:	e7b7      	b.n	8023f2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023fba:	bf00      	nop
 8023fbc:	200137cc 	.word	0x200137cc
 8023fc0:	fffff800 	.word	0xfffff800
 8023fc4:	2b00      	cmp	r3, #0
 8023fc6:	d0de      	beq.n	8023f86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023fc8:	4a21      	ldr	r2, [pc, #132]	; (8024050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8023fca:	f8be c000 	ldrh.w	ip, [lr]
 8023fce:	6810      	ldr	r0, [r2, #0]
 8023fd0:	fa1f fa83 	uxth.w	sl, r3
 8023fd4:	ea4f 212c 	mov.w	r1, ip, asr #8
 8023fd8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023fdc:	43db      	mvns	r3, r3
 8023fde:	b2db      	uxtb	r3, r3
 8023fe0:	fb12 f20a 	smulbb	r2, r2, sl
 8023fe4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023fe8:	fb01 2103 	mla	r1, r1, r3, r2
 8023fec:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023ff0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023ff4:	b2c0      	uxtb	r0, r0
 8023ff6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023ffa:	fa5f fc8c 	uxtb.w	ip, ip
 8023ffe:	fb10 f00a 	smulbb	r0, r0, sl
 8024002:	fb0c 0003 	mla	r0, ip, r3, r0
 8024006:	b289      	uxth	r1, r1
 8024008:	fb1b fb0a 	smulbb	fp, fp, sl
 802400c:	b280      	uxth	r0, r0
 802400e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024012:	fb02 b203 	mla	r2, r2, r3, fp
 8024016:	1c4b      	adds	r3, r1, #1
 8024018:	f100 0b01 	add.w	fp, r0, #1
 802401c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024020:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8024024:	b292      	uxth	r2, r2
 8024026:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802402a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802402e:	ea4b 0101 	orr.w	r1, fp, r1
 8024032:	f102 0b01 	add.w	fp, r2, #1
 8024036:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802403a:	0952      	lsrs	r2, r2, #5
 802403c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024040:	4311      	orrs	r1, r2
 8024042:	f8ae 1000 	strh.w	r1, [lr]
 8024046:	e79e      	b.n	8023f86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024048:	b013      	add	sp, #76	; 0x4c
 802404a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802404e:	bf00      	nop
 8024050:	200137cc 	.word	0x200137cc

08024054 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8024054:	b570      	push	{r4, r5, r6, lr}
 8024056:	1208      	asrs	r0, r1, #8
 8024058:	b29e      	uxth	r6, r3
 802405a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802405e:	1213      	asrs	r3, r2, #8
 8024060:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024064:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024068:	fb13 f305 	smulbb	r3, r3, r5
 802406c:	fb10 f006 	smulbb	r0, r0, r6
 8024070:	4418      	add	r0, r3
 8024072:	10cc      	asrs	r4, r1, #3
 8024074:	10d3      	asrs	r3, r2, #3
 8024076:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802407a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802407e:	fb13 f305 	smulbb	r3, r3, r5
 8024082:	fb14 f406 	smulbb	r4, r4, r6
 8024086:	00c9      	lsls	r1, r1, #3
 8024088:	00d2      	lsls	r2, r2, #3
 802408a:	441c      	add	r4, r3
 802408c:	b2d2      	uxtb	r2, r2
 802408e:	b2cb      	uxtb	r3, r1
 8024090:	fb12 f205 	smulbb	r2, r2, r5
 8024094:	b280      	uxth	r0, r0
 8024096:	fb13 f306 	smulbb	r3, r3, r6
 802409a:	4413      	add	r3, r2
 802409c:	1c42      	adds	r2, r0, #1
 802409e:	b29b      	uxth	r3, r3
 80240a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80240a4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80240a8:	1c58      	adds	r0, r3, #1
 80240aa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80240ae:	b2a4      	uxth	r4, r4
 80240b0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80240b4:	4310      	orrs	r0, r2
 80240b6:	1c62      	adds	r2, r4, #1
 80240b8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80240bc:	0964      	lsrs	r4, r4, #5
 80240be:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80240c2:	4320      	orrs	r0, r4
 80240c4:	bd70      	pop	{r4, r5, r6, pc}
	...

080240c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80240c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240cc:	b08f      	sub	sp, #60	; 0x3c
 80240ce:	461c      	mov	r4, r3
 80240d0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80240d4:	9004      	str	r0, [sp, #16]
 80240d6:	460d      	mov	r5, r1
 80240d8:	4616      	mov	r6, r2
 80240da:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80240dc:	2f00      	cmp	r7, #0
 80240de:	f000 80f6 	beq.w	80242ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80240e2:	6820      	ldr	r0, [r4, #0]
 80240e4:	6861      	ldr	r1, [r4, #4]
 80240e6:	aa0a      	add	r2, sp, #40	; 0x28
 80240e8:	c203      	stmia	r2!, {r0, r1}
 80240ea:	6818      	ldr	r0, [r3, #0]
 80240ec:	6859      	ldr	r1, [r3, #4]
 80240ee:	aa0c      	add	r2, sp, #48	; 0x30
 80240f0:	c203      	stmia	r2!, {r0, r1}
 80240f2:	a80a      	add	r0, sp, #40	; 0x28
 80240f4:	f7ef fc90 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80240f8:	4621      	mov	r1, r4
 80240fa:	a80c      	add	r0, sp, #48	; 0x30
 80240fc:	f7ef fcd0 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024100:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8024104:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8024108:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802410c:	f002 0301 	and.w	r3, r2, #1
 8024110:	9306      	str	r3, [sp, #24]
 8024112:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024116:	f003 0101 	and.w	r1, r3, #1
 802411a:	9105      	str	r1, [sp, #20]
 802411c:	9805      	ldr	r0, [sp, #20]
 802411e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8024122:	4403      	add	r3, r0
 8024124:	fb01 2303 	mla	r3, r1, r3, r2
 8024128:	f04f 0802 	mov.w	r8, #2
 802412c:	fb93 f3f8 	sdiv	r3, r3, r8
 8024130:	441d      	add	r5, r3
 8024132:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8024136:	441a      	add	r2, r3
 8024138:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802413c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8024140:	4419      	add	r1, r3
 8024142:	4b64      	ldr	r3, [pc, #400]	; (80242d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8024144:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8024148:	6818      	ldr	r0, [r3, #0]
 802414a:	6803      	ldr	r3, [r0, #0]
 802414c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802414e:	4798      	blx	r3
 8024150:	4a61      	ldr	r2, [pc, #388]	; (80242d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8024152:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8024156:	8813      	ldrh	r3, [r2, #0]
 8024158:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 802415c:	2fff      	cmp	r7, #255	; 0xff
 802415e:	fb03 a404 	mla	r4, r3, r4, sl
 8024162:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024166:	f106 0604 	add.w	r6, r6, #4
 802416a:	4611      	mov	r1, r2
 802416c:	fb03 fb0b 	mul.w	fp, r3, fp
 8024170:	d06b      	beq.n	802424a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8024172:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8024176:	9303      	str	r3, [sp, #12]
 8024178:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802417c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8024180:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8024184:	9b07      	ldr	r3, [sp, #28]
 8024186:	42a3      	cmp	r3, r4
 8024188:	f240 809c 	bls.w	80242c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802418c:	9b06      	ldr	r3, [sp, #24]
 802418e:	2b00      	cmp	r3, #0
 8024190:	d039      	beq.n	8024206 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8024192:	782b      	ldrb	r3, [r5, #0]
 8024194:	8822      	ldrh	r2, [r4, #0]
 8024196:	9804      	ldr	r0, [sp, #16]
 8024198:	f003 030f 	and.w	r3, r3, #15
 802419c:	f105 0801 	add.w	r8, r5, #1
 80241a0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80241a4:	9b03      	ldr	r3, [sp, #12]
 80241a6:	9300      	str	r3, [sp, #0]
 80241a8:	463b      	mov	r3, r7
 80241aa:	f7ff ff53 	bl	8024054 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80241ae:	f824 0b02 	strh.w	r0, [r4], #2
 80241b2:	f109 3bff 	add.w	fp, r9, #4294967295
 80241b6:	f1bb 0f01 	cmp.w	fp, #1
 80241ba:	46a2      	mov	sl, r4
 80241bc:	f104 0404 	add.w	r4, r4, #4
 80241c0:	dd24      	ble.n	802420c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80241c2:	f898 3000 	ldrb.w	r3, [r8]
 80241c6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80241ca:	9804      	ldr	r0, [sp, #16]
 80241cc:	091b      	lsrs	r3, r3, #4
 80241ce:	f1ab 0b02 	sub.w	fp, fp, #2
 80241d2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80241d6:	9b03      	ldr	r3, [sp, #12]
 80241d8:	9300      	str	r3, [sp, #0]
 80241da:	463b      	mov	r3, r7
 80241dc:	f7ff ff3a 	bl	8024054 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80241e0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80241e4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80241e8:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80241ec:	9804      	ldr	r0, [sp, #16]
 80241ee:	f003 030f 	and.w	r3, r3, #15
 80241f2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80241f6:	9b03      	ldr	r3, [sp, #12]
 80241f8:	9300      	str	r3, [sp, #0]
 80241fa:	463b      	mov	r3, r7
 80241fc:	f7ff ff2a 	bl	8024054 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024200:	f824 0c02 	strh.w	r0, [r4, #-2]
 8024204:	e7d7      	b.n	80241b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8024206:	46a8      	mov	r8, r5
 8024208:	46cb      	mov	fp, r9
 802420a:	e7d4      	b.n	80241b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802420c:	d10e      	bne.n	802422c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802420e:	f898 3000 	ldrb.w	r3, [r8]
 8024212:	f8ba 2000 	ldrh.w	r2, [sl]
 8024216:	9804      	ldr	r0, [sp, #16]
 8024218:	091b      	lsrs	r3, r3, #4
 802421a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802421e:	9b03      	ldr	r3, [sp, #12]
 8024220:	9300      	str	r3, [sp, #0]
 8024222:	463b      	mov	r3, r7
 8024224:	f7ff ff16 	bl	8024054 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024228:	f82a 0b02 	strh.w	r0, [sl], #2
 802422c:	9b08      	ldr	r3, [sp, #32]
 802422e:	9a05      	ldr	r2, [sp, #20]
 8024230:	881c      	ldrh	r4, [r3, #0]
 8024232:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024236:	eba4 0409 	sub.w	r4, r4, r9
 802423a:	4413      	add	r3, r2
 802423c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8024240:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024242:	fb93 f3f2 	sdiv	r3, r3, r2
 8024246:	441d      	add	r5, r3
 8024248:	e79c      	b.n	8024184 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802424a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802424e:	45a3      	cmp	fp, r4
 8024250:	d938      	bls.n	80242c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8024252:	9b06      	ldr	r3, [sp, #24]
 8024254:	b1f3      	cbz	r3, 8024294 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8024256:	782b      	ldrb	r3, [r5, #0]
 8024258:	f003 030f 	and.w	r3, r3, #15
 802425c:	1c6a      	adds	r2, r5, #1
 802425e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024262:	8023      	strh	r3, [r4, #0]
 8024264:	f109 30ff 	add.w	r0, r9, #4294967295
 8024268:	3402      	adds	r4, #2
 802426a:	2801      	cmp	r0, #1
 802426c:	4623      	mov	r3, r4
 802426e:	f104 0404 	add.w	r4, r4, #4
 8024272:	dd12      	ble.n	802429a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8024274:	7813      	ldrb	r3, [r2, #0]
 8024276:	091b      	lsrs	r3, r3, #4
 8024278:	3802      	subs	r0, #2
 802427a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802427e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8024282:	f812 3b01 	ldrb.w	r3, [r2], #1
 8024286:	f003 030f 	and.w	r3, r3, #15
 802428a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802428e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8024292:	e7ea      	b.n	802426a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8024294:	462a      	mov	r2, r5
 8024296:	4648      	mov	r0, r9
 8024298:	e7e7      	b.n	802426a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802429a:	d106      	bne.n	80242aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 802429c:	7812      	ldrb	r2, [r2, #0]
 802429e:	0912      	lsrs	r2, r2, #4
 80242a0:	3302      	adds	r3, #2
 80242a2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80242a6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80242aa:	880c      	ldrh	r4, [r1, #0]
 80242ac:	9a05      	ldr	r2, [sp, #20]
 80242ae:	eba4 0409 	sub.w	r4, r4, r9
 80242b2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80242b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80242ba:	4413      	add	r3, r2
 80242bc:	fb93 f3f8 	sdiv	r3, r3, r8
 80242c0:	441d      	add	r5, r3
 80242c2:	e7c4      	b.n	802424e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80242c4:	4b03      	ldr	r3, [pc, #12]	; (80242d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80242c6:	6818      	ldr	r0, [r3, #0]
 80242c8:	6803      	ldr	r3, [r0, #0]
 80242ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80242cc:	4798      	blx	r3
 80242ce:	b00f      	add	sp, #60	; 0x3c
 80242d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80242d4:	200137bc 	.word	0x200137bc
 80242d8:	200137b6 	.word	0x200137b6

080242dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80242dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80242de:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80242e2:	2dff      	cmp	r5, #255	; 0xff
 80242e4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80242e8:	d10c      	bne.n	8024304 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80242ea:	2bff      	cmp	r3, #255	; 0xff
 80242ec:	d10a      	bne.n	8024304 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80242ee:	4b25      	ldr	r3, [pc, #148]	; (8024384 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80242f0:	0948      	lsrs	r0, r1, #5
 80242f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80242f6:	403b      	ands	r3, r7
 80242f8:	4318      	orrs	r0, r3
 80242fa:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80242fe:	4308      	orrs	r0, r1
 8024300:	b280      	uxth	r0, r0
 8024302:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024304:	fb15 f503 	smulbb	r5, r5, r3
 8024308:	b2ab      	uxth	r3, r5
 802430a:	1c5d      	adds	r5, r3, #1
 802430c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8024310:	1214      	asrs	r4, r2, #8
 8024312:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8024316:	fa1f fc85 	uxth.w	ip, r5
 802431a:	10d6      	asrs	r6, r2, #3
 802431c:	00d0      	lsls	r0, r2, #3
 802431e:	43ed      	mvns	r5, r5
 8024320:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024324:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8024328:	b2eb      	uxtb	r3, r5
 802432a:	b2c0      	uxtb	r0, r0
 802432c:	fb12 f20c 	smulbb	r2, r2, ip
 8024330:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8024334:	fb04 2403 	mla	r4, r4, r3, r2
 8024338:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802433c:	b2c8      	uxtb	r0, r1
 802433e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024342:	b2fd      	uxtb	r5, r7
 8024344:	fb10 f00c 	smulbb	r0, r0, ip
 8024348:	b2a4      	uxth	r4, r4
 802434a:	fb02 0003 	mla	r0, r2, r3, r0
 802434e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8024352:	fb15 f50c 	smulbb	r5, r5, ip
 8024356:	fb06 5503 	mla	r5, r6, r3, r5
 802435a:	b283      	uxth	r3, r0
 802435c:	1c60      	adds	r0, r4, #1
 802435e:	b2ad      	uxth	r5, r5
 8024360:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8024364:	1c58      	adds	r0, r3, #1
 8024366:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802436a:	1c6b      	adds	r3, r5, #1
 802436c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024370:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024374:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024378:	096d      	lsrs	r5, r5, #5
 802437a:	4320      	orrs	r0, r4
 802437c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024380:	4328      	orrs	r0, r5
 8024382:	e7be      	b.n	8024302 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8024384:	00fff800 	.word	0x00fff800

08024388 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8024388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802438c:	461c      	mov	r4, r3
 802438e:	b08d      	sub	sp, #52	; 0x34
 8024390:	460d      	mov	r5, r1
 8024392:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024394:	6861      	ldr	r1, [r4, #4]
 8024396:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802439a:	4680      	mov	r8, r0
 802439c:	6820      	ldr	r0, [r4, #0]
 802439e:	4616      	mov	r6, r2
 80243a0:	aa08      	add	r2, sp, #32
 80243a2:	c203      	stmia	r2!, {r0, r1}
 80243a4:	6818      	ldr	r0, [r3, #0]
 80243a6:	6859      	ldr	r1, [r3, #4]
 80243a8:	aa0a      	add	r2, sp, #40	; 0x28
 80243aa:	c203      	stmia	r2!, {r0, r1}
 80243ac:	a808      	add	r0, sp, #32
 80243ae:	f7ef fb33 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80243b2:	4621      	mov	r1, r4
 80243b4:	a80a      	add	r0, sp, #40	; 0x28
 80243b6:	f7ef fb73 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80243ba:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80243be:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80243c2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80243c6:	f002 0301 	and.w	r3, r2, #1
 80243ca:	9303      	str	r3, [sp, #12]
 80243cc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80243d0:	f003 0101 	and.w	r1, r3, #1
 80243d4:	9102      	str	r1, [sp, #8]
 80243d6:	9802      	ldr	r0, [sp, #8]
 80243d8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80243dc:	4403      	add	r3, r0
 80243de:	fb01 2303 	mla	r3, r1, r3, r2
 80243e2:	f04f 0a02 	mov.w	sl, #2
 80243e6:	fb93 f3fa 	sdiv	r3, r3, sl
 80243ea:	441d      	add	r5, r3
 80243ec:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80243f0:	441a      	add	r2, r3
 80243f2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80243f6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80243fa:	4a3f      	ldr	r2, [pc, #252]	; (80244f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80243fc:	9205      	str	r2, [sp, #20]
 80243fe:	4419      	add	r1, r3
 8024400:	6810      	ldr	r0, [r2, #0]
 8024402:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8024406:	6803      	ldr	r3, [r0, #0]
 8024408:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802440a:	4798      	blx	r3
 802440c:	4b3b      	ldr	r3, [pc, #236]	; (80244fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802440e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8024412:	8819      	ldrh	r1, [r3, #0]
 8024414:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8024418:	fb01 c404 	mla	r4, r1, r4, ip
 802441c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024420:	434f      	muls	r7, r1
 8024422:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8024426:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802442a:	3604      	adds	r6, #4
 802442c:	9204      	str	r2, [sp, #16]
 802442e:	9b04      	ldr	r3, [sp, #16]
 8024430:	429c      	cmp	r4, r3
 8024432:	d258      	bcs.n	80244e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8024434:	9b03      	ldr	r3, [sp, #12]
 8024436:	2b00      	cmp	r3, #0
 8024438:	d034      	beq.n	80244a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802443a:	782b      	ldrb	r3, [r5, #0]
 802443c:	f003 030f 	and.w	r3, r3, #15
 8024440:	1c6f      	adds	r7, r5, #1
 8024442:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8024446:	0e0b      	lsrs	r3, r1, #24
 8024448:	d006      	beq.n	8024458 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802444a:	8822      	ldrh	r2, [r4, #0]
 802444c:	9300      	str	r3, [sp, #0]
 802444e:	4640      	mov	r0, r8
 8024450:	464b      	mov	r3, r9
 8024452:	f7ff ff43 	bl	80242dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8024456:	8020      	strh	r0, [r4, #0]
 8024458:	3402      	adds	r4, #2
 802445a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802445e:	f1ba 0f01 	cmp.w	sl, #1
 8024462:	dd22      	ble.n	80244aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8024464:	783b      	ldrb	r3, [r7, #0]
 8024466:	091b      	lsrs	r3, r3, #4
 8024468:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802446c:	0e0b      	lsrs	r3, r1, #24
 802446e:	d006      	beq.n	802447e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8024470:	8822      	ldrh	r2, [r4, #0]
 8024472:	9300      	str	r3, [sp, #0]
 8024474:	4640      	mov	r0, r8
 8024476:	464b      	mov	r3, r9
 8024478:	f7ff ff30 	bl	80242dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802447c:	8020      	strh	r0, [r4, #0]
 802447e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8024482:	f003 030f 	and.w	r3, r3, #15
 8024486:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802448a:	0e0b      	lsrs	r3, r1, #24
 802448c:	d006      	beq.n	802449c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802448e:	8862      	ldrh	r2, [r4, #2]
 8024490:	9300      	str	r3, [sp, #0]
 8024492:	4640      	mov	r0, r8
 8024494:	464b      	mov	r3, r9
 8024496:	f7ff ff21 	bl	80242dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802449a:	8060      	strh	r0, [r4, #2]
 802449c:	3404      	adds	r4, #4
 802449e:	f1aa 0a02 	sub.w	sl, sl, #2
 80244a2:	e7dc      	b.n	802445e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80244a4:	462f      	mov	r7, r5
 80244a6:	46da      	mov	sl, fp
 80244a8:	e7d9      	b.n	802445e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80244aa:	d10d      	bne.n	80244c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80244ac:	783b      	ldrb	r3, [r7, #0]
 80244ae:	091b      	lsrs	r3, r3, #4
 80244b0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80244b4:	0e0b      	lsrs	r3, r1, #24
 80244b6:	d006      	beq.n	80244c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80244b8:	8822      	ldrh	r2, [r4, #0]
 80244ba:	9300      	str	r3, [sp, #0]
 80244bc:	4640      	mov	r0, r8
 80244be:	464b      	mov	r3, r9
 80244c0:	f7ff ff0c 	bl	80242dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80244c4:	8020      	strh	r0, [r4, #0]
 80244c6:	3402      	adds	r4, #2
 80244c8:	9b06      	ldr	r3, [sp, #24]
 80244ca:	9a02      	ldr	r2, [sp, #8]
 80244cc:	881b      	ldrh	r3, [r3, #0]
 80244ce:	eba3 030b 	sub.w	r3, r3, fp
 80244d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80244d6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80244da:	4413      	add	r3, r2
 80244dc:	9a07      	ldr	r2, [sp, #28]
 80244de:	fb93 f3f2 	sdiv	r3, r3, r2
 80244e2:	441d      	add	r5, r3
 80244e4:	e7a3      	b.n	802442e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80244e6:	9b05      	ldr	r3, [sp, #20]
 80244e8:	6818      	ldr	r0, [r3, #0]
 80244ea:	6803      	ldr	r3, [r0, #0]
 80244ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80244ee:	4798      	blx	r3
 80244f0:	b00d      	add	sp, #52	; 0x34
 80244f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244f6:	bf00      	nop
 80244f8:	200137bc 	.word	0x200137bc
 80244fc:	200137b6 	.word	0x200137b6

08024500 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8024500:	b570      	push	{r4, r5, r6, lr}
 8024502:	1214      	asrs	r4, r2, #8
 8024504:	788d      	ldrb	r5, [r1, #2]
 8024506:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802450a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802450e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8024512:	fb15 f503 	smulbb	r5, r5, r3
 8024516:	fb04 5506 	mla	r5, r4, r6, r5
 802451a:	10d0      	asrs	r0, r2, #3
 802451c:	784c      	ldrb	r4, [r1, #1]
 802451e:	7809      	ldrb	r1, [r1, #0]
 8024520:	00d2      	lsls	r2, r2, #3
 8024522:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024526:	b2d2      	uxtb	r2, r2
 8024528:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802452c:	fb14 f403 	smulbb	r4, r4, r3
 8024530:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8024534:	fb11 f303 	smulbb	r3, r1, r3
 8024538:	fb00 4406 	mla	r4, r0, r6, r4
 802453c:	fb02 3306 	mla	r3, r2, r6, r3
 8024540:	b2ad      	uxth	r5, r5
 8024542:	b29b      	uxth	r3, r3
 8024544:	b2a4      	uxth	r4, r4
 8024546:	1c68      	adds	r0, r5, #1
 8024548:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802454c:	1c62      	adds	r2, r4, #1
 802454e:	1c58      	adds	r0, r3, #1
 8024550:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024554:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8024558:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802455c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024560:	0964      	lsrs	r4, r4, #5
 8024562:	4328      	orrs	r0, r5
 8024564:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8024568:	4320      	orrs	r0, r4
 802456a:	bd70      	pop	{r4, r5, r6, pc}

0802456c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802456c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024570:	b08f      	sub	sp, #60	; 0x3c
 8024572:	461c      	mov	r4, r3
 8024574:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8024578:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802457a:	4682      	mov	sl, r0
 802457c:	460e      	mov	r6, r1
 802457e:	4615      	mov	r5, r2
 8024580:	2f00      	cmp	r7, #0
 8024582:	f000 8142 	beq.w	802480a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8024586:	6820      	ldr	r0, [r4, #0]
 8024588:	6861      	ldr	r1, [r4, #4]
 802458a:	aa0a      	add	r2, sp, #40	; 0x28
 802458c:	c203      	stmia	r2!, {r0, r1}
 802458e:	6818      	ldr	r0, [r3, #0]
 8024590:	6859      	ldr	r1, [r3, #4]
 8024592:	aa0c      	add	r2, sp, #48	; 0x30
 8024594:	c203      	stmia	r2!, {r0, r1}
 8024596:	a80a      	add	r0, sp, #40	; 0x28
 8024598:	f7ef fa3e 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802459c:	4621      	mov	r1, r4
 802459e:	a80c      	add	r0, sp, #48	; 0x30
 80245a0:	f7ef fa7e 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80245a4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80245a8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80245ac:	f002 0301 	and.w	r3, r2, #1
 80245b0:	9306      	str	r3, [sp, #24]
 80245b2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80245b6:	f003 0101 	and.w	r1, r3, #1
 80245ba:	9105      	str	r1, [sp, #20]
 80245bc:	9805      	ldr	r0, [sp, #20]
 80245be:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80245c2:	4403      	add	r3, r0
 80245c4:	fb01 2303 	mla	r3, r1, r3, r2
 80245c8:	f04f 0802 	mov.w	r8, #2
 80245cc:	fb93 f3f8 	sdiv	r3, r3, r8
 80245d0:	441e      	add	r6, r3
 80245d2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80245d6:	441a      	add	r2, r3
 80245d8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80245dc:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80245e0:	4419      	add	r1, r3
 80245e2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80245e6:	9303      	str	r3, [sp, #12]
 80245e8:	4b89      	ldr	r3, [pc, #548]	; (8024810 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80245ea:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80245ee:	6818      	ldr	r0, [r3, #0]
 80245f0:	6803      	ldr	r3, [r0, #0]
 80245f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80245f4:	4798      	blx	r3
 80245f6:	4a87      	ldr	r2, [pc, #540]	; (8024814 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80245f8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80245fc:	8813      	ldrh	r3, [r2, #0]
 80245fe:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8024602:	2fff      	cmp	r7, #255	; 0xff
 8024604:	fb03 9404 	mla	r4, r3, r4, r9
 8024608:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802460c:	f105 0504 	add.w	r5, r5, #4
 8024610:	4694      	mov	ip, r2
 8024612:	fb03 f30b 	mul.w	r3, r3, fp
 8024616:	d071      	beq.n	80246fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8024618:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802461c:	43f9      	mvns	r1, r7
 802461e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8024622:	b2c9      	uxtb	r1, r1
 8024624:	9104      	str	r1, [sp, #16]
 8024626:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802462a:	9b07      	ldr	r3, [sp, #28]
 802462c:	42a3      	cmp	r3, r4
 802462e:	f240 80e7 	bls.w	8024800 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8024632:	9b06      	ldr	r3, [sp, #24]
 8024634:	2b00      	cmp	r3, #0
 8024636:	d03d      	beq.n	80246b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8024638:	7831      	ldrb	r1, [r6, #0]
 802463a:	9b04      	ldr	r3, [sp, #16]
 802463c:	8822      	ldrh	r2, [r4, #0]
 802463e:	9300      	str	r3, [sp, #0]
 8024640:	f001 010f 	and.w	r1, r1, #15
 8024644:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024648:	463b      	mov	r3, r7
 802464a:	4429      	add	r1, r5
 802464c:	4650      	mov	r0, sl
 802464e:	f7ff ff57 	bl	8024500 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8024652:	9b03      	ldr	r3, [sp, #12]
 8024654:	f824 0b02 	strh.w	r0, [r4], #2
 8024658:	f106 0801 	add.w	r8, r6, #1
 802465c:	f103 3bff 	add.w	fp, r3, #4294967295
 8024660:	f1bb 0f01 	cmp.w	fp, #1
 8024664:	46a1      	mov	r9, r4
 8024666:	f104 0404 	add.w	r4, r4, #4
 802466a:	dd27      	ble.n	80246bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 802466c:	f898 1000 	ldrb.w	r1, [r8]
 8024670:	9b04      	ldr	r3, [sp, #16]
 8024672:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8024676:	9300      	str	r3, [sp, #0]
 8024678:	0909      	lsrs	r1, r1, #4
 802467a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802467e:	463b      	mov	r3, r7
 8024680:	4429      	add	r1, r5
 8024682:	4650      	mov	r0, sl
 8024684:	f7ff ff3c 	bl	8024500 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8024688:	f824 0c04 	strh.w	r0, [r4, #-4]
 802468c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8024690:	9b04      	ldr	r3, [sp, #16]
 8024692:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8024696:	9300      	str	r3, [sp, #0]
 8024698:	f001 010f 	and.w	r1, r1, #15
 802469c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80246a0:	463b      	mov	r3, r7
 80246a2:	4429      	add	r1, r5
 80246a4:	4650      	mov	r0, sl
 80246a6:	f7ff ff2b 	bl	8024500 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80246aa:	f1ab 0b02 	sub.w	fp, fp, #2
 80246ae:	f824 0c02 	strh.w	r0, [r4, #-2]
 80246b2:	e7d5      	b.n	8024660 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80246b4:	46b0      	mov	r8, r6
 80246b6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80246ba:	e7d1      	b.n	8024660 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80246bc:	d10f      	bne.n	80246de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80246be:	f898 1000 	ldrb.w	r1, [r8]
 80246c2:	9b04      	ldr	r3, [sp, #16]
 80246c4:	f8b9 2000 	ldrh.w	r2, [r9]
 80246c8:	9300      	str	r3, [sp, #0]
 80246ca:	0909      	lsrs	r1, r1, #4
 80246cc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80246d0:	463b      	mov	r3, r7
 80246d2:	4429      	add	r1, r5
 80246d4:	4650      	mov	r0, sl
 80246d6:	f7ff ff13 	bl	8024500 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80246da:	f829 0b02 	strh.w	r0, [r9], #2
 80246de:	9b08      	ldr	r3, [sp, #32]
 80246e0:	9a05      	ldr	r2, [sp, #20]
 80246e2:	881c      	ldrh	r4, [r3, #0]
 80246e4:	9b03      	ldr	r3, [sp, #12]
 80246e6:	1ae4      	subs	r4, r4, r3
 80246e8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80246ec:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80246f0:	4413      	add	r3, r2
 80246f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80246f4:	fb93 f3f2 	sdiv	r3, r3, r2
 80246f8:	441e      	add	r6, r3
 80246fa:	e796      	b.n	802462a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80246fc:	4f46      	ldr	r7, [pc, #280]	; (8024818 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80246fe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024702:	42a3      	cmp	r3, r4
 8024704:	d97c      	bls.n	8024800 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8024706:	9a06      	ldr	r2, [sp, #24]
 8024708:	2a00      	cmp	r2, #0
 802470a:	d054      	beq.n	80247b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802470c:	7830      	ldrb	r0, [r6, #0]
 802470e:	f000 000f 	and.w	r0, r0, #15
 8024712:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024716:	eb05 0e00 	add.w	lr, r5, r0
 802471a:	5c28      	ldrb	r0, [r5, r0]
 802471c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8024720:	f89e e001 	ldrb.w	lr, [lr, #1]
 8024724:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024728:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802472c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8024730:	ea42 020e 	orr.w	r2, r2, lr
 8024734:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8024738:	f824 2b02 	strh.w	r2, [r4], #2
 802473c:	9a03      	ldr	r2, [sp, #12]
 802473e:	1c71      	adds	r1, r6, #1
 8024740:	f102 3eff 	add.w	lr, r2, #4294967295
 8024744:	f1be 0f01 	cmp.w	lr, #1
 8024748:	4620      	mov	r0, r4
 802474a:	f104 0404 	add.w	r4, r4, #4
 802474e:	dd36      	ble.n	80247be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8024750:	7808      	ldrb	r0, [r1, #0]
 8024752:	0900      	lsrs	r0, r0, #4
 8024754:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024758:	eb05 0a00 	add.w	sl, r5, r0
 802475c:	f1ae 0e02 	sub.w	lr, lr, #2
 8024760:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8024764:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8024768:	00d2      	lsls	r2, r2, #3
 802476a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802476e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024772:	ea49 0202 	orr.w	r2, r9, r2
 8024776:	f815 9000 	ldrb.w	r9, [r5, r0]
 802477a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802477e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8024782:	f811 0b01 	ldrb.w	r0, [r1], #1
 8024786:	f000 000f 	and.w	r0, r0, #15
 802478a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802478e:	eb05 0a00 	add.w	sl, r5, r0
 8024792:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8024796:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802479a:	00d2      	lsls	r2, r2, #3
 802479c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80247a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80247a4:	ea49 0202 	orr.w	r2, r9, r2
 80247a8:	f815 9000 	ldrb.w	r9, [r5, r0]
 80247ac:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80247b0:	f824 2c02 	strh.w	r2, [r4, #-2]
 80247b4:	e7c6      	b.n	8024744 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80247b6:	4631      	mov	r1, r6
 80247b8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80247bc:	e7c2      	b.n	8024744 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80247be:	d111      	bne.n	80247e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80247c0:	7809      	ldrb	r1, [r1, #0]
 80247c2:	0909      	lsrs	r1, r1, #4
 80247c4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80247c8:	186c      	adds	r4, r5, r1
 80247ca:	5c69      	ldrb	r1, [r5, r1]
 80247cc:	78a2      	ldrb	r2, [r4, #2]
 80247ce:	7864      	ldrb	r4, [r4, #1]
 80247d0:	00e4      	lsls	r4, r4, #3
 80247d2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80247d6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80247da:	4322      	orrs	r2, r4
 80247dc:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80247e0:	f820 2b02 	strh.w	r2, [r0], #2
 80247e4:	9a03      	ldr	r2, [sp, #12]
 80247e6:	f8bc 4000 	ldrh.w	r4, [ip]
 80247ea:	9905      	ldr	r1, [sp, #20]
 80247ec:	1aa4      	subs	r4, r4, r2
 80247ee:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80247f2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80247f6:	440a      	add	r2, r1
 80247f8:	fb92 f2f8 	sdiv	r2, r2, r8
 80247fc:	4416      	add	r6, r2
 80247fe:	e780      	b.n	8024702 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8024800:	4b03      	ldr	r3, [pc, #12]	; (8024810 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8024802:	6818      	ldr	r0, [r3, #0]
 8024804:	6803      	ldr	r3, [r0, #0]
 8024806:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024808:	4798      	blx	r3
 802480a:	b00f      	add	sp, #60	; 0x3c
 802480c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024810:	200137bc 	.word	0x200137bc
 8024814:	200137b6 	.word	0x200137b6
 8024818:	fffff800 	.word	0xfffff800

0802481c <CRC_Lock>:
 802481c:	b530      	push	{r4, r5, lr}
 802481e:	4a20      	ldr	r2, [pc, #128]	; (80248a0 <CRC_Lock+0x84>)
 8024820:	6813      	ldr	r3, [r2, #0]
 8024822:	f023 0301 	bic.w	r3, r3, #1
 8024826:	6013      	str	r3, [r2, #0]
 8024828:	4b1e      	ldr	r3, [pc, #120]	; (80248a4 <CRC_Lock+0x88>)
 802482a:	681a      	ldr	r2, [r3, #0]
 802482c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8024830:	4022      	ands	r2, r4
 8024832:	f24c 2540 	movw	r5, #49728	; 0xc240
 8024836:	42aa      	cmp	r2, r5
 8024838:	d005      	beq.n	8024846 <CRC_Lock+0x2a>
 802483a:	681b      	ldr	r3, [r3, #0]
 802483c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8024840:	4023      	ands	r3, r4
 8024842:	4293      	cmp	r3, r2
 8024844:	d124      	bne.n	8024890 <CRC_Lock+0x74>
 8024846:	4b18      	ldr	r3, [pc, #96]	; (80248a8 <CRC_Lock+0x8c>)
 8024848:	681b      	ldr	r3, [r3, #0]
 802484a:	bb0b      	cbnz	r3, 8024890 <CRC_Lock+0x74>
 802484c:	4b17      	ldr	r3, [pc, #92]	; (80248ac <CRC_Lock+0x90>)
 802484e:	681a      	ldr	r2, [r3, #0]
 8024850:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8024854:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8024858:	d00d      	beq.n	8024876 <CRC_Lock+0x5a>
 802485a:	681a      	ldr	r2, [r3, #0]
 802485c:	f240 4483 	movw	r4, #1155	; 0x483
 8024860:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8024864:	42a2      	cmp	r2, r4
 8024866:	d006      	beq.n	8024876 <CRC_Lock+0x5a>
 8024868:	681b      	ldr	r3, [r3, #0]
 802486a:	f240 4285 	movw	r2, #1157	; 0x485
 802486e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8024872:	4293      	cmp	r3, r2
 8024874:	d10c      	bne.n	8024890 <CRC_Lock+0x74>
 8024876:	4b0e      	ldr	r3, [pc, #56]	; (80248b0 <CRC_Lock+0x94>)
 8024878:	2201      	movs	r2, #1
 802487a:	601a      	str	r2, [r3, #0]
 802487c:	681a      	ldr	r2, [r3, #0]
 802487e:	2a00      	cmp	r2, #0
 8024880:	d1fc      	bne.n	802487c <CRC_Lock+0x60>
 8024882:	4b0c      	ldr	r3, [pc, #48]	; (80248b4 <CRC_Lock+0x98>)
 8024884:	6018      	str	r0, [r3, #0]
 8024886:	6818      	ldr	r0, [r3, #0]
 8024888:	1a43      	subs	r3, r0, r1
 802488a:	4258      	negs	r0, r3
 802488c:	4158      	adcs	r0, r3
 802488e:	bd30      	pop	{r4, r5, pc}
 8024890:	4b09      	ldr	r3, [pc, #36]	; (80248b8 <CRC_Lock+0x9c>)
 8024892:	2201      	movs	r2, #1
 8024894:	601a      	str	r2, [r3, #0]
 8024896:	681a      	ldr	r2, [r3, #0]
 8024898:	2a00      	cmp	r2, #0
 802489a:	d1fc      	bne.n	8024896 <CRC_Lock+0x7a>
 802489c:	4b07      	ldr	r3, [pc, #28]	; (80248bc <CRC_Lock+0xa0>)
 802489e:	e7f1      	b.n	8024884 <CRC_Lock+0x68>
 80248a0:	e0002000 	.word	0xe0002000
 80248a4:	e000ed00 	.word	0xe000ed00
 80248a8:	e0042000 	.word	0xe0042000
 80248ac:	5c001000 	.word	0x5c001000
 80248b0:	58024c08 	.word	0x58024c08
 80248b4:	58024c00 	.word	0x58024c00
 80248b8:	40023008 	.word	0x40023008
 80248bc:	40023000 	.word	0x40023000

080248c0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80248c0:	6101      	str	r1, [r0, #16]
 80248c2:	4770      	bx	lr

080248c4 <_ZN8touchgfx8Gestures4tickEv>:
 80248c4:	7b83      	ldrb	r3, [r0, #14]
 80248c6:	b14b      	cbz	r3, 80248dc <_ZN8touchgfx8Gestures4tickEv+0x18>
 80248c8:	8903      	ldrh	r3, [r0, #8]
 80248ca:	3301      	adds	r3, #1
 80248cc:	b29b      	uxth	r3, r3
 80248ce:	2b07      	cmp	r3, #7
 80248d0:	8103      	strh	r3, [r0, #8]
 80248d2:	bf81      	itttt	hi
 80248d4:	2300      	movhi	r3, #0
 80248d6:	8143      	strhhi	r3, [r0, #10]
 80248d8:	8183      	strhhi	r3, [r0, #12]
 80248da:	7383      	strbhi	r3, [r0, #14]
 80248dc:	4770      	bx	lr
	...

080248e0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80248e0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80248e4:	4698      	mov	r8, r3
 80248e6:	8883      	ldrh	r3, [r0, #4]
 80248e8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80248ec:	eba8 0303 	sub.w	r3, r8, r3
 80248f0:	b21b      	sxth	r3, r3
 80248f2:	4604      	mov	r4, r0
 80248f4:	2b00      	cmp	r3, #0
 80248f6:	4617      	mov	r7, r2
 80248f8:	4a18      	ldr	r2, [pc, #96]	; (802495c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80248fa:	9200      	str	r2, [sp, #0]
 80248fc:	bfb8      	it	lt
 80248fe:	425b      	neglt	r3, r3
 8024900:	8aa2      	ldrh	r2, [r4, #20]
 8024902:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8024906:	f8ad 800a 	strh.w	r8, [sp, #10]
 802490a:	b21b      	sxth	r3, r3
 802490c:	460e      	mov	r6, r1
 802490e:	4293      	cmp	r3, r2
 8024910:	88c1      	ldrh	r1, [r0, #6]
 8024912:	f8ad 1008 	strh.w	r1, [sp, #8]
 8024916:	f04f 0000 	mov.w	r0, #0
 802491a:	f88d 0004 	strb.w	r0, [sp, #4]
 802491e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8024922:	dc07      	bgt.n	8024934 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8024924:	1a69      	subs	r1, r5, r1
 8024926:	b209      	sxth	r1, r1
 8024928:	2900      	cmp	r1, #0
 802492a:	bfb8      	it	lt
 802492c:	4249      	neglt	r1, r1
 802492e:	b209      	sxth	r1, r1
 8024930:	428a      	cmp	r2, r1
 8024932:	da10      	bge.n	8024956 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8024934:	6920      	ldr	r0, [r4, #16]
 8024936:	6803      	ldr	r3, [r0, #0]
 8024938:	4669      	mov	r1, sp
 802493a:	685b      	ldr	r3, [r3, #4]
 802493c:	4798      	blx	r3
 802493e:	eba8 0606 	sub.w	r6, r8, r6
 8024942:	2300      	movs	r3, #0
 8024944:	1bef      	subs	r7, r5, r7
 8024946:	2001      	movs	r0, #1
 8024948:	8123      	strh	r3, [r4, #8]
 802494a:	8166      	strh	r6, [r4, #10]
 802494c:	81a7      	strh	r7, [r4, #12]
 802494e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8024952:	80e5      	strh	r5, [r4, #6]
 8024954:	73a0      	strb	r0, [r4, #14]
 8024956:	b004      	add	sp, #16
 8024958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802495c:	0802b874 	.word	0x0802b874

08024960 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8024960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8024962:	461e      	mov	r6, r3
 8024964:	1e4b      	subs	r3, r1, #1
 8024966:	2b01      	cmp	r3, #1
 8024968:	b085      	sub	sp, #20
 802496a:	4604      	mov	r4, r0
 802496c:	460d      	mov	r5, r1
 802496e:	4617      	mov	r7, r2
 8024970:	d84b      	bhi.n	8024a0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8024972:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8024976:	1cd3      	adds	r3, r2, #3
 8024978:	b29b      	uxth	r3, r3
 802497a:	2b06      	cmp	r3, #6
 802497c:	d916      	bls.n	80249ac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802497e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8024a20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8024982:	f8cd c004 	str.w	ip, [sp, #4]
 8024986:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802498a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802498e:	6900      	ldr	r0, [r0, #16]
 8024990:	f8ad 100c 	strh.w	r1, [sp, #12]
 8024994:	f04f 0c00 	mov.w	ip, #0
 8024998:	f88d c008 	strb.w	ip, [sp, #8]
 802499c:	f8ad 200a 	strh.w	r2, [sp, #10]
 80249a0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80249a4:	6803      	ldr	r3, [r0, #0]
 80249a6:	a901      	add	r1, sp, #4
 80249a8:	689b      	ldr	r3, [r3, #8]
 80249aa:	4798      	blx	r3
 80249ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80249b0:	1cd3      	adds	r3, r2, #3
 80249b2:	b29b      	uxth	r3, r3
 80249b4:	2b06      	cmp	r3, #6
 80249b6:	d916      	bls.n	80249e6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80249b8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8024a20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80249bc:	f8cd c004 	str.w	ip, [sp, #4]
 80249c0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80249c4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80249c8:	6920      	ldr	r0, [r4, #16]
 80249ca:	f8ad 100c 	strh.w	r1, [sp, #12]
 80249ce:	f04f 0c01 	mov.w	ip, #1
 80249d2:	f88d c008 	strb.w	ip, [sp, #8]
 80249d6:	f8ad 200a 	strh.w	r2, [sp, #10]
 80249da:	f8ad 300e 	strh.w	r3, [sp, #14]
 80249de:	6803      	ldr	r3, [r0, #0]
 80249e0:	a901      	add	r1, sp, #4
 80249e2:	689b      	ldr	r3, [r3, #8]
 80249e4:	4798      	blx	r3
 80249e6:	4b0d      	ldr	r3, [pc, #52]	; (8024a1c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80249e8:	9301      	str	r3, [sp, #4]
 80249ea:	6920      	ldr	r0, [r4, #16]
 80249ec:	f88d 5008 	strb.w	r5, [sp, #8]
 80249f0:	2300      	movs	r3, #0
 80249f2:	f8ad 700a 	strh.w	r7, [sp, #10]
 80249f6:	f8ad 600c 	strh.w	r6, [sp, #12]
 80249fa:	f8ad 300e 	strh.w	r3, [sp, #14]
 80249fe:	6803      	ldr	r3, [r0, #0]
 8024a00:	a901      	add	r1, sp, #4
 8024a02:	681b      	ldr	r3, [r3, #0]
 8024a04:	4798      	blx	r3
 8024a06:	b005      	add	sp, #20
 8024a08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024a0a:	2900      	cmp	r1, #0
 8024a0c:	d1eb      	bne.n	80249e6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8024a0e:	80a2      	strh	r2, [r4, #4]
 8024a10:	80c6      	strh	r6, [r0, #6]
 8024a12:	60a1      	str	r1, [r4, #8]
 8024a14:	81a1      	strh	r1, [r4, #12]
 8024a16:	73a1      	strb	r1, [r4, #14]
 8024a18:	e7e5      	b.n	80249e6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8024a1a:	bf00      	nop
 8024a1c:	0802b860 	.word	0x0802b860
 8024a20:	0802b888 	.word	0x0802b888

08024a24 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8024a24:	10c9      	asrs	r1, r1, #3
 8024a26:	2900      	cmp	r1, #0
 8024a28:	bfb8      	it	lt
 8024a2a:	4249      	neglt	r1, r1
 8024a2c:	2801      	cmp	r0, #1
 8024a2e:	d108      	bne.n	8024a42 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8024a30:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8024a34:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8024a38:	4601      	mov	r1, r0
 8024a3a:	dd02      	ble.n	8024a42 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8024a3c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8024a40:	4770      	bx	lr
 8024a42:	29ff      	cmp	r1, #255	; 0xff
 8024a44:	bfa8      	it	ge
 8024a46:	21ff      	movge	r1, #255	; 0xff
 8024a48:	4608      	mov	r0, r1
 8024a4a:	4770      	bx	lr

08024a4c <_ZN8touchgfx10Rasterizer6lineToEii>:
 8024a4c:	b410      	push	{r4}
 8024a4e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8024a52:	429c      	cmp	r4, r3
 8024a54:	d803      	bhi.n	8024a5e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8024a56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024a5a:	f7ed bae3 	b.w	8012024 <_ZN8touchgfx7Outline6lineToEii>
 8024a5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024a62:	4770      	bx	lr

08024a64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8024a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a68:	b08b      	sub	sp, #44	; 0x2c
 8024a6a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8024a6e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8024a72:	9308      	str	r3, [sp, #32]
 8024a74:	4606      	mov	r6, r0
 8024a76:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8024a7a:	9309      	str	r3, [sp, #36]	; 0x24
 8024a7c:	468a      	mov	sl, r1
 8024a7e:	f7ed fc3e 	bl	80122fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8024a82:	68b5      	ldr	r5, [r6, #8]
 8024a84:	4604      	mov	r4, r0
 8024a86:	2d00      	cmp	r5, #0
 8024a88:	d044      	beq.n	8024b14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8024a8a:	6873      	ldr	r3, [r6, #4]
 8024a8c:	42ab      	cmp	r3, r5
 8024a8e:	d33d      	bcc.n	8024b0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8024a90:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8024a94:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8024a98:	eb02 0b03 	add.w	fp, r2, r3
 8024a9c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8024aa0:	fb02 1203 	mla	r2, r2, r3, r1
 8024aa4:	9205      	str	r2, [sp, #20]
 8024aa6:	1e6a      	subs	r2, r5, #1
 8024aa8:	9204      	str	r2, [sp, #16]
 8024aaa:	f04f 0800 	mov.w	r8, #0
 8024aae:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8024ab2:	f9b4 7000 	ldrsh.w	r7, [r4]
 8024ab6:	454b      	cmp	r3, r9
 8024ab8:	463a      	mov	r2, r7
 8024aba:	d008      	beq.n	8024ace <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8024abc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8024ac0:	eb03 0b09 	add.w	fp, r3, r9
 8024ac4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8024ac8:	fb03 1309 	mla	r3, r3, r9, r1
 8024acc:	9305      	str	r3, [sp, #20]
 8024ace:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8024ad2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8024ad6:	4498      	add	r8, r3
 8024ad8:	9b04      	ldr	r3, [sp, #16]
 8024ada:	3b01      	subs	r3, #1
 8024adc:	9304      	str	r3, [sp, #16]
 8024ade:	9b04      	ldr	r3, [sp, #16]
 8024ae0:	3301      	adds	r3, #1
 8024ae2:	d015      	beq.n	8024b10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8024ae4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8024ae8:	42bb      	cmp	r3, r7
 8024aea:	d117      	bne.n	8024b1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8024aec:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8024af0:	9b04      	ldr	r3, [sp, #16]
 8024af2:	4548      	cmp	r0, r9
 8024af4:	f103 33ff 	add.w	r3, r3, #4294967295
 8024af8:	d17f      	bne.n	8024bfa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8024afa:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8024afe:	4401      	add	r1, r0
 8024b00:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8024b04:	4480      	add	r8, r0
 8024b06:	e7e9      	b.n	8024adc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8024b08:	461f      	mov	r7, r3
 8024b0a:	e044      	b.n	8024b96 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8024b0c:	2000      	movs	r0, #0
 8024b0e:	e002      	b.n	8024b16 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8024b10:	2900      	cmp	r1, #0
 8024b12:	d16f      	bne.n	8024bf4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8024b14:	2001      	movs	r0, #1
 8024b16:	b00b      	add	sp, #44	; 0x2c
 8024b18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b1c:	2900      	cmp	r1, #0
 8024b1e:	d030      	beq.n	8024b82 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8024b20:	2f00      	cmp	r7, #0
 8024b22:	db29      	blt.n	8024b78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8024b24:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8024b28:	42bb      	cmp	r3, r7
 8024b2a:	dd25      	ble.n	8024b78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8024b2c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8024b30:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8024b34:	f7ff ff76 	bl	8024a24 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8024b38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b3a:	fb10 f003 	smulbb	r0, r0, r3
 8024b3e:	b280      	uxth	r0, r0
 8024b40:	1c41      	adds	r1, r0, #1
 8024b42:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024b46:	1209      	asrs	r1, r1, #8
 8024b48:	f011 0fff 	tst.w	r1, #255	; 0xff
 8024b4c:	d014      	beq.n	8024b78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8024b4e:	9808      	ldr	r0, [sp, #32]
 8024b50:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8024b52:	b2c9      	uxtb	r1, r1
 8024b54:	b2ba      	uxth	r2, r7
 8024b56:	9102      	str	r1, [sp, #8]
 8024b58:	2101      	movs	r1, #1
 8024b5a:	4413      	add	r3, r2
 8024b5c:	9101      	str	r1, [sp, #4]
 8024b5e:	4402      	add	r2, r0
 8024b60:	fa0f f18b 	sxth.w	r1, fp
 8024b64:	f8da 0000 	ldr.w	r0, [sl]
 8024b68:	9100      	str	r1, [sp, #0]
 8024b6a:	6941      	ldr	r1, [r0, #20]
 8024b6c:	b21b      	sxth	r3, r3
 8024b6e:	460d      	mov	r5, r1
 8024b70:	b212      	sxth	r2, r2
 8024b72:	9905      	ldr	r1, [sp, #20]
 8024b74:	4650      	mov	r0, sl
 8024b76:	47a8      	blx	r5
 8024b78:	9b04      	ldr	r3, [sp, #16]
 8024b7a:	3301      	adds	r3, #1
 8024b7c:	f107 0201 	add.w	r2, r7, #1
 8024b80:	d0c8      	beq.n	8024b14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8024b82:	f9b4 7000 	ldrsh.w	r7, [r4]
 8024b86:	1abb      	subs	r3, r7, r2
 8024b88:	2b00      	cmp	r3, #0
 8024b8a:	dd31      	ble.n	8024bf0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024b8c:	2a00      	cmp	r2, #0
 8024b8e:	dabb      	bge.n	8024b08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8024b90:	2f00      	cmp	r7, #0
 8024b92:	dd2d      	ble.n	8024bf0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024b94:	2200      	movs	r2, #0
 8024b96:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8024b9a:	19d1      	adds	r1, r2, r7
 8024b9c:	4299      	cmp	r1, r3
 8024b9e:	db02      	blt.n	8024ba6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8024ba0:	1a9f      	subs	r7, r3, r2
 8024ba2:	2f00      	cmp	r7, #0
 8024ba4:	dd24      	ble.n	8024bf0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024ba6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8024baa:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8024bae:	f7ff ff39 	bl	8024a24 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8024bb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024bb4:	fb10 f003 	smulbb	r0, r0, r3
 8024bb8:	b280      	uxth	r0, r0
 8024bba:	1c41      	adds	r1, r0, #1
 8024bbc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024bc0:	1209      	asrs	r1, r1, #8
 8024bc2:	f011 0fff 	tst.w	r1, #255	; 0xff
 8024bc6:	d013      	beq.n	8024bf0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024bc8:	9808      	ldr	r0, [sp, #32]
 8024bca:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8024bcc:	b292      	uxth	r2, r2
 8024bce:	b2c9      	uxtb	r1, r1
 8024bd0:	4413      	add	r3, r2
 8024bd2:	9102      	str	r1, [sp, #8]
 8024bd4:	4402      	add	r2, r0
 8024bd6:	b23f      	sxth	r7, r7
 8024bd8:	f8da 0000 	ldr.w	r0, [sl]
 8024bdc:	9701      	str	r7, [sp, #4]
 8024bde:	fa0f f18b 	sxth.w	r1, fp
 8024be2:	9100      	str	r1, [sp, #0]
 8024be4:	6947      	ldr	r7, [r0, #20]
 8024be6:	9905      	ldr	r1, [sp, #20]
 8024be8:	b21b      	sxth	r3, r3
 8024bea:	b212      	sxth	r2, r2
 8024bec:	4650      	mov	r0, sl
 8024bee:	47b8      	blx	r7
 8024bf0:	464b      	mov	r3, r9
 8024bf2:	e75c      	b.n	8024aae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8024bf4:	2f00      	cmp	r7, #0
 8024bf6:	da95      	bge.n	8024b24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8024bf8:	e78c      	b.n	8024b14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8024bfa:	2900      	cmp	r1, #0
 8024bfc:	d0f8      	beq.n	8024bf0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024bfe:	e78f      	b.n	8024b20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08024c00 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8024c00:	4b4b      	ldr	r3, [pc, #300]	; (8024d30 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8024c02:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8024c06:	2500      	movs	r5, #0
 8024c08:	f100 0620 	add.w	r6, r0, #32
 8024c0c:	4604      	mov	r4, r0
 8024c0e:	e9c0 3100 	strd	r3, r1, [r0]
 8024c12:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8024c16:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8024c1a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8024c1e:	f100 0718 	add.w	r7, r0, #24
 8024c22:	4630      	mov	r0, r6
 8024c24:	4690      	mov	r8, r2
 8024c26:	f7ec fd35 	bl	8011694 <_ZN8touchgfx7OutlineC1Ev>
 8024c2a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8024c2e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8024c32:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8024c36:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8024c3a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8024c3e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8024c42:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8024c46:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8024c4a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8024c4e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8024c52:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8024c56:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8024c5a:	9500      	str	r5, [sp, #0]
 8024c5c:	4410      	add	r0, r2
 8024c5e:	b280      	uxth	r0, r0
 8024c60:	fa0f fa80 	sxth.w	sl, r0
 8024c64:	45aa      	cmp	sl, r5
 8024c66:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8024c6a:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8024c6e:	dd5c      	ble.n	8024d2a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8024c70:	4591      	cmp	r9, r2
 8024c72:	dd5a      	ble.n	8024d2a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8024c74:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8024c78:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8024c7c:	440b      	add	r3, r1
 8024c7e:	b29b      	uxth	r3, r3
 8024c80:	b21d      	sxth	r5, r3
 8024c82:	2d00      	cmp	r5, #0
 8024c84:	dd51      	ble.n	8024d2a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8024c86:	458e      	cmp	lr, r1
 8024c88:	dd4f      	ble.n	8024d2a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8024c8a:	45d1      	cmp	r9, sl
 8024c8c:	bfb8      	it	lt
 8024c8e:	fa1f f089 	uxthlt.w	r0, r9
 8024c92:	45ae      	cmp	lr, r5
 8024c94:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8024c98:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8024c9c:	bfb8      	it	lt
 8024c9e:	fa1f f38e 	uxthlt.w	r3, lr
 8024ca2:	1a80      	subs	r0, r0, r2
 8024ca4:	1a5b      	subs	r3, r3, r1
 8024ca6:	f8ad 0004 	strh.w	r0, [sp, #4]
 8024caa:	f8ad 3006 	strh.w	r3, [sp, #6]
 8024cae:	f8ad 2000 	strh.w	r2, [sp]
 8024cb2:	f8ad 1002 	strh.w	r1, [sp, #2]
 8024cb6:	466d      	mov	r5, sp
 8024cb8:	e895 0003 	ldmia.w	r5, {r0, r1}
 8024cbc:	e887 0003 	stmia.w	r7, {r0, r1}
 8024cc0:	f8dc 3000 	ldr.w	r3, [ip]
 8024cc4:	4660      	mov	r0, ip
 8024cc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024cc8:	4639      	mov	r1, r7
 8024cca:	4798      	blx	r3
 8024ccc:	6861      	ldr	r1, [r4, #4]
 8024cce:	4628      	mov	r0, r5
 8024cd0:	3104      	adds	r1, #4
 8024cd2:	f7ee fee5 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024cd6:	4638      	mov	r0, r7
 8024cd8:	f7ee fe9e 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024cdc:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8024ce0:	f8bd 2000 	ldrh.w	r2, [sp]
 8024ce4:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8024ce8:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8024cec:	4630      	mov	r0, r6
 8024cee:	f7ec fcb5 	bl	801165c <_ZN8touchgfx7Outline5resetEv>
 8024cf2:	f9bd 3000 	ldrsh.w	r3, [sp]
 8024cf6:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8024cfa:	015b      	lsls	r3, r3, #5
 8024cfc:	60a3      	str	r3, [r4, #8]
 8024cfe:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8024d02:	015b      	lsls	r3, r3, #5
 8024d04:	60e3      	str	r3, [r4, #12]
 8024d06:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8024d0a:	015b      	lsls	r3, r3, #5
 8024d0c:	6123      	str	r3, [r4, #16]
 8024d0e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8024d12:	015b      	lsls	r3, r3, #5
 8024d14:	6163      	str	r3, [r4, #20]
 8024d16:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8024d1a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8024d1e:	4620      	mov	r0, r4
 8024d20:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8024d24:	b002      	add	sp, #8
 8024d26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024d2a:	2300      	movs	r3, #0
 8024d2c:	9301      	str	r3, [sp, #4]
 8024d2e:	e7c2      	b.n	8024cb6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8024d30:	0802bbac 	.word	0x0802bbac

08024d34 <_ZN8touchgfx6Canvas5closeEv>:
 8024d34:	b538      	push	{r3, r4, r5, lr}
 8024d36:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8024d3a:	4604      	mov	r4, r0
 8024d3c:	b193      	cbz	r3, 8024d64 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8024d3e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8024d42:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8024d46:	4213      	tst	r3, r2
 8024d48:	d10c      	bne.n	8024d64 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8024d4a:	f100 0520 	add.w	r5, r0, #32
 8024d4e:	b123      	cbz	r3, 8024d5a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8024d50:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8024d54:	4628      	mov	r0, r5
 8024d56:	f7ff fe79 	bl	8024a4c <_ZN8touchgfx10Rasterizer6lineToEii>
 8024d5a:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8024d5e:	4628      	mov	r0, r5
 8024d60:	f7ff fe74 	bl	8024a4c <_ZN8touchgfx10Rasterizer6lineToEii>
 8024d64:	2300      	movs	r3, #0
 8024d66:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8024d6a:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8024d6e:	4298      	cmp	r0, r3
 8024d70:	bf34      	ite	cc
 8024d72:	2000      	movcc	r0, #0
 8024d74:	2001      	movcs	r0, #1
 8024d76:	bd38      	pop	{r3, r4, r5, pc}

08024d78 <_ZN8touchgfx6Canvas6renderEh>:
 8024d78:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8024d7c:	4604      	mov	r4, r0
 8024d7e:	6840      	ldr	r0, [r0, #4]
 8024d80:	6803      	ldr	r3, [r0, #0]
 8024d82:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8024d84:	460d      	mov	r5, r1
 8024d86:	4798      	blx	r3
 8024d88:	fb10 f105 	smulbb	r1, r0, r5
 8024d8c:	b289      	uxth	r1, r1
 8024d8e:	1c4d      	adds	r5, r1, #1
 8024d90:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024d94:	122d      	asrs	r5, r5, #8
 8024d96:	f000 809d 	beq.w	8024ed4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8024d9a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8024d9e:	2b00      	cmp	r3, #0
 8024da0:	f000 8098 	beq.w	8024ed4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8024da4:	4620      	mov	r0, r4
 8024da6:	f7ff ffc5 	bl	8024d34 <_ZN8touchgfx6Canvas5closeEv>
 8024daa:	4607      	mov	r7, r0
 8024dac:	2800      	cmp	r0, #0
 8024dae:	d048      	beq.n	8024e42 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8024db0:	6863      	ldr	r3, [r4, #4]
 8024db2:	4e49      	ldr	r6, [pc, #292]	; (8024ed8 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8024db4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8024db6:	6837      	ldr	r7, [r6, #0]
 8024db8:	6803      	ldr	r3, [r0, #0]
 8024dba:	689b      	ldr	r3, [r3, #8]
 8024dbc:	4798      	blx	r3
 8024dbe:	4601      	mov	r1, r0
 8024dc0:	4638      	mov	r0, r7
 8024dc2:	f7ea fdb9 	bl	800f938 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8024dc6:	4607      	mov	r7, r0
 8024dc8:	f7de f880 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 8024dcc:	6803      	ldr	r3, [r0, #0]
 8024dce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8024dd0:	4798      	blx	r3
 8024dd2:	4680      	mov	r8, r0
 8024dd4:	f7de f87a 	bl	8002ecc <_ZN8touchgfx3HAL3lcdEv>
 8024dd8:	6803      	ldr	r3, [r0, #0]
 8024dda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024ddc:	4798      	blx	r3
 8024dde:	280b      	cmp	r0, #11
 8024de0:	d85d      	bhi.n	8024e9e <_ZN8touchgfx6Canvas6renderEh+0x126>
 8024de2:	e8df f000 	tbb	[pc, r0]
 8024de6:	5e53      	.short	0x5e53
 8024de8:	325c066e 	.word	0x325c066e
 8024dec:	67676742 	.word	0x67676742
 8024df0:	6767      	.short	0x6767
 8024df2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024df6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8024dfa:	2208      	movs	r2, #8
 8024dfc:	fb91 f2f2 	sdiv	r2, r1, r2
 8024e00:	fb08 2303 	mla	r3, r8, r3, r2
 8024e04:	441f      	add	r7, r3
 8024e06:	424b      	negs	r3, r1
 8024e08:	f003 0307 	and.w	r3, r3, #7
 8024e0c:	f001 0107 	and.w	r1, r1, #7
 8024e10:	bf58      	it	pl
 8024e12:	4259      	negpl	r1, r3
 8024e14:	b2c9      	uxtb	r1, r1
 8024e16:	b2ed      	uxtb	r5, r5
 8024e18:	e9cd 1500 	strd	r1, r5, [sp]
 8024e1c:	6860      	ldr	r0, [r4, #4]
 8024e1e:	463a      	mov	r2, r7
 8024e20:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8024e22:	fa0f f388 	sxth.w	r3, r8
 8024e26:	f104 0020 	add.w	r0, r4, #32
 8024e2a:	f7ff fe1b 	bl	8024a64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8024e2e:	6863      	ldr	r3, [r4, #4]
 8024e30:	4607      	mov	r7, r0
 8024e32:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8024e34:	6803      	ldr	r3, [r0, #0]
 8024e36:	691b      	ldr	r3, [r3, #16]
 8024e38:	4798      	blx	r3
 8024e3a:	6830      	ldr	r0, [r6, #0]
 8024e3c:	6803      	ldr	r3, [r0, #0]
 8024e3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024e40:	4798      	blx	r3
 8024e42:	4638      	mov	r0, r7
 8024e44:	b002      	add	sp, #8
 8024e46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024e4a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024e4e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8024e52:	2204      	movs	r2, #4
 8024e54:	fb91 f2f2 	sdiv	r2, r1, r2
 8024e58:	fb08 2303 	mla	r3, r8, r3, r2
 8024e5c:	441f      	add	r7, r3
 8024e5e:	424b      	negs	r3, r1
 8024e60:	f003 0303 	and.w	r3, r3, #3
 8024e64:	f001 0103 	and.w	r1, r1, #3
 8024e68:	e7d2      	b.n	8024e10 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8024e6a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8024e6e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024e72:	2900      	cmp	r1, #0
 8024e74:	f04f 0202 	mov.w	r2, #2
 8024e78:	fb91 f2f2 	sdiv	r2, r1, r2
 8024e7c:	f001 0101 	and.w	r1, r1, #1
 8024e80:	fb08 2303 	mla	r3, r8, r3, r2
 8024e84:	441f      	add	r7, r3
 8024e86:	bfb8      	it	lt
 8024e88:	4249      	neglt	r1, r1
 8024e8a:	e7c3      	b.n	8024e14 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8024e8c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024e90:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8024e94:	fb08 f303 	mul.w	r3, r8, r3
 8024e98:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8024e9c:	441f      	add	r7, r3
 8024e9e:	2100      	movs	r1, #0
 8024ea0:	e7b9      	b.n	8024e16 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8024ea2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024ea6:	fb08 f203 	mul.w	r2, r8, r3
 8024eaa:	8b23      	ldrh	r3, [r4, #24]
 8024eac:	2103      	movs	r1, #3
 8024eae:	fb13 2301 	smlabb	r3, r3, r1, r2
 8024eb2:	e7f3      	b.n	8024e9c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8024eb4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024eb8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8024ebc:	fb08 2303 	mla	r3, r8, r3, r2
 8024ec0:	e7ec      	b.n	8024e9c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8024ec2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024ec6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8024eca:	fb08 f303 	mul.w	r3, r8, r3
 8024ece:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8024ed2:	e7e3      	b.n	8024e9c <_ZN8touchgfx6Canvas6renderEh+0x124>
 8024ed4:	2701      	movs	r7, #1
 8024ed6:	e7b4      	b.n	8024e42 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8024ed8:	200137bc 	.word	0x200137bc

08024edc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8024edc:	b510      	push	{r4, lr}
 8024ede:	4b07      	ldr	r3, [pc, #28]	; (8024efc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8024ee0:	781b      	ldrb	r3, [r3, #0]
 8024ee2:	2b01      	cmp	r3, #1
 8024ee4:	d108      	bne.n	8024ef8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8024ee6:	6843      	ldr	r3, [r0, #4]
 8024ee8:	6814      	ldr	r4, [r2, #0]
 8024eea:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8024eee:	680b      	ldr	r3, [r1, #0]
 8024ef0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8024ef4:	6013      	str	r3, [r2, #0]
 8024ef6:	600c      	str	r4, [r1, #0]
 8024ef8:	bd10      	pop	{r4, pc}
 8024efa:	bf00      	nop
 8024efc:	200137b4 	.word	0x200137b4

08024f00 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8024f00:	b513      	push	{r0, r1, r4, lr}
 8024f02:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8024f06:	4604      	mov	r4, r0
 8024f08:	e9cd 2100 	strd	r2, r1, [sp]
 8024f0c:	b9a3      	cbnz	r3, 8024f38 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8024f0e:	466a      	mov	r2, sp
 8024f10:	a901      	add	r1, sp, #4
 8024f12:	4620      	mov	r0, r4
 8024f14:	f7ff ffe2 	bl	8024edc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8024f18:	68a3      	ldr	r3, [r4, #8]
 8024f1a:	9901      	ldr	r1, [sp, #4]
 8024f1c:	9a00      	ldr	r2, [sp, #0]
 8024f1e:	1ac9      	subs	r1, r1, r3
 8024f20:	68e3      	ldr	r3, [r4, #12]
 8024f22:	9101      	str	r1, [sp, #4]
 8024f24:	1ad2      	subs	r2, r2, r3
 8024f26:	2a00      	cmp	r2, #0
 8024f28:	9200      	str	r2, [sp, #0]
 8024f2a:	da0b      	bge.n	8024f44 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8024f2c:	2301      	movs	r3, #1
 8024f2e:	2900      	cmp	r1, #0
 8024f30:	da0e      	bge.n	8024f50 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8024f32:	f043 0304 	orr.w	r3, r3, #4
 8024f36:	e013      	b.n	8024f60 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8024f38:	f7ff fefc 	bl	8024d34 <_ZN8touchgfx6Canvas5closeEv>
 8024f3c:	2800      	cmp	r0, #0
 8024f3e:	d1e6      	bne.n	8024f0e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8024f40:	b002      	add	sp, #8
 8024f42:	bd10      	pop	{r4, pc}
 8024f44:	6963      	ldr	r3, [r4, #20]
 8024f46:	429a      	cmp	r2, r3
 8024f48:	bfac      	ite	ge
 8024f4a:	2302      	movge	r3, #2
 8024f4c:	2300      	movlt	r3, #0
 8024f4e:	e7ee      	b.n	8024f2e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8024f50:	6920      	ldr	r0, [r4, #16]
 8024f52:	4281      	cmp	r1, r0
 8024f54:	bfac      	ite	ge
 8024f56:	2008      	movge	r0, #8
 8024f58:	2000      	movlt	r0, #0
 8024f5a:	4318      	orrs	r0, r3
 8024f5c:	b2c3      	uxtb	r3, r0
 8024f5e:	b158      	cbz	r0, 8024f78 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8024f60:	2200      	movs	r2, #0
 8024f62:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8024f66:	9901      	ldr	r1, [sp, #4]
 8024f68:	9a00      	ldr	r2, [sp, #0]
 8024f6a:	66a1      	str	r1, [r4, #104]	; 0x68
 8024f6c:	66e2      	str	r2, [r4, #108]	; 0x6c
 8024f6e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8024f72:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8024f76:	e7e3      	b.n	8024f40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8024f78:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8024f7c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8024f80:	4298      	cmp	r0, r3
 8024f82:	d803      	bhi.n	8024f8c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8024f84:	f104 0020 	add.w	r0, r4, #32
 8024f88:	f7ed f866 	bl	8012058 <_ZN8touchgfx7Outline6moveToEii>
 8024f8c:	2301      	movs	r3, #1
 8024f8e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8024f92:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8024f96:	2300      	movs	r3, #0
 8024f98:	e7e5      	b.n	8024f66 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8024f9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8024f9c:	ab02      	add	r3, sp, #8
 8024f9e:	4604      	mov	r4, r0
 8024fa0:	f843 2d08 	str.w	r2, [r3, #-8]!
 8024fa4:	9101      	str	r1, [sp, #4]
 8024fa6:	461a      	mov	r2, r3
 8024fa8:	a901      	add	r1, sp, #4
 8024faa:	f7ff ff97 	bl	8024edc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8024fae:	68a3      	ldr	r3, [r4, #8]
 8024fb0:	9901      	ldr	r1, [sp, #4]
 8024fb2:	9a00      	ldr	r2, [sp, #0]
 8024fb4:	1ac9      	subs	r1, r1, r3
 8024fb6:	68e3      	ldr	r3, [r4, #12]
 8024fb8:	9101      	str	r1, [sp, #4]
 8024fba:	1ad2      	subs	r2, r2, r3
 8024fbc:	2a00      	cmp	r2, #0
 8024fbe:	9200      	str	r2, [sp, #0]
 8024fc0:	db1c      	blt.n	8024ffc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8024fc2:	6963      	ldr	r3, [r4, #20]
 8024fc4:	429a      	cmp	r2, r3
 8024fc6:	bfac      	ite	ge
 8024fc8:	2002      	movge	r0, #2
 8024fca:	2000      	movlt	r0, #0
 8024fcc:	2900      	cmp	r1, #0
 8024fce:	db17      	blt.n	8025000 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8024fd0:	6923      	ldr	r3, [r4, #16]
 8024fd2:	4299      	cmp	r1, r3
 8024fd4:	bfac      	ite	ge
 8024fd6:	2308      	movge	r3, #8
 8024fd8:	2300      	movlt	r3, #0
 8024fda:	4303      	orrs	r3, r0
 8024fdc:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8024fe0:	b2dd      	uxtb	r5, r3
 8024fe2:	b978      	cbnz	r0, 8025004 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8024fe4:	f104 0020 	add.w	r0, r4, #32
 8024fe8:	f7ff fd30 	bl	8024a4c <_ZN8touchgfx10Rasterizer6lineToEii>
 8024fec:	9b01      	ldr	r3, [sp, #4]
 8024fee:	65e3      	str	r3, [r4, #92]	; 0x5c
 8024ff0:	9b00      	ldr	r3, [sp, #0]
 8024ff2:	6623      	str	r3, [r4, #96]	; 0x60
 8024ff4:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8024ff8:	b002      	add	sp, #8
 8024ffa:	bd70      	pop	{r4, r5, r6, pc}
 8024ffc:	2001      	movs	r0, #1
 8024ffe:	e7e5      	b.n	8024fcc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8025000:	2304      	movs	r3, #4
 8025002:	e7ea      	b.n	8024fda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8025004:	b113      	cbz	r3, 802500c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8025006:	ea10 0305 	ands.w	r3, r0, r5
 802500a:	d11c      	bne.n	8025046 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802500c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8025010:	f104 0620 	add.w	r6, r4, #32
 8025014:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8025018:	b98b      	cbnz	r3, 802503e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802501a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802501e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8025022:	4298      	cmp	r0, r3
 8025024:	d802      	bhi.n	802502c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8025026:	4630      	mov	r0, r6
 8025028:	f7ed f816 	bl	8012058 <_ZN8touchgfx7Outline6moveToEii>
 802502c:	2301      	movs	r3, #1
 802502e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025032:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8025036:	e9dd 2100 	ldrd	r2, r1, [sp]
 802503a:	4630      	mov	r0, r6
 802503c:	e7d4      	b.n	8024fe8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802503e:	4630      	mov	r0, r6
 8025040:	f7ff fd04 	bl	8024a4c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025044:	e7f7      	b.n	8025036 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8025046:	461d      	mov	r5, r3
 8025048:	e7d0      	b.n	8024fec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802504c <_ZN8touchgfx6CanvasD1Ev>:
 802504c:	b510      	push	{r4, lr}
 802504e:	4b04      	ldr	r3, [pc, #16]	; (8025060 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8025050:	4604      	mov	r4, r0
 8025052:	f840 3b20 	str.w	r3, [r0], #32
 8025056:	f7ec faf9 	bl	801164c <_ZN8touchgfx7OutlineD1Ev>
 802505a:	4620      	mov	r0, r4
 802505c:	bd10      	pop	{r4, pc}
 802505e:	bf00      	nop
 8025060:	0802bbac 	.word	0x0802bbac

08025064 <_ZN8touchgfx6CanvasD0Ev>:
 8025064:	b510      	push	{r4, lr}
 8025066:	4604      	mov	r4, r0
 8025068:	f7ff fff0 	bl	802504c <_ZN8touchgfx6CanvasD1Ev>
 802506c:	4620      	mov	r0, r4
 802506e:	2170      	movs	r1, #112	; 0x70
 8025070:	f001 fbe5 	bl	802683e <_ZdlPvj>
 8025074:	4620      	mov	r0, r4
 8025076:	bd10      	pop	{r4, pc}

08025078 <_ZN8touchgfx6CircleD1Ev>:
 8025078:	4770      	bx	lr

0802507a <_ZN8touchgfx6CircleD0Ev>:
 802507a:	b510      	push	{r4, lr}
 802507c:	2148      	movs	r1, #72	; 0x48
 802507e:	4604      	mov	r4, r0
 8025080:	f001 fbdd 	bl	802683e <_ZdlPvj>
 8025084:	4620      	mov	r0, r4
 8025086:	bd10      	pop	{r4, pc}

08025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8025088:	b508      	push	{r3, lr}
 802508a:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802508e:	f7ea ffa9 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025092:	bd08      	pop	{r3, pc}

08025094 <_ZN8touchgfx6CircleC1Ev>:
 8025094:	b510      	push	{r4, lr}
 8025096:	4604      	mov	r4, r0
 8025098:	f7ea fe40 	bl	800fd1c <_ZN8touchgfx12CanvasWidgetC1Ev>
 802509c:	4b08      	ldr	r3, [pc, #32]	; (80250c0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802509e:	6023      	str	r3, [r4, #0]
 80250a0:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80250a4:	2300      	movs	r3, #0
 80250a6:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80250aa:	f24b 4205 	movw	r2, #46085	; 0xb405
 80250ae:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80250b2:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80250b6:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80250ba:	60a3      	str	r3, [r4, #8]
 80250bc:	4620      	mov	r0, r4
 80250be:	bd10      	pop	{r4, pc}
 80250c0:	0802bbc0 	.word	0x0802bbc0

080250c4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80250c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80250c8:	428a      	cmp	r2, r1
 80250ca:	4680      	mov	r8, r0
 80250cc:	4610      	mov	r0, r2
 80250ce:	4699      	mov	r9, r3
 80250d0:	bfa6      	itte	ge
 80250d2:	460a      	movge	r2, r1
 80250d4:	4603      	movge	r3, r0
 80250d6:	460b      	movlt	r3, r1
 80250d8:	1a99      	subs	r1, r3, r2
 80250da:	b085      	sub	sp, #20
 80250dc:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80250e0:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80250e4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80250e6:	bfa4      	itt	ge
 80250e8:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80250ec:	2200      	movge	r2, #0
 80250ee:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80250f2:	9300      	str	r3, [sp, #0]
 80250f4:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 80250f8:	f102 0b01 	add.w	fp, r2, #1
 80250fc:	2c00      	cmp	r4, #0
 80250fe:	f040 80af 	bne.w	8025260 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8025102:	4610      	mov	r0, r2
 8025104:	9201      	str	r2, [sp, #4]
 8025106:	f7ea ff6d 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802510a:	a903      	add	r1, sp, #12
 802510c:	9003      	str	r0, [sp, #12]
 802510e:	4650      	mov	r0, sl
 8025110:	f7ea fe30 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025114:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8025118:	9a01      	ldr	r2, [sp, #4]
 802511a:	4408      	add	r0, r1
 802511c:	f8d9 1000 	ldr.w	r1, [r9]
 8025120:	4281      	cmp	r1, r0
 8025122:	bfc8      	it	gt
 8025124:	f8c9 0000 	strgt.w	r0, [r9]
 8025128:	6839      	ldr	r1, [r7, #0]
 802512a:	4288      	cmp	r0, r1
 802512c:	bfc8      	it	gt
 802512e:	6038      	strgt	r0, [r7, #0]
 8025130:	4610      	mov	r0, r2
 8025132:	f7ff ffa9 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025136:	a903      	add	r1, sp, #12
 8025138:	9003      	str	r0, [sp, #12]
 802513a:	4650      	mov	r0, sl
 802513c:	f7ea fe1a 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025140:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025144:	1a10      	subs	r0, r2, r0
 8025146:	6832      	ldr	r2, [r6, #0]
 8025148:	4282      	cmp	r2, r0
 802514a:	bfc8      	it	gt
 802514c:	6030      	strgt	r0, [r6, #0]
 802514e:	682a      	ldr	r2, [r5, #0]
 8025150:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8025154:	4290      	cmp	r0, r2
 8025156:	fb9b f2f1 	sdiv	r2, fp, r1
 802515a:	fb01 b212 	mls	r2, r1, r2, fp
 802515e:	eba1 0202 	sub.w	r2, r1, r2
 8025162:	bfc8      	it	gt
 8025164:	6028      	strgt	r0, [r5, #0]
 8025166:	fb92 f0f1 	sdiv	r0, r2, r1
 802516a:	fb01 2210 	mls	r2, r1, r0, r2
 802516e:	4493      	add	fp, r2
 8025170:	9b00      	ldr	r3, [sp, #0]
 8025172:	455b      	cmp	r3, fp
 8025174:	db2a      	blt.n	80251cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8025176:	4658      	mov	r0, fp
 8025178:	f7ea ff34 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802517c:	a903      	add	r1, sp, #12
 802517e:	9003      	str	r0, [sp, #12]
 8025180:	4650      	mov	r0, sl
 8025182:	f7ea fdf7 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025186:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802518a:	4410      	add	r0, r2
 802518c:	f8d9 2000 	ldr.w	r2, [r9]
 8025190:	4282      	cmp	r2, r0
 8025192:	bfc8      	it	gt
 8025194:	f8c9 0000 	strgt.w	r0, [r9]
 8025198:	683a      	ldr	r2, [r7, #0]
 802519a:	4290      	cmp	r0, r2
 802519c:	bfc8      	it	gt
 802519e:	6038      	strgt	r0, [r7, #0]
 80251a0:	4658      	mov	r0, fp
 80251a2:	f7ff ff71 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80251a6:	a903      	add	r1, sp, #12
 80251a8:	9003      	str	r0, [sp, #12]
 80251aa:	4650      	mov	r0, sl
 80251ac:	f7ea fde2 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80251b0:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80251b4:	1a10      	subs	r0, r2, r0
 80251b6:	6832      	ldr	r2, [r6, #0]
 80251b8:	4282      	cmp	r2, r0
 80251ba:	bfc8      	it	gt
 80251bc:	6030      	strgt	r0, [r6, #0]
 80251be:	682a      	ldr	r2, [r5, #0]
 80251c0:	4290      	cmp	r0, r2
 80251c2:	bfc8      	it	gt
 80251c4:	6028      	strgt	r0, [r5, #0]
 80251c6:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80251ca:	e7d1      	b.n	8025170 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80251cc:	9b00      	ldr	r3, [sp, #0]
 80251ce:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80251d2:	455b      	cmp	r3, fp
 80251d4:	dd27      	ble.n	8025226 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80251d6:	4618      	mov	r0, r3
 80251d8:	f7ea ff04 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80251dc:	a903      	add	r1, sp, #12
 80251de:	9003      	str	r0, [sp, #12]
 80251e0:	4650      	mov	r0, sl
 80251e2:	f7ea fdc7 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80251e6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80251ea:	4410      	add	r0, r2
 80251ec:	f8d9 2000 	ldr.w	r2, [r9]
 80251f0:	4282      	cmp	r2, r0
 80251f2:	bfc8      	it	gt
 80251f4:	f8c9 0000 	strgt.w	r0, [r9]
 80251f8:	683a      	ldr	r2, [r7, #0]
 80251fa:	4290      	cmp	r0, r2
 80251fc:	bfc8      	it	gt
 80251fe:	6038      	strgt	r0, [r7, #0]
 8025200:	9800      	ldr	r0, [sp, #0]
 8025202:	f7ff ff41 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025206:	a903      	add	r1, sp, #12
 8025208:	9003      	str	r0, [sp, #12]
 802520a:	4650      	mov	r0, sl
 802520c:	f7ea fdb2 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025210:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025214:	1a10      	subs	r0, r2, r0
 8025216:	6832      	ldr	r2, [r6, #0]
 8025218:	4282      	cmp	r2, r0
 802521a:	bfc8      	it	gt
 802521c:	6030      	strgt	r0, [r6, #0]
 802521e:	682a      	ldr	r2, [r5, #0]
 8025220:	4290      	cmp	r0, r2
 8025222:	bfc8      	it	gt
 8025224:	6028      	strgt	r0, [r5, #0]
 8025226:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802522a:	f8d9 1000 	ldr.w	r1, [r9]
 802522e:	4291      	cmp	r1, r2
 8025230:	bfc8      	it	gt
 8025232:	f8c9 2000 	strgt.w	r2, [r9]
 8025236:	683a      	ldr	r2, [r7, #0]
 8025238:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 802523c:	429a      	cmp	r2, r3
 802523e:	bfb8      	it	lt
 8025240:	603b      	strlt	r3, [r7, #0]
 8025242:	6832      	ldr	r2, [r6, #0]
 8025244:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8025248:	429a      	cmp	r2, r3
 802524a:	bfc8      	it	gt
 802524c:	6033      	strgt	r3, [r6, #0]
 802524e:	682a      	ldr	r2, [r5, #0]
 8025250:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8025254:	429a      	cmp	r2, r3
 8025256:	da00      	bge.n	802525a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8025258:	602b      	str	r3, [r5, #0]
 802525a:	b005      	add	sp, #20
 802525c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025260:	2002      	movs	r0, #2
 8025262:	3401      	adds	r4, #1
 8025264:	fb94 f4f0 	sdiv	r4, r4, r0
 8025268:	4610      	mov	r0, r2
 802526a:	9201      	str	r2, [sp, #4]
 802526c:	f7ea feba 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025270:	a903      	add	r1, sp, #12
 8025272:	9003      	str	r0, [sp, #12]
 8025274:	4650      	mov	r0, sl
 8025276:	f7ea fd7d 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802527a:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802527e:	9a01      	ldr	r2, [sp, #4]
 8025280:	4408      	add	r0, r1
 8025282:	f8d9 1000 	ldr.w	r1, [r9]
 8025286:	1b03      	subs	r3, r0, r4
 8025288:	4299      	cmp	r1, r3
 802528a:	bfc8      	it	gt
 802528c:	f8c9 3000 	strgt.w	r3, [r9]
 8025290:	6839      	ldr	r1, [r7, #0]
 8025292:	428b      	cmp	r3, r1
 8025294:	bfc8      	it	gt
 8025296:	603b      	strgt	r3, [r7, #0]
 8025298:	f8d9 1000 	ldr.w	r1, [r9]
 802529c:	4420      	add	r0, r4
 802529e:	4281      	cmp	r1, r0
 80252a0:	bfc8      	it	gt
 80252a2:	f8c9 0000 	strgt.w	r0, [r9]
 80252a6:	6839      	ldr	r1, [r7, #0]
 80252a8:	4288      	cmp	r0, r1
 80252aa:	bfc8      	it	gt
 80252ac:	6038      	strgt	r0, [r7, #0]
 80252ae:	4610      	mov	r0, r2
 80252b0:	f7ff feea 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80252b4:	a903      	add	r1, sp, #12
 80252b6:	9003      	str	r0, [sp, #12]
 80252b8:	4650      	mov	r0, sl
 80252ba:	f7ea fd5b 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80252be:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80252c2:	1a10      	subs	r0, r2, r0
 80252c4:	6832      	ldr	r2, [r6, #0]
 80252c6:	1b01      	subs	r1, r0, r4
 80252c8:	428a      	cmp	r2, r1
 80252ca:	bfc8      	it	gt
 80252cc:	6031      	strgt	r1, [r6, #0]
 80252ce:	682a      	ldr	r2, [r5, #0]
 80252d0:	4291      	cmp	r1, r2
 80252d2:	bfc8      	it	gt
 80252d4:	6029      	strgt	r1, [r5, #0]
 80252d6:	6832      	ldr	r2, [r6, #0]
 80252d8:	4420      	add	r0, r4
 80252da:	4282      	cmp	r2, r0
 80252dc:	bfc8      	it	gt
 80252de:	6030      	strgt	r0, [r6, #0]
 80252e0:	682a      	ldr	r2, [r5, #0]
 80252e2:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80252e6:	4290      	cmp	r0, r2
 80252e8:	fb9b f2f1 	sdiv	r2, fp, r1
 80252ec:	fb01 b212 	mls	r2, r1, r2, fp
 80252f0:	eba1 0202 	sub.w	r2, r1, r2
 80252f4:	bfc8      	it	gt
 80252f6:	6028      	strgt	r0, [r5, #0]
 80252f8:	fb92 f0f1 	sdiv	r0, r2, r1
 80252fc:	fb01 2210 	mls	r2, r1, r0, r2
 8025300:	4493      	add	fp, r2
 8025302:	9b00      	ldr	r3, [sp, #0]
 8025304:	455b      	cmp	r3, fp
 8025306:	db40      	blt.n	802538a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8025308:	4658      	mov	r0, fp
 802530a:	f7ea fe6b 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802530e:	a903      	add	r1, sp, #12
 8025310:	9003      	str	r0, [sp, #12]
 8025312:	4650      	mov	r0, sl
 8025314:	f7ea fd2e 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025318:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802531c:	4410      	add	r0, r2
 802531e:	f8d9 2000 	ldr.w	r2, [r9]
 8025322:	1b01      	subs	r1, r0, r4
 8025324:	428a      	cmp	r2, r1
 8025326:	bfc8      	it	gt
 8025328:	f8c9 1000 	strgt.w	r1, [r9]
 802532c:	683a      	ldr	r2, [r7, #0]
 802532e:	4291      	cmp	r1, r2
 8025330:	bfc8      	it	gt
 8025332:	6039      	strgt	r1, [r7, #0]
 8025334:	f8d9 2000 	ldr.w	r2, [r9]
 8025338:	4420      	add	r0, r4
 802533a:	4282      	cmp	r2, r0
 802533c:	bfc8      	it	gt
 802533e:	f8c9 0000 	strgt.w	r0, [r9]
 8025342:	683a      	ldr	r2, [r7, #0]
 8025344:	4290      	cmp	r0, r2
 8025346:	bfc8      	it	gt
 8025348:	6038      	strgt	r0, [r7, #0]
 802534a:	4658      	mov	r0, fp
 802534c:	f7ff fe9c 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025350:	a903      	add	r1, sp, #12
 8025352:	9003      	str	r0, [sp, #12]
 8025354:	4650      	mov	r0, sl
 8025356:	f7ea fd0d 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802535a:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802535e:	1a10      	subs	r0, r2, r0
 8025360:	6832      	ldr	r2, [r6, #0]
 8025362:	1b01      	subs	r1, r0, r4
 8025364:	428a      	cmp	r2, r1
 8025366:	bfc8      	it	gt
 8025368:	6031      	strgt	r1, [r6, #0]
 802536a:	682a      	ldr	r2, [r5, #0]
 802536c:	4291      	cmp	r1, r2
 802536e:	bfc8      	it	gt
 8025370:	6029      	strgt	r1, [r5, #0]
 8025372:	6832      	ldr	r2, [r6, #0]
 8025374:	4420      	add	r0, r4
 8025376:	4282      	cmp	r2, r0
 8025378:	bfc8      	it	gt
 802537a:	6030      	strgt	r0, [r6, #0]
 802537c:	682a      	ldr	r2, [r5, #0]
 802537e:	4290      	cmp	r0, r2
 8025380:	bfc8      	it	gt
 8025382:	6028      	strgt	r0, [r5, #0]
 8025384:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8025388:	e7bb      	b.n	8025302 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802538a:	9b00      	ldr	r3, [sp, #0]
 802538c:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8025390:	455b      	cmp	r3, fp
 8025392:	f77f af62 	ble.w	802525a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8025396:	4618      	mov	r0, r3
 8025398:	f7ea fe24 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802539c:	a903      	add	r1, sp, #12
 802539e:	9003      	str	r0, [sp, #12]
 80253a0:	4650      	mov	r0, sl
 80253a2:	f7ea fce7 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80253a6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80253aa:	4410      	add	r0, r2
 80253ac:	f8d9 2000 	ldr.w	r2, [r9]
 80253b0:	1b01      	subs	r1, r0, r4
 80253b2:	428a      	cmp	r2, r1
 80253b4:	bfc8      	it	gt
 80253b6:	f8c9 1000 	strgt.w	r1, [r9]
 80253ba:	683a      	ldr	r2, [r7, #0]
 80253bc:	4291      	cmp	r1, r2
 80253be:	bfc8      	it	gt
 80253c0:	6039      	strgt	r1, [r7, #0]
 80253c2:	f8d9 2000 	ldr.w	r2, [r9]
 80253c6:	4420      	add	r0, r4
 80253c8:	4282      	cmp	r2, r0
 80253ca:	bfc8      	it	gt
 80253cc:	f8c9 0000 	strgt.w	r0, [r9]
 80253d0:	683b      	ldr	r3, [r7, #0]
 80253d2:	4298      	cmp	r0, r3
 80253d4:	bfc8      	it	gt
 80253d6:	6038      	strgt	r0, [r7, #0]
 80253d8:	9800      	ldr	r0, [sp, #0]
 80253da:	f7ff fe55 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80253de:	a903      	add	r1, sp, #12
 80253e0:	9003      	str	r0, [sp, #12]
 80253e2:	4650      	mov	r0, sl
 80253e4:	f7ea fcc6 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80253e8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80253ec:	6832      	ldr	r2, [r6, #0]
 80253ee:	1a18      	subs	r0, r3, r0
 80253f0:	1b03      	subs	r3, r0, r4
 80253f2:	429a      	cmp	r2, r3
 80253f4:	bfc8      	it	gt
 80253f6:	6033      	strgt	r3, [r6, #0]
 80253f8:	682a      	ldr	r2, [r5, #0]
 80253fa:	4293      	cmp	r3, r2
 80253fc:	bfc8      	it	gt
 80253fe:	602b      	strgt	r3, [r5, #0]
 8025400:	6833      	ldr	r3, [r6, #0]
 8025402:	4404      	add	r4, r0
 8025404:	42a3      	cmp	r3, r4
 8025406:	bfc8      	it	gt
 8025408:	6034      	strgt	r4, [r6, #0]
 802540a:	682b      	ldr	r3, [r5, #0]
 802540c:	429c      	cmp	r4, r3
 802540e:	bfc8      	it	gt
 8025410:	602c      	strgt	r4, [r5, #0]
 8025412:	e722      	b.n	802525a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08025414 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8025414:	b530      	push	{r4, r5, lr}
 8025416:	4604      	mov	r4, r0
 8025418:	4608      	mov	r0, r1
 802541a:	4611      	mov	r1, r2
 802541c:	461a      	mov	r2, r3
 802541e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8025422:	b089      	sub	sp, #36	; 0x24
 8025424:	015b      	lsls	r3, r3, #5
 8025426:	9304      	str	r3, [sp, #16]
 8025428:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802542c:	2500      	movs	r5, #0
 802542e:	015b      	lsls	r3, r3, #5
 8025430:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8025434:	ab07      	add	r3, sp, #28
 8025436:	9302      	str	r3, [sp, #8]
 8025438:	ab06      	add	r3, sp, #24
 802543a:	9301      	str	r3, [sp, #4]
 802543c:	ab05      	add	r3, sp, #20
 802543e:	9300      	str	r3, [sp, #0]
 8025440:	ab04      	add	r3, sp, #16
 8025442:	9505      	str	r5, [sp, #20]
 8025444:	f7ff fe3e 	bl	80250c4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8025448:	2520      	movs	r5, #32
 802544a:	9a04      	ldr	r2, [sp, #16]
 802544c:	9805      	ldr	r0, [sp, #20]
 802544e:	fb92 f2f5 	sdiv	r2, r2, r5
 8025452:	fb90 f0f5 	sdiv	r0, r0, r5
 8025456:	b292      	uxth	r2, r2
 8025458:	3002      	adds	r0, #2
 802545a:	1a80      	subs	r0, r0, r2
 802545c:	9b06      	ldr	r3, [sp, #24]
 802545e:	9907      	ldr	r1, [sp, #28]
 8025460:	fb93 f3f5 	sdiv	r3, r3, r5
 8025464:	fb91 f1f5 	sdiv	r1, r1, r5
 8025468:	b29b      	uxth	r3, r3
 802546a:	3102      	adds	r1, #2
 802546c:	1ac9      	subs	r1, r1, r3
 802546e:	3a01      	subs	r2, #1
 8025470:	3b01      	subs	r3, #1
 8025472:	80a0      	strh	r0, [r4, #4]
 8025474:	4620      	mov	r0, r4
 8025476:	8022      	strh	r2, [r4, #0]
 8025478:	8063      	strh	r3, [r4, #2]
 802547a:	80e1      	strh	r1, [r4, #6]
 802547c:	b009      	add	sp, #36	; 0x24
 802547e:	bd30      	pop	{r4, r5, pc}

08025480 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8025480:	b510      	push	{r4, lr}
 8025482:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8025486:	4604      	mov	r4, r0
 8025488:	f7ff ffc4 	bl	8025414 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802548c:	4620      	mov	r0, r4
 802548e:	bd10      	pop	{r4, pc}

08025490 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8025490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025492:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8025496:	4606      	mov	r6, r0
 8025498:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802549c:	6813      	ldr	r3, [r2, #0]
 802549e:	42a5      	cmp	r5, r4
 80254a0:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80254a4:	da2b      	bge.n	80254fe <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80254a6:	42a3      	cmp	r3, r4
 80254a8:	dd14      	ble.n	80254d4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80254aa:	b168      	cbz	r0, 80254c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80254ac:	4267      	negs	r7, r4
 80254ae:	fb97 f2f0 	sdiv	r2, r7, r0
 80254b2:	fb00 7212 	mls	r2, r0, r2, r7
 80254b6:	1a82      	subs	r2, r0, r2
 80254b8:	fb92 f7f0 	sdiv	r7, r2, r0
 80254bc:	fb00 2017 	mls	r0, r0, r7, r2
 80254c0:	1a24      	subs	r4, r4, r0
 80254c2:	42ac      	cmp	r4, r5
 80254c4:	bfb8      	it	lt
 80254c6:	462c      	movlt	r4, r5
 80254c8:	4630      	mov	r0, r6
 80254ca:	4622      	mov	r2, r4
 80254cc:	f7ff ffa2 	bl	8025414 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80254d0:	4630      	mov	r0, r6
 80254d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80254d4:	42ab      	cmp	r3, r5
 80254d6:	dd0e      	ble.n	80254f6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80254d8:	b168      	cbz	r0, 80254f6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80254da:	425f      	negs	r7, r3
 80254dc:	fb97 f2f0 	sdiv	r2, r7, r0
 80254e0:	fb00 7212 	mls	r2, r0, r2, r7
 80254e4:	1a82      	subs	r2, r0, r2
 80254e6:	fb92 f7f0 	sdiv	r7, r2, r0
 80254ea:	fb00 2017 	mls	r0, r0, r7, r2
 80254ee:	1a1b      	subs	r3, r3, r0
 80254f0:	42ab      	cmp	r3, r5
 80254f2:	bfb8      	it	lt
 80254f4:	462b      	movlt	r3, r5
 80254f6:	4622      	mov	r2, r4
 80254f8:	461c      	mov	r4, r3
 80254fa:	4613      	mov	r3, r2
 80254fc:	e7e4      	b.n	80254c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80254fe:	42a3      	cmp	r3, r4
 8025500:	da10      	bge.n	8025524 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8025502:	b148      	cbz	r0, 8025518 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8025504:	fb94 f2f0 	sdiv	r2, r4, r0
 8025508:	fb00 4212 	mls	r2, r0, r2, r4
 802550c:	1a82      	subs	r2, r0, r2
 802550e:	fb92 f7f0 	sdiv	r7, r2, r0
 8025512:	fb00 2017 	mls	r0, r0, r7, r2
 8025516:	4404      	add	r4, r0
 8025518:	42a5      	cmp	r5, r4
 802551a:	bfa8      	it	ge
 802551c:	4625      	movge	r5, r4
 802551e:	461c      	mov	r4, r3
 8025520:	462b      	mov	r3, r5
 8025522:	e7d1      	b.n	80254c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8025524:	42ab      	cmp	r3, r5
 8025526:	dacf      	bge.n	80254c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8025528:	2800      	cmp	r0, #0
 802552a:	d0cd      	beq.n	80254c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802552c:	fb93 f2f0 	sdiv	r2, r3, r0
 8025530:	fb00 3212 	mls	r2, r0, r2, r3
 8025534:	1a82      	subs	r2, r0, r2
 8025536:	fb92 f7f0 	sdiv	r7, r2, r0
 802553a:	fb00 2017 	mls	r0, r0, r7, r2
 802553e:	4403      	add	r3, r0
 8025540:	42ab      	cmp	r3, r5
 8025542:	bfa8      	it	ge
 8025544:	462b      	movge	r3, r5
 8025546:	e7bf      	b.n	80254c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08025548 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8025548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802554c:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8025550:	42ae      	cmp	r6, r5
 8025552:	bfa2      	ittt	ge
 8025554:	4633      	movge	r3, r6
 8025556:	462e      	movge	r6, r5
 8025558:	461d      	movge	r5, r3
 802555a:	1bab      	subs	r3, r5, r6
 802555c:	468b      	mov	fp, r1
 802555e:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8025560:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8025564:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8025568:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802556c:	f04f 0220 	mov.w	r2, #32
 8025570:	b0ab      	sub	sp, #172	; 0xac
 8025572:	4604      	mov	r4, r0
 8025574:	bfa4      	itt	ge
 8025576:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802557a:	2600      	movge	r6, #0
 802557c:	fb99 f9f2 	sdiv	r9, r9, r2
 8025580:	fb9a faf2 	sdiv	sl, sl, r2
 8025584:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8025586:	2900      	cmp	r1, #0
 8025588:	f000 80f5 	beq.w	8025776 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802558c:	f9bb 0000 	ldrsh.w	r0, [fp]
 8025590:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8025594:	eba9 0700 	sub.w	r7, r9, r0
 8025598:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 802559c:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80255a0:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80255a4:	ebaa 0802 	sub.w	r8, sl, r2
 80255a8:	4407      	add	r7, r0
 80255aa:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80255ae:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 80255b2:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80255b6:	b23f      	sxth	r7, r7
 80255b8:	4490      	add	r8, r2
 80255ba:	eba9 0707 	sub.w	r7, r9, r7
 80255be:	fa0f f888 	sxth.w	r8, r8
 80255c2:	ebaa 0808 	sub.w	r8, sl, r8
 80255c6:	2f00      	cmp	r7, #0
 80255c8:	bfb8      	it	lt
 80255ca:	427f      	neglt	r7, r7
 80255cc:	f1b8 0f00 	cmp.w	r8, #0
 80255d0:	bfb8      	it	lt
 80255d2:	f1c8 0800 	rsblt	r8, r8, #0
 80255d6:	45bc      	cmp	ip, r7
 80255d8:	bfcc      	ite	gt
 80255da:	f10c 0701 	addgt.w	r7, ip, #1
 80255de:	3701      	addle	r7, #1
 80255e0:	4540      	cmp	r0, r8
 80255e2:	bfc8      	it	gt
 80255e4:	f100 0801 	addgt.w	r8, r0, #1
 80255e8:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80255ec:	f100 0001 	add.w	r0, r0, #1
 80255f0:	ea4f 0060 	mov.w	r0, r0, asr #1
 80255f4:	f04f 0202 	mov.w	r2, #2
 80255f8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80255fc:	fb91 f1f2 	sdiv	r1, r1, r2
 8025600:	eba3 0301 	sub.w	r3, r3, r1
 8025604:	bfd8      	it	le
 8025606:	f108 0801 	addle.w	r8, r8, #1
 802560a:	9201      	str	r2, [sp, #4]
 802560c:	930d      	str	r3, [sp, #52]	; 0x34
 802560e:	f7ea fcc9 	bl	800ffa4 <_ZN8touchgfx7CWRUtil4sineEi>
 8025612:	a92a      	add	r1, sp, #168	; 0xa8
 8025614:	fb08 f808 	mul.w	r8, r8, r8
 8025618:	f841 0d70 	str.w	r0, [r1, #-112]!
 802561c:	a80d      	add	r0, sp, #52	; 0x34
 802561e:	f7ea fba9 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025622:	fb07 8707 	mla	r7, r7, r7, r8
 8025626:	f04f 0c20 	mov.w	ip, #32
 802562a:	fb90 f0fc 	sdiv	r0, r0, ip
 802562e:	4340      	muls	r0, r0
 8025630:	4287      	cmp	r7, r0
 8025632:	9a01      	ldr	r2, [sp, #4]
 8025634:	da04      	bge.n	8025640 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8025636:	2401      	movs	r4, #1
 8025638:	4620      	mov	r0, r4
 802563a:	b02b      	add	sp, #172	; 0xac
 802563c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025640:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8025642:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8025644:	fb91 f3f2 	sdiv	r3, r1, r2
 8025648:	4403      	add	r3, r0
 802564a:	fb93 f3fc 	sdiv	r3, r3, ip
 802564e:	f9bb 1000 	ldrsh.w	r1, [fp]
 8025652:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8025656:	440a      	add	r2, r1
 8025658:	b212      	sxth	r2, r2
 802565a:	454a      	cmp	r2, r9
 802565c:	bfa8      	it	ge
 802565e:	464a      	movge	r2, r9
 8025660:	428a      	cmp	r2, r1
 8025662:	bfac      	ite	ge
 8025664:	eba9 0902 	subge.w	r9, r9, r2
 8025668:	eba9 0901 	sublt.w	r9, r9, r1
 802566c:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8025670:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8025674:	440a      	add	r2, r1
 8025676:	b212      	sxth	r2, r2
 8025678:	4552      	cmp	r2, sl
 802567a:	bfa8      	it	ge
 802567c:	4652      	movge	r2, sl
 802567e:	428a      	cmp	r2, r1
 8025680:	bfac      	ite	ge
 8025682:	ebaa 0a02 	subge.w	sl, sl, r2
 8025686:	ebaa 0a01 	sublt.w	sl, sl, r1
 802568a:	3301      	adds	r3, #1
 802568c:	fb0a fa0a 	mul.w	sl, sl, sl
 8025690:	fb09 a909 	mla	r9, r9, r9, sl
 8025694:	435b      	muls	r3, r3
 8025696:	4599      	cmp	r9, r3
 8025698:	dccd      	bgt.n	8025636 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802569a:	465a      	mov	r2, fp
 802569c:	4621      	mov	r1, r4
 802569e:	a80e      	add	r0, sp, #56	; 0x38
 80256a0:	f7ff faae 	bl	8024c00 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80256a4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80256a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80256a8:	9209      	str	r2, [sp, #36]	; 0x24
 80256aa:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80256ae:	930a      	str	r3, [sp, #40]	; 0x28
 80256b0:	dd07      	ble.n	80256c2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 80256b2:	2102      	movs	r1, #2
 80256b4:	fb93 f3f1 	sdiv	r3, r3, r1
 80256b8:	4413      	add	r3, r2
 80256ba:	930a      	str	r3, [sp, #40]	; 0x28
 80256bc:	fb93 f3f1 	sdiv	r3, r3, r1
 80256c0:	9309      	str	r3, [sp, #36]	; 0x24
 80256c2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80256c6:	4630      	mov	r0, r6
 80256c8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80256cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80256ce:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 80256d2:	f7ea fc87 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80256d6:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 80256da:	f04f 0a02 	mov.w	sl, #2
 80256de:	f849 0d74 	str.w	r0, [r9, #-116]!
 80256e2:	a80b      	add	r0, sp, #44	; 0x2c
 80256e4:	4649      	mov	r1, r9
 80256e6:	f7ea fb45 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80256ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80256ec:	fb90 f0fa 	sdiv	r0, r0, sl
 80256f0:	eb00 0b03 	add.w	fp, r0, r3
 80256f4:	4630      	mov	r0, r6
 80256f6:	f7ff fcc7 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80256fa:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 80256fe:	017f      	lsls	r7, r7, #5
 8025700:	f848 0d78 	str.w	r0, [r8, #-120]!
 8025704:	a80b      	add	r0, sp, #44	; 0x2c
 8025706:	4641      	mov	r1, r8
 8025708:	f7ea fb34 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802570c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802570e:	fb90 f0fa 	sdiv	r0, r0, sl
 8025712:	4659      	mov	r1, fp
 8025714:	1a12      	subs	r2, r2, r0
 8025716:	a80e      	add	r0, sp, #56	; 0x38
 8025718:	f7ff fbf2 	bl	8024f00 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802571c:	f106 0a20 	add.w	sl, r6, #32
 8025720:	bb67      	cbnz	r7, 802577c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8025722:	46b3      	mov	fp, r6
 8025724:	45aa      	cmp	sl, r5
 8025726:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025728:	dc33      	bgt.n	8025792 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802572a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802572c:	4650      	mov	r0, sl
 802572e:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8025732:	920b      	str	r2, [sp, #44]	; 0x2c
 8025734:	f7ea fc56 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025738:	4641      	mov	r1, r8
 802573a:	900c      	str	r0, [sp, #48]	; 0x30
 802573c:	a80b      	add	r0, sp, #44	; 0x2c
 802573e:	f7ea fb19 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025742:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8025744:	2302      	movs	r3, #2
 8025746:	fb90 f0f3 	sdiv	r0, r0, r3
 802574a:	eb00 0b02 	add.w	fp, r0, r2
 802574e:	4650      	mov	r0, sl
 8025750:	f7ff fc9a 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025754:	4649      	mov	r1, r9
 8025756:	900d      	str	r0, [sp, #52]	; 0x34
 8025758:	a80b      	add	r0, sp, #44	; 0x2c
 802575a:	f7ea fb0b 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802575e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8025760:	2302      	movs	r3, #2
 8025762:	4659      	mov	r1, fp
 8025764:	fb90 f0f3 	sdiv	r0, r0, r3
 8025768:	1a12      	subs	r2, r2, r0
 802576a:	a80e      	add	r0, sp, #56	; 0x38
 802576c:	46d3      	mov	fp, sl
 802576e:	f7ff fc14 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8025772:	44ba      	add	sl, r7
 8025774:	e7d6      	b.n	8025724 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8025776:	fb93 f3f2 	sdiv	r3, r3, r2
 802577a:	e768      	b.n	802564e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802577c:	fb9a f2f7 	sdiv	r2, sl, r7
 8025780:	fb07 a212 	mls	r2, r7, r2, sl
 8025784:	1aba      	subs	r2, r7, r2
 8025786:	fb92 f1f7 	sdiv	r1, r2, r7
 802578a:	fb07 2211 	mls	r2, r7, r1, r2
 802578e:	4492      	add	sl, r2
 8025790:	e7c7      	b.n	8025722 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8025792:	45ab      	cmp	fp, r5
 8025794:	da23      	bge.n	80257de <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8025796:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025798:	4628      	mov	r0, r5
 802579a:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802579e:	920b      	str	r2, [sp, #44]	; 0x2c
 80257a0:	f7ea fc20 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80257a4:	4641      	mov	r1, r8
 80257a6:	900c      	str	r0, [sp, #48]	; 0x30
 80257a8:	a80b      	add	r0, sp, #44	; 0x2c
 80257aa:	f7ea fae3 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80257ae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80257b0:	f04f 0a02 	mov.w	sl, #2
 80257b4:	fb90 f0fa 	sdiv	r0, r0, sl
 80257b8:	4403      	add	r3, r0
 80257ba:	4628      	mov	r0, r5
 80257bc:	9301      	str	r3, [sp, #4]
 80257be:	f7ff fc63 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80257c2:	4649      	mov	r1, r9
 80257c4:	900d      	str	r0, [sp, #52]	; 0x34
 80257c6:	a80b      	add	r0, sp, #44	; 0x2c
 80257c8:	f7ea fad4 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80257cc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80257ce:	9b01      	ldr	r3, [sp, #4]
 80257d0:	fb90 f0fa 	sdiv	r0, r0, sl
 80257d4:	4619      	mov	r1, r3
 80257d6:	1a12      	subs	r2, r2, r0
 80257d8:	a80e      	add	r0, sp, #56	; 0x38
 80257da:	f7ff fbde 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80257de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80257e0:	b99b      	cbnz	r3, 802580a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 80257e2:	1bad      	subs	r5, r5, r6
 80257e4:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 80257e8:	da04      	bge.n	80257f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80257ea:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 80257ee:	a80e      	add	r0, sp, #56	; 0x38
 80257f0:	f7ff fbd3 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80257f4:	21ff      	movs	r1, #255	; 0xff
 80257f6:	a80e      	add	r0, sp, #56	; 0x38
 80257f8:	f7ff fabe 	bl	8024d78 <_ZN8touchgfx6Canvas6renderEh>
 80257fc:	4604      	mov	r4, r0
 80257fe:	4b8a      	ldr	r3, [pc, #552]	; (8025a28 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8025800:	930e      	str	r3, [sp, #56]	; 0x38
 8025802:	a816      	add	r0, sp, #88	; 0x58
 8025804:	f7eb ff22 	bl	801164c <_ZN8touchgfx7OutlineD1Ev>
 8025808:	e716      	b.n	8025638 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802580a:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802580e:	429a      	cmp	r2, r3
 8025810:	f0c0 8107 	bcc.w	8025a22 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8025814:	1bab      	subs	r3, r5, r6
 8025816:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802581a:	9301      	str	r3, [sp, #4]
 802581c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8025820:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8025824:	da43      	bge.n	80258ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8025826:	4628      	mov	r0, r5
 8025828:	f7ea fbdc 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802582c:	4649      	mov	r1, r9
 802582e:	900d      	str	r0, [sp, #52]	; 0x34
 8025830:	a809      	add	r0, sp, #36	; 0x24
 8025832:	f7ea fa9f 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025836:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8025838:	18c3      	adds	r3, r0, r3
 802583a:	4628      	mov	r0, r5
 802583c:	9303      	str	r3, [sp, #12]
 802583e:	f7ff fc23 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025842:	4649      	mov	r1, r9
 8025844:	900d      	str	r0, [sp, #52]	; 0x34
 8025846:	a809      	add	r0, sp, #36	; 0x24
 8025848:	f7ea fa94 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802584c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802584e:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8025852:	1a1b      	subs	r3, r3, r0
 8025854:	9302      	str	r3, [sp, #8]
 8025856:	9204      	str	r2, [sp, #16]
 8025858:	eb0a 0305 	add.w	r3, sl, r5
 802585c:	9a04      	ldr	r2, [sp, #16]
 802585e:	4293      	cmp	r3, r2
 8025860:	da25      	bge.n	80258ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8025862:	4618      	mov	r0, r3
 8025864:	9306      	str	r3, [sp, #24]
 8025866:	f7ea fbbd 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802586a:	4649      	mov	r1, r9
 802586c:	900d      	str	r0, [sp, #52]	; 0x34
 802586e:	a80a      	add	r0, sp, #40	; 0x28
 8025870:	f7ea fa80 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025874:	9b03      	ldr	r3, [sp, #12]
 8025876:	2202      	movs	r2, #2
 8025878:	fb90 f0f2 	sdiv	r0, r0, r2
 802587c:	18c3      	adds	r3, r0, r3
 802587e:	9305      	str	r3, [sp, #20]
 8025880:	9b06      	ldr	r3, [sp, #24]
 8025882:	9207      	str	r2, [sp, #28]
 8025884:	4618      	mov	r0, r3
 8025886:	f7ff fbff 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802588a:	a92a      	add	r1, sp, #168	; 0xa8
 802588c:	f841 0d78 	str.w	r0, [r1, #-120]!
 8025890:	a80a      	add	r0, sp, #40	; 0x28
 8025892:	f7ea fa6f 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025896:	9b02      	ldr	r3, [sp, #8]
 8025898:	9a07      	ldr	r2, [sp, #28]
 802589a:	9905      	ldr	r1, [sp, #20]
 802589c:	fb90 f2f2 	sdiv	r2, r0, r2
 80258a0:	a80e      	add	r0, sp, #56	; 0x38
 80258a2:	1a9a      	subs	r2, r3, r2
 80258a4:	f7ff fb79 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80258a8:	9b06      	ldr	r3, [sp, #24]
 80258aa:	4453      	add	r3, sl
 80258ac:	e7d6      	b.n	802585c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 80258ae:	45ab      	cmp	fp, r5
 80258b0:	da25      	bge.n	80258fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 80258b2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80258b6:	4628      	mov	r0, r5
 80258b8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80258bc:	930b      	str	r3, [sp, #44]	; 0x2c
 80258be:	f7ea fb91 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80258c2:	4641      	mov	r1, r8
 80258c4:	900c      	str	r0, [sp, #48]	; 0x30
 80258c6:	a80b      	add	r0, sp, #44	; 0x2c
 80258c8:	f7ea fa54 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80258cc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80258ce:	2202      	movs	r2, #2
 80258d0:	fb90 f0f2 	sdiv	r0, r0, r2
 80258d4:	eb00 0903 	add.w	r9, r0, r3
 80258d8:	4628      	mov	r0, r5
 80258da:	9202      	str	r2, [sp, #8]
 80258dc:	f7ff fbd4 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80258e0:	a92a      	add	r1, sp, #168	; 0xa8
 80258e2:	f841 0d74 	str.w	r0, [r1, #-116]!
 80258e6:	a80b      	add	r0, sp, #44	; 0x2c
 80258e8:	f7ea fa44 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80258ec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80258ee:	9a02      	ldr	r2, [sp, #8]
 80258f0:	fb90 f2f2 	sdiv	r2, r0, r2
 80258f4:	4649      	mov	r1, r9
 80258f6:	1a9a      	subs	r2, r3, r2
 80258f8:	a80e      	add	r0, sp, #56	; 0x38
 80258fa:	f7ff fb4e 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80258fe:	46d9      	mov	r9, fp
 8025900:	2502      	movs	r5, #2
 8025902:	45b1      	cmp	r9, r6
 8025904:	db25      	blt.n	8025952 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8025906:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802590a:	4648      	mov	r0, r9
 802590c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8025910:	930b      	str	r3, [sp, #44]	; 0x2c
 8025912:	f7ea fb67 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025916:	4641      	mov	r1, r8
 8025918:	900c      	str	r0, [sp, #48]	; 0x30
 802591a:	a80b      	add	r0, sp, #44	; 0x2c
 802591c:	f7ea fa2a 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025920:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8025922:	fb90 f0f5 	sdiv	r0, r0, r5
 8025926:	eb00 0b03 	add.w	fp, r0, r3
 802592a:	4648      	mov	r0, r9
 802592c:	f7ff fbac 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025930:	a90d      	add	r1, sp, #52	; 0x34
 8025932:	900d      	str	r0, [sp, #52]	; 0x34
 8025934:	a80b      	add	r0, sp, #44	; 0x2c
 8025936:	f7ea fa1d 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802593a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802593c:	fb90 f0f5 	sdiv	r0, r0, r5
 8025940:	4659      	mov	r1, fp
 8025942:	1a12      	subs	r2, r2, r0
 8025944:	a80e      	add	r0, sp, #56	; 0x38
 8025946:	46cb      	mov	fp, r9
 8025948:	f7ff fb27 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802594c:	eba9 0907 	sub.w	r9, r9, r7
 8025950:	e7d7      	b.n	8025902 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8025952:	455e      	cmp	r6, fp
 8025954:	da22      	bge.n	802599c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8025956:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802595a:	4630      	mov	r0, r6
 802595c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8025960:	930b      	str	r3, [sp, #44]	; 0x2c
 8025962:	f7ea fb3f 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025966:	4641      	mov	r1, r8
 8025968:	900c      	str	r0, [sp, #48]	; 0x30
 802596a:	a80b      	add	r0, sp, #44	; 0x2c
 802596c:	f7ea fa02 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025970:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8025972:	2502      	movs	r5, #2
 8025974:	fb90 f0f5 	sdiv	r0, r0, r5
 8025978:	4407      	add	r7, r0
 802597a:	4630      	mov	r0, r6
 802597c:	f7ff fb84 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025980:	a92a      	add	r1, sp, #168	; 0xa8
 8025982:	f841 0d74 	str.w	r0, [r1, #-116]!
 8025986:	a80b      	add	r0, sp, #44	; 0x2c
 8025988:	f7ea f9f4 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802598c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802598e:	fb90 f0f5 	sdiv	r0, r0, r5
 8025992:	4639      	mov	r1, r7
 8025994:	1a12      	subs	r2, r2, r0
 8025996:	a80e      	add	r0, sp, #56	; 0x38
 8025998:	f7ff faff 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802599c:	9b01      	ldr	r3, [sp, #4]
 802599e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80259a2:	f6bf af27 	bge.w	80257f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80259a6:	4630      	mov	r0, r6
 80259a8:	f7ea fb1c 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80259ac:	ad2a      	add	r5, sp, #168	; 0xa8
 80259ae:	f04f 0b02 	mov.w	fp, #2
 80259b2:	f845 0d74 	str.w	r0, [r5, #-116]!
 80259b6:	a809      	add	r0, sp, #36	; 0x24
 80259b8:	4629      	mov	r1, r5
 80259ba:	f7ea f9db 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80259be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80259c0:	eb00 0903 	add.w	r9, r0, r3
 80259c4:	4630      	mov	r0, r6
 80259c6:	f7ff fb5f 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80259ca:	4629      	mov	r1, r5
 80259cc:	900d      	str	r0, [sp, #52]	; 0x34
 80259ce:	a809      	add	r0, sp, #36	; 0x24
 80259d0:	f7ea f9d0 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80259d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80259d6:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 80259da:	eba3 0800 	sub.w	r8, r3, r0
 80259de:	4454      	add	r4, sl
 80259e0:	42a6      	cmp	r6, r4
 80259e2:	f77f af07 	ble.w	80257f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80259e6:	4620      	mov	r0, r4
 80259e8:	f7ea fafc 	bl	800ffe4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80259ec:	4629      	mov	r1, r5
 80259ee:	900d      	str	r0, [sp, #52]	; 0x34
 80259f0:	a80a      	add	r0, sp, #40	; 0x28
 80259f2:	f7ea f9bf 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80259f6:	fb90 f0fb 	sdiv	r0, r0, fp
 80259fa:	eb00 0709 	add.w	r7, r0, r9
 80259fe:	4620      	mov	r0, r4
 8025a00:	f7ff fb42 	bl	8025088 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025a04:	a90c      	add	r1, sp, #48	; 0x30
 8025a06:	900c      	str	r0, [sp, #48]	; 0x30
 8025a08:	a80a      	add	r0, sp, #40	; 0x28
 8025a0a:	f7ea f9b3 	bl	800fd74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025a0e:	4639      	mov	r1, r7
 8025a10:	fb90 f2fb 	sdiv	r2, r0, fp
 8025a14:	a80e      	add	r0, sp, #56	; 0x38
 8025a16:	eba8 0202 	sub.w	r2, r8, r2
 8025a1a:	f7ff fabe 	bl	8024f9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8025a1e:	4454      	add	r4, sl
 8025a20:	e7de      	b.n	80259e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8025a22:	2400      	movs	r4, #0
 8025a24:	e6eb      	b.n	80257fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8025a26:	bf00      	nop
 8025a28:	0802bbac 	.word	0x0802bbac

08025a2c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8025a2c:	b570      	push	{r4, r5, r6, lr}
 8025a2e:	790b      	ldrb	r3, [r1, #4]
 8025a30:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8025a34:	2b00      	cmp	r3, #0
 8025a36:	bf0c      	ite	eq
 8025a38:	2301      	moveq	r3, #1
 8025a3a:	2300      	movne	r3, #0
 8025a3c:	4604      	mov	r4, r0
 8025a3e:	460e      	mov	r6, r1
 8025a40:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8025a44:	d109      	bne.n	8025a5a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8025a46:	b14d      	cbz	r5, 8025a5c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8025a48:	7933      	ldrb	r3, [r6, #4]
 8025a4a:	2b01      	cmp	r3, #1
 8025a4c:	d10c      	bne.n	8025a68 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8025a4e:	6823      	ldr	r3, [r4, #0]
 8025a50:	4620      	mov	r0, r4
 8025a52:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8025a54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8025a58:	4718      	bx	r3
 8025a5a:	b12d      	cbz	r5, 8025a68 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8025a5c:	6823      	ldr	r3, [r4, #0]
 8025a5e:	4620      	mov	r0, r4
 8025a60:	695b      	ldr	r3, [r3, #20]
 8025a62:	4798      	blx	r3
 8025a64:	2d00      	cmp	r5, #0
 8025a66:	d1ef      	bne.n	8025a48 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8025a68:	bd70      	pop	{r4, r5, r6, pc}

08025a6a <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8025a6a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8025a6e:	4770      	bx	lr

08025a70 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8025a70:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8025a74:	4770      	bx	lr

08025a76 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8025a76:	6802      	ldr	r2, [r0, #0]
 8025a78:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8025a7c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8025a7e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8025a82:	4710      	bx	r2

08025a84 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8025a84:	6802      	ldr	r2, [r0, #0]
 8025a86:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8025a8a:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8025a8c:	eef0 0a40 	vmov.f32	s1, s0
 8025a90:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025a94:	4710      	bx	r2

08025a96 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8025a96:	6802      	ldr	r2, [r0, #0]
 8025a98:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8025a9c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8025a9e:	eeb0 1a40 	vmov.f32	s2, s0
 8025aa2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025aa6:	4710      	bx	r2

08025aa8 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8025aa8:	6802      	ldr	r2, [r0, #0]
 8025aaa:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8025aae:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8025ab0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8025ab4:	4710      	bx	r2

08025ab6 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8025ab6:	6802      	ldr	r2, [r0, #0]
 8025ab8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8025abc:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8025abe:	eef0 0a40 	vmov.f32	s1, s0
 8025ac2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025ac6:	4710      	bx	r2

08025ac8 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8025ac8:	6802      	ldr	r2, [r0, #0]
 8025aca:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8025ace:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8025ad0:	eeb0 1a40 	vmov.f32	s2, s0
 8025ad4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025ad8:	4710      	bx	r2

08025ada <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8025ada:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025ade:	4770      	bx	lr

08025ae0 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8025ae0:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8025ae4:	4770      	bx	lr

08025ae6 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8025ae6:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8025aea:	4770      	bx	lr

08025aec <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8025aec:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8025af0:	4770      	bx	lr

08025af2 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8025af2:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8025af6:	4770      	bx	lr

08025af8 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8025af8:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8025afc:	4770      	bx	lr

08025afe <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8025afe:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8025b02:	4770      	bx	lr

08025b04 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8025b04:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8025b08:	4770      	bx	lr

08025b0a <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8025b0a:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8025b0e:	4770      	bx	lr

08025b10 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8025b10:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8025b14:	4770      	bx	lr

08025b16 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8025b16:	ee07 2a90 	vmov	s15, r2
 8025b1a:	6803      	ldr	r3, [r0, #0]
 8025b1c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8025b20:	ee07 1a90 	vmov	s15, r1
 8025b24:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8025b28:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8025b2c:	4718      	bx	r3

08025b2e <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8025b2e:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8025b32:	4770      	bx	lr

08025b34 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8025b34:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8025b38:	4770      	bx	lr

08025b3a <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8025b3a:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8025b3e:	4770      	bx	lr

08025b40 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8025b40:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8025b44:	4770      	bx	lr

08025b46 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8025b46:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8025b4a:	4770      	bx	lr

08025b4c <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8025b4c:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8025b50:	4770      	bx	lr

08025b52 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8025b52:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8025b56:	4770      	bx	lr

08025b58 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8025b58:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8025b5c:	4770      	bx	lr

08025b5e <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8025b5e:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8025b62:	4770      	bx	lr

08025b64 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8025b64:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8025b68:	4770      	bx	lr

08025b6a <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8025b6a:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8025b6e:	4770      	bx	lr

08025b70 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8025b70:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8025b74:	4770      	bx	lr

08025b76 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8025b76:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8025b7a:	4770      	bx	lr

08025b7c <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8025b7c:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8025b80:	4770      	bx	lr

08025b82 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8025b82:	b510      	push	{r4, lr}
 8025b84:	ed2d 8b04 	vpush	{d8-d9}
 8025b88:	6803      	ldr	r3, [r0, #0]
 8025b8a:	4604      	mov	r4, r0
 8025b8c:	699b      	ldr	r3, [r3, #24]
 8025b8e:	eeb0 8a40 	vmov.f32	s16, s0
 8025b92:	eef0 8a60 	vmov.f32	s17, s1
 8025b96:	eeb0 9a41 	vmov.f32	s18, s2
 8025b9a:	4798      	blx	r3
 8025b9c:	6823      	ldr	r3, [r4, #0]
 8025b9e:	4620      	mov	r0, r4
 8025ba0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8025ba2:	eeb0 1a49 	vmov.f32	s2, s18
 8025ba6:	eef0 0a68 	vmov.f32	s1, s17
 8025baa:	eeb0 0a48 	vmov.f32	s0, s16
 8025bae:	4798      	blx	r3
 8025bb0:	ecbd 8b04 	vpop	{d8-d9}
 8025bb4:	6823      	ldr	r3, [r4, #0]
 8025bb6:	4620      	mov	r0, r4
 8025bb8:	699b      	ldr	r3, [r3, #24]
 8025bba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025bbe:	4718      	bx	r3

08025bc0 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8025bc0:	b510      	push	{r4, lr}
 8025bc2:	ed2d 8b02 	vpush	{d8}
 8025bc6:	6803      	ldr	r3, [r0, #0]
 8025bc8:	4604      	mov	r4, r0
 8025bca:	699b      	ldr	r3, [r3, #24]
 8025bcc:	eeb0 8a40 	vmov.f32	s16, s0
 8025bd0:	4798      	blx	r3
 8025bd2:	6823      	ldr	r3, [r4, #0]
 8025bd4:	4620      	mov	r0, r4
 8025bd6:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8025bda:	eeb0 0a48 	vmov.f32	s0, s16
 8025bde:	4798      	blx	r3
 8025be0:	ecbd 8b02 	vpop	{d8}
 8025be4:	6823      	ldr	r3, [r4, #0]
 8025be6:	4620      	mov	r0, r4
 8025be8:	699b      	ldr	r3, [r3, #24]
 8025bea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025bee:	4718      	bx	r3

08025bf0 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8025bf0:	2200      	movs	r2, #0
 8025bf2:	8002      	strh	r2, [r0, #0]
 8025bf4:	8042      	strh	r2, [r0, #2]
 8025bf6:	8082      	strh	r2, [r0, #4]
 8025bf8:	80c2      	strh	r2, [r0, #6]
 8025bfa:	4770      	bx	lr

08025bfc <_ZN8touchgfx13TextureMapperD1Ev>:
 8025bfc:	4770      	bx	lr

08025bfe <_ZN8touchgfx13TextureMapperD0Ev>:
 8025bfe:	b510      	push	{r4, lr}
 8025c00:	2190      	movs	r1, #144	; 0x90
 8025c02:	4604      	mov	r4, r0
 8025c04:	f000 fe1b 	bl	802683e <_ZdlPvj>
 8025c08:	4620      	mov	r0, r4
 8025c0a:	bd10      	pop	{r4, pc}

08025c0c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8025c0c:	b538      	push	{r3, r4, r5, lr}
 8025c0e:	2500      	movs	r5, #0
 8025c10:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8025c14:	2301      	movs	r3, #1
 8025c16:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8025c1a:	4b1f      	ldr	r3, [pc, #124]	; (8025c98 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8025c1c:	8085      	strh	r5, [r0, #4]
 8025c1e:	80c5      	strh	r5, [r0, #6]
 8025c20:	8105      	strh	r5, [r0, #8]
 8025c22:	8145      	strh	r5, [r0, #10]
 8025c24:	8185      	strh	r5, [r0, #12]
 8025c26:	81c5      	strh	r5, [r0, #14]
 8025c28:	8205      	strh	r5, [r0, #16]
 8025c2a:	8245      	strh	r5, [r0, #18]
 8025c2c:	61c5      	str	r5, [r0, #28]
 8025c2e:	8405      	strh	r5, [r0, #32]
 8025c30:	8445      	strh	r5, [r0, #34]	; 0x22
 8025c32:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8025c36:	6003      	str	r3, [r0, #0]
 8025c38:	880b      	ldrh	r3, [r1, #0]
 8025c3a:	84c3      	strh	r3, [r0, #38]	; 0x26
 8025c3c:	23ff      	movs	r3, #255	; 0xff
 8025c3e:	4604      	mov	r4, r0
 8025c40:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8025c44:	f7eb fb93 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8025c48:	4b14      	ldr	r3, [pc, #80]	; (8025c9c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8025c4a:	6023      	str	r3, [r4, #0]
 8025c4c:	2300      	movs	r3, #0
 8025c4e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8025c52:	4913      	ldr	r1, [pc, #76]	; (8025ca0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8025c54:	62e3      	str	r3, [r4, #44]	; 0x2c
 8025c56:	6323      	str	r3, [r4, #48]	; 0x30
 8025c58:	6363      	str	r3, [r4, #52]	; 0x34
 8025c5a:	63a3      	str	r3, [r4, #56]	; 0x38
 8025c5c:	63e3      	str	r3, [r4, #60]	; 0x3c
 8025c5e:	6463      	str	r3, [r4, #68]	; 0x44
 8025c60:	64a3      	str	r3, [r4, #72]	; 0x48
 8025c62:	6523      	str	r3, [r4, #80]	; 0x50
 8025c64:	6563      	str	r3, [r4, #84]	; 0x54
 8025c66:	65e3      	str	r3, [r4, #92]	; 0x5c
 8025c68:	6623      	str	r3, [r4, #96]	; 0x60
 8025c6a:	66a3      	str	r3, [r4, #104]	; 0x68
 8025c6c:	66e3      	str	r3, [r4, #108]	; 0x6c
 8025c6e:	6763      	str	r3, [r4, #116]	; 0x74
 8025c70:	67a3      	str	r3, [r4, #120]	; 0x78
 8025c72:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8025c76:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8025c7a:	230c      	movs	r3, #12
 8025c7c:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8025c80:	6422      	str	r2, [r4, #64]	; 0x40
 8025c82:	64e1      	str	r1, [r4, #76]	; 0x4c
 8025c84:	65a1      	str	r1, [r4, #88]	; 0x58
 8025c86:	6662      	str	r2, [r4, #100]	; 0x64
 8025c88:	6722      	str	r2, [r4, #112]	; 0x70
 8025c8a:	67e2      	str	r2, [r4, #124]	; 0x7c
 8025c8c:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8025c90:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8025c94:	4620      	mov	r0, r4
 8025c96:	bd38      	pop	{r3, r4, r5, pc}
 8025c98:	0802b654 	.word	0x0802b654
 8025c9c:	0802bc38 	.word	0x0802bc38
 8025ca0:	447a0000 	.word	0x447a0000

08025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8025ca4:	b570      	push	{r4, r5, r6, lr}
 8025ca6:	ed2d 8b04 	vpush	{d8-d9}
 8025caa:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8025cae:	add0      	add	r5, sp, #832	; 0x340
 8025cb0:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8025cb2:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8025cb6:	4604      	mov	r4, r0
 8025cb8:	4628      	mov	r0, r5
 8025cba:	f7f1 fa7f 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8025cbe:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8025cc0:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8025cc4:	4606      	mov	r6, r0
 8025cc6:	4628      	mov	r0, r5
 8025cc8:	f7f1 faac 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8025ccc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8025cd0:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8025cd4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8025cd6:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8025cda:	9312      	str	r3, [sp, #72]	; 0x48
 8025cdc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025ce0:	1c72      	adds	r2, r6, #1
 8025ce2:	3001      	adds	r0, #1
 8025ce4:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8025ce8:	ee07 2a90 	vmov	s15, r2
 8025cec:	ee06 0a90 	vmov	s13, r0
 8025cf0:	ee36 6a47 	vsub.f32	s12, s12, s14
 8025cf4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8025cf8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8025cfc:	ee77 7a86 	vadd.f32	s15, s15, s12
 8025d00:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8025d04:	9316      	str	r3, [sp, #88]	; 0x58
 8025d06:	931a      	str	r3, [sp, #104]	; 0x68
 8025d08:	931e      	str	r3, [sp, #120]	; 0x78
 8025d0a:	2300      	movs	r3, #0
 8025d0c:	9320      	str	r3, [sp, #128]	; 0x80
 8025d0e:	9321      	str	r3, [sp, #132]	; 0x84
 8025d10:	9322      	str	r3, [sp, #136]	; 0x88
 8025d12:	9324      	str	r3, [sp, #144]	; 0x90
 8025d14:	9325      	str	r3, [sp, #148]	; 0x94
 8025d16:	9326      	str	r3, [sp, #152]	; 0x98
 8025d18:	9328      	str	r3, [sp, #160]	; 0xa0
 8025d1a:	9329      	str	r3, [sp, #164]	; 0xa4
 8025d1c:	932a      	str	r3, [sp, #168]	; 0xa8
 8025d1e:	932c      	str	r3, [sp, #176]	; 0xb0
 8025d20:	932d      	str	r3, [sp, #180]	; 0xb4
 8025d22:	932e      	str	r3, [sp, #184]	; 0xb8
 8025d24:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8025d28:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8025d2c:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8025d30:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8025d34:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8025d38:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8025d3c:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8025d40:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8025d44:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8025d48:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8025d4c:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8025d50:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8025d54:	a830      	add	r0, sp, #192	; 0xc0
 8025d56:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8025d5a:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8025d5e:	f000 fc43 	bl	80265e8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025d62:	eeb1 0a49 	vneg.f32	s0, s18
 8025d66:	a830      	add	r0, sp, #192	; 0xc0
 8025d68:	f000 fd12 	bl	8026790 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025d6c:	eeb1 0a68 	vneg.f32	s0, s17
 8025d70:	f000 fd1c 	bl	80267ac <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025d74:	eeb1 0a48 	vneg.f32	s0, s16
 8025d78:	f000 fd27 	bl	80267ca <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8025d7c:	a840      	add	r0, sp, #256	; 0x100
 8025d7e:	f000 fc33 	bl	80265e8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025d82:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8025d86:	a840      	add	r0, sp, #256	; 0x100
 8025d88:	f000 fc86 	bl	8026698 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8025d8c:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8025d90:	f000 fcac 	bl	80266ec <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8025d94:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8025d98:	f000 fcd1 	bl	802673e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8025d9c:	a850      	add	r0, sp, #320	; 0x140
 8025d9e:	f000 fc23 	bl	80265e8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025da2:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8025da6:	a850      	add	r0, sp, #320	; 0x140
 8025da8:	f000 fd1e 	bl	80267e8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8025dac:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8025db0:	f000 fd26 	bl	8026800 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8025db4:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8025db8:	f000 fd2f 	bl	802681a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8025dbc:	a860      	add	r0, sp, #384	; 0x180
 8025dbe:	f000 fc13 	bl	80265e8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025dc2:	eeb0 0a49 	vmov.f32	s0, s18
 8025dc6:	a860      	add	r0, sp, #384	; 0x180
 8025dc8:	f000 fce2 	bl	8026790 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025dcc:	eeb0 0a68 	vmov.f32	s0, s17
 8025dd0:	f000 fcec 	bl	80267ac <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025dd4:	eeb0 0a48 	vmov.f32	s0, s16
 8025dd8:	f000 fcf7 	bl	80267ca <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8025ddc:	aa50      	add	r2, sp, #320	; 0x140
 8025dde:	a960      	add	r1, sp, #384	; 0x180
 8025de0:	a8b0      	add	r0, sp, #704	; 0x2c0
 8025de2:	f000 fc1b 	bl	802661c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025de6:	4628      	mov	r0, r5
 8025de8:	aa40      	add	r2, sp, #256	; 0x100
 8025dea:	a9b0      	add	r1, sp, #704	; 0x2c0
 8025dec:	f000 fc16 	bl	802661c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025df0:	4629      	mov	r1, r5
 8025df2:	aa30      	add	r2, sp, #192	; 0xc0
 8025df4:	a870      	add	r0, sp, #448	; 0x1c0
 8025df6:	f000 fc11 	bl	802661c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025dfa:	a880      	add	r0, sp, #512	; 0x200
 8025dfc:	f000 fbf4 	bl	80265e8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025e00:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8025e04:	a880      	add	r0, sp, #512	; 0x200
 8025e06:	eeb1 0a40 	vneg.f32	s0, s0
 8025e0a:	f000 fcc1 	bl	8026790 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025e0e:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8025e12:	a880      	add	r0, sp, #512	; 0x200
 8025e14:	eeb1 0a40 	vneg.f32	s0, s0
 8025e18:	f000 fcc8 	bl	80267ac <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025e1c:	a890      	add	r0, sp, #576	; 0x240
 8025e1e:	f000 fbe3 	bl	80265e8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025e22:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8025e26:	a890      	add	r0, sp, #576	; 0x240
 8025e28:	f000 fc26 	bl	8026678 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8025e2c:	a8a0      	add	r0, sp, #640	; 0x280
 8025e2e:	f000 fbdb 	bl	80265e8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025e32:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8025e36:	a8a0      	add	r0, sp, #640	; 0x280
 8025e38:	f000 fcaa 	bl	8026790 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025e3c:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8025e40:	f000 fcb4 	bl	80267ac <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025e44:	aa90      	add	r2, sp, #576	; 0x240
 8025e46:	a9a0      	add	r1, sp, #640	; 0x280
 8025e48:	a8b0      	add	r0, sp, #704	; 0x2c0
 8025e4a:	f000 fbe7 	bl	802661c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025e4e:	4628      	mov	r0, r5
 8025e50:	aa80      	add	r2, sp, #512	; 0x200
 8025e52:	a9b0      	add	r1, sp, #704	; 0x2c0
 8025e54:	f000 fbe2 	bl	802661c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025e58:	4629      	mov	r1, r5
 8025e5a:	aa70      	add	r2, sp, #448	; 0x1c0
 8025e5c:	4668      	mov	r0, sp
 8025e5e:	466d      	mov	r5, sp
 8025e60:	f000 fbdc 	bl	802661c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025e64:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8025e66:	ae70      	add	r6, sp, #448	; 0x1c0
 8025e68:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8025e6a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8025e6c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8025e6e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8025e70:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8025e72:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8025e76:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8025e7a:	2500      	movs	r5, #0
 8025e7c:	0129      	lsls	r1, r5, #4
 8025e7e:	ab20      	add	r3, sp, #128	; 0x80
 8025e80:	185e      	adds	r6, r3, r1
 8025e82:	ab10      	add	r3, sp, #64	; 0x40
 8025e84:	4419      	add	r1, r3
 8025e86:	a870      	add	r0, sp, #448	; 0x1c0
 8025e88:	f000 fb7e 	bl	8026588 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8025e8c:	3501      	adds	r5, #1
 8025e8e:	2d04      	cmp	r5, #4
 8025e90:	ed86 0a00 	vstr	s0, [r6]
 8025e94:	edc6 0a01 	vstr	s1, [r6, #4]
 8025e98:	ed86 1a02 	vstr	s2, [r6, #8]
 8025e9c:	edc6 1a03 	vstr	s3, [r6, #12]
 8025ea0:	d1ec      	bne.n	8025e7c <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8025ea2:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8025ea6:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8025eaa:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8025eae:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025eb2:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8025eb6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025eba:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8025ebe:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8025ec2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025ec6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025eca:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8025ece:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8025ed2:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8025ed6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025eda:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8025ede:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025ee2:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8025ee6:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8025eea:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025eee:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025ef2:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8025ef6:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8025efa:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8025efe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025f02:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8025f06:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025f0a:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8025f0e:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8025f12:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025f16:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025f1a:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8025f1e:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8025f22:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8025f26:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025f2a:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8025f2e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025f32:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8025f36:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8025f3a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8025f3e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8025f42:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8025f46:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8025f4a:	ecbd 8b04 	vpop	{d8-d9}
 8025f4e:	bd70      	pop	{r4, r5, r6, pc}

08025f50 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8025f50:	b510      	push	{r4, lr}
 8025f52:	4604      	mov	r4, r0
 8025f54:	f7eb fa0b 	bl	801136e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8025f58:	4620      	mov	r0, r4
 8025f5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025f5e:	f7ff bea1 	b.w	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025f62 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8025f62:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8025f66:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8025f6a:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8025f6e:	f7ff be99 	b.w	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025f72 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8025f72:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8025f76:	f7ff be95 	b.w	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025f7a <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8025f7a:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8025f7e:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8025f82:	f7ff be8f 	b.w	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025f86 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8025f86:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8025f8a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8025f8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025f92:	bfd8      	it	le
 8025f94:	eeb0 0a67 	vmovle.f32	s0, s15
 8025f98:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8025f9c:	f7ff be82 	b.w	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025fa0 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8025fa0:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8025fa4:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8025fa8:	f7ff be7c 	b.w	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025fac <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8025fac:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8025fb0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8025fb4:	f7ff be76 	b.w	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025fb8 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8025fb8:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8025fbc:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8025fc0:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8025fc4:	f7ff be6e 	b.w	8025ca4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025fc8 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8025fc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025fcc:	ed2d 8b04 	vpush	{d8-d9}
 8025fd0:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8025fd4:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8025fd8:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8025fdc:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8025fe0:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8025fe4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025fe8:	bf54      	ite	pl
 8025fea:	eeb0 0a69 	vmovpl.f32	s0, s19
 8025fee:	eeb0 0a48 	vmovmi.f32	s0, s16
 8025ff2:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8025ff6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025ffa:	bfd8      	it	le
 8025ffc:	eeb0 0a49 	vmovle.f32	s0, s18
 8026000:	eef4 8ac0 	vcmpe.f32	s17, s0
 8026004:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026008:	bfd8      	it	le
 802600a:	eeb0 0a68 	vmovle.f32	s0, s17
 802600e:	460c      	mov	r4, r1
 8026010:	4607      	mov	r7, r0
 8026012:	f000 fd09 	bl	8026a28 <floorf>
 8026016:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802601a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802601e:	bf58      	it	pl
 8026020:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8026024:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026028:	bf56      	itet	pl
 802602a:	ee10 3a10 	vmovpl	r3, s0
 802602e:	2600      	movmi	r6, #0
 8026030:	b21e      	sxthpl	r6, r3
 8026032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026036:	bfd8      	it	le
 8026038:	eeb0 8a69 	vmovle.f32	s16, s19
 802603c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8026040:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026044:	bf58      	it	pl
 8026046:	eeb0 8a49 	vmovpl.f32	s16, s18
 802604a:	eef4 8ac8 	vcmpe.f32	s17, s16
 802604e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026052:	bf54      	ite	pl
 8026054:	eeb0 0a68 	vmovpl.f32	s0, s17
 8026058:	eeb0 0a48 	vmovmi.f32	s0, s16
 802605c:	f000 fca2 	bl	80269a4 <ceilf>
 8026060:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8026064:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8026068:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802606c:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8026070:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8026074:	ee07 8a90 	vmov	s15, r8
 8026078:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802607c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026080:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026084:	bfd8      	it	le
 8026086:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802608a:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802608e:	bfdc      	itt	le
 8026090:	ee10 3a10 	vmovle	r3, s0
 8026094:	fa0f f883 	sxthle.w	r8, r3
 8026098:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802609c:	bf54      	ite	pl
 802609e:	eeb0 0a69 	vmovpl.f32	s0, s19
 80260a2:	eeb0 0a48 	vmovmi.f32	s0, s16
 80260a6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80260aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80260ae:	bfd8      	it	le
 80260b0:	eeb0 0a49 	vmovle.f32	s0, s18
 80260b4:	eef4 8ac0 	vcmpe.f32	s17, s0
 80260b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80260bc:	bfd8      	it	le
 80260be:	eeb0 0a68 	vmovle.f32	s0, s17
 80260c2:	f000 fcb1 	bl	8026a28 <floorf>
 80260c6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80260ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80260ce:	bf58      	it	pl
 80260d0:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80260d4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80260d8:	bf56      	itet	pl
 80260da:	ee10 3a10 	vmovpl	r3, s0
 80260de:	2500      	movmi	r5, #0
 80260e0:	b21d      	sxthpl	r5, r3
 80260e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80260e6:	bfd8      	it	le
 80260e8:	eeb0 8a69 	vmovle.f32	s16, s19
 80260ec:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80260f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80260f4:	bf58      	it	pl
 80260f6:	eeb0 8a49 	vmovpl.f32	s16, s18
 80260fa:	eef4 8ac8 	vcmpe.f32	s17, s16
 80260fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026102:	bf54      	ite	pl
 8026104:	eeb0 0a68 	vmovpl.f32	s0, s17
 8026108:	eeb0 0a48 	vmovmi.f32	s0, s16
 802610c:	f000 fc4a 	bl	80269a4 <ceilf>
 8026110:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8026114:	803e      	strh	r6, [r7, #0]
 8026116:	ee07 3a90 	vmov	s15, r3
 802611a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802611e:	807d      	strh	r5, [r7, #2]
 8026120:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026124:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026128:	bfd8      	it	le
 802612a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802612e:	eba8 0606 	sub.w	r6, r8, r6
 8026132:	bfdc      	itt	le
 8026134:	ee10 3a10 	vmovle	r3, s0
 8026138:	b21b      	sxthle	r3, r3
 802613a:	1b5d      	subs	r5, r3, r5
 802613c:	80be      	strh	r6, [r7, #4]
 802613e:	80fd      	strh	r5, [r7, #6]
 8026140:	ecbd 8b04 	vpop	{d8-d9}
 8026144:	4638      	mov	r0, r7
 8026146:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802614a <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802614a:	b513      	push	{r0, r1, r4, lr}
 802614c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8026150:	4604      	mov	r4, r0
 8026152:	b143      	cbz	r3, 8026166 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8026154:	4601      	mov	r1, r0
 8026156:	4668      	mov	r0, sp
 8026158:	f7ff ff36 	bl	8025fc8 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802615c:	6823      	ldr	r3, [r4, #0]
 802615e:	4669      	mov	r1, sp
 8026160:	691b      	ldr	r3, [r3, #16]
 8026162:	4620      	mov	r0, r4
 8026164:	4798      	blx	r3
 8026166:	b002      	add	sp, #8
 8026168:	bd10      	pop	{r4, pc}

0802616a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802616a:	4603      	mov	r3, r0
 802616c:	3026      	adds	r0, #38	; 0x26
 802616e:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8026172:	b90b      	cbnz	r3, 8026178 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8026174:	f7ef b82c 	b.w	80151d0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8026178:	f7ef b83a 	b.w	80151f0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802617c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802617c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026180:	ed2d 8b04 	vpush	{d8-d9}
 8026184:	4604      	mov	r4, r0
 8026186:	469b      	mov	fp, r3
 8026188:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802618c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8026190:	f9b1 6000 	ldrsh.w	r6, [r1]
 8026194:	8888      	ldrh	r0, [r1, #4]
 8026196:	b0b3      	sub	sp, #204	; 0xcc
 8026198:	4430      	add	r0, r6
 802619a:	b280      	uxth	r0, r0
 802619c:	9206      	str	r2, [sp, #24]
 802619e:	fa0f fe80 	sxth.w	lr, r0
 80261a2:	2200      	movs	r2, #0
 80261a4:	4596      	cmp	lr, r2
 80261a6:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 80261aa:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 80261ae:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 80261b2:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 80261b4:	9211      	str	r2, [sp, #68]	; 0x44
 80261b6:	f340 8129 	ble.w	802640c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80261ba:	45b4      	cmp	ip, r6
 80261bc:	f340 8126 	ble.w	802640c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80261c0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80261c4:	88ca      	ldrh	r2, [r1, #6]
 80261c6:	442a      	add	r2, r5
 80261c8:	b292      	uxth	r2, r2
 80261ca:	b211      	sxth	r1, r2
 80261cc:	2900      	cmp	r1, #0
 80261ce:	f340 811d 	ble.w	802640c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80261d2:	42ab      	cmp	r3, r5
 80261d4:	f340 811a 	ble.w	802640c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80261d8:	45f4      	cmp	ip, lr
 80261da:	bfb8      	it	lt
 80261dc:	fa1f f08c 	uxthlt.w	r0, ip
 80261e0:	428b      	cmp	r3, r1
 80261e2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80261e6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80261ea:	bfb8      	it	lt
 80261ec:	b29a      	uxthlt	r2, r3
 80261ee:	1b80      	subs	r0, r0, r6
 80261f0:	1b52      	subs	r2, r2, r5
 80261f2:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80261f6:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80261fa:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80261fe:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8026202:	ab11      	add	r3, sp, #68	; 0x44
 8026204:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026208:	6822      	ldr	r2, [r4, #0]
 802620a:	9307      	str	r3, [sp, #28]
 802620c:	ad13      	add	r5, sp, #76	; 0x4c
 802620e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8026210:	e885 0003 	stmia.w	r5, {r0, r1}
 8026214:	4629      	mov	r1, r5
 8026216:	4620      	mov	r0, r4
 8026218:	4790      	blx	r2
 802621a:	4621      	mov	r1, r4
 802621c:	a815      	add	r0, sp, #84	; 0x54
 802621e:	f7ee ff33 	bl	8015088 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8026222:	a815      	add	r0, sp, #84	; 0x54
 8026224:	f7ed fbf8 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026228:	9b07      	ldr	r3, [sp, #28]
 802622a:	1d26      	adds	r6, r4, #4
 802622c:	4618      	mov	r0, r3
 802622e:	4631      	mov	r1, r6
 8026230:	f7ed fc36 	bl	8013aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026234:	4628      	mov	r0, r5
 8026236:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802623a:	f7ed fbed 	bl	8013a18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802623e:	4628      	mov	r0, r5
 8026240:	f7f1 f8a8 	bl	8017394 <_ZNK8touchgfx6Bitmap7getDataEv>
 8026244:	9007      	str	r0, [sp, #28]
 8026246:	2800      	cmp	r0, #0
 8026248:	f000 80db 	beq.w	8026402 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802624c:	f8db 2000 	ldr.w	r2, [fp]
 8026250:	9209      	str	r2, [sp, #36]	; 0x24
 8026252:	f8db 2004 	ldr.w	r2, [fp, #4]
 8026256:	920a      	str	r2, [sp, #40]	; 0x28
 8026258:	f8db 2008 	ldr.w	r2, [fp, #8]
 802625c:	920b      	str	r2, [sp, #44]	; 0x2c
 802625e:	f8db 200c 	ldr.w	r2, [fp, #12]
 8026262:	920c      	str	r2, [sp, #48]	; 0x30
 8026264:	f8da 2000 	ldr.w	r2, [sl]
 8026268:	920d      	str	r2, [sp, #52]	; 0x34
 802626a:	f8da 2004 	ldr.w	r2, [sl, #4]
 802626e:	920e      	str	r2, [sp, #56]	; 0x38
 8026270:	f8da 2008 	ldr.w	r2, [sl, #8]
 8026274:	920f      	str	r2, [sp, #60]	; 0x3c
 8026276:	f8da 200c 	ldr.w	r2, [sl, #12]
 802627a:	9210      	str	r2, [sp, #64]	; 0x40
 802627c:	a90d      	add	r1, sp, #52	; 0x34
 802627e:	4632      	mov	r2, r6
 8026280:	a809      	add	r0, sp, #36	; 0x24
 8026282:	f7ed fbf1 	bl	8013a68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026286:	4632      	mov	r2, r6
 8026288:	a90e      	add	r1, sp, #56	; 0x38
 802628a:	a80a      	add	r0, sp, #40	; 0x28
 802628c:	f7ed fbec 	bl	8013a68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026290:	4632      	mov	r2, r6
 8026292:	a90f      	add	r1, sp, #60	; 0x3c
 8026294:	a80b      	add	r0, sp, #44	; 0x2c
 8026296:	f7ed fbe7 	bl	8013a68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802629a:	4632      	mov	r2, r6
 802629c:	a910      	add	r1, sp, #64	; 0x40
 802629e:	a80c      	add	r0, sp, #48	; 0x30
 80262a0:	f7ed fbe2 	bl	8013a68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80262a4:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80262a8:	edd7 4a00 	vldr	s9, [r7]
 80262ac:	edd7 5a01 	vldr	s11, [r7, #4]
 80262b0:	ed98 4a00 	vldr	s8, [r8]
 80262b4:	ed98 5a01 	vldr	s10, [r8, #4]
 80262b8:	ed99 9a00 	vldr	s18, [r9]
 80262bc:	ed99 8a01 	vldr	s16, [r9, #4]
 80262c0:	edd9 8a02 	vldr	s17, [r9, #8]
 80262c4:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80262c8:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80262cc:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80262d0:	eef0 6a67 	vmov.f32	s13, s15
 80262d4:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80262d8:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80262dc:	eeb0 7a67 	vmov.f32	s14, s15
 80262e0:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80262e4:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80262e8:	eeb0 6a67 	vmov.f32	s12, s15
 80262ec:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80262f0:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80262f4:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80262f8:	ee16 6a10 	vmov	r6, s12
 80262fc:	eeb0 6a67 	vmov.f32	s12, s15
 8026300:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026304:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8026308:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802630c:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8026310:	68ff      	ldr	r7, [r7, #12]
 8026312:	9624      	str	r6, [sp, #144]	; 0x90
 8026314:	ee16 0a10 	vmov	r0, s12
 8026318:	eeb0 6a67 	vmov.f32	s12, s15
 802631c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026320:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8026324:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8026328:	ee16 1a10 	vmov	r1, s12
 802632c:	eeb0 6a67 	vmov.f32	s12, s15
 8026330:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026334:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8026338:	ee16 2a10 	vmov	r2, s12
 802633c:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8026340:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8026344:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8026348:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802634c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8026350:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8026354:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8026358:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802635c:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8026360:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8026364:	922d      	str	r2, [sp, #180]	; 0xb4
 8026366:	4a2b      	ldr	r2, [pc, #172]	; (8026414 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8026368:	9b06      	ldr	r3, [sp, #24]
 802636a:	8812      	ldrh	r2, [r2, #0]
 802636c:	9317      	str	r3, [sp, #92]	; 0x5c
 802636e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8026372:	9b07      	ldr	r3, [sp, #28]
 8026374:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8026378:	4628      	mov	r0, r5
 802637a:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802637e:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8026382:	9218      	str	r2, [sp, #96]	; 0x60
 8026384:	9319      	str	r3, [sp, #100]	; 0x64
 8026386:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802638a:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802638e:	9731      	str	r7, [sp, #196]	; 0xc4
 8026390:	f7f1 f830 	bl	80173f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8026394:	901a      	str	r0, [sp, #104]	; 0x68
 8026396:	4628      	mov	r0, r5
 8026398:	f7f0 ff10 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 802639c:	901b      	str	r0, [sp, #108]	; 0x6c
 802639e:	4628      	mov	r0, r5
 80263a0:	f7f0 ff40 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80263a4:	901c      	str	r0, [sp, #112]	; 0x70
 80263a6:	4628      	mov	r0, r5
 80263a8:	f7f0 ff08 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80263ac:	eeb4 9a48 	vcmp.f32	s18, s16
 80263b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80263b4:	901d      	str	r0, [sp, #116]	; 0x74
 80263b6:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80263ba:	d107      	bne.n	80263cc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80263bc:	eeb4 8a68 	vcmp.f32	s16, s17
 80263c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80263c4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80263c8:	bf08      	it	eq
 80263ca:	461e      	moveq	r6, r3
 80263cc:	4b12      	ldr	r3, [pc, #72]	; (8026418 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80263ce:	681b      	ldr	r3, [r3, #0]
 80263d0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80263d4:	b10a      	cbz	r2, 80263da <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80263d6:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80263d8:	b905      	cbnz	r5, 80263dc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80263da:	689d      	ldr	r5, [r3, #8]
 80263dc:	682b      	ldr	r3, [r5, #0]
 80263de:	4620      	mov	r0, r4
 80263e0:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80263e2:	f7ff fec2 	bl	802616a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80263e6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80263ea:	9604      	str	r6, [sp, #16]
 80263ec:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80263f0:	ab13      	add	r3, sp, #76	; 0x4c
 80263f2:	9301      	str	r3, [sp, #4]
 80263f4:	ab15      	add	r3, sp, #84	; 0x54
 80263f6:	9300      	str	r3, [sp, #0]
 80263f8:	aa1e      	add	r2, sp, #120	; 0x78
 80263fa:	ab19      	add	r3, sp, #100	; 0x64
 80263fc:	a917      	add	r1, sp, #92	; 0x5c
 80263fe:	4628      	mov	r0, r5
 8026400:	47b8      	blx	r7
 8026402:	b033      	add	sp, #204	; 0xcc
 8026404:	ecbd 8b04 	vpop	{d8-d9}
 8026408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802640c:	2300      	movs	r3, #0
 802640e:	9312      	str	r3, [sp, #72]	; 0x48
 8026410:	e6f7      	b.n	8026202 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8026412:	bf00      	nop
 8026414:	200137b6 	.word	0x200137b6
 8026418:	200137bc 	.word	0x200137bc

0802641c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802641c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026420:	ed2d 8b02 	vpush	{d8}
 8026424:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8026428:	b098      	sub	sp, #96	; 0x60
 802642a:	4604      	mov	r4, r0
 802642c:	4688      	mov	r8, r1
 802642e:	2b00      	cmp	r3, #0
 8026430:	d077      	beq.n	8026522 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8026432:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8026436:	4628      	mov	r0, r5
 8026438:	f7f0 fec0 	bl	80171bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 802643c:	ee07 0a90 	vmov	s15, r0
 8026440:	4628      	mov	r0, r5
 8026442:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8026446:	f7f0 feed 	bl	8017224 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802644a:	4b4e      	ldr	r3, [pc, #312]	; (8026584 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802644c:	781b      	ldrb	r3, [r3, #0]
 802644e:	ee07 0a90 	vmov	s15, r0
 8026452:	2b01      	cmp	r3, #1
 8026454:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8026458:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802645c:	d066      	beq.n	802652c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802645e:	eeb0 6a47 	vmov.f32	s12, s14
 8026462:	ee17 3a10 	vmov	r3, s14
 8026466:	eeb0 4a48 	vmov.f32	s8, s16
 802646a:	eeb0 7a48 	vmov.f32	s14, s16
 802646e:	eef0 4a67 	vmov.f32	s9, s15
 8026472:	eeb0 8a67 	vmov.f32	s16, s15
 8026476:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802647a:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802647e:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8026482:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8026486:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802648a:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802648e:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8026490:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8026492:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8026494:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8026498:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802649c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80264a0:	ee73 1a65 	vsub.f32	s3, s6, s11
 80264a4:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80264a8:	ee32 1a45 	vsub.f32	s2, s4, s10
 80264ac:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80264b0:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80264b4:	eee1 6a21 	vfma.f32	s13, s2, s3
 80264b8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80264bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80264c0:	dd3d      	ble.n	802653e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80264c2:	ed8d 5a04 	vstr	s10, [sp, #16]
 80264c6:	ed8d 2a05 	vstr	s4, [sp, #20]
 80264ca:	edcd 2a06 	vstr	s5, [sp, #24]
 80264ce:	f8cd c01c 	str.w	ip, [sp, #28]
 80264d2:	edcd 5a08 	vstr	s11, [sp, #32]
 80264d6:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80264da:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80264de:	970b      	str	r7, [sp, #44]	; 0x2c
 80264e0:	960c      	str	r6, [sp, #48]	; 0x30
 80264e2:	950d      	str	r5, [sp, #52]	; 0x34
 80264e4:	920e      	str	r2, [sp, #56]	; 0x38
 80264e6:	900f      	str	r0, [sp, #60]	; 0x3c
 80264e8:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80264ec:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80264f0:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80264f4:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80264f8:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80264fc:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8026500:	9316      	str	r3, [sp, #88]	; 0x58
 8026502:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8026506:	ab14      	add	r3, sp, #80	; 0x50
 8026508:	9303      	str	r3, [sp, #12]
 802650a:	ab10      	add	r3, sp, #64	; 0x40
 802650c:	9302      	str	r3, [sp, #8]
 802650e:	ab0c      	add	r3, sp, #48	; 0x30
 8026510:	9301      	str	r3, [sp, #4]
 8026512:	ab08      	add	r3, sp, #32
 8026514:	9300      	str	r3, [sp, #0]
 8026516:	2200      	movs	r2, #0
 8026518:	ab04      	add	r3, sp, #16
 802651a:	4641      	mov	r1, r8
 802651c:	4620      	mov	r0, r4
 802651e:	f7ff fe2d 	bl	802617c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8026522:	b018      	add	sp, #96	; 0x60
 8026524:	ecbd 8b02 	vpop	{d8}
 8026528:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802652c:	eeb0 6a48 	vmov.f32	s12, s16
 8026530:	eef0 4a47 	vmov.f32	s9, s14
 8026534:	ee17 3a90 	vmov	r3, s15
 8026538:	eeb0 4a67 	vmov.f32	s8, s15
 802653c:	e79b      	b.n	8026476 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802653e:	ed8d 5a05 	vstr	s10, [sp, #20]
 8026542:	ed8d 2a04 	vstr	s4, [sp, #16]
 8026546:	f8cd c018 	str.w	ip, [sp, #24]
 802654a:	edcd 2a07 	vstr	s5, [sp, #28]
 802654e:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8026552:	ed8d 3a08 	vstr	s6, [sp, #32]
 8026556:	970a      	str	r7, [sp, #40]	; 0x28
 8026558:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802655c:	960d      	str	r6, [sp, #52]	; 0x34
 802655e:	950c      	str	r5, [sp, #48]	; 0x30
 8026560:	900e      	str	r0, [sp, #56]	; 0x38
 8026562:	920f      	str	r2, [sp, #60]	; 0x3c
 8026564:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8026568:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802656c:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8026570:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8026574:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8026578:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802657c:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8026580:	9317      	str	r3, [sp, #92]	; 0x5c
 8026582:	e7c0      	b.n	8026506 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8026584:	200137b4 	.word	0x200137b4

08026588 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8026588:	b5f0      	push	{r4, r5, r6, r7, lr}
 802658a:	b08d      	sub	sp, #52	; 0x34
 802658c:	2300      	movs	r3, #0
 802658e:	9304      	str	r3, [sp, #16]
 8026590:	9305      	str	r3, [sp, #20]
 8026592:	9306      	str	r3, [sp, #24]
 8026594:	aa04      	add	r2, sp, #16
 8026596:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802659a:	9307      	str	r3, [sp, #28]
 802659c:	f100 0640 	add.w	r6, r0, #64	; 0x40
 80265a0:	4613      	mov	r3, r2
 80265a2:	f101 0710 	add.w	r7, r1, #16
 80265a6:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80265e4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 80265aa:	460c      	mov	r4, r1
 80265ac:	4605      	mov	r5, r0
 80265ae:	ecb4 7a01 	vldmia	r4!, {s14}
 80265b2:	ecf5 6a01 	vldmia	r5!, {s13}
 80265b6:	42bc      	cmp	r4, r7
 80265b8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80265bc:	d1f7      	bne.n	80265ae <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80265be:	3010      	adds	r0, #16
 80265c0:	42b0      	cmp	r0, r6
 80265c2:	ece2 7a01 	vstmia	r2!, {s15}
 80265c6:	d1ee      	bne.n	80265a6 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 80265c8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80265ca:	ac0c      	add	r4, sp, #48	; 0x30
 80265cc:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80265d0:	ed9d 0a08 	vldr	s0, [sp, #32]
 80265d4:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80265d8:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80265dc:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 80265e0:	b00d      	add	sp, #52	; 0x34
 80265e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80265e4:	00000000 	.word	0x00000000

080265e8 <_ZN8touchgfx9Matrix4x4C1Ev>:
 80265e8:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8026618 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80265ec:	2300      	movs	r3, #0
 80265ee:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80265f2:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 80265f6:	2200      	movs	r2, #0
 80265f8:	4293      	cmp	r3, r2
 80265fa:	f102 0201 	add.w	r2, r2, #1
 80265fe:	bf14      	ite	ne
 8026600:	eef0 6a47 	vmovne.f32	s13, s14
 8026604:	eef0 6a67 	vmoveq.f32	s13, s15
 8026608:	2a04      	cmp	r2, #4
 802660a:	ece1 6a01 	vstmia	r1!, {s13}
 802660e:	d1f3      	bne.n	80265f8 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8026610:	3301      	adds	r3, #1
 8026612:	2b04      	cmp	r3, #4
 8026614:	d1ed      	bne.n	80265f2 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8026616:	4770      	bx	lr
 8026618:	00000000 	.word	0x00000000

0802661c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802661c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026620:	460c      	mov	r4, r1
 8026622:	4605      	mov	r5, r0
 8026624:	4690      	mov	r8, r2
 8026626:	f7ff ffdf 	bl	80265e8 <_ZN8touchgfx9Matrix4x4C1Ev>
 802662a:	4628      	mov	r0, r5
 802662c:	4621      	mov	r1, r4
 802662e:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8026632:	2300      	movs	r3, #0
 8026634:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8026674 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8026638:	eb08 0603 	add.w	r6, r8, r3
 802663c:	460f      	mov	r7, r1
 802663e:	2400      	movs	r4, #0
 8026640:	4632      	mov	r2, r6
 8026642:	ecf7 6a01 	vldmia	r7!, {s13}
 8026646:	ed92 7a00 	vldr	s14, [r2]
 802664a:	3401      	adds	r4, #1
 802664c:	2c04      	cmp	r4, #4
 802664e:	f106 0610 	add.w	r6, r6, #16
 8026652:	eee6 7a87 	vfma.f32	s15, s13, s14
 8026656:	d1f3      	bne.n	8026640 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8026658:	18c2      	adds	r2, r0, r3
 802665a:	3304      	adds	r3, #4
 802665c:	2b10      	cmp	r3, #16
 802665e:	edc2 7a00 	vstr	s15, [r2]
 8026662:	d1e7      	bne.n	8026634 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8026664:	3110      	adds	r1, #16
 8026666:	4561      	cmp	r1, ip
 8026668:	f100 0010 	add.w	r0, r0, #16
 802666c:	d1e1      	bne.n	8026632 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802666e:	4628      	mov	r0, r5
 8026670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026674:	00000000 	.word	0x00000000

08026678 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8026678:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802667c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8026680:	f100 0320 	add.w	r3, r0, #32
 8026684:	3030      	adds	r0, #48	; 0x30
 8026686:	ecf3 7a01 	vldmia	r3!, {s15}
 802668a:	ee60 7a27 	vmul.f32	s15, s0, s15
 802668e:	4283      	cmp	r3, r0
 8026690:	edc3 7a03 	vstr	s15, [r3, #12]
 8026694:	d1f7      	bne.n	8026686 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8026696:	4770      	bx	lr

08026698 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8026698:	b510      	push	{r4, lr}
 802669a:	ed2d 8b02 	vpush	{d8}
 802669e:	4604      	mov	r4, r0
 80266a0:	eef0 8a40 	vmov.f32	s17, s0
 80266a4:	f000 f938 	bl	8026918 <sinf>
 80266a8:	eeb0 8a40 	vmov.f32	s16, s0
 80266ac:	eeb0 0a68 	vmov.f32	s0, s17
 80266b0:	f000 f8ee 	bl	8026890 <cosf>
 80266b4:	f104 0310 	add.w	r3, r4, #16
 80266b8:	f104 0220 	add.w	r2, r4, #32
 80266bc:	eeb1 6a48 	vneg.f32	s12, s16
 80266c0:	edd3 7a04 	vldr	s15, [r3, #16]
 80266c4:	edd3 6a00 	vldr	s13, [r3]
 80266c8:	ee26 7a27 	vmul.f32	s14, s12, s15
 80266cc:	ee67 7a80 	vmul.f32	s15, s15, s0
 80266d0:	eea6 7a80 	vfma.f32	s14, s13, s0
 80266d4:	eee6 7a88 	vfma.f32	s15, s13, s16
 80266d8:	eca3 7a01 	vstmia	r3!, {s14}
 80266dc:	429a      	cmp	r2, r3
 80266de:	edc3 7a03 	vstr	s15, [r3, #12]
 80266e2:	d1ed      	bne.n	80266c0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 80266e4:	ecbd 8b02 	vpop	{d8}
 80266e8:	4620      	mov	r0, r4
 80266ea:	bd10      	pop	{r4, pc}

080266ec <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 80266ec:	b510      	push	{r4, lr}
 80266ee:	ed2d 8b02 	vpush	{d8}
 80266f2:	4604      	mov	r4, r0
 80266f4:	eef0 8a40 	vmov.f32	s17, s0
 80266f8:	f000 f90e 	bl	8026918 <sinf>
 80266fc:	eeb0 8a40 	vmov.f32	s16, s0
 8026700:	eeb0 0a68 	vmov.f32	s0, s17
 8026704:	f000 f8c4 	bl	8026890 <cosf>
 8026708:	4623      	mov	r3, r4
 802670a:	f104 0210 	add.w	r2, r4, #16
 802670e:	eeb1 6a48 	vneg.f32	s12, s16
 8026712:	edd3 7a08 	vldr	s15, [r3, #32]
 8026716:	edd3 6a00 	vldr	s13, [r3]
 802671a:	ee27 7a88 	vmul.f32	s14, s15, s16
 802671e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026722:	eea6 7a80 	vfma.f32	s14, s13, s0
 8026726:	eee6 7a26 	vfma.f32	s15, s12, s13
 802672a:	eca3 7a01 	vstmia	r3!, {s14}
 802672e:	429a      	cmp	r2, r3
 8026730:	edc3 7a07 	vstr	s15, [r3, #28]
 8026734:	d1ed      	bne.n	8026712 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8026736:	ecbd 8b02 	vpop	{d8}
 802673a:	4620      	mov	r0, r4
 802673c:	bd10      	pop	{r4, pc}

0802673e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802673e:	b510      	push	{r4, lr}
 8026740:	ed2d 8b02 	vpush	{d8}
 8026744:	4604      	mov	r4, r0
 8026746:	eef0 8a40 	vmov.f32	s17, s0
 802674a:	f000 f8e5 	bl	8026918 <sinf>
 802674e:	eeb0 8a40 	vmov.f32	s16, s0
 8026752:	eeb0 0a68 	vmov.f32	s0, s17
 8026756:	f000 f89b 	bl	8026890 <cosf>
 802675a:	4623      	mov	r3, r4
 802675c:	f104 0210 	add.w	r2, r4, #16
 8026760:	eeb1 6a48 	vneg.f32	s12, s16
 8026764:	edd3 7a04 	vldr	s15, [r3, #16]
 8026768:	edd3 6a00 	vldr	s13, [r3]
 802676c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8026770:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026774:	eea6 7a80 	vfma.f32	s14, s13, s0
 8026778:	eee6 7a88 	vfma.f32	s15, s13, s16
 802677c:	eca3 7a01 	vstmia	r3!, {s14}
 8026780:	429a      	cmp	r2, r3
 8026782:	edc3 7a03 	vstr	s15, [r3, #12]
 8026786:	d1ed      	bne.n	8026764 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8026788:	ecbd 8b02 	vpop	{d8}
 802678c:	4620      	mov	r0, r4
 802678e:	bd10      	pop	{r4, pc}

08026790 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8026790:	4603      	mov	r3, r0
 8026792:	f100 0210 	add.w	r2, r0, #16
 8026796:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802679a:	edd3 7a00 	vldr	s15, [r3]
 802679e:	eee7 7a00 	vfma.f32	s15, s14, s0
 80267a2:	ece3 7a01 	vstmia	r3!, {s15}
 80267a6:	4293      	cmp	r3, r2
 80267a8:	d1f5      	bne.n	8026796 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 80267aa:	4770      	bx	lr

080267ac <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 80267ac:	f100 0310 	add.w	r3, r0, #16
 80267b0:	f100 0220 	add.w	r2, r0, #32
 80267b4:	ed93 7a08 	vldr	s14, [r3, #32]
 80267b8:	edd3 7a00 	vldr	s15, [r3]
 80267bc:	eee7 7a00 	vfma.f32	s15, s14, s0
 80267c0:	ece3 7a01 	vstmia	r3!, {s15}
 80267c4:	4293      	cmp	r3, r2
 80267c6:	d1f5      	bne.n	80267b4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 80267c8:	4770      	bx	lr

080267ca <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 80267ca:	f100 0320 	add.w	r3, r0, #32
 80267ce:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80267d2:	ed93 7a04 	vldr	s14, [r3, #16]
 80267d6:	edd3 7a00 	vldr	s15, [r3]
 80267da:	eee7 7a00 	vfma.f32	s15, s14, s0
 80267de:	ece3 7a01 	vstmia	r3!, {s15}
 80267e2:	4293      	cmp	r3, r2
 80267e4:	d1f5      	bne.n	80267d2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 80267e6:	4770      	bx	lr

080267e8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 80267e8:	4603      	mov	r3, r0
 80267ea:	f100 0210 	add.w	r2, r0, #16
 80267ee:	edd3 7a00 	vldr	s15, [r3]
 80267f2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80267f6:	ece3 7a01 	vstmia	r3!, {s15}
 80267fa:	4293      	cmp	r3, r2
 80267fc:	d1f7      	bne.n	80267ee <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 80267fe:	4770      	bx	lr

08026800 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8026800:	f100 0310 	add.w	r3, r0, #16
 8026804:	f100 0220 	add.w	r2, r0, #32
 8026808:	edd3 7a00 	vldr	s15, [r3]
 802680c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026810:	ece3 7a01 	vstmia	r3!, {s15}
 8026814:	4293      	cmp	r3, r2
 8026816:	d1f7      	bne.n	8026808 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8026818:	4770      	bx	lr

0802681a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802681a:	f100 0320 	add.w	r3, r0, #32
 802681e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8026822:	edd3 7a00 	vldr	s15, [r3]
 8026826:	ee67 7a80 	vmul.f32	s15, s15, s0
 802682a:	ece3 7a01 	vstmia	r3!, {s15}
 802682e:	4293      	cmp	r3, r2
 8026830:	d1f7      	bne.n	8026822 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8026832:	4770      	bx	lr

08026834 <__aeabi_atexit>:
 8026834:	460b      	mov	r3, r1
 8026836:	4601      	mov	r1, r0
 8026838:	4618      	mov	r0, r3
 802683a:	f000 bed1 	b.w	80275e0 <__cxa_atexit>

0802683e <_ZdlPvj>:
 802683e:	f000 b812 	b.w	8026866 <_ZdlPv>

08026842 <__cxa_guard_acquire>:
 8026842:	6803      	ldr	r3, [r0, #0]
 8026844:	07db      	lsls	r3, r3, #31
 8026846:	d406      	bmi.n	8026856 <__cxa_guard_acquire+0x14>
 8026848:	7843      	ldrb	r3, [r0, #1]
 802684a:	b103      	cbz	r3, 802684e <__cxa_guard_acquire+0xc>
 802684c:	deff      	udf	#255	; 0xff
 802684e:	2301      	movs	r3, #1
 8026850:	7043      	strb	r3, [r0, #1]
 8026852:	4618      	mov	r0, r3
 8026854:	4770      	bx	lr
 8026856:	2000      	movs	r0, #0
 8026858:	4770      	bx	lr

0802685a <__cxa_guard_release>:
 802685a:	2301      	movs	r3, #1
 802685c:	6003      	str	r3, [r0, #0]
 802685e:	4770      	bx	lr

08026860 <__cxa_pure_virtual>:
 8026860:	b508      	push	{r3, lr}
 8026862:	f000 f80f 	bl	8026884 <_ZSt9terminatev>

08026866 <_ZdlPv>:
 8026866:	f000 be07 	b.w	8027478 <free>

0802686a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802686a:	b508      	push	{r3, lr}
 802686c:	4780      	blx	r0
 802686e:	f000 fdcf 	bl	8027410 <abort>
	...

08026874 <_ZSt13get_terminatev>:
 8026874:	4b02      	ldr	r3, [pc, #8]	; (8026880 <_ZSt13get_terminatev+0xc>)
 8026876:	6818      	ldr	r0, [r3, #0]
 8026878:	f3bf 8f5b 	dmb	ish
 802687c:	4770      	bx	lr
 802687e:	bf00      	nop
 8026880:	20000104 	.word	0x20000104

08026884 <_ZSt9terminatev>:
 8026884:	b508      	push	{r3, lr}
 8026886:	f7ff fff5 	bl	8026874 <_ZSt13get_terminatev>
 802688a:	f7ff ffee 	bl	802686a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08026890 <cosf>:
 8026890:	ee10 3a10 	vmov	r3, s0
 8026894:	b507      	push	{r0, r1, r2, lr}
 8026896:	4a1e      	ldr	r2, [pc, #120]	; (8026910 <cosf+0x80>)
 8026898:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802689c:	4293      	cmp	r3, r2
 802689e:	dc06      	bgt.n	80268ae <cosf+0x1e>
 80268a0:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8026914 <cosf+0x84>
 80268a4:	b003      	add	sp, #12
 80268a6:	f85d eb04 	ldr.w	lr, [sp], #4
 80268aa:	f000 b8ff 	b.w	8026aac <__kernel_cosf>
 80268ae:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80268b2:	db04      	blt.n	80268be <cosf+0x2e>
 80268b4:	ee30 0a40 	vsub.f32	s0, s0, s0
 80268b8:	b003      	add	sp, #12
 80268ba:	f85d fb04 	ldr.w	pc, [sp], #4
 80268be:	4668      	mov	r0, sp
 80268c0:	f000 f99a 	bl	8026bf8 <__ieee754_rem_pio2f>
 80268c4:	f000 0003 	and.w	r0, r0, #3
 80268c8:	2801      	cmp	r0, #1
 80268ca:	d009      	beq.n	80268e0 <cosf+0x50>
 80268cc:	2802      	cmp	r0, #2
 80268ce:	d010      	beq.n	80268f2 <cosf+0x62>
 80268d0:	b9b0      	cbnz	r0, 8026900 <cosf+0x70>
 80268d2:	eddd 0a01 	vldr	s1, [sp, #4]
 80268d6:	ed9d 0a00 	vldr	s0, [sp]
 80268da:	f000 f8e7 	bl	8026aac <__kernel_cosf>
 80268de:	e7eb      	b.n	80268b8 <cosf+0x28>
 80268e0:	eddd 0a01 	vldr	s1, [sp, #4]
 80268e4:	ed9d 0a00 	vldr	s0, [sp]
 80268e8:	f000 f93e 	bl	8026b68 <__kernel_sinf>
 80268ec:	eeb1 0a40 	vneg.f32	s0, s0
 80268f0:	e7e2      	b.n	80268b8 <cosf+0x28>
 80268f2:	eddd 0a01 	vldr	s1, [sp, #4]
 80268f6:	ed9d 0a00 	vldr	s0, [sp]
 80268fa:	f000 f8d7 	bl	8026aac <__kernel_cosf>
 80268fe:	e7f5      	b.n	80268ec <cosf+0x5c>
 8026900:	eddd 0a01 	vldr	s1, [sp, #4]
 8026904:	ed9d 0a00 	vldr	s0, [sp]
 8026908:	2001      	movs	r0, #1
 802690a:	f000 f92d 	bl	8026b68 <__kernel_sinf>
 802690e:	e7d3      	b.n	80268b8 <cosf+0x28>
 8026910:	3f490fd8 	.word	0x3f490fd8
 8026914:	00000000 	.word	0x00000000

08026918 <sinf>:
 8026918:	ee10 3a10 	vmov	r3, s0
 802691c:	b507      	push	{r0, r1, r2, lr}
 802691e:	4a1f      	ldr	r2, [pc, #124]	; (802699c <sinf+0x84>)
 8026920:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8026924:	4293      	cmp	r3, r2
 8026926:	dc07      	bgt.n	8026938 <sinf+0x20>
 8026928:	eddf 0a1d 	vldr	s1, [pc, #116]	; 80269a0 <sinf+0x88>
 802692c:	2000      	movs	r0, #0
 802692e:	b003      	add	sp, #12
 8026930:	f85d eb04 	ldr.w	lr, [sp], #4
 8026934:	f000 b918 	b.w	8026b68 <__kernel_sinf>
 8026938:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802693c:	db04      	blt.n	8026948 <sinf+0x30>
 802693e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8026942:	b003      	add	sp, #12
 8026944:	f85d fb04 	ldr.w	pc, [sp], #4
 8026948:	4668      	mov	r0, sp
 802694a:	f000 f955 	bl	8026bf8 <__ieee754_rem_pio2f>
 802694e:	f000 0003 	and.w	r0, r0, #3
 8026952:	2801      	cmp	r0, #1
 8026954:	d00a      	beq.n	802696c <sinf+0x54>
 8026956:	2802      	cmp	r0, #2
 8026958:	d00f      	beq.n	802697a <sinf+0x62>
 802695a:	b9c0      	cbnz	r0, 802698e <sinf+0x76>
 802695c:	eddd 0a01 	vldr	s1, [sp, #4]
 8026960:	ed9d 0a00 	vldr	s0, [sp]
 8026964:	2001      	movs	r0, #1
 8026966:	f000 f8ff 	bl	8026b68 <__kernel_sinf>
 802696a:	e7ea      	b.n	8026942 <sinf+0x2a>
 802696c:	eddd 0a01 	vldr	s1, [sp, #4]
 8026970:	ed9d 0a00 	vldr	s0, [sp]
 8026974:	f000 f89a 	bl	8026aac <__kernel_cosf>
 8026978:	e7e3      	b.n	8026942 <sinf+0x2a>
 802697a:	eddd 0a01 	vldr	s1, [sp, #4]
 802697e:	ed9d 0a00 	vldr	s0, [sp]
 8026982:	2001      	movs	r0, #1
 8026984:	f000 f8f0 	bl	8026b68 <__kernel_sinf>
 8026988:	eeb1 0a40 	vneg.f32	s0, s0
 802698c:	e7d9      	b.n	8026942 <sinf+0x2a>
 802698e:	eddd 0a01 	vldr	s1, [sp, #4]
 8026992:	ed9d 0a00 	vldr	s0, [sp]
 8026996:	f000 f889 	bl	8026aac <__kernel_cosf>
 802699a:	e7f5      	b.n	8026988 <sinf+0x70>
 802699c:	3f490fd8 	.word	0x3f490fd8
 80269a0:	00000000 	.word	0x00000000

080269a4 <ceilf>:
 80269a4:	ee10 3a10 	vmov	r3, s0
 80269a8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80269ac:	3a7f      	subs	r2, #127	; 0x7f
 80269ae:	2a16      	cmp	r2, #22
 80269b0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80269b4:	dc2a      	bgt.n	8026a0c <ceilf+0x68>
 80269b6:	2a00      	cmp	r2, #0
 80269b8:	da11      	bge.n	80269de <ceilf+0x3a>
 80269ba:	eddf 7a19 	vldr	s15, [pc, #100]	; 8026a20 <ceilf+0x7c>
 80269be:	ee30 0a27 	vadd.f32	s0, s0, s15
 80269c2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80269c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80269ca:	dd05      	ble.n	80269d8 <ceilf+0x34>
 80269cc:	2b00      	cmp	r3, #0
 80269ce:	db23      	blt.n	8026a18 <ceilf+0x74>
 80269d0:	2900      	cmp	r1, #0
 80269d2:	bf18      	it	ne
 80269d4:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 80269d8:	ee00 3a10 	vmov	s0, r3
 80269dc:	4770      	bx	lr
 80269de:	4911      	ldr	r1, [pc, #68]	; (8026a24 <ceilf+0x80>)
 80269e0:	4111      	asrs	r1, r2
 80269e2:	420b      	tst	r3, r1
 80269e4:	d0fa      	beq.n	80269dc <ceilf+0x38>
 80269e6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8026a20 <ceilf+0x7c>
 80269ea:	ee30 0a27 	vadd.f32	s0, s0, s15
 80269ee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80269f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80269f6:	ddef      	ble.n	80269d8 <ceilf+0x34>
 80269f8:	2b00      	cmp	r3, #0
 80269fa:	bfc2      	ittt	gt
 80269fc:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8026a00:	fa40 f202 	asrgt.w	r2, r0, r2
 8026a04:	189b      	addgt	r3, r3, r2
 8026a06:	ea23 0301 	bic.w	r3, r3, r1
 8026a0a:	e7e5      	b.n	80269d8 <ceilf+0x34>
 8026a0c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8026a10:	d3e4      	bcc.n	80269dc <ceilf+0x38>
 8026a12:	ee30 0a00 	vadd.f32	s0, s0, s0
 8026a16:	4770      	bx	lr
 8026a18:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8026a1c:	e7dc      	b.n	80269d8 <ceilf+0x34>
 8026a1e:	bf00      	nop
 8026a20:	7149f2ca 	.word	0x7149f2ca
 8026a24:	007fffff 	.word	0x007fffff

08026a28 <floorf>:
 8026a28:	ee10 3a10 	vmov	r3, s0
 8026a2c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8026a30:	3a7f      	subs	r2, #127	; 0x7f
 8026a32:	2a16      	cmp	r2, #22
 8026a34:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8026a38:	dc2a      	bgt.n	8026a90 <floorf+0x68>
 8026a3a:	2a00      	cmp	r2, #0
 8026a3c:	da11      	bge.n	8026a62 <floorf+0x3a>
 8026a3e:	eddf 7a18 	vldr	s15, [pc, #96]	; 8026aa0 <floorf+0x78>
 8026a42:	ee30 0a27 	vadd.f32	s0, s0, s15
 8026a46:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026a4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026a4e:	dd05      	ble.n	8026a5c <floorf+0x34>
 8026a50:	2b00      	cmp	r3, #0
 8026a52:	da23      	bge.n	8026a9c <floorf+0x74>
 8026a54:	4a13      	ldr	r2, [pc, #76]	; (8026aa4 <floorf+0x7c>)
 8026a56:	2900      	cmp	r1, #0
 8026a58:	bf18      	it	ne
 8026a5a:	4613      	movne	r3, r2
 8026a5c:	ee00 3a10 	vmov	s0, r3
 8026a60:	4770      	bx	lr
 8026a62:	4911      	ldr	r1, [pc, #68]	; (8026aa8 <floorf+0x80>)
 8026a64:	4111      	asrs	r1, r2
 8026a66:	420b      	tst	r3, r1
 8026a68:	d0fa      	beq.n	8026a60 <floorf+0x38>
 8026a6a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8026aa0 <floorf+0x78>
 8026a6e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8026a72:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026a76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026a7a:	ddef      	ble.n	8026a5c <floorf+0x34>
 8026a7c:	2b00      	cmp	r3, #0
 8026a7e:	bfbe      	ittt	lt
 8026a80:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8026a84:	fa40 f202 	asrlt.w	r2, r0, r2
 8026a88:	189b      	addlt	r3, r3, r2
 8026a8a:	ea23 0301 	bic.w	r3, r3, r1
 8026a8e:	e7e5      	b.n	8026a5c <floorf+0x34>
 8026a90:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8026a94:	d3e4      	bcc.n	8026a60 <floorf+0x38>
 8026a96:	ee30 0a00 	vadd.f32	s0, s0, s0
 8026a9a:	4770      	bx	lr
 8026a9c:	2300      	movs	r3, #0
 8026a9e:	e7dd      	b.n	8026a5c <floorf+0x34>
 8026aa0:	7149f2ca 	.word	0x7149f2ca
 8026aa4:	bf800000 	.word	0xbf800000
 8026aa8:	007fffff 	.word	0x007fffff

08026aac <__kernel_cosf>:
 8026aac:	ee10 3a10 	vmov	r3, s0
 8026ab0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8026ab4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8026ab8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8026abc:	da05      	bge.n	8026aca <__kernel_cosf+0x1e>
 8026abe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8026ac2:	ee17 2a90 	vmov	r2, s15
 8026ac6:	2a00      	cmp	r2, #0
 8026ac8:	d03b      	beq.n	8026b42 <__kernel_cosf+0x96>
 8026aca:	ee20 7a00 	vmul.f32	s14, s0, s0
 8026ace:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8026b48 <__kernel_cosf+0x9c>
 8026ad2:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8026b4c <__kernel_cosf+0xa0>
 8026ad6:	4a1e      	ldr	r2, [pc, #120]	; (8026b50 <__kernel_cosf+0xa4>)
 8026ad8:	eea7 6a27 	vfma.f32	s12, s14, s15
 8026adc:	4293      	cmp	r3, r2
 8026ade:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8026b54 <__kernel_cosf+0xa8>
 8026ae2:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026ae6:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 8026b58 <__kernel_cosf+0xac>
 8026aea:	eea7 6a87 	vfma.f32	s12, s15, s14
 8026aee:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8026b5c <__kernel_cosf+0xb0>
 8026af2:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026af6:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 8026b60 <__kernel_cosf+0xb4>
 8026afa:	eea7 6a87 	vfma.f32	s12, s15, s14
 8026afe:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8026b02:	ee26 6a07 	vmul.f32	s12, s12, s14
 8026b06:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8026b0a:	eee7 0a06 	vfma.f32	s1, s14, s12
 8026b0e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8026b12:	dc04      	bgt.n	8026b1e <__kernel_cosf+0x72>
 8026b14:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8026b18:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8026b1c:	4770      	bx	lr
 8026b1e:	4a11      	ldr	r2, [pc, #68]	; (8026b64 <__kernel_cosf+0xb8>)
 8026b20:	4293      	cmp	r3, r2
 8026b22:	bfda      	itte	le
 8026b24:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8026b28:	ee07 3a10 	vmovle	s14, r3
 8026b2c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8026b30:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026b34:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8026b38:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8026b3c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8026b40:	4770      	bx	lr
 8026b42:	eeb0 0a66 	vmov.f32	s0, s13
 8026b46:	4770      	bx	lr
 8026b48:	ad47d74e 	.word	0xad47d74e
 8026b4c:	310f74f6 	.word	0x310f74f6
 8026b50:	3e999999 	.word	0x3e999999
 8026b54:	b493f27c 	.word	0xb493f27c
 8026b58:	37d00d01 	.word	0x37d00d01
 8026b5c:	bab60b61 	.word	0xbab60b61
 8026b60:	3d2aaaab 	.word	0x3d2aaaab
 8026b64:	3f480000 	.word	0x3f480000

08026b68 <__kernel_sinf>:
 8026b68:	ee10 3a10 	vmov	r3, s0
 8026b6c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8026b70:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8026b74:	da04      	bge.n	8026b80 <__kernel_sinf+0x18>
 8026b76:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8026b7a:	ee17 3a90 	vmov	r3, s15
 8026b7e:	b35b      	cbz	r3, 8026bd8 <__kernel_sinf+0x70>
 8026b80:	ee20 7a00 	vmul.f32	s14, s0, s0
 8026b84:	eddf 7a15 	vldr	s15, [pc, #84]	; 8026bdc <__kernel_sinf+0x74>
 8026b88:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8026be0 <__kernel_sinf+0x78>
 8026b8c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8026b90:	eddf 7a14 	vldr	s15, [pc, #80]	; 8026be4 <__kernel_sinf+0x7c>
 8026b94:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026b98:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8026be8 <__kernel_sinf+0x80>
 8026b9c:	eea7 6a87 	vfma.f32	s12, s15, s14
 8026ba0:	eddf 7a12 	vldr	s15, [pc, #72]	; 8026bec <__kernel_sinf+0x84>
 8026ba4:	ee60 6a07 	vmul.f32	s13, s0, s14
 8026ba8:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026bac:	b930      	cbnz	r0, 8026bbc <__kernel_sinf+0x54>
 8026bae:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8026bf0 <__kernel_sinf+0x88>
 8026bb2:	eea7 6a27 	vfma.f32	s12, s14, s15
 8026bb6:	eea6 0a26 	vfma.f32	s0, s12, s13
 8026bba:	4770      	bx	lr
 8026bbc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8026bc0:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8026bc4:	eee0 7a86 	vfma.f32	s15, s1, s12
 8026bc8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8026bcc:	eddf 7a09 	vldr	s15, [pc, #36]	; 8026bf4 <__kernel_sinf+0x8c>
 8026bd0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8026bd4:	ee30 0a60 	vsub.f32	s0, s0, s1
 8026bd8:	4770      	bx	lr
 8026bda:	bf00      	nop
 8026bdc:	2f2ec9d3 	.word	0x2f2ec9d3
 8026be0:	b2d72f34 	.word	0xb2d72f34
 8026be4:	3638ef1b 	.word	0x3638ef1b
 8026be8:	b9500d01 	.word	0xb9500d01
 8026bec:	3c088889 	.word	0x3c088889
 8026bf0:	be2aaaab 	.word	0xbe2aaaab
 8026bf4:	3e2aaaab 	.word	0x3e2aaaab

08026bf8 <__ieee754_rem_pio2f>:
 8026bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026bfa:	ee10 6a10 	vmov	r6, s0
 8026bfe:	4b86      	ldr	r3, [pc, #536]	; (8026e18 <__ieee754_rem_pio2f+0x220>)
 8026c00:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8026c04:	429d      	cmp	r5, r3
 8026c06:	b087      	sub	sp, #28
 8026c08:	4604      	mov	r4, r0
 8026c0a:	dc05      	bgt.n	8026c18 <__ieee754_rem_pio2f+0x20>
 8026c0c:	2300      	movs	r3, #0
 8026c0e:	ed80 0a00 	vstr	s0, [r0]
 8026c12:	6043      	str	r3, [r0, #4]
 8026c14:	2000      	movs	r0, #0
 8026c16:	e020      	b.n	8026c5a <__ieee754_rem_pio2f+0x62>
 8026c18:	4b80      	ldr	r3, [pc, #512]	; (8026e1c <__ieee754_rem_pio2f+0x224>)
 8026c1a:	429d      	cmp	r5, r3
 8026c1c:	dc38      	bgt.n	8026c90 <__ieee754_rem_pio2f+0x98>
 8026c1e:	2e00      	cmp	r6, #0
 8026c20:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8026e20 <__ieee754_rem_pio2f+0x228>
 8026c24:	4b7f      	ldr	r3, [pc, #508]	; (8026e24 <__ieee754_rem_pio2f+0x22c>)
 8026c26:	f025 050f 	bic.w	r5, r5, #15
 8026c2a:	dd18      	ble.n	8026c5e <__ieee754_rem_pio2f+0x66>
 8026c2c:	429d      	cmp	r5, r3
 8026c2e:	ee70 7a47 	vsub.f32	s15, s0, s14
 8026c32:	bf09      	itett	eq
 8026c34:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8026e28 <__ieee754_rem_pio2f+0x230>
 8026c38:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8026e2c <__ieee754_rem_pio2f+0x234>
 8026c3c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8026c40:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8026e30 <__ieee754_rem_pio2f+0x238>
 8026c44:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8026c48:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8026c4c:	edc0 6a00 	vstr	s13, [r0]
 8026c50:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026c54:	edc0 7a01 	vstr	s15, [r0, #4]
 8026c58:	2001      	movs	r0, #1
 8026c5a:	b007      	add	sp, #28
 8026c5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026c5e:	429d      	cmp	r5, r3
 8026c60:	ee70 7a07 	vadd.f32	s15, s0, s14
 8026c64:	bf09      	itett	eq
 8026c66:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8026e28 <__ieee754_rem_pio2f+0x230>
 8026c6a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8026e2c <__ieee754_rem_pio2f+0x234>
 8026c6e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8026c72:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8026e30 <__ieee754_rem_pio2f+0x238>
 8026c76:	ee77 6a87 	vadd.f32	s13, s15, s14
 8026c7a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8026c7e:	edc0 6a00 	vstr	s13, [r0]
 8026c82:	ee77 7a87 	vadd.f32	s15, s15, s14
 8026c86:	edc0 7a01 	vstr	s15, [r0, #4]
 8026c8a:	f04f 30ff 	mov.w	r0, #4294967295
 8026c8e:	e7e4      	b.n	8026c5a <__ieee754_rem_pio2f+0x62>
 8026c90:	4b68      	ldr	r3, [pc, #416]	; (8026e34 <__ieee754_rem_pio2f+0x23c>)
 8026c92:	429d      	cmp	r5, r3
 8026c94:	dc71      	bgt.n	8026d7a <__ieee754_rem_pio2f+0x182>
 8026c96:	f000 f8db 	bl	8026e50 <fabsf>
 8026c9a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8026e38 <__ieee754_rem_pio2f+0x240>
 8026c9e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8026ca2:	eee0 7a07 	vfma.f32	s15, s0, s14
 8026ca6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8026caa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8026cae:	ee17 0a90 	vmov	r0, s15
 8026cb2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8026e20 <__ieee754_rem_pio2f+0x228>
 8026cb6:	eea7 0a67 	vfms.f32	s0, s14, s15
 8026cba:	281f      	cmp	r0, #31
 8026cbc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8026e2c <__ieee754_rem_pio2f+0x234>
 8026cc0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8026cc4:	eeb1 6a47 	vneg.f32	s12, s14
 8026cc8:	ee70 6a67 	vsub.f32	s13, s0, s15
 8026ccc:	ee16 2a90 	vmov	r2, s13
 8026cd0:	dc1c      	bgt.n	8026d0c <__ieee754_rem_pio2f+0x114>
 8026cd2:	495a      	ldr	r1, [pc, #360]	; (8026e3c <__ieee754_rem_pio2f+0x244>)
 8026cd4:	1e47      	subs	r7, r0, #1
 8026cd6:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8026cda:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8026cde:	428b      	cmp	r3, r1
 8026ce0:	d014      	beq.n	8026d0c <__ieee754_rem_pio2f+0x114>
 8026ce2:	6022      	str	r2, [r4, #0]
 8026ce4:	ed94 7a00 	vldr	s14, [r4]
 8026ce8:	ee30 0a47 	vsub.f32	s0, s0, s14
 8026cec:	2e00      	cmp	r6, #0
 8026cee:	ee30 0a67 	vsub.f32	s0, s0, s15
 8026cf2:	ed84 0a01 	vstr	s0, [r4, #4]
 8026cf6:	dab0      	bge.n	8026c5a <__ieee754_rem_pio2f+0x62>
 8026cf8:	eeb1 7a47 	vneg.f32	s14, s14
 8026cfc:	eeb1 0a40 	vneg.f32	s0, s0
 8026d00:	ed84 7a00 	vstr	s14, [r4]
 8026d04:	ed84 0a01 	vstr	s0, [r4, #4]
 8026d08:	4240      	negs	r0, r0
 8026d0a:	e7a6      	b.n	8026c5a <__ieee754_rem_pio2f+0x62>
 8026d0c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8026d10:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8026d14:	2908      	cmp	r1, #8
 8026d16:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8026d1a:	dde2      	ble.n	8026ce2 <__ieee754_rem_pio2f+0xea>
 8026d1c:	eddf 5a42 	vldr	s11, [pc, #264]	; 8026e28 <__ieee754_rem_pio2f+0x230>
 8026d20:	eef0 6a40 	vmov.f32	s13, s0
 8026d24:	eee6 6a25 	vfma.f32	s13, s12, s11
 8026d28:	ee70 7a66 	vsub.f32	s15, s0, s13
 8026d2c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8026d30:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8026e30 <__ieee754_rem_pio2f+0x238>
 8026d34:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8026d38:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8026d3c:	ee15 2a90 	vmov	r2, s11
 8026d40:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8026d44:	1a5b      	subs	r3, r3, r1
 8026d46:	2b19      	cmp	r3, #25
 8026d48:	dc04      	bgt.n	8026d54 <__ieee754_rem_pio2f+0x15c>
 8026d4a:	edc4 5a00 	vstr	s11, [r4]
 8026d4e:	eeb0 0a66 	vmov.f32	s0, s13
 8026d52:	e7c7      	b.n	8026ce4 <__ieee754_rem_pio2f+0xec>
 8026d54:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8026e40 <__ieee754_rem_pio2f+0x248>
 8026d58:	eeb0 0a66 	vmov.f32	s0, s13
 8026d5c:	eea6 0a25 	vfma.f32	s0, s12, s11
 8026d60:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8026d64:	eddf 6a37 	vldr	s13, [pc, #220]	; 8026e44 <__ieee754_rem_pio2f+0x24c>
 8026d68:	eee6 7a25 	vfma.f32	s15, s12, s11
 8026d6c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8026d70:	ee30 7a67 	vsub.f32	s14, s0, s15
 8026d74:	ed84 7a00 	vstr	s14, [r4]
 8026d78:	e7b4      	b.n	8026ce4 <__ieee754_rem_pio2f+0xec>
 8026d7a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8026d7e:	db06      	blt.n	8026d8e <__ieee754_rem_pio2f+0x196>
 8026d80:	ee70 7a40 	vsub.f32	s15, s0, s0
 8026d84:	edc0 7a01 	vstr	s15, [r0, #4]
 8026d88:	edc0 7a00 	vstr	s15, [r0]
 8026d8c:	e742      	b.n	8026c14 <__ieee754_rem_pio2f+0x1c>
 8026d8e:	15ea      	asrs	r2, r5, #23
 8026d90:	3a86      	subs	r2, #134	; 0x86
 8026d92:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8026d96:	ee07 3a90 	vmov	s15, r3
 8026d9a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8026d9e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8026e48 <__ieee754_rem_pio2f+0x250>
 8026da2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8026da6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026daa:	ed8d 7a03 	vstr	s14, [sp, #12]
 8026dae:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8026db2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8026db6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8026dba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026dbe:	ed8d 7a04 	vstr	s14, [sp, #16]
 8026dc2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8026dc6:	eef5 7a40 	vcmp.f32	s15, #0.0
 8026dca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026dce:	edcd 7a05 	vstr	s15, [sp, #20]
 8026dd2:	d11e      	bne.n	8026e12 <__ieee754_rem_pio2f+0x21a>
 8026dd4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8026dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026ddc:	bf14      	ite	ne
 8026dde:	2302      	movne	r3, #2
 8026de0:	2301      	moveq	r3, #1
 8026de2:	491a      	ldr	r1, [pc, #104]	; (8026e4c <__ieee754_rem_pio2f+0x254>)
 8026de4:	9101      	str	r1, [sp, #4]
 8026de6:	2102      	movs	r1, #2
 8026de8:	9100      	str	r1, [sp, #0]
 8026dea:	a803      	add	r0, sp, #12
 8026dec:	4621      	mov	r1, r4
 8026dee:	f000 f89d 	bl	8026f2c <__kernel_rem_pio2f>
 8026df2:	2e00      	cmp	r6, #0
 8026df4:	f6bf af31 	bge.w	8026c5a <__ieee754_rem_pio2f+0x62>
 8026df8:	edd4 7a00 	vldr	s15, [r4]
 8026dfc:	eef1 7a67 	vneg.f32	s15, s15
 8026e00:	edc4 7a00 	vstr	s15, [r4]
 8026e04:	edd4 7a01 	vldr	s15, [r4, #4]
 8026e08:	eef1 7a67 	vneg.f32	s15, s15
 8026e0c:	edc4 7a01 	vstr	s15, [r4, #4]
 8026e10:	e77a      	b.n	8026d08 <__ieee754_rem_pio2f+0x110>
 8026e12:	2303      	movs	r3, #3
 8026e14:	e7e5      	b.n	8026de2 <__ieee754_rem_pio2f+0x1ea>
 8026e16:	bf00      	nop
 8026e18:	3f490fd8 	.word	0x3f490fd8
 8026e1c:	4016cbe3 	.word	0x4016cbe3
 8026e20:	3fc90f80 	.word	0x3fc90f80
 8026e24:	3fc90fd0 	.word	0x3fc90fd0
 8026e28:	37354400 	.word	0x37354400
 8026e2c:	37354443 	.word	0x37354443
 8026e30:	2e85a308 	.word	0x2e85a308
 8026e34:	43490f80 	.word	0x43490f80
 8026e38:	3f22f984 	.word	0x3f22f984
 8026e3c:	0802bd44 	.word	0x0802bd44
 8026e40:	2e85a300 	.word	0x2e85a300
 8026e44:	248d3132 	.word	0x248d3132
 8026e48:	43800000 	.word	0x43800000
 8026e4c:	0802bdc4 	.word	0x0802bdc4

08026e50 <fabsf>:
 8026e50:	ee10 3a10 	vmov	r3, s0
 8026e54:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8026e58:	ee00 3a10 	vmov	s0, r3
 8026e5c:	4770      	bx	lr
	...

08026e60 <scalbnf>:
 8026e60:	ee10 3a10 	vmov	r3, s0
 8026e64:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8026e68:	d02b      	beq.n	8026ec2 <scalbnf+0x62>
 8026e6a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8026e6e:	d302      	bcc.n	8026e76 <scalbnf+0x16>
 8026e70:	ee30 0a00 	vadd.f32	s0, s0, s0
 8026e74:	4770      	bx	lr
 8026e76:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8026e7a:	d123      	bne.n	8026ec4 <scalbnf+0x64>
 8026e7c:	4b24      	ldr	r3, [pc, #144]	; (8026f10 <scalbnf+0xb0>)
 8026e7e:	eddf 7a25 	vldr	s15, [pc, #148]	; 8026f14 <scalbnf+0xb4>
 8026e82:	4298      	cmp	r0, r3
 8026e84:	ee20 0a27 	vmul.f32	s0, s0, s15
 8026e88:	db17      	blt.n	8026eba <scalbnf+0x5a>
 8026e8a:	ee10 3a10 	vmov	r3, s0
 8026e8e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8026e92:	3a19      	subs	r2, #25
 8026e94:	f24c 3150 	movw	r1, #50000	; 0xc350
 8026e98:	4288      	cmp	r0, r1
 8026e9a:	dd15      	ble.n	8026ec8 <scalbnf+0x68>
 8026e9c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8026f18 <scalbnf+0xb8>
 8026ea0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8026f1c <scalbnf+0xbc>
 8026ea4:	ee10 3a10 	vmov	r3, s0
 8026ea8:	eeb0 7a67 	vmov.f32	s14, s15
 8026eac:	2b00      	cmp	r3, #0
 8026eae:	bfb8      	it	lt
 8026eb0:	eef0 7a66 	vmovlt.f32	s15, s13
 8026eb4:	ee27 0a87 	vmul.f32	s0, s15, s14
 8026eb8:	4770      	bx	lr
 8026eba:	eddf 7a19 	vldr	s15, [pc, #100]	; 8026f20 <scalbnf+0xc0>
 8026ebe:	ee27 0a80 	vmul.f32	s0, s15, s0
 8026ec2:	4770      	bx	lr
 8026ec4:	0dd2      	lsrs	r2, r2, #23
 8026ec6:	e7e5      	b.n	8026e94 <scalbnf+0x34>
 8026ec8:	4410      	add	r0, r2
 8026eca:	28fe      	cmp	r0, #254	; 0xfe
 8026ecc:	dce6      	bgt.n	8026e9c <scalbnf+0x3c>
 8026ece:	2800      	cmp	r0, #0
 8026ed0:	dd06      	ble.n	8026ee0 <scalbnf+0x80>
 8026ed2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8026ed6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8026eda:	ee00 3a10 	vmov	s0, r3
 8026ede:	4770      	bx	lr
 8026ee0:	f110 0f16 	cmn.w	r0, #22
 8026ee4:	da09      	bge.n	8026efa <scalbnf+0x9a>
 8026ee6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8026f20 <scalbnf+0xc0>
 8026eea:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8026f24 <scalbnf+0xc4>
 8026eee:	ee10 3a10 	vmov	r3, s0
 8026ef2:	eeb0 7a67 	vmov.f32	s14, s15
 8026ef6:	2b00      	cmp	r3, #0
 8026ef8:	e7d9      	b.n	8026eae <scalbnf+0x4e>
 8026efa:	3019      	adds	r0, #25
 8026efc:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8026f00:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8026f04:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8026f28 <scalbnf+0xc8>
 8026f08:	ee07 3a90 	vmov	s15, r3
 8026f0c:	e7d7      	b.n	8026ebe <scalbnf+0x5e>
 8026f0e:	bf00      	nop
 8026f10:	ffff3cb0 	.word	0xffff3cb0
 8026f14:	4c000000 	.word	0x4c000000
 8026f18:	7149f2ca 	.word	0x7149f2ca
 8026f1c:	f149f2ca 	.word	0xf149f2ca
 8026f20:	0da24260 	.word	0x0da24260
 8026f24:	8da24260 	.word	0x8da24260
 8026f28:	33000000 	.word	0x33000000

08026f2c <__kernel_rem_pio2f>:
 8026f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f30:	ed2d 8b04 	vpush	{d8-d9}
 8026f34:	b0d9      	sub	sp, #356	; 0x164
 8026f36:	4688      	mov	r8, r1
 8026f38:	9002      	str	r0, [sp, #8]
 8026f3a:	49b8      	ldr	r1, [pc, #736]	; (802721c <__kernel_rem_pio2f+0x2f0>)
 8026f3c:	9866      	ldr	r0, [sp, #408]	; 0x198
 8026f3e:	9301      	str	r3, [sp, #4]
 8026f40:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8026f44:	9901      	ldr	r1, [sp, #4]
 8026f46:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8026f48:	f101 3bff 	add.w	fp, r1, #4294967295
 8026f4c:	1d11      	adds	r1, r2, #4
 8026f4e:	db25      	blt.n	8026f9c <__kernel_rem_pio2f+0x70>
 8026f50:	1ed0      	subs	r0, r2, #3
 8026f52:	bf48      	it	mi
 8026f54:	1d10      	addmi	r0, r2, #4
 8026f56:	10c0      	asrs	r0, r0, #3
 8026f58:	1c45      	adds	r5, r0, #1
 8026f5a:	00e9      	lsls	r1, r5, #3
 8026f5c:	eba0 070b 	sub.w	r7, r0, fp
 8026f60:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802722c <__kernel_rem_pio2f+0x300>
 8026f64:	9103      	str	r1, [sp, #12]
 8026f66:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8026f6a:	eb0a 0c0b 	add.w	ip, sl, fp
 8026f6e:	ae1c      	add	r6, sp, #112	; 0x70
 8026f70:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8026f74:	2400      	movs	r4, #0
 8026f76:	4564      	cmp	r4, ip
 8026f78:	dd12      	ble.n	8026fa0 <__kernel_rem_pio2f+0x74>
 8026f7a:	9901      	ldr	r1, [sp, #4]
 8026f7c:	ac1c      	add	r4, sp, #112	; 0x70
 8026f7e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8026f82:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8026f86:	f04f 0c00 	mov.w	ip, #0
 8026f8a:	45d4      	cmp	ip, sl
 8026f8c:	dc27      	bgt.n	8026fde <__kernel_rem_pio2f+0xb2>
 8026f8e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8026f92:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802722c <__kernel_rem_pio2f+0x300>
 8026f96:	4627      	mov	r7, r4
 8026f98:	2600      	movs	r6, #0
 8026f9a:	e016      	b.n	8026fca <__kernel_rem_pio2f+0x9e>
 8026f9c:	2000      	movs	r0, #0
 8026f9e:	e7db      	b.n	8026f58 <__kernel_rem_pio2f+0x2c>
 8026fa0:	42e7      	cmn	r7, r4
 8026fa2:	bf5d      	ittte	pl
 8026fa4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8026fa8:	ee07 1a90 	vmovpl	s15, r1
 8026fac:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8026fb0:	eef0 7a47 	vmovmi.f32	s15, s14
 8026fb4:	ece6 7a01 	vstmia	r6!, {s15}
 8026fb8:	3401      	adds	r4, #1
 8026fba:	e7dc      	b.n	8026f76 <__kernel_rem_pio2f+0x4a>
 8026fbc:	ecfe 6a01 	vldmia	lr!, {s13}
 8026fc0:	ed97 7a00 	vldr	s14, [r7]
 8026fc4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8026fc8:	3601      	adds	r6, #1
 8026fca:	455e      	cmp	r6, fp
 8026fcc:	f1a7 0704 	sub.w	r7, r7, #4
 8026fd0:	ddf4      	ble.n	8026fbc <__kernel_rem_pio2f+0x90>
 8026fd2:	ece9 7a01 	vstmia	r9!, {s15}
 8026fd6:	f10c 0c01 	add.w	ip, ip, #1
 8026fda:	3404      	adds	r4, #4
 8026fdc:	e7d5      	b.n	8026f8a <__kernel_rem_pio2f+0x5e>
 8026fde:	a908      	add	r1, sp, #32
 8026fe0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8026fe4:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8026fe8:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8027228 <__kernel_rem_pio2f+0x2fc>
 8026fec:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8027224 <__kernel_rem_pio2f+0x2f8>
 8026ff0:	9105      	str	r1, [sp, #20]
 8026ff2:	9304      	str	r3, [sp, #16]
 8026ff4:	4656      	mov	r6, sl
 8026ff6:	00b3      	lsls	r3, r6, #2
 8026ff8:	9306      	str	r3, [sp, #24]
 8026ffa:	ab58      	add	r3, sp, #352	; 0x160
 8026ffc:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8027000:	ac08      	add	r4, sp, #32
 8027002:	ab44      	add	r3, sp, #272	; 0x110
 8027004:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8027008:	46a4      	mov	ip, r4
 802700a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802700e:	4637      	mov	r7, r6
 8027010:	2f00      	cmp	r7, #0
 8027012:	f1a0 0004 	sub.w	r0, r0, #4
 8027016:	dc4a      	bgt.n	80270ae <__kernel_rem_pio2f+0x182>
 8027018:	4628      	mov	r0, r5
 802701a:	9207      	str	r2, [sp, #28]
 802701c:	f7ff ff20 	bl	8026e60 <scalbnf>
 8027020:	eeb0 8a40 	vmov.f32	s16, s0
 8027024:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8027028:	ee28 0a00 	vmul.f32	s0, s16, s0
 802702c:	f7ff fcfc 	bl	8026a28 <floorf>
 8027030:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8027034:	eea0 8a67 	vfms.f32	s16, s0, s15
 8027038:	2d00      	cmp	r5, #0
 802703a:	9a07      	ldr	r2, [sp, #28]
 802703c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8027040:	ee17 9a90 	vmov	r9, s15
 8027044:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027048:	ee38 8a67 	vsub.f32	s16, s16, s15
 802704c:	dd41      	ble.n	80270d2 <__kernel_rem_pio2f+0x1a6>
 802704e:	f106 3cff 	add.w	ip, r6, #4294967295
 8027052:	ab08      	add	r3, sp, #32
 8027054:	f1c5 0e08 	rsb	lr, r5, #8
 8027058:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802705c:	fa47 f00e 	asr.w	r0, r7, lr
 8027060:	4481      	add	r9, r0
 8027062:	fa00 f00e 	lsl.w	r0, r0, lr
 8027066:	1a3f      	subs	r7, r7, r0
 8027068:	f1c5 0007 	rsb	r0, r5, #7
 802706c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8027070:	4107      	asrs	r7, r0
 8027072:	2f00      	cmp	r7, #0
 8027074:	dd3c      	ble.n	80270f0 <__kernel_rem_pio2f+0x1c4>
 8027076:	f04f 0e00 	mov.w	lr, #0
 802707a:	f109 0901 	add.w	r9, r9, #1
 802707e:	4671      	mov	r1, lr
 8027080:	4576      	cmp	r6, lr
 8027082:	dc67      	bgt.n	8027154 <__kernel_rem_pio2f+0x228>
 8027084:	2d00      	cmp	r5, #0
 8027086:	dd03      	ble.n	8027090 <__kernel_rem_pio2f+0x164>
 8027088:	2d01      	cmp	r5, #1
 802708a:	d074      	beq.n	8027176 <__kernel_rem_pio2f+0x24a>
 802708c:	2d02      	cmp	r5, #2
 802708e:	d07b      	beq.n	8027188 <__kernel_rem_pio2f+0x25c>
 8027090:	2f02      	cmp	r7, #2
 8027092:	d12d      	bne.n	80270f0 <__kernel_rem_pio2f+0x1c4>
 8027094:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8027098:	ee30 8a48 	vsub.f32	s16, s0, s16
 802709c:	b341      	cbz	r1, 80270f0 <__kernel_rem_pio2f+0x1c4>
 802709e:	4628      	mov	r0, r5
 80270a0:	9207      	str	r2, [sp, #28]
 80270a2:	f7ff fedd 	bl	8026e60 <scalbnf>
 80270a6:	9a07      	ldr	r2, [sp, #28]
 80270a8:	ee38 8a40 	vsub.f32	s16, s16, s0
 80270ac:	e020      	b.n	80270f0 <__kernel_rem_pio2f+0x1c4>
 80270ae:	ee60 7a28 	vmul.f32	s15, s0, s17
 80270b2:	3f01      	subs	r7, #1
 80270b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80270b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80270bc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80270c0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80270c4:	ecac 0a01 	vstmia	ip!, {s0}
 80270c8:	ed90 0a00 	vldr	s0, [r0]
 80270cc:	ee37 0a80 	vadd.f32	s0, s15, s0
 80270d0:	e79e      	b.n	8027010 <__kernel_rem_pio2f+0xe4>
 80270d2:	d105      	bne.n	80270e0 <__kernel_rem_pio2f+0x1b4>
 80270d4:	1e70      	subs	r0, r6, #1
 80270d6:	ab08      	add	r3, sp, #32
 80270d8:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 80270dc:	11ff      	asrs	r7, r7, #7
 80270de:	e7c8      	b.n	8027072 <__kernel_rem_pio2f+0x146>
 80270e0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80270e4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80270e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80270ec:	da30      	bge.n	8027150 <__kernel_rem_pio2f+0x224>
 80270ee:	2700      	movs	r7, #0
 80270f0:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80270f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80270f8:	f040 809a 	bne.w	8027230 <__kernel_rem_pio2f+0x304>
 80270fc:	1e74      	subs	r4, r6, #1
 80270fe:	46a4      	mov	ip, r4
 8027100:	2100      	movs	r1, #0
 8027102:	45d4      	cmp	ip, sl
 8027104:	da47      	bge.n	8027196 <__kernel_rem_pio2f+0x26a>
 8027106:	2900      	cmp	r1, #0
 8027108:	d063      	beq.n	80271d2 <__kernel_rem_pio2f+0x2a6>
 802710a:	ab08      	add	r3, sp, #32
 802710c:	3d08      	subs	r5, #8
 802710e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8027112:	2b00      	cmp	r3, #0
 8027114:	d07f      	beq.n	8027216 <__kernel_rem_pio2f+0x2ea>
 8027116:	4628      	mov	r0, r5
 8027118:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802711c:	f7ff fea0 	bl	8026e60 <scalbnf>
 8027120:	1c63      	adds	r3, r4, #1
 8027122:	aa44      	add	r2, sp, #272	; 0x110
 8027124:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8027228 <__kernel_rem_pio2f+0x2fc>
 8027128:	0099      	lsls	r1, r3, #2
 802712a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802712e:	4623      	mov	r3, r4
 8027130:	2b00      	cmp	r3, #0
 8027132:	f280 80ad 	bge.w	8027290 <__kernel_rem_pio2f+0x364>
 8027136:	4623      	mov	r3, r4
 8027138:	2b00      	cmp	r3, #0
 802713a:	f2c0 80cb 	blt.w	80272d4 <__kernel_rem_pio2f+0x3a8>
 802713e:	aa44      	add	r2, sp, #272	; 0x110
 8027140:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8027144:	4e36      	ldr	r6, [pc, #216]	; (8027220 <__kernel_rem_pio2f+0x2f4>)
 8027146:	eddf 7a39 	vldr	s15, [pc, #228]	; 802722c <__kernel_rem_pio2f+0x300>
 802714a:	2000      	movs	r0, #0
 802714c:	1ae2      	subs	r2, r4, r3
 802714e:	e0b6      	b.n	80272be <__kernel_rem_pio2f+0x392>
 8027150:	2702      	movs	r7, #2
 8027152:	e790      	b.n	8027076 <__kernel_rem_pio2f+0x14a>
 8027154:	6820      	ldr	r0, [r4, #0]
 8027156:	b949      	cbnz	r1, 802716c <__kernel_rem_pio2f+0x240>
 8027158:	b118      	cbz	r0, 8027162 <__kernel_rem_pio2f+0x236>
 802715a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802715e:	6020      	str	r0, [r4, #0]
 8027160:	2001      	movs	r0, #1
 8027162:	f10e 0e01 	add.w	lr, lr, #1
 8027166:	3404      	adds	r4, #4
 8027168:	4601      	mov	r1, r0
 802716a:	e789      	b.n	8027080 <__kernel_rem_pio2f+0x154>
 802716c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8027170:	6020      	str	r0, [r4, #0]
 8027172:	4608      	mov	r0, r1
 8027174:	e7f5      	b.n	8027162 <__kernel_rem_pio2f+0x236>
 8027176:	1e74      	subs	r4, r6, #1
 8027178:	ab08      	add	r3, sp, #32
 802717a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802717e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8027182:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8027186:	e783      	b.n	8027090 <__kernel_rem_pio2f+0x164>
 8027188:	1e74      	subs	r4, r6, #1
 802718a:	ab08      	add	r3, sp, #32
 802718c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8027190:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8027194:	e7f5      	b.n	8027182 <__kernel_rem_pio2f+0x256>
 8027196:	ab08      	add	r3, sp, #32
 8027198:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802719c:	f10c 3cff 	add.w	ip, ip, #4294967295
 80271a0:	4301      	orrs	r1, r0
 80271a2:	e7ae      	b.n	8027102 <__kernel_rem_pio2f+0x1d6>
 80271a4:	3001      	adds	r0, #1
 80271a6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 80271aa:	2f00      	cmp	r7, #0
 80271ac:	d0fa      	beq.n	80271a4 <__kernel_rem_pio2f+0x278>
 80271ae:	9b06      	ldr	r3, [sp, #24]
 80271b0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 80271b4:	eb0d 0403 	add.w	r4, sp, r3
 80271b8:	9b01      	ldr	r3, [sp, #4]
 80271ba:	18f7      	adds	r7, r6, r3
 80271bc:	ab1c      	add	r3, sp, #112	; 0x70
 80271be:	f106 0c01 	add.w	ip, r6, #1
 80271c2:	3c4c      	subs	r4, #76	; 0x4c
 80271c4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80271c8:	4430      	add	r0, r6
 80271ca:	4560      	cmp	r0, ip
 80271cc:	da04      	bge.n	80271d8 <__kernel_rem_pio2f+0x2ac>
 80271ce:	4606      	mov	r6, r0
 80271d0:	e711      	b.n	8026ff6 <__kernel_rem_pio2f+0xca>
 80271d2:	9c05      	ldr	r4, [sp, #20]
 80271d4:	2001      	movs	r0, #1
 80271d6:	e7e6      	b.n	80271a6 <__kernel_rem_pio2f+0x27a>
 80271d8:	9b04      	ldr	r3, [sp, #16]
 80271da:	f8dd e008 	ldr.w	lr, [sp, #8]
 80271de:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80271e2:	9306      	str	r3, [sp, #24]
 80271e4:	ee07 3a90 	vmov	s15, r3
 80271e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80271ec:	2600      	movs	r6, #0
 80271ee:	ece7 7a01 	vstmia	r7!, {s15}
 80271f2:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802722c <__kernel_rem_pio2f+0x300>
 80271f6:	46b9      	mov	r9, r7
 80271f8:	455e      	cmp	r6, fp
 80271fa:	dd04      	ble.n	8027206 <__kernel_rem_pio2f+0x2da>
 80271fc:	ece4 7a01 	vstmia	r4!, {s15}
 8027200:	f10c 0c01 	add.w	ip, ip, #1
 8027204:	e7e1      	b.n	80271ca <__kernel_rem_pio2f+0x29e>
 8027206:	ecfe 6a01 	vldmia	lr!, {s13}
 802720a:	ed39 7a01 	vldmdb	r9!, {s14}
 802720e:	3601      	adds	r6, #1
 8027210:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027214:	e7f0      	b.n	80271f8 <__kernel_rem_pio2f+0x2cc>
 8027216:	3c01      	subs	r4, #1
 8027218:	e777      	b.n	802710a <__kernel_rem_pio2f+0x1de>
 802721a:	bf00      	nop
 802721c:	0802c108 	.word	0x0802c108
 8027220:	0802c0dc 	.word	0x0802c0dc
 8027224:	43800000 	.word	0x43800000
 8027228:	3b800000 	.word	0x3b800000
 802722c:	00000000 	.word	0x00000000
 8027230:	9b03      	ldr	r3, [sp, #12]
 8027232:	eeb0 0a48 	vmov.f32	s0, s16
 8027236:	1a98      	subs	r0, r3, r2
 8027238:	f7ff fe12 	bl	8026e60 <scalbnf>
 802723c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8027224 <__kernel_rem_pio2f+0x2f8>
 8027240:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8027244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027248:	db19      	blt.n	802727e <__kernel_rem_pio2f+0x352>
 802724a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8027228 <__kernel_rem_pio2f+0x2fc>
 802724e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027252:	aa08      	add	r2, sp, #32
 8027254:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027258:	1c74      	adds	r4, r6, #1
 802725a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802725e:	3508      	adds	r5, #8
 8027260:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8027264:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027268:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802726c:	ee10 3a10 	vmov	r3, s0
 8027270:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8027274:	ee17 3a90 	vmov	r3, s15
 8027278:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802727c:	e74b      	b.n	8027116 <__kernel_rem_pio2f+0x1ea>
 802727e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027282:	aa08      	add	r2, sp, #32
 8027284:	ee10 3a10 	vmov	r3, s0
 8027288:	4634      	mov	r4, r6
 802728a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802728e:	e742      	b.n	8027116 <__kernel_rem_pio2f+0x1ea>
 8027290:	a808      	add	r0, sp, #32
 8027292:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8027296:	9001      	str	r0, [sp, #4]
 8027298:	ee07 0a90 	vmov	s15, r0
 802729c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80272a0:	3b01      	subs	r3, #1
 80272a2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80272a6:	ee20 0a07 	vmul.f32	s0, s0, s14
 80272aa:	ed62 7a01 	vstmdb	r2!, {s15}
 80272ae:	e73f      	b.n	8027130 <__kernel_rem_pio2f+0x204>
 80272b0:	ecf6 6a01 	vldmia	r6!, {s13}
 80272b4:	ecb5 7a01 	vldmia	r5!, {s14}
 80272b8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80272bc:	3001      	adds	r0, #1
 80272be:	4550      	cmp	r0, sl
 80272c0:	dc01      	bgt.n	80272c6 <__kernel_rem_pio2f+0x39a>
 80272c2:	4290      	cmp	r0, r2
 80272c4:	ddf4      	ble.n	80272b0 <__kernel_rem_pio2f+0x384>
 80272c6:	a858      	add	r0, sp, #352	; 0x160
 80272c8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80272cc:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 80272d0:	3b01      	subs	r3, #1
 80272d2:	e731      	b.n	8027138 <__kernel_rem_pio2f+0x20c>
 80272d4:	9b66      	ldr	r3, [sp, #408]	; 0x198
 80272d6:	2b02      	cmp	r3, #2
 80272d8:	dc09      	bgt.n	80272ee <__kernel_rem_pio2f+0x3c2>
 80272da:	2b00      	cmp	r3, #0
 80272dc:	dc2b      	bgt.n	8027336 <__kernel_rem_pio2f+0x40a>
 80272de:	d044      	beq.n	802736a <__kernel_rem_pio2f+0x43e>
 80272e0:	f009 0007 	and.w	r0, r9, #7
 80272e4:	b059      	add	sp, #356	; 0x164
 80272e6:	ecbd 8b04 	vpop	{d8-d9}
 80272ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80272ee:	9b66      	ldr	r3, [sp, #408]	; 0x198
 80272f0:	2b03      	cmp	r3, #3
 80272f2:	d1f5      	bne.n	80272e0 <__kernel_rem_pio2f+0x3b4>
 80272f4:	aa30      	add	r2, sp, #192	; 0xc0
 80272f6:	1f0b      	subs	r3, r1, #4
 80272f8:	4413      	add	r3, r2
 80272fa:	461a      	mov	r2, r3
 80272fc:	4620      	mov	r0, r4
 80272fe:	2800      	cmp	r0, #0
 8027300:	f1a2 0204 	sub.w	r2, r2, #4
 8027304:	dc52      	bgt.n	80273ac <__kernel_rem_pio2f+0x480>
 8027306:	4622      	mov	r2, r4
 8027308:	2a01      	cmp	r2, #1
 802730a:	f1a3 0304 	sub.w	r3, r3, #4
 802730e:	dc5d      	bgt.n	80273cc <__kernel_rem_pio2f+0x4a0>
 8027310:	ab30      	add	r3, sp, #192	; 0xc0
 8027312:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802722c <__kernel_rem_pio2f+0x300>
 8027316:	440b      	add	r3, r1
 8027318:	2c01      	cmp	r4, #1
 802731a:	dc67      	bgt.n	80273ec <__kernel_rem_pio2f+0x4c0>
 802731c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8027320:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8027324:	2f00      	cmp	r7, #0
 8027326:	d167      	bne.n	80273f8 <__kernel_rem_pio2f+0x4cc>
 8027328:	edc8 6a00 	vstr	s13, [r8]
 802732c:	ed88 7a01 	vstr	s14, [r8, #4]
 8027330:	edc8 7a02 	vstr	s15, [r8, #8]
 8027334:	e7d4      	b.n	80272e0 <__kernel_rem_pio2f+0x3b4>
 8027336:	ab30      	add	r3, sp, #192	; 0xc0
 8027338:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802722c <__kernel_rem_pio2f+0x300>
 802733c:	440b      	add	r3, r1
 802733e:	4622      	mov	r2, r4
 8027340:	2a00      	cmp	r2, #0
 8027342:	da24      	bge.n	802738e <__kernel_rem_pio2f+0x462>
 8027344:	b34f      	cbz	r7, 802739a <__kernel_rem_pio2f+0x46e>
 8027346:	eef1 7a47 	vneg.f32	s15, s14
 802734a:	edc8 7a00 	vstr	s15, [r8]
 802734e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8027352:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027356:	aa31      	add	r2, sp, #196	; 0xc4
 8027358:	2301      	movs	r3, #1
 802735a:	429c      	cmp	r4, r3
 802735c:	da20      	bge.n	80273a0 <__kernel_rem_pio2f+0x474>
 802735e:	b10f      	cbz	r7, 8027364 <__kernel_rem_pio2f+0x438>
 8027360:	eef1 7a67 	vneg.f32	s15, s15
 8027364:	edc8 7a01 	vstr	s15, [r8, #4]
 8027368:	e7ba      	b.n	80272e0 <__kernel_rem_pio2f+0x3b4>
 802736a:	ab30      	add	r3, sp, #192	; 0xc0
 802736c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802722c <__kernel_rem_pio2f+0x300>
 8027370:	440b      	add	r3, r1
 8027372:	2c00      	cmp	r4, #0
 8027374:	da05      	bge.n	8027382 <__kernel_rem_pio2f+0x456>
 8027376:	b10f      	cbz	r7, 802737c <__kernel_rem_pio2f+0x450>
 8027378:	eef1 7a67 	vneg.f32	s15, s15
 802737c:	edc8 7a00 	vstr	s15, [r8]
 8027380:	e7ae      	b.n	80272e0 <__kernel_rem_pio2f+0x3b4>
 8027382:	ed33 7a01 	vldmdb	r3!, {s14}
 8027386:	3c01      	subs	r4, #1
 8027388:	ee77 7a87 	vadd.f32	s15, s15, s14
 802738c:	e7f1      	b.n	8027372 <__kernel_rem_pio2f+0x446>
 802738e:	ed73 7a01 	vldmdb	r3!, {s15}
 8027392:	3a01      	subs	r2, #1
 8027394:	ee37 7a27 	vadd.f32	s14, s14, s15
 8027398:	e7d2      	b.n	8027340 <__kernel_rem_pio2f+0x414>
 802739a:	eef0 7a47 	vmov.f32	s15, s14
 802739e:	e7d4      	b.n	802734a <__kernel_rem_pio2f+0x41e>
 80273a0:	ecb2 7a01 	vldmia	r2!, {s14}
 80273a4:	3301      	adds	r3, #1
 80273a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80273aa:	e7d6      	b.n	802735a <__kernel_rem_pio2f+0x42e>
 80273ac:	edd2 7a00 	vldr	s15, [r2]
 80273b0:	edd2 6a01 	vldr	s13, [r2, #4]
 80273b4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80273b8:	3801      	subs	r0, #1
 80273ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80273be:	ed82 7a00 	vstr	s14, [r2]
 80273c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80273c6:	edc2 7a01 	vstr	s15, [r2, #4]
 80273ca:	e798      	b.n	80272fe <__kernel_rem_pio2f+0x3d2>
 80273cc:	edd3 7a00 	vldr	s15, [r3]
 80273d0:	edd3 6a01 	vldr	s13, [r3, #4]
 80273d4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80273d8:	3a01      	subs	r2, #1
 80273da:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80273de:	ed83 7a00 	vstr	s14, [r3]
 80273e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80273e6:	edc3 7a01 	vstr	s15, [r3, #4]
 80273ea:	e78d      	b.n	8027308 <__kernel_rem_pio2f+0x3dc>
 80273ec:	ed33 7a01 	vldmdb	r3!, {s14}
 80273f0:	3c01      	subs	r4, #1
 80273f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80273f6:	e78f      	b.n	8027318 <__kernel_rem_pio2f+0x3ec>
 80273f8:	eef1 6a66 	vneg.f32	s13, s13
 80273fc:	eeb1 7a47 	vneg.f32	s14, s14
 8027400:	edc8 6a00 	vstr	s13, [r8]
 8027404:	ed88 7a01 	vstr	s14, [r8, #4]
 8027408:	eef1 7a67 	vneg.f32	s15, s15
 802740c:	e790      	b.n	8027330 <__kernel_rem_pio2f+0x404>
 802740e:	bf00      	nop

08027410 <abort>:
 8027410:	b508      	push	{r3, lr}
 8027412:	2006      	movs	r0, #6
 8027414:	f000 fa3a 	bl	802788c <raise>
 8027418:	2001      	movs	r0, #1
 802741a:	f7da febb 	bl	8002194 <_exit>
	...

08027420 <__assert_func>:
 8027420:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8027422:	4614      	mov	r4, r2
 8027424:	461a      	mov	r2, r3
 8027426:	4b09      	ldr	r3, [pc, #36]	; (802744c <__assert_func+0x2c>)
 8027428:	681b      	ldr	r3, [r3, #0]
 802742a:	4605      	mov	r5, r0
 802742c:	68d8      	ldr	r0, [r3, #12]
 802742e:	b14c      	cbz	r4, 8027444 <__assert_func+0x24>
 8027430:	4b07      	ldr	r3, [pc, #28]	; (8027450 <__assert_func+0x30>)
 8027432:	9100      	str	r1, [sp, #0]
 8027434:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8027438:	4906      	ldr	r1, [pc, #24]	; (8027454 <__assert_func+0x34>)
 802743a:	462b      	mov	r3, r5
 802743c:	f000 f982 	bl	8027744 <fiprintf>
 8027440:	f7ff ffe6 	bl	8027410 <abort>
 8027444:	4b04      	ldr	r3, [pc, #16]	; (8027458 <__assert_func+0x38>)
 8027446:	461c      	mov	r4, r3
 8027448:	e7f3      	b.n	8027432 <__assert_func+0x12>
 802744a:	bf00      	nop
 802744c:	20000160 	.word	0x20000160
 8027450:	0802c114 	.word	0x0802c114
 8027454:	0802c121 	.word	0x0802c121
 8027458:	0802c14f 	.word	0x0802c14f

0802745c <atexit>:
 802745c:	2300      	movs	r3, #0
 802745e:	4601      	mov	r1, r0
 8027460:	461a      	mov	r2, r3
 8027462:	4618      	mov	r0, r3
 8027464:	f000 bb16 	b.w	8027a94 <__register_exitproc>

08027468 <malloc>:
 8027468:	4b02      	ldr	r3, [pc, #8]	; (8027474 <malloc+0xc>)
 802746a:	4601      	mov	r1, r0
 802746c:	6818      	ldr	r0, [r3, #0]
 802746e:	f000 b82b 	b.w	80274c8 <_malloc_r>
 8027472:	bf00      	nop
 8027474:	20000160 	.word	0x20000160

08027478 <free>:
 8027478:	4b02      	ldr	r3, [pc, #8]	; (8027484 <free+0xc>)
 802747a:	4601      	mov	r1, r0
 802747c:	6818      	ldr	r0, [r3, #0]
 802747e:	f000 bb67 	b.w	8027b50 <_free_r>
 8027482:	bf00      	nop
 8027484:	20000160 	.word	0x20000160

08027488 <sbrk_aligned>:
 8027488:	b570      	push	{r4, r5, r6, lr}
 802748a:	4e0e      	ldr	r6, [pc, #56]	; (80274c4 <sbrk_aligned+0x3c>)
 802748c:	460c      	mov	r4, r1
 802748e:	6831      	ldr	r1, [r6, #0]
 8027490:	4605      	mov	r5, r0
 8027492:	b911      	cbnz	r1, 802749a <sbrk_aligned+0x12>
 8027494:	f000 faa0 	bl	80279d8 <_sbrk_r>
 8027498:	6030      	str	r0, [r6, #0]
 802749a:	4621      	mov	r1, r4
 802749c:	4628      	mov	r0, r5
 802749e:	f000 fa9b 	bl	80279d8 <_sbrk_r>
 80274a2:	1c43      	adds	r3, r0, #1
 80274a4:	d00a      	beq.n	80274bc <sbrk_aligned+0x34>
 80274a6:	1cc4      	adds	r4, r0, #3
 80274a8:	f024 0403 	bic.w	r4, r4, #3
 80274ac:	42a0      	cmp	r0, r4
 80274ae:	d007      	beq.n	80274c0 <sbrk_aligned+0x38>
 80274b0:	1a21      	subs	r1, r4, r0
 80274b2:	4628      	mov	r0, r5
 80274b4:	f000 fa90 	bl	80279d8 <_sbrk_r>
 80274b8:	3001      	adds	r0, #1
 80274ba:	d101      	bne.n	80274c0 <sbrk_aligned+0x38>
 80274bc:	f04f 34ff 	mov.w	r4, #4294967295
 80274c0:	4620      	mov	r0, r4
 80274c2:	bd70      	pop	{r4, r5, r6, pc}
 80274c4:	20014114 	.word	0x20014114

080274c8 <_malloc_r>:
 80274c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80274cc:	1ccd      	adds	r5, r1, #3
 80274ce:	f025 0503 	bic.w	r5, r5, #3
 80274d2:	3508      	adds	r5, #8
 80274d4:	2d0c      	cmp	r5, #12
 80274d6:	bf38      	it	cc
 80274d8:	250c      	movcc	r5, #12
 80274da:	2d00      	cmp	r5, #0
 80274dc:	4607      	mov	r7, r0
 80274de:	db01      	blt.n	80274e4 <_malloc_r+0x1c>
 80274e0:	42a9      	cmp	r1, r5
 80274e2:	d905      	bls.n	80274f0 <_malloc_r+0x28>
 80274e4:	230c      	movs	r3, #12
 80274e6:	603b      	str	r3, [r7, #0]
 80274e8:	2600      	movs	r6, #0
 80274ea:	4630      	mov	r0, r6
 80274ec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80274f0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80275c4 <_malloc_r+0xfc>
 80274f4:	f000 f868 	bl	80275c8 <__malloc_lock>
 80274f8:	f8d8 3000 	ldr.w	r3, [r8]
 80274fc:	461c      	mov	r4, r3
 80274fe:	bb5c      	cbnz	r4, 8027558 <_malloc_r+0x90>
 8027500:	4629      	mov	r1, r5
 8027502:	4638      	mov	r0, r7
 8027504:	f7ff ffc0 	bl	8027488 <sbrk_aligned>
 8027508:	1c43      	adds	r3, r0, #1
 802750a:	4604      	mov	r4, r0
 802750c:	d155      	bne.n	80275ba <_malloc_r+0xf2>
 802750e:	f8d8 4000 	ldr.w	r4, [r8]
 8027512:	4626      	mov	r6, r4
 8027514:	2e00      	cmp	r6, #0
 8027516:	d145      	bne.n	80275a4 <_malloc_r+0xdc>
 8027518:	2c00      	cmp	r4, #0
 802751a:	d048      	beq.n	80275ae <_malloc_r+0xe6>
 802751c:	6823      	ldr	r3, [r4, #0]
 802751e:	4631      	mov	r1, r6
 8027520:	4638      	mov	r0, r7
 8027522:	eb04 0903 	add.w	r9, r4, r3
 8027526:	f000 fa57 	bl	80279d8 <_sbrk_r>
 802752a:	4581      	cmp	r9, r0
 802752c:	d13f      	bne.n	80275ae <_malloc_r+0xe6>
 802752e:	6821      	ldr	r1, [r4, #0]
 8027530:	1a6d      	subs	r5, r5, r1
 8027532:	4629      	mov	r1, r5
 8027534:	4638      	mov	r0, r7
 8027536:	f7ff ffa7 	bl	8027488 <sbrk_aligned>
 802753a:	3001      	adds	r0, #1
 802753c:	d037      	beq.n	80275ae <_malloc_r+0xe6>
 802753e:	6823      	ldr	r3, [r4, #0]
 8027540:	442b      	add	r3, r5
 8027542:	6023      	str	r3, [r4, #0]
 8027544:	f8d8 3000 	ldr.w	r3, [r8]
 8027548:	2b00      	cmp	r3, #0
 802754a:	d038      	beq.n	80275be <_malloc_r+0xf6>
 802754c:	685a      	ldr	r2, [r3, #4]
 802754e:	42a2      	cmp	r2, r4
 8027550:	d12b      	bne.n	80275aa <_malloc_r+0xe2>
 8027552:	2200      	movs	r2, #0
 8027554:	605a      	str	r2, [r3, #4]
 8027556:	e00f      	b.n	8027578 <_malloc_r+0xb0>
 8027558:	6822      	ldr	r2, [r4, #0]
 802755a:	1b52      	subs	r2, r2, r5
 802755c:	d41f      	bmi.n	802759e <_malloc_r+0xd6>
 802755e:	2a0b      	cmp	r2, #11
 8027560:	d917      	bls.n	8027592 <_malloc_r+0xca>
 8027562:	1961      	adds	r1, r4, r5
 8027564:	42a3      	cmp	r3, r4
 8027566:	6025      	str	r5, [r4, #0]
 8027568:	bf18      	it	ne
 802756a:	6059      	strne	r1, [r3, #4]
 802756c:	6863      	ldr	r3, [r4, #4]
 802756e:	bf08      	it	eq
 8027570:	f8c8 1000 	streq.w	r1, [r8]
 8027574:	5162      	str	r2, [r4, r5]
 8027576:	604b      	str	r3, [r1, #4]
 8027578:	4638      	mov	r0, r7
 802757a:	f104 060b 	add.w	r6, r4, #11
 802757e:	f000 f829 	bl	80275d4 <__malloc_unlock>
 8027582:	f026 0607 	bic.w	r6, r6, #7
 8027586:	1d23      	adds	r3, r4, #4
 8027588:	1af2      	subs	r2, r6, r3
 802758a:	d0ae      	beq.n	80274ea <_malloc_r+0x22>
 802758c:	1b9b      	subs	r3, r3, r6
 802758e:	50a3      	str	r3, [r4, r2]
 8027590:	e7ab      	b.n	80274ea <_malloc_r+0x22>
 8027592:	42a3      	cmp	r3, r4
 8027594:	6862      	ldr	r2, [r4, #4]
 8027596:	d1dd      	bne.n	8027554 <_malloc_r+0x8c>
 8027598:	f8c8 2000 	str.w	r2, [r8]
 802759c:	e7ec      	b.n	8027578 <_malloc_r+0xb0>
 802759e:	4623      	mov	r3, r4
 80275a0:	6864      	ldr	r4, [r4, #4]
 80275a2:	e7ac      	b.n	80274fe <_malloc_r+0x36>
 80275a4:	4634      	mov	r4, r6
 80275a6:	6876      	ldr	r6, [r6, #4]
 80275a8:	e7b4      	b.n	8027514 <_malloc_r+0x4c>
 80275aa:	4613      	mov	r3, r2
 80275ac:	e7cc      	b.n	8027548 <_malloc_r+0x80>
 80275ae:	230c      	movs	r3, #12
 80275b0:	603b      	str	r3, [r7, #0]
 80275b2:	4638      	mov	r0, r7
 80275b4:	f000 f80e 	bl	80275d4 <__malloc_unlock>
 80275b8:	e797      	b.n	80274ea <_malloc_r+0x22>
 80275ba:	6025      	str	r5, [r4, #0]
 80275bc:	e7dc      	b.n	8027578 <_malloc_r+0xb0>
 80275be:	605b      	str	r3, [r3, #4]
 80275c0:	deff      	udf	#255	; 0xff
 80275c2:	bf00      	nop
 80275c4:	20014110 	.word	0x20014110

080275c8 <__malloc_lock>:
 80275c8:	4801      	ldr	r0, [pc, #4]	; (80275d0 <__malloc_lock+0x8>)
 80275ca:	f000 ba52 	b.w	8027a72 <__retarget_lock_acquire_recursive>
 80275ce:	bf00      	nop
 80275d0:	20014259 	.word	0x20014259

080275d4 <__malloc_unlock>:
 80275d4:	4801      	ldr	r0, [pc, #4]	; (80275dc <__malloc_unlock+0x8>)
 80275d6:	f000 ba4d 	b.w	8027a74 <__retarget_lock_release_recursive>
 80275da:	bf00      	nop
 80275dc:	20014259 	.word	0x20014259

080275e0 <__cxa_atexit>:
 80275e0:	b510      	push	{r4, lr}
 80275e2:	4c05      	ldr	r4, [pc, #20]	; (80275f8 <__cxa_atexit+0x18>)
 80275e4:	4613      	mov	r3, r2
 80275e6:	b12c      	cbz	r4, 80275f4 <__cxa_atexit+0x14>
 80275e8:	460a      	mov	r2, r1
 80275ea:	4601      	mov	r1, r0
 80275ec:	2002      	movs	r0, #2
 80275ee:	f000 fa51 	bl	8027a94 <__register_exitproc>
 80275f2:	bd10      	pop	{r4, pc}
 80275f4:	4620      	mov	r0, r4
 80275f6:	e7fc      	b.n	80275f2 <__cxa_atexit+0x12>
 80275f8:	08027a95 	.word	0x08027a95

080275fc <std>:
 80275fc:	2300      	movs	r3, #0
 80275fe:	b510      	push	{r4, lr}
 8027600:	4604      	mov	r4, r0
 8027602:	e9c0 3300 	strd	r3, r3, [r0]
 8027606:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802760a:	6083      	str	r3, [r0, #8]
 802760c:	8181      	strh	r1, [r0, #12]
 802760e:	6643      	str	r3, [r0, #100]	; 0x64
 8027610:	81c2      	strh	r2, [r0, #14]
 8027612:	6183      	str	r3, [r0, #24]
 8027614:	4619      	mov	r1, r3
 8027616:	2208      	movs	r2, #8
 8027618:	305c      	adds	r0, #92	; 0x5c
 802761a:	f000 f906 	bl	802782a <memset>
 802761e:	4b0d      	ldr	r3, [pc, #52]	; (8027654 <std+0x58>)
 8027620:	6263      	str	r3, [r4, #36]	; 0x24
 8027622:	4b0d      	ldr	r3, [pc, #52]	; (8027658 <std+0x5c>)
 8027624:	62a3      	str	r3, [r4, #40]	; 0x28
 8027626:	4b0d      	ldr	r3, [pc, #52]	; (802765c <std+0x60>)
 8027628:	62e3      	str	r3, [r4, #44]	; 0x2c
 802762a:	4b0d      	ldr	r3, [pc, #52]	; (8027660 <std+0x64>)
 802762c:	6323      	str	r3, [r4, #48]	; 0x30
 802762e:	4b0d      	ldr	r3, [pc, #52]	; (8027664 <std+0x68>)
 8027630:	6224      	str	r4, [r4, #32]
 8027632:	429c      	cmp	r4, r3
 8027634:	d006      	beq.n	8027644 <std+0x48>
 8027636:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802763a:	4294      	cmp	r4, r2
 802763c:	d002      	beq.n	8027644 <std+0x48>
 802763e:	33d0      	adds	r3, #208	; 0xd0
 8027640:	429c      	cmp	r4, r3
 8027642:	d105      	bne.n	8027650 <std+0x54>
 8027644:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8027648:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802764c:	f000 ba10 	b.w	8027a70 <__retarget_lock_init_recursive>
 8027650:	bd10      	pop	{r4, pc}
 8027652:	bf00      	nop
 8027654:	080277a5 	.word	0x080277a5
 8027658:	080277c7 	.word	0x080277c7
 802765c:	080277ff 	.word	0x080277ff
 8027660:	08027823 	.word	0x08027823
 8027664:	20014118 	.word	0x20014118

08027668 <stdio_exit_handler>:
 8027668:	4a02      	ldr	r2, [pc, #8]	; (8027674 <stdio_exit_handler+0xc>)
 802766a:	4903      	ldr	r1, [pc, #12]	; (8027678 <stdio_exit_handler+0x10>)
 802766c:	4803      	ldr	r0, [pc, #12]	; (802767c <stdio_exit_handler+0x14>)
 802766e:	f000 b87b 	b.w	8027768 <_fwalk_sglue>
 8027672:	bf00      	nop
 8027674:	20000108 	.word	0x20000108
 8027678:	0802829d 	.word	0x0802829d
 802767c:	20000114 	.word	0x20000114

08027680 <cleanup_stdio>:
 8027680:	6841      	ldr	r1, [r0, #4]
 8027682:	4b0c      	ldr	r3, [pc, #48]	; (80276b4 <cleanup_stdio+0x34>)
 8027684:	4299      	cmp	r1, r3
 8027686:	b510      	push	{r4, lr}
 8027688:	4604      	mov	r4, r0
 802768a:	d001      	beq.n	8027690 <cleanup_stdio+0x10>
 802768c:	f000 fe06 	bl	802829c <_fflush_r>
 8027690:	68a1      	ldr	r1, [r4, #8]
 8027692:	4b09      	ldr	r3, [pc, #36]	; (80276b8 <cleanup_stdio+0x38>)
 8027694:	4299      	cmp	r1, r3
 8027696:	d002      	beq.n	802769e <cleanup_stdio+0x1e>
 8027698:	4620      	mov	r0, r4
 802769a:	f000 fdff 	bl	802829c <_fflush_r>
 802769e:	68e1      	ldr	r1, [r4, #12]
 80276a0:	4b06      	ldr	r3, [pc, #24]	; (80276bc <cleanup_stdio+0x3c>)
 80276a2:	4299      	cmp	r1, r3
 80276a4:	d004      	beq.n	80276b0 <cleanup_stdio+0x30>
 80276a6:	4620      	mov	r0, r4
 80276a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80276ac:	f000 bdf6 	b.w	802829c <_fflush_r>
 80276b0:	bd10      	pop	{r4, pc}
 80276b2:	bf00      	nop
 80276b4:	20014118 	.word	0x20014118
 80276b8:	20014180 	.word	0x20014180
 80276bc:	200141e8 	.word	0x200141e8

080276c0 <global_stdio_init.part.0>:
 80276c0:	b510      	push	{r4, lr}
 80276c2:	4b0b      	ldr	r3, [pc, #44]	; (80276f0 <global_stdio_init.part.0+0x30>)
 80276c4:	4c0b      	ldr	r4, [pc, #44]	; (80276f4 <global_stdio_init.part.0+0x34>)
 80276c6:	4a0c      	ldr	r2, [pc, #48]	; (80276f8 <global_stdio_init.part.0+0x38>)
 80276c8:	601a      	str	r2, [r3, #0]
 80276ca:	4620      	mov	r0, r4
 80276cc:	2200      	movs	r2, #0
 80276ce:	2104      	movs	r1, #4
 80276d0:	f7ff ff94 	bl	80275fc <std>
 80276d4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80276d8:	2201      	movs	r2, #1
 80276da:	2109      	movs	r1, #9
 80276dc:	f7ff ff8e 	bl	80275fc <std>
 80276e0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80276e4:	2202      	movs	r2, #2
 80276e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80276ea:	2112      	movs	r1, #18
 80276ec:	f7ff bf86 	b.w	80275fc <std>
 80276f0:	20014250 	.word	0x20014250
 80276f4:	20014118 	.word	0x20014118
 80276f8:	08027669 	.word	0x08027669

080276fc <__sfp_lock_acquire>:
 80276fc:	4801      	ldr	r0, [pc, #4]	; (8027704 <__sfp_lock_acquire+0x8>)
 80276fe:	f000 b9b8 	b.w	8027a72 <__retarget_lock_acquire_recursive>
 8027702:	bf00      	nop
 8027704:	2001425a 	.word	0x2001425a

08027708 <__sfp_lock_release>:
 8027708:	4801      	ldr	r0, [pc, #4]	; (8027710 <__sfp_lock_release+0x8>)
 802770a:	f000 b9b3 	b.w	8027a74 <__retarget_lock_release_recursive>
 802770e:	bf00      	nop
 8027710:	2001425a 	.word	0x2001425a

08027714 <__sinit>:
 8027714:	b510      	push	{r4, lr}
 8027716:	4604      	mov	r4, r0
 8027718:	f7ff fff0 	bl	80276fc <__sfp_lock_acquire>
 802771c:	6a23      	ldr	r3, [r4, #32]
 802771e:	b11b      	cbz	r3, 8027728 <__sinit+0x14>
 8027720:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027724:	f7ff bff0 	b.w	8027708 <__sfp_lock_release>
 8027728:	4b04      	ldr	r3, [pc, #16]	; (802773c <__sinit+0x28>)
 802772a:	6223      	str	r3, [r4, #32]
 802772c:	4b04      	ldr	r3, [pc, #16]	; (8027740 <__sinit+0x2c>)
 802772e:	681b      	ldr	r3, [r3, #0]
 8027730:	2b00      	cmp	r3, #0
 8027732:	d1f5      	bne.n	8027720 <__sinit+0xc>
 8027734:	f7ff ffc4 	bl	80276c0 <global_stdio_init.part.0>
 8027738:	e7f2      	b.n	8027720 <__sinit+0xc>
 802773a:	bf00      	nop
 802773c:	08027681 	.word	0x08027681
 8027740:	20014250 	.word	0x20014250

08027744 <fiprintf>:
 8027744:	b40e      	push	{r1, r2, r3}
 8027746:	b503      	push	{r0, r1, lr}
 8027748:	4601      	mov	r1, r0
 802774a:	ab03      	add	r3, sp, #12
 802774c:	4805      	ldr	r0, [pc, #20]	; (8027764 <fiprintf+0x20>)
 802774e:	f853 2b04 	ldr.w	r2, [r3], #4
 8027752:	6800      	ldr	r0, [r0, #0]
 8027754:	9301      	str	r3, [sp, #4]
 8027756:	f000 fa71 	bl	8027c3c <_vfiprintf_r>
 802775a:	b002      	add	sp, #8
 802775c:	f85d eb04 	ldr.w	lr, [sp], #4
 8027760:	b003      	add	sp, #12
 8027762:	4770      	bx	lr
 8027764:	20000160 	.word	0x20000160

08027768 <_fwalk_sglue>:
 8027768:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802776c:	4607      	mov	r7, r0
 802776e:	4688      	mov	r8, r1
 8027770:	4614      	mov	r4, r2
 8027772:	2600      	movs	r6, #0
 8027774:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8027778:	f1b9 0901 	subs.w	r9, r9, #1
 802777c:	d505      	bpl.n	802778a <_fwalk_sglue+0x22>
 802777e:	6824      	ldr	r4, [r4, #0]
 8027780:	2c00      	cmp	r4, #0
 8027782:	d1f7      	bne.n	8027774 <_fwalk_sglue+0xc>
 8027784:	4630      	mov	r0, r6
 8027786:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802778a:	89ab      	ldrh	r3, [r5, #12]
 802778c:	2b01      	cmp	r3, #1
 802778e:	d907      	bls.n	80277a0 <_fwalk_sglue+0x38>
 8027790:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8027794:	3301      	adds	r3, #1
 8027796:	d003      	beq.n	80277a0 <_fwalk_sglue+0x38>
 8027798:	4629      	mov	r1, r5
 802779a:	4638      	mov	r0, r7
 802779c:	47c0      	blx	r8
 802779e:	4306      	orrs	r6, r0
 80277a0:	3568      	adds	r5, #104	; 0x68
 80277a2:	e7e9      	b.n	8027778 <_fwalk_sglue+0x10>

080277a4 <__sread>:
 80277a4:	b510      	push	{r4, lr}
 80277a6:	460c      	mov	r4, r1
 80277a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80277ac:	f000 f8ee 	bl	802798c <_read_r>
 80277b0:	2800      	cmp	r0, #0
 80277b2:	bfab      	itete	ge
 80277b4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80277b6:	89a3      	ldrhlt	r3, [r4, #12]
 80277b8:	181b      	addge	r3, r3, r0
 80277ba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80277be:	bfac      	ite	ge
 80277c0:	6563      	strge	r3, [r4, #84]	; 0x54
 80277c2:	81a3      	strhlt	r3, [r4, #12]
 80277c4:	bd10      	pop	{r4, pc}

080277c6 <__swrite>:
 80277c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80277ca:	461f      	mov	r7, r3
 80277cc:	898b      	ldrh	r3, [r1, #12]
 80277ce:	05db      	lsls	r3, r3, #23
 80277d0:	4605      	mov	r5, r0
 80277d2:	460c      	mov	r4, r1
 80277d4:	4616      	mov	r6, r2
 80277d6:	d505      	bpl.n	80277e4 <__swrite+0x1e>
 80277d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80277dc:	2302      	movs	r3, #2
 80277de:	2200      	movs	r2, #0
 80277e0:	f000 f8c2 	bl	8027968 <_lseek_r>
 80277e4:	89a3      	ldrh	r3, [r4, #12]
 80277e6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80277ea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80277ee:	81a3      	strh	r3, [r4, #12]
 80277f0:	4632      	mov	r2, r6
 80277f2:	463b      	mov	r3, r7
 80277f4:	4628      	mov	r0, r5
 80277f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80277fa:	f000 b8fd 	b.w	80279f8 <_write_r>

080277fe <__sseek>:
 80277fe:	b510      	push	{r4, lr}
 8027800:	460c      	mov	r4, r1
 8027802:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027806:	f000 f8af 	bl	8027968 <_lseek_r>
 802780a:	1c43      	adds	r3, r0, #1
 802780c:	89a3      	ldrh	r3, [r4, #12]
 802780e:	bf15      	itete	ne
 8027810:	6560      	strne	r0, [r4, #84]	; 0x54
 8027812:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8027816:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802781a:	81a3      	strheq	r3, [r4, #12]
 802781c:	bf18      	it	ne
 802781e:	81a3      	strhne	r3, [r4, #12]
 8027820:	bd10      	pop	{r4, pc}

08027822 <__sclose>:
 8027822:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027826:	f000 b839 	b.w	802789c <_close_r>

0802782a <memset>:
 802782a:	4402      	add	r2, r0
 802782c:	4603      	mov	r3, r0
 802782e:	4293      	cmp	r3, r2
 8027830:	d100      	bne.n	8027834 <memset+0xa>
 8027832:	4770      	bx	lr
 8027834:	f803 1b01 	strb.w	r1, [r3], #1
 8027838:	e7f9      	b.n	802782e <memset+0x4>

0802783a <_raise_r>:
 802783a:	291f      	cmp	r1, #31
 802783c:	b538      	push	{r3, r4, r5, lr}
 802783e:	4604      	mov	r4, r0
 8027840:	460d      	mov	r5, r1
 8027842:	d904      	bls.n	802784e <_raise_r+0x14>
 8027844:	2316      	movs	r3, #22
 8027846:	6003      	str	r3, [r0, #0]
 8027848:	f04f 30ff 	mov.w	r0, #4294967295
 802784c:	bd38      	pop	{r3, r4, r5, pc}
 802784e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8027850:	b112      	cbz	r2, 8027858 <_raise_r+0x1e>
 8027852:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8027856:	b94b      	cbnz	r3, 802786c <_raise_r+0x32>
 8027858:	4620      	mov	r0, r4
 802785a:	f000 f8bb 	bl	80279d4 <_getpid_r>
 802785e:	462a      	mov	r2, r5
 8027860:	4601      	mov	r1, r0
 8027862:	4620      	mov	r0, r4
 8027864:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8027868:	f000 b8a2 	b.w	80279b0 <_kill_r>
 802786c:	2b01      	cmp	r3, #1
 802786e:	d00a      	beq.n	8027886 <_raise_r+0x4c>
 8027870:	1c59      	adds	r1, r3, #1
 8027872:	d103      	bne.n	802787c <_raise_r+0x42>
 8027874:	2316      	movs	r3, #22
 8027876:	6003      	str	r3, [r0, #0]
 8027878:	2001      	movs	r0, #1
 802787a:	e7e7      	b.n	802784c <_raise_r+0x12>
 802787c:	2400      	movs	r4, #0
 802787e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8027882:	4628      	mov	r0, r5
 8027884:	4798      	blx	r3
 8027886:	2000      	movs	r0, #0
 8027888:	e7e0      	b.n	802784c <_raise_r+0x12>
	...

0802788c <raise>:
 802788c:	4b02      	ldr	r3, [pc, #8]	; (8027898 <raise+0xc>)
 802788e:	4601      	mov	r1, r0
 8027890:	6818      	ldr	r0, [r3, #0]
 8027892:	f7ff bfd2 	b.w	802783a <_raise_r>
 8027896:	bf00      	nop
 8027898:	20000160 	.word	0x20000160

0802789c <_close_r>:
 802789c:	b538      	push	{r3, r4, r5, lr}
 802789e:	4d06      	ldr	r5, [pc, #24]	; (80278b8 <_close_r+0x1c>)
 80278a0:	2300      	movs	r3, #0
 80278a2:	4604      	mov	r4, r0
 80278a4:	4608      	mov	r0, r1
 80278a6:	602b      	str	r3, [r5, #0]
 80278a8:	f7da fc96 	bl	80021d8 <_close>
 80278ac:	1c43      	adds	r3, r0, #1
 80278ae:	d102      	bne.n	80278b6 <_close_r+0x1a>
 80278b0:	682b      	ldr	r3, [r5, #0]
 80278b2:	b103      	cbz	r3, 80278b6 <_close_r+0x1a>
 80278b4:	6023      	str	r3, [r4, #0]
 80278b6:	bd38      	pop	{r3, r4, r5, pc}
 80278b8:	20014254 	.word	0x20014254

080278bc <_reclaim_reent>:
 80278bc:	4b29      	ldr	r3, [pc, #164]	; (8027964 <_reclaim_reent+0xa8>)
 80278be:	681b      	ldr	r3, [r3, #0]
 80278c0:	4283      	cmp	r3, r0
 80278c2:	b570      	push	{r4, r5, r6, lr}
 80278c4:	4604      	mov	r4, r0
 80278c6:	d04b      	beq.n	8027960 <_reclaim_reent+0xa4>
 80278c8:	69c3      	ldr	r3, [r0, #28]
 80278ca:	b143      	cbz	r3, 80278de <_reclaim_reent+0x22>
 80278cc:	68db      	ldr	r3, [r3, #12]
 80278ce:	2b00      	cmp	r3, #0
 80278d0:	d144      	bne.n	802795c <_reclaim_reent+0xa0>
 80278d2:	69e3      	ldr	r3, [r4, #28]
 80278d4:	6819      	ldr	r1, [r3, #0]
 80278d6:	b111      	cbz	r1, 80278de <_reclaim_reent+0x22>
 80278d8:	4620      	mov	r0, r4
 80278da:	f000 f939 	bl	8027b50 <_free_r>
 80278de:	6961      	ldr	r1, [r4, #20]
 80278e0:	b111      	cbz	r1, 80278e8 <_reclaim_reent+0x2c>
 80278e2:	4620      	mov	r0, r4
 80278e4:	f000 f934 	bl	8027b50 <_free_r>
 80278e8:	69e1      	ldr	r1, [r4, #28]
 80278ea:	b111      	cbz	r1, 80278f2 <_reclaim_reent+0x36>
 80278ec:	4620      	mov	r0, r4
 80278ee:	f000 f92f 	bl	8027b50 <_free_r>
 80278f2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80278f4:	b111      	cbz	r1, 80278fc <_reclaim_reent+0x40>
 80278f6:	4620      	mov	r0, r4
 80278f8:	f000 f92a 	bl	8027b50 <_free_r>
 80278fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80278fe:	b111      	cbz	r1, 8027906 <_reclaim_reent+0x4a>
 8027900:	4620      	mov	r0, r4
 8027902:	f000 f925 	bl	8027b50 <_free_r>
 8027906:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8027908:	b111      	cbz	r1, 8027910 <_reclaim_reent+0x54>
 802790a:	4620      	mov	r0, r4
 802790c:	f000 f920 	bl	8027b50 <_free_r>
 8027910:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8027912:	b111      	cbz	r1, 802791a <_reclaim_reent+0x5e>
 8027914:	4620      	mov	r0, r4
 8027916:	f000 f91b 	bl	8027b50 <_free_r>
 802791a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802791c:	b111      	cbz	r1, 8027924 <_reclaim_reent+0x68>
 802791e:	4620      	mov	r0, r4
 8027920:	f000 f916 	bl	8027b50 <_free_r>
 8027924:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8027926:	b111      	cbz	r1, 802792e <_reclaim_reent+0x72>
 8027928:	4620      	mov	r0, r4
 802792a:	f000 f911 	bl	8027b50 <_free_r>
 802792e:	6a23      	ldr	r3, [r4, #32]
 8027930:	b1b3      	cbz	r3, 8027960 <_reclaim_reent+0xa4>
 8027932:	4620      	mov	r0, r4
 8027934:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027938:	4718      	bx	r3
 802793a:	5949      	ldr	r1, [r1, r5]
 802793c:	b941      	cbnz	r1, 8027950 <_reclaim_reent+0x94>
 802793e:	3504      	adds	r5, #4
 8027940:	69e3      	ldr	r3, [r4, #28]
 8027942:	2d80      	cmp	r5, #128	; 0x80
 8027944:	68d9      	ldr	r1, [r3, #12]
 8027946:	d1f8      	bne.n	802793a <_reclaim_reent+0x7e>
 8027948:	4620      	mov	r0, r4
 802794a:	f000 f901 	bl	8027b50 <_free_r>
 802794e:	e7c0      	b.n	80278d2 <_reclaim_reent+0x16>
 8027950:	680e      	ldr	r6, [r1, #0]
 8027952:	4620      	mov	r0, r4
 8027954:	f000 f8fc 	bl	8027b50 <_free_r>
 8027958:	4631      	mov	r1, r6
 802795a:	e7ef      	b.n	802793c <_reclaim_reent+0x80>
 802795c:	2500      	movs	r5, #0
 802795e:	e7ef      	b.n	8027940 <_reclaim_reent+0x84>
 8027960:	bd70      	pop	{r4, r5, r6, pc}
 8027962:	bf00      	nop
 8027964:	20000160 	.word	0x20000160

08027968 <_lseek_r>:
 8027968:	b538      	push	{r3, r4, r5, lr}
 802796a:	4d07      	ldr	r5, [pc, #28]	; (8027988 <_lseek_r+0x20>)
 802796c:	4604      	mov	r4, r0
 802796e:	4608      	mov	r0, r1
 8027970:	4611      	mov	r1, r2
 8027972:	2200      	movs	r2, #0
 8027974:	602a      	str	r2, [r5, #0]
 8027976:	461a      	mov	r2, r3
 8027978:	f7da fc3a 	bl	80021f0 <_lseek>
 802797c:	1c43      	adds	r3, r0, #1
 802797e:	d102      	bne.n	8027986 <_lseek_r+0x1e>
 8027980:	682b      	ldr	r3, [r5, #0]
 8027982:	b103      	cbz	r3, 8027986 <_lseek_r+0x1e>
 8027984:	6023      	str	r3, [r4, #0]
 8027986:	bd38      	pop	{r3, r4, r5, pc}
 8027988:	20014254 	.word	0x20014254

0802798c <_read_r>:
 802798c:	b538      	push	{r3, r4, r5, lr}
 802798e:	4d07      	ldr	r5, [pc, #28]	; (80279ac <_read_r+0x20>)
 8027990:	4604      	mov	r4, r0
 8027992:	4608      	mov	r0, r1
 8027994:	4611      	mov	r1, r2
 8027996:	2200      	movs	r2, #0
 8027998:	602a      	str	r2, [r5, #0]
 802799a:	461a      	mov	r2, r3
 802799c:	f7da fc00 	bl	80021a0 <_read>
 80279a0:	1c43      	adds	r3, r0, #1
 80279a2:	d102      	bne.n	80279aa <_read_r+0x1e>
 80279a4:	682b      	ldr	r3, [r5, #0]
 80279a6:	b103      	cbz	r3, 80279aa <_read_r+0x1e>
 80279a8:	6023      	str	r3, [r4, #0]
 80279aa:	bd38      	pop	{r3, r4, r5, pc}
 80279ac:	20014254 	.word	0x20014254

080279b0 <_kill_r>:
 80279b0:	b538      	push	{r3, r4, r5, lr}
 80279b2:	4d07      	ldr	r5, [pc, #28]	; (80279d0 <_kill_r+0x20>)
 80279b4:	2300      	movs	r3, #0
 80279b6:	4604      	mov	r4, r0
 80279b8:	4608      	mov	r0, r1
 80279ba:	4611      	mov	r1, r2
 80279bc:	602b      	str	r3, [r5, #0]
 80279be:	f7da fbe1 	bl	8002184 <_kill>
 80279c2:	1c43      	adds	r3, r0, #1
 80279c4:	d102      	bne.n	80279cc <_kill_r+0x1c>
 80279c6:	682b      	ldr	r3, [r5, #0]
 80279c8:	b103      	cbz	r3, 80279cc <_kill_r+0x1c>
 80279ca:	6023      	str	r3, [r4, #0]
 80279cc:	bd38      	pop	{r3, r4, r5, pc}
 80279ce:	bf00      	nop
 80279d0:	20014254 	.word	0x20014254

080279d4 <_getpid_r>:
 80279d4:	f7da bbd4 	b.w	8002180 <_getpid>

080279d8 <_sbrk_r>:
 80279d8:	b538      	push	{r3, r4, r5, lr}
 80279da:	4d06      	ldr	r5, [pc, #24]	; (80279f4 <_sbrk_r+0x1c>)
 80279dc:	2300      	movs	r3, #0
 80279de:	4604      	mov	r4, r0
 80279e0:	4608      	mov	r0, r1
 80279e2:	602b      	str	r3, [r5, #0]
 80279e4:	f7da fc06 	bl	80021f4 <_sbrk>
 80279e8:	1c43      	adds	r3, r0, #1
 80279ea:	d102      	bne.n	80279f2 <_sbrk_r+0x1a>
 80279ec:	682b      	ldr	r3, [r5, #0]
 80279ee:	b103      	cbz	r3, 80279f2 <_sbrk_r+0x1a>
 80279f0:	6023      	str	r3, [r4, #0]
 80279f2:	bd38      	pop	{r3, r4, r5, pc}
 80279f4:	20014254 	.word	0x20014254

080279f8 <_write_r>:
 80279f8:	b538      	push	{r3, r4, r5, lr}
 80279fa:	4d07      	ldr	r5, [pc, #28]	; (8027a18 <_write_r+0x20>)
 80279fc:	4604      	mov	r4, r0
 80279fe:	4608      	mov	r0, r1
 8027a00:	4611      	mov	r1, r2
 8027a02:	2200      	movs	r2, #0
 8027a04:	602a      	str	r2, [r5, #0]
 8027a06:	461a      	mov	r2, r3
 8027a08:	f7da fbd8 	bl	80021bc <_write>
 8027a0c:	1c43      	adds	r3, r0, #1
 8027a0e:	d102      	bne.n	8027a16 <_write_r+0x1e>
 8027a10:	682b      	ldr	r3, [r5, #0]
 8027a12:	b103      	cbz	r3, 8027a16 <_write_r+0x1e>
 8027a14:	6023      	str	r3, [r4, #0]
 8027a16:	bd38      	pop	{r3, r4, r5, pc}
 8027a18:	20014254 	.word	0x20014254

08027a1c <__errno>:
 8027a1c:	4b01      	ldr	r3, [pc, #4]	; (8027a24 <__errno+0x8>)
 8027a1e:	6818      	ldr	r0, [r3, #0]
 8027a20:	4770      	bx	lr
 8027a22:	bf00      	nop
 8027a24:	20000160 	.word	0x20000160

08027a28 <__libc_init_array>:
 8027a28:	b570      	push	{r4, r5, r6, lr}
 8027a2a:	4d0d      	ldr	r5, [pc, #52]	; (8027a60 <__libc_init_array+0x38>)
 8027a2c:	4c0d      	ldr	r4, [pc, #52]	; (8027a64 <__libc_init_array+0x3c>)
 8027a2e:	1b64      	subs	r4, r4, r5
 8027a30:	10a4      	asrs	r4, r4, #2
 8027a32:	2600      	movs	r6, #0
 8027a34:	42a6      	cmp	r6, r4
 8027a36:	d109      	bne.n	8027a4c <__libc_init_array+0x24>
 8027a38:	4d0b      	ldr	r5, [pc, #44]	; (8027a68 <__libc_init_array+0x40>)
 8027a3a:	4c0c      	ldr	r4, [pc, #48]	; (8027a6c <__libc_init_array+0x44>)
 8027a3c:	f000 fd70 	bl	8028520 <_init>
 8027a40:	1b64      	subs	r4, r4, r5
 8027a42:	10a4      	asrs	r4, r4, #2
 8027a44:	2600      	movs	r6, #0
 8027a46:	42a6      	cmp	r6, r4
 8027a48:	d105      	bne.n	8027a56 <__libc_init_array+0x2e>
 8027a4a:	bd70      	pop	{r4, r5, r6, pc}
 8027a4c:	f855 3b04 	ldr.w	r3, [r5], #4
 8027a50:	4798      	blx	r3
 8027a52:	3601      	adds	r6, #1
 8027a54:	e7ee      	b.n	8027a34 <__libc_init_array+0xc>
 8027a56:	f855 3b04 	ldr.w	r3, [r5], #4
 8027a5a:	4798      	blx	r3
 8027a5c:	3601      	adds	r6, #1
 8027a5e:	e7f2      	b.n	8027a46 <__libc_init_array+0x1e>
 8027a60:	081479ec 	.word	0x081479ec
 8027a64:	081479ec 	.word	0x081479ec
 8027a68:	081479ec 	.word	0x081479ec
 8027a6c:	08147a00 	.word	0x08147a00

08027a70 <__retarget_lock_init_recursive>:
 8027a70:	4770      	bx	lr

08027a72 <__retarget_lock_acquire_recursive>:
 8027a72:	4770      	bx	lr

08027a74 <__retarget_lock_release_recursive>:
 8027a74:	4770      	bx	lr

08027a76 <memcpy>:
 8027a76:	440a      	add	r2, r1
 8027a78:	4291      	cmp	r1, r2
 8027a7a:	f100 33ff 	add.w	r3, r0, #4294967295
 8027a7e:	d100      	bne.n	8027a82 <memcpy+0xc>
 8027a80:	4770      	bx	lr
 8027a82:	b510      	push	{r4, lr}
 8027a84:	f811 4b01 	ldrb.w	r4, [r1], #1
 8027a88:	f803 4f01 	strb.w	r4, [r3, #1]!
 8027a8c:	4291      	cmp	r1, r2
 8027a8e:	d1f9      	bne.n	8027a84 <memcpy+0xe>
 8027a90:	bd10      	pop	{r4, pc}
	...

08027a94 <__register_exitproc>:
 8027a94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027a98:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8027b4c <__register_exitproc+0xb8>
 8027a9c:	4606      	mov	r6, r0
 8027a9e:	f8d8 0000 	ldr.w	r0, [r8]
 8027aa2:	461f      	mov	r7, r3
 8027aa4:	460d      	mov	r5, r1
 8027aa6:	4691      	mov	r9, r2
 8027aa8:	f7ff ffe3 	bl	8027a72 <__retarget_lock_acquire_recursive>
 8027aac:	4b23      	ldr	r3, [pc, #140]	; (8027b3c <__register_exitproc+0xa8>)
 8027aae:	681c      	ldr	r4, [r3, #0]
 8027ab0:	b934      	cbnz	r4, 8027ac0 <__register_exitproc+0x2c>
 8027ab2:	4c23      	ldr	r4, [pc, #140]	; (8027b40 <__register_exitproc+0xac>)
 8027ab4:	601c      	str	r4, [r3, #0]
 8027ab6:	4b23      	ldr	r3, [pc, #140]	; (8027b44 <__register_exitproc+0xb0>)
 8027ab8:	b113      	cbz	r3, 8027ac0 <__register_exitproc+0x2c>
 8027aba:	681b      	ldr	r3, [r3, #0]
 8027abc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8027ac0:	6863      	ldr	r3, [r4, #4]
 8027ac2:	2b1f      	cmp	r3, #31
 8027ac4:	dd07      	ble.n	8027ad6 <__register_exitproc+0x42>
 8027ac6:	f8d8 0000 	ldr.w	r0, [r8]
 8027aca:	f7ff ffd3 	bl	8027a74 <__retarget_lock_release_recursive>
 8027ace:	f04f 30ff 	mov.w	r0, #4294967295
 8027ad2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027ad6:	b32e      	cbz	r6, 8027b24 <__register_exitproc+0x90>
 8027ad8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027adc:	b968      	cbnz	r0, 8027afa <__register_exitproc+0x66>
 8027ade:	4b1a      	ldr	r3, [pc, #104]	; (8027b48 <__register_exitproc+0xb4>)
 8027ae0:	2b00      	cmp	r3, #0
 8027ae2:	d0f0      	beq.n	8027ac6 <__register_exitproc+0x32>
 8027ae4:	f44f 7084 	mov.w	r0, #264	; 0x108
 8027ae8:	f7ff fcbe 	bl	8027468 <malloc>
 8027aec:	2800      	cmp	r0, #0
 8027aee:	d0ea      	beq.n	8027ac6 <__register_exitproc+0x32>
 8027af0:	2300      	movs	r3, #0
 8027af2:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8027af6:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8027afa:	6863      	ldr	r3, [r4, #4]
 8027afc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8027b00:	2201      	movs	r2, #1
 8027b02:	409a      	lsls	r2, r3
 8027b04:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8027b08:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8027b0c:	4313      	orrs	r3, r2
 8027b0e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8027b12:	2e02      	cmp	r6, #2
 8027b14:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8027b18:	bf02      	ittt	eq
 8027b1a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8027b1e:	4313      	orreq	r3, r2
 8027b20:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8027b24:	6863      	ldr	r3, [r4, #4]
 8027b26:	f8d8 0000 	ldr.w	r0, [r8]
 8027b2a:	1c5a      	adds	r2, r3, #1
 8027b2c:	3302      	adds	r3, #2
 8027b2e:	6062      	str	r2, [r4, #4]
 8027b30:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8027b34:	f7ff ff9e 	bl	8027a74 <__retarget_lock_release_recursive>
 8027b38:	2000      	movs	r0, #0
 8027b3a:	e7ca      	b.n	8027ad2 <__register_exitproc+0x3e>
 8027b3c:	200142e8 	.word	0x200142e8
 8027b40:	2001425c 	.word	0x2001425c
 8027b44:	0802c150 	.word	0x0802c150
 8027b48:	08027469 	.word	0x08027469
 8027b4c:	20000164 	.word	0x20000164

08027b50 <_free_r>:
 8027b50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8027b52:	2900      	cmp	r1, #0
 8027b54:	d044      	beq.n	8027be0 <_free_r+0x90>
 8027b56:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8027b5a:	9001      	str	r0, [sp, #4]
 8027b5c:	2b00      	cmp	r3, #0
 8027b5e:	f1a1 0404 	sub.w	r4, r1, #4
 8027b62:	bfb8      	it	lt
 8027b64:	18e4      	addlt	r4, r4, r3
 8027b66:	f7ff fd2f 	bl	80275c8 <__malloc_lock>
 8027b6a:	4a1e      	ldr	r2, [pc, #120]	; (8027be4 <_free_r+0x94>)
 8027b6c:	9801      	ldr	r0, [sp, #4]
 8027b6e:	6813      	ldr	r3, [r2, #0]
 8027b70:	b933      	cbnz	r3, 8027b80 <_free_r+0x30>
 8027b72:	6063      	str	r3, [r4, #4]
 8027b74:	6014      	str	r4, [r2, #0]
 8027b76:	b003      	add	sp, #12
 8027b78:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8027b7c:	f7ff bd2a 	b.w	80275d4 <__malloc_unlock>
 8027b80:	42a3      	cmp	r3, r4
 8027b82:	d908      	bls.n	8027b96 <_free_r+0x46>
 8027b84:	6825      	ldr	r5, [r4, #0]
 8027b86:	1961      	adds	r1, r4, r5
 8027b88:	428b      	cmp	r3, r1
 8027b8a:	bf01      	itttt	eq
 8027b8c:	6819      	ldreq	r1, [r3, #0]
 8027b8e:	685b      	ldreq	r3, [r3, #4]
 8027b90:	1949      	addeq	r1, r1, r5
 8027b92:	6021      	streq	r1, [r4, #0]
 8027b94:	e7ed      	b.n	8027b72 <_free_r+0x22>
 8027b96:	461a      	mov	r2, r3
 8027b98:	685b      	ldr	r3, [r3, #4]
 8027b9a:	b10b      	cbz	r3, 8027ba0 <_free_r+0x50>
 8027b9c:	42a3      	cmp	r3, r4
 8027b9e:	d9fa      	bls.n	8027b96 <_free_r+0x46>
 8027ba0:	6811      	ldr	r1, [r2, #0]
 8027ba2:	1855      	adds	r5, r2, r1
 8027ba4:	42a5      	cmp	r5, r4
 8027ba6:	d10b      	bne.n	8027bc0 <_free_r+0x70>
 8027ba8:	6824      	ldr	r4, [r4, #0]
 8027baa:	4421      	add	r1, r4
 8027bac:	1854      	adds	r4, r2, r1
 8027bae:	42a3      	cmp	r3, r4
 8027bb0:	6011      	str	r1, [r2, #0]
 8027bb2:	d1e0      	bne.n	8027b76 <_free_r+0x26>
 8027bb4:	681c      	ldr	r4, [r3, #0]
 8027bb6:	685b      	ldr	r3, [r3, #4]
 8027bb8:	6053      	str	r3, [r2, #4]
 8027bba:	440c      	add	r4, r1
 8027bbc:	6014      	str	r4, [r2, #0]
 8027bbe:	e7da      	b.n	8027b76 <_free_r+0x26>
 8027bc0:	d902      	bls.n	8027bc8 <_free_r+0x78>
 8027bc2:	230c      	movs	r3, #12
 8027bc4:	6003      	str	r3, [r0, #0]
 8027bc6:	e7d6      	b.n	8027b76 <_free_r+0x26>
 8027bc8:	6825      	ldr	r5, [r4, #0]
 8027bca:	1961      	adds	r1, r4, r5
 8027bcc:	428b      	cmp	r3, r1
 8027bce:	bf04      	itt	eq
 8027bd0:	6819      	ldreq	r1, [r3, #0]
 8027bd2:	685b      	ldreq	r3, [r3, #4]
 8027bd4:	6063      	str	r3, [r4, #4]
 8027bd6:	bf04      	itt	eq
 8027bd8:	1949      	addeq	r1, r1, r5
 8027bda:	6021      	streq	r1, [r4, #0]
 8027bdc:	6054      	str	r4, [r2, #4]
 8027bde:	e7ca      	b.n	8027b76 <_free_r+0x26>
 8027be0:	b003      	add	sp, #12
 8027be2:	bd30      	pop	{r4, r5, pc}
 8027be4:	20014110 	.word	0x20014110

08027be8 <__sfputc_r>:
 8027be8:	6893      	ldr	r3, [r2, #8]
 8027bea:	3b01      	subs	r3, #1
 8027bec:	2b00      	cmp	r3, #0
 8027bee:	b410      	push	{r4}
 8027bf0:	6093      	str	r3, [r2, #8]
 8027bf2:	da08      	bge.n	8027c06 <__sfputc_r+0x1e>
 8027bf4:	6994      	ldr	r4, [r2, #24]
 8027bf6:	42a3      	cmp	r3, r4
 8027bf8:	db01      	blt.n	8027bfe <__sfputc_r+0x16>
 8027bfa:	290a      	cmp	r1, #10
 8027bfc:	d103      	bne.n	8027c06 <__sfputc_r+0x1e>
 8027bfe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027c02:	f000 bb73 	b.w	80282ec <__swbuf_r>
 8027c06:	6813      	ldr	r3, [r2, #0]
 8027c08:	1c58      	adds	r0, r3, #1
 8027c0a:	6010      	str	r0, [r2, #0]
 8027c0c:	7019      	strb	r1, [r3, #0]
 8027c0e:	4608      	mov	r0, r1
 8027c10:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027c14:	4770      	bx	lr

08027c16 <__sfputs_r>:
 8027c16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027c18:	4606      	mov	r6, r0
 8027c1a:	460f      	mov	r7, r1
 8027c1c:	4614      	mov	r4, r2
 8027c1e:	18d5      	adds	r5, r2, r3
 8027c20:	42ac      	cmp	r4, r5
 8027c22:	d101      	bne.n	8027c28 <__sfputs_r+0x12>
 8027c24:	2000      	movs	r0, #0
 8027c26:	e007      	b.n	8027c38 <__sfputs_r+0x22>
 8027c28:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027c2c:	463a      	mov	r2, r7
 8027c2e:	4630      	mov	r0, r6
 8027c30:	f7ff ffda 	bl	8027be8 <__sfputc_r>
 8027c34:	1c43      	adds	r3, r0, #1
 8027c36:	d1f3      	bne.n	8027c20 <__sfputs_r+0xa>
 8027c38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08027c3c <_vfiprintf_r>:
 8027c3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c40:	460d      	mov	r5, r1
 8027c42:	b09d      	sub	sp, #116	; 0x74
 8027c44:	4614      	mov	r4, r2
 8027c46:	4698      	mov	r8, r3
 8027c48:	4606      	mov	r6, r0
 8027c4a:	b118      	cbz	r0, 8027c54 <_vfiprintf_r+0x18>
 8027c4c:	6a03      	ldr	r3, [r0, #32]
 8027c4e:	b90b      	cbnz	r3, 8027c54 <_vfiprintf_r+0x18>
 8027c50:	f7ff fd60 	bl	8027714 <__sinit>
 8027c54:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027c56:	07d9      	lsls	r1, r3, #31
 8027c58:	d405      	bmi.n	8027c66 <_vfiprintf_r+0x2a>
 8027c5a:	89ab      	ldrh	r3, [r5, #12]
 8027c5c:	059a      	lsls	r2, r3, #22
 8027c5e:	d402      	bmi.n	8027c66 <_vfiprintf_r+0x2a>
 8027c60:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027c62:	f7ff ff06 	bl	8027a72 <__retarget_lock_acquire_recursive>
 8027c66:	89ab      	ldrh	r3, [r5, #12]
 8027c68:	071b      	lsls	r3, r3, #28
 8027c6a:	d501      	bpl.n	8027c70 <_vfiprintf_r+0x34>
 8027c6c:	692b      	ldr	r3, [r5, #16]
 8027c6e:	b99b      	cbnz	r3, 8027c98 <_vfiprintf_r+0x5c>
 8027c70:	4629      	mov	r1, r5
 8027c72:	4630      	mov	r0, r6
 8027c74:	f000 fb78 	bl	8028368 <__swsetup_r>
 8027c78:	b170      	cbz	r0, 8027c98 <_vfiprintf_r+0x5c>
 8027c7a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027c7c:	07dc      	lsls	r4, r3, #31
 8027c7e:	d504      	bpl.n	8027c8a <_vfiprintf_r+0x4e>
 8027c80:	f04f 30ff 	mov.w	r0, #4294967295
 8027c84:	b01d      	add	sp, #116	; 0x74
 8027c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027c8a:	89ab      	ldrh	r3, [r5, #12]
 8027c8c:	0598      	lsls	r0, r3, #22
 8027c8e:	d4f7      	bmi.n	8027c80 <_vfiprintf_r+0x44>
 8027c90:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027c92:	f7ff feef 	bl	8027a74 <__retarget_lock_release_recursive>
 8027c96:	e7f3      	b.n	8027c80 <_vfiprintf_r+0x44>
 8027c98:	2300      	movs	r3, #0
 8027c9a:	9309      	str	r3, [sp, #36]	; 0x24
 8027c9c:	2320      	movs	r3, #32
 8027c9e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8027ca2:	f8cd 800c 	str.w	r8, [sp, #12]
 8027ca6:	2330      	movs	r3, #48	; 0x30
 8027ca8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8027e5c <_vfiprintf_r+0x220>
 8027cac:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8027cb0:	f04f 0901 	mov.w	r9, #1
 8027cb4:	4623      	mov	r3, r4
 8027cb6:	469a      	mov	sl, r3
 8027cb8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8027cbc:	b10a      	cbz	r2, 8027cc2 <_vfiprintf_r+0x86>
 8027cbe:	2a25      	cmp	r2, #37	; 0x25
 8027cc0:	d1f9      	bne.n	8027cb6 <_vfiprintf_r+0x7a>
 8027cc2:	ebba 0b04 	subs.w	fp, sl, r4
 8027cc6:	d00b      	beq.n	8027ce0 <_vfiprintf_r+0xa4>
 8027cc8:	465b      	mov	r3, fp
 8027cca:	4622      	mov	r2, r4
 8027ccc:	4629      	mov	r1, r5
 8027cce:	4630      	mov	r0, r6
 8027cd0:	f7ff ffa1 	bl	8027c16 <__sfputs_r>
 8027cd4:	3001      	adds	r0, #1
 8027cd6:	f000 80a9 	beq.w	8027e2c <_vfiprintf_r+0x1f0>
 8027cda:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027cdc:	445a      	add	r2, fp
 8027cde:	9209      	str	r2, [sp, #36]	; 0x24
 8027ce0:	f89a 3000 	ldrb.w	r3, [sl]
 8027ce4:	2b00      	cmp	r3, #0
 8027ce6:	f000 80a1 	beq.w	8027e2c <_vfiprintf_r+0x1f0>
 8027cea:	2300      	movs	r3, #0
 8027cec:	f04f 32ff 	mov.w	r2, #4294967295
 8027cf0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8027cf4:	f10a 0a01 	add.w	sl, sl, #1
 8027cf8:	9304      	str	r3, [sp, #16]
 8027cfa:	9307      	str	r3, [sp, #28]
 8027cfc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8027d00:	931a      	str	r3, [sp, #104]	; 0x68
 8027d02:	4654      	mov	r4, sl
 8027d04:	2205      	movs	r2, #5
 8027d06:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027d0a:	4854      	ldr	r0, [pc, #336]	; (8027e5c <_vfiprintf_r+0x220>)
 8027d0c:	f7d8 fa70 	bl	80001f0 <memchr>
 8027d10:	9a04      	ldr	r2, [sp, #16]
 8027d12:	b9d8      	cbnz	r0, 8027d4c <_vfiprintf_r+0x110>
 8027d14:	06d1      	lsls	r1, r2, #27
 8027d16:	bf44      	itt	mi
 8027d18:	2320      	movmi	r3, #32
 8027d1a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027d1e:	0713      	lsls	r3, r2, #28
 8027d20:	bf44      	itt	mi
 8027d22:	232b      	movmi	r3, #43	; 0x2b
 8027d24:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027d28:	f89a 3000 	ldrb.w	r3, [sl]
 8027d2c:	2b2a      	cmp	r3, #42	; 0x2a
 8027d2e:	d015      	beq.n	8027d5c <_vfiprintf_r+0x120>
 8027d30:	9a07      	ldr	r2, [sp, #28]
 8027d32:	4654      	mov	r4, sl
 8027d34:	2000      	movs	r0, #0
 8027d36:	f04f 0c0a 	mov.w	ip, #10
 8027d3a:	4621      	mov	r1, r4
 8027d3c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8027d40:	3b30      	subs	r3, #48	; 0x30
 8027d42:	2b09      	cmp	r3, #9
 8027d44:	d94d      	bls.n	8027de2 <_vfiprintf_r+0x1a6>
 8027d46:	b1b0      	cbz	r0, 8027d76 <_vfiprintf_r+0x13a>
 8027d48:	9207      	str	r2, [sp, #28]
 8027d4a:	e014      	b.n	8027d76 <_vfiprintf_r+0x13a>
 8027d4c:	eba0 0308 	sub.w	r3, r0, r8
 8027d50:	fa09 f303 	lsl.w	r3, r9, r3
 8027d54:	4313      	orrs	r3, r2
 8027d56:	9304      	str	r3, [sp, #16]
 8027d58:	46a2      	mov	sl, r4
 8027d5a:	e7d2      	b.n	8027d02 <_vfiprintf_r+0xc6>
 8027d5c:	9b03      	ldr	r3, [sp, #12]
 8027d5e:	1d19      	adds	r1, r3, #4
 8027d60:	681b      	ldr	r3, [r3, #0]
 8027d62:	9103      	str	r1, [sp, #12]
 8027d64:	2b00      	cmp	r3, #0
 8027d66:	bfbb      	ittet	lt
 8027d68:	425b      	neglt	r3, r3
 8027d6a:	f042 0202 	orrlt.w	r2, r2, #2
 8027d6e:	9307      	strge	r3, [sp, #28]
 8027d70:	9307      	strlt	r3, [sp, #28]
 8027d72:	bfb8      	it	lt
 8027d74:	9204      	strlt	r2, [sp, #16]
 8027d76:	7823      	ldrb	r3, [r4, #0]
 8027d78:	2b2e      	cmp	r3, #46	; 0x2e
 8027d7a:	d10c      	bne.n	8027d96 <_vfiprintf_r+0x15a>
 8027d7c:	7863      	ldrb	r3, [r4, #1]
 8027d7e:	2b2a      	cmp	r3, #42	; 0x2a
 8027d80:	d134      	bne.n	8027dec <_vfiprintf_r+0x1b0>
 8027d82:	9b03      	ldr	r3, [sp, #12]
 8027d84:	1d1a      	adds	r2, r3, #4
 8027d86:	681b      	ldr	r3, [r3, #0]
 8027d88:	9203      	str	r2, [sp, #12]
 8027d8a:	2b00      	cmp	r3, #0
 8027d8c:	bfb8      	it	lt
 8027d8e:	f04f 33ff 	movlt.w	r3, #4294967295
 8027d92:	3402      	adds	r4, #2
 8027d94:	9305      	str	r3, [sp, #20]
 8027d96:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8027e6c <_vfiprintf_r+0x230>
 8027d9a:	7821      	ldrb	r1, [r4, #0]
 8027d9c:	2203      	movs	r2, #3
 8027d9e:	4650      	mov	r0, sl
 8027da0:	f7d8 fa26 	bl	80001f0 <memchr>
 8027da4:	b138      	cbz	r0, 8027db6 <_vfiprintf_r+0x17a>
 8027da6:	9b04      	ldr	r3, [sp, #16]
 8027da8:	eba0 000a 	sub.w	r0, r0, sl
 8027dac:	2240      	movs	r2, #64	; 0x40
 8027dae:	4082      	lsls	r2, r0
 8027db0:	4313      	orrs	r3, r2
 8027db2:	3401      	adds	r4, #1
 8027db4:	9304      	str	r3, [sp, #16]
 8027db6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027dba:	4829      	ldr	r0, [pc, #164]	; (8027e60 <_vfiprintf_r+0x224>)
 8027dbc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8027dc0:	2206      	movs	r2, #6
 8027dc2:	f7d8 fa15 	bl	80001f0 <memchr>
 8027dc6:	2800      	cmp	r0, #0
 8027dc8:	d03f      	beq.n	8027e4a <_vfiprintf_r+0x20e>
 8027dca:	4b26      	ldr	r3, [pc, #152]	; (8027e64 <_vfiprintf_r+0x228>)
 8027dcc:	bb1b      	cbnz	r3, 8027e16 <_vfiprintf_r+0x1da>
 8027dce:	9b03      	ldr	r3, [sp, #12]
 8027dd0:	3307      	adds	r3, #7
 8027dd2:	f023 0307 	bic.w	r3, r3, #7
 8027dd6:	3308      	adds	r3, #8
 8027dd8:	9303      	str	r3, [sp, #12]
 8027dda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027ddc:	443b      	add	r3, r7
 8027dde:	9309      	str	r3, [sp, #36]	; 0x24
 8027de0:	e768      	b.n	8027cb4 <_vfiprintf_r+0x78>
 8027de2:	fb0c 3202 	mla	r2, ip, r2, r3
 8027de6:	460c      	mov	r4, r1
 8027de8:	2001      	movs	r0, #1
 8027dea:	e7a6      	b.n	8027d3a <_vfiprintf_r+0xfe>
 8027dec:	2300      	movs	r3, #0
 8027dee:	3401      	adds	r4, #1
 8027df0:	9305      	str	r3, [sp, #20]
 8027df2:	4619      	mov	r1, r3
 8027df4:	f04f 0c0a 	mov.w	ip, #10
 8027df8:	4620      	mov	r0, r4
 8027dfa:	f810 2b01 	ldrb.w	r2, [r0], #1
 8027dfe:	3a30      	subs	r2, #48	; 0x30
 8027e00:	2a09      	cmp	r2, #9
 8027e02:	d903      	bls.n	8027e0c <_vfiprintf_r+0x1d0>
 8027e04:	2b00      	cmp	r3, #0
 8027e06:	d0c6      	beq.n	8027d96 <_vfiprintf_r+0x15a>
 8027e08:	9105      	str	r1, [sp, #20]
 8027e0a:	e7c4      	b.n	8027d96 <_vfiprintf_r+0x15a>
 8027e0c:	fb0c 2101 	mla	r1, ip, r1, r2
 8027e10:	4604      	mov	r4, r0
 8027e12:	2301      	movs	r3, #1
 8027e14:	e7f0      	b.n	8027df8 <_vfiprintf_r+0x1bc>
 8027e16:	ab03      	add	r3, sp, #12
 8027e18:	9300      	str	r3, [sp, #0]
 8027e1a:	462a      	mov	r2, r5
 8027e1c:	4b12      	ldr	r3, [pc, #72]	; (8027e68 <_vfiprintf_r+0x22c>)
 8027e1e:	a904      	add	r1, sp, #16
 8027e20:	4630      	mov	r0, r6
 8027e22:	f3af 8000 	nop.w
 8027e26:	4607      	mov	r7, r0
 8027e28:	1c78      	adds	r0, r7, #1
 8027e2a:	d1d6      	bne.n	8027dda <_vfiprintf_r+0x19e>
 8027e2c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027e2e:	07d9      	lsls	r1, r3, #31
 8027e30:	d405      	bmi.n	8027e3e <_vfiprintf_r+0x202>
 8027e32:	89ab      	ldrh	r3, [r5, #12]
 8027e34:	059a      	lsls	r2, r3, #22
 8027e36:	d402      	bmi.n	8027e3e <_vfiprintf_r+0x202>
 8027e38:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027e3a:	f7ff fe1b 	bl	8027a74 <__retarget_lock_release_recursive>
 8027e3e:	89ab      	ldrh	r3, [r5, #12]
 8027e40:	065b      	lsls	r3, r3, #25
 8027e42:	f53f af1d 	bmi.w	8027c80 <_vfiprintf_r+0x44>
 8027e46:	9809      	ldr	r0, [sp, #36]	; 0x24
 8027e48:	e71c      	b.n	8027c84 <_vfiprintf_r+0x48>
 8027e4a:	ab03      	add	r3, sp, #12
 8027e4c:	9300      	str	r3, [sp, #0]
 8027e4e:	462a      	mov	r2, r5
 8027e50:	4b05      	ldr	r3, [pc, #20]	; (8027e68 <_vfiprintf_r+0x22c>)
 8027e52:	a904      	add	r1, sp, #16
 8027e54:	4630      	mov	r0, r6
 8027e56:	f000 f879 	bl	8027f4c <_printf_i>
 8027e5a:	e7e4      	b.n	8027e26 <_vfiprintf_r+0x1ea>
 8027e5c:	0802c154 	.word	0x0802c154
 8027e60:	0802c15e 	.word	0x0802c15e
 8027e64:	00000000 	.word	0x00000000
 8027e68:	08027c17 	.word	0x08027c17
 8027e6c:	0802c15a 	.word	0x0802c15a

08027e70 <_printf_common>:
 8027e70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027e74:	4616      	mov	r6, r2
 8027e76:	4699      	mov	r9, r3
 8027e78:	688a      	ldr	r2, [r1, #8]
 8027e7a:	690b      	ldr	r3, [r1, #16]
 8027e7c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8027e80:	4293      	cmp	r3, r2
 8027e82:	bfb8      	it	lt
 8027e84:	4613      	movlt	r3, r2
 8027e86:	6033      	str	r3, [r6, #0]
 8027e88:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8027e8c:	4607      	mov	r7, r0
 8027e8e:	460c      	mov	r4, r1
 8027e90:	b10a      	cbz	r2, 8027e96 <_printf_common+0x26>
 8027e92:	3301      	adds	r3, #1
 8027e94:	6033      	str	r3, [r6, #0]
 8027e96:	6823      	ldr	r3, [r4, #0]
 8027e98:	0699      	lsls	r1, r3, #26
 8027e9a:	bf42      	ittt	mi
 8027e9c:	6833      	ldrmi	r3, [r6, #0]
 8027e9e:	3302      	addmi	r3, #2
 8027ea0:	6033      	strmi	r3, [r6, #0]
 8027ea2:	6825      	ldr	r5, [r4, #0]
 8027ea4:	f015 0506 	ands.w	r5, r5, #6
 8027ea8:	d106      	bne.n	8027eb8 <_printf_common+0x48>
 8027eaa:	f104 0a19 	add.w	sl, r4, #25
 8027eae:	68e3      	ldr	r3, [r4, #12]
 8027eb0:	6832      	ldr	r2, [r6, #0]
 8027eb2:	1a9b      	subs	r3, r3, r2
 8027eb4:	42ab      	cmp	r3, r5
 8027eb6:	dc26      	bgt.n	8027f06 <_printf_common+0x96>
 8027eb8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8027ebc:	1e13      	subs	r3, r2, #0
 8027ebe:	6822      	ldr	r2, [r4, #0]
 8027ec0:	bf18      	it	ne
 8027ec2:	2301      	movne	r3, #1
 8027ec4:	0692      	lsls	r2, r2, #26
 8027ec6:	d42b      	bmi.n	8027f20 <_printf_common+0xb0>
 8027ec8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8027ecc:	4649      	mov	r1, r9
 8027ece:	4638      	mov	r0, r7
 8027ed0:	47c0      	blx	r8
 8027ed2:	3001      	adds	r0, #1
 8027ed4:	d01e      	beq.n	8027f14 <_printf_common+0xa4>
 8027ed6:	6823      	ldr	r3, [r4, #0]
 8027ed8:	6922      	ldr	r2, [r4, #16]
 8027eda:	f003 0306 	and.w	r3, r3, #6
 8027ede:	2b04      	cmp	r3, #4
 8027ee0:	bf02      	ittt	eq
 8027ee2:	68e5      	ldreq	r5, [r4, #12]
 8027ee4:	6833      	ldreq	r3, [r6, #0]
 8027ee6:	1aed      	subeq	r5, r5, r3
 8027ee8:	68a3      	ldr	r3, [r4, #8]
 8027eea:	bf0c      	ite	eq
 8027eec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8027ef0:	2500      	movne	r5, #0
 8027ef2:	4293      	cmp	r3, r2
 8027ef4:	bfc4      	itt	gt
 8027ef6:	1a9b      	subgt	r3, r3, r2
 8027ef8:	18ed      	addgt	r5, r5, r3
 8027efa:	2600      	movs	r6, #0
 8027efc:	341a      	adds	r4, #26
 8027efe:	42b5      	cmp	r5, r6
 8027f00:	d11a      	bne.n	8027f38 <_printf_common+0xc8>
 8027f02:	2000      	movs	r0, #0
 8027f04:	e008      	b.n	8027f18 <_printf_common+0xa8>
 8027f06:	2301      	movs	r3, #1
 8027f08:	4652      	mov	r2, sl
 8027f0a:	4649      	mov	r1, r9
 8027f0c:	4638      	mov	r0, r7
 8027f0e:	47c0      	blx	r8
 8027f10:	3001      	adds	r0, #1
 8027f12:	d103      	bne.n	8027f1c <_printf_common+0xac>
 8027f14:	f04f 30ff 	mov.w	r0, #4294967295
 8027f18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027f1c:	3501      	adds	r5, #1
 8027f1e:	e7c6      	b.n	8027eae <_printf_common+0x3e>
 8027f20:	18e1      	adds	r1, r4, r3
 8027f22:	1c5a      	adds	r2, r3, #1
 8027f24:	2030      	movs	r0, #48	; 0x30
 8027f26:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8027f2a:	4422      	add	r2, r4
 8027f2c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8027f30:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8027f34:	3302      	adds	r3, #2
 8027f36:	e7c7      	b.n	8027ec8 <_printf_common+0x58>
 8027f38:	2301      	movs	r3, #1
 8027f3a:	4622      	mov	r2, r4
 8027f3c:	4649      	mov	r1, r9
 8027f3e:	4638      	mov	r0, r7
 8027f40:	47c0      	blx	r8
 8027f42:	3001      	adds	r0, #1
 8027f44:	d0e6      	beq.n	8027f14 <_printf_common+0xa4>
 8027f46:	3601      	adds	r6, #1
 8027f48:	e7d9      	b.n	8027efe <_printf_common+0x8e>
	...

08027f4c <_printf_i>:
 8027f4c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8027f50:	7e0f      	ldrb	r7, [r1, #24]
 8027f52:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027f54:	2f78      	cmp	r7, #120	; 0x78
 8027f56:	4691      	mov	r9, r2
 8027f58:	4680      	mov	r8, r0
 8027f5a:	460c      	mov	r4, r1
 8027f5c:	469a      	mov	sl, r3
 8027f5e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8027f62:	d807      	bhi.n	8027f74 <_printf_i+0x28>
 8027f64:	2f62      	cmp	r7, #98	; 0x62
 8027f66:	d80a      	bhi.n	8027f7e <_printf_i+0x32>
 8027f68:	2f00      	cmp	r7, #0
 8027f6a:	f000 80d4 	beq.w	8028116 <_printf_i+0x1ca>
 8027f6e:	2f58      	cmp	r7, #88	; 0x58
 8027f70:	f000 80c0 	beq.w	80280f4 <_printf_i+0x1a8>
 8027f74:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8027f78:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8027f7c:	e03a      	b.n	8027ff4 <_printf_i+0xa8>
 8027f7e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8027f82:	2b15      	cmp	r3, #21
 8027f84:	d8f6      	bhi.n	8027f74 <_printf_i+0x28>
 8027f86:	a101      	add	r1, pc, #4	; (adr r1, 8027f8c <_printf_i+0x40>)
 8027f88:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8027f8c:	08027fe5 	.word	0x08027fe5
 8027f90:	08027ff9 	.word	0x08027ff9
 8027f94:	08027f75 	.word	0x08027f75
 8027f98:	08027f75 	.word	0x08027f75
 8027f9c:	08027f75 	.word	0x08027f75
 8027fa0:	08027f75 	.word	0x08027f75
 8027fa4:	08027ff9 	.word	0x08027ff9
 8027fa8:	08027f75 	.word	0x08027f75
 8027fac:	08027f75 	.word	0x08027f75
 8027fb0:	08027f75 	.word	0x08027f75
 8027fb4:	08027f75 	.word	0x08027f75
 8027fb8:	080280fd 	.word	0x080280fd
 8027fbc:	08028025 	.word	0x08028025
 8027fc0:	080280b7 	.word	0x080280b7
 8027fc4:	08027f75 	.word	0x08027f75
 8027fc8:	08027f75 	.word	0x08027f75
 8027fcc:	0802811f 	.word	0x0802811f
 8027fd0:	08027f75 	.word	0x08027f75
 8027fd4:	08028025 	.word	0x08028025
 8027fd8:	08027f75 	.word	0x08027f75
 8027fdc:	08027f75 	.word	0x08027f75
 8027fe0:	080280bf 	.word	0x080280bf
 8027fe4:	682b      	ldr	r3, [r5, #0]
 8027fe6:	1d1a      	adds	r2, r3, #4
 8027fe8:	681b      	ldr	r3, [r3, #0]
 8027fea:	602a      	str	r2, [r5, #0]
 8027fec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8027ff0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8027ff4:	2301      	movs	r3, #1
 8027ff6:	e09f      	b.n	8028138 <_printf_i+0x1ec>
 8027ff8:	6820      	ldr	r0, [r4, #0]
 8027ffa:	682b      	ldr	r3, [r5, #0]
 8027ffc:	0607      	lsls	r7, r0, #24
 8027ffe:	f103 0104 	add.w	r1, r3, #4
 8028002:	6029      	str	r1, [r5, #0]
 8028004:	d501      	bpl.n	802800a <_printf_i+0xbe>
 8028006:	681e      	ldr	r6, [r3, #0]
 8028008:	e003      	b.n	8028012 <_printf_i+0xc6>
 802800a:	0646      	lsls	r6, r0, #25
 802800c:	d5fb      	bpl.n	8028006 <_printf_i+0xba>
 802800e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8028012:	2e00      	cmp	r6, #0
 8028014:	da03      	bge.n	802801e <_printf_i+0xd2>
 8028016:	232d      	movs	r3, #45	; 0x2d
 8028018:	4276      	negs	r6, r6
 802801a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802801e:	485a      	ldr	r0, [pc, #360]	; (8028188 <_printf_i+0x23c>)
 8028020:	230a      	movs	r3, #10
 8028022:	e012      	b.n	802804a <_printf_i+0xfe>
 8028024:	682b      	ldr	r3, [r5, #0]
 8028026:	6820      	ldr	r0, [r4, #0]
 8028028:	1d19      	adds	r1, r3, #4
 802802a:	6029      	str	r1, [r5, #0]
 802802c:	0605      	lsls	r5, r0, #24
 802802e:	d501      	bpl.n	8028034 <_printf_i+0xe8>
 8028030:	681e      	ldr	r6, [r3, #0]
 8028032:	e002      	b.n	802803a <_printf_i+0xee>
 8028034:	0641      	lsls	r1, r0, #25
 8028036:	d5fb      	bpl.n	8028030 <_printf_i+0xe4>
 8028038:	881e      	ldrh	r6, [r3, #0]
 802803a:	4853      	ldr	r0, [pc, #332]	; (8028188 <_printf_i+0x23c>)
 802803c:	2f6f      	cmp	r7, #111	; 0x6f
 802803e:	bf0c      	ite	eq
 8028040:	2308      	moveq	r3, #8
 8028042:	230a      	movne	r3, #10
 8028044:	2100      	movs	r1, #0
 8028046:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802804a:	6865      	ldr	r5, [r4, #4]
 802804c:	60a5      	str	r5, [r4, #8]
 802804e:	2d00      	cmp	r5, #0
 8028050:	bfa2      	ittt	ge
 8028052:	6821      	ldrge	r1, [r4, #0]
 8028054:	f021 0104 	bicge.w	r1, r1, #4
 8028058:	6021      	strge	r1, [r4, #0]
 802805a:	b90e      	cbnz	r6, 8028060 <_printf_i+0x114>
 802805c:	2d00      	cmp	r5, #0
 802805e:	d04b      	beq.n	80280f8 <_printf_i+0x1ac>
 8028060:	4615      	mov	r5, r2
 8028062:	fbb6 f1f3 	udiv	r1, r6, r3
 8028066:	fb03 6711 	mls	r7, r3, r1, r6
 802806a:	5dc7      	ldrb	r7, [r0, r7]
 802806c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8028070:	4637      	mov	r7, r6
 8028072:	42bb      	cmp	r3, r7
 8028074:	460e      	mov	r6, r1
 8028076:	d9f4      	bls.n	8028062 <_printf_i+0x116>
 8028078:	2b08      	cmp	r3, #8
 802807a:	d10b      	bne.n	8028094 <_printf_i+0x148>
 802807c:	6823      	ldr	r3, [r4, #0]
 802807e:	07de      	lsls	r6, r3, #31
 8028080:	d508      	bpl.n	8028094 <_printf_i+0x148>
 8028082:	6923      	ldr	r3, [r4, #16]
 8028084:	6861      	ldr	r1, [r4, #4]
 8028086:	4299      	cmp	r1, r3
 8028088:	bfde      	ittt	le
 802808a:	2330      	movle	r3, #48	; 0x30
 802808c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8028090:	f105 35ff 	addle.w	r5, r5, #4294967295
 8028094:	1b52      	subs	r2, r2, r5
 8028096:	6122      	str	r2, [r4, #16]
 8028098:	f8cd a000 	str.w	sl, [sp]
 802809c:	464b      	mov	r3, r9
 802809e:	aa03      	add	r2, sp, #12
 80280a0:	4621      	mov	r1, r4
 80280a2:	4640      	mov	r0, r8
 80280a4:	f7ff fee4 	bl	8027e70 <_printf_common>
 80280a8:	3001      	adds	r0, #1
 80280aa:	d14a      	bne.n	8028142 <_printf_i+0x1f6>
 80280ac:	f04f 30ff 	mov.w	r0, #4294967295
 80280b0:	b004      	add	sp, #16
 80280b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80280b6:	6823      	ldr	r3, [r4, #0]
 80280b8:	f043 0320 	orr.w	r3, r3, #32
 80280bc:	6023      	str	r3, [r4, #0]
 80280be:	4833      	ldr	r0, [pc, #204]	; (802818c <_printf_i+0x240>)
 80280c0:	2778      	movs	r7, #120	; 0x78
 80280c2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80280c6:	6823      	ldr	r3, [r4, #0]
 80280c8:	6829      	ldr	r1, [r5, #0]
 80280ca:	061f      	lsls	r7, r3, #24
 80280cc:	f851 6b04 	ldr.w	r6, [r1], #4
 80280d0:	d402      	bmi.n	80280d8 <_printf_i+0x18c>
 80280d2:	065f      	lsls	r7, r3, #25
 80280d4:	bf48      	it	mi
 80280d6:	b2b6      	uxthmi	r6, r6
 80280d8:	07df      	lsls	r7, r3, #31
 80280da:	bf48      	it	mi
 80280dc:	f043 0320 	orrmi.w	r3, r3, #32
 80280e0:	6029      	str	r1, [r5, #0]
 80280e2:	bf48      	it	mi
 80280e4:	6023      	strmi	r3, [r4, #0]
 80280e6:	b91e      	cbnz	r6, 80280f0 <_printf_i+0x1a4>
 80280e8:	6823      	ldr	r3, [r4, #0]
 80280ea:	f023 0320 	bic.w	r3, r3, #32
 80280ee:	6023      	str	r3, [r4, #0]
 80280f0:	2310      	movs	r3, #16
 80280f2:	e7a7      	b.n	8028044 <_printf_i+0xf8>
 80280f4:	4824      	ldr	r0, [pc, #144]	; (8028188 <_printf_i+0x23c>)
 80280f6:	e7e4      	b.n	80280c2 <_printf_i+0x176>
 80280f8:	4615      	mov	r5, r2
 80280fa:	e7bd      	b.n	8028078 <_printf_i+0x12c>
 80280fc:	682b      	ldr	r3, [r5, #0]
 80280fe:	6826      	ldr	r6, [r4, #0]
 8028100:	6961      	ldr	r1, [r4, #20]
 8028102:	1d18      	adds	r0, r3, #4
 8028104:	6028      	str	r0, [r5, #0]
 8028106:	0635      	lsls	r5, r6, #24
 8028108:	681b      	ldr	r3, [r3, #0]
 802810a:	d501      	bpl.n	8028110 <_printf_i+0x1c4>
 802810c:	6019      	str	r1, [r3, #0]
 802810e:	e002      	b.n	8028116 <_printf_i+0x1ca>
 8028110:	0670      	lsls	r0, r6, #25
 8028112:	d5fb      	bpl.n	802810c <_printf_i+0x1c0>
 8028114:	8019      	strh	r1, [r3, #0]
 8028116:	2300      	movs	r3, #0
 8028118:	6123      	str	r3, [r4, #16]
 802811a:	4615      	mov	r5, r2
 802811c:	e7bc      	b.n	8028098 <_printf_i+0x14c>
 802811e:	682b      	ldr	r3, [r5, #0]
 8028120:	1d1a      	adds	r2, r3, #4
 8028122:	602a      	str	r2, [r5, #0]
 8028124:	681d      	ldr	r5, [r3, #0]
 8028126:	6862      	ldr	r2, [r4, #4]
 8028128:	2100      	movs	r1, #0
 802812a:	4628      	mov	r0, r5
 802812c:	f7d8 f860 	bl	80001f0 <memchr>
 8028130:	b108      	cbz	r0, 8028136 <_printf_i+0x1ea>
 8028132:	1b40      	subs	r0, r0, r5
 8028134:	6060      	str	r0, [r4, #4]
 8028136:	6863      	ldr	r3, [r4, #4]
 8028138:	6123      	str	r3, [r4, #16]
 802813a:	2300      	movs	r3, #0
 802813c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8028140:	e7aa      	b.n	8028098 <_printf_i+0x14c>
 8028142:	6923      	ldr	r3, [r4, #16]
 8028144:	462a      	mov	r2, r5
 8028146:	4649      	mov	r1, r9
 8028148:	4640      	mov	r0, r8
 802814a:	47d0      	blx	sl
 802814c:	3001      	adds	r0, #1
 802814e:	d0ad      	beq.n	80280ac <_printf_i+0x160>
 8028150:	6823      	ldr	r3, [r4, #0]
 8028152:	079b      	lsls	r3, r3, #30
 8028154:	d413      	bmi.n	802817e <_printf_i+0x232>
 8028156:	68e0      	ldr	r0, [r4, #12]
 8028158:	9b03      	ldr	r3, [sp, #12]
 802815a:	4298      	cmp	r0, r3
 802815c:	bfb8      	it	lt
 802815e:	4618      	movlt	r0, r3
 8028160:	e7a6      	b.n	80280b0 <_printf_i+0x164>
 8028162:	2301      	movs	r3, #1
 8028164:	4632      	mov	r2, r6
 8028166:	4649      	mov	r1, r9
 8028168:	4640      	mov	r0, r8
 802816a:	47d0      	blx	sl
 802816c:	3001      	adds	r0, #1
 802816e:	d09d      	beq.n	80280ac <_printf_i+0x160>
 8028170:	3501      	adds	r5, #1
 8028172:	68e3      	ldr	r3, [r4, #12]
 8028174:	9903      	ldr	r1, [sp, #12]
 8028176:	1a5b      	subs	r3, r3, r1
 8028178:	42ab      	cmp	r3, r5
 802817a:	dcf2      	bgt.n	8028162 <_printf_i+0x216>
 802817c:	e7eb      	b.n	8028156 <_printf_i+0x20a>
 802817e:	2500      	movs	r5, #0
 8028180:	f104 0619 	add.w	r6, r4, #25
 8028184:	e7f5      	b.n	8028172 <_printf_i+0x226>
 8028186:	bf00      	nop
 8028188:	0802c165 	.word	0x0802c165
 802818c:	0802c176 	.word	0x0802c176

08028190 <__sflush_r>:
 8028190:	898a      	ldrh	r2, [r1, #12]
 8028192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028196:	4605      	mov	r5, r0
 8028198:	0710      	lsls	r0, r2, #28
 802819a:	460c      	mov	r4, r1
 802819c:	d458      	bmi.n	8028250 <__sflush_r+0xc0>
 802819e:	684b      	ldr	r3, [r1, #4]
 80281a0:	2b00      	cmp	r3, #0
 80281a2:	dc05      	bgt.n	80281b0 <__sflush_r+0x20>
 80281a4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80281a6:	2b00      	cmp	r3, #0
 80281a8:	dc02      	bgt.n	80281b0 <__sflush_r+0x20>
 80281aa:	2000      	movs	r0, #0
 80281ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80281b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80281b2:	2e00      	cmp	r6, #0
 80281b4:	d0f9      	beq.n	80281aa <__sflush_r+0x1a>
 80281b6:	2300      	movs	r3, #0
 80281b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80281bc:	682f      	ldr	r7, [r5, #0]
 80281be:	6a21      	ldr	r1, [r4, #32]
 80281c0:	602b      	str	r3, [r5, #0]
 80281c2:	d032      	beq.n	802822a <__sflush_r+0x9a>
 80281c4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80281c6:	89a3      	ldrh	r3, [r4, #12]
 80281c8:	075a      	lsls	r2, r3, #29
 80281ca:	d505      	bpl.n	80281d8 <__sflush_r+0x48>
 80281cc:	6863      	ldr	r3, [r4, #4]
 80281ce:	1ac0      	subs	r0, r0, r3
 80281d0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80281d2:	b10b      	cbz	r3, 80281d8 <__sflush_r+0x48>
 80281d4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80281d6:	1ac0      	subs	r0, r0, r3
 80281d8:	2300      	movs	r3, #0
 80281da:	4602      	mov	r2, r0
 80281dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80281de:	6a21      	ldr	r1, [r4, #32]
 80281e0:	4628      	mov	r0, r5
 80281e2:	47b0      	blx	r6
 80281e4:	1c43      	adds	r3, r0, #1
 80281e6:	89a3      	ldrh	r3, [r4, #12]
 80281e8:	d106      	bne.n	80281f8 <__sflush_r+0x68>
 80281ea:	6829      	ldr	r1, [r5, #0]
 80281ec:	291d      	cmp	r1, #29
 80281ee:	d82b      	bhi.n	8028248 <__sflush_r+0xb8>
 80281f0:	4a29      	ldr	r2, [pc, #164]	; (8028298 <__sflush_r+0x108>)
 80281f2:	410a      	asrs	r2, r1
 80281f4:	07d6      	lsls	r6, r2, #31
 80281f6:	d427      	bmi.n	8028248 <__sflush_r+0xb8>
 80281f8:	2200      	movs	r2, #0
 80281fa:	6062      	str	r2, [r4, #4]
 80281fc:	04d9      	lsls	r1, r3, #19
 80281fe:	6922      	ldr	r2, [r4, #16]
 8028200:	6022      	str	r2, [r4, #0]
 8028202:	d504      	bpl.n	802820e <__sflush_r+0x7e>
 8028204:	1c42      	adds	r2, r0, #1
 8028206:	d101      	bne.n	802820c <__sflush_r+0x7c>
 8028208:	682b      	ldr	r3, [r5, #0]
 802820a:	b903      	cbnz	r3, 802820e <__sflush_r+0x7e>
 802820c:	6560      	str	r0, [r4, #84]	; 0x54
 802820e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028210:	602f      	str	r7, [r5, #0]
 8028212:	2900      	cmp	r1, #0
 8028214:	d0c9      	beq.n	80281aa <__sflush_r+0x1a>
 8028216:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802821a:	4299      	cmp	r1, r3
 802821c:	d002      	beq.n	8028224 <__sflush_r+0x94>
 802821e:	4628      	mov	r0, r5
 8028220:	f7ff fc96 	bl	8027b50 <_free_r>
 8028224:	2000      	movs	r0, #0
 8028226:	6360      	str	r0, [r4, #52]	; 0x34
 8028228:	e7c0      	b.n	80281ac <__sflush_r+0x1c>
 802822a:	2301      	movs	r3, #1
 802822c:	4628      	mov	r0, r5
 802822e:	47b0      	blx	r6
 8028230:	1c41      	adds	r1, r0, #1
 8028232:	d1c8      	bne.n	80281c6 <__sflush_r+0x36>
 8028234:	682b      	ldr	r3, [r5, #0]
 8028236:	2b00      	cmp	r3, #0
 8028238:	d0c5      	beq.n	80281c6 <__sflush_r+0x36>
 802823a:	2b1d      	cmp	r3, #29
 802823c:	d001      	beq.n	8028242 <__sflush_r+0xb2>
 802823e:	2b16      	cmp	r3, #22
 8028240:	d101      	bne.n	8028246 <__sflush_r+0xb6>
 8028242:	602f      	str	r7, [r5, #0]
 8028244:	e7b1      	b.n	80281aa <__sflush_r+0x1a>
 8028246:	89a3      	ldrh	r3, [r4, #12]
 8028248:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802824c:	81a3      	strh	r3, [r4, #12]
 802824e:	e7ad      	b.n	80281ac <__sflush_r+0x1c>
 8028250:	690f      	ldr	r7, [r1, #16]
 8028252:	2f00      	cmp	r7, #0
 8028254:	d0a9      	beq.n	80281aa <__sflush_r+0x1a>
 8028256:	0793      	lsls	r3, r2, #30
 8028258:	680e      	ldr	r6, [r1, #0]
 802825a:	bf08      	it	eq
 802825c:	694b      	ldreq	r3, [r1, #20]
 802825e:	600f      	str	r7, [r1, #0]
 8028260:	bf18      	it	ne
 8028262:	2300      	movne	r3, #0
 8028264:	eba6 0807 	sub.w	r8, r6, r7
 8028268:	608b      	str	r3, [r1, #8]
 802826a:	f1b8 0f00 	cmp.w	r8, #0
 802826e:	dd9c      	ble.n	80281aa <__sflush_r+0x1a>
 8028270:	6a21      	ldr	r1, [r4, #32]
 8028272:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8028274:	4643      	mov	r3, r8
 8028276:	463a      	mov	r2, r7
 8028278:	4628      	mov	r0, r5
 802827a:	47b0      	blx	r6
 802827c:	2800      	cmp	r0, #0
 802827e:	dc06      	bgt.n	802828e <__sflush_r+0xfe>
 8028280:	89a3      	ldrh	r3, [r4, #12]
 8028282:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028286:	81a3      	strh	r3, [r4, #12]
 8028288:	f04f 30ff 	mov.w	r0, #4294967295
 802828c:	e78e      	b.n	80281ac <__sflush_r+0x1c>
 802828e:	4407      	add	r7, r0
 8028290:	eba8 0800 	sub.w	r8, r8, r0
 8028294:	e7e9      	b.n	802826a <__sflush_r+0xda>
 8028296:	bf00      	nop
 8028298:	dfbffffe 	.word	0xdfbffffe

0802829c <_fflush_r>:
 802829c:	b538      	push	{r3, r4, r5, lr}
 802829e:	690b      	ldr	r3, [r1, #16]
 80282a0:	4605      	mov	r5, r0
 80282a2:	460c      	mov	r4, r1
 80282a4:	b913      	cbnz	r3, 80282ac <_fflush_r+0x10>
 80282a6:	2500      	movs	r5, #0
 80282a8:	4628      	mov	r0, r5
 80282aa:	bd38      	pop	{r3, r4, r5, pc}
 80282ac:	b118      	cbz	r0, 80282b6 <_fflush_r+0x1a>
 80282ae:	6a03      	ldr	r3, [r0, #32]
 80282b0:	b90b      	cbnz	r3, 80282b6 <_fflush_r+0x1a>
 80282b2:	f7ff fa2f 	bl	8027714 <__sinit>
 80282b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80282ba:	2b00      	cmp	r3, #0
 80282bc:	d0f3      	beq.n	80282a6 <_fflush_r+0xa>
 80282be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80282c0:	07d0      	lsls	r0, r2, #31
 80282c2:	d404      	bmi.n	80282ce <_fflush_r+0x32>
 80282c4:	0599      	lsls	r1, r3, #22
 80282c6:	d402      	bmi.n	80282ce <_fflush_r+0x32>
 80282c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80282ca:	f7ff fbd2 	bl	8027a72 <__retarget_lock_acquire_recursive>
 80282ce:	4628      	mov	r0, r5
 80282d0:	4621      	mov	r1, r4
 80282d2:	f7ff ff5d 	bl	8028190 <__sflush_r>
 80282d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80282d8:	07da      	lsls	r2, r3, #31
 80282da:	4605      	mov	r5, r0
 80282dc:	d4e4      	bmi.n	80282a8 <_fflush_r+0xc>
 80282de:	89a3      	ldrh	r3, [r4, #12]
 80282e0:	059b      	lsls	r3, r3, #22
 80282e2:	d4e1      	bmi.n	80282a8 <_fflush_r+0xc>
 80282e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80282e6:	f7ff fbc5 	bl	8027a74 <__retarget_lock_release_recursive>
 80282ea:	e7dd      	b.n	80282a8 <_fflush_r+0xc>

080282ec <__swbuf_r>:
 80282ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80282ee:	460e      	mov	r6, r1
 80282f0:	4614      	mov	r4, r2
 80282f2:	4605      	mov	r5, r0
 80282f4:	b118      	cbz	r0, 80282fe <__swbuf_r+0x12>
 80282f6:	6a03      	ldr	r3, [r0, #32]
 80282f8:	b90b      	cbnz	r3, 80282fe <__swbuf_r+0x12>
 80282fa:	f7ff fa0b 	bl	8027714 <__sinit>
 80282fe:	69a3      	ldr	r3, [r4, #24]
 8028300:	60a3      	str	r3, [r4, #8]
 8028302:	89a3      	ldrh	r3, [r4, #12]
 8028304:	071a      	lsls	r2, r3, #28
 8028306:	d525      	bpl.n	8028354 <__swbuf_r+0x68>
 8028308:	6923      	ldr	r3, [r4, #16]
 802830a:	b31b      	cbz	r3, 8028354 <__swbuf_r+0x68>
 802830c:	6823      	ldr	r3, [r4, #0]
 802830e:	6922      	ldr	r2, [r4, #16]
 8028310:	1a98      	subs	r0, r3, r2
 8028312:	6963      	ldr	r3, [r4, #20]
 8028314:	b2f6      	uxtb	r6, r6
 8028316:	4283      	cmp	r3, r0
 8028318:	4637      	mov	r7, r6
 802831a:	dc04      	bgt.n	8028326 <__swbuf_r+0x3a>
 802831c:	4621      	mov	r1, r4
 802831e:	4628      	mov	r0, r5
 8028320:	f7ff ffbc 	bl	802829c <_fflush_r>
 8028324:	b9e0      	cbnz	r0, 8028360 <__swbuf_r+0x74>
 8028326:	68a3      	ldr	r3, [r4, #8]
 8028328:	3b01      	subs	r3, #1
 802832a:	60a3      	str	r3, [r4, #8]
 802832c:	6823      	ldr	r3, [r4, #0]
 802832e:	1c5a      	adds	r2, r3, #1
 8028330:	6022      	str	r2, [r4, #0]
 8028332:	701e      	strb	r6, [r3, #0]
 8028334:	6962      	ldr	r2, [r4, #20]
 8028336:	1c43      	adds	r3, r0, #1
 8028338:	429a      	cmp	r2, r3
 802833a:	d004      	beq.n	8028346 <__swbuf_r+0x5a>
 802833c:	89a3      	ldrh	r3, [r4, #12]
 802833e:	07db      	lsls	r3, r3, #31
 8028340:	d506      	bpl.n	8028350 <__swbuf_r+0x64>
 8028342:	2e0a      	cmp	r6, #10
 8028344:	d104      	bne.n	8028350 <__swbuf_r+0x64>
 8028346:	4621      	mov	r1, r4
 8028348:	4628      	mov	r0, r5
 802834a:	f7ff ffa7 	bl	802829c <_fflush_r>
 802834e:	b938      	cbnz	r0, 8028360 <__swbuf_r+0x74>
 8028350:	4638      	mov	r0, r7
 8028352:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028354:	4621      	mov	r1, r4
 8028356:	4628      	mov	r0, r5
 8028358:	f000 f806 	bl	8028368 <__swsetup_r>
 802835c:	2800      	cmp	r0, #0
 802835e:	d0d5      	beq.n	802830c <__swbuf_r+0x20>
 8028360:	f04f 37ff 	mov.w	r7, #4294967295
 8028364:	e7f4      	b.n	8028350 <__swbuf_r+0x64>
	...

08028368 <__swsetup_r>:
 8028368:	b538      	push	{r3, r4, r5, lr}
 802836a:	4b2a      	ldr	r3, [pc, #168]	; (8028414 <__swsetup_r+0xac>)
 802836c:	4605      	mov	r5, r0
 802836e:	6818      	ldr	r0, [r3, #0]
 8028370:	460c      	mov	r4, r1
 8028372:	b118      	cbz	r0, 802837c <__swsetup_r+0x14>
 8028374:	6a03      	ldr	r3, [r0, #32]
 8028376:	b90b      	cbnz	r3, 802837c <__swsetup_r+0x14>
 8028378:	f7ff f9cc 	bl	8027714 <__sinit>
 802837c:	89a3      	ldrh	r3, [r4, #12]
 802837e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028382:	0718      	lsls	r0, r3, #28
 8028384:	d422      	bmi.n	80283cc <__swsetup_r+0x64>
 8028386:	06d9      	lsls	r1, r3, #27
 8028388:	d407      	bmi.n	802839a <__swsetup_r+0x32>
 802838a:	2309      	movs	r3, #9
 802838c:	602b      	str	r3, [r5, #0]
 802838e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8028392:	81a3      	strh	r3, [r4, #12]
 8028394:	f04f 30ff 	mov.w	r0, #4294967295
 8028398:	e034      	b.n	8028404 <__swsetup_r+0x9c>
 802839a:	0758      	lsls	r0, r3, #29
 802839c:	d512      	bpl.n	80283c4 <__swsetup_r+0x5c>
 802839e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80283a0:	b141      	cbz	r1, 80283b4 <__swsetup_r+0x4c>
 80283a2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80283a6:	4299      	cmp	r1, r3
 80283a8:	d002      	beq.n	80283b0 <__swsetup_r+0x48>
 80283aa:	4628      	mov	r0, r5
 80283ac:	f7ff fbd0 	bl	8027b50 <_free_r>
 80283b0:	2300      	movs	r3, #0
 80283b2:	6363      	str	r3, [r4, #52]	; 0x34
 80283b4:	89a3      	ldrh	r3, [r4, #12]
 80283b6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80283ba:	81a3      	strh	r3, [r4, #12]
 80283bc:	2300      	movs	r3, #0
 80283be:	6063      	str	r3, [r4, #4]
 80283c0:	6923      	ldr	r3, [r4, #16]
 80283c2:	6023      	str	r3, [r4, #0]
 80283c4:	89a3      	ldrh	r3, [r4, #12]
 80283c6:	f043 0308 	orr.w	r3, r3, #8
 80283ca:	81a3      	strh	r3, [r4, #12]
 80283cc:	6923      	ldr	r3, [r4, #16]
 80283ce:	b94b      	cbnz	r3, 80283e4 <__swsetup_r+0x7c>
 80283d0:	89a3      	ldrh	r3, [r4, #12]
 80283d2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80283d6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80283da:	d003      	beq.n	80283e4 <__swsetup_r+0x7c>
 80283dc:	4621      	mov	r1, r4
 80283de:	4628      	mov	r0, r5
 80283e0:	f000 f840 	bl	8028464 <__smakebuf_r>
 80283e4:	89a0      	ldrh	r0, [r4, #12]
 80283e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80283ea:	f010 0301 	ands.w	r3, r0, #1
 80283ee:	d00a      	beq.n	8028406 <__swsetup_r+0x9e>
 80283f0:	2300      	movs	r3, #0
 80283f2:	60a3      	str	r3, [r4, #8]
 80283f4:	6963      	ldr	r3, [r4, #20]
 80283f6:	425b      	negs	r3, r3
 80283f8:	61a3      	str	r3, [r4, #24]
 80283fa:	6923      	ldr	r3, [r4, #16]
 80283fc:	b943      	cbnz	r3, 8028410 <__swsetup_r+0xa8>
 80283fe:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8028402:	d1c4      	bne.n	802838e <__swsetup_r+0x26>
 8028404:	bd38      	pop	{r3, r4, r5, pc}
 8028406:	0781      	lsls	r1, r0, #30
 8028408:	bf58      	it	pl
 802840a:	6963      	ldrpl	r3, [r4, #20]
 802840c:	60a3      	str	r3, [r4, #8]
 802840e:	e7f4      	b.n	80283fa <__swsetup_r+0x92>
 8028410:	2000      	movs	r0, #0
 8028412:	e7f7      	b.n	8028404 <__swsetup_r+0x9c>
 8028414:	20000160 	.word	0x20000160

08028418 <__swhatbuf_r>:
 8028418:	b570      	push	{r4, r5, r6, lr}
 802841a:	460c      	mov	r4, r1
 802841c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028420:	2900      	cmp	r1, #0
 8028422:	b096      	sub	sp, #88	; 0x58
 8028424:	4615      	mov	r5, r2
 8028426:	461e      	mov	r6, r3
 8028428:	da0d      	bge.n	8028446 <__swhatbuf_r+0x2e>
 802842a:	89a3      	ldrh	r3, [r4, #12]
 802842c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8028430:	f04f 0100 	mov.w	r1, #0
 8028434:	bf0c      	ite	eq
 8028436:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802843a:	2340      	movne	r3, #64	; 0x40
 802843c:	2000      	movs	r0, #0
 802843e:	6031      	str	r1, [r6, #0]
 8028440:	602b      	str	r3, [r5, #0]
 8028442:	b016      	add	sp, #88	; 0x58
 8028444:	bd70      	pop	{r4, r5, r6, pc}
 8028446:	466a      	mov	r2, sp
 8028448:	f000 f848 	bl	80284dc <_fstat_r>
 802844c:	2800      	cmp	r0, #0
 802844e:	dbec      	blt.n	802842a <__swhatbuf_r+0x12>
 8028450:	9901      	ldr	r1, [sp, #4]
 8028452:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8028456:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802845a:	4259      	negs	r1, r3
 802845c:	4159      	adcs	r1, r3
 802845e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8028462:	e7eb      	b.n	802843c <__swhatbuf_r+0x24>

08028464 <__smakebuf_r>:
 8028464:	898b      	ldrh	r3, [r1, #12]
 8028466:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8028468:	079d      	lsls	r5, r3, #30
 802846a:	4606      	mov	r6, r0
 802846c:	460c      	mov	r4, r1
 802846e:	d507      	bpl.n	8028480 <__smakebuf_r+0x1c>
 8028470:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8028474:	6023      	str	r3, [r4, #0]
 8028476:	6123      	str	r3, [r4, #16]
 8028478:	2301      	movs	r3, #1
 802847a:	6163      	str	r3, [r4, #20]
 802847c:	b002      	add	sp, #8
 802847e:	bd70      	pop	{r4, r5, r6, pc}
 8028480:	ab01      	add	r3, sp, #4
 8028482:	466a      	mov	r2, sp
 8028484:	f7ff ffc8 	bl	8028418 <__swhatbuf_r>
 8028488:	9900      	ldr	r1, [sp, #0]
 802848a:	4605      	mov	r5, r0
 802848c:	4630      	mov	r0, r6
 802848e:	f7ff f81b 	bl	80274c8 <_malloc_r>
 8028492:	b948      	cbnz	r0, 80284a8 <__smakebuf_r+0x44>
 8028494:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028498:	059a      	lsls	r2, r3, #22
 802849a:	d4ef      	bmi.n	802847c <__smakebuf_r+0x18>
 802849c:	f023 0303 	bic.w	r3, r3, #3
 80284a0:	f043 0302 	orr.w	r3, r3, #2
 80284a4:	81a3      	strh	r3, [r4, #12]
 80284a6:	e7e3      	b.n	8028470 <__smakebuf_r+0xc>
 80284a8:	89a3      	ldrh	r3, [r4, #12]
 80284aa:	6020      	str	r0, [r4, #0]
 80284ac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80284b0:	81a3      	strh	r3, [r4, #12]
 80284b2:	9b00      	ldr	r3, [sp, #0]
 80284b4:	6163      	str	r3, [r4, #20]
 80284b6:	9b01      	ldr	r3, [sp, #4]
 80284b8:	6120      	str	r0, [r4, #16]
 80284ba:	b15b      	cbz	r3, 80284d4 <__smakebuf_r+0x70>
 80284bc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80284c0:	4630      	mov	r0, r6
 80284c2:	f000 f81d 	bl	8028500 <_isatty_r>
 80284c6:	b128      	cbz	r0, 80284d4 <__smakebuf_r+0x70>
 80284c8:	89a3      	ldrh	r3, [r4, #12]
 80284ca:	f023 0303 	bic.w	r3, r3, #3
 80284ce:	f043 0301 	orr.w	r3, r3, #1
 80284d2:	81a3      	strh	r3, [r4, #12]
 80284d4:	89a3      	ldrh	r3, [r4, #12]
 80284d6:	431d      	orrs	r5, r3
 80284d8:	81a5      	strh	r5, [r4, #12]
 80284da:	e7cf      	b.n	802847c <__smakebuf_r+0x18>

080284dc <_fstat_r>:
 80284dc:	b538      	push	{r3, r4, r5, lr}
 80284de:	4d07      	ldr	r5, [pc, #28]	; (80284fc <_fstat_r+0x20>)
 80284e0:	2300      	movs	r3, #0
 80284e2:	4604      	mov	r4, r0
 80284e4:	4608      	mov	r0, r1
 80284e6:	4611      	mov	r1, r2
 80284e8:	602b      	str	r3, [r5, #0]
 80284ea:	f7d9 fe79 	bl	80021e0 <_fstat>
 80284ee:	1c43      	adds	r3, r0, #1
 80284f0:	d102      	bne.n	80284f8 <_fstat_r+0x1c>
 80284f2:	682b      	ldr	r3, [r5, #0]
 80284f4:	b103      	cbz	r3, 80284f8 <_fstat_r+0x1c>
 80284f6:	6023      	str	r3, [r4, #0]
 80284f8:	bd38      	pop	{r3, r4, r5, pc}
 80284fa:	bf00      	nop
 80284fc:	20014254 	.word	0x20014254

08028500 <_isatty_r>:
 8028500:	b538      	push	{r3, r4, r5, lr}
 8028502:	4d06      	ldr	r5, [pc, #24]	; (802851c <_isatty_r+0x1c>)
 8028504:	2300      	movs	r3, #0
 8028506:	4604      	mov	r4, r0
 8028508:	4608      	mov	r0, r1
 802850a:	602b      	str	r3, [r5, #0]
 802850c:	f7d9 fe6e 	bl	80021ec <_isatty>
 8028510:	1c43      	adds	r3, r0, #1
 8028512:	d102      	bne.n	802851a <_isatty_r+0x1a>
 8028514:	682b      	ldr	r3, [r5, #0]
 8028516:	b103      	cbz	r3, 802851a <_isatty_r+0x1a>
 8028518:	6023      	str	r3, [r4, #0]
 802851a:	bd38      	pop	{r3, r4, r5, pc}
 802851c:	20014254 	.word	0x20014254

08028520 <_init>:
 8028520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028522:	bf00      	nop
 8028524:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028526:	bc08      	pop	{r3}
 8028528:	469e      	mov	lr, r3
 802852a:	4770      	bx	lr

0802852c <_fini>:
 802852c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802852e:	bf00      	nop
 8028530:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028532:	bc08      	pop	{r3}
 8028534:	469e      	mov	lr, r3
 8028536:	4770      	bx	lr


STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002eaf0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171d0  0802eca0  0802eca0  0003eca0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08045e70  08045e70  00055e70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08049b68  08049b68  00059b68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000734  08049db4  08049db4  00059db4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  0804a4e8  0804a4e8  0005a4e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cf5d8  080cf5d8  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080cf5d8  080cf5d8  000df5d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cf5e0  080cf5e0  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cf5e0  080cf5e0  000df5e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cf5f4  080cf5f4  000df5f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080cf5f8  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001431c  20000170  080cf764  000e0170  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  2001448c  080cf764  000e448c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY
 18 .debug_line   000975c1  00000000  00000000  000e02ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  0017788f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0025125d  00000000  00000000  00177922  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002cc54  00000000  00000000  003c8b7f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000044b0  00000000  00000000  003f57d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00120a57  00000000  00000000  003f9c88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008823  00000000  00000000  0051a6df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00035895  00000000  00000000  00522f02  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003b885  00000000  00000000  00558797  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000ce1c  00000000  00000000  0059401c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003866  00000000  00000000  005a0e38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000180  00000000  00000000  005a469e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802ec88 	.word	0x0802ec88

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0802ec88 	.word	0x0802ec88

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:
    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 

  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f00a fcdf 	bl	800b6a4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02d fa53 	bl	802e190 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f000 fdad 	bl	8001848 <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	080cf5f8 	.word	0x080cf5f8
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 8000d00:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000d04:	2001448c 	.word	0x2001448c

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 8000d0c:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8000d10:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 8000d14:	4293      	cmp	r3, r2
 8000d16:	d905      	bls.n	8000d24 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 8000d18:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 8000d1c:	4291      	cmp	r1, r2
 8000d1e:	d803      	bhi.n	8000d28 <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 8000d20:	2001      	movs	r0, #1
 8000d22:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 8000d24:	2000      	movs	r0, #0
 8000d26:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 8000d28:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 8000d2c:	4291      	cmp	r1, r2
 8000d2e:	d960      	bls.n	8000df2 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 8000d30:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 8000d34:	4293      	cmp	r3, r2
 8000d36:	d95e      	bls.n	8000df6 <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 8000d38:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 8000d3c:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 8000d40:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8000d44:	4291      	cmp	r1, r2
 8000d46:	d95a      	bls.n	8000dfe <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 8000d48:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8000d4c:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 8000d50:	4291      	cmp	r1, r2
 8000d52:	d952      	bls.n	8000dfa <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 8000d54:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 8000d58:	4291      	cmp	r1, r2
 8000d5a:	d952      	bls.n	8000e02 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 8000d5c:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 8000d60:	4291      	cmp	r1, r2
 8000d62:	d950      	bls.n	8000e06 <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 8000d64:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 8000d68:	4291      	cmp	r1, r2
 8000d6a:	d94e      	bls.n	8000e0a <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000d6c:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000d70:	4291      	cmp	r1, r2
 8000d72:	d94c      	bls.n	8000e0e <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000d74:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 8000d78:	4291      	cmp	r1, r2
 8000d7a:	d94a      	bls.n	8000e12 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000d7c:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000d80:	4291      	cmp	r1, r2
 8000d82:	d948      	bls.n	8000e16 <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000d84:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 8000d88:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000d8c:	4288      	cmp	r0, r1
 8000d8e:	d944      	bls.n	8000e1a <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000d90:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000d94:	458c      	cmp	ip, r1
 8000d96:	d942      	bls.n	8000e1e <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 8000d98:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000d9c:	458c      	cmp	ip, r1
 8000d9e:	d940      	bls.n	8000e22 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000da0:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000da4:	4288      	cmp	r0, r1
 8000da6:	d93e      	bls.n	8000e26 <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 8000da8:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000dac:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000db0:	4288      	cmp	r0, r1
 8000db2:	d93a      	bls.n	8000e2a <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000db4:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 8000db8:	4291      	cmp	r1, r2
 8000dba:	d938      	bls.n	8000e2e <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000dbc:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000dc0:	4291      	cmp	r1, r2
 8000dc2:	d938      	bls.n	8000e36 <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000dc4:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 8000dc8:	4291      	cmp	r1, r2
 8000dca:	d932      	bls.n	8000e32 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000dcc:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000dd0:	4291      	cmp	r1, r2
 8000dd2:	d936      	bls.n	8000e42 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000dd4:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 8000dd8:	4291      	cmp	r1, r2
 8000dda:	d930      	bls.n	8000e3e <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000ddc:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000de0:	4291      	cmp	r1, r2
 8000de2:	d92a      	bls.n	8000e3a <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000de4:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 8000de8:	4293      	cmp	r3, r2
 8000dea:	bf94      	ite	ls
 8000dec:	2017      	movls	r0, #23
 8000dee:	2000      	movhi	r0, #0
 8000df0:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000df2:	2002      	movs	r0, #2
 8000df4:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 8000df6:	2003      	movs	r0, #3
 8000df8:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 8000dfa:	2005      	movs	r0, #5
 8000dfc:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000dfe:	2004      	movs	r0, #4
 8000e00:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000e02:	2006      	movs	r0, #6
 8000e04:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 8000e06:	2007      	movs	r0, #7
 8000e08:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 8000e0a:	2008      	movs	r0, #8
 8000e0c:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 8000e0e:	2009      	movs	r0, #9
 8000e10:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 8000e12:	200a      	movs	r0, #10
 8000e14:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 8000e16:	200b      	movs	r0, #11
 8000e18:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 8000e1a:	200c      	movs	r0, #12
 8000e1c:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 8000e1e:	200d      	movs	r0, #13
 8000e20:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 8000e22:	200e      	movs	r0, #14
 8000e24:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 8000e26:	200f      	movs	r0, #15
 8000e28:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 8000e2a:	2010      	movs	r0, #16
 8000e2c:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 8000e2e:	2011      	movs	r0, #17
 8000e30:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 8000e32:	2013      	movs	r0, #19
 8000e34:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 8000e36:	2012      	movs	r0, #18
 8000e38:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 8000e3a:	2016      	movs	r0, #22
  }
  return sector;
}
 8000e3c:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 8000e3e:	2015      	movs	r0, #21
 8000e40:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 8000e42:	2014      	movs	r0, #20
 8000e44:	4770      	bx	lr
 8000e46:	bf00      	nop

08000e48 <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 8000e48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e4a:	4607      	mov	r7, r0
 8000e4c:	b083      	sub	sp, #12
 8000e4e:	4616      	mov	r6, r2
 8000e50:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 8000e52:	f00a fde5 	bl	800ba20 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 8000e56:	4638      	mov	r0, r7
 8000e58:	f7ff ff58 	bl	8000d0c <GetSector>
 8000e5c:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 8000e5e:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 8000e62:	f7ff ff53 	bl	8000d0c <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e66:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e68:	4813      	ldr	r0, [pc, #76]	; (8000eb8 <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e6a:	1b1b      	subs	r3, r3, r4
 8000e6c:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e70:	2300      	movs	r3, #0
 8000e72:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e74:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 8000e76:	2302      	movs	r3, #2
 8000e78:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e7a:	f00a fe4f 	bl	800bb1c <HAL_FLASHEx_Erase>
 8000e7e:	b988      	cbnz	r0, 8000ea4 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000e80:	b1a6      	cbz	r6, 8000eac <Flash_Write_Data+0x64>
 8000e82:	1b7f      	subs	r7, r7, r5
 8000e84:	4604      	mov	r4, r0
 8000e86:	3d04      	subs	r5, #4
 8000e88:	3704      	adds	r7, #4
 8000e8a:	e001      	b.n	8000e90 <Flash_Write_Data+0x48>
 8000e8c:	42a6      	cmp	r6, r4
 8000e8e:	d00d      	beq.n	8000eac <Flash_Write_Data+0x64>
 8000e90:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e92:	2300      	movs	r3, #0
 8000e94:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8000e98:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 8000e9a:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e9c:	f00a fd1e 	bl	800b8dc <HAL_FLASH_Program>
 8000ea0:	2800      	cmp	r0, #0
 8000ea2:	d0f3      	beq.n	8000e8c <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000ea4:	f00a fdda 	bl	800ba5c <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 8000ea8:	b003      	add	sp, #12
 8000eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000eac:	f00a fdcc 	bl	800ba48 <HAL_FLASH_Lock>
	   return 0;
 8000eb0:	2000      	movs	r0, #0
}
 8000eb2:	b003      	add	sp, #12
 8000eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eb6:	bf00      	nop
 8000eb8:	2000018c 	.word	0x2000018c

08000ebc <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000ebc:	460b      	mov	r3, r1
 8000ebe:	3201      	adds	r2, #1
 8000ec0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000ec4:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 8000ec6:	581a      	ldr	r2, [r3, r0]
 8000ec8:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000ecc:	428b      	cmp	r3, r1
 8000ece:	d1fa      	bne.n	8000ec6 <Flash_Read_Data+0xa>
	}
}
 8000ed0:	4770      	bx	lr
 8000ed2:	bf00      	nop

08000ed4 <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(float32_t input_samples[]) {
 8000ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ed8:	ed2d 8b02 	vpush	{d8}
 8000edc:	b088      	sub	sp, #32
 8000ede:	af00      	add	r7, sp, #0
 8000ee0:	4605      	mov	r5, r0
 8000ee2:	460e      	mov	r6, r1
    // Perform FFT using CMSIS-DSP library
    const uint8_t fft_size = MEAS_get_num_of_samples();
 8000ee4:	f001 fa12 	bl	800230c <MEAS_get_num_of_samples>
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
 8000ee8:	4604      	mov	r4, r0
 8000eea:	2800      	cmp	r0, #0
 8000eec:	f000 8089 	beq.w	8001002 <calculate_freq_and_signalstrength+0x12e>
 8000ef0:	2204      	movs	r2, #4
        input_samples[i] -= 2047.5;
 8000ef2:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8001008 <calculate_freq_and_signalstrength+0x134>
 8000ef6:	4633      	mov	r3, r6
 8000ef8:	fb12 6200 	smlabb	r2, r2, r0, r6
 8000efc:	edd3 7a00 	vldr	s15, [r3]
 8000f00:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000f04:	ece3 7a01 	vstmia	r3!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000f08:	429a      	cmp	r2, r3
 8000f0a:	d1f7      	bne.n	8000efc <calculate_freq_and_signalstrength+0x28>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * fft_size];
 8000f0c:	b223      	sxth	r3, r4
 8000f0e:	00db      	lsls	r3, r3, #3
 8000f10:	ebad 0d03 	sub.w	sp, sp, r3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f14:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * fft_size];
 8000f18:	46e8      	mov	r8, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f1a:	b2a1      	uxth	r1, r4
 8000f1c:	f107 0008 	add.w	r0, r7, #8
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f20:	eef8 8ae7 	vcvt.f32.s32	s17, s15
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f24:	f02a fe88 	bl	802bc38 <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f28:	2300      	movs	r3, #0
 8000f2a:	4631      	mov	r1, r6
 8000f2c:	f107 0008 	add.w	r0, r7, #8
 8000f30:	4642      	mov	r2, r8
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f32:	f3c4 0647 	ubfx	r6, r4, #1, #8
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f36:	f02a ff03 	bl	802bd40 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f3a:	4632      	mov	r2, r6
 8000f3c:	4641      	mov	r1, r8
 8000f3e:	4640      	mov	r0, r8
 8000f40:	f02b fb6c 	bl	802c61c <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000f44:	463b      	mov	r3, r7
 8000f46:	1d3a      	adds	r2, r7, #4
 8000f48:	4631      	mov	r1, r6
 8000f4a:	4640      	mov	r0, r8
 8000f4c:	f02a fe0c 	bl	802bb68 <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f50:	edd7 7a00 	vldr	s15, [r7]
 8000f54:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000f58:	f001 f9da 	bl	8002310 <MEAS_get_samp_freq>
 8000f5c:	ee07 0a90 	vmov	s15, r0
 8000f60:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f64:	ed9f 7a29 	vldr	s14, [pc, #164]	; 800100c <calculate_freq_and_signalstrength+0x138>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f68:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8000f6c:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f70:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8000f74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f78:	d817      	bhi.n	8000faa <calculate_freq_and_signalstrength+0xd6>
 8000f7a:	eddf 7a25 	vldr	s15, [pc, #148]	; 8001010 <calculate_freq_and_signalstrength+0x13c>
 8000f7e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000f82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f86:	db28      	blt.n	8000fda <calculate_freq_and_signalstrength+0x106>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000f88:	f001 f9c2 	bl	8002310 <MEAS_get_samp_freq>
 8000f8c:	2332      	movs	r3, #50	; 0x32
 8000f8e:	fb04 f303 	mul.w	r3, r4, r3
 8000f92:	fbb3 f0f0 	udiv	r0, r3, r0
    // set the signal strength to 0
    float signal_strength = 0;
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000f96:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8000f9a:	edd0 7a00 	vldr	s15, [r0]
 8000f9e:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8000fa2:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000fa4:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8000fa8:	e00b      	b.n	8000fc2 <calculate_freq_and_signalstrength+0xee>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000faa:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fae:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fb6:	d91c      	bls.n	8000ff2 <calculate_freq_and_signalstrength+0x11e>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000fb8:	f001 f9aa 	bl	8002310 <MEAS_get_samp_freq>
    float signal_strength = 0;
 8000fbc:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001018 <calculate_freq_and_signalstrength+0x144>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8000fc0:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
}
 8000fc2:	4628      	mov	r0, r5
 8000fc4:	3720      	adds	r7, #32
    return fft;
 8000fc6:	ed85 8a00 	vstr	s16, [r5]
 8000fca:	ed85 7a01 	vstr	s14, [r5, #4]
 8000fce:	722b      	strb	r3, [r5, #8]
}
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	ecbd 8b02 	vpop	{d8}
 8000fd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000fda:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fde:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fe6:	d8e7      	bhi.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
 8000fe8:	eeb4 8a47 	vcmp.f32	s16, s14
 8000fec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ff0:	d1e2      	bne.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000ff2:	f001 f98d 	bl	8002310 <MEAS_get_samp_freq>
 8000ff6:	ebc4 1304 	rsb	r3, r4, r4, lsl #4
 8000ffa:	009b      	lsls	r3, r3, #2
 8000ffc:	fbb3 f0f0 	udiv	r0, r3, r0
    if (given_frequency != 0) {
 8001000:	e7c9      	b.n	8000f96 <calculate_freq_and_signalstrength+0xc2>
    for (uint32_t i = 0; i < fft_size; i++) {
 8001002:	4603      	mov	r3, r0
 8001004:	e784      	b.n	8000f10 <calculate_freq_and_signalstrength+0x3c>
 8001006:	bf00      	nop
 8001008:	44fff000 	.word	0x44fff000
 800100c:	425c0000 	.word	0x425c0000
 8001010:	42340000 	.word	0x42340000
 8001014:	42820000 	.word	0x42820000
 8001018:	00000000 	.word	0x00000000

0800101c <accurate_FFT>:
 * to obtain accurate results and returns the calculated values in an instance of the
 * ACCU_FFT structure.
 *
 * @return The calculated signal strength and main frequency for each channel.
 */
ACCU_FFT accurate_FFT(void){
 800101c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001020:	ed2d 8b04 	vpush	{d8-d9}
 8001024:	b0e3      	sub	sp, #396	; 0x18c
 8001026:	af00      	add	r7, sp, #0
 8001028:	6078      	str	r0, [r7, #4]
    float32_t accu_strength_HSR[ACCURATE_MEASUREMENT_LOOPS];
    float32_t accu_strength_HSL[ACCURATE_MEASUREMENT_LOOPS];

    uint32_t* samples;

    uint8_t buffer_size = MEAS_get_num_of_samples();
 800102a:	f001 f96f 	bl	800230c <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800102e:	b203      	sxth	r3, r0
 8001030:	009b      	lsls	r3, r3, #2
 8001032:	3307      	adds	r3, #7
 8001034:	f023 0307 	bic.w	r3, r3, #7
 8001038:	ebad 0d03 	sub.w	sp, sp, r3
 800103c:	466a      	mov	r2, sp
    float32_t samples_PL[buffer_size];
 800103e:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PR[buffer_size];
 8001042:	ee08 2a10 	vmov	s16, r2
    float32_t samples_PL[buffer_size];
 8001046:	466a      	mov	r2, sp
    float32_t samples_HSR[buffer_size];
 8001048:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PL[buffer_size];
 800104c:	ee08 2a90 	vmov	s17, r2
    float32_t samples_HSR[buffer_size];
 8001050:	466a      	mov	r2, sp
    float32_t samples_HSL[buffer_size];
 8001052:	ebad 0d03 	sub.w	sp, sp, r3
 8001056:	466b      	mov	r3, sp
 8001058:	ee09 3a90 	vmov	s19, r3
 800105c:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8001060:	613b      	str	r3, [r7, #16]
 8001062:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001066:	617b      	str	r3, [r7, #20]
 8001068:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 800106c:	60fb      	str	r3, [r7, #12]
    float32_t samples_HSR[buffer_size];
 800106e:	ee09 2a10 	vmov	s18, r2
 8001072:	f507 739c 	add.w	r3, r7, #312	; 0x138
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001076:	4682      	mov	sl, r0

    for (uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001078:	60bb      	str	r3, [r7, #8]
        // Start the measurement
        samples = MEAS_start_measure();
 800107a:	f001 f919 	bl	80022b0 <MEAS_start_measure>
 800107e:	4605      	mov	r5, r0

        // Convert the samples to the specific channel
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001080:	f1ba 0f00 	cmp.w	sl, #0
 8001084:	d03e      	beq.n	8001104 <accurate_FFT+0xe8>
 8001086:	ee18 9a10 	vmov	r9, s16
 800108a:	ee18 8a90 	vmov	r8, s17
 800108e:	ee19 6a10 	vmov	r6, s18
 8001092:	ee19 ba90 	vmov	fp, s19
 8001096:	2400      	movs	r4, #0
            samples_PR[j] = (float32_t)samples[j * MEAS_get_num_of_chan()];
 8001098:	f001 f936 	bl	8002308 <MEAS_get_num_of_chan>
 800109c:	fb04 f000 	mul.w	r0, r4, r0
 80010a0:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010a4:	edd3 7a00 	vldr	s15, [r3]
 80010a8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010ac:	ece9 7a01 	vstmia	r9!, {s15}
            samples_PL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 1];
 80010b0:	f001 f92a 	bl	8002308 <MEAS_get_num_of_chan>
 80010b4:	fb04 f000 	mul.w	r0, r4, r0
 80010b8:	3001      	adds	r0, #1
 80010ba:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010be:	edd3 7a00 	vldr	s15, [r3]
 80010c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010c6:	ece8 7a01 	vstmia	r8!, {s15}
            samples_HSR[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 2];
 80010ca:	f001 f91d 	bl	8002308 <MEAS_get_num_of_chan>
 80010ce:	fb04 f000 	mul.w	r0, r4, r0
 80010d2:	3002      	adds	r0, #2
 80010d4:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010d8:	edd3 7a00 	vldr	s15, [r3]
 80010dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010e0:	ece6 7a01 	vstmia	r6!, {s15}
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010e4:	f001 f910 	bl	8002308 <MEAS_get_num_of_chan>
 80010e8:	fb04 f000 	mul.w	r0, r4, r0
 80010ec:	3003      	adds	r0, #3
 80010ee:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010f2:	edd3 7a00 	vldr	s15, [r3]
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010f6:	3401      	adds	r4, #1
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010fc:	45a2      	cmp	sl, r4
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010fe:	eceb 7a01 	vstmia	fp!, {s15}
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001102:	d1c9      	bne.n	8001098 <accurate_FFT+0x7c>
        }
        // Calculate the Signal Strength and the main frequency for each channel using FFT

        fft = calculate_freq_and_signalstrength(samples_PR);
 8001104:	ee18 1a10 	vmov	r1, s16
 8001108:	f107 001c 	add.w	r0, r7, #28
 800110c:	f7ff fee2 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PR[i] = fft.signal_strength;
 8001110:	697c      	ldr	r4, [r7, #20]
 8001112:	6a3b      	ldr	r3, [r7, #32]
 8001114:	f844 3b04 	str.w	r3, [r4], #4
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001118:	ee18 1a90 	vmov	r1, s17
 800111c:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PR[i] = fft.signal_strength;
 8001120:	617c      	str	r4, [r7, #20]
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001122:	f7ff fed7 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PL[i] = fft.signal_strength;
 8001126:	693a      	ldr	r2, [r7, #16]
 8001128:	6a3b      	ldr	r3, [r7, #32]
 800112a:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSR);
 800112e:	ee19 1a10 	vmov	r1, s18
 8001132:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PL[i] = fft.signal_strength;
 8001136:	613a      	str	r2, [r7, #16]
        fft = calculate_freq_and_signalstrength(samples_HSR);
 8001138:	f7ff fecc 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSR[i] = fft.signal_strength;
 800113c:	68fa      	ldr	r2, [r7, #12]
 800113e:	6a3b      	ldr	r3, [r7, #32]
 8001140:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSL);
 8001144:	ee19 1a90 	vmov	r1, s19
 8001148:	f107 001c 	add.w	r0, r7, #28
        accu_strength_HSR[i] = fft.signal_strength;
 800114c:	60fa      	str	r2, [r7, #12]
        fft = calculate_freq_and_signalstrength(samples_HSL);
 800114e:	f7ff fec1 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSL[i] = fft.signal_strength;
 8001152:	68ba      	ldr	r2, [r7, #8]
 8001154:	6a3b      	ldr	r3, [r7, #32]
 8001156:	f842 3b04 	str.w	r3, [r2], #4
    for (uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 800115a:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800115e:	429c      	cmp	r4, r3
        accu_strength_HSL[i] = fft.signal_strength;
 8001160:	60ba      	str	r2, [r7, #8]
    for (uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001162:	d18a      	bne.n	800107a <accurate_FFT+0x5e>
        //current[i] = single_meas.current;
    }
    arm_mean_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr);
 8001164:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001168:	f107 0048 	add.w	r0, r7, #72	; 0x48
 800116c:	2114      	movs	r1, #20
 800116e:	f02a fcc7 	bl	802bb00 <arm_mean_f32>
    arm_std_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr_std_dev);
 8001172:	f107 0048 	add.w	r0, r7, #72	; 0x48
 8001176:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800117a:	2114      	movs	r1, #20
 800117c:	f02a fc4c 	bl	802ba18 <arm_std_f32>
    arm_mean_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl);
 8001180:	f107 0230 	add.w	r2, r7, #48	; 0x30
 8001184:	f107 0098 	add.w	r0, r7, #152	; 0x98
 8001188:	2114      	movs	r1, #20
 800118a:	f02a fcb9 	bl	802bb00 <arm_mean_f32>
    arm_std_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl_std_dev);
 800118e:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8001192:	f107 0098 	add.w	r0, r7, #152	; 0x98
 8001196:	2114      	movs	r1, #20
 8001198:	f02a fc3e 	bl	802ba18 <arm_std_f32>
    arm_mean_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr);
 800119c:	f107 0238 	add.w	r2, r7, #56	; 0x38
 80011a0:	f107 00e8 	add.w	r0, r7, #232	; 0xe8
 80011a4:	2114      	movs	r1, #20
 80011a6:	f02a fcab 	bl	802bb00 <arm_mean_f32>
    arm_std_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr_std_dev);
 80011aa:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 80011ae:	f107 00e8 	add.w	r0, r7, #232	; 0xe8
 80011b2:	2114      	movs	r1, #20
 80011b4:	f02a fc30 	bl	802ba18 <arm_std_f32>
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
 80011b8:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80011bc:	f507 709c 	add.w	r0, r7, #312	; 0x138
 80011c0:	2114      	movs	r1, #20
 80011c2:	f02a fc9d 	bl	802bb00 <arm_mean_f32>
    arm_std_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl_std_dev);

    return accu_fft;
 80011c6:	f107 0428 	add.w	r4, r7, #40	; 0x28
    arm_std_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl_std_dev);
 80011ca:	f107 0244 	add.w	r2, r7, #68	; 0x44
 80011ce:	f507 709c 	add.w	r0, r7, #312	; 0x138
 80011d2:	2114      	movs	r1, #20
 80011d4:	f02a fc20 	bl	802ba18 <arm_std_f32>
    return accu_fft;
 80011d8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80011da:	687e      	ldr	r6, [r7, #4]
 80011dc:	4635      	mov	r5, r6
 80011de:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80011e0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
}
 80011e4:	f507 77c6 	add.w	r7, r7, #396	; 0x18c
    return accu_fft;
 80011e8:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
 80011ec:	4630      	mov	r0, r6
 80011ee:	46bd      	mov	sp, r7
 80011f0:	ecbd 8b04 	vpop	{d8-d9}
 80011f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080011f8 <single_measurement>:
 * calculate the distance and angle. The current is currently not calculated and is set to 0.
 *
 * @param samples Pointer to the array of samples.
 * @return The SINGLE_MEAS structure containing the calculated values.
 */
SINGLE_MEAS single_measurement(uint32_t* samples) {
 80011f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80011fc:	ed2d 8b08 	vpush	{d8-d11}
 8001200:	b08d      	sub	sp, #52	; 0x34
 8001202:	af00      	add	r7, sp, #0
 8001204:	4605      	mov	r5, r0
    // Create an instance of the SINGLE_MEAS structure
    SINGLE_MEAS single_meas;
    // Create an instance of the FFT structure
    FFT fft;

    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001206:	f001 f881 	bl	800230c <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800120a:	b203      	sxth	r3, r0
 800120c:	009b      	lsls	r3, r3, #2
 800120e:	3307      	adds	r3, #7
 8001210:	f023 0307 	bic.w	r3, r3, #7
 8001214:	ebad 0d03 	sub.w	sp, sp, r3
 8001218:	466a      	mov	r2, sp
    float32_t samples_PL[buffer_size];
 800121a:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PR[buffer_size];
 800121e:	ee08 2a10 	vmov	s16, r2
    float32_t samples_PL[buffer_size];
 8001222:	466a      	mov	r2, sp
    float32_t samples_HSR[buffer_size];
 8001224:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PL[buffer_size];
 8001228:	ee08 2a90 	vmov	s17, r2
    float32_t samples_HSR[buffer_size];
 800122c:	466a      	mov	r2, sp
    float32_t samples_HSL[buffer_size];
 800122e:	ebad 0d03 	sub.w	sp, sp, r3
 8001232:	466b      	mov	r3, sp
    float32_t samples_HSR[buffer_size];
 8001234:	ee09 2a90 	vmov	s19, r2
    float32_t samples_HSL[buffer_size];
 8001238:	ee0b 3a10 	vmov	s22, r3

    // Convert the samples to the specific channel
    for (uint32_t i = 0; i < buffer_size; i++) {
 800123c:	b3e8      	cbz	r0, 80012ba <single_measurement+0xc2>
 800123e:	ee18 9a10 	vmov	r9, s16
 8001242:	ee18 8a90 	vmov	r8, s17
 8001246:	4682      	mov	sl, r0
 8001248:	4616      	mov	r6, r2
 800124a:	469b      	mov	fp, r3
 800124c:	2400      	movs	r4, #0
        samples_PR[i] = (float32_t)samples[i * MEAS_get_num_of_chan()];
 800124e:	f001 f85b 	bl	8002308 <MEAS_get_num_of_chan>
 8001252:	fb04 f000 	mul.w	r0, r4, r0
 8001256:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800125a:	edd3 7a00 	vldr	s15, [r3]
 800125e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001262:	ece9 7a01 	vstmia	r9!, {s15}
        samples_PL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 1];
 8001266:	f001 f84f 	bl	8002308 <MEAS_get_num_of_chan>
 800126a:	fb04 f000 	mul.w	r0, r4, r0
 800126e:	3001      	adds	r0, #1
 8001270:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001274:	edd3 7a00 	vldr	s15, [r3]
 8001278:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800127c:	ece8 7a01 	vstmia	r8!, {s15}
        samples_HSR[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 2];
 8001280:	f001 f842 	bl	8002308 <MEAS_get_num_of_chan>
 8001284:	fb04 f000 	mul.w	r0, r4, r0
 8001288:	3002      	adds	r0, #2
 800128a:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800128e:	edd3 7a00 	vldr	s15, [r3]
 8001292:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001296:	ece6 7a01 	vstmia	r6!, {s15}
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 800129a:	f001 f835 	bl	8002308 <MEAS_get_num_of_chan>
 800129e:	fb04 f000 	mul.w	r0, r4, r0
 80012a2:	3003      	adds	r0, #3
 80012a4:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80012a8:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < buffer_size; i++) {
 80012ac:	3401      	adds	r4, #1
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 80012ae:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < buffer_size; i++) {
 80012b2:	45a2      	cmp	sl, r4
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 80012b4:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < buffer_size; i++) {
 80012b8:	d1c9      	bne.n	800124e <single_measurement+0x56>
    }
    // Calculate the Signal Strength and the main frequency for each channel using FFT
    fft = calculate_freq_and_signalstrength(samples_PR);
 80012ba:	ee18 1a10 	vmov	r1, s16
 80012be:	f107 0014 	add.w	r0, r7, #20
 80012c2:	f7ff fe07 	bl	8000ed4 <calculate_freq_and_signalstrength>
    float32_t signal_strength_PR = fft.signal_strength;
    float32_t main_frequency_PR = fft.main_freq;
    fft = calculate_freq_and_signalstrength(samples_PL);
 80012c6:	ee18 1a90 	vmov	r1, s17
 80012ca:	f107 0014 	add.w	r0, r7, #20
    fft = calculate_freq_and_signalstrength(samples_PR);
 80012ce:	ed97 aa06 	vldr	s20, [r7, #24]
 80012d2:	ed97 9a05 	vldr	s18, [r7, #20]
    fft = calculate_freq_and_signalstrength(samples_PL);
 80012d6:	f7ff fdfd 	bl	8000ed4 <calculate_freq_and_signalstrength>
    float32_t signal_strength_PL = fft.signal_strength;
    float32_t main_frequency_PL = fft.main_freq;
    fft = calculate_freq_and_signalstrength(samples_HSR);
 80012da:	ee19 1a90 	vmov	r1, s19
 80012de:	f107 0014 	add.w	r0, r7, #20
    fft = calculate_freq_and_signalstrength(samples_PL);
 80012e2:	edd7 9a06 	vldr	s19, [r7, #24]
 80012e6:	edd7 aa05 	vldr	s21, [r7, #20]
    fft = calculate_freq_and_signalstrength(samples_HSR);
 80012ea:	f7ff fdf3 	bl	8000ed4 <calculate_freq_and_signalstrength>
    float32_t signal_strength_HSR = fft.signal_strength;
    fft = calculate_freq_and_signalstrength(samples_HSL);
 80012ee:	ee1b 1a10 	vmov	r1, s22
 80012f2:	f107 0014 	add.w	r0, r7, #20
 80012f6:	f7ff fded 	bl	8000ed4 <calculate_freq_and_signalstrength>

    // Create an instance of the DISTANCE_ANGLE structure
    DISTANCE_ANGLE dist_angle;

    // Calculate the distance using the coefficients and the actual signal strength
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012fa:	4a29      	ldr	r2, [pc, #164]	; (80013a0 <single_measurement+0x1a8>)
    // Set the calculated values
    dist_angle.distance_r = calc_distance;

    // Calculate the distance using the coefficients and the actual signal strength
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 80012fc:	4b29      	ldr	r3, [pc, #164]	; (80013a4 <single_measurement+0x1ac>)
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012fe:	ed92 7a00 	vldr	s14, [r2]
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001302:	edd3 7a00 	vldr	s15, [r3]
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 8001306:	4a28      	ldr	r2, [pc, #160]	; (80013a8 <single_measurement+0x1b0>)
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001308:	4b28      	ldr	r3, [pc, #160]	; (80013ac <single_measurement+0x1b4>)
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 800130a:	ee87 8a0a 	vdiv.f32	s16, s14, s20
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 800130e:	edd3 6a00 	vldr	s13, [r3]
 8001312:	4b27      	ldr	r3, [pc, #156]	; (80013b0 <single_measurement+0x1b8>)
 8001314:	eec7 8aa9 	vdiv.f32	s17, s15, s19
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 8001318:	ee2a aa0a 	vmul.f32	s20, s20, s20
 800131c:	edd2 7a00 	vldr	s15, [r2]
 8001320:	4a24      	ldr	r2, [pc, #144]	; (80013b4 <single_measurement+0x1bc>)
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001322:	ee69 9aa9 	vmul.f32	s19, s19, s19
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 8001326:	ee87 7a8a 	vdiv.f32	s14, s15, s20
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 800132a:	eec6 7aa9 	vdiv.f32	s15, s13, s19
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 800132e:	ed92 6a00 	vldr	s12, [r2]
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001332:	edd3 6a00 	vldr	s13, [r3]
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 8001336:	ee38 8a06 	vadd.f32	s16, s16, s12
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 800133a:	ee78 8aa6 	vadd.f32	s17, s17, s13
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 800133e:	ee38 8a07 	vadd.f32	s16, s16, s14
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001342:	ee78 8aa7 	vadd.f32	s17, s17, s15

    // Calculate the distance
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;

    // Calculate the angle using the trigonometry
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001346:	ee78 7ac8 	vsub.f32	s15, s17, s16
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 800134a:	ee38 8a28 	vadd.f32	s16, s16, s17
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 800134e:	ee17 0a90 	vmov	r0, s15
 8001352:	f7ff fa8b 	bl	800086c <__aeabi_f2d>
 8001356:	a310      	add	r3, pc, #64	; (adr r3, 8001398 <single_measurement+0x1a0>)
 8001358:	e9d3 2300 	ldrd	r2, r3, [r3]
 800135c:	f7fe fff8 	bl	8000350 <__aeabi_dmul>
 8001360:	f7ff fadc 	bl	800091c <__aeabi_d2f>
 8001364:	ee00 0a10 	vmov	s0, r0
 8001368:	f02b fd6e 	bl	802ce48 <atanf>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 800136c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001370:	ed9f 7a11 	vldr	s14, [pc, #68]	; 80013b8 <single_measurement+0x1c0>
    return single_meas;
 8001374:	eddf 1a11 	vldr	s3, [pc, #68]	; 80013bc <single_measurement+0x1c4>
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 8001378:	ee39 1a2a 	vadd.f32	s2, s18, s21
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 800137c:	ee28 8a27 	vmul.f32	s16, s16, s15
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001380:	ee60 0a07 	vmul.f32	s1, s0, s14
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 8001384:	ee21 1a27 	vmul.f32	s2, s2, s15
}
 8001388:	eeb0 0a48 	vmov.f32	s0, s16
 800138c:	3734      	adds	r7, #52	; 0x34
 800138e:	46bd      	mov	sp, r7
 8001390:	ecbd 8b08 	vpop	{d8-d11}
 8001394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001398:	a8ef1b4a 	.word	0xa8ef1b4a
 800139c:	3f99fd66 	.word	0x3f99fd66
 80013a0:	200001ac 	.word	0x200001ac
 80013a4:	200001a8 	.word	0x200001a8
 80013a8:	200001b4 	.word	0x200001b4
 80013ac:	200001b0 	.word	0x200001b0
 80013b0:	200001a0 	.word	0x200001a0
 80013b4:	200001a4 	.word	0x200001a4
 80013b8:	42652ee0 	.word	0x42652ee0
 80013bc:	00000000 	.word	0x00000000

080013c0 <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80013c0:	ed90 6a02 	vldr	s12, [r0, #8]
 80013c4:	edd0 7a01 	vldr	s15, [r0, #4]
 80013c8:	ed90 5a00 	vldr	s10, [r0]
 80013cc:	ed91 7a02 	vldr	s14, [r1, #8]
 80013d0:	edd1 4a00 	vldr	s9, [r1]
 80013d4:	ed91 4a01 	vldr	s8, [r1, #4]
 80013d8:	ee66 6a06 	vmul.f32	s13, s12, s12
 80013dc:	ee77 5ac6 	vsub.f32	s11, s15, s12
 80013e0:	ee65 4a24 	vmul.f32	s9, s10, s9
 80013e4:	ee66 6a87 	vmul.f32	s13, s13, s14
 80013e8:	ee27 7a46 	vnmul.f32	s14, s14, s12
 80013ec:	eee5 6aa4 	vfma.f32	s13, s11, s9
 80013f0:	eea7 7a84 	vfma.f32	s14, s15, s8
 80013f4:	ee67 3aa7 	vmul.f32	s7, s15, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80013f8:	ee77 4a86 	vadd.f32	s9, s15, s12
 80013fc:	eee4 6a63 	vfms.f32	s13, s8, s7
 8001400:	ee67 7a86 	vmul.f32	s15, s15, s12
 8001404:	ee35 6a64 	vsub.f32	s12, s10, s9
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001408:	ee27 7a27 	vmul.f32	s14, s14, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800140c:	eee5 7a06 	vfma.f32	s15, s10, s12
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001410:	eea5 7a26 	vfma.f32	s14, s10, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001414:	ee65 5aa7 	vmul.f32	s11, s11, s15
 8001418:	eec7 7a25 	vdiv.f32	s15, s14, s11
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800141c:	edc2 7a00 	vstr	s15, [r2]
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001420:	edd0 7a01 	vldr	s15, [r0, #4]
 8001424:	ed91 3a01 	vldr	s6, [r1, #4]
 8001428:	ed91 7a00 	vldr	s14, [r1]
 800142c:	edd0 6a02 	vldr	s13, [r0, #8]
 8001430:	edd1 5a02 	vldr	s11, [r1, #8]
 8001434:	edd0 4a00 	vldr	s9, [r0]
 8001438:	ee67 2aa7 	vmul.f32	s5, s15, s15
 800143c:	ee33 6a47 	vsub.f32	s12, s6, s14
 8001440:	ee26 5aa6 	vmul.f32	s10, s13, s13
 8001444:	ee37 7a65 	vsub.f32	s14, s14, s11
 8001448:	ee26 6a22 	vmul.f32	s12, s12, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800144c:	ee77 3aa6 	vadd.f32	s7, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001450:	eea7 6a05 	vfma.f32	s12, s14, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001454:	ee27 4aa6 	vmul.f32	s8, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001458:	ee24 7aa4 	vmul.f32	s14, s9, s9
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800145c:	ee74 3ae3 	vsub.f32	s7, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001460:	ee25 5a22 	vmul.f32	s10, s10, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001464:	eea4 4aa3 	vfma.f32	s8, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001468:	ee75 5ac3 	vsub.f32	s11, s11, s6
 800146c:	ee27 7a06 	vmul.f32	s14, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001470:	ee77 7ae6 	vsub.f32	s15, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001474:	eea5 7a25 	vfma.f32	s14, s10, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001478:	ee67 7a84 	vmul.f32	s15, s15, s8
 800147c:	eec7 6a27 	vdiv.f32	s13, s14, s15
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001480:	edc3 6a00 	vstr	s13, [r3]

    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001484:	edd1 7a00 	vldr	s15, [r1]
 8001488:	ed91 4a02 	vldr	s8, [r1, #8]
 800148c:	ed90 6a02 	vldr	s12, [r0, #8]
 8001490:	edd1 6a01 	vldr	s13, [r1, #4]
 8001494:	ed90 7a01 	vldr	s14, [r0, #4]
 8001498:	9b00      	ldr	r3, [sp, #0]
 800149a:	ee74 5a67 	vsub.f32	s11, s8, s15
 800149e:	ee77 4ae6 	vsub.f32	s9, s15, s13
 80014a2:	ee65 5a86 	vmul.f32	s11, s11, s12
 80014a6:	edd0 7a00 	vldr	s15, [r0]
 80014aa:	eee7 5a24 	vfma.f32	s11, s14, s9
 80014ae:	ee27 5a06 	vmul.f32	s10, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014b2:	ee77 4a06 	vadd.f32	s9, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014b6:	ee76 6ac4 	vsub.f32	s13, s13, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014ba:	ee77 4ae4 	vsub.f32	s9, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014be:	ee66 6a85 	vmul.f32	s13, s13, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014c2:	eea7 5aa4 	vfma.f32	s10, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014c6:	eee7 6aa5 	vfma.f32	s13, s15, s11
 80014ca:	ee67 7a87 	vmul.f32	s15, s15, s14
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014ce:	ee37 7a46 	vsub.f32	s14, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014d2:	ee67 7a86 	vmul.f32	s15, s15, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014d6:	ee27 7a05 	vmul.f32	s14, s14, s10
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014da:	ee67 7aa6 	vmul.f32	s15, s15, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014de:	eec7 6a87 	vdiv.f32	s13, s15, s14
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014e2:	edc3 6a00 	vstr	s13, [r3]
}
 80014e6:	4770      	bx	lr

080014e8 <start_calibration>:
    float32_t signal_pr[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 80014e8:	4b4a      	ldr	r3, [pc, #296]	; (8001614 <start_calibration+0x12c>)
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80014ea:	eddf 0a4b 	vldr	s1, [pc, #300]	; 8001618 <start_calibration+0x130>
    float32_t signal_pr[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 80014ee:	ed93 7a05 	vldr	s14, [r3, #20]
 80014f2:	edd3 7a04 	vldr	s15, [r3, #16]
 80014f6:	ed93 6a03 	vldr	s12, [r3, #12]
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80014fa:	eddf 3a48 	vldr	s7, [pc, #288]	; 800161c <start_calibration+0x134>
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80014fe:	ed9f 2a48 	vldr	s4, [pc, #288]	; 8001620 <start_calibration+0x138>
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001502:	ed9f 0a48 	vldr	s0, [pc, #288]	; 8001624 <start_calibration+0x13c>
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001506:	ed9f 4a48 	vldr	s8, [pc, #288]	; 8001628 <start_calibration+0x140>
 800150a:	eddf 1a48 	vldr	s3, [pc, #288]	; 800162c <start_calibration+0x144>
    float32_t distance[3] = {10, 50, 100};
 800150e:	4a48      	ldr	r2, [pc, #288]	; (8001630 <start_calibration+0x148>)
    float32_t signal_pr[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 8001510:	eef8 6a47 	vcvt.f32.u32	s13, s14
 8001514:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001518:	eeb8 6a46 	vcvt.f32.u32	s12, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800151c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8001520:	ee27 5aa6 	vmul.f32	s10, s15, s13
 8001524:	ee36 7a47 	vsub.f32	s14, s12, s14
 8001528:	eef0 5a45 	vmov.f32	s11, s10
 800152c:	eee6 5a07 	vfma.f32	s11, s12, s14
{
 8001530:	b510      	push	{r4, lr}
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001532:	ee37 3ae6 	vsub.f32	s6, s15, s13
 8001536:	ee27 1aa7 	vmul.f32	s2, s15, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800153a:	ee63 5a25 	vmul.f32	s11, s6, s11
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800153e:	ee20 7ae6 	vnmul.f32	s14, s1, s13
 8001542:	eef7 4a00 	vmov.f32	s9, #112	; 0x3f800000  1.0
 8001546:	eec4 2aa5 	vdiv.f32	s5, s9, s11
    float32_t distance[3] = {10, 50, 100};
 800154a:	ca07      	ldmia	r2, {r0, r1, r2}
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 800154c:	4c39      	ldr	r4, [pc, #228]	; (8001634 <start_calibration+0x14c>)
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800154e:	ee66 4aa6 	vmul.f32	s9, s13, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001552:	ee61 3a23 	vmul.f32	s7, s2, s7
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001556:	eea7 7a82 	vfma.f32	s14, s15, s4
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 800155a:	eee4 3a80 	vfma.f32	s7, s9, s0
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 800155e:	ee26 4a84 	vmul.f32	s8, s13, s8
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001562:	ee66 5a06 	vmul.f32	s11, s12, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001566:	eea7 4aa1 	vfma.f32	s8, s15, s3
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800156a:	ee62 1a41 	vnmul.f32	s3, s4, s2
 800156e:	ee25 3a83 	vmul.f32	s6, s11, s6
 8001572:	ee25 7a07 	vmul.f32	s14, s10, s14
{
 8001576:	ed2d 8b02 	vpush	{d8}
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 800157a:	ed9f 0a2f 	vldr	s0, [pc, #188]	; 8001638 <start_calibration+0x150>
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 800157e:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8001582:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001586:	eef0 3a61 	vmov.f32	s7, s3
 800158a:	eee4 3aa0 	vfma.f32	s7, s9, s1
{
 800158e:	b088      	sub	sp, #32
    float32_t distance[3] = {10, 50, 100};
 8001590:	f10d 0c08 	add.w	ip, sp, #8
 8001594:	eea3 7a08 	vfma.f32	s14, s6, s16
 8001598:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 800159c:	ee25 5a00 	vmul.f32	s10, s10, s0
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80015a0:	ee64 4a81 	vmul.f32	s9, s9, s2
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80015a4:	eea6 5a04 	vfma.f32	s10, s12, s8
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80015a8:	4a24      	ldr	r2, [pc, #144]	; (800163c <start_calibration+0x154>)
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80015aa:	4825      	ldr	r0, [pc, #148]	; (8001640 <start_calibration+0x158>)
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80015ac:	ee66 7a27 	vmul.f32	s15, s12, s15
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80015b0:	eea6 7a23 	vfma.f32	s14, s12, s7
    calculate_coefficients_single_pad(signal_pl, distance, &a_l, &b_l, &c_l);
 80015b4:	4661      	mov	r1, ip
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80015b6:	eee4 5a82 	vfma.f32	s11, s9, s4
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80015ba:	ee67 7aa6 	vmul.f32	s15, s15, s13
    float32_t signal_pl[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 80015be:	edd3 6a00 	vldr	s13, [r3]
 80015c2:	ed93 6a01 	vldr	s12, [r3, #4]
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80015c6:	ee67 7a85 	vmul.f32	s15, s15, s10
    float32_t signal_pl[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 80015ca:	eeb8 5a66 	vcvt.f32.u32	s10, s13
 80015ce:	edd3 6a02 	vldr	s13, [r3, #8]
    calculate_coefficients_single_pad(signal_pl, distance, &a_l, &b_l, &c_l);
 80015d2:	4b1c      	ldr	r3, [pc, #112]	; (8001644 <start_calibration+0x15c>)
 80015d4:	9300      	str	r3, [sp, #0]
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80015d6:	ee27 7a22 	vmul.f32	s14, s14, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80015da:	ee62 5aa5 	vmul.f32	s11, s5, s11
    float32_t signal_pl[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 80015de:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 80015e2:	eef8 6a66 	vcvt.f32.u32	s13, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80015e6:	ee67 7aa2 	vmul.f32	s15, s15, s5
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80015ea:	ed82 7a00 	vstr	s14, [r2]
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80015ee:	edc0 5a00 	vstr	s11, [r0]
    calculate_coefficients_single_pad(signal_pl, distance, &a_l, &b_l, &c_l);
 80015f2:	4b15      	ldr	r3, [pc, #84]	; (8001648 <start_calibration+0x160>)
 80015f4:	4a15      	ldr	r2, [pc, #84]	; (800164c <start_calibration+0x164>)
    float32_t signal_pl[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 80015f6:	ed8d 5a05 	vstr	s10, [sp, #20]
    calculate_coefficients_single_pad(signal_pl, distance, &a_l, &b_l, &c_l);
 80015fa:	a805      	add	r0, sp, #20
    float32_t signal_pl[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 80015fc:	ed8d 6a06 	vstr	s12, [sp, #24]
 8001600:	edcd 6a07 	vstr	s13, [sp, #28]
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001604:	edc4 7a00 	vstr	s15, [r4]
    calculate_coefficients_single_pad(signal_pl, distance, &a_l, &b_l, &c_l);
 8001608:	f7ff feda 	bl	80013c0 <calculate_coefficients_single_pad>
}
 800160c:	b008      	add	sp, #32
 800160e:	ecbd 8b02 	vpop	{d8}
 8001612:	bd10      	pop	{r4, pc}
 8001614:	200001b8 	.word	0x200001b8
 8001618:	42c80000 	.word	0x42c80000
 800161c:	42200000 	.word	0x42200000
 8001620:	42480000 	.word	0x42480000
 8001624:	c2b40000 	.word	0xc2b40000
 8001628:	42b40000 	.word	0x42b40000
 800162c:	c2200000 	.word	0xc2200000
 8001630:	0802eca0 	.word	0x0802eca0
 8001634:	200001b4 	.word	0x200001b4
 8001638:	c2480000 	.word	0xc2480000
 800163c:	200001a4 	.word	0x200001a4
 8001640:	200001ac 	.word	0x200001ac
 8001644:	200001b0 	.word	0x200001b0
 8001648:	200001a8 	.word	0x200001a8
 800164c:	200001a0 	.word	0x200001a0

08001650 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001650:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001652:	2064      	movs	r0, #100	; 0x64
 8001654:	f00e fa0c 	bl	800fa70 <osDelay>
  for(;;)
 8001658:	e7fb      	b.n	8001652 <StartDefaultTask+0x2>
 800165a:	bf00      	nop

0800165c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800165c:	b580      	push	{r7, lr}
 800165e:	4c19      	ldr	r4, [pc, #100]	; (80016c4 <StartTimeoutTask+0x68>)
 8001660:	f8df 8074 	ldr.w	r8, [pc, #116]	; 80016d8 <StartTimeoutTask+0x7c>
 8001664:	4e18      	ldr	r6, [pc, #96]	; (80016c8 <StartTimeoutTask+0x6c>)
 8001666:	4d19      	ldr	r5, [pc, #100]	; (80016cc <StartTimeoutTask+0x70>)
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001668:	4f19      	ldr	r7, [pc, #100]	; (80016d0 <StartTimeoutTask+0x74>)
	  sleep_timeout_value--;
 800166a:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800166c:	4915      	ldr	r1, [pc, #84]	; (80016c4 <StartTimeoutTask+0x68>)
 800166e:	2300      	movs	r3, #0
 8001670:	461a      	mov	r2, r3
	  sleep_timeout_value--;
 8001672:	f100 3cff 	add.w	ip, r0, #4294967295
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001676:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 800167a:	f8c4 c000 	str.w	ip, [r4]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800167e:	f00e faf3 	bl	800fc68 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 8001682:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 8001684:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001686:	4638      	mov	r0, r7
 8001688:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 800168a:	b912      	cbnz	r2, 8001692 <StartTimeoutTask+0x36>
		  sleep_timeout_value = 60;
 800168c:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800168e:	f00a fc19 	bl	800bec4 <HAL_GPIO_WritePin>
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001692:	4810      	ldr	r0, [pc, #64]	; (80016d4 <StartTimeoutTask+0x78>)
 8001694:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001698:	f00a fc18 	bl	800becc <HAL_GPIO_TogglePin>

	  //pwm test
	  static uint8_t prescaler = 140;
	  HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 800169c:	2100      	movs	r1, #0
 800169e:	4630      	mov	r0, r6
 80016a0:	f00d fd0e 	bl	800f0c0 <HAL_TIM_PWM_Stop>
	  htim14.Init.Prescaler = prescaler-1;
 80016a4:	782b      	ldrb	r3, [r5, #0]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80016a6:	2100      	movs	r1, #0
	  htim14.Init.Prescaler = prescaler-1;
 80016a8:	3b01      	subs	r3, #1
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80016aa:	4630      	mov	r0, r6
	  htim14.Init.Prescaler = prescaler-1;
 80016ac:	6073      	str	r3, [r6, #4]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80016ae:	f00d fc97 	bl	800efe0 <HAL_TIM_PWM_Start>
	  prescaler = prescaler + 10;
 80016b2:	782b      	ldrb	r3, [r5, #0]
	  if(prescaler > 420)
	  {
		  prescaler = 140;
	  }

	  osDelay(1000);
 80016b4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
	  prescaler = prescaler + 10;
 80016b8:	330a      	adds	r3, #10
 80016ba:	702b      	strb	r3, [r5, #0]
	  osDelay(1000);
 80016bc:	f00e f9d8 	bl	800fa70 <osDelay>
  {
 80016c0:	e7d3      	b.n	800166a <StartTimeoutTask+0xe>
 80016c2:	bf00      	nop
 80016c4:	20000010 	.word	0x20000010
 80016c8:	2000038c 	.word	0x2000038c
 80016cc:	2000000c 	.word	0x2000000c
 80016d0:	40021000 	.word	0x40021000
 80016d4:	40021800 	.word	0x40021800
 80016d8:	200001f0 	.word	0x200001f0

080016dc <gyro_disable>:
{
 80016dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80016de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80016e0:	4e1f      	ldr	r6, [pc, #124]	; (8001760 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80016e2:	4d20      	ldr	r5, [pc, #128]	; (8001764 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80016e4:	4c20      	ldr	r4, [pc, #128]	; (8001768 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80016e6:	2700      	movs	r7, #0
 80016e8:	9700      	str	r7, [sp, #0]
 80016ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80016ec:	f043 0304 	orr.w	r3, r3, #4
 80016f0:	6333      	str	r3, [r6, #48]	; 0x30
 80016f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80016f4:	f003 0304 	and.w	r3, r3, #4
 80016f8:	9300      	str	r3, [sp, #0]
 80016fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80016fc:	682b      	ldr	r3, [r5, #0]
 80016fe:	f023 030c 	bic.w	r3, r3, #12
 8001702:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8001704:	682b      	ldr	r3, [r5, #0]
 8001706:	f043 0304 	orr.w	r3, r3, #4
 800170a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 800170c:	69ab      	ldr	r3, [r5, #24]
 800170e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001712:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8001714:	200a      	movs	r0, #10
 8001716:	f009 ffff 	bl	800b718 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 800171a:	682b      	ldr	r3, [r5, #0]
 800171c:	f043 030c 	orr.w	r3, r3, #12
 8001720:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001722:	9701      	str	r7, [sp, #4]
 8001724:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001726:	f043 0320 	orr.w	r3, r3, #32
 800172a:	6333      	str	r3, [r6, #48]	; 0x30
 800172c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800172e:	f003 0320 	and.w	r3, r3, #32
 8001732:	9301      	str	r3, [sp, #4]
 8001734:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001736:	68a3      	ldr	r3, [r4, #8]
 8001738:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800173c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 800173e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001740:	f023 030f 	bic.w	r3, r3, #15
 8001744:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8001746:	68e3      	ldr	r3, [r4, #12]
 8001748:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800174c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 800174e:	200a      	movs	r0, #10
 8001750:	f009 ffe2 	bl	800b718 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8001754:	6823      	ldr	r3, [r4, #0]
 8001756:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 800175a:	6023      	str	r3, [r4, #0]
}
 800175c:	b003      	add	sp, #12
 800175e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001760:	40023800 	.word	0x40023800
 8001764:	40020800 	.word	0x40020800
 8001768:	40021400 	.word	0x40021400

0800176c <setCalibrationFlashValues>:
{
 800176c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001770:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8001772:	009b      	lsls	r3, r3, #2
 8001774:	3307      	adds	r3, #7
 8001776:	466d      	mov	r5, sp
 8001778:	08db      	lsrs	r3, r3, #3
 800177a:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 800177e:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8001780:	469d      	mov	sp, r3
 8001782:	46e8      	mov	r8, sp
{
 8001784:	4615      	mov	r5, r2
 8001786:	460e      	mov	r6, r1
 8001788:	4681      	mov	r9, r0
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 800178a:	4622      	mov	r2, r4
 800178c:	4641      	mov	r1, r8
 800178e:	f7ff fb95 	bl	8000ebc <Flash_Read_Data>
	Rx_Data[index] = value;
 8001792:	f848 6025 	str.w	r6, [r8, r5, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 8001796:	4622      	mov	r2, r4
 8001798:	4641      	mov	r1, r8
 800179a:	4648      	mov	r0, r9
 800179c:	f7ff fb54 	bl	8000e48 <Flash_Write_Data>
	Calibration_Data[index] = value;
 80017a0:	4b02      	ldr	r3, [pc, #8]	; (80017ac <setCalibrationFlashValues+0x40>)
 80017a2:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
}
 80017a6:	46bd      	mov	sp, r7
 80017a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80017ac:	200001b8 	.word	0x200001b8

080017b0 <SystemClock_Config>:
{
 80017b0:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80017b2:	2400      	movs	r4, #0
{
 80017b4:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80017b6:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80017ba:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80017be:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80017c2:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80017c6:	4a1e      	ldr	r2, [pc, #120]	; (8001840 <SystemClock_Config+0x90>)
 80017c8:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80017ca:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80017cc:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80017ce:	4b1d      	ldr	r3, [pc, #116]	; (8001844 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80017d0:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80017d4:	6411      	str	r1, [r2, #64]	; 0x40
 80017d6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80017d8:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80017dc:	9201      	str	r2, [sp, #4]
 80017de:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80017e0:	9402      	str	r4, [sp, #8]
 80017e2:	681a      	ldr	r2, [r3, #0]
 80017e4:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80017e8:	601a      	str	r2, [r3, #0]
 80017ea:	681b      	ldr	r3, [r3, #0]
 80017ec:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80017f0:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80017f2:	2201      	movs	r2, #1
 80017f4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80017f8:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80017fc:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80017fe:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001800:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001802:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001806:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800180a:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800180e:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001810:	2202      	movs	r2, #2
 8001812:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001814:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001816:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800181a:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800181c:	f00c f990 	bl	800db40 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001820:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001822:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001826:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800182a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800182e:	a803      	add	r0, sp, #12
 8001830:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001832:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001836:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001838:	f00c fb9a 	bl	800df70 <HAL_RCC_ClockConfig>
}
 800183c:	b015      	add	sp, #84	; 0x54
 800183e:	bd30      	pop	{r4, r5, pc}
 8001840:	40023800 	.word	0x40023800
 8001844:	40007000 	.word	0x40007000

08001848 <main>:
{
 8001848:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800184c:	2400      	movs	r4, #0
{
 800184e:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001850:	f009 ff36 	bl	800b6c0 <HAL_Init>
  SystemClock_Config();
 8001854:	f7ff ffac 	bl	80017b0 <SystemClock_Config>
  gyro_disable();
 8001858:	f7ff ff40 	bl	80016dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800185c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001860:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001864:	4bc3      	ldr	r3, [pc, #780]	; (8001b74 <main+0x32c>)
 8001866:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001868:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800186a:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800186c:	48c2      	ldr	r0, [pc, #776]	; (8001b78 <main+0x330>)
  hi2c3.Instance = I2C3;
 800186e:	f8df a33c 	ldr.w	sl, [pc, #828]	; 8001bac <main+0x364>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001872:	f041 0110 	orr.w	r1, r1, #16
 8001876:	6319      	str	r1, [r3, #48]	; 0x30
 8001878:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800187a:	f001 0110 	and.w	r1, r1, #16
 800187e:	9100      	str	r1, [sp, #0]
 8001880:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001882:	9401      	str	r4, [sp, #4]
 8001884:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001886:	f041 0120 	orr.w	r1, r1, #32
 800188a:	6319      	str	r1, [r3, #48]	; 0x30
 800188c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800188e:	f001 0120 	and.w	r1, r1, #32
 8001892:	9101      	str	r1, [sp, #4]
 8001894:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001896:	9402      	str	r4, [sp, #8]
 8001898:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800189a:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800189e:	6319      	str	r1, [r3, #48]	; 0x30
 80018a0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018a2:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80018a6:	9102      	str	r1, [sp, #8]
 80018a8:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80018aa:	9403      	str	r4, [sp, #12]
 80018ac:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018ae:	f041 0104 	orr.w	r1, r1, #4
 80018b2:	6319      	str	r1, [r3, #48]	; 0x30
 80018b4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018b6:	f001 0104 	and.w	r1, r1, #4
 80018ba:	9103      	str	r1, [sp, #12]
 80018bc:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80018be:	9404      	str	r4, [sp, #16]
 80018c0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018c2:	f041 0101 	orr.w	r1, r1, #1
 80018c6:	6319      	str	r1, [r3, #48]	; 0x30
 80018c8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018ca:	f001 0101 	and.w	r1, r1, #1
 80018ce:	9104      	str	r1, [sp, #16]
 80018d0:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80018d2:	9405      	str	r4, [sp, #20]
 80018d4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018d6:	f041 0102 	orr.w	r1, r1, #2
 80018da:	6319      	str	r1, [r3, #48]	; 0x30
 80018dc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018de:	f001 0102 	and.w	r1, r1, #2
 80018e2:	9105      	str	r1, [sp, #20]
 80018e4:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80018e6:	9406      	str	r4, [sp, #24]
 80018e8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018ea:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80018ee:	6319      	str	r1, [r3, #48]	; 0x30
 80018f0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018f2:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80018f6:	9106      	str	r1, [sp, #24]
 80018f8:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80018fa:	9407      	str	r4, [sp, #28]
 80018fc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018fe:	f041 0108 	orr.w	r1, r1, #8
 8001902:	6319      	str	r1, [r3, #48]	; 0x30
 8001904:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001906:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800190a:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800190c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800190e:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001910:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001912:	f00a fad7 	bl	800bec4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001916:	4898      	ldr	r0, [pc, #608]	; (8001b78 <main+0x330>)
 8001918:	2120      	movs	r1, #32
 800191a:	2201      	movs	r2, #1
 800191c:	f00a fad2 	bl	800bec4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001920:	4896      	ldr	r0, [pc, #600]	; (8001b7c <main+0x334>)
 8001922:	4622      	mov	r2, r4
 8001924:	2114      	movs	r1, #20
 8001926:	f00a facd 	bl	800bec4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800192a:	4895      	ldr	r0, [pc, #596]	; (8001b80 <main+0x338>)
 800192c:	4622      	mov	r2, r4
 800192e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001932:	f00a fac7 	bl	800bec4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001936:	4893      	ldr	r0, [pc, #588]	; (8001b84 <main+0x33c>)
 8001938:	4622      	mov	r2, r4
 800193a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800193e:	f00a fac1 	bl	800bec4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8001942:	4891      	ldr	r0, [pc, #580]	; (8001b88 <main+0x340>)
 8001944:	4622      	mov	r2, r4
 8001946:	2104      	movs	r1, #4
 8001948:	f00a fabc 	bl	800bec4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 800194c:	2201      	movs	r2, #1
 800194e:	488e      	ldr	r0, [pc, #568]	; (8001b88 <main+0x340>)
 8001950:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001954:	f00a fab6 	bl	800bec4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001958:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800195c:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001960:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001962:	4885      	ldr	r0, [pc, #532]	; (8001b78 <main+0x330>)
 8001964:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001966:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001968:	e9cd 380f 	strd	r3, r8, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800196c:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001970:	f00a f964 	bl	800bc3c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001974:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001978:	487f      	ldr	r0, [pc, #508]	; (8001b78 <main+0x330>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800197a:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800197c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800197e:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001980:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001982:	f00a f95b 	bl	800bc3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001986:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001988:	487b      	ldr	r0, [pc, #492]	; (8001b78 <main+0x330>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800198a:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800198c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800198e:	2502      	movs	r5, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001990:	2704      	movs	r7, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001992:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001996:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001998:	f00a f950 	bl	800bc3c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800199c:	4877      	ldr	r0, [pc, #476]	; (8001b7c <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800199e:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019a0:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80019a2:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019a6:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80019aa:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019ac:	f00a f946 	bl	800bc3c <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80019b0:	4872      	ldr	r0, [pc, #456]	; (8001b7c <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019b2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80019b4:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019b6:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80019ba:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80019be:	f00a f93d 	bl	800bc3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80019c2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019c6:	486e      	ldr	r0, [pc, #440]	; (8001b80 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80019c8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019ca:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019cc:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019d0:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019d2:	f00a f933 	bl	800bc3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80019d6:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019da:	486a      	ldr	r0, [pc, #424]	; (8001b84 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80019dc:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019de:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019e0:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80019e4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019e6:	f00a f929 	bl	800bc3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80019ea:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019ee:	4866      	ldr	r0, [pc, #408]	; (8001b88 <main+0x340>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80019f0:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019f2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019f4:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019f8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019fa:	f00a f91f 	bl	800bc3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80019fe:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a02:	4862      	ldr	r0, [pc, #392]	; (8001b8c <main+0x344>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001a04:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a06:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8001a08:	230f      	movs	r3, #15
 8001a0a:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a0c:	e9cd 5410 	strd	r5, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a10:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a12:	f00a f913 	bl	800bc3c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001a16:	2105      	movs	r1, #5
 8001a18:	4622      	mov	r2, r4
 8001a1a:	2009      	movs	r0, #9
 8001a1c:	f009 fea0 	bl	800b760 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001a20:	2009      	movs	r0, #9
 8001a22:	f009 fedb 	bl	800b7dc <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001a26:	485a      	ldr	r0, [pc, #360]	; (8001b90 <main+0x348>)
 8001a28:	4a5a      	ldr	r2, [pc, #360]	; (8001b94 <main+0x34c>)
 8001a2a:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001a2c:	f009 fee4 	bl	800b7f8 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001a30:	4959      	ldr	r1, [pc, #356]	; (8001b98 <main+0x350>)
 8001a32:	4a5a      	ldr	r2, [pc, #360]	; (8001b9c <main+0x354>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001a34:	4650      	mov	r0, sl
  hi2c3.Init.ClockSpeed = 100000;
 8001a36:	e9ca 1200 	strd	r1, r2, [sl]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001a3a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001a3e:	f8ca 2010 	str.w	r2, [sl, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001a42:	e9ca 4402 	strd	r4, r4, [sl, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001a46:	e9ca 4405 	strd	r4, r4, [sl, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001a4a:	e9ca 4407 	strd	r4, r4, [sl, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001a4e:	f00a fc9f 	bl	800c390 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001a52:	4649      	mov	r1, r9
 8001a54:	4650      	mov	r0, sl
 8001a56:	f00b fe67 	bl	800d728 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001a5a:	4621      	mov	r1, r4
 8001a5c:	4650      	mov	r0, sl
 8001a5e:	f00b fe83 	bl	800d768 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001a62:	f8df c14c 	ldr.w	ip, [pc, #332]	; 8001bb0 <main+0x368>
  hspi5.Instance = SPI5;
 8001a66:	484e      	ldr	r0, [pc, #312]	; (8001ba0 <main+0x358>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001a68:	f8df a148 	ldr.w	sl, [pc, #328]	; 8001bb4 <main+0x36c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001a6c:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001a6e:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001a72:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001a76:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8001a7a:	2218      	movs	r2, #24
 8001a7c:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001a80:	220a      	movs	r2, #10
 8001a82:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001a84:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001a88:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001a8c:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001a90:	f00c fd5c 	bl	800e54c <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001a94:	2207      	movs	r2, #7
 8001a96:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8001a98:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001a9a:	4a42      	ldr	r2, [pc, #264]	; (8001ba4 <main+0x35c>)
 8001a9c:	f8ca 2000 	str.w	r2, [sl]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001aa0:	2040      	movs	r0, #64	; 0x40
 8001aa2:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001aa6:	e9ca 0205 	strd	r0, r2, [sl, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001aaa:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001aae:	f8ca 2020 	str.w	r2, [sl, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001ab2:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001ab4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001ab8:	4650      	mov	r0, sl
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001aba:	e9ca 8401 	strd	r8, r4, [sl, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001abe:	e9ca 7903 	strd	r7, r9, [sl, #12]
  SdramTiming.RPDelay = 2;
 8001ac2:	e9cd b513 	strd	fp, r5, [sp, #76]	; 0x4c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001ac6:	f8ca 2028 	str.w	r2, [sl, #40]	; 0x28
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001aca:	f8ca 401c 	str.w	r4, [sl, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001ace:	f8ca 4024 	str.w	r4, [sl, #36]	; 0x24
  SdramTiming.LoadToActiveDelay = 2;
 8001ad2:	950f      	str	r5, [sp, #60]	; 0x3c
  SdramTiming.SelfRefreshTime = 4;
 8001ad4:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 8001ad6:	9515      	str	r5, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001ad8:	f00c fc46 	bl	800e368 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001adc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001ae0:	a90b      	add	r1, sp, #44	; 0x2c
 8001ae2:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001ae4:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001ae8:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8001aec:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001aee:	f00c fc5d 	bl	800e3ac <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001af2:	4640      	mov	r0, r8
 8001af4:	f009 fe10 	bl	800b718 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001af8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001afc:	a90b      	add	r1, sp, #44	; 0x2c
 8001afe:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b00:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001b04:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b08:	f00c fc50 	bl	800e3ac <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b0c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001b10:	a90b      	add	r1, sp, #44	; 0x2c
 8001b12:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b14:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001b18:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b1c:	f00c fc46 	bl	800e3ac <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001b20:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001b24:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001b26:	9908      	ldr	r1, [sp, #32]
 8001b28:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b2a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001b2e:	a90b      	add	r1, sp, #44	; 0x2c
 8001b30:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b32:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8001b36:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b3a:	f00c fc37 	bl	800e3ac <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001b3e:	4650      	mov	r0, sl
 8001b40:	f240 516a 	movw	r1, #1386	; 0x56a
 8001b44:	f00c fc50 	bl	800e3e8 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8001b48:	f8df a06c 	ldr.w	sl, [pc, #108]	; 8001bb8 <main+0x370>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001b4c:	2234      	movs	r2, #52	; 0x34
 8001b4e:	4621      	mov	r1, r4
 8001b50:	a80f      	add	r0, sp, #60	; 0x3c
 8001b52:	f02c fa1e 	bl	802df92 <memset>
  hltdc.Instance = LTDC;
 8001b56:	4a14      	ldr	r2, [pc, #80]	; (8001ba8 <main+0x360>)
 8001b58:	f8ca 2000 	str.w	r2, [sl]
  hltdc.Init.HorizontalSync = 9;
 8001b5c:	2209      	movs	r2, #9
 8001b5e:	f8ca 2014 	str.w	r2, [sl, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001b62:	221d      	movs	r2, #29
 8001b64:	f8ca 201c 	str.w	r2, [sl, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001b68:	f240 130d 	movw	r3, #269	; 0x10d
 8001b6c:	f240 1243 	movw	r2, #323	; 0x143
 8001b70:	e024      	b.n	8001bbc <main+0x374>
 8001b72:	bf00      	nop
 8001b74:	40023800 	.word	0x40023800
 8001b78:	40021000 	.word	0x40021000
 8001b7c:	40020800 	.word	0x40020800
 8001b80:	40020400 	.word	0x40020400
 8001b84:	40020c00 	.word	0x40020c00
 8001b88:	40021800 	.word	0x40021800
 8001b8c:	40020000 	.word	0x40020000
 8001b90:	200001fc 	.word	0x200001fc
 8001b94:	40023000 	.word	0x40023000
 8001b98:	40005c00 	.word	0x40005c00
 8001b9c:	000186a0 	.word	0x000186a0
 8001ba0:	20000334 	.word	0x20000334
 8001ba4:	a0000140 	.word	0xa0000140
 8001ba8:	40016800 	.word	0x40016800
 8001bac:	20000204 	.word	0x20000204
 8001bb0:	40015000 	.word	0x40015000
 8001bb4:	20000300 	.word	0x20000300
 8001bb8:	20000258 	.word	0x20000258
 8001bbc:	e9ca 3209 	strd	r3, r2, [sl, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8001bc0:	f240 1117 	movw	r1, #279	; 0x117
 8001bc4:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8001bc8:	f8aa 4034 	strh.w	r4, [sl, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001bcc:	4650      	mov	r0, sl
  hltdc.Init.TotalHeigh = 327;
 8001bce:	e9ca 120b 	strd	r1, r2, [sl, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001bd2:	f8ca 8018 	str.w	r8, [sl, #24]
  hltdc.Init.AccumulatedVBP = 3;
 8001bd6:	f8ca b020 	str.w	fp, [sl, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001bda:	e9ca 4401 	strd	r4, r4, [sl, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001bde:	e9ca 4403 	strd	r4, r4, [sl, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001be2:	f88a 4036 	strb.w	r4, [sl, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001be6:	f00b fde3 	bl	800d7b0 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001bea:	23f0      	movs	r3, #240	; 0xf0
 8001bec:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001bee:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8001bf0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001bf4:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001bf6:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001bf8:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001bfa:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001bfe:	4622      	mov	r2, r4
 8001c00:	a90f      	add	r1, sp, #60	; 0x3c
 8001c02:	4650      	mov	r0, sl
  pLayerCfg.Alpha = 255;
 8001c04:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001c06:	2305      	movs	r3, #5
 8001c08:	e9cd e316 	strd	lr, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001c0c:	f8df 826c 	ldr.w	r8, [pc, #620]	; 8001e7c <main+0x634>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001c10:	9513      	str	r5, [sp, #76]	; 0x4c
  pLayerCfg.WindowX0 = 0;
 8001c12:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001c14:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8001c16:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001c18:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001c1a:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001c1e:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001c22:	f00b fe9b 	bl	800d95c <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001c26:	4b82      	ldr	r3, [pc, #520]	; (8001e30 <main+0x5e8>)
 8001c28:	f8c8 3000 	str.w	r3, [r8]
  LcdDrv->Init();
 8001c2c:	681b      	ldr	r3, [r3, #0]
  htim2.Instance = TIM2;
 8001c2e:	f8df a250 	ldr.w	sl, [pc, #592]	; 8001e80 <main+0x638>
  LcdDrv->Init();
 8001c32:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001c34:	f8d8 3000 	ldr.w	r3, [r8]
  htim3.Instance = TIM3;
 8001c38:	f8df 8248 	ldr.w	r8, [pc, #584]	; 8001e84 <main+0x63c>
  LcdDrv->DisplayOff();
 8001c3c:	68db      	ldr	r3, [r3, #12]
 8001c3e:	4798      	blx	r3
  htim3.Instance = TIM3;
 8001c40:	4b7c      	ldr	r3, [pc, #496]	; (8001e34 <main+0x5ec>)
 8001c42:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001c46:	4640      	mov	r0, r8
  htim3.Init.Period = 65535;
 8001c48:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001c4c:	f8c8 300c 	str.w	r3, [r8, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c50:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c54:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001c58:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001c5c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001c60:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001c64:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001c68:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001c6c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001c70:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001c72:	f00d f85b 	bl	800ed2c <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c76:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001c7a:	a90b      	add	r1, sp, #44	; 0x2c
 8001c7c:	4640      	mov	r0, r8
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c7e:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001c80:	f00d fb7e 	bl	800f380 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001c84:	a90f      	add	r1, sp, #60	; 0x3c
 8001c86:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001c88:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001c8c:	f00d fc28 	bl	800f4e0 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001c90:	a909      	add	r1, sp, #36	; 0x24
 8001c92:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001c94:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001c98:	f00d fd60 	bl	800f75c <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Period = 100-1;
 8001c9c:	2363      	movs	r3, #99	; 0x63
  htim2.Instance = TIM2;
 8001c9e:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 168-1;
 8001ca2:	21a7      	movs	r1, #167	; 0xa7
  htim2.Init.Period = 100-1;
 8001ca4:	f8ca 300c 	str.w	r3, [sl, #12]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001ca8:	4650      	mov	r0, sl
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001caa:	2380      	movs	r3, #128	; 0x80
  htim2.Instance = TIM2;
 8001cac:	f8ca b000 	str.w	fp, [sl]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001cb0:	f8ca 3018 	str.w	r3, [sl, #24]
  htim2.Init.Prescaler = 168-1;
 8001cb4:	f8ca 1004 	str.w	r1, [sl, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001cb8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001cbc:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001cc0:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001cc4:	f8ca 4008 	str.w	r4, [sl, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001cc8:	f8ca 4010 	str.w	r4, [sl, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001ccc:	f00d f82e 	bl	800ed2c <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001cd0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001cd4:	a90f      	add	r1, sp, #60	; 0x3c
 8001cd6:	4650      	mov	r0, sl
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001cd8:	930f      	str	r3, [sp, #60]	; 0x3c
  TIM2->CCR1 = 50;
 8001cda:	f04f 0832 	mov.w	r8, #50	; 0x32
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001cde:	f00d fb4f 	bl	800f380 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001ce2:	a90b      	add	r1, sp, #44	; 0x2c
 8001ce4:	4650      	mov	r0, sl
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001ce6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001cea:	f00d fd37 	bl	800f75c <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 50;
 8001cee:	f8cb 8034 	str.w	r8, [fp, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001cf2:	4621      	mov	r1, r4
 8001cf4:	4650      	mov	r0, sl
 8001cf6:	f00d f973 	bl	800efe0 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001cfa:	4639      	mov	r1, r7
  TIM2->CCR2 = 50;
 8001cfc:	f8cb 8038 	str.w	r8, [fp, #56]	; 0x38
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001d00:	4650      	mov	r0, sl
 8001d02:	f00d f96d 	bl	800efe0 <HAL_TIM_PWM_Start>
  htim14.Instance = TIM14;
 8001d06:	4f4c      	ldr	r7, [pc, #304]	; (8001e38 <main+0x5f0>)
  TIM2->CCR3 = 50;
 8001d08:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001d0c:	4631      	mov	r1, r6
 8001d0e:	4650      	mov	r0, sl
 8001d10:	f00d f966 	bl	800efe0 <HAL_TIM_PWM_Start>
  htim14.Init.Prescaler = 210-1;
 8001d14:	4949      	ldr	r1, [pc, #292]	; (8001e3c <main+0x5f4>)
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d16:	60bc      	str	r4, [r7, #8]
  htim14.Init.Period = 100-1;
 8001d18:	2363      	movs	r3, #99	; 0x63
  htim14.Init.Prescaler = 210-1;
 8001d1a:	22d1      	movs	r2, #209	; 0xd1
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001d1c:	e9c7 3403 	strd	r3, r4, [r7, #12]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001d20:	4638      	mov	r0, r7
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001d22:	2380      	movs	r3, #128	; 0x80
 8001d24:	61bb      	str	r3, [r7, #24]
  htim14.Init.Prescaler = 210-1;
 8001d26:	e9c7 1200 	strd	r1, r2, [r7]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001d2a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001d2e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001d32:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001d36:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001d38:	f00c fff8 	bl	800ed2c <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001d3c:	4638      	mov	r0, r7
 8001d3e:	f00d f8c1 	bl	800eec4 <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001d42:	f04f 0b60 	mov.w	fp, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001d46:	4622      	mov	r2, r4
 8001d48:	a90f      	add	r1, sp, #60	; 0x3c
 8001d4a:	4638      	mov	r0, r7
  htim9.Instance = TIM9;
 8001d4c:	4e3c      	ldr	r6, [pc, #240]	; (8001e40 <main+0x5f8>)
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001d4e:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001d50:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001d54:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001d58:	f00d fa02 	bl	800f160 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim14);
 8001d5c:	4638      	mov	r0, r7
 8001d5e:	f000 fcfb 	bl	8002758 <HAL_TIM_MspPostInit>
  htim9.Init.Period = 100-1;
 8001d62:	2363      	movs	r3, #99	; 0x63
  htim9.Init.Prescaler = 84-1;
 8001d64:	4f37      	ldr	r7, [pc, #220]	; (8001e44 <main+0x5fc>)
  htim9.Init.Period = 100-1;
 8001d66:	60f3      	str	r3, [r6, #12]
  htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001d68:	2380      	movs	r3, #128	; 0x80
 8001d6a:	61b3      	str	r3, [r6, #24]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001d6c:	4630      	mov	r0, r6
  htim9.Init.Prescaler = 84-1;
 8001d6e:	2353      	movs	r3, #83	; 0x53
 8001d70:	e9c6 7300 	strd	r7, r3, [r6]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001d74:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001d78:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001d7c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001d80:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001d84:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001d88:	9415      	str	r4, [sp, #84]	; 0x54
  htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d8a:	60b4      	str	r4, [r6, #8]
  htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001d8c:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001d8e:	f00c ffcd 	bl	800ed2c <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001d92:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001d96:	a90b      	add	r1, sp, #44	; 0x2c
 8001d98:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001d9a:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001d9c:	f00d faf0 	bl	800f380 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 8001da0:	4630      	mov	r0, r6
 8001da2:	f00d f88f 	bl	800eec4 <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001da6:	4622      	mov	r2, r4
 8001da8:	a90f      	add	r1, sp, #60	; 0x3c
 8001daa:	4630      	mov	r0, r6
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001dac:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001db0:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001db4:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001db6:	f00d f9d3 	bl	800f160 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001dba:	4621      	mov	r1, r4
  TIM9->CCR1 = 50;
 8001dbc:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001dc0:	4630      	mov	r0, r6
 8001dc2:	f00d f90d 	bl	800efe0 <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim9);
 8001dc6:	4630      	mov	r0, r6
 8001dc8:	f000 fcc6 	bl	8002758 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8001dcc:	f000 fe5a 	bl	8002a84 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001dd0:	f000 fe56 	bl	8002a80 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001dd4:	f7ff fc82 	bl	80016dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001dd8:	f000 f958 	bl	800208c <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001ddc:	f000 f98a 	bl	80020f4 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001de0:	4919      	ldr	r1, [pc, #100]	; (8001e48 <main+0x600>)
 8001de2:	481a      	ldr	r0, [pc, #104]	; (8001e4c <main+0x604>)
 8001de4:	220c      	movs	r2, #12
 8001de6:	f7ff f869 	bl	8000ebc <Flash_Read_Data>
  osKernelInitialize();
 8001dea:	f00d fdc9 	bl	800f980 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001dee:	4629      	mov	r1, r5
 8001df0:	4a17      	ldr	r2, [pc, #92]	; (8001e50 <main+0x608>)
 8001df2:	4648      	mov	r0, r9
 8001df4:	f00d fefe 	bl	800fbf4 <osMessageQueueNew>
 8001df8:	4b16      	ldr	r3, [pc, #88]	; (8001e54 <main+0x60c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001dfa:	4a17      	ldr	r2, [pc, #92]	; (8001e58 <main+0x610>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001dfc:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001dfe:	4621      	mov	r1, r4
 8001e00:	4816      	ldr	r0, [pc, #88]	; (8001e5c <main+0x614>)
 8001e02:	f00d fde9 	bl	800f9d8 <osThreadNew>
 8001e06:	4b16      	ldr	r3, [pc, #88]	; (8001e60 <main+0x618>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001e08:	4a16      	ldr	r2, [pc, #88]	; (8001e64 <main+0x61c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001e0a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001e0c:	4621      	mov	r1, r4
 8001e0e:	4816      	ldr	r0, [pc, #88]	; (8001e68 <main+0x620>)
 8001e10:	f00d fde2 	bl	800f9d8 <osThreadNew>
 8001e14:	4b15      	ldr	r3, [pc, #84]	; (8001e6c <main+0x624>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001e16:	4a16      	ldr	r2, [pc, #88]	; (8001e70 <main+0x628>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001e18:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001e1a:	4621      	mov	r1, r4
 8001e1c:	4815      	ldr	r0, [pc, #84]	; (8001e74 <main+0x62c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001e1e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001e20:	f00d fdda 	bl	800f9d8 <osThreadNew>
 8001e24:	4b14      	ldr	r3, [pc, #80]	; (8001e78 <main+0x630>)
 8001e26:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001e28:	f00d fdbc 	bl	800f9a4 <osKernelStart>
  while (1)
 8001e2c:	e7fe      	b.n	8001e2c <main+0x5e4>
 8001e2e:	bf00      	nop
 8001e30:	2000001c 	.word	0x2000001c
 8001e34:	40000400 	.word	0x40000400
 8001e38:	2000038c 	.word	0x2000038c
 8001e3c:	40002000 	.word	0x40002000
 8001e40:	20000464 	.word	0x20000464
 8001e44:	40014000 	.word	0x40014000
 8001e48:	200001b8 	.word	0x200001b8
 8001e4c:	081e0000 	.word	0x081e0000
 8001e50:	0802ed44 	.word	0x0802ed44
 8001e54:	200001f0 	.word	0x200001f0
 8001e58:	0802ed80 	.word	0x0802ed80
 8001e5c:	08001651 	.word	0x08001651
 8001e60:	200001f8 	.word	0x200001f8
 8001e64:	0802ed20 	.word	0x0802ed20
 8001e68:	08002a95 	.word	0x08002a95
 8001e6c:	200001e8 	.word	0x200001e8
 8001e70:	0802ed5c 	.word	0x0802ed5c
 8001e74:	0800165d 	.word	0x0800165d
 8001e78:	200001f4 	.word	0x200001f4
 8001e7c:	200001ec 	.word	0x200001ec
 8001e80:	200003d4 	.word	0x200003d4
 8001e84:	2000041c 	.word	0x2000041c

08001e88 <IOE_Init>:
 8001e88:	4770      	bx	lr
 8001e8a:	bf00      	nop

08001e8c <IOE_ITConfig>:
 8001e8c:	4770      	bx	lr
 8001e8e:	bf00      	nop

08001e90 <IOE_Write>:
{
 8001e90:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001e92:	4c09      	ldr	r4, [pc, #36]	; (8001eb8 <IOE_Write+0x28>)
{
 8001e94:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001e96:	6824      	ldr	r4, [r4, #0]
 8001e98:	9402      	str	r4, [sp, #8]
{
 8001e9a:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001e9c:	2301      	movs	r3, #1
 8001e9e:	f88d 4017 	strb.w	r4, [sp, #23]
 8001ea2:	f10d 0417 	add.w	r4, sp, #23
 8001ea6:	460a      	mov	r2, r1
 8001ea8:	9301      	str	r3, [sp, #4]
 8001eaa:	4601      	mov	r1, r0
 8001eac:	9400      	str	r4, [sp, #0]
 8001eae:	4803      	ldr	r0, [pc, #12]	; (8001ebc <IOE_Write+0x2c>)
 8001eb0:	f00a fb36 	bl	800c520 <HAL_I2C_Mem_Write>
}
 8001eb4:	b006      	add	sp, #24
 8001eb6:	bd10      	pop	{r4, pc}
 8001eb8:	20000004 	.word	0x20000004
 8001ebc:	20000204 	.word	0x20000204

08001ec0 <IOE_Read>:
{
 8001ec0:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001ec2:	4b0b      	ldr	r3, [pc, #44]	; (8001ef0 <IOE_Read+0x30>)
{
 8001ec4:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001ec6:	681b      	ldr	r3, [r3, #0]
 8001ec8:	9302      	str	r3, [sp, #8]
{
 8001eca:	4684      	mov	ip, r0
 8001ecc:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001ece:	2301      	movs	r3, #1
 8001ed0:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001ed4:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001ed6:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001eda:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001ede:	4661      	mov	r1, ip
 8001ee0:	4804      	ldr	r0, [pc, #16]	; (8001ef4 <IOE_Read+0x34>)
 8001ee2:	f00a fc0f 	bl	800c704 <HAL_I2C_Mem_Read>
}
 8001ee6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001eea:	b007      	add	sp, #28
 8001eec:	f85d fb04 	ldr.w	pc, [sp], #4
 8001ef0:	20000004 	.word	0x20000004
 8001ef4:	20000204 	.word	0x20000204

08001ef8 <IOE_ReadMultiple>:
{
 8001ef8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001efa:	4c09      	ldr	r4, [pc, #36]	; (8001f20 <IOE_ReadMultiple+0x28>)
{
 8001efc:	b084      	sub	sp, #16
 8001efe:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001f00:	6820      	ldr	r0, [r4, #0]
 8001f02:	9002      	str	r0, [sp, #8]
 8001f04:	e9cd 2300 	strd	r2, r3, [sp]
 8001f08:	4806      	ldr	r0, [pc, #24]	; (8001f24 <IOE_ReadMultiple+0x2c>)
 8001f0a:	460a      	mov	r2, r1
 8001f0c:	2301      	movs	r3, #1
 8001f0e:	4661      	mov	r1, ip
 8001f10:	f00a fbf8 	bl	800c704 <HAL_I2C_Mem_Read>
}
 8001f14:	3800      	subs	r0, #0
 8001f16:	bf18      	it	ne
 8001f18:	2001      	movne	r0, #1
 8001f1a:	b004      	add	sp, #16
 8001f1c:	bd10      	pop	{r4, pc}
 8001f1e:	bf00      	nop
 8001f20:	20000004 	.word	0x20000004
 8001f24:	20000204 	.word	0x20000204

08001f28 <IOE_Delay>:
 8001f28:	f009 bbf6 	b.w	800b718 <HAL_Delay>

08001f2c <LCD_IO_Init>:
{
 8001f2c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f2e:	4806      	ldr	r0, [pc, #24]	; (8001f48 <LCD_IO_Init+0x1c>)
 8001f30:	2200      	movs	r2, #0
 8001f32:	2104      	movs	r1, #4
 8001f34:	f009 ffc6 	bl	800bec4 <HAL_GPIO_WritePin>
}
 8001f38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001f3c:	4802      	ldr	r0, [pc, #8]	; (8001f48 <LCD_IO_Init+0x1c>)
 8001f3e:	2201      	movs	r2, #1
 8001f40:	2104      	movs	r1, #4
 8001f42:	f009 bfbf 	b.w	800bec4 <HAL_GPIO_WritePin>
 8001f46:	bf00      	nop
 8001f48:	40020800 	.word	0x40020800

08001f4c <LCD_IO_WriteData>:
{
 8001f4c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f4e:	4d10      	ldr	r5, [pc, #64]	; (8001f90 <LCD_IO_WriteData+0x44>)
{
 8001f50:	b083      	sub	sp, #12
 8001f52:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001f54:	2201      	movs	r2, #1
 8001f56:	480f      	ldr	r0, [pc, #60]	; (8001f94 <LCD_IO_WriteData+0x48>)
 8001f58:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001f5c:	f009 ffb2 	bl	800bec4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f60:	4628      	mov	r0, r5
 8001f62:	2200      	movs	r2, #0
 8001f64:	2104      	movs	r1, #4
 8001f66:	f009 ffad 	bl	800bec4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001f6a:	4b0b      	ldr	r3, [pc, #44]	; (8001f98 <LCD_IO_WriteData+0x4c>)
 8001f6c:	480b      	ldr	r0, [pc, #44]	; (8001f9c <LCD_IO_WriteData+0x50>)
 8001f6e:	681b      	ldr	r3, [r3, #0]
 8001f70:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001f74:	f10d 0106 	add.w	r1, sp, #6
 8001f78:	2201      	movs	r2, #1
 8001f7a:	f00c fb49 	bl	800e610 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001f7e:	2201      	movs	r2, #1
 8001f80:	2104      	movs	r1, #4
 8001f82:	4628      	mov	r0, r5
}
 8001f84:	b003      	add	sp, #12
 8001f86:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001f8a:	f009 bf9b 	b.w	800bec4 <HAL_GPIO_WritePin>
 8001f8e:	bf00      	nop
 8001f90:	40020800 	.word	0x40020800
 8001f94:	40020c00 	.word	0x40020c00
 8001f98:	20000008 	.word	0x20000008
 8001f9c:	20000334 	.word	0x20000334

08001fa0 <LCD_IO_WriteReg>:
{
 8001fa0:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001fa2:	4d10      	ldr	r5, [pc, #64]	; (8001fe4 <LCD_IO_WriteReg+0x44>)
{
 8001fa4:	b083      	sub	sp, #12
 8001fa6:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001fa8:	2200      	movs	r2, #0
 8001faa:	480f      	ldr	r0, [pc, #60]	; (8001fe8 <LCD_IO_WriteReg+0x48>)
 8001fac:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001fb0:	f009 ff88 	bl	800bec4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001fb4:	4628      	mov	r0, r5
 8001fb6:	2200      	movs	r2, #0
 8001fb8:	2104      	movs	r1, #4
 8001fba:	f009 ff83 	bl	800bec4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001fbe:	4b0b      	ldr	r3, [pc, #44]	; (8001fec <LCD_IO_WriteReg+0x4c>)
 8001fc0:	480b      	ldr	r0, [pc, #44]	; (8001ff0 <LCD_IO_WriteReg+0x50>)
 8001fc2:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001fc4:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001fc8:	f10d 0106 	add.w	r1, sp, #6
 8001fcc:	2201      	movs	r2, #1
 8001fce:	f00c fb1f 	bl	800e610 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001fd2:	2201      	movs	r2, #1
 8001fd4:	2104      	movs	r1, #4
 8001fd6:	4628      	mov	r0, r5
}
 8001fd8:	b003      	add	sp, #12
 8001fda:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001fde:	f009 bf71 	b.w	800bec4 <HAL_GPIO_WritePin>
 8001fe2:	bf00      	nop
 8001fe4:	40020800 	.word	0x40020800
 8001fe8:	40020c00 	.word	0x40020c00
 8001fec:	20000008 	.word	0x20000008
 8001ff0:	20000334 	.word	0x20000334

08001ff4 <LCD_IO_ReadData>:
{
 8001ff4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ff8:	4e19      	ldr	r6, [pc, #100]	; (8002060 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ffa:	4f1a      	ldr	r7, [pc, #104]	; (8002064 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ffc:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8002068 <LCD_IO_ReadData+0x74>
 8002000:	f8df 8068 	ldr.w	r8, [pc, #104]	; 800206c <LCD_IO_ReadData+0x78>
{
 8002004:	b083      	sub	sp, #12
 8002006:	460c      	mov	r4, r1
 8002008:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800200a:	2200      	movs	r2, #0
 800200c:	4630      	mov	r0, r6
 800200e:	2104      	movs	r1, #4
 8002010:	f009 ff58 	bl	800bec4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002014:	4638      	mov	r0, r7
 8002016:	2200      	movs	r2, #0
 8002018:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800201c:	f009 ff52 	bl	800bec4 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8002020:	f8d9 3000 	ldr.w	r3, [r9]
 8002024:	f8ad 5004 	strh.w	r5, [sp, #4]
 8002028:	a901      	add	r1, sp, #4
 800202a:	2201      	movs	r2, #1
 800202c:	4640      	mov	r0, r8
 800202e:	f00c faef 	bl	800e610 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8002032:	f8d9 3000 	ldr.w	r3, [r9]
 8002036:	4622      	mov	r2, r4
 8002038:	a901      	add	r1, sp, #4
 800203a:	4640      	mov	r0, r8
 800203c:	f00c fd90 	bl	800eb60 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002040:	4638      	mov	r0, r7
 8002042:	2201      	movs	r2, #1
 8002044:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8002048:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800204a:	f009 ff3b 	bl	800bec4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800204e:	4630      	mov	r0, r6
 8002050:	2201      	movs	r2, #1
 8002052:	2104      	movs	r1, #4
 8002054:	f009 ff36 	bl	800bec4 <HAL_GPIO_WritePin>
}
 8002058:	4620      	mov	r0, r4
 800205a:	b003      	add	sp, #12
 800205c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002060:	40020800 	.word	0x40020800
 8002064:	40020c00 	.word	0x40020c00
 8002068:	20000008 	.word	0x20000008
 800206c:	20000334 	.word	0x20000334

08002070 <LCD_Delay>:
  HAL_Delay(Delay);
 8002070:	f009 bb52 	b.w	800b718 <HAL_Delay>

08002074 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8002074:	4b03      	ldr	r3, [pc, #12]	; (8002084 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002076:	6802      	ldr	r2, [r0, #0]
 8002078:	429a      	cmp	r2, r3
 800207a:	d000      	beq.n	800207e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800207c:	4770      	bx	lr
    HAL_IncTick();
 800207e:	f009 bb39 	b.w	800b6f4 <HAL_IncTick>
 8002082:	bf00      	nop
 8002084:	40001000 	.word	0x40001000

08002088 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002088:	4770      	bx	lr
 800208a:	bf00      	nop

0800208c <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 800208c:	b410      	push	{r4}
 800208e:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8002090:	4b15      	ldr	r3, [pc, #84]	; (80020e8 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8002092:	4916      	ldr	r1, [pc, #88]	; (80020ec <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8002094:	2400      	movs	r4, #0
 8002096:	9400      	str	r4, [sp, #0]
 8002098:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800209a:	f042 0220 	orr.w	r2, r2, #32
 800209e:	631a      	str	r2, [r3, #48]	; 0x30
 80020a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020a2:	f002 0220 	and.w	r2, r2, #32
 80020a6:	9200      	str	r2, [sp, #0]
 80020a8:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80020aa:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80020ac:	4a10      	ldr	r2, [pc, #64]	; (80020f0 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80020ae:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80020b2:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 80020b4:	6808      	ldr	r0, [r1, #0]
 80020b6:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 80020ba:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80020bc:	9401      	str	r4, [sp, #4]
 80020be:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80020c0:	f041 0104 	orr.w	r1, r1, #4
 80020c4:	6319      	str	r1, [r3, #48]	; 0x30
 80020c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020c8:	f003 0304 	and.w	r3, r3, #4
 80020cc:	9301      	str	r3, [sp, #4]
 80020ce:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80020d0:	6813      	ldr	r3, [r2, #0]
 80020d2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80020d6:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 80020d8:	6813      	ldr	r3, [r2, #0]
 80020da:	f043 030c 	orr.w	r3, r3, #12
 80020de:	6013      	str	r3, [r2, #0]
}
 80020e0:	b003      	add	sp, #12
 80020e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80020e6:	4770      	bx	lr
 80020e8:	40023800 	.word	0x40023800
 80020ec:	40021400 	.word	0x40021400
 80020f0:	40020800 	.word	0x40020800

080020f4 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 80020f4:	b410      	push	{r4}
 80020f6:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 80020f8:	4a0e      	ldr	r2, [pc, #56]	; (8002134 <MEAS_timer_init+0x40>)
 80020fa:	2000      	movs	r0, #0
 80020fc:	9001      	str	r0, [sp, #4]
 80020fe:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8002100:	f041 0101 	orr.w	r1, r1, #1
 8002104:	6411      	str	r1, [r2, #64]	; 0x40
 8002106:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8002108:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 800210c:	f002 0201 	and.w	r2, r2, #1
 8002110:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8002112:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8002116:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8002118:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800211a:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800211c:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 800211e:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002120:	4905      	ldr	r1, [pc, #20]	; (8002138 <MEAS_timer_init+0x44>)
 8002122:	f042 0220 	orr.w	r2, r2, #32
 8002126:	605a      	str	r2, [r3, #4]
 8002128:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 800212c:	b003      	add	sp, #12
 800212e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002132:	4770      	bx	lr
 8002134:	40023800 	.word	0x40023800
 8002138:	e000e100 	.word	0xe000e100

0800213c <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 800213c:	b410      	push	{r4}
 800213e:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8002140:	4a36      	ldr	r2, [pc, #216]	; (800221c <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8002142:	4b37      	ldr	r3, [pc, #220]	; (8002220 <MEAS_ADC3_scan_init+0xe4>)
 8002144:	4c37      	ldr	r4, [pc, #220]	; (8002224 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8002146:	2100      	movs	r1, #0
 8002148:	9100      	str	r1, [sp, #0]
 800214a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800214c:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8002150:	6450      	str	r0, [r2, #68]	; 0x44
 8002152:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002154:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8002158:	9000      	str	r0, [sp, #0]
 800215a:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 800215c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800215e:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8002162:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8002164:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002166:	f040 0004 	orr.w	r0, r0, #4
 800216a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 800216c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800216e:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8002172:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8002174:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002176:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 800217a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 800217c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800217e:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8002182:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8002184:	6858      	ldr	r0, [r3, #4]
 8002186:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800218a:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 800218c:	6898      	ldr	r0, [r3, #8]
 800218e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8002192:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8002194:	6898      	ldr	r0, [r3, #8]
 8002196:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 800219a:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 800219c:	6898      	ldr	r0, [r3, #8]
 800219e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80021a2:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80021a4:	9101      	str	r1, [sp, #4]
 80021a6:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80021a8:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80021ac:	6310      	str	r0, [r2, #48]	; 0x30
 80021ae:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80021b0:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80021b4:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80021b6:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80021ba:	9a01      	ldr	r2, [sp, #4]
 80021bc:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80021c0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021c2:	f022 0201 	bic.w	r2, r2, #1
 80021c6:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 80021c8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021ca:	07d2      	lsls	r2, r2, #31
 80021cc:	d4fc      	bmi.n	80021c8 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80021ce:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80021d0:	4815      	ldr	r0, [pc, #84]	; (8002228 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80021d2:	4916      	ldr	r1, [pc, #88]	; (800222c <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80021d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80021d8:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 80021da:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021dc:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80021e0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 80021e2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021e4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80021e8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 80021ea:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021ec:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80021f0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 80021f2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021f4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80021f8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 80021fa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021fc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002200:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8002202:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8002204:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8002208:	f042 0210 	orr.w	r2, r2, #16
 800220c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800220e:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8002210:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8002212:	6359      	str	r1, [r3, #52]	; 0x34
}
 8002214:	b003      	add	sp, #12
 8002216:	f85d 4b04 	ldr.w	r4, [sp], #4
 800221a:	4770      	bx	lr
 800221c:	40023800 	.word	0x40023800
 8002220:	40012200 	.word	0x40012200
 8002224:	e000e100 	.word	0xe000e100
 8002228:	4001224c 	.word	0x4001224c
 800222c:	200004ac 	.word	0x200004ac

08002230 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8002230:	4b1b      	ldr	r3, [pc, #108]	; (80022a0 <DMA2_Stream1_IRQHandler+0x70>)
 8002232:	681a      	ldr	r2, [r3, #0]
 8002234:	0511      	lsls	r1, r2, #20
 8002236:	d400      	bmi.n	800223a <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8002238:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800223a:	4a1a      	ldr	r2, [pc, #104]	; (80022a4 <DMA2_Stream1_IRQHandler+0x74>)
 800223c:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002240:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8002244:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002248:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800224c:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8002250:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002252:	f022 0201 	bic.w	r2, r2, #1
 8002256:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8002258:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800225a:	07d2      	lsls	r2, r2, #31
 800225c:	d4fc      	bmi.n	8002258 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800225e:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002260:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002264:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8002268:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800226a:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800226c:	490e      	ldr	r1, [pc, #56]	; (80022a8 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800226e:	f023 0301 	bic.w	r3, r3, #1
 8002272:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002274:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8002276:	4b0d      	ldr	r3, [pc, #52]	; (80022ac <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002278:	f020 0001 	bic.w	r0, r0, #1
 800227c:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 800227e:	6888      	ldr	r0, [r1, #8]
 8002280:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8002284:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8002286:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002288:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 800228c:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 800228e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002290:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8002294:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8002296:	6813      	ldr	r3, [r2, #0]
 8002298:	f023 0301 	bic.w	r3, r3, #1
 800229c:	6013      	str	r3, [r2, #0]
}
 800229e:	4770      	bx	lr
 80022a0:	40026400 	.word	0x40026400
 80022a4:	e000e100 	.word	0xe000e100
 80022a8:	40012200 	.word	0x40012200
 80022ac:	40023800 	.word	0x40023800

080022b0 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80022b0:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80022b2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80022b6:	2100      	movs	r1, #0
 80022b8:	480f      	ldr	r0, [pc, #60]	; (80022f8 <MEAS_start_measure+0x48>)
 80022ba:	f02b fe6a 	bl	802df92 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80022be:	f7ff ff3d 	bl	800213c <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80022c2:	4a0e      	ldr	r2, [pc, #56]	; (80022fc <MEAS_start_measure+0x4c>)
 80022c4:	490e      	ldr	r1, [pc, #56]	; (8002300 <MEAS_start_measure+0x50>)
 80022c6:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80022c8:	480e      	ldr	r0, [pc, #56]	; (8002304 <MEAS_start_measure+0x54>)
 80022ca:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80022ce:	f043 0301 	orr.w	r3, r3, #1
 80022d2:	6293      	str	r3, [r2, #40]	; 0x28
 80022d4:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80022d8:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80022da:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80022dc:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80022e0:	f043 0301 	orr.w	r3, r3, #1
 80022e4:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80022e6:	680b      	ldr	r3, [r1, #0]
 80022e8:	f043 0301 	orr.w	r3, r3, #1
 80022ec:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80022ee:	6a93      	ldr	r3, [r2, #40]	; 0x28
 80022f0:	07db      	lsls	r3, r3, #31
 80022f2:	d4fc      	bmi.n	80022ee <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 80022f4:	4800      	ldr	r0, [pc, #0]	; (80022f8 <MEAS_start_measure+0x48>)
 80022f6:	bd10      	pop	{r4, pc}
 80022f8:	200004ac 	.word	0x200004ac
 80022fc:	40026400 	.word	0x40026400
 8002300:	e000e100 	.word	0xe000e100
 8002304:	40012200 	.word	0x40012200

08002308 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8002308:	2004      	movs	r0, #4
 800230a:	4770      	bx	lr

0800230c <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 800230c:	2040      	movs	r0, #64	; 0x40
 800230e:	4770      	bx	lr

08002310 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8002310:	f44f 7020 	mov.w	r0, #640	; 0x280
 8002314:	4770      	bx	lr
 8002316:	bf00      	nop

08002318 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002318:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800231a:	4b0e      	ldr	r3, [pc, #56]	; (8002354 <HAL_MspInit+0x3c>)
 800231c:	2200      	movs	r2, #0
 800231e:	9200      	str	r2, [sp, #0]
 8002320:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002322:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8002326:	6459      	str	r1, [r3, #68]	; 0x44
 8002328:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800232a:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 800232e:	9000      	str	r0, [sp, #0]
 8002330:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002332:	9201      	str	r2, [sp, #4]
 8002334:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8002336:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800233a:	6418      	str	r0, [r3, #64]	; 0x40
 800233c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800233e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002342:	9301      	str	r3, [sp, #4]
 8002344:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002346:	210f      	movs	r1, #15
 8002348:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800234c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800234e:	f009 ba07 	b.w	800b760 <HAL_NVIC_SetPriority>
 8002352:	bf00      	nop
 8002354:	40023800 	.word	0x40023800

08002358 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002358:	4b0b      	ldr	r3, [pc, #44]	; (8002388 <HAL_CRC_MspInit+0x30>)
 800235a:	6802      	ldr	r2, [r0, #0]
 800235c:	429a      	cmp	r2, r3
 800235e:	d000      	beq.n	8002362 <HAL_CRC_MspInit+0xa>
 8002360:	4770      	bx	lr
{
 8002362:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002364:	2200      	movs	r2, #0
 8002366:	9201      	str	r2, [sp, #4]
 8002368:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 800236c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002370:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8002374:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800237a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800237e:	9301      	str	r3, [sp, #4]
 8002380:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002382:	b002      	add	sp, #8
 8002384:	4770      	bx	lr
 8002386:	bf00      	nop
 8002388:	40023000 	.word	0x40023000

0800238c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 800238c:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8002390:	4b2e      	ldr	r3, [pc, #184]	; (800244c <HAL_I2C_MspInit+0xc0>)
 8002392:	6802      	ldr	r2, [r0, #0]
{
 8002394:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002396:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8002398:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800239a:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800239e:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80023a2:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80023a4:	d002      	beq.n	80023ac <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80023a6:	b00a      	add	sp, #40	; 0x28
 80023a8:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023ac:	4d28      	ldr	r5, [pc, #160]	; (8002450 <HAL_I2C_MspInit+0xc4>)
 80023ae:	9401      	str	r4, [sp, #4]
 80023b0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023b2:	4828      	ldr	r0, [pc, #160]	; (8002454 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023b4:	f043 0304 	orr.w	r3, r3, #4
 80023b8:	632b      	str	r3, [r5, #48]	; 0x30
 80023ba:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80023bc:	f003 0304 	and.w	r3, r3, #4
 80023c0:	9301      	str	r3, [sp, #4]
 80023c2:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80023c4:	9402      	str	r4, [sp, #8]
 80023c6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80023c8:	f043 0301 	orr.w	r3, r3, #1
 80023cc:	632b      	str	r3, [r5, #48]	; 0x30
 80023ce:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80023d0:	f003 0301 	and.w	r3, r3, #1
 80023d4:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80023d6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80023da:	f04f 0801 	mov.w	r8, #1
 80023de:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80023e2:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023e4:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80023e6:	2312      	movs	r3, #18
 80023e8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80023ec:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80023f0:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80023f2:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023f4:	f009 fc22 	bl	800bc3c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023f8:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80023fa:	f44f 7280 	mov.w	r2, #256	; 0x100
 80023fe:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002400:	4815      	ldr	r0, [pc, #84]	; (8002458 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002402:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002404:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002408:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800240c:	f009 fc16 	bl	800bc3c <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002410:	9403      	str	r4, [sp, #12]
 8002412:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8002414:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002418:	642b      	str	r3, [r5, #64]	; 0x40
 800241a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800241c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002420:	4622      	mov	r2, r4
 8002422:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002424:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002426:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002428:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800242a:	f009 f999 	bl	800b760 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 800242e:	2048      	movs	r0, #72	; 0x48
 8002430:	f009 f9d4 	bl	800b7dc <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8002434:	6a2b      	ldr	r3, [r5, #32]
 8002436:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800243a:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800243c:	6a2b      	ldr	r3, [r5, #32]
 800243e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002442:	622b      	str	r3, [r5, #32]
}
 8002444:	b00a      	add	sp, #40	; 0x28
 8002446:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800244a:	bf00      	nop
 800244c:	40005c00 	.word	0x40005c00
 8002450:	40023800 	.word	0x40023800
 8002454:	40020800 	.word	0x40020800
 8002458:	40020000 	.word	0x40020000

0800245c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800245c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002460:	4604      	mov	r4, r0
 8002462:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002464:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002466:	2230      	movs	r2, #48	; 0x30
 8002468:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800246a:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800246e:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8002472:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002474:	f02b fd8d 	bl	802df92 <memset>
  if(hltdc->Instance==LTDC)
 8002478:	4b67      	ldr	r3, [pc, #412]	; (8002618 <HAL_LTDC_MspInit+0x1bc>)
 800247a:	6822      	ldr	r2, [r4, #0]
 800247c:	429a      	cmp	r2, r3
 800247e:	d002      	beq.n	8002486 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002480:	b01a      	add	sp, #104	; 0x68
 8002482:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002486:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002488:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800248a:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800248c:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800248e:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002490:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002494:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002496:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002498:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800249a:	f00b fe39 	bl	800e110 <HAL_RCCEx_PeriphCLKConfig>
 800249e:	2800      	cmp	r0, #0
 80024a0:	f040 80b7 	bne.w	8002612 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80024a4:	4b5d      	ldr	r3, [pc, #372]	; (800261c <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024a6:	485e      	ldr	r0, [pc, #376]	; (8002620 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80024a8:	2400      	movs	r4, #0
 80024aa:	9401      	str	r4, [sp, #4]
 80024ac:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80024ae:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80024b2:	645a      	str	r2, [r3, #68]	; 0x44
 80024b4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80024b6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80024ba:	9201      	str	r2, [sp, #4]
 80024bc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024be:	9402      	str	r4, [sp, #8]
 80024c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024c2:	f042 0220 	orr.w	r2, r2, #32
 80024c6:	631a      	str	r2, [r3, #48]	; 0x30
 80024c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024ca:	f002 0220 	and.w	r2, r2, #32
 80024ce:	9202      	str	r2, [sp, #8]
 80024d0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024d2:	9403      	str	r4, [sp, #12]
 80024d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024d6:	f042 0201 	orr.w	r2, r2, #1
 80024da:	631a      	str	r2, [r3, #48]	; 0x30
 80024dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024de:	f002 0201 	and.w	r2, r2, #1
 80024e2:	9203      	str	r2, [sp, #12]
 80024e4:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80024e6:	9404      	str	r4, [sp, #16]
 80024e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024ea:	f042 0202 	orr.w	r2, r2, #2
 80024ee:	631a      	str	r2, [r3, #48]	; 0x30
 80024f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024f2:	f002 0202 	and.w	r2, r2, #2
 80024f6:	9204      	str	r2, [sp, #16]
 80024f8:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80024fa:	9405      	str	r4, [sp, #20]
 80024fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024fe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002502:	631a      	str	r2, [r3, #48]	; 0x30
 8002504:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002506:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800250a:	9205      	str	r2, [sp, #20]
 800250c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800250e:	9406      	str	r4, [sp, #24]
 8002510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002512:	f042 0204 	orr.w	r2, r2, #4
 8002516:	631a      	str	r2, [r3, #48]	; 0x30
 8002518:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800251a:	f002 0204 	and.w	r2, r2, #4
 800251e:	9206      	str	r2, [sp, #24]
 8002520:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002522:	9407      	str	r4, [sp, #28]
 8002524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002526:	f042 0208 	orr.w	r2, r2, #8
 800252a:	631a      	str	r2, [r3, #48]	; 0x30
 800252c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800252e:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002532:	2600      	movs	r6, #0
 8002534:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002536:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002538:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800253a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800253c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002540:	2302      	movs	r3, #2
 8002542:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002546:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800254a:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800254c:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800254e:	f009 fb75 	bl	800bc3c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002552:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002554:	f641 0258 	movw	r2, #6232	; 0x1858
 8002558:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800255a:	4832      	ldr	r0, [pc, #200]	; (8002624 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800255c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800255e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002562:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002566:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800256a:	f009 fb67 	bl	800bc3c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800256e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002570:	2203      	movs	r2, #3
 8002572:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002574:	482c      	ldr	r0, [pc, #176]	; (8002628 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002576:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800257a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800257e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002582:	f009 fb5b 	bl	800bc3c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002586:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002588:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 800258c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800258e:	4826      	ldr	r0, [pc, #152]	; (8002628 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002590:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002592:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002596:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800259a:	f009 fb4f 	bl	800bc3c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800259e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80025a0:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80025a4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025a6:	4821      	ldr	r0, [pc, #132]	; (800262c <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80025a8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80025aa:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80025ae:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025b2:	f009 fb43 	bl	800bc3c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80025b6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80025b8:	22c0      	movs	r2, #192	; 0xc0
 80025ba:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80025bc:	481c      	ldr	r0, [pc, #112]	; (8002630 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80025be:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80025c0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80025c4:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80025c8:	f009 fb38 	bl	800bc3c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025cc:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80025ce:	2208      	movs	r2, #8
 80025d0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025d2:	4818      	ldr	r0, [pc, #96]	; (8002634 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80025d4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80025d6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80025da:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025de:	f009 fb2d 	bl	800bc3c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80025e2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025e4:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80025e6:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025ea:	4810      	ldr	r0, [pc, #64]	; (800262c <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80025ec:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80025f0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80025f4:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025f8:	f009 fb20 	bl	800bc3c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80025fc:	4622      	mov	r2, r4
 80025fe:	2105      	movs	r1, #5
 8002600:	2058      	movs	r0, #88	; 0x58
 8002602:	f009 f8ad 	bl	800b760 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002606:	2058      	movs	r0, #88	; 0x58
 8002608:	f009 f8e8 	bl	800b7dc <HAL_NVIC_EnableIRQ>
}
 800260c:	b01a      	add	sp, #104	; 0x68
 800260e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8002612:	f7ff fd39 	bl	8002088 <Error_Handler>
 8002616:	e745      	b.n	80024a4 <HAL_LTDC_MspInit+0x48>
 8002618:	40016800 	.word	0x40016800
 800261c:	40023800 	.word	0x40023800
 8002620:	40021400 	.word	0x40021400
 8002624:	40020000 	.word	0x40020000
 8002628:	40020400 	.word	0x40020400
 800262c:	40021800 	.word	0x40021800
 8002630:	40020800 	.word	0x40020800
 8002634:	40020c00 	.word	0x40020c00

08002638 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002638:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800263a:	4a1b      	ldr	r2, [pc, #108]	; (80026a8 <HAL_SPI_MspInit+0x70>)
 800263c:	6801      	ldr	r1, [r0, #0]
{
 800263e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002640:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8002642:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002644:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002648:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800264c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800264e:	d001      	beq.n	8002654 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002650:	b008      	add	sp, #32
 8002652:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002654:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002658:	9300      	str	r3, [sp, #0]
 800265a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800265c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002660:	6450      	str	r0, [r2, #68]	; 0x44
 8002662:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002664:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002668:	9000      	str	r0, [sp, #0]
 800266a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800266c:	9301      	str	r3, [sp, #4]
 800266e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002670:	480e      	ldr	r0, [pc, #56]	; (80026ac <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002672:	f043 0320 	orr.w	r3, r3, #32
 8002676:	6313      	str	r3, [r2, #48]	; 0x30
 8002678:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800267a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80026a0 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800267e:	f003 0320 	and.w	r3, r3, #32
 8002682:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002684:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002686:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002688:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800268a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800268e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002692:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002694:	f009 fad2 	bl	800bc3c <HAL_GPIO_Init>
}
 8002698:	b008      	add	sp, #32
 800269a:	bd10      	pop	{r4, pc}
 800269c:	f3af 8000 	nop.w
 80026a0:	00000380 	.word	0x00000380
 80026a4:	00000002 	.word	0x00000002
 80026a8:	40015000 	.word	0x40015000
 80026ac:	40021400 	.word	0x40021400

080026b0 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 80026b0:	6803      	ldr	r3, [r0, #0]
 80026b2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 80026b6:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM2)
 80026b8:	d018      	beq.n	80026ec <HAL_TIM_Base_MspInit+0x3c>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80026ba:	4a22      	ldr	r2, [pc, #136]	; (8002744 <HAL_TIM_Base_MspInit+0x94>)
 80026bc:	4293      	cmp	r3, r2
 80026be:	d007      	beq.n	80026d0 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM9)
 80026c0:	4a21      	ldr	r2, [pc, #132]	; (8002748 <HAL_TIM_Base_MspInit+0x98>)
 80026c2:	4293      	cmp	r3, r2
 80026c4:	d021      	beq.n	800270a <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM9_CLK_ENABLE();
  /* USER CODE BEGIN TIM9_MspInit 1 */

  /* USER CODE END TIM9_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 80026c6:	4a21      	ldr	r2, [pc, #132]	; (800274c <HAL_TIM_Base_MspInit+0x9c>)
 80026c8:	4293      	cmp	r3, r2
 80026ca:	d02c      	beq.n	8002726 <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 80026cc:	b004      	add	sp, #16
 80026ce:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 80026d0:	4b1f      	ldr	r3, [pc, #124]	; (8002750 <HAL_TIM_Base_MspInit+0xa0>)
 80026d2:	2200      	movs	r2, #0
 80026d4:	9201      	str	r2, [sp, #4]
 80026d6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80026d8:	f042 0202 	orr.w	r2, r2, #2
 80026dc:	641a      	str	r2, [r3, #64]	; 0x40
 80026de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026e0:	f003 0302 	and.w	r3, r3, #2
 80026e4:	9301      	str	r3, [sp, #4]
 80026e6:	9b01      	ldr	r3, [sp, #4]
}
 80026e8:	b004      	add	sp, #16
 80026ea:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 80026ec:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80026f0:	2200      	movs	r2, #0
 80026f2:	9200      	str	r2, [sp, #0]
 80026f4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80026f6:	f042 0201 	orr.w	r2, r2, #1
 80026fa:	641a      	str	r2, [r3, #64]	; 0x40
 80026fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026fe:	f003 0301 	and.w	r3, r3, #1
 8002702:	9300      	str	r3, [sp, #0]
 8002704:	9b00      	ldr	r3, [sp, #0]
}
 8002706:	b004      	add	sp, #16
 8002708:	4770      	bx	lr
    __HAL_RCC_TIM9_CLK_ENABLE();
 800270a:	4b11      	ldr	r3, [pc, #68]	; (8002750 <HAL_TIM_Base_MspInit+0xa0>)
 800270c:	2200      	movs	r2, #0
 800270e:	9202      	str	r2, [sp, #8]
 8002710:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002712:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002716:	645a      	str	r2, [r3, #68]	; 0x44
 8002718:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800271a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800271e:	9302      	str	r3, [sp, #8]
 8002720:	9b02      	ldr	r3, [sp, #8]
}
 8002722:	b004      	add	sp, #16
 8002724:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 8002726:	4b0a      	ldr	r3, [pc, #40]	; (8002750 <HAL_TIM_Base_MspInit+0xa0>)
 8002728:	2200      	movs	r2, #0
 800272a:	9203      	str	r2, [sp, #12]
 800272c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800272e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002732:	641a      	str	r2, [r3, #64]	; 0x40
 8002734:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002736:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800273a:	9303      	str	r3, [sp, #12]
 800273c:	9b03      	ldr	r3, [sp, #12]
}
 800273e:	b004      	add	sp, #16
 8002740:	4770      	bx	lr
 8002742:	bf00      	nop
 8002744:	40000400 	.word	0x40000400
 8002748:	40014000 	.word	0x40014000
 800274c:	40002000 	.word	0x40002000
 8002750:	40023800 	.word	0x40023800
 8002754:	00000000 	.word	0x00000000

08002758 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002758:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM9)
 800275a:	6802      	ldr	r2, [r0, #0]
 800275c:	4924      	ldr	r1, [pc, #144]	; (80027f0 <HAL_TIM_MspPostInit+0x98>)
{
 800275e:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002760:	2300      	movs	r3, #0
  if(htim->Instance==TIM9)
 8002762:	428a      	cmp	r2, r1
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002764:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002768:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800276c:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM9)
 800276e:	d005      	beq.n	800277c <HAL_TIM_MspPostInit+0x24>

  /* USER CODE BEGIN TIM9_MspPostInit 1 */

  /* USER CODE END TIM9_MspPostInit 1 */
  }
  else if(htim->Instance==TIM14)
 8002770:	4920      	ldr	r1, [pc, #128]	; (80027f4 <HAL_TIM_MspPostInit+0x9c>)
 8002772:	428a      	cmp	r2, r1
 8002774:	d01a      	beq.n	80027ac <HAL_TIM_MspPostInit+0x54>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 8002776:	b009      	add	sp, #36	; 0x24
 8002778:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800277c:	4a1e      	ldr	r2, [pc, #120]	; (80027f8 <HAL_TIM_MspPostInit+0xa0>)
 800277e:	9300      	str	r3, [sp, #0]
 8002780:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002782:	481e      	ldr	r0, [pc, #120]	; (80027fc <HAL_TIM_MspPostInit+0xa4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002784:	f043 0301 	orr.w	r3, r3, #1
 8002788:	6313      	str	r3, [r2, #48]	; 0x30
 800278a:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800278c:	ed9f 7b14 	vldr	d7, [pc, #80]	; 80027e0 <HAL_TIM_MspPostInit+0x88>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002790:	f003 0301 	and.w	r3, r3, #1
 8002794:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002796:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8002798:	2303      	movs	r3, #3
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800279a:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800279e:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 80027a0:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80027a2:	f009 fa4b 	bl	800bc3c <HAL_GPIO_Init>
}
 80027a6:	b009      	add	sp, #36	; 0x24
 80027a8:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ac:	4a12      	ldr	r2, [pc, #72]	; (80027f8 <HAL_TIM_MspPostInit+0xa0>)
 80027ae:	9301      	str	r3, [sp, #4]
 80027b0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80027b2:	f043 0301 	orr.w	r3, r3, #1
 80027b6:	6313      	str	r3, [r2, #48]	; 0x30
 80027b8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 80027ba:	ed9f 7b0b 	vldr	d7, [pc, #44]	; 80027e8 <HAL_TIM_MspPostInit+0x90>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027be:	f003 0301 	and.w	r3, r3, #1
 80027c2:	9301      	str	r3, [sp, #4]
 80027c4:	9801      	ldr	r0, [sp, #4]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80027c6:	480d      	ldr	r0, [pc, #52]	; (80027fc <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80027c8:	2202      	movs	r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80027ca:	2309      	movs	r3, #9
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80027cc:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 80027ce:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80027d2:	9205      	str	r2, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80027d4:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80027d6:	f009 fa31 	bl	800bc3c <HAL_GPIO_Init>
}
 80027da:	b009      	add	sp, #36	; 0x24
 80027dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80027e0:	00000004 	.word	0x00000004
 80027e4:	00000002 	.word	0x00000002
 80027e8:	00000080 	.word	0x00000080
 80027ec:	00000002 	.word	0x00000002
 80027f0:	40014000 	.word	0x40014000
 80027f4:	40002000 	.word	0x40002000
 80027f8:	40023800 	.word	0x40023800
 80027fc:	40020000 	.word	0x40020000

08002800 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002800:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8002802:	4b2b      	ldr	r3, [pc, #172]	; (80028b0 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002804:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002806:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002808:	2200      	movs	r2, #0
 800280a:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 800280c:	2c00      	cmp	r4, #0
 800280e:	d14c      	bne.n	80028aa <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002810:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8002812:	4a28      	ldr	r2, [pc, #160]	; (80028b4 <HAL_SDRAM_MspInit+0xb4>)
 8002814:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002816:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002818:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800281a:	4827      	ldr	r0, [pc, #156]	; (80028b8 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800281c:	433b      	orrs	r3, r7
 800281e:	6393      	str	r3, [r2, #56]	; 0x38
 8002820:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002822:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002824:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002826:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002828:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 800282c:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800282e:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002830:	2302      	movs	r3, #2
 8002832:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002836:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 800283a:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800283c:	f009 f9fe 	bl	800bc3c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002840:	481e      	ldr	r0, [pc, #120]	; (80028bc <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002842:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002844:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002846:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002848:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800284c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002850:	f009 f9f4 	bl	800bc3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002854:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002858:	4819      	ldr	r0, [pc, #100]	; (80028c0 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800285a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800285c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800285e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002862:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002866:	f009 f9e9 	bl	800bc3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800286a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800286e:	4815      	ldr	r0, [pc, #84]	; (80028c4 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002870:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002872:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002874:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002878:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800287c:	f009 f9de 	bl	800bc3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002880:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002884:	4810      	ldr	r0, [pc, #64]	; (80028c8 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002886:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002888:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800288a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800288e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002892:	f009 f9d3 	bl	800bc3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002896:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002898:	480c      	ldr	r0, [pc, #48]	; (80028cc <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800289a:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800289c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800289e:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80028a2:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80028a4:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028a6:	f009 f9c9 	bl	800bc3c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80028aa:	b009      	add	sp, #36	; 0x24
 80028ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80028ae:	bf00      	nop
 80028b0:	200008ac 	.word	0x200008ac
 80028b4:	40023800 	.word	0x40023800
 80028b8:	40021400 	.word	0x40021400
 80028bc:	40020800 	.word	0x40020800
 80028c0:	40021800 	.word	0x40021800
 80028c4:	40021000 	.word	0x40021000
 80028c8:	40020c00 	.word	0x40020c00
 80028cc:	40020400 	.word	0x40020400

080028d0 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80028d0:	b570      	push	{r4, r5, r6, lr}
 80028d2:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028d4:	4b23      	ldr	r3, [pc, #140]	; (8002964 <HAL_InitTick+0x94>)
 80028d6:	2200      	movs	r2, #0
 80028d8:	9202      	str	r2, [sp, #8]
 80028da:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80028dc:	f042 0210 	orr.w	r2, r2, #16
 80028e0:	641a      	str	r2, [r3, #64]	; 0x40
 80028e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028e4:	f003 0310 	and.w	r3, r3, #16
 80028e8:	9302      	str	r3, [sp, #8]
{
 80028ea:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028ec:	a901      	add	r1, sp, #4
 80028ee:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028f0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028f2:	f00b fbeb 	bl	800e0cc <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80028f6:	9b06      	ldr	r3, [sp, #24]
 80028f8:	b9d3      	cbnz	r3, 8002930 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80028fa:	f00b fbd7 	bl	800e0ac <HAL_RCC_GetPCLK1Freq>
 80028fe:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002900:	4a19      	ldr	r2, [pc, #100]	; (8002968 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002902:	4c1a      	ldr	r4, [pc, #104]	; (800296c <HAL_InitTick+0x9c>)
 8002904:	491a      	ldr	r1, [pc, #104]	; (8002970 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002906:	fba2 2303 	umull	r2, r3, r2, r3
 800290a:	0c9b      	lsrs	r3, r3, #18
 800290c:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800290e:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002910:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002914:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002916:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 800291a:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800291c:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800291e:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002920:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8002922:	f00c fa03 	bl	800ed2c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002926:	4606      	mov	r6, r0
 8002928:	b130      	cbz	r0, 8002938 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 800292a:	4630      	mov	r0, r6
 800292c:	b008      	add	sp, #32
 800292e:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002930:	f00b fbbc 	bl	800e0ac <HAL_RCC_GetPCLK1Freq>
 8002934:	0043      	lsls	r3, r0, #1
 8002936:	e7e3      	b.n	8002900 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002938:	4620      	mov	r0, r4
 800293a:	f00c fa85 	bl	800ee48 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800293e:	4606      	mov	r6, r0
 8002940:	2800      	cmp	r0, #0
 8002942:	d1f2      	bne.n	800292a <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002944:	2036      	movs	r0, #54	; 0x36
 8002946:	f008 ff49 	bl	800b7dc <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800294a:	2d0f      	cmp	r5, #15
 800294c:	d901      	bls.n	8002952 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 800294e:	2601      	movs	r6, #1
 8002950:	e7eb      	b.n	800292a <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002952:	4632      	mov	r2, r6
 8002954:	4629      	mov	r1, r5
 8002956:	2036      	movs	r0, #54	; 0x36
 8002958:	f008 ff02 	bl	800b760 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800295c:	4b05      	ldr	r3, [pc, #20]	; (8002974 <HAL_InitTick+0xa4>)
 800295e:	601d      	str	r5, [r3, #0]
 8002960:	e7e3      	b.n	800292a <HAL_InitTick+0x5a>
 8002962:	bf00      	nop
 8002964:	40023800 	.word	0x40023800
 8002968:	431bde83 	.word	0x431bde83
 800296c:	200008b0 	.word	0x200008b0
 8002970:	40001000 	.word	0x40001000
 8002974:	20000084 	.word	0x20000084

08002978 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002978:	4770      	bx	lr
 800297a:	bf00      	nop

0800297c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800297c:	e7fe      	b.n	800297c <HardFault_Handler>
 800297e:	bf00      	nop

08002980 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002980:	e7fe      	b.n	8002980 <MemManage_Handler>
 8002982:	bf00      	nop

08002984 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002984:	e7fe      	b.n	8002984 <BusFault_Handler>
 8002986:	bf00      	nop

08002988 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002988:	e7fe      	b.n	8002988 <UsageFault_Handler>
 800298a:	bf00      	nop

0800298c <DebugMon_Handler>:
 800298c:	4770      	bx	lr
 800298e:	bf00      	nop

08002990 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002990:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002992:	20c8      	movs	r0, #200	; 0xc8
 8002994:	f008 fec0 	bl	800b718 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002998:	4804      	ldr	r0, [pc, #16]	; (80029ac <EXTI3_IRQHandler+0x1c>)
 800299a:	2200      	movs	r2, #0
 800299c:	2120      	movs	r1, #32
 800299e:	f009 fa91 	bl	800bec4 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80029a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 80029a6:	2008      	movs	r0, #8
 80029a8:	f009 ba9c 	b.w	800bee4 <HAL_GPIO_EXTI_IRQHandler>
 80029ac:	40021000 	.word	0x40021000

080029b0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80029b0:	4801      	ldr	r0, [pc, #4]	; (80029b8 <TIM6_DAC_IRQHandler+0x8>)
 80029b2:	f00c be29 	b.w	800f608 <HAL_TIM_IRQHandler>
 80029b6:	bf00      	nop
 80029b8:	200008b0 	.word	0x200008b0

080029bc <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 80029bc:	4801      	ldr	r0, [pc, #4]	; (80029c4 <I2C3_EV_IRQHandler+0x8>)
 80029be:	f00a b9f1 	b.w	800cda4 <HAL_I2C_EV_IRQHandler>
 80029c2:	bf00      	nop
 80029c4:	20000204 	.word	0x20000204

080029c8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80029c8:	4801      	ldr	r0, [pc, #4]	; (80029d0 <LTDC_IRQHandler+0x8>)
 80029ca:	f00a bf65 	b.w	800d898 <HAL_LTDC_IRQHandler>
 80029ce:	bf00      	nop
 80029d0:	20000258 	.word	0x20000258

080029d4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80029d4:	2001      	movs	r0, #1
 80029d6:	4770      	bx	lr

080029d8 <_kill>:

int _kill(int pid, int sig)
{
 80029d8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80029da:	f02b fbd3 	bl	802e184 <__errno>
 80029de:	2316      	movs	r3, #22
 80029e0:	6003      	str	r3, [r0, #0]
	return -1;
}
 80029e2:	f04f 30ff 	mov.w	r0, #4294967295
 80029e6:	bd08      	pop	{r3, pc}

080029e8 <_exit>:

void _exit (int status)
{
 80029e8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80029ea:	f02b fbcb 	bl	802e184 <__errno>
 80029ee:	2316      	movs	r3, #22
 80029f0:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80029f2:	e7fe      	b.n	80029f2 <_exit+0xa>

080029f4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80029f4:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029f6:	1e16      	subs	r6, r2, #0
 80029f8:	dd07      	ble.n	8002a0a <_read+0x16>
 80029fa:	460c      	mov	r4, r1
 80029fc:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80029fe:	f3af 8000 	nop.w
 8002a02:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a06:	42a5      	cmp	r5, r4
 8002a08:	d1f9      	bne.n	80029fe <_read+0xa>
	}

return len;
}
 8002a0a:	4630      	mov	r0, r6
 8002a0c:	bd70      	pop	{r4, r5, r6, pc}
 8002a0e:	bf00      	nop

08002a10 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002a10:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a12:	1e16      	subs	r6, r2, #0
 8002a14:	dd07      	ble.n	8002a26 <_write+0x16>
 8002a16:	460c      	mov	r4, r1
 8002a18:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8002a1a:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002a1e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a22:	42ac      	cmp	r4, r5
 8002a24:	d1f9      	bne.n	8002a1a <_write+0xa>
	}
	return len;
}
 8002a26:	4630      	mov	r0, r6
 8002a28:	bd70      	pop	{r4, r5, r6, pc}
 8002a2a:	bf00      	nop

08002a2c <_close>:

int _close(int file)
{
	return -1;
}
 8002a2c:	f04f 30ff 	mov.w	r0, #4294967295
 8002a30:	4770      	bx	lr
 8002a32:	bf00      	nop

08002a34 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002a34:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002a38:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002a3a:	2000      	movs	r0, #0
 8002a3c:	4770      	bx	lr
 8002a3e:	bf00      	nop

08002a40 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002a40:	2001      	movs	r0, #1
 8002a42:	4770      	bx	lr

08002a44 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002a44:	2000      	movs	r0, #0
 8002a46:	4770      	bx	lr

08002a48 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002a48:	4a0b      	ldr	r2, [pc, #44]	; (8002a78 <_sbrk+0x30>)
{
 8002a4a:	b508      	push	{r3, lr}
 8002a4c:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002a4e:	6810      	ldr	r0, [r2, #0]
 8002a50:	b128      	cbz	r0, 8002a5e <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002a52:	4403      	add	r3, r0
 8002a54:	4669      	mov	r1, sp
 8002a56:	428b      	cmp	r3, r1
 8002a58:	d807      	bhi.n	8002a6a <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002a5a:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002a5c:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002a5e:	4807      	ldr	r0, [pc, #28]	; (8002a7c <_sbrk+0x34>)
 8002a60:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002a62:	4403      	add	r3, r0
 8002a64:	4669      	mov	r1, sp
 8002a66:	428b      	cmp	r3, r1
 8002a68:	d9f7      	bls.n	8002a5a <_sbrk+0x12>
		errno = ENOMEM;
 8002a6a:	f02b fb8b 	bl	802e184 <__errno>
 8002a6e:	230c      	movs	r3, #12
 8002a70:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002a72:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002a76:	bd08      	pop	{r3, pc}
 8002a78:	200008f8 	.word	0x200008f8
 8002a7c:	20014490 	.word	0x20014490

08002a80 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8002a80:	4770      	bx	lr
 8002a82:	bf00      	nop

08002a84 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8002a84:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8002a86:	f000 fbab 	bl	80031e0 <touchgfx_components_init>
  touchgfx_init();
}
 8002a8a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8002a8e:	f000 bb33 	b.w	80030f8 <touchgfx_init>
 8002a92:	bf00      	nop

08002a94 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8002a94:	f000 bba6 	b.w	80031e4 <touchgfx_taskEntry>

08002a98 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8002a98:	4770      	bx	lr

08002a9a <_ZN20STM32TouchControllerD0Ev>:
 8002a9a:	b510      	push	{r4, lr}
 8002a9c:	2104      	movs	r1, #4
 8002a9e:	4604      	mov	r4, r0
 8002aa0:	f02a f98b 	bl	802cdba <_ZdlPvj>
 8002aa4:	4620      	mov	r0, r4
 8002aa6:	bd10      	pop	{r4, pc}

08002aa8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8002aa8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8002aaa:	4b0c      	ldr	r3, [pc, #48]	; (8002adc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002aac:	4c0c      	ldr	r4, [pc, #48]	; (8002ae0 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8002aae:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8002ab0:	4b0c      	ldr	r3, [pc, #48]	; (8002ae4 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002ab2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8002ab4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002ab6:	6863      	ldr	r3, [r4, #4]
 8002ab8:	4798      	blx	r3
 8002aba:	f640 0311 	movw	r3, #2065	; 0x811
 8002abe:	4298      	cmp	r0, r3
 8002ac0:	d10a      	bne.n	8002ad8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8002ac2:	4d09      	ldr	r5, [pc, #36]	; (8002ae8 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8002ac4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8002ac6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8002ac8:	2082      	movs	r0, #130	; 0x82
 8002aca:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8002acc:	682b      	ldr	r3, [r5, #0]
 8002ace:	2082      	movs	r0, #130	; 0x82
 8002ad0:	68db      	ldr	r3, [r3, #12]
 8002ad2:	4798      	blx	r3
 8002ad4:	2000      	movs	r0, #0
    }

    return ret;
}
 8002ad6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8002ad8:	2001      	movs	r0, #1
 8002ada:	e7fc      	b.n	8002ad6 <_Z11BSP_TS_Inittt+0x2e>
 8002adc:	200008fc 	.word	0x200008fc
 8002ae0:	20000054 	.word	0x20000054
 8002ae4:	200008fe 	.word	0x200008fe
 8002ae8:	20000900 	.word	0x20000900

08002aec <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8002aec:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8002af0:	20f0      	movs	r0, #240	; 0xf0
 8002af2:	f7ff bfd9 	b.w	8002aa8 <_Z11BSP_TS_Inittt>
	...

08002af8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8002af8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8002afa:	4d33      	ldr	r5, [pc, #204]	; (8002bc8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8002afc:	682b      	ldr	r3, [r5, #0]
{
 8002afe:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8002b00:	691b      	ldr	r3, [r3, #16]
 8002b02:	2082      	movs	r0, #130	; 0x82
 8002b04:	4798      	blx	r3
 8002b06:	b280      	uxth	r0, r0
 8002b08:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8002b0a:	2800      	cmp	r0, #0
 8002b0c:	d04a      	beq.n	8002ba4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8002b0e:	682b      	ldr	r3, [r5, #0]
 8002b10:	f10d 0206 	add.w	r2, sp, #6
 8002b14:	695b      	ldr	r3, [r3, #20]
 8002b16:	a901      	add	r1, sp, #4
 8002b18:	2082      	movs	r0, #130	; 0x82
 8002b1a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8002b1c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002b20:	f640 6274 	movw	r2, #3700	; 0xe74
 8002b24:	4293      	cmp	r3, r2
 8002b26:	d93f      	bls.n	8002ba8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8002b28:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8002b2c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002b30:	1ad2      	subs	r2, r2, r3
 8002b32:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8002b34:	2a0a      	cmp	r2, #10
 8002b36:	d93d      	bls.n	8002bb4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8002b38:	230b      	movs	r3, #11
 8002b3a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8002b3e:	4b23      	ldr	r3, [pc, #140]	; (8002bcc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8002b40:	881b      	ldrh	r3, [r3, #0]
 8002b42:	429a      	cmp	r2, r3
 8002b44:	d901      	bls.n	8002b4a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8002b46:	3b01      	subs	r3, #1
 8002b48:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8002b4a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002b4e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8002b52:	428b      	cmp	r3, r1
 8002b54:	d830      	bhi.n	8002bb8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8002b56:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8002b5a:	330e      	adds	r3, #14
 8002b5c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8002b5e:	210f      	movs	r1, #15
 8002b60:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002b64:	491a      	ldr	r1, [pc, #104]	; (8002bd0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8002b66:	8809      	ldrh	r1, [r1, #0]
 8002b68:	428b      	cmp	r3, r1
 8002b6a:	d901      	bls.n	8002b70 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8002b6c:	3901      	subs	r1, #1
 8002b6e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002b70:	4e18      	ldr	r6, [pc, #96]	; (8002bd4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002b72:	4d19      	ldr	r5, [pc, #100]	; (8002bd8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002b74:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002b76:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002b78:	4283      	cmp	r3, r0
 8002b7a:	b281      	uxth	r1, r0
 8002b7c:	bf8c      	ite	hi
 8002b7e:	1a59      	subhi	r1, r3, r1
 8002b80:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002b82:	b2b8      	uxth	r0, r7
 8002b84:	42ba      	cmp	r2, r7
 8002b86:	bf8c      	ite	hi
 8002b88:	1a10      	subhi	r0, r2, r0
 8002b8a:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002b8c:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002b8e:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8002b90:	4401      	add	r1, r0
 8002b92:	2905      	cmp	r1, #5
        {
            _x = x;
 8002b94:	bfc8      	it	gt
 8002b96:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8002b98:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8002b9a:	bfc8      	it	gt
 8002b9c:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8002b9e:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8002ba0:	682b      	ldr	r3, [r5, #0]
 8002ba2:	80a3      	strh	r3, [r4, #4]
    }
}
 8002ba4:	b003      	add	sp, #12
 8002ba6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8002ba8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8002baa:	bf9c      	itt	ls
 8002bac:	23b4      	movls	r3, #180	; 0xb4
 8002bae:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8002bb2:	e7bb      	b.n	8002b2c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8002bb4:	2200      	movs	r2, #0
 8002bb6:	e7c8      	b.n	8002b4a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8002bb8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8002bbc:	3308      	adds	r3, #8
 8002bbe:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8002bc0:	2b0e      	cmp	r3, #14
 8002bc2:	d8cc      	bhi.n	8002b5e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8002bc4:	2300      	movs	r3, #0
 8002bc6:	e7d3      	b.n	8002b70 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8002bc8:	20000900 	.word	0x20000900
 8002bcc:	200008fe 	.word	0x200008fe
 8002bd0:	200008fc 	.word	0x200008fc
 8002bd4:	20000904 	.word	0x20000904
 8002bd8:	20000908 	.word	0x20000908

08002bdc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8002bdc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8002bde:	4668      	mov	r0, sp
{
 8002be0:	460d      	mov	r5, r1
 8002be2:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8002be4:	f7ff ff88 	bl	8002af8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8002be8:	f8bd 0000 	ldrh.w	r0, [sp]
 8002bec:	b148      	cbz	r0, 8002c02 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8002bee:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8002bf2:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8002bf4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002bf8:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8002bfa:	4b03      	ldr	r3, [pc, #12]	; (8002c08 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8002bfc:	223c      	movs	r2, #60	; 0x3c
 8002bfe:	601a      	str	r2, [r3, #0]
        return true;
 8002c00:	2001      	movs	r0, #1
}
 8002c02:	b003      	add	sp, #12
 8002c04:	bd30      	pop	{r4, r5, pc}
 8002c06:	bf00      	nop
 8002c08:	20000010 	.word	0x20000010

08002c0c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8002c0c:	b110      	cbz	r0, 8002c14 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8002c0e:	2802      	cmp	r0, #2
 8002c10:	d009      	beq.n	8002c26 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8002c12:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002c14:	4b07      	ldr	r3, [pc, #28]	; (8002c34 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002c16:	681a      	ldr	r2, [r3, #0]
 8002c18:	fab2 f282 	clz	r2, r2
 8002c1c:	0952      	lsrs	r2, r2, #5
 8002c1e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8002c20:	4805      	ldr	r0, [pc, #20]	; (8002c38 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8002c22:	f009 b94f 	b.w	800bec4 <HAL_GPIO_WritePin>
 8002c26:	4b03      	ldr	r3, [pc, #12]	; (8002c34 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002c28:	689a      	ldr	r2, [r3, #8]
 8002c2a:	fab2 f282 	clz	r2, r2
 8002c2e:	0952      	lsrs	r2, r2, #5
 8002c30:	2110      	movs	r1, #16
 8002c32:	e7f5      	b.n	8002c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8002c34:	2000090c 	.word	0x2000090c
 8002c38:	40021000 	.word	0x40021000

08002c3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8002c3c:	b110      	cbz	r0, 8002c44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8002c3e:	2802      	cmp	r0, #2
 8002c40:	d009      	beq.n	8002c56 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8002c42:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002c44:	4b07      	ldr	r3, [pc, #28]	; (8002c64 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002c46:	681a      	ldr	r2, [r3, #0]
 8002c48:	3a00      	subs	r2, #0
 8002c4a:	bf18      	it	ne
 8002c4c:	2201      	movne	r2, #1
 8002c4e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8002c50:	4805      	ldr	r0, [pc, #20]	; (8002c68 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8002c52:	f009 b937 	b.w	800bec4 <HAL_GPIO_WritePin>
 8002c56:	4b03      	ldr	r3, [pc, #12]	; (8002c64 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002c58:	689a      	ldr	r2, [r3, #8]
 8002c5a:	3a00      	subs	r2, #0
 8002c5c:	bf18      	it	ne
 8002c5e:	2201      	movne	r2, #1
 8002c60:	2110      	movs	r1, #16
 8002c62:	e7f5      	b.n	8002c50 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002c64:	2000090c 	.word	0x2000090c
 8002c68:	40021000 	.word	0x40021000

08002c6c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8002c6c:	b110      	cbz	r0, 8002c74 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8002c6e:	2802      	cmp	r0, #2
 8002c70:	d004      	beq.n	8002c7c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8002c72:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002c74:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002c76:	4802      	ldr	r0, [pc, #8]	; (8002c80 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8002c78:	f009 b928 	b.w	800becc <HAL_GPIO_TogglePin>
 8002c7c:	2110      	movs	r1, #16
 8002c7e:	e7fa      	b.n	8002c76 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8002c80:	40021000 	.word	0x40021000

08002c84 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8002c84:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8002c86:	b130      	cbz	r0, 8002c96 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8002c88:	2802      	cmp	r0, #2
 8002c8a:	d009      	beq.n	8002ca0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002c8c:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8002c8e:	1e43      	subs	r3, r0, #1
 8002c90:	4258      	negs	r0, r3
 8002c92:	4158      	adcs	r0, r3
 8002c94:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002c96:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002c98:	4802      	ldr	r0, [pc, #8]	; (8002ca4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8002c9a:	f009 f90d 	bl	800beb8 <HAL_GPIO_ReadPin>
        break;
 8002c9e:	e7f6      	b.n	8002c8e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002ca0:	2110      	movs	r1, #16
 8002ca2:	e7f9      	b.n	8002c98 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8002ca4:	40021000 	.word	0x40021000

08002ca8 <_ZN8touchgfx4GPIO4initEv>:
{
 8002ca8:	b570      	push	{r4, r5, r6, lr}
 8002caa:	4d08      	ldr	r5, [pc, #32]	; (8002ccc <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8002cac:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8002cae:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8002cb0:	b2e0      	uxtb	r0, r4
 8002cb2:	f7ff ffe7 	bl	8002c84 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8002cb6:	b118      	cbz	r0, 8002cc0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8002cb8:	682b      	ldr	r3, [r5, #0]
 8002cba:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8002cbc:	bf18      	it	ne
 8002cbe:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8002cc0:	3401      	adds	r4, #1
 8002cc2:	2c05      	cmp	r4, #5
 8002cc4:	f105 0504 	add.w	r5, r5, #4
 8002cc8:	d1f2      	bne.n	8002cb0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8002cca:	bd70      	pop	{r4, r5, r6, pc}
 8002ccc:	2000090c 	.word	0x2000090c

08002cd0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002cd0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8002cd2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8002cd6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8002cda:	4770      	bx	lr

08002cdc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002cdc:	2000      	movs	r0, #0
 8002cde:	4770      	bx	lr

08002ce0 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002ce0:	4b03      	ldr	r3, [pc, #12]	; (8002cf0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8002ce2:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002ce4:	3900      	subs	r1, #0
 8002ce6:	bf18      	it	ne
 8002ce8:	2101      	movne	r1, #1
 8002cea:	7019      	strb	r1, [r3, #0]
    }
 8002cec:	4770      	bx	lr
 8002cee:	bf00      	nop
 8002cf0:	20013853 	.word	0x20013853

08002cf4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002cf4:	2000      	movs	r0, #0
 8002cf6:	4770      	bx	lr

08002cf8 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002cf8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002cfa:	b10b      	cbz	r3, 8002d00 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002cfc:	4608      	mov	r0, r1
 8002cfe:	4718      	bx	r3
        }
    }
 8002d00:	4770      	bx	lr

08002d02 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8002d02:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002d06:	4770      	bx	lr

08002d08 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002d08:	6840      	ldr	r0, [r0, #4]
 8002d0a:	6803      	ldr	r3, [r0, #0]
 8002d0c:	699b      	ldr	r3, [r3, #24]
 8002d0e:	4718      	bx	r3

08002d10 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8002d10:	4770      	bx	lr

08002d12 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8002d12:	4770      	bx	lr

08002d14 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002d14:	4770      	bx	lr
	...

08002d18 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002d18:	b510      	push	{r4, lr}
 8002d1a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002d1c:	f000 fb4e 	bl	80033bc <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8002d20:	6823      	ldr	r3, [r4, #0]
 8002d22:	4903      	ldr	r1, [pc, #12]	; (8002d30 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002d24:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002d28:	4620      	mov	r0, r4
}
 8002d2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8002d2e:	4718      	bx	r3
 8002d30:	d0000000 	.word	0xd0000000

08002d34 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8002d34:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8002d36:	6803      	ldr	r3, [r0, #0]
{
 8002d38:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8002d3a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002d3e:	4798      	blx	r3
    enableInterrupts();
 8002d40:	6823      	ldr	r3, [r4, #0]
 8002d42:	4620      	mov	r0, r4
 8002d44:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002d46:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8002d48:	f000 f8ec 	bl	8002f24 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002d4c:	6823      	ldr	r3, [r4, #0]
 8002d4e:	4620      	mov	r0, r4
 8002d50:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002d52:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002d54:	2029      	movs	r0, #41	; 0x29
 8002d56:	f7ff f923 	bl	8001fa0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8002d5a:	f000 f8e3 	bl	8002f24 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002d5e:	6823      	ldr	r3, [r4, #0]
 8002d60:	4620      	mov	r0, r4
 8002d62:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002d64:	4798      	blx	r3
    for (;;)
 8002d66:	e7f8      	b.n	8002d5a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002d68 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002d68:	b510      	push	{r4, lr}
 8002d6a:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002d6c:	f011 fa8e 	bl	801428c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002d70:	6823      	ldr	r3, [r4, #0]
 8002d72:	4620      	mov	r0, r4
 8002d74:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8002d78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002d7c:	4718      	bx	r3

08002d7e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002d7e:	f000 bb0f 	b.w	80033a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002d82 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002d82:	f000 bb13 	b.w	80033ac <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002d86 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002d86:	f000 bb37 	b.w	80033f8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08002d8a <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8002d8a:	f000 badf 	b.w	800334c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08002d8e <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8002d8e:	f000 bae5 	b.w	800335c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002d92 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002d92:	f000 bb3d 	b.w	8003410 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08002d96 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002d96:	f000 bae9 	b.w	800336c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08002d9a <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8002d9a:	f010 bce2 	b.w	8013762 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08002d9e <_ZN11TouchGFXHALD0Ev>:
 8002d9e:	b510      	push	{r4, lr}
 8002da0:	217c      	movs	r1, #124	; 0x7c
 8002da2:	4604      	mov	r4, r0
 8002da4:	f02a f809 	bl	802cdba <_ZdlPvj>
 8002da8:	4620      	mov	r0, r4
 8002daa:	bd10      	pop	{r4, pc}

08002dac <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002dac:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8002db0:	b11b      	cbz	r3, 8002dba <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8002db2:	6840      	ldr	r0, [r0, #4]
 8002db4:	6803      	ldr	r3, [r0, #0]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	4718      	bx	r3
    }
 8002dba:	4618      	mov	r0, r3
 8002dbc:	4770      	bx	lr
	...

08002dc0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002dc0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8002dc2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8002dc6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002dca:	4b0c      	ldr	r3, [pc, #48]	; (8002dfc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002dcc:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002dce:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002dd0:	d009      	beq.n	8002de6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8002dd2:	b93a      	cbnz	r2, 8002de4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002dd4:	4a0a      	ldr	r2, [pc, #40]	; (8002e00 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002dd6:	490b      	ldr	r1, [pc, #44]	; (8002e04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002dd8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002dda:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002ddc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002dde:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002de0:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8002de2:	701a      	strb	r2, [r3, #0]
    }
 8002de4:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002de6:	2a00      	cmp	r2, #0
 8002de8:	d0fc      	beq.n	8002de4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002dea:	4a05      	ldr	r2, [pc, #20]	; (8002e00 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002dec:	4905      	ldr	r1, [pc, #20]	; (8002e04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002dee:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002df0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8002df2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002df4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002df6:	2200      	movs	r2, #0
 8002df8:	e7f3      	b.n	8002de2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002dfa:	bf00      	nop
 8002dfc:	2001384c 	.word	0x2001384c
 8002e00:	20013848 	.word	0x20013848
 8002e04:	2001384a 	.word	0x2001384a

08002e08 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002e08:	b570      	push	{r4, r5, r6, lr}
 8002e0a:	460d      	mov	r5, r1
 8002e0c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002e0e:	b935      	cbnz	r5, 8002e1e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002e10:	4b09      	ldr	r3, [pc, #36]	; (8002e38 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8002e12:	4a0a      	ldr	r2, [pc, #40]	; (8002e3c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002e14:	480a      	ldr	r0, [pc, #40]	; (8002e40 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002e16:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002e1a:	f02a feb5 	bl	802db88 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002e1e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002e22:	4b08      	ldr	r3, [pc, #32]	; (8002e44 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002e24:	3a00      	subs	r2, #0
 8002e26:	bf18      	it	ne
 8002e28:	2201      	movne	r2, #1
 8002e2a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002e2c:	6803      	ldr	r3, [r0, #0]
    }
 8002e2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8002e32:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002e36:	4718      	bx	r3
 8002e38:	0802edbc 	.word	0x0802edbc
 8002e3c:	0802edf4 	.word	0x0802edf4
 8002e40:	0802ee42 	.word	0x0802ee42
 8002e44:	20013852 	.word	0x20013852

08002e48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002e48:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002e4a:	4b09      	ldr	r3, [pc, #36]	; (8002e70 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002e4c:	881b      	ldrh	r3, [r3, #0]
 8002e4e:	428b      	cmp	r3, r1
 8002e50:	d803      	bhi.n	8002e5a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002e52:	4b08      	ldr	r3, [pc, #32]	; (8002e74 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002e54:	881b      	ldrh	r3, [r3, #0]
 8002e56:	4293      	cmp	r3, r2
 8002e58:	d905      	bls.n	8002e66 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8002e5a:	4b07      	ldr	r3, [pc, #28]	; (8002e78 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002e5c:	4a07      	ldr	r2, [pc, #28]	; (8002e7c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002e5e:	4808      	ldr	r0, [pc, #32]	; (8002e80 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002e60:	219e      	movs	r1, #158	; 0x9e
 8002e62:	f02a fe91 	bl	802db88 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8002e66:	4b07      	ldr	r3, [pc, #28]	; (8002e84 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002e68:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8002e6a:	4b07      	ldr	r3, [pc, #28]	; (8002e88 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002e6c:	801a      	strh	r2, [r3, #0]
    }
 8002e6e:	bd08      	pop	{r3, pc}
 8002e70:	20013848 	.word	0x20013848
 8002e74:	2001384a 	.word	0x2001384a
 8002e78:	0802ee87 	.word	0x0802ee87
 8002e7c:	0802eeea 	.word	0x0802eeea
 8002e80:	0802ee42 	.word	0x0802ee42
 8002e84:	2001384e 	.word	0x2001384e
 8002e88:	20013850 	.word	0x20013850

08002e8c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002e8c:	2101      	movs	r1, #1
{
 8002e8e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002e90:	2200      	movs	r2, #0
 8002e92:	4608      	mov	r0, r1
 8002e94:	f00c fdfa 	bl	800fa8c <osSemaphoreNew>
 8002e98:	4b0a      	ldr	r3, [pc, #40]	; (8002ec4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002e9a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002e9c:	b928      	cbnz	r0, 8002eaa <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002e9e:	4b0a      	ldr	r3, [pc, #40]	; (8002ec8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002ea0:	4a0a      	ldr	r2, [pc, #40]	; (8002ecc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002ea2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002ea4:	480a      	ldr	r0, [pc, #40]	; (8002ed0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002ea6:	f02a fe6f 	bl	802db88 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002eaa:	2200      	movs	r2, #0
 8002eac:	2104      	movs	r1, #4
 8002eae:	2001      	movs	r0, #1
 8002eb0:	f00c fea0 	bl	800fbf4 <osMessageQueueNew>
 8002eb4:	4b07      	ldr	r3, [pc, #28]	; (8002ed4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002eb6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002eb8:	b918      	cbnz	r0, 8002ec2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002eba:	4b07      	ldr	r3, [pc, #28]	; (8002ed8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002ebc:	4a03      	ldr	r2, [pc, #12]	; (8002ecc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002ebe:	212c      	movs	r1, #44	; 0x2c
 8002ec0:	e7f0      	b.n	8002ea4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002ec2:	bd08      	pop	{r3, pc}
 8002ec4:	20000920 	.word	0x20000920
 8002ec8:	0802f008 	.word	0x0802f008
 8002ecc:	0802f051 	.word	0x0802f051
 8002ed0:	0802f080 	.word	0x0802f080
 8002ed4:	2000091c 	.word	0x2000091c
 8002ed8:	0802f0fa 	.word	0x0802f0fa

08002edc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002edc:	4b02      	ldr	r3, [pc, #8]	; (8002ee8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002ede:	f04f 31ff 	mov.w	r1, #4294967295
 8002ee2:	6818      	ldr	r0, [r3, #0]
 8002ee4:	f00c be26 	b.w	800fb34 <osSemaphoreAcquire>
 8002ee8:	20000920 	.word	0x20000920

08002eec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002eec:	4b01      	ldr	r3, [pc, #4]	; (8002ef4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002eee:	6818      	ldr	r0, [r3, #0]
 8002ef0:	f00c be54 	b.w	800fb9c <osSemaphoreRelease>
 8002ef4:	20000920 	.word	0x20000920

08002ef8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002ef8:	4b02      	ldr	r3, [pc, #8]	; (8002f04 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002efa:	2100      	movs	r1, #0
 8002efc:	6818      	ldr	r0, [r3, #0]
 8002efe:	f00c be19 	b.w	800fb34 <osSemaphoreAcquire>
 8002f02:	bf00      	nop
 8002f04:	20000920 	.word	0x20000920

08002f08 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002f08:	f7ff bff0 	b.w	8002eec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002f0c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002f0c:	4803      	ldr	r0, [pc, #12]	; (8002f1c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002f0e:	4904      	ldr	r1, [pc, #16]	; (8002f20 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002f10:	6800      	ldr	r0, [r0, #0]
 8002f12:	2300      	movs	r3, #0
 8002f14:	461a      	mov	r2, r3
 8002f16:	f00c bea7 	b.w	800fc68 <osMessageQueuePut>
 8002f1a:	bf00      	nop
 8002f1c:	2000091c 	.word	0x2000091c
 8002f20:	20000014 	.word	0x20000014

08002f24 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002f24:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002f26:	4c08      	ldr	r4, [pc, #32]	; (8002f48 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002f28:	2300      	movs	r3, #0
 8002f2a:	461a      	mov	r2, r3
 8002f2c:	a901      	add	r1, sp, #4
 8002f2e:	6820      	ldr	r0, [r4, #0]
 8002f30:	f00c fed0 	bl	800fcd4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002f34:	6820      	ldr	r0, [r4, #0]
 8002f36:	f04f 33ff 	mov.w	r3, #4294967295
 8002f3a:	2200      	movs	r2, #0
 8002f3c:	a901      	add	r1, sp, #4
 8002f3e:	f00c fec9 	bl	800fcd4 <osMessageQueueGet>
}
 8002f42:	b002      	add	sp, #8
 8002f44:	bd10      	pop	{r4, pc}
 8002f46:	bf00      	nop
 8002f48:	2000091c 	.word	0x2000091c

08002f4c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002f4c:	4770      	bx	lr

08002f4e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002f4e:	2000      	movs	r0, #0
 8002f50:	4770      	bx	lr

08002f52 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002f52:	4770      	bx	lr

08002f54 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002f54:	4770      	bx	lr

08002f56 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8002f56:	2000      	movs	r0, #0
 8002f58:	4770      	bx	lr

08002f5a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8002f5a:	4770      	bx	lr

08002f5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002f5c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002f5e:	4a03      	ldr	r2, [pc, #12]	; (8002f6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002f60:	4b03      	ldr	r3, [pc, #12]	; (8002f70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002f62:	4804      	ldr	r0, [pc, #16]	; (8002f74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002f64:	2122      	movs	r1, #34	; 0x22
 8002f66:	f02a fe0f 	bl	802db88 <__assert_func>
 8002f6a:	bf00      	nop
 8002f6c:	0802f15f 	.word	0x0802f15f
 8002f70:	0802f13c 	.word	0x0802f13c
 8002f74:	0802f19d 	.word	0x0802f19d

08002f78 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8002f78:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002f7a:	4a03      	ldr	r2, [pc, #12]	; (8002f88 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002f7c:	4b03      	ldr	r3, [pc, #12]	; (8002f8c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002f7e:	4804      	ldr	r0, [pc, #16]	; (8002f90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002f80:	2127      	movs	r1, #39	; 0x27
 8002f82:	f02a fe01 	bl	802db88 <__assert_func>
 8002f86:	bf00      	nop
 8002f88:	0802f215 	.word	0x0802f215
 8002f8c:	0802f13c 	.word	0x0802f13c
 8002f90:	0802f19d 	.word	0x0802f19d

08002f94 <_ZN8STM32DMAD0Ev>:
 8002f94:	b510      	push	{r4, lr}
 8002f96:	2144      	movs	r1, #68	; 0x44
 8002f98:	4604      	mov	r4, r0
 8002f9a:	f029 ff0e 	bl	802cdba <_ZdlPvj>
 8002f9e:	4620      	mov	r0, r4
 8002fa0:	bd10      	pop	{r4, pc}
	...

08002fa4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002fa4:	b538      	push	{r3, r4, r5, lr}
 8002fa6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002fa8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002faa:	2500      	movs	r5, #0
 8002fac:	4b06      	ldr	r3, [pc, #24]	; (8002fc8 <_ZN8STM32DMAC1Ev+0x24>)
 8002fae:	7225      	strb	r5, [r4, #8]
 8002fb0:	300c      	adds	r0, #12
 8002fb2:	6060      	str	r0, [r4, #4]
 8002fb4:	7265      	strb	r5, [r4, #9]
 8002fb6:	2201      	movs	r2, #1
 8002fb8:	f841 3b20 	str.w	r3, [r1], #32
 8002fbc:	f011 fabe 	bl	801453c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002fc0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002fc2:	4620      	mov	r0, r4
 8002fc4:	bd38      	pop	{r3, r4, r5, pc}
 8002fc6:	bf00      	nop
 8002fc8:	0802f25c 	.word	0x0802f25c

08002fcc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002fcc:	2001      	movs	r0, #1
 8002fce:	4770      	bx	lr

08002fd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002fd0:	2038      	movs	r0, #56	; 0x38
 8002fd2:	4770      	bx	lr

08002fd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002fd4:	2338      	movs	r3, #56	; 0x38
 8002fd6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002fda:	3008      	adds	r0, #8
 8002fdc:	4770      	bx	lr

08002fde <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002fde:	2338      	movs	r3, #56	; 0x38
 8002fe0:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002fe4:	3008      	adds	r0, #8
 8002fe6:	4770      	bx	lr

08002fe8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002fe8:	2001      	movs	r0, #1
 8002fea:	4770      	bx	lr

08002fec <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002fec:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002ff0:	4770      	bx	lr

08002ff2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002ff2:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002ff6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002ffa:	3008      	adds	r0, #8
 8002ffc:	4770      	bx	lr

08002ffe <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002ffe:	f641 5304 	movw	r3, #7428	; 0x1d04
 8003002:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8003006:	3008      	adds	r0, #8
 8003008:	4770      	bx	lr

0800300a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800300a:	2001      	movs	r0, #1
 800300c:	4770      	bx	lr

0800300e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800300e:	2010      	movs	r0, #16
 8003010:	4770      	bx	lr

08003012 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8003012:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8003016:	3008      	adds	r0, #8
 8003018:	4770      	bx	lr

0800301a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800301a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800301e:	3008      	adds	r0, #8
 8003020:	4770      	bx	lr

08003022 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8003022:	4608      	mov	r0, r1
 8003024:	f002 bb40 	b.w	80056a8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08003028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8003028:	b510      	push	{r4, lr}
 800302a:	4b03      	ldr	r3, [pc, #12]	; (8003038 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 800302c:	6003      	str	r3, [r0, #0]
 800302e:	4604      	mov	r4, r0
 8003030:	f00f faad 	bl	801258e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8003034:	4620      	mov	r0, r4
 8003036:	bd10      	pop	{r4, pc}
 8003038:	0802f314 	.word	0x0802f314

0800303c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 800303c:	b510      	push	{r4, lr}
 800303e:	4604      	mov	r4, r0
 8003040:	f7ff fff2 	bl	8003028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8003044:	4620      	mov	r0, r4
 8003046:	2140      	movs	r1, #64	; 0x40
 8003048:	f029 feb7 	bl	802cdba <_ZdlPvj>
 800304c:	4620      	mov	r0, r4
 800304e:	bd10      	pop	{r4, pc}

08003050 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8003050:	b510      	push	{r4, lr}
 8003052:	4b03      	ldr	r3, [pc, #12]	; (8003060 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8003054:	6003      	str	r3, [r0, #0]
 8003056:	4604      	mov	r4, r0
 8003058:	f00f fa99 	bl	801258e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800305c:	4620      	mov	r0, r4
 800305e:	bd10      	pop	{r4, pc}
 8003060:	0802f2e0 	.word	0x0802f2e0

08003064 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8003064:	b510      	push	{r4, lr}
 8003066:	4604      	mov	r4, r0
 8003068:	f7ff fff2 	bl	8003050 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800306c:	4620      	mov	r0, r4
 800306e:	f641 510c 	movw	r1, #7436	; 0x1d0c
 8003072:	f029 fea2 	bl	802cdba <_ZdlPvj>
 8003076:	4620      	mov	r0, r4
 8003078:	bd10      	pop	{r4, pc}
	...

0800307c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800307c:	b510      	push	{r4, lr}
 800307e:	4b03      	ldr	r3, [pc, #12]	; (800308c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8003080:	6003      	str	r3, [r0, #0]
 8003082:	4604      	mov	r4, r0
 8003084:	f00f fa83 	bl	801258e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8003088:	4620      	mov	r0, r4
 800308a:	bd10      	pop	{r4, pc}
 800308c:	0802f2ac 	.word	0x0802f2ac

08003090 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8003090:	b510      	push	{r4, lr}
 8003092:	4604      	mov	r4, r0
 8003094:	f7ff fff2 	bl	800307c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8003098:	4620      	mov	r0, r4
 800309a:	2118      	movs	r1, #24
 800309c:	f029 fe8d 	bl	802cdba <_ZdlPvj>
 80030a0:	4620      	mov	r0, r4
 80030a2:	bd10      	pop	{r4, pc}

080030a4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80030a4:	b510      	push	{r4, lr}
 80030a6:	4b09      	ldr	r3, [pc, #36]	; (80030cc <_ZN12FrontendHeapD1Ev+0x28>)
 80030a8:	6003      	str	r3, [r0, #0]
 80030aa:	4604      	mov	r4, r0
 80030ac:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 80030b0:	3018      	adds	r0, #24
 80030b2:	f7ff ffb9 	bl	8003028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80030b6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80030ba:	f7ff ffc9 	bl	8003050 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80030be:	f104 0014 	add.w	r0, r4, #20
 80030c2:	f7ff ffdb 	bl	800307c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80030c6:	4620      	mov	r0, r4
 80030c8:	bd10      	pop	{r4, pc}
 80030ca:	bf00      	nop
 80030cc:	0802f348 	.word	0x0802f348

080030d0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80030d0:	b508      	push	{r3, lr}
 80030d2:	4802      	ldr	r0, [pc, #8]	; (80030dc <__tcf_0+0xc>)
 80030d4:	f7ff ffe6 	bl	80030a4 <_ZN12FrontendHeapD1Ev>
 80030d8:	bd08      	pop	{r3, pc}
 80030da:	bf00      	nop
 80030dc:	20000928 	.word	0x20000928

080030e0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80030e0:	b510      	push	{r4, lr}
 80030e2:	4604      	mov	r4, r0
 80030e4:	f7ff ffde 	bl	80030a4 <_ZN12FrontendHeapD1Ev>
 80030e8:	4620      	mov	r0, r4
 80030ea:	f641 61dc 	movw	r1, #7900	; 0x1edc
 80030ee:	f029 fe64 	bl	802cdba <_ZdlPvj>
 80030f2:	4620      	mov	r0, r4
 80030f4:	bd10      	pop	{r4, pc}
	...

080030f8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80030f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80030fc:	f000 fa5c 	bl	80035b8 <_ZN14BitmapDatabase11getInstanceEv>
 8003100:	4605      	mov	r5, r0
 8003102:	f000 fa5d 	bl	80035c0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8003106:	2400      	movs	r4, #0
 8003108:	4601      	mov	r1, r0
 800310a:	4623      	mov	r3, r4
 800310c:	4628      	mov	r0, r5
 800310e:	4622      	mov	r2, r4
 8003110:	9400      	str	r4, [sp, #0]
 8003112:	f019 f931 	bl	801c378 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8003116:	4b26      	ldr	r3, [pc, #152]	; (80031b0 <touchgfx_init+0xb8>)
 8003118:	4a26      	ldr	r2, [pc, #152]	; (80031b4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 800311a:	4d27      	ldr	r5, [pc, #156]	; (80031b8 <touchgfx_init+0xc0>)
 800311c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800311e:	4620      	mov	r0, r4
 8003120:	f007 fb22 	bl	800a768 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8003124:	4825      	ldr	r0, [pc, #148]	; (80031bc <touchgfx_init+0xc4>)
 8003126:	f019 f88f 	bl	801c248 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800312a:	682b      	ldr	r3, [r5, #0]
 800312c:	f3bf 8f5b 	dmb	ish
 8003130:	07db      	lsls	r3, r3, #31
 8003132:	d436      	bmi.n	80031a2 <touchgfx_init+0xaa>
 8003134:	4628      	mov	r0, r5
 8003136:	f029 fe42 	bl	802cdbe <__cxa_guard_acquire>
 800313a:	b390      	cbz	r0, 80031a2 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800313c:	4c20      	ldr	r4, [pc, #128]	; (80031c0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800313e:	4b21      	ldr	r3, [pc, #132]	; (80031c4 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8003140:	4f21      	ldr	r7, [pc, #132]	; (80031c8 <touchgfx_init+0xd0>)
 8003142:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8003144:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8003148:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800314c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8003150:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8003152:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8003156:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8003158:	6126      	str	r6, [r4, #16]
 800315a:	f00f fa19 	bl	8012590 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800315e:	4b1b      	ldr	r3, [pc, #108]	; (80031cc <touchgfx_init+0xd4>)
 8003160:	6163      	str	r3, [r4, #20]
 8003162:	4640      	mov	r0, r8
 8003164:	f00f fa14 	bl	8012590 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8003168:	4b19      	ldr	r3, [pc, #100]	; (80031d0 <touchgfx_init+0xd8>)
 800316a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800316c:	4638      	mov	r0, r7
 800316e:	f00f fa0f 	bl	8012590 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8003172:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003176:	4a17      	ldr	r2, [pc, #92]	; (80031d4 <touchgfx_init+0xdc>)
 8003178:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 800317c:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 8003180:	f007 ff50 	bl	800b024 <_ZN5ModelC1Ev>
 8003184:	4622      	mov	r2, r4
 8003186:	f1a6 0108 	sub.w	r1, r6, #8
 800318a:	4630      	mov	r0, r6
 800318c:	f007 fc72 	bl	800aa74 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8003190:	4630      	mov	r0, r6
 8003192:	f002 fa89 	bl	80056a8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8003196:	4810      	ldr	r0, [pc, #64]	; (80031d8 <touchgfx_init+0xe0>)
 8003198:	f02a fd14 	bl	802dbc4 <atexit>
 800319c:	4628      	mov	r0, r5
 800319e:	f029 fe1a 	bl	802cdd6 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80031a2:	480e      	ldr	r0, [pc, #56]	; (80031dc <touchgfx_init+0xe4>)
}
 80031a4:	b002      	add	sp, #8
 80031a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80031aa:	f7ff bdb5 	b.w	8002d18 <_ZN11TouchGFXHAL10initializeEv>
 80031ae:	bf00      	nop
 80031b0:	200138b8 	.word	0x200138b8
 80031b4:	200028c8 	.word	0x200028c8
 80031b8:	20000924 	.word	0x20000924
 80031bc:	20000018 	.word	0x20000018
 80031c0:	20000928 	.word	0x20000928
 80031c4:	0802f348 	.word	0x0802f348
 80031c8:	20002660 	.word	0x20002660
 80031cc:	0802f2ac 	.word	0x0802f2ac
 80031d0:	0802f2e0 	.word	0x0802f2e0
 80031d4:	0802f314 	.word	0x0802f314
 80031d8:	080030d1 	.word	0x080030d1
 80031dc:	2000284c 	.word	0x2000284c

080031e0 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 80031e0:	4770      	bx	lr
	...

080031e4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80031e4:	4801      	ldr	r0, [pc, #4]	; (80031ec <touchgfx_taskEntry+0x8>)
 80031e6:	f7ff bda5 	b.w	8002d34 <_ZN11TouchGFXHAL9taskEntryEv>
 80031ea:	bf00      	nop
 80031ec:	2000284c 	.word	0x2000284c

080031f0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80031f0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80031f2:	4e22      	ldr	r6, [pc, #136]	; (800327c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 80031f4:	4c22      	ldr	r4, [pc, #136]	; (8003280 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 80031f6:	4d23      	ldr	r5, [pc, #140]	; (8003284 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 80031f8:	4b23      	ldr	r3, [pc, #140]	; (8003288 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80031fa:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80031fc:	4630      	mov	r0, r6
 80031fe:	f7ff fed1 	bl	8002fa4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8003202:	4628      	mov	r0, r5
 8003204:	f01d fb84 	bl	8020910 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8003208:	4b20      	ldr	r3, [pc, #128]	; (800328c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800320a:	4821      	ldr	r0, [pc, #132]	; (8003290 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 800320c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 800320e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8003210:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8003214:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8003218:	491e      	ldr	r1, [pc, #120]	; (8003294 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800321a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 800321c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8003220:	491d      	ldr	r1, [pc, #116]	; (8003298 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8003222:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8003224:	491d      	ldr	r1, [pc, #116]	; (800329c <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8003226:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800322a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800322c:	21f0      	movs	r1, #240	; 0xf0
 800322e:	8001      	strh	r1, [r0, #0]
 8003230:	481b      	ldr	r0, [pc, #108]	; (80032a0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8003232:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8003234:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8003236:	481b      	ldr	r0, [pc, #108]	; (80032a4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8003238:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800323c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8003240:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8003244:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8003248:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800324c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8003250:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8003254:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8003258:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 800325c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8003260:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8003262:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8003266:	8001      	strh	r1, [r0, #0]
 8003268:	480f      	ldr	r0, [pc, #60]	; (80032a8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 800326a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800326c:	490f      	ldr	r1, [pc, #60]	; (80032ac <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 800326e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8003270:	2201      	movs	r2, #1
 8003272:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8003276:	4a0e      	ldr	r2, [pc, #56]	; (80032b0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8003278:	601a      	str	r2, [r3, #0]
}
 800327a:	bd70      	pop	{r4, r5, r6, pc}
 800327c:	20002808 	.word	0x20002808
 8003280:	20002804 	.word	0x20002804
 8003284:	200028cc 	.word	0x200028cc
 8003288:	0802edac 	.word	0x0802edac
 800328c:	2000284c 	.word	0x2000284c
 8003290:	20013848 	.word	0x20013848
 8003294:	01000001 	.word	0x01000001
 8003298:	01010000 	.word	0x01010000
 800329c:	20013854 	.word	0x20013854
 80032a0:	2001384e 	.word	0x2001384e
 80032a4:	2001384a 	.word	0x2001384a
 80032a8:	20013850 	.word	0x20013850
 80032ac:	2001384c 	.word	0x2001384c
 80032b0:	0802ef38 	.word	0x0802ef38

080032b4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80032b4:	2000      	movs	r0, #0
 80032b6:	4770      	bx	lr

080032b8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80032b8:	8081      	strh	r1, [r0, #4]
    }
 80032ba:	4770      	bx	lr

080032bc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80032bc:	80c1      	strh	r1, [r0, #6]
    }
 80032be:	4770      	bx	lr

080032c0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80032c0:	8101      	strh	r1, [r0, #8]
    }
 80032c2:	4770      	bx	lr

080032c4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80032c4:	8141      	strh	r1, [r0, #10]
    }
 80032c6:	4770      	bx	lr

080032c8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80032c8:	4770      	bx	lr

080032ca <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80032ca:	4770      	bx	lr

080032cc <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80032cc:	4770      	bx	lr

080032ce <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80032ce:	4770      	bx	lr

080032d0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80032d0:	4770      	bx	lr

080032d2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80032d2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80032d4:	88c4      	ldrh	r4, [r0, #6]
 80032d6:	6803      	ldr	r3, [r0, #0]
 80032d8:	1b12      	subs	r2, r2, r4
 80032da:	8884      	ldrh	r4, [r0, #4]
 80032dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80032de:	1b09      	subs	r1, r1, r4
 80032e0:	b212      	sxth	r2, r2
    }
 80032e2:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80032e6:	b209      	sxth	r1, r1
 80032e8:	4718      	bx	r3

080032ea <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80032ea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80032ee:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80032f0:	f04f 33ff 	mov.w	r3, #4294967295
 80032f4:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80032f6:	6813      	ldr	r3, [r2, #0]
 80032f8:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80032fa:	6010      	str	r0, [r2, #0]
    }
 80032fc:	4770      	bx	lr

080032fe <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80032fe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8003302:	b11a      	cbz	r2, 800330c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8003304:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8003308:	b102      	cbz	r2, 800330c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800330a:	6018      	str	r0, [r3, #0]
        }
    }
 800330c:	4770      	bx	lr

0800330e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800330e:	2000      	movs	r0, #0
 8003310:	4770      	bx	lr

08003312 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003312:	888b      	ldrh	r3, [r1, #4]
 8003314:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003316:	2001      	movs	r0, #1
 8003318:	4770      	bx	lr

0800331a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800331a:	4770      	bx	lr

0800331c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800331c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003320:	4770      	bx	lr

08003322 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003322:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003326:	4770      	bx	lr

08003328 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003328:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800332a:	2200      	movs	r2, #0
        return rect.width;
 800332c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003330:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003334:	8002      	strh	r2, [r0, #0]
 8003336:	8042      	strh	r2, [r0, #2]
 8003338:	8084      	strh	r4, [r0, #4]
 800333a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 800333c:	bd10      	pop	{r4, pc}

0800333e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800333e:	2200      	movs	r2, #0
 8003340:	8002      	strh	r2, [r0, #0]
 8003342:	8042      	strh	r2, [r0, #2]
 8003344:	8082      	strh	r2, [r0, #4]
 8003346:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003348:	4770      	bx	lr
	...

0800334c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800334c:	4b02      	ldr	r3, [pc, #8]	; (8003358 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 800334e:	2290      	movs	r2, #144	; 0x90
 8003350:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8003354:	4770      	bx	lr
 8003356:	bf00      	nop
 8003358:	e000e100 	.word	0xe000e100

0800335c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800335c:	4b02      	ldr	r3, [pc, #8]	; (8003368 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 800335e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003362:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8003364:	4770      	bx	lr
 8003366:	bf00      	nop
 8003368:	e000e100 	.word	0xe000e100

0800336c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800336c:	4a09      	ldr	r2, [pc, #36]	; (8003394 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800336e:	490a      	ldr	r1, [pc, #40]	; (8003398 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8003370:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8003372:	480a      	ldr	r0, [pc, #40]	; (800339c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8003374:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003378:	3b01      	subs	r3, #1
 800337a:	b29b      	uxth	r3, r3
 800337c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800337e:	6911      	ldr	r1, [r2, #16]
 8003380:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8003384:	3901      	subs	r1, #1
 8003386:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8003388:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800338a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800338c:	f043 0301 	orr.w	r3, r3, #1
 8003390:	6353      	str	r3, [r2, #52]	; 0x34
}
 8003392:	4770      	bx	lr
 8003394:	40016800 	.word	0x40016800
 8003398:	20002952 	.word	0x20002952
 800339c:	20002950 	.word	0x20002950

080033a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80033a0:	4b01      	ldr	r3, [pc, #4]	; (80033a8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80033a2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80033a6:	4770      	bx	lr
 80033a8:	40016800 	.word	0x40016800

080033ac <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80033ac:	4b02      	ldr	r3, [pc, #8]	; (80033b8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80033ae:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80033b0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80033b4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80033b6:	4770      	bx	lr
 80033b8:	40016800 	.word	0x40016800

080033bc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80033bc:	b570      	push	{r4, r5, r6, lr}
 80033be:	4604      	mov	r4, r0
    HAL::initialize();
 80033c0:	f010 fa25 	bl	801380e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80033c4:	6823      	ldr	r3, [r4, #0]
 80033c6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80033c8:	f015 fb9a 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 80033cc:	4601      	mov	r1, r0
 80033ce:	4620      	mov	r0, r4
 80033d0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80033d2:	6823      	ldr	r3, [r4, #0]
 80033d4:	4a05      	ldr	r2, [pc, #20]	; (80033ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80033d6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80033da:	4620      	mov	r0, r4
 80033dc:	46ac      	mov	ip, r5
 80033de:	2300      	movs	r3, #0
}
 80033e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80033e4:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80033e8:	4760      	bx	ip
 80033ea:	bf00      	nop
 80033ec:	d004b000 	.word	0xd004b000

080033f0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80033f0:	f010 b9f4 	b.w	80137dc <_ZN8touchgfx3HAL10beginFrameEv>

080033f4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80033f4:	f010 b9fe 	b.w	80137f4 <_ZN8touchgfx3HAL8endFrameEv>

080033f8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80033f8:	f010 b9b9 	b.w	801376e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080033fc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80033fc:	f010 bb1b 	b.w	8013a36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08003400 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8003400:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8003404:	b112      	cbz	r2, 800340c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8003406:	6803      	ldr	r3, [r0, #0]
 8003408:	695b      	ldr	r3, [r3, #20]
 800340a:	4718      	bx	r3
    }
 800340c:	4770      	bx	lr
	...

08003410 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003410:	4b04      	ldr	r3, [pc, #16]	; (8003424 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8003412:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003416:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800341a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800341e:	f3bf 8f6f 	isb	sy
}
 8003422:	4770      	bx	lr
 8003424:	e000e100 	.word	0xe000e100

08003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003428:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800342a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800342c:	4e12      	ldr	r6, [pc, #72]	; (8003478 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800342e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003430:	4b12      	ldr	r3, [pc, #72]	; (800347c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003432:	6003      	str	r3, [r0, #0]
 8003434:	6833      	ldr	r3, [r6, #0]
 8003436:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 800343a:	4605      	mov	r5, r0
 800343c:	b10a      	cbz	r2, 8003442 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800343e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003440:	b900      	cbnz	r0, 8003444 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003442:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003444:	6803      	ldr	r3, [r0, #0]
 8003446:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003448:	4798      	blx	r3
        return auxiliaryLCD;
 800344a:	6833      	ldr	r3, [r6, #0]
 800344c:	fab0 f480 	clz	r4, r0
 8003450:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003452:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003454:	b130      	cbz	r0, 8003464 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003456:	6803      	ldr	r3, [r0, #0]
 8003458:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800345a:	4798      	blx	r3
 800345c:	2800      	cmp	r0, #0
 800345e:	bf08      	it	eq
 8003460:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003464:	b92c      	cbnz	r4, 8003472 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003466:	4b06      	ldr	r3, [pc, #24]	; (8003480 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003468:	4a06      	ldr	r2, [pc, #24]	; (8003484 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800346a:	4807      	ldr	r0, [pc, #28]	; (8003488 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800346c:	212c      	movs	r1, #44	; 0x2c
 800346e:	f02a fb8b 	bl	802db88 <__assert_func>
    }
 8003472:	4628      	mov	r0, r5
 8003474:	bd70      	pop	{r4, r5, r6, pc}
 8003476:	bf00      	nop
 8003478:	20013854 	.word	0x20013854
 800347c:	0802f458 	.word	0x0802f458
 8003480:	0802f354 	.word	0x0802f354
 8003484:	0802f3b2 	.word	0x0802f3b2
 8003488:	0802f3eb 	.word	0x0802f3eb

0800348c <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 800348c:	4770      	bx	lr
	...

08003490 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8003490:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8003494:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 8003496:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 800349a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 800349e:	d105      	bne.n	80034ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80034a0:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80034a4:	4281      	cmp	r1, r0
 80034a6:	d8fb      	bhi.n	80034a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80034a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80034ac:	4f17      	ldr	r7, [pc, #92]	; (800350c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034ae:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034b2:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80034b6:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034ba:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034be:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80034c0:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80034c2:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034c4:	b2db      	uxtb	r3, r3
 80034c6:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80034c8:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034cc:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034d0:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034d4:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034d8:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80034dc:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034e0:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034e4:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034e8:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034ea:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034ee:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80034f2:	fb03 4e0e 	mla	lr, r3, lr, r4
 80034f6:	fbbe fef5 	udiv	lr, lr, r5
 80034fa:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034fe:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8003502:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8003506:	4281      	cmp	r1, r0
 8003508:	d8de      	bhi.n	80034c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800350a:	e7cd      	b.n	80034a8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 800350c:	fffff800 	.word	0xfffff800

08003510 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8003510:	b510      	push	{r4, lr}
        return instance;
 8003512:	4c14      	ldr	r4, [pc, #80]	; (8003564 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8003514:	6823      	ldr	r3, [r4, #0]
 8003516:	b323      	cbz	r3, 8003562 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8003518:	4b13      	ldr	r3, [pc, #76]	; (8003568 <HAL_LTDC_LineEventCallback+0x58>)
 800351a:	4a14      	ldr	r2, [pc, #80]	; (800356c <HAL_LTDC_LineEventCallback+0x5c>)
 800351c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800351e:	8811      	ldrh	r1, [r2, #0]
 8003520:	428b      	cmp	r3, r1
 8003522:	d113      	bne.n	800354c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8003524:	4b12      	ldr	r3, [pc, #72]	; (8003570 <HAL_LTDC_LineEventCallback+0x60>)
 8003526:	8819      	ldrh	r1, [r3, #0]
 8003528:	f00a fae8 	bl	800dafc <HAL_LTDC_ProgramLineEvent>
 800352c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800352e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8003532:	3301      	adds	r3, #1
 8003534:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8003538:	f7ff fce8 	bl	8002f0c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800353c:	6820      	ldr	r0, [r4, #0]
 800353e:	f010 fea5 	bl	801428c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8003542:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8003546:	2000      	movs	r0, #0
 8003548:	f7ff bb60 	b.w	8002c0c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800354c:	f00a fad6 	bl	800dafc <HAL_LTDC_ProgramLineEvent>
        return instance;
 8003550:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8003552:	6803      	ldr	r3, [r0, #0]
 8003554:	6a1b      	ldr	r3, [r3, #32]
 8003556:	4798      	blx	r3
    }
 8003558:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800355c:	2000      	movs	r0, #0
 800355e:	f7ff bb6d 	b.w	8002c3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8003562:	bd10      	pop	{r4, pc}
 8003564:	20013854 	.word	0x20013854
 8003568:	40016800 	.word	0x40016800
 800356c:	20002952 	.word	0x20002952
 8003570:	20002950 	.word	0x20002950

08003574 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8003574:	4770      	bx	lr

08003576 <_ZN23ApplicationFontProviderD0Ev>:
 8003576:	b510      	push	{r4, lr}
 8003578:	2104      	movs	r1, #4
 800357a:	4604      	mov	r4, r0
 800357c:	f029 fc1d 	bl	802cdba <_ZdlPvj>
 8003580:	4620      	mov	r0, r4
 8003582:	bd10      	pop	{r4, pc}

08003584 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8003584:	b508      	push	{r3, lr}
    switch (typography)
 8003586:	2903      	cmp	r1, #3
 8003588:	d813      	bhi.n	80035b2 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800358a:	e8df f001 	tbb	[pc, r1]
 800358e:	0602      	.short	0x0602
 8003590:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8003592:	f007 f935 	bl	800a800 <_ZN17TypedTextDatabase8getFontsEv>
 8003596:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8003598:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800359a:	f007 f931 	bl	800a800 <_ZN17TypedTextDatabase8getFontsEv>
 800359e:	6840      	ldr	r0, [r0, #4]
 80035a0:	e7fa      	b.n	8003598 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80035a2:	f007 f92d 	bl	800a800 <_ZN17TypedTextDatabase8getFontsEv>
 80035a6:	6880      	ldr	r0, [r0, #8]
 80035a8:	e7f6      	b.n	8003598 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80035aa:	f007 f929 	bl	800a800 <_ZN17TypedTextDatabase8getFontsEv>
 80035ae:	68c0      	ldr	r0, [r0, #12]
 80035b0:	e7f2      	b.n	8003598 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80035b2:	2000      	movs	r0, #0
 80035b4:	e7f0      	b.n	8003598 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

080035b8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80035b8:	4800      	ldr	r0, [pc, #0]	; (80035bc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80035ba:	4770      	bx	lr
 80035bc:	0802f484 	.word	0x0802f484

080035c0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80035c0:	200c      	movs	r0, #12
 80035c2:	4770      	bx	lr

080035c4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80035c4:	b513      	push	{r0, r1, r4, lr}
 80035c6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80035c8:	b151      	cbz	r1, 80035e0 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80035ca:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80035cc:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80035ce:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80035d2:	aa01      	add	r2, sp, #4
 80035d4:	689c      	ldr	r4, [r3, #8]
 80035d6:	f10d 0303 	add.w	r3, sp, #3
 80035da:	47a0      	blx	r4
        return glyph;
    }
 80035dc:	b002      	add	sp, #8
 80035de:	bd10      	pop	{r4, pc}
            return 0;
 80035e0:	4608      	mov	r0, r1
 80035e2:	e7fb      	b.n	80035dc <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080035e4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80035e4:	89c0      	ldrh	r0, [r0, #14]
 80035e6:	4770      	bx	lr

080035e8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80035e8:	8a00      	ldrh	r0, [r0, #16]
 80035ea:	4770      	bx	lr

080035ec <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80035ec:	88c0      	ldrh	r0, [r0, #6]
 80035ee:	4770      	bx	lr

080035f0 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80035f0:	8880      	ldrh	r0, [r0, #4]
 80035f2:	4770      	bx	lr

080035f4 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80035f4:	7a80      	ldrb	r0, [r0, #10]
    }
 80035f6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80035fa:	4770      	bx	lr

080035fc <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80035fc:	7a80      	ldrb	r0, [r0, #10]
    }
 80035fe:	09c0      	lsrs	r0, r0, #7
 8003600:	4770      	bx	lr

08003602 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003602:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003604:	4770      	bx	lr

08003606 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003606:	4770      	bx	lr

08003608 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003608:	4770      	bx	lr

0800360a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800360a:	4770      	bx	lr

0800360c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800360c:	4770      	bx	lr

0800360e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800360e:	4770      	bx	lr

08003610 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8003610:	4770      	bx	lr

08003612 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8003612:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8003614:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8003616:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8003618:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800361a:	466d      	mov	r5, sp
 800361c:	4601      	mov	r1, r0
 800361e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8003622:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003624:	4628      	mov	r0, r5
 8003626:	4798      	blx	r3
 8003628:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800362c:	343c      	adds	r4, #60	; 0x3c
 800362e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003632:	b005      	add	sp, #20
 8003634:	bd30      	pop	{r4, r5, pc}

08003636 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8003636:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8003638:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800363a:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 800363c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800363e:	466d      	mov	r5, sp
 8003640:	4601      	mov	r1, r0
 8003642:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8003646:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003648:	4628      	mov	r0, r5
 800364a:	4798      	blx	r3
 800364c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003650:	343c      	adds	r4, #60	; 0x3c
 8003652:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003656:	b005      	add	sp, #20
 8003658:	bd30      	pop	{r4, r5, pc}

0800365a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800365a:	2200      	movs	r2, #0
 800365c:	8002      	strh	r2, [r0, #0]
 800365e:	8042      	strh	r2, [r0, #2]
 8003660:	8082      	strh	r2, [r0, #4]
 8003662:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003664:	4770      	bx	lr

08003666 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003666:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800366a:	4770      	bx	lr

0800366c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800366c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800366e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003670:	4604      	mov	r4, r0
        setX(x);
 8003672:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003674:	4615      	mov	r5, r2
        setX(x);
 8003676:	4798      	blx	r3
        setBaselineY(baselineY);
 8003678:	6823      	ldr	r3, [r4, #0]
 800367a:	4629      	mov	r1, r5
 800367c:	4620      	mov	r0, r4
 800367e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8003680:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8003684:	4718      	bx	r3

08003686 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8003686:	2000      	movs	r0, #0
 8003688:	4770      	bx	lr

0800368a <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800368a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800368c:	4770      	bx	lr

0800368e <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 800368e:	4770      	bx	lr

08003690 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 8003690:	6803      	ldr	r3, [r0, #0]
 8003692:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003694:	4718      	bx	r3

08003696 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction_begin
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 8003696:	6803      	ldr	r3, [r0, #0]
 8003698:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800369a:	4718      	bx	r3

0800369c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800369c:	4770      	bx	lr

0800369e <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800369e:	4770      	bx	lr

080036a0 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 80036a0:	4770      	bx	lr

080036a2 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80036a2:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80036a4:	68c2      	ldr	r2, [r0, #12]
 80036a6:	6844      	ldr	r4, [r0, #4]
 80036a8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80036aa:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80036ac:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80036b0:	07d2      	lsls	r2, r2, #31
 80036b2:	bf48      	it	mi
 80036b4:	5962      	ldrmi	r2, [r4, r5]
 80036b6:	689b      	ldr	r3, [r3, #8]
    }
 80036b8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80036ba:	bf48      	it	mi
 80036bc:	58d3      	ldrmi	r3, [r2, r3]
 80036be:	4718      	bx	r3

080036c0 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80036c0:	6843      	ldr	r3, [r0, #4]
 80036c2:	b12b      	cbz	r3, 80036d0 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80036c4:	6883      	ldr	r3, [r0, #8]
 80036c6:	b92b      	cbnz	r3, 80036d4 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80036c8:	68c0      	ldr	r0, [r0, #12]
 80036ca:	f000 0001 	and.w	r0, r0, #1
 80036ce:	4770      	bx	lr
 80036d0:	4618      	mov	r0, r3
 80036d2:	4770      	bx	lr
 80036d4:	2001      	movs	r0, #1
    }
 80036d6:	4770      	bx	lr

080036d8 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80036d8:	b510      	push	{r4, lr}
    }
 80036da:	2108      	movs	r1, #8
    virtual ~TypedText()
 80036dc:	4604      	mov	r4, r0
    }
 80036de:	f029 fb6c 	bl	802cdba <_ZdlPvj>
 80036e2:	4620      	mov	r0, r4
 80036e4:	bd10      	pop	{r4, pc}

080036e6 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80036e6:	b510      	push	{r4, lr}
 80036e8:	214c      	movs	r1, #76	; 0x4c
 80036ea:	4604      	mov	r4, r0
 80036ec:	f029 fb65 	bl	802cdba <_ZdlPvj>
 80036f0:	4620      	mov	r0, r4
 80036f2:	bd10      	pop	{r4, pc}

080036f4 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80036f4:	b510      	push	{r4, lr}
 80036f6:	2110      	movs	r1, #16
 80036f8:	4604      	mov	r4, r0
 80036fa:	f029 fb5e 	bl	802cdba <_ZdlPvj>
 80036fe:	4620      	mov	r0, r4
 8003700:	bd10      	pop	{r4, pc}

08003702 <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 8003702:	b510      	push	{r4, lr}
 8003704:	218c      	movs	r1, #140	; 0x8c
 8003706:	4604      	mov	r4, r0
 8003708:	f029 fb57 	bl	802cdba <_ZdlPvj>
 800370c:	4620      	mov	r0, r4
 800370e:	bd10      	pop	{r4, pc}

08003710 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003710:	b538      	push	{r3, r4, r5, lr}
 8003712:	4605      	mov	r5, r0
 8003714:	4b05      	ldr	r3, [pc, #20]	; (800372c <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 8003716:	f845 3be0 	str.w	r3, [r5], #224
 800371a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800371c:	f013 fcee 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003720:	4628      	mov	r0, r5
 8003722:	f00f fba3 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003726:	4620      	mov	r0, r4
 8003728:	bd38      	pop	{r3, r4, r5, pc}
 800372a:	bf00      	nop
 800372c:	0802f86c 	.word	0x0802f86c

08003730 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003730:	b510      	push	{r4, lr}
 8003732:	4604      	mov	r4, r0
}
 8003734:	f7ff ffec 	bl	8003710 <_ZN23Calibration_PadViewBaseD1Ev>
 8003738:	4620      	mov	r0, r4
 800373a:	f641 5104 	movw	r1, #7428	; 0x1d04
 800373e:	f029 fb3c 	bl	802cdba <_ZdlPvj>
 8003742:	4620      	mov	r0, r4
 8003744:	bd10      	pop	{r4, pc}

08003746 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003746:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003748:	f7ff fe5a 	bl	8003400 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800374c:	bd08      	pop	{r3, pc}
	...

08003750 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003750:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003752:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003754:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003756:	4b12      	ldr	r3, [pc, #72]	; (80037a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003758:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800375a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800375c:	b28d      	uxth	r5, r1
 800375e:	b92b      	cbnz	r3, 800376c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003760:	4b10      	ldr	r3, [pc, #64]	; (80037a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8003762:	4a11      	ldr	r2, [pc, #68]	; (80037a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003764:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003766:	4811      	ldr	r0, [pc, #68]	; (80037ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003768:	f02a fa0e 	bl	802db88 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800376c:	4910      	ldr	r1, [pc, #64]	; (80037b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800376e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003770:	8809      	ldrh	r1, [r1, #0]
 8003772:	4291      	cmp	r1, r2
 8003774:	d803      	bhi.n	800377e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003776:	4b0f      	ldr	r3, [pc, #60]	; (80037b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003778:	4a0b      	ldr	r2, [pc, #44]	; (80037a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800377a:	216d      	movs	r1, #109	; 0x6d
 800377c:	e7f3      	b.n	8003766 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800377e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8003782:	4b0d      	ldr	r3, [pc, #52]	; (80037b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800378a:	6803      	ldr	r3, [r0, #0]
 800378c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800378e:	4798      	blx	r3
 8003790:	1a28      	subs	r0, r5, r0
 8003792:	b201      	sxth	r1, r0
 8003794:	4633      	mov	r3, r6
 8003796:	4620      	mov	r0, r4
    }
 8003798:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800379c:	4718      	bx	r3
 800379e:	bf00      	nop
 80037a0:	200138ac 	.word	0x200138ac
 80037a4:	0802f574 	.word	0x0802f574
 80037a8:	0802f5b6 	.word	0x0802f5b6
 80037ac:	0802f5f1 	.word	0x0802f5f1
 80037b0:	200138b0 	.word	0x200138b0
 80037b4:	0802f638 	.word	0x0802f638
 80037b8:	200138b4 	.word	0x200138b4

080037bc <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80037bc:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80037be:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80037c0:	4604      	mov	r4, r0
        setX(x);
 80037c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80037c4:	4615      	mov	r5, r2
        setX(x);
 80037c6:	4798      	blx	r3
        setY(y);
 80037c8:	6823      	ldr	r3, [r4, #0]
 80037ca:	4629      	mov	r1, r5
 80037cc:	4620      	mov	r0, r4
 80037ce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80037d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80037d4:	4718      	bx	r3

080037d6 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80037d6:	b570      	push	{r4, r5, r6, lr}
 80037d8:	4604      	mov	r4, r0
 80037da:	461d      	mov	r5, r3
 80037dc:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80037e0:	f7ff ffec 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80037e4:	6823      	ldr	r3, [r4, #0]
 80037e6:	4629      	mov	r1, r5
 80037e8:	4620      	mov	r0, r4
 80037ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80037ec:	4798      	blx	r3
        setHeight(height);
 80037ee:	6823      	ldr	r3, [r4, #0]
 80037f0:	4631      	mov	r1, r6
 80037f2:	4620      	mov	r0, r4
 80037f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80037f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80037fa:	4718      	bx	r3

080037fc <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 80037fc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003800:	2200      	movs	r2, #0
 8003802:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8003804:	4905      	ldr	r1, [pc, #20]	; (800381c <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8003806:	6001      	str	r1, [r0, #0]
 8003808:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800380c:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003810:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003814:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003818:	6282      	str	r2, [r0, #40]	; 0x28
    }
 800381a:	4770      	bx	lr
 800381c:	08031790 	.word	0x08031790

08003820 <_ZN8touchgfx6WidgetC1Ev>:
 8003820:	2200      	movs	r2, #0
 8003822:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003826:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800382a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800382e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8003832:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003836:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003838:	4a01      	ldr	r2, [pc, #4]	; (8003840 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800383a:	6002      	str	r2, [r0, #0]
 800383c:	4770      	bx	lr
 800383e:	bf00      	nop
 8003840:	0802f6bc 	.word	0x0802f6bc

08003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003844:	4b1a      	ldr	r3, [pc, #104]	; (80038b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003846:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003848:	881b      	ldrh	r3, [r3, #0]
 800384a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800384c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800384e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003850:	d92b      	bls.n	80038aa <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003852:	4b18      	ldr	r3, [pc, #96]	; (80038b4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003854:	681b      	ldr	r3, [r3, #0]
 8003856:	b92b      	cbnz	r3, 8003864 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003858:	4b17      	ldr	r3, [pc, #92]	; (80038b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800385a:	4a18      	ldr	r2, [pc, #96]	; (80038bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800385c:	4818      	ldr	r0, [pc, #96]	; (80038c0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800385e:	216c      	movs	r1, #108	; 0x6c
 8003860:	f02a f992 	bl	802db88 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003864:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003868:	4b16      	ldr	r3, [pc, #88]	; (80038c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003870:	4b15      	ldr	r3, [pc, #84]	; (80038c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8003872:	6818      	ldr	r0, [r3, #0]
 8003874:	f006 ffb4 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003878:	682b      	ldr	r3, [r5, #0]
 800387a:	9001      	str	r0, [sp, #4]
 800387c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800387e:	4628      	mov	r0, r5
 8003880:	4798      	blx	r3
 8003882:	682b      	ldr	r3, [r5, #0]
 8003884:	9901      	ldr	r1, [sp, #4]
 8003886:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003888:	4604      	mov	r4, r0
 800388a:	4628      	mov	r0, r5
 800388c:	4798      	blx	r3
 800388e:	682b      	ldr	r3, [r5, #0]
 8003890:	9901      	ldr	r1, [sp, #4]
 8003892:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003894:	fb14 f400 	smulbb	r4, r4, r0
 8003898:	4628      	mov	r0, r5
 800389a:	4798      	blx	r3
 800389c:	b2a4      	uxth	r4, r4
 800389e:	1823      	adds	r3, r4, r0
 80038a0:	b21b      	sxth	r3, r3
 80038a2:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80038a6:	b002      	add	sp, #8
 80038a8:	bd70      	pop	{r4, r5, r6, pc}
 80038aa:	2300      	movs	r3, #0
 80038ac:	e7f9      	b.n	80038a2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80038ae:	bf00      	nop
 80038b0:	200138b0 	.word	0x200138b0
 80038b4:	200138ac 	.word	0x200138ac
 80038b8:	0802f574 	.word	0x0802f574
 80038bc:	0802f5b6 	.word	0x0802f5b6
 80038c0:	0802f5f1 	.word	0x0802f5f1
 80038c4:	200138b4 	.word	0x200138b4
 80038c8:	200138b8 	.word	0x200138b8

080038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80038cc:	2200      	movs	r2, #0
 80038ce:	f04f 31ff 	mov.w	r1, #4294967295
 80038d2:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80038d6:	6082      	str	r2, [r0, #8]
        {
        }
 80038d8:	4770      	bx	lr

080038da <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 80038da:	b510      	push	{r4, lr}
 80038dc:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 80038de:	f7ff fff5 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 80038e2:	4620      	mov	r0, r4
 80038e4:	bd10      	pop	{r4, pc}
	...

080038e8 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80038e8:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80038ea:	2100      	movs	r1, #0
    TextArea()
 80038ec:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80038ee:	2226      	movs	r2, #38	; 0x26
 80038f0:	f02a fb4f 	bl	802df92 <memset>
 80038f4:	4620      	mov	r0, r4
 80038f6:	f7ff ff93 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 80038fa:	4b09      	ldr	r3, [pc, #36]	; (8003920 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 80038fc:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80038fe:	4b09      	ldr	r3, [pc, #36]	; (8003924 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003900:	62a3      	str	r3, [r4, #40]	; 0x28
 8003902:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003906:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8003908:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800390c:	2300      	movs	r3, #0
 800390e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8003912:	8723      	strh	r3, [r4, #56]	; 0x38
 8003914:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8003918:	f7ff ffd8 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800391c:	4620      	mov	r0, r4
 800391e:	bd10      	pop	{r4, pc}
 8003920:	08031be8 	.word	0x08031be8
 8003924:	0802f724 	.word	0x0802f724

08003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003928:	b510      	push	{r4, lr}
 800392a:	4604      	mov	r4, r0
        : TextArea()
 800392c:	f7ff ffdc 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003930:	4b02      	ldr	r3, [pc, #8]	; (800393c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8003932:	6023      	str	r3, [r4, #0]
 8003934:	2300      	movs	r3, #0
 8003936:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003938:	4620      	mov	r0, r4
 800393a:	bd10      	pop	{r4, pc}
 800393c:	0802f7c4 	.word	0x0802f7c4

08003940 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8003940:	b510      	push	{r4, lr}
 8003942:	4604      	mov	r4, r0
 8003944:	460b      	mov	r3, r1
 8003946:	490d      	ldr	r1, [pc, #52]	; (800397c <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8003948:	f844 1b04 	str.w	r1, [r4], #4
 800394c:	4602      	mov	r2, r0
 800394e:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8003952:	e884 0003 	stmia.w	r4, {r0, r1}
 8003956:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 800395a:	f102 040c 	add.w	r4, r2, #12
 800395e:	e884 0003 	stmia.w	r4, {r0, r1}
 8003962:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8003966:	695c      	ldr	r4, [r3, #20]
 8003968:	61d1      	str	r1, [r2, #28]
 800396a:	6a19      	ldr	r1, [r3, #32]
 800396c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800396e:	6211      	str	r1, [r2, #32]
 8003970:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8003974:	8493      	strh	r3, [r2, #36]	; 0x24
 8003976:	4610      	mov	r0, r2
 8003978:	bd10      	pop	{r4, pc}
 800397a:	bf00      	nop
 800397c:	08032008 	.word	0x08032008

08003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8003980:	b538      	push	{r3, r4, r5, lr}
 8003982:	460d      	mov	r5, r1
 8003984:	4604      	mov	r4, r0
class Container : public Drawable
 8003986:	f7ff ffdb 	bl	8003940 <_ZN8touchgfx8DrawableC1ERKS0_>
 800398a:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800398c:	62a3      	str	r3, [r4, #40]	; 0x28
 800398e:	4b2b      	ldr	r3, [pc, #172]	; (8003a3c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8003990:	6023      	str	r3, [r4, #0]
 8003992:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8003994:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003996:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8003998:	6323      	str	r3, [r4, #48]	; 0x30
 800399a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800399c:	6363      	str	r3, [r4, #52]	; 0x34
 800399e:	f105 0138 	add.w	r1, r5, #56	; 0x38
 80039a2:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80039a6:	f7ff ffcb 	bl	8003940 <_ZN8touchgfx8DrawableC1ERKS0_>
 80039aa:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 80039ac:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 80039ae:	4b24      	ldr	r3, [pc, #144]	; (8003a40 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 80039b0:	63a3      	str	r3, [r4, #56]	; 0x38
 80039b2:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 80039b6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80039ba:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 80039be:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 80039c2:	f105 0168 	add.w	r1, r5, #104	; 0x68
 80039c6:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80039ca:	f7ff ffb9 	bl	8003940 <_ZN8touchgfx8DrawableC1ERKS0_>
 80039ce:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 80039d2:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 80039d6:	4b1b      	ldr	r3, [pc, #108]	; (8003a44 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 80039d8:	66a3      	str	r3, [r4, #104]	; 0x68
 80039da:	f105 0194 	add.w	r1, r5, #148	; 0x94
 80039de:	f104 0094 	add.w	r0, r4, #148	; 0x94
 80039e2:	f7ff ffad 	bl	8003940 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 80039e6:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 80039ea:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 80039ee:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 80039f2:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 80039f6:	4b14      	ldr	r3, [pc, #80]	; (8003a48 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 80039f8:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80039fc:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8003a00:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8003a04:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8003a08:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8003a0c:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8003a10:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8003a14:	f7ff ff94 	bl	8003940 <_ZN8touchgfx8DrawableC1ERKS0_>
 8003a18:	4b0c      	ldr	r3, [pc, #48]	; (8003a4c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 8003a1a:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8003a1e:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8003a22:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8003a26:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 8003a2a:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 8003a2e:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8003a32:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8003a36:	4620      	mov	r0, r4
 8003a38:	bd38      	pop	{r3, r4, r5, pc}
 8003a3a:	bf00      	nop
 8003a3c:	08031820 	.word	0x08031820
 8003a40:	080318e4 	.word	0x080318e4
 8003a44:	0802f734 	.word	0x0802f734
 8003a48:	08031ce0 	.word	0x08031ce0
 8003a4c:	08031ec4 	.word	0x08031ec4

08003a50 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8003a50:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithIcon_LP1)
 8003a52:	f500 731e 	add.w	r3, r0, #632	; 0x278
 8003a56:	4299      	cmp	r1, r3
{
 8003a58:	b0c7      	sub	sp, #284	; 0x11c
 8003a5a:	4604      	mov	r4, r0
 8003a5c:	460d      	mov	r5, r1
    if (&src == &buttonWithIcon_LP1)
 8003a5e:	d122      	bne.n	8003aa6 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a60:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 8003a64:	4631      	mov	r1, r6
 8003a66:	a809      	add	r0, sp, #36	; 0x24
 8003a68:	f7ff ff8a 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a6c:	a801      	add	r0, sp, #4
 8003a6e:	f7fd fad5 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 0, 12);
 8003a72:	eddd 7a03 	vldr	s15, [sp, #12]
 8003a76:	48cf      	ldr	r0, [pc, #828]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003a78:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a7c:	230c      	movs	r3, #12
 8003a7e:	ee17 7a90 	vmov	r7, s15
 8003a82:	ee17 1a90 	vmov	r1, s15
 8003a86:	2200      	movs	r2, #0
 8003a88:	f7fd fe70 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003a8c:	4aca      	ldr	r2, [pc, #808]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003a8e:	463b      	mov	r3, r7
 8003a90:	210a      	movs	r1, #10
 8003a92:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8003a96:	f018 f9e1 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a9a:	4630      	mov	r0, r6
 8003a9c:	f016 f918 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003aa0:	a809      	add	r0, sp, #36	; 0x24
 8003aa2:	f00f f9e3 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8003aa6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003aaa:	429d      	cmp	r5, r3
 8003aac:	d122      	bne.n	8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa4>
        SwipeContainer swipeContainer = swipeContainer1;
 8003aae:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003ab2:	4631      	mov	r1, r6
 8003ab4:	a809      	add	r0, sp, #36	; 0x24
 8003ab6:	f7ff ff63 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003aba:	a801      	add	r0, sp, #4
 8003abc:	f7fd faae 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 1, 12);
 8003ac0:	eddd 7a03 	vldr	s15, [sp, #12]
 8003ac4:	48bb      	ldr	r0, [pc, #748]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003ac6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003aca:	230c      	movs	r3, #12
 8003acc:	ee17 7a90 	vmov	r7, s15
 8003ad0:	ee17 1a90 	vmov	r1, s15
 8003ad4:	2201      	movs	r2, #1
 8003ad6:	f7fd fe49 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003ada:	4ab7      	ldr	r2, [pc, #732]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003adc:	463b      	mov	r3, r7
 8003ade:	210a      	movs	r1, #10
 8003ae0:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8003ae4:	f018 f9ba 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003ae8:	4630      	mov	r0, r6
 8003aea:	f016 f8f1 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003aee:	a809      	add	r0, sp, #36	; 0x24
 8003af0:	f00f f9bc 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8003af4:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003af8:	429d      	cmp	r5, r3
 8003afa:	d122      	bne.n	8003b42 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xf2>
        SwipeContainer swipeContainer = swipeContainer1;
 8003afc:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b00:	4631      	mov	r1, r6
 8003b02:	a809      	add	r0, sp, #36	; 0x24
 8003b04:	f7ff ff3c 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b08:	a801      	add	r0, sp, #4
 8003b0a:	f7fd fa87 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 2, 12);
 8003b0e:	eddd 7a03 	vldr	s15, [sp, #12]
 8003b12:	48a8      	ldr	r0, [pc, #672]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003b14:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b18:	230c      	movs	r3, #12
 8003b1a:	ee17 7a90 	vmov	r7, s15
 8003b1e:	ee17 1a90 	vmov	r1, s15
 8003b22:	2202      	movs	r2, #2
 8003b24:	f7fd fe22 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003b28:	4aa3      	ldr	r2, [pc, #652]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003b2a:	463b      	mov	r3, r7
 8003b2c:	210a      	movs	r1, #10
 8003b2e:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8003b32:	f018 f993 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b36:	4630      	mov	r0, r6
 8003b38:	f016 f8ca 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b3c:	a809      	add	r0, sp, #36	; 0x24
 8003b3e:	f00f f995 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 8003b42:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8003b46:	429d      	cmp	r5, r3
 8003b48:	d122      	bne.n	8003b90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x140>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b4a:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b4e:	4631      	mov	r1, r6
 8003b50:	a809      	add	r0, sp, #36	; 0x24
 8003b52:	f7ff ff15 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b56:	a801      	add	r0, sp, #4
 8003b58:	f7fd fa60 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 3, 12);
 8003b5c:	eddd 7a01 	vldr	s15, [sp, #4]
 8003b60:	4894      	ldr	r0, [pc, #592]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003b62:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b66:	230c      	movs	r3, #12
 8003b68:	ee17 7a90 	vmov	r7, s15
 8003b6c:	ee17 1a90 	vmov	r1, s15
 8003b70:	2203      	movs	r2, #3
 8003b72:	f7fd fdfb 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003b76:	4a90      	ldr	r2, [pc, #576]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003b78:	463b      	mov	r3, r7
 8003b7a:	210a      	movs	r1, #10
 8003b7c:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8003b80:	f018 f96c 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b84:	4630      	mov	r0, r6
 8003b86:	f016 f8a3 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b8a:	a809      	add	r0, sp, #36	; 0x24
 8003b8c:	f00f f96e 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8003b90:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 8003b94:	429d      	cmp	r5, r3
 8003b96:	d122      	bne.n	8003bde <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18e>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b98:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b9c:	4631      	mov	r1, r6
 8003b9e:	a809      	add	r0, sp, #36	; 0x24
 8003ba0:	f7ff feee 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003ba4:	a801      	add	r0, sp, #4
 8003ba6:	f7fd fa39 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 4, 12);
 8003baa:	eddd 7a01 	vldr	s15, [sp, #4]
 8003bae:	4881      	ldr	r0, [pc, #516]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003bb0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003bb4:	230c      	movs	r3, #12
 8003bb6:	ee17 7a90 	vmov	r7, s15
 8003bba:	ee17 1a90 	vmov	r1, s15
 8003bbe:	2204      	movs	r2, #4
 8003bc0:	f7fd fdd4 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003bc4:	4a7c      	ldr	r2, [pc, #496]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003bc6:	463b      	mov	r3, r7
 8003bc8:	210a      	movs	r1, #10
 8003bca:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8003bce:	f018 f945 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003bd2:	4630      	mov	r0, r6
 8003bd4:	f016 f87c 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003bd8:	a809      	add	r0, sp, #36	; 0x24
 8003bda:	f00f f947 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8003bde:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8003be2:	429d      	cmp	r5, r3
 8003be4:	d122      	bne.n	8003c2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1dc>
        SwipeContainer swipeContainer = swipeContainer1;
 8003be6:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003bea:	4631      	mov	r1, r6
 8003bec:	a809      	add	r0, sp, #36	; 0x24
 8003bee:	f7ff fec7 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003bf2:	a801      	add	r0, sp, #4
 8003bf4:	f7fd fa12 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 5, 12);
 8003bf8:	eddd 7a01 	vldr	s15, [sp, #4]
 8003bfc:	486d      	ldr	r0, [pc, #436]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003bfe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c02:	230c      	movs	r3, #12
 8003c04:	ee17 7a90 	vmov	r7, s15
 8003c08:	ee17 1a90 	vmov	r1, s15
 8003c0c:	2205      	movs	r2, #5
 8003c0e:	f7fd fdad 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003c12:	4a69      	ldr	r2, [pc, #420]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003c14:	463b      	mov	r3, r7
 8003c16:	210a      	movs	r1, #10
 8003c18:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8003c1c:	f018 f91e 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c20:	4630      	mov	r0, r6
 8003c22:	f016 f855 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c26:	a809      	add	r0, sp, #36	; 0x24
 8003c28:	f00f f920 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8003c2c:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8003c30:	429d      	cmp	r5, r3
 8003c32:	d122      	bne.n	8003c7a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22a>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c34:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c38:	4631      	mov	r1, r6
 8003c3a:	a809      	add	r0, sp, #36	; 0x24
 8003c3c:	f7ff fea0 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003c40:	a801      	add	r0, sp, #4
 8003c42:	f7fd f9eb 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 6, 12);
 8003c46:	eddd 7a07 	vldr	s15, [sp, #28]
 8003c4a:	485a      	ldr	r0, [pc, #360]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003c4c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c50:	230c      	movs	r3, #12
 8003c52:	ee17 7a90 	vmov	r7, s15
 8003c56:	ee17 1a90 	vmov	r1, s15
 8003c5a:	2206      	movs	r2, #6
 8003c5c:	f7fd fd86 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003c60:	4a55      	ldr	r2, [pc, #340]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003c62:	463b      	mov	r3, r7
 8003c64:	210a      	movs	r1, #10
 8003c66:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8003c6a:	f018 f8f7 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c6e:	4630      	mov	r0, r6
 8003c70:	f016 f82e 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c74:	a809      	add	r0, sp, #36	; 0x24
 8003c76:	f00f f8f9 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8003c7a:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8003c7e:	429d      	cmp	r5, r3
 8003c80:	d122      	bne.n	8003cc8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x278>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c82:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c86:	4631      	mov	r1, r6
 8003c88:	a809      	add	r0, sp, #36	; 0x24
 8003c8a:	f7ff fe79 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003c8e:	a801      	add	r0, sp, #4
 8003c90:	f7fd f9c4 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 7, 12);
 8003c94:	eddd 7a07 	vldr	s15, [sp, #28]
 8003c98:	4846      	ldr	r0, [pc, #280]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003c9a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c9e:	230c      	movs	r3, #12
 8003ca0:	ee17 7a90 	vmov	r7, s15
 8003ca4:	ee17 1a90 	vmov	r1, s15
 8003ca8:	2207      	movs	r2, #7
 8003caa:	f7fd fd5f 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003cae:	4a42      	ldr	r2, [pc, #264]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003cb0:	463b      	mov	r3, r7
 8003cb2:	210a      	movs	r1, #10
 8003cb4:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8003cb8:	f018 f8d0 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003cbc:	4630      	mov	r0, r6
 8003cbe:	f016 f807 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003cc2:	a809      	add	r0, sp, #36	; 0x24
 8003cc4:	f00f f8d2 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8003cc8:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8003ccc:	429d      	cmp	r5, r3
 8003cce:	d122      	bne.n	8003d16 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c6>
        SwipeContainer swipeContainer = swipeContainer1;
 8003cd0:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003cd4:	4631      	mov	r1, r6
 8003cd6:	a809      	add	r0, sp, #36	; 0x24
 8003cd8:	f7ff fe52 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003cdc:	a801      	add	r0, sp, #4
 8003cde:	f7fd f99d 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 8, 12);
 8003ce2:	eddd 7a07 	vldr	s15, [sp, #28]
 8003ce6:	4833      	ldr	r0, [pc, #204]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003ce8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003cec:	230c      	movs	r3, #12
 8003cee:	ee17 7a90 	vmov	r7, s15
 8003cf2:	ee17 1a90 	vmov	r1, s15
 8003cf6:	2208      	movs	r2, #8
 8003cf8:	f7fd fd38 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003cfc:	4a2e      	ldr	r2, [pc, #184]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003cfe:	463b      	mov	r3, r7
 8003d00:	210a      	movs	r1, #10
 8003d02:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8003d06:	f018 f8a9 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003d0a:	4630      	mov	r0, r6
 8003d0c:	f015 ffe0 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003d10:	a809      	add	r0, sp, #36	; 0x24
 8003d12:	f00f f8ab 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8003d16:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8003d1a:	429d      	cmp	r5, r3
 8003d1c:	d122      	bne.n	8003d64 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x314>
        SwipeContainer swipeContainer = swipeContainer1;
 8003d1e:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003d22:	4631      	mov	r1, r6
 8003d24:	a809      	add	r0, sp, #36	; 0x24
 8003d26:	f7ff fe2b 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003d2a:	a801      	add	r0, sp, #4
 8003d2c:	f7fd f976 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 9, 12);
 8003d30:	eddd 7a05 	vldr	s15, [sp, #20]
 8003d34:	481f      	ldr	r0, [pc, #124]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003d36:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003d3a:	230c      	movs	r3, #12
 8003d3c:	ee17 7a90 	vmov	r7, s15
 8003d40:	ee17 1a90 	vmov	r1, s15
 8003d44:	2209      	movs	r2, #9
 8003d46:	f7fd fd11 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003d4a:	4a1b      	ldr	r2, [pc, #108]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003d4c:	463b      	mov	r3, r7
 8003d4e:	210a      	movs	r1, #10
 8003d50:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003d54:	f018 f882 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003d58:	4630      	mov	r0, r6
 8003d5a:	f015 ffb9 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003d5e:	a809      	add	r0, sp, #36	; 0x24
 8003d60:	f00f f884 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH2)
 8003d64:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003d68:	429d      	cmp	r5, r3
 8003d6a:	d127      	bne.n	8003dbc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36c>
        SwipeContainer swipeContainer = swipeContainer1;
 8003d6c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003d70:	4631      	mov	r1, r6
 8003d72:	a809      	add	r0, sp, #36	; 0x24
 8003d74:	f7ff fe04 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003d78:	a801      	add	r0, sp, #4
 8003d7a:	f7fd f94f 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 10, 12);
 8003d7e:	eddd 7a05 	vldr	s15, [sp, #20]
 8003d82:	480c      	ldr	r0, [pc, #48]	; (8003db4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003d84:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003d88:	230c      	movs	r3, #12
 8003d8a:	ee17 7a90 	vmov	r7, s15
 8003d8e:	ee17 1a90 	vmov	r1, s15
 8003d92:	220a      	movs	r2, #10
 8003d94:	f7fd fcea 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003d98:	4a07      	ldr	r2, [pc, #28]	; (8003db8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003d9a:	463b      	mov	r3, r7
 8003d9c:	210a      	movs	r1, #10
 8003d9e:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8003da2:	f018 f85b 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003da6:	4630      	mov	r0, r6
 8003da8:	f015 ff92 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003dac:	a809      	add	r0, sp, #36	; 0x24
 8003dae:	f00f f85d 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
 8003db2:	e003      	b.n	8003dbc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36c>
 8003db4:	081e0000 	.word	0x081e0000
 8003db8:	0802f676 	.word	0x0802f676
    if (&src == &buttonWithIcon_RH3)
 8003dbc:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 8003dc0:	429d      	cmp	r5, r3
 8003dc2:	d122      	bne.n	8003e0a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3ba>
        SwipeContainer swipeContainer = swipeContainer1;
 8003dc4:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003dc8:	4631      	mov	r1, r6
 8003dca:	a809      	add	r0, sp, #36	; 0x24
 8003dcc:	f7ff fdd8 	bl	8003980 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003dd0:	a801      	add	r0, sp, #4
 8003dd2:	f7fd f923 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 11, 12);
 8003dd6:	eddd 7a05 	vldr	s15, [sp, #20]
 8003dda:	4813      	ldr	r0, [pc, #76]	; (8003e28 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d8>)
 8003ddc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003de0:	230c      	movs	r3, #12
 8003de2:	ee17 7a90 	vmov	r7, s15
 8003de6:	ee17 1a90 	vmov	r1, s15
 8003dea:	220b      	movs	r2, #11
 8003dec:	f7fd fcbe 	bl	800176c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003df0:	4a0e      	ldr	r2, [pc, #56]	; (8003e2c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3dc>)
 8003df2:	463b      	mov	r3, r7
 8003df4:	210a      	movs	r1, #10
 8003df6:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8003dfa:	f018 f82f 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003dfe:	4630      	mov	r0, r6
 8003e00:	f015 ff66 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003e04:	a809      	add	r0, sp, #36	; 0x24
 8003e06:	f00f f831 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithLabel3)
 8003e0a:	3498      	adds	r4, #152	; 0x98
 8003e0c:	42a5      	cmp	r5, r4
 8003e0e:	d108      	bne.n	8003e22 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d2>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003e10:	f014 fe76 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8003e14:	f001 fc58 	bl	80056c8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8003e18:	b047      	add	sp, #284	; 0x11c
 8003e1a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        start_calibration();
 8003e1e:	f7fd bb63 	b.w	80014e8 <start_calibration>
}
 8003e22:	b047      	add	sp, #284	; 0x11c
 8003e24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e26:	bf00      	nop
 8003e28:	081e0000 	.word	0x081e0000
 8003e2c:	0802f676 	.word	0x0802f676

08003e30 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003e30:	0152      	lsls	r2, r2, #5
 8003e32:	0149      	lsls	r1, r1, #5
 8003e34:	f010 bf6e 	b.w	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003e38 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003e38:	0152      	lsls	r2, r2, #5
 8003e3a:	0149      	lsls	r1, r1, #5
 8003e3c:	f010 bf75 	b.w	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08003e40 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003e40:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003e42:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003e44:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003e48:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003e4c:	d004      	beq.n	8003e58 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8003e4e:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003e52:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003e54:	f010 be68 	b.w	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003e58:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003e5c:	4770      	bx	lr
	...

08003e60 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003e60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e64:	ed2d 8b10 	vpush	{d8-d15}
 8003e68:	4604      	mov	r4, r0
 8003e6a:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003e6c:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003e6e:	2500      	movs	r5, #0
 8003e70:	f016 fac6 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 8003e74:	4be5      	ldr	r3, [pc, #916]	; (800420c <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003e76:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003e78:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003e7c:	2226      	movs	r2, #38	; 0x26
 8003e7e:	4629      	mov	r1, r5
 8003e80:	4648      	mov	r0, r9
 8003e82:	f02a f886 	bl	802df92 <memset>
 8003e86:	4648      	mov	r0, r9
 8003e88:	f7ff fcca 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8003e8c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003e90:	26ff      	movs	r6, #255	; 0xff
 8003e92:	4bdf      	ldr	r3, [pc, #892]	; (8004210 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003e94:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003e96:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003e98:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003e9c:	4629      	mov	r1, r5
 8003e9e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003ea2:	4640      	mov	r0, r8
        : color(col)
 8003ea4:	66a5      	str	r5, [r4, #104]	; 0x68
 8003ea6:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003eaa:	f02a f872 	bl	802df92 <memset>
 8003eae:	4640      	mov	r0, r8
 8003eb0:	f7ff fcb6 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8003eb4:	4bd7      	ldr	r3, [pc, #860]	; (8004214 <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003eb6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003eb8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 8003ebc:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003ec0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003ec4:	ae29      	add	r6, sp, #164	; 0xa4
 8003ec6:	4631      	mov	r1, r6
 8003ec8:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003ecc:	4640      	mov	r0, r8
 8003ece:	f012 f918 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003ed2:	4658      	mov	r0, fp
 8003ed4:	f012 fa4c 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003ed8:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003edc:	4618      	mov	r0, r3
 8003ede:	ee08 3a10 	vmov	s16, r3
 8003ee2:	f00f f8f1 	bl	80130c8 <_ZN8touchgfx14SwipeContainerC1Ev>
 8003ee6:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 8003eea:	4618      	mov	r0, r3
 8003eec:	ee08 3a90 	vmov	s17, r3
 8003ef0:	f7ff fc84 	bl	80037fc <_ZN8touchgfx9ContainerC1Ev>
 8003ef4:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003ef8:	4618      	mov	r0, r3
 8003efa:	9311      	str	r3, [sp, #68]	; 0x44
 8003efc:	f012 f8da 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f00:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003f04:	f504 771e 	add.w	r7, r4, #632	; 0x278
 8003f08:	4618      	mov	r0, r3
 8003f0a:	9312      	str	r3, [sp, #72]	; 0x48
 8003f0c:	f012 f8d2 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f10:	4638      	mov	r0, r7
 8003f12:	f012 f8cf 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f16:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 8003f1a:	4618      	mov	r0, r3
 8003f1c:	ee0d 3a90 	vmov	s27, r3
 8003f20:	f7ff fd02 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f24:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8003f28:	4618      	mov	r0, r3
 8003f2a:	ee0e 3a10 	vmov	s28, r3
 8003f2e:	f7ff fcfb 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f32:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003f36:	4618      	mov	r0, r3
 8003f38:	ee0e 3a90 	vmov	s29, r3
 8003f3c:	f7ff fcf4 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f40:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003f44:	4618      	mov	r0, r3
 8003f46:	ee0a 3a90 	vmov	s21, r3
 8003f4a:	f010 fdcd 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8003f4e:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003f52:	4618      	mov	r0, r3
 8003f54:	931c      	str	r3, [sp, #112]	; 0x70
 8003f56:	f7ff fa67 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003f5a:	4baf      	ldr	r3, [pc, #700]	; (8004218 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003f5c:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003f60:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003f64:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003f68:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 8003f6c:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003f6e:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003f72:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003f76:	9107      	str	r1, [sp, #28]
 8003f78:	f7ff fcb6 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8003f7c:	4650      	mov	r0, sl
 8003f7e:	f7ff fc3d 	bl	80037fc <_ZN8touchgfx9ContainerC1Ev>
 8003f82:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003f86:	4608      	mov	r0, r1
 8003f88:	9113      	str	r1, [sp, #76]	; 0x4c
 8003f8a:	f012 f893 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f8e:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003f92:	4608      	mov	r0, r1
 8003f94:	9114      	str	r1, [sp, #80]	; 0x50
 8003f96:	f012 f88d 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f9a:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 8003f9e:	4608      	mov	r0, r1
 8003fa0:	9115      	str	r1, [sp, #84]	; 0x54
 8003fa2:	f012 f887 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003fa6:	f204 5144 	addw	r1, r4, #1348	; 0x544
 8003faa:	4608      	mov	r0, r1
 8003fac:	9108      	str	r1, [sp, #32]
 8003fae:	f7ff fcbb 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003fb2:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003fb6:	4608      	mov	r0, r1
 8003fb8:	9109      	str	r1, [sp, #36]	; 0x24
 8003fba:	f7ff fcb5 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003fbe:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 8003fc2:	4608      	mov	r0, r1
 8003fc4:	910a      	str	r1, [sp, #40]	; 0x28
 8003fc6:	f7ff fcaf 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003fca:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 8003fce:	4608      	mov	r0, r1
 8003fd0:	ee0b 1a10 	vmov	s22, r1
 8003fd4:	f010 fd88 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8003fd8:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 8003fdc:	4608      	mov	r0, r1
 8003fde:	911d      	str	r1, [sp, #116]	; 0x74
 8003fe0:	f7ff fa22 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fe4:	4b8c      	ldr	r3, [pc, #560]	; (8004218 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003fe6:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 8003fea:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003fee:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 8003ff2:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 8003ff6:	4608      	mov	r0, r1
 8003ff8:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 8003ffc:	ee0f 1a10 	vmov	s30, r1
 8004000:	f7ff fc72 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8004004:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 8004008:	4608      	mov	r0, r1
 800400a:	ee09 1a10 	vmov	s18, r1
 800400e:	f7ff fbf5 	bl	80037fc <_ZN8touchgfx9ContainerC1Ev>
 8004012:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 8004016:	4608      	mov	r0, r1
 8004018:	9116      	str	r1, [sp, #88]	; 0x58
 800401a:	f012 f84b 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800401e:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 8004022:	4608      	mov	r0, r1
 8004024:	9117      	str	r1, [sp, #92]	; 0x5c
 8004026:	f012 f845 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800402a:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 800402e:	4608      	mov	r0, r1
 8004030:	9118      	str	r1, [sp, #96]	; 0x60
 8004032:	f012 f83f 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8004036:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 800403a:	4608      	mov	r0, r1
 800403c:	910b      	str	r1, [sp, #44]	; 0x2c
 800403e:	f7ff fc73 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004042:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 8004046:	4608      	mov	r0, r1
 8004048:	910c      	str	r1, [sp, #48]	; 0x30
 800404a:	f7ff fc6d 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800404e:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 8004052:	4608      	mov	r0, r1
 8004054:	910d      	str	r1, [sp, #52]	; 0x34
 8004056:	f7ff fc67 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800405a:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 800405e:	4608      	mov	r0, r1
 8004060:	ee0b 1a90 	vmov	s23, r1
 8004064:	f010 fd40 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8004068:	f604 1128 	addw	r1, r4, #2344	; 0x928
 800406c:	4608      	mov	r0, r1
 800406e:	911e      	str	r1, [sp, #120]	; 0x78
 8004070:	f7ff f9da 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004074:	4b68      	ldr	r3, [pc, #416]	; (8004218 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8004076:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 800407a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800407e:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 8004082:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8004086:	4608      	mov	r0, r1
 8004088:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 800408c:	ee0f 1a90 	vmov	s31, r1
 8004090:	f7ff fc2a 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8004094:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8004098:	4608      	mov	r0, r1
 800409a:	ee09 1a90 	vmov	s19, r1
 800409e:	f7ff fbad 	bl	80037fc <_ZN8touchgfx9ContainerC1Ev>
 80040a2:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 80040a6:	4608      	mov	r0, r1
 80040a8:	9119      	str	r1, [sp, #100]	; 0x64
 80040aa:	f012 f803 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80040ae:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 80040b2:	4608      	mov	r0, r1
 80040b4:	911a      	str	r1, [sp, #104]	; 0x68
 80040b6:	f011 fffd 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80040ba:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 80040be:	4608      	mov	r0, r1
 80040c0:	911b      	str	r1, [sp, #108]	; 0x6c
 80040c2:	f011 fff7 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80040c6:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 80040ca:	4608      	mov	r0, r1
 80040cc:	910e      	str	r1, [sp, #56]	; 0x38
 80040ce:	f7ff fc2b 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80040d2:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 80040d6:	4608      	mov	r0, r1
 80040d8:	910f      	str	r1, [sp, #60]	; 0x3c
 80040da:	f7ff fc25 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80040de:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 80040e2:	4608      	mov	r0, r1
 80040e4:	9110      	str	r1, [sp, #64]	; 0x40
 80040e6:	f7ff fc1f 	bl	8003928 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80040ea:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 80040ee:	4608      	mov	r0, r1
 80040f0:	ee0c 1a10 	vmov	s24, r1
 80040f4:	f010 fcf8 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 80040f8:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 80040fc:	4608      	mov	r0, r1
 80040fe:	911f      	str	r1, [sp, #124]	; 0x7c
 8004100:	f7ff f992 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004104:	4b44      	ldr	r3, [pc, #272]	; (8004218 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8004106:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 800410a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800410e:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 8004112:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 8004116:	4608      	mov	r0, r1
 8004118:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 800411c:	9103      	str	r1, [sp, #12]
 800411e:	f7ff fbe3 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8004122:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 8004126:	4608      	mov	r0, r1
 8004128:	ee0c 1a90 	vmov	s25, r1
 800412c:	f010 fcdc 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8004130:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 8004134:	4608      	mov	r0, r1
 8004136:	9120      	str	r1, [sp, #128]	; 0x80
 8004138:	f7ff f976 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800413c:	4b36      	ldr	r3, [pc, #216]	; (8004218 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800413e:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 8004142:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8004146:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 800414a:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 800414e:	4608      	mov	r0, r1
 8004150:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 8004154:	9104      	str	r1, [sp, #16]
 8004156:	f7ff fbc7 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 800415a:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 800415e:	4608      	mov	r0, r1
 8004160:	ee0d 1a10 	vmov	s26, r1
 8004164:	f010 fcc0 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8004168:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 800416c:	4608      	mov	r0, r1
 800416e:	9121      	str	r1, [sp, #132]	; 0x84
 8004170:	f7ff f95a 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004174:	4b28      	ldr	r3, [pc, #160]	; (8004218 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8004176:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 800417a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800417e:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 8004182:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 8004186:	4618      	mov	r0, r3
 8004188:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 800418c:	9305      	str	r3, [sp, #20]
 800418e:	f7ff fbab 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8004192:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 8004196:	4618      	mov	r0, r3
 8004198:	9306      	str	r3, [sp, #24]
 800419a:	f7ff fba5 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800419e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80041a2:	4a1e      	ldr	r2, [pc, #120]	; (800421c <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 80041a4:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 80041a8:	4a1d      	ldr	r2, [pc, #116]	; (8004220 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 80041aa:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 80041ae:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 80041b2:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80041b6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80041ba:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 80041be:	f012 ff93 	bl	80170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80041c2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80041c6:	462a      	mov	r2, r5
 80041c8:	4648      	mov	r0, r9
 80041ca:	9300      	str	r3, [sp, #0]
 80041cc:	4629      	mov	r1, r5
 80041ce:	23f0      	movs	r3, #240	; 0xf0
 80041d0:	f7ff fb01 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80041d4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80041d8:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80041da:	1d23      	adds	r3, r4, #4
 80041dc:	4618      	mov	r0, r3
 80041de:	4649      	mov	r1, r9
 80041e0:	ee0a 3a10 	vmov	s20, r3
 80041e4:	f00e fbb4 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80041e8:	462a      	mov	r2, r5
 80041ea:	4640      	mov	r0, r8
 80041ec:	4629      	mov	r1, r5
 80041ee:	f7ff fae5 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80041f2:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80041f4:	4640      	mov	r0, r8
 80041f6:	4631      	mov	r1, r6
 80041f8:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80041fc:	f011 ff81 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004200:	4641      	mov	r1, r8
 8004202:	ee1a 0a10 	vmov	r0, s20
 8004206:	f00e fba3 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800420a:	e00b      	b.n	8004224 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 800420c:	0802f86c 	.word	0x0802f86c
 8004210:	08031c78 	.word	0x08031c78
 8004214:	08031ec4 	.word	0x08031ec4
 8004218:	080319ac 	.word	0x080319ac
 800421c:	0802f854 	.word	0x0802f854
 8004220:	08003a51 	.word	0x08003a51
    buttonWithLabel3.setXY(33, 257);
 8004224:	4658      	mov	r0, fp
 8004226:	f240 1201 	movw	r2, #257	; 0x101
 800422a:	2121      	movs	r1, #33	; 0x21
 800422c:	f7ff fac6 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8004230:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004232:	4632      	mov	r2, r6
 8004234:	a928      	add	r1, sp, #160	; 0xa0
 8004236:	4658      	mov	r0, fp
 8004238:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 800423c:	2302      	movs	r3, #2
 800423e:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004242:	f011 fd68 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8004246:	233b      	movs	r3, #59	; 0x3b
        updateTextPosition();
 8004248:	4658      	mov	r0, fp
 800424a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800424e:	f7ff faf9 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8004252:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8004256:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 800425a:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 800425e:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8004260:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8004264:	4659      	mov	r1, fp
 8004266:	ee1a 0a10 	vmov	r0, s20
 800426a:	9302      	str	r3, [sp, #8]
 800426c:	f00e fb70 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8004270:	ee18 0a10 	vmov	r0, s16
 8004274:	2255      	movs	r2, #85	; 0x55
 8004276:	4629      	mov	r1, r5
 8004278:	f7ff faa0 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800427c:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 800427e:	ee18 0a10 	vmov	r0, s16
 8004282:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 8004286:	4632      	mov	r2, r6
 8004288:	2307      	movs	r3, #7
 800428a:	a928      	add	r1, sp, #160	; 0xa0
 800428c:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004290:	f00e ffb8 	bl	8013204 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 8004294:	228c      	movs	r2, #140	; 0x8c
 8004296:	ee18 0a10 	vmov	r0, s16
 800429a:	2150      	movs	r1, #80	; 0x50
 800429c:	f00e fe60 	bl	8012f60 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 80042a0:	ee18 0a10 	vmov	r0, s16
 80042a4:	2132      	movs	r1, #50	; 0x32
 80042a6:	f00e fdde 	bl	8012e66 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 80042aa:	ee18 0a10 	vmov	r0, s16
 80042ae:	2132      	movs	r1, #50	; 0x32
 80042b0:	f00e fe54 	bl	8012f5c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 80042b4:	4b47      	ldr	r3, [pc, #284]	; (80043d4 <_ZN23Calibration_PadViewBaseC1Ev+0x574>)
    buttonWithIcon_LP3.setXY(194, 97);
 80042b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80042b8:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 80042bc:	2261      	movs	r2, #97	; 0x61
 80042be:	21c2      	movs	r1, #194	; 0xc2
 80042c0:	f7ff fa7c 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80042c4:	f04f 0809 	mov.w	r8, #9
 80042c8:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80042cc:	aa27      	add	r2, sp, #156	; 0x9c
 80042ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 80042d0:	9600      	str	r6, [sp, #0]
 80042d2:	ab28      	add	r3, sp, #160	; 0xa0
 80042d4:	a926      	add	r1, sp, #152	; 0x98
 80042d6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80042da:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80042de:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80042e2:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80042e6:	f011 fe50 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80042ea:	9b02      	ldr	r3, [sp, #8]
 80042ec:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80042f0:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80042f2:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80042f6:	ee18 0a90 	vmov	r0, s17
 80042fa:	f00e fb29 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80042fe:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004300:	223d      	movs	r2, #61	; 0x3d
 8004302:	21c2      	movs	r1, #194	; 0xc2
 8004304:	f7ff fa5a 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004308:	aa27      	add	r2, sp, #156	; 0x9c
 800430a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800430c:	9600      	str	r6, [sp, #0]
 800430e:	ab28      	add	r3, sp, #160	; 0xa0
 8004310:	a926      	add	r1, sp, #152	; 0x98
 8004312:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004316:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800431a:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800431e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004322:	f011 fe32 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004326:	9b02      	ldr	r3, [sp, #8]
 8004328:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 800432c:	9912      	ldr	r1, [sp, #72]	; 0x48
 800432e:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 8004332:	ee18 0a90 	vmov	r0, s17
 8004336:	f00e fb0b 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 800433a:	4638      	mov	r0, r7
 800433c:	2219      	movs	r2, #25
 800433e:	21c2      	movs	r1, #194	; 0xc2
 8004340:	f7ff fa3c 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004344:	aa27      	add	r2, sp, #156	; 0x9c
 8004346:	4638      	mov	r0, r7
 8004348:	ab28      	add	r3, sp, #160	; 0xa0
 800434a:	a926      	add	r1, sp, #152	; 0x98
 800434c:	9600      	str	r6, [sp, #0]
 800434e:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004352:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004356:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800435a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800435e:	f011 fe14 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004362:	9b02      	ldr	r3, [sp, #8]
 8004364:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 8004368:	4639      	mov	r1, r7
 800436a:	ee18 0a90 	vmov	r0, s17
 800436e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8004372:	f00e faed 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 8004376:	2268      	movs	r2, #104	; 0x68
 8004378:	ee1d 0a90 	vmov	r0, s27
 800437c:	210a      	movs	r1, #10
 800437e:	f7ff fa1d 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004382:	f04f 33ff 	mov.w	r3, #4294967295
 8004386:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 800438a:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 800438e:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 8004392:	af22      	add	r7, sp, #136	; 0x88
 8004394:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004398:	ee1d 1a90 	vmov	r1, s27
 800439c:	4638      	mov	r0, r7
 800439e:	4798      	blx	r3
 80043a0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80043a4:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 80043a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80043ac:	4b0a      	ldr	r3, [pc, #40]	; (80043d8 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
 80043ae:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 80043b0:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 80043b4:	b92b      	cbnz	r3, 80043c2 <_ZN23Calibration_PadViewBaseC1Ev+0x562>
 80043b6:	4b09      	ldr	r3, [pc, #36]	; (80043dc <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 80043b8:	4a09      	ldr	r2, [pc, #36]	; (80043e0 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 80043ba:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80043bc:	4809      	ldr	r0, [pc, #36]	; (80043e4 <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 80043be:	f029 fbe3 	bl	802db88 <__assert_func>
 80043c2:	4b09      	ldr	r3, [pc, #36]	; (80043e8 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 80043c4:	881b      	ldrh	r3, [r3, #0]
 80043c6:	2b26      	cmp	r3, #38	; 0x26
 80043c8:	d812      	bhi.n	80043f0 <_ZN23Calibration_PadViewBaseC1Ev+0x590>
 80043ca:	4b08      	ldr	r3, [pc, #32]	; (80043ec <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 80043cc:	4a04      	ldr	r2, [pc, #16]	; (80043e0 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 80043ce:	2161      	movs	r1, #97	; 0x61
 80043d0:	e7f4      	b.n	80043bc <_ZN23Calibration_PadViewBaseC1Ev+0x55c>
 80043d2:	bf00      	nop
 80043d4:	00ac00f0 	.word	0x00ac00f0
 80043d8:	200138ac 	.word	0x200138ac
 80043dc:	0802f574 	.word	0x0802f574
 80043e0:	0802f679 	.word	0x0802f679
 80043e4:	0802f5f1 	.word	0x0802f5f1
 80043e8:	200138b0 	.word	0x200138b0
 80043ec:	0802f638 	.word	0x0802f638
        return texts->getText(typedTextId);
 80043f0:	4bdb      	ldr	r3, [pc, #876]	; (8004760 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80043f2:	2126      	movs	r1, #38	; 0x26
 80043f4:	6818      	ldr	r0, [r3, #0]
 80043f6:	f006 f9f3 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 80043fa:	4ada      	ldr	r2, [pc, #872]	; (8004764 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80043fc:	4603      	mov	r3, r0
 80043fe:	210a      	movs	r1, #10
 8004400:	4648      	mov	r0, r9
 8004402:	f017 fd2b 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 8004406:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 800440a:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 800440e:	f011 f8a7 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004412:	4bd5      	ldr	r3, [pc, #852]	; (8004768 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8004414:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004416:	ee1d 0a90 	vmov	r0, s27
 800441a:	2327      	movs	r3, #39	; 0x27
 800441c:	4631      	mov	r1, r6
 800441e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004422:	f011 f8bd 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 8004426:	ee1d 1a90 	vmov	r1, s27
 800442a:	ee18 0a90 	vmov	r0, s17
 800442e:	f00e fa8f 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 8004432:	ee1e 0a10 	vmov	r0, s28
 8004436:	2244      	movs	r2, #68	; 0x44
 8004438:	2116      	movs	r1, #22
 800443a:	f7ff f9bf 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800443e:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 8004442:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 8004446:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 800444a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800444e:	f8c4 2330 	str.w	r2, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 8004452:	ee1e 1a10 	vmov	r1, s28
 8004456:	4638      	mov	r0, r7
 8004458:	4798      	blx	r3
 800445a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800445e:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8004462:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004466:	4ac1      	ldr	r2, [pc, #772]	; (800476c <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 8004468:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 800446a:	f604 6908 	addw	r9, r4, #3592	; 0xe08
 800446e:	2b00      	cmp	r3, #0
 8004470:	d0a1      	beq.n	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004472:	4abf      	ldr	r2, [pc, #764]	; (8004770 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 8004474:	8813      	ldrh	r3, [r2, #0]
 8004476:	2b28      	cmp	r3, #40	; 0x28
 8004478:	d9a7      	bls.n	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800447a:	48b9      	ldr	r0, [pc, #740]	; (8004760 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800447c:	2128      	movs	r1, #40	; 0x28
 800447e:	6800      	ldr	r0, [r0, #0]
 8004480:	f006 f9ae 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8004484:	4ab7      	ldr	r2, [pc, #732]	; (8004764 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8004486:	4603      	mov	r3, r0
 8004488:	210a      	movs	r1, #10
 800448a:	4648      	mov	r0, r9
 800448c:	f017 fce6 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 8004490:	ee1e 0a10 	vmov	r0, s28
 8004494:	f8c4 9348 	str.w	r9, [r4, #840]	; 0x348
 8004498:	f011 f862 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800449c:	4bb2      	ldr	r3, [pc, #712]	; (8004768 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 800449e:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 80044a0:	ee1e 0a10 	vmov	r0, s28
 80044a4:	2329      	movs	r3, #41	; 0x29
 80044a6:	4631      	mov	r1, r6
 80044a8:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80044ac:	f011 f878 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 80044b0:	ee1e 1a10 	vmov	r1, s28
 80044b4:	ee18 0a90 	vmov	r0, s17
 80044b8:	f00e fa4a 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 80044bc:	2220      	movs	r2, #32
 80044be:	ee1e 0a90 	vmov	r0, s29
 80044c2:	2116      	movs	r1, #22
 80044c4:	f7ff f97a 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80044c8:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 80044cc:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 80044d0:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80044d4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80044d8:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 80044dc:	4638      	mov	r0, r7
 80044de:	ee1e 1a90 	vmov	r1, s29
 80044e2:	4798      	blx	r3
 80044e4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80044e8:	f504 7362 	add.w	r3, r4, #904	; 0x388
 80044ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80044f0:	499e      	ldr	r1, [pc, #632]	; (800476c <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80044f2:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 80044f4:	f604 691c 	addw	r9, r4, #3612	; 0xe1c
 80044f8:	2b00      	cmp	r3, #0
 80044fa:	f43f af5c 	beq.w	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80044fe:	4a9c      	ldr	r2, [pc, #624]	; (8004770 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 8004500:	8813      	ldrh	r3, [r2, #0]
 8004502:	2b2a      	cmp	r3, #42	; 0x2a
 8004504:	f67f af61 	bls.w	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004508:	4895      	ldr	r0, [pc, #596]	; (8004760 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800450a:	212a      	movs	r1, #42	; 0x2a
 800450c:	6800      	ldr	r0, [r0, #0]
 800450e:	f006 f967 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8004512:	4a94      	ldr	r2, [pc, #592]	; (8004764 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8004514:	4603      	mov	r3, r0
 8004516:	210a      	movs	r1, #10
 8004518:	4648      	mov	r0, r9
 800451a:	f017 fc9f 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 800451e:	ee1e 0a90 	vmov	r0, s29
 8004522:	f8c4 9394 	str.w	r9, [r4, #916]	; 0x394
 8004526:	f011 f81b 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800452a:	4b8f      	ldr	r3, [pc, #572]	; (8004768 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 800452c:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 800452e:	ee1e 0a90 	vmov	r0, s29
 8004532:	2331      	movs	r3, #49	; 0x31
 8004534:	4631      	mov	r1, r6
 8004536:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    line1_LP.setPosition(0, 15, 240, 10);
 800453a:	f04f 090a 	mov.w	r9, #10
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 800453e:	f011 f82f 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 8004542:	ee1e 1a90 	vmov	r1, s29
 8004546:	ee18 0a90 	vmov	r0, s17
 800454a:	f00e fa01 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 800454e:	23f0      	movs	r3, #240	; 0xf0
 8004550:	ee1a 0a90 	vmov	r0, s21
 8004554:	220f      	movs	r2, #15
 8004556:	4629      	mov	r1, r5
 8004558:	f8cd 9000 	str.w	r9, [sp]
 800455c:	f7ff f93b 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004560:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 8004564:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004566:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 800456a:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800456c:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 8004570:	ee1a 0a90 	vmov	r0, s21
 8004574:	f8c4 13c0 	str.w	r1, [r4, #960]	; 0x3c0
 8004578:	4611      	mov	r1, r2
 800457a:	f7ff fc59 	bl	8003e30 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 800457e:	2205      	movs	r2, #5
 8004580:	ee1a 0a90 	vmov	r0, s21
 8004584:	21eb      	movs	r1, #235	; 0xeb
 8004586:	f7ff fc57 	bl	8003e38 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 800458a:	ee1a 0a90 	vmov	r0, s21
 800458e:	4659      	mov	r1, fp
 8004590:	f7ff fc56 	bl	8003e40 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004594:	ee1a 0a90 	vmov	r0, s21
 8004598:	4659      	mov	r1, fp
 800459a:	f010 fbd1 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 800459e:	ee1a 1a90 	vmov	r1, s21
 80045a2:	ee18 0a90 	vmov	r0, s17
 80045a6:	f00e f9d3 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 80045aa:	462a      	mov	r2, r5
 80045ac:	9807      	ldr	r0, [sp, #28]
 80045ae:	2160      	movs	r1, #96	; 0x60
 80045b0:	f7ff f904 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80045b4:	f04f 3eff 	mov.w	lr, #4294967295
 80045b8:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        boundingArea = calculateBoundingArea();
 80045bc:	4638      	mov	r0, r7
 80045be:	9907      	ldr	r1, [sp, #28]
        linespace = space;
 80045c0:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 80045c4:	f010 fd52 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80045c8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80045cc:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 80045d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80045d4:	4b64      	ldr	r3, [pc, #400]	; (8004768 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 80045d6:	9807      	ldr	r0, [sp, #28]
 80045d8:	9329      	str	r3, [sp, #164]	; 0xa4
 80045da:	4631      	mov	r1, r6
 80045dc:	2325      	movs	r3, #37	; 0x25
 80045de:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80045e2:	f010 ffdd 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 80045e6:	9907      	ldr	r1, [sp, #28]
 80045e8:	ee18 0a90 	vmov	r0, s17
 80045ec:	f00e f9b0 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 80045f0:	ee18 1a90 	vmov	r1, s17
 80045f4:	ee18 0a10 	vmov	r0, s16
 80045f8:	f00e fe8d 	bl	8013316 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80045fc:	4b5d      	ldr	r3, [pc, #372]	; (8004774 <_ZN23Calibration_PadViewBaseC1Ev+0x914>)
    buttonWithIcon_RP3.setXY(194, 97);
 80045fe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004600:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
 8004604:	2261      	movs	r2, #97	; 0x61
 8004606:	21c2      	movs	r1, #194	; 0xc2
 8004608:	f7ff f8d8 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800460c:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004610:	4673      	mov	r3, lr
 8004612:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8004616:	4672      	mov	r2, lr
 8004618:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 800461c:	4671      	mov	r1, lr
 800461e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004620:	9600      	str	r6, [sp, #0]
 8004622:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004626:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800462a:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800462e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004632:	f011 fcaa 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004636:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 8004638:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800463a:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 800463e:	4650      	mov	r0, sl
 8004640:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 8004644:	f00e f984 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 8004648:	9814      	ldr	r0, [sp, #80]	; 0x50
 800464a:	223d      	movs	r2, #61	; 0x3d
 800464c:	21c2      	movs	r1, #194	; 0xc2
 800464e:	f7ff f8b5 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004652:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004656:	4673      	mov	r3, lr
 8004658:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800465c:	4672      	mov	r2, lr
 800465e:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004662:	4671      	mov	r1, lr
 8004664:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004666:	9600      	str	r6, [sp, #0]
 8004668:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800466c:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004670:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004674:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004678:	f011 fc87 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800467c:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 800467e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8004680:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 8004684:	4650      	mov	r0, sl
 8004686:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 800468a:	f00e f961 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 800468e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004690:	2219      	movs	r2, #25
 8004692:	21c2      	movs	r1, #194	; 0xc2
 8004694:	f7ff f892 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004698:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 800469c:	4673      	mov	r3, lr
 800469e:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80046a2:	4672      	mov	r2, lr
 80046a4:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80046a8:	4671      	mov	r1, lr
 80046aa:	9815      	ldr	r0, [sp, #84]	; 0x54
 80046ac:	9600      	str	r6, [sp, #0]
 80046ae:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80046b2:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80046b6:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80046ba:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80046be:	f011 fc64 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80046c2:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 80046c4:	9915      	ldr	r1, [sp, #84]	; 0x54
 80046c6:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 80046ca:	4650      	mov	r0, sl
 80046cc:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 80046d0:	f00e f93e 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 80046d4:	2268      	movs	r2, #104	; 0x68
 80046d6:	4649      	mov	r1, r9
 80046d8:	9808      	ldr	r0, [sp, #32]
 80046da:	f7ff f86f 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80046de:	f04f 3eff 	mov.w	lr, #4294967295
 80046e2:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 80046e6:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 80046ea:	4630      	mov	r0, r6
 80046ec:	f7ff f8ee 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80046f0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80046f4:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 80046f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80046fc:	491b      	ldr	r1, [pc, #108]	; (800476c <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80046fe:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 8004700:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 8004704:	2b00      	cmp	r3, #0
 8004706:	f43f ae56 	beq.w	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800470a:	4a19      	ldr	r2, [pc, #100]	; (8004770 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 800470c:	8813      	ldrh	r3, [r2, #0]
 800470e:	2b2f      	cmp	r3, #47	; 0x2f
 8004710:	f67f ae5b 	bls.w	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004714:	4812      	ldr	r0, [pc, #72]	; (8004760 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 8004716:	212f      	movs	r1, #47	; 0x2f
 8004718:	6800      	ldr	r0, [r0, #0]
 800471a:	f006 f861 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 800471e:	4a11      	ldr	r2, [pc, #68]	; (8004764 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8004720:	4603      	mov	r3, r0
 8004722:	4649      	mov	r1, r9
 8004724:	4638      	mov	r0, r7
 8004726:	f017 fb99 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 800472a:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 800472c:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 8004730:	f010 ff16 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004734:	4f0c      	ldr	r7, [pc, #48]	; (8004768 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8004736:	9808      	ldr	r0, [sp, #32]
 8004738:	9729      	str	r7, [sp, #164]	; 0xa4
 800473a:	2330      	movs	r3, #48	; 0x30
 800473c:	4631      	mov	r1, r6
 800473e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004742:	f010 ff2d 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 8004746:	9908      	ldr	r1, [sp, #32]
 8004748:	4650      	mov	r0, sl
 800474a:	f00e f901 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 800474e:	2244      	movs	r2, #68	; 0x44
 8004750:	2116      	movs	r1, #22
 8004752:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004754:	f7ff f832 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004758:	f04f 33ff 	mov.w	r3, #4294967295
 800475c:	e00c      	b.n	8004778 <_ZN23Calibration_PadViewBaseC1Ev+0x918>
 800475e:	bf00      	nop
 8004760:	200138b8 	.word	0x200138b8
 8004764:	0802f6b1 	.word	0x0802f6b1
 8004768:	0802f724 	.word	0x0802f724
 800476c:	200138ac 	.word	0x200138ac
 8004770:	200138b0 	.word	0x200138b0
 8004774:	00ac00f0 	.word	0x00ac00f0
 8004778:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
        linespace = space;
 800477c:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8004780:	4630      	mov	r0, r6
 8004782:	f7ff f8a3 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004786:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800478a:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 800478e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004792:	49da      	ldr	r1, [pc, #872]	; (8004afc <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>)
 8004794:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 8004796:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 800479a:	2b00      	cmp	r3, #0
 800479c:	f43f ae0b 	beq.w	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80047a0:	4ad7      	ldr	r2, [pc, #860]	; (8004b00 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80047a2:	8813      	ldrh	r3, [r2, #0]
 80047a4:	2b2d      	cmp	r3, #45	; 0x2d
 80047a6:	f67f ae10 	bls.w	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80047aa:	48d6      	ldr	r0, [pc, #856]	; (8004b04 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047ac:	f8df b34c 	ldr.w	fp, [pc, #844]	; 8004afc <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>
        return texts->getText(typedTextId);
 80047b0:	6800      	ldr	r0, [r0, #0]
 80047b2:	212d      	movs	r1, #45	; 0x2d
 80047b4:	f006 f814 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 80047b8:	4ad3      	ldr	r2, [pc, #844]	; (8004b08 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80047ba:	4603      	mov	r3, r0
 80047bc:	4649      	mov	r1, r9
 80047be:	4628      	mov	r0, r5
 80047c0:	f017 fb4c 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 80047c4:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 80047c6:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 80047ca:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 80047cc:	f010 fec8 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80047d0:	232e      	movs	r3, #46	; 0x2e
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 80047d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80047d4:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80047d8:	4629      	mov	r1, r5
 80047da:	9729      	str	r7, [sp, #164]	; 0xa4
 80047dc:	f010 fee0 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 80047e0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80047e2:	4650      	mov	r0, sl
 80047e4:	f00e f8b4 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80047e8:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 80047ec:	2220      	movs	r2, #32
 80047ee:	2116      	movs	r1, #22
 80047f0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80047f2:	f7fe ffe3 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80047f6:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 80047fa:	2600      	movs	r6, #0
 80047fc:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 8004800:	4628      	mov	r0, r5
 8004802:	f7ff f863 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004806:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800480a:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 800480e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004812:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 8004816:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 800481a:	2b00      	cmp	r3, #0
 800481c:	f43f adcb 	beq.w	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004820:	4ab7      	ldr	r2, [pc, #732]	; (8004b00 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004822:	8813      	ldrh	r3, [r2, #0]
 8004824:	2b2c      	cmp	r3, #44	; 0x2c
 8004826:	f67f add0 	bls.w	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800482a:	48b6      	ldr	r0, [pc, #728]	; (8004b04 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 800482c:	212c      	movs	r1, #44	; 0x2c
 800482e:	6800      	ldr	r0, [r0, #0]
 8004830:	f005 ffd6 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8004834:	4ab4      	ldr	r2, [pc, #720]	; (8004b08 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004836:	4603      	mov	r3, r0
 8004838:	4649      	mov	r1, r9
 800483a:	4638      	mov	r0, r7
 800483c:	f017 fb0e 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8004840:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8004842:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 8004846:	f010 fe8b 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800484a:	4fb0      	ldr	r7, [pc, #704]	; (8004b0c <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 800484c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800484e:	9729      	str	r7, [sp, #164]	; 0xa4
 8004850:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8004854:	4629      	mov	r1, r5
 8004856:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 800485a:	f010 fea1 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 800485e:	4650      	mov	r0, sl
 8004860:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004862:	f00e f875 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 8004866:	ee1b 0a10 	vmov	r0, s22
 800486a:	23f0      	movs	r3, #240	; 0xf0
 800486c:	220f      	movs	r2, #15
 800486e:	4631      	mov	r1, r6
 8004870:	f8cd 9000 	str.w	r9, [sp]
 8004874:	f7fe ffaf 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004878:	f04f 33ff 	mov.w	r3, #4294967295
 800487c:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 8004880:	2205      	movs	r2, #5
 8004882:	f8c4 36a4 	str.w	r3, [r4, #1700]	; 0x6a4
 8004886:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8004888:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 800488c:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
 8004890:	4611      	mov	r1, r2
 8004892:	ee1b 0a10 	vmov	r0, s22
 8004896:	f7ff facb 	bl	8003e30 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 800489a:	2205      	movs	r2, #5
 800489c:	ee1b 0a10 	vmov	r0, s22
 80048a0:	21eb      	movs	r1, #235	; 0xeb
 80048a2:	f7ff fac9 	bl	8003e38 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 80048a6:	ee1b 0a10 	vmov	r0, s22
 80048aa:	2101      	movs	r1, #1
 80048ac:	f7ff fac8 	bl	8003e40 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80048b0:	ee1b 0a10 	vmov	r0, s22
 80048b4:	2101      	movs	r1, #1
 80048b6:	f010 fa43 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 80048ba:	4650      	mov	r0, sl
 80048bc:	ee1b 1a10 	vmov	r1, s22
 80048c0:	f00e f846 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 80048c4:	4632      	mov	r2, r6
 80048c6:	ee1f 0a10 	vmov	r0, s30
 80048ca:	215c      	movs	r1, #92	; 0x5c
 80048cc:	f7fe ff76 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80048d0:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80048d4:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 80048d8:	4660      	mov	r0, ip
 80048da:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 80048de:	f8c4 36dc 	str.w	r3, [r4, #1756]	; 0x6dc
        linespace = space;
 80048e2:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 80048e6:	f010 fbc1 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80048ea:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 80048ee:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 80048f2:	ee1f 3a10 	vmov	r3, s30
 80048f6:	333c      	adds	r3, #60	; 0x3c
 80048f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80048fc:	232b      	movs	r3, #43	; 0x2b
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 80048fe:	ee1f 0a10 	vmov	r0, s30
 8004902:	4629      	mov	r1, r5
 8004904:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004908:	9729      	str	r7, [sp, #164]	; 0xa4
 800490a:	f010 fe49 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 800490e:	4650      	mov	r0, sl
 8004910:	ee1f 1a10 	vmov	r1, s30
 8004914:	f00e f81c 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 8004918:	4651      	mov	r1, sl
 800491a:	ee18 0a10 	vmov	r0, s16
 800491e:	f00e fcfa 	bl	8013316 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004922:	497b      	ldr	r1, [pc, #492]	; (8004b10 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
    buttonWithIcon_LH3.setXY(194, 97);
 8004924:	9816      	ldr	r0, [sp, #88]	; 0x58
 8004926:	f8c4 16fc 	str.w	r1, [r4, #1788]	; 0x6fc
 800492a:	2261      	movs	r2, #97	; 0x61
 800492c:	21c2      	movs	r1, #194	; 0xc2
 800492e:	f7fe ff45 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004932:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8004936:	4663      	mov	r3, ip
 8004938:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 800493c:	4662      	mov	r2, ip
 800493e:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004942:	2709      	movs	r7, #9
 8004944:	4661      	mov	r1, ip
 8004946:	f04f 0801 	mov.w	r8, #1
 800494a:	9816      	ldr	r0, [sp, #88]	; 0x58
 800494c:	9500      	str	r5, [sp, #0]
 800494e:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004952:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004956:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 800495a:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 800495e:	f011 fb14 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004962:	9b02      	ldr	r3, [sp, #8]
 8004964:	f8c4 3748 	str.w	r3, [r4, #1864]	; 0x748
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8004968:	9916      	ldr	r1, [sp, #88]	; 0x58
 800496a:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 800496e:	ee19 0a10 	vmov	r0, s18
 8004972:	f00d ffed 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 8004976:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004978:	223d      	movs	r2, #61	; 0x3d
 800497a:	21c2      	movs	r1, #194	; 0xc2
 800497c:	f7fe ff1e 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004980:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8004984:	4663      	mov	r3, ip
 8004986:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 800498a:	4662      	mov	r2, ip
 800498c:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004990:	4661      	mov	r1, ip
 8004992:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004994:	9500      	str	r5, [sp, #0]
 8004996:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800499a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 800499e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80049a2:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80049a6:	f011 faf0 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80049aa:	9b02      	ldr	r3, [sp, #8]
 80049ac:	f8c4 3784 	str.w	r3, [r4, #1924]	; 0x784
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 80049b0:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80049b2:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 80049b6:	ee19 0a10 	vmov	r0, s18
 80049ba:	f00d ffc9 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 80049be:	9818      	ldr	r0, [sp, #96]	; 0x60
 80049c0:	2219      	movs	r2, #25
 80049c2:	21c2      	movs	r1, #194	; 0xc2
 80049c4:	f7fe fefa 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80049c8:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80049cc:	4663      	mov	r3, ip
 80049ce:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 80049d2:	4662      	mov	r2, ip
 80049d4:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 80049d8:	4661      	mov	r1, ip
 80049da:	9818      	ldr	r0, [sp, #96]	; 0x60
 80049dc:	9500      	str	r5, [sp, #0]
 80049de:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 80049e2:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 80049e6:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80049ea:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80049ee:	f011 facc 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80049f2:	9b02      	ldr	r3, [sp, #8]
 80049f4:	f8c4 37c0 	str.w	r3, [r4, #1984]	; 0x7c0
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 80049f8:	9918      	ldr	r1, [sp, #96]	; 0x60
 80049fa:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 80049fe:	ee19 0a10 	vmov	r0, s18
 8004a02:	f00d ffa5 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 8004a06:	2268      	movs	r2, #104	; 0x68
 8004a08:	4649      	mov	r1, r9
 8004a0a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004a0c:	f7fe fed6 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004a10:	f04f 3cff 	mov.w	ip, #4294967295
 8004a14:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 8004a18:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 8004a1c:	4628      	mov	r0, r5
 8004a1e:	f7fe ff55 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004a22:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004a26:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 8004a2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a2e:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 8004a32:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 8004a36:	2b00      	cmp	r3, #0
 8004a38:	f43f acbd 	beq.w	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a3c:	4a30      	ldr	r2, [pc, #192]	; (8004b00 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004a3e:	8813      	ldrh	r3, [r2, #0]
 8004a40:	2b24      	cmp	r3, #36	; 0x24
 8004a42:	f67f acc2 	bls.w	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004a46:	482f      	ldr	r0, [pc, #188]	; (8004b04 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8004a48:	2124      	movs	r1, #36	; 0x24
 8004a4a:	6800      	ldr	r0, [r0, #0]
 8004a4c:	f005 fec8 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8004a50:	4a2d      	ldr	r2, [pc, #180]	; (8004b08 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004a52:	4603      	mov	r3, r0
 8004a54:	4649      	mov	r1, r9
 8004a56:	4650      	mov	r0, sl
 8004a58:	f017 fa00 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8004a5c:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8004a5e:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 8004a62:	f010 fd7d 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004a66:	4b29      	ldr	r3, [pc, #164]	; (8004b0c <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004a68:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004a6a:	9329      	str	r3, [sp, #164]	; 0xa4
 8004a6c:	4629      	mov	r1, r5
 8004a6e:	2327      	movs	r3, #39	; 0x27
 8004a70:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004a74:	f010 fd94 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8004a78:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004a7a:	ee19 0a10 	vmov	r0, s18
 8004a7e:	f00d ff67 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 8004a82:	2244      	movs	r2, #68	; 0x44
 8004a84:	2116      	movs	r1, #22
 8004a86:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004a88:	f7fe fe98 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004a8c:	f04f 3cff 	mov.w	ip, #4294967295
 8004a90:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 8004a94:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8004a98:	4628      	mov	r0, r5
 8004a9a:	f7fe ff17 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004a9e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004aa2:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 8004aa6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004aaa:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8004aae:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 8004ab2:	2b00      	cmp	r3, #0
 8004ab4:	f43f ac7f 	beq.w	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004ab8:	4a11      	ldr	r2, [pc, #68]	; (8004b00 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004aba:	8813      	ldrh	r3, [r2, #0]
 8004abc:	2b23      	cmp	r3, #35	; 0x23
 8004abe:	f67f ac84 	bls.w	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004ac2:	4810      	ldr	r0, [pc, #64]	; (8004b04 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8004ac4:	2123      	movs	r1, #35	; 0x23
 8004ac6:	6800      	ldr	r0, [r0, #0]
 8004ac8:	f005 fe8a 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8004acc:	4a0e      	ldr	r2, [pc, #56]	; (8004b08 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004ace:	4603      	mov	r3, r0
 8004ad0:	4649      	mov	r1, r9
 8004ad2:	4650      	mov	r0, sl
 8004ad4:	f017 f9c2 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8004ad8:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8004ada:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8004ade:	f010 fd3f 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004ae2:	4b0a      	ldr	r3, [pc, #40]	; (8004b0c <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004ae4:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004ae6:	9329      	str	r3, [sp, #164]	; 0xa4
 8004ae8:	4629      	mov	r1, r5
 8004aea:	2329      	movs	r3, #41	; 0x29
 8004aec:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004af0:	f010 fd56 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 8004af4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004af6:	ee19 0a10 	vmov	r0, s18
 8004afa:	e00b      	b.n	8004b14 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>
 8004afc:	200138ac 	.word	0x200138ac
 8004b00:	200138b0 	.word	0x200138b0
 8004b04:	200138b8 	.word	0x200138b8
 8004b08:	0802f6b1 	.word	0x0802f6b1
 8004b0c:	0802f724 	.word	0x0802f724
 8004b10:	00ac00f0 	.word	0x00ac00f0
 8004b14:	f00d ff1c 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8004b18:	2220      	movs	r2, #32
 8004b1a:	2116      	movs	r1, #22
 8004b1c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004b1e:	f7fe fe4d 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004b22:	f04f 3cff 	mov.w	ip, #4294967295
 8004b26:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 8004b2a:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 8004b2e:	4628      	mov	r0, r5
 8004b30:	f7fe fecc 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004b34:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004b38:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 8004b3c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004b40:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 8004b44:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 8004b48:	2b00      	cmp	r3, #0
 8004b4a:	f43f ac34 	beq.w	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004b4e:	4ada      	ldr	r2, [pc, #872]	; (8004eb8 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004b50:	8813      	ldrh	r3, [r2, #0]
 8004b52:	2b22      	cmp	r3, #34	; 0x22
 8004b54:	f67f ac39 	bls.w	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004b58:	48d8      	ldr	r0, [pc, #864]	; (8004ebc <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004b5a:	2122      	movs	r1, #34	; 0x22
 8004b5c:	6800      	ldr	r0, [r0, #0]
 8004b5e:	f005 fe3f 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8004b62:	4ad7      	ldr	r2, [pc, #860]	; (8004ec0 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004b64:	4603      	mov	r3, r0
 8004b66:	4649      	mov	r1, r9
 8004b68:	4650      	mov	r0, sl
 8004b6a:	f017 f977 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8004b6e:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8004b70:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8004b74:	f010 fcf4 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004b78:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8004b7c:	4bd1      	ldr	r3, [pc, #836]	; (8004ec4 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004b7e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004b80:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8004b84:	4629      	mov	r1, r5
 8004b86:	9329      	str	r3, [sp, #164]	; 0xa4
 8004b88:	f010 fd0a 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8004b8c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004b8e:	ee19 0a10 	vmov	r0, s18
 8004b92:	f00d fedd 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8004b96:	ee1b 0a90 	vmov	r0, s23
 8004b9a:	23f0      	movs	r3, #240	; 0xf0
 8004b9c:	220f      	movs	r2, #15
 8004b9e:	4631      	mov	r1, r6
 8004ba0:	f8cd 9000 	str.w	r9, [sp]
 8004ba4:	f7fe fe17 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ba8:	f04f 30ff 	mov.w	r0, #4294967295
 8004bac:	f64f 73ff 	movw	r3, #65535	; 0xffff
    line1_LH.setStart(5, 5);
 8004bb0:	2205      	movs	r2, #5
 8004bb2:	f8c4 0934 	str.w	r0, [r4, #2356]	; 0x934
 8004bb6:	981e      	ldr	r0, [sp, #120]	; 0x78
 8004bb8:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
 8004bbc:	4611      	mov	r1, r2
 8004bbe:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8004bc2:	ee1b 0a90 	vmov	r0, s23
 8004bc6:	f7ff f933 	bl	8003e30 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8004bca:	2205      	movs	r2, #5
 8004bcc:	ee1b 0a90 	vmov	r0, s23
 8004bd0:	21eb      	movs	r1, #235	; 0xeb
 8004bd2:	f7ff f931 	bl	8003e38 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8004bd6:	ee1b 0a90 	vmov	r0, s23
 8004bda:	4641      	mov	r1, r8
 8004bdc:	f7ff f930 	bl	8003e40 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004be0:	ee1b 0a90 	vmov	r0, s23
 8004be4:	4641      	mov	r1, r8
 8004be6:	f010 f8ab 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8004bea:	ee1b 1a90 	vmov	r1, s23
 8004bee:	ee19 0a10 	vmov	r0, s18
 8004bf2:	f00d fead 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8004bf6:	4632      	mov	r2, r6
 8004bf8:	ee1f 0a90 	vmov	r0, s31
 8004bfc:	2149      	movs	r1, #73	; 0x49
 8004bfe:	f7fe fddd 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004c02:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8004c06:	ee1f 1a90 	vmov	r1, s31
        color = newColor;
 8004c0a:	f8c4 096c 	str.w	r0, [r4, #2412]	; 0x96c
        linespace = space;
 8004c0e:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8004c12:	a822      	add	r0, sp, #136	; 0x88
 8004c14:	f010 fa2a 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004c18:	ee1f 0a90 	vmov	r0, s31
 8004c1c:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8004c20:	a822      	add	r0, sp, #136	; 0x88
 8004c22:	c807      	ldmia	r0, {r0, r1, r2}
 8004c24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004c28:	4ba6      	ldr	r3, [pc, #664]	; (8004ec4 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004c2a:	9329      	str	r3, [sp, #164]	; 0xa4
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8004c2c:	4629      	mov	r1, r5
 8004c2e:	2321      	movs	r3, #33	; 0x21
 8004c30:	ee1f 0a90 	vmov	r0, s31
 8004c34:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004c38:	f010 fcb2 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8004c3c:	ee1f 1a90 	vmov	r1, s31
 8004c40:	ee19 0a10 	vmov	r0, s18
 8004c44:	f00d fe84 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8004c48:	ee19 1a10 	vmov	r1, s18
 8004c4c:	ee18 0a10 	vmov	r0, s16
 8004c50:	f00e fb61 	bl	8013316 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004c54:	499c      	ldr	r1, [pc, #624]	; (8004ec8 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    buttonWithIcon_RH3.setXY(194, 97);
 8004c56:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004c58:	f8c4 198c 	str.w	r1, [r4, #2444]	; 0x98c
 8004c5c:	2261      	movs	r2, #97	; 0x61
 8004c5e:	21c2      	movs	r1, #194	; 0xc2
 8004c60:	f7fe fdac 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004c64:	a927      	add	r1, sp, #156	; 0x9c
 8004c66:	460a      	mov	r2, r1
 8004c68:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004c6a:	9500      	str	r5, [sp, #0]
 8004c6c:	ab28      	add	r3, sp, #160	; 0xa0
 8004c6e:	a926      	add	r1, sp, #152	; 0x98
 8004c70:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004c74:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004c78:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004c7c:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004c80:	f011 f983 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004c84:	9b02      	ldr	r3, [sp, #8]
 8004c86:	f8c4 39d8 	str.w	r3, [r4, #2520]	; 0x9d8
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8004c8a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004c8c:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8004c90:	ee19 0a90 	vmov	r0, s19
 8004c94:	f00d fe5c 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8004c98:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004c9a:	223d      	movs	r2, #61	; 0x3d
 8004c9c:	21c2      	movs	r1, #194	; 0xc2
 8004c9e:	f7fe fd8d 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004ca2:	a927      	add	r1, sp, #156	; 0x9c
 8004ca4:	460a      	mov	r2, r1
 8004ca6:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004ca8:	9500      	str	r5, [sp, #0]
 8004caa:	ab28      	add	r3, sp, #160	; 0xa0
 8004cac:	a926      	add	r1, sp, #152	; 0x98
 8004cae:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004cb2:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004cb6:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004cba:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004cbe:	f011 f964 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004cc2:	9b02      	ldr	r3, [sp, #8]
 8004cc4:	f8c4 3a14 	str.w	r3, [r4, #2580]	; 0xa14
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8004cc8:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004cca:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8004cce:	ee19 0a90 	vmov	r0, s19
 8004cd2:	f00d fe3d 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8004cd6:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004cd8:	2219      	movs	r2, #25
 8004cda:	21c2      	movs	r1, #194	; 0xc2
 8004cdc:	f7fe fd6e 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004ce0:	a927      	add	r1, sp, #156	; 0x9c
 8004ce2:	460a      	mov	r2, r1
 8004ce4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004ce6:	9500      	str	r5, [sp, #0]
 8004ce8:	ab28      	add	r3, sp, #160	; 0xa0
 8004cea:	a926      	add	r1, sp, #152	; 0x98
 8004cec:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004cf0:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004cf4:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004cf8:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004cfc:	f011 f945 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004d00:	9b02      	ldr	r3, [sp, #8]
 8004d02:	f8c4 3a50 	str.w	r3, [r4, #2640]	; 0xa50
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8004d06:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8004d08:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8004d0c:	ee19 0a90 	vmov	r0, s19
 8004d10:	f00d fe1e 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8004d14:	2268      	movs	r2, #104	; 0x68
 8004d16:	4649      	mov	r1, r9
 8004d18:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004d1a:	f7fe fd4f 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004d1e:	f04f 33ff 	mov.w	r3, #4294967295
 8004d22:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 8004d26:	4628      	mov	r0, r5
        linespace = space;
 8004d28:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8004d2c:	f7fe fdce 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004d30:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d34:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 8004d38:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004d3c:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004d40:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 8004d44:	2b00      	cmp	r3, #0
 8004d46:	f43f ab36 	beq.w	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004d4a:	4a5b      	ldr	r2, [pc, #364]	; (8004eb8 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004d4c:	8813      	ldrh	r3, [r2, #0]
 8004d4e:	2b20      	cmp	r3, #32
 8004d50:	f67f ab3b 	bls.w	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004d54:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8004ebc <_ZN23Calibration_PadViewBaseC1Ev+0x105c>
        : typedTextId(id)
 8004d58:	f8df a168 	ldr.w	sl, [pc, #360]	; 8004ec4 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>
        return texts->getText(typedTextId);
 8004d5c:	f8d8 0000 	ldr.w	r0, [r8]
 8004d60:	2120      	movs	r1, #32
 8004d62:	f005 fd3d 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8004d66:	4a56      	ldr	r2, [pc, #344]	; (8004ec0 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004d68:	4603      	mov	r3, r0
 8004d6a:	4649      	mov	r1, r9
 8004d6c:	4628      	mov	r0, r5
 8004d6e:	f017 f875 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004d72:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004d74:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004d78:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 8004d7a:	f010 fbf1 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004d7e:	2327      	movs	r3, #39	; 0x27
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004d80:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004d82:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004d86:	4629      	mov	r1, r5
 8004d88:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004d8c:	f010 fc08 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004d90:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004d92:	ee19 0a90 	vmov	r0, s19
 8004d96:	f00d fddb 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004d9a:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8004d9e:	2244      	movs	r2, #68	; 0x44
 8004da0:	2116      	movs	r1, #22
 8004da2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004da4:	f7fe fd0a 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8004da8:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 8004dac:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004db0:	4628      	mov	r0, r5
 8004db2:	f7fe fd8b 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004db6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004dba:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8004dbe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004dc2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 8004dc6:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 8004dca:	2b00      	cmp	r3, #0
 8004dcc:	f43f aaf3 	beq.w	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004dd0:	4a39      	ldr	r2, [pc, #228]	; (8004eb8 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004dd2:	8813      	ldrh	r3, [r2, #0]
 8004dd4:	2b1f      	cmp	r3, #31
 8004dd6:	f67f aaf8 	bls.w	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004dda:	211f      	movs	r1, #31
 8004ddc:	f8d8 0000 	ldr.w	r0, [r8]
 8004de0:	f005 fcfe 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8004de4:	4a36      	ldr	r2, [pc, #216]	; (8004ec0 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004de6:	4603      	mov	r3, r0
 8004de8:	210a      	movs	r1, #10
 8004dea:	4648      	mov	r0, r9
 8004dec:	f017 f836 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 8004df0:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 8004df2:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 8004df6:	f010 fbb3 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004dfa:	2329      	movs	r3, #41	; 0x29
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004dfc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004dfe:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004e02:	4629      	mov	r1, r5
 8004e04:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004e08:	f010 fbca 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 8004e0c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004e0e:	ee19 0a90 	vmov	r0, s19
 8004e12:	f00d fd9d 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8004e16:	2220      	movs	r2, #32
 8004e18:	2116      	movs	r1, #22
 8004e1a:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004e1c:	f7fe fcce 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004e20:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004e24:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8004e28:	4628      	mov	r0, r5
 8004e2a:	f7fe fd4f 	bl	80038cc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004e2e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e32:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004e36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004e3a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004e3e:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004e42:	2b00      	cmp	r3, #0
 8004e44:	f43f aab7 	beq.w	80043b6 <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004e48:	4a1b      	ldr	r2, [pc, #108]	; (8004eb8 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004e4a:	8813      	ldrh	r3, [r2, #0]
 8004e4c:	2b1e      	cmp	r3, #30
 8004e4e:	f67f aabc 	bls.w	80043ca <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004e52:	f8d8 0000 	ldr.w	r0, [r8]
 8004e56:	211e      	movs	r1, #30
 8004e58:	f005 fcc2 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8004e5c:	4a18      	ldr	r2, [pc, #96]	; (8004ec0 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004e5e:	4603      	mov	r3, r0
 8004e60:	210a      	movs	r1, #10
 8004e62:	4648      	mov	r0, r9
 8004e64:	f016 fffa 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8004e68:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8004e6a:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004e6e:	f010 fb77 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004e72:	2331      	movs	r3, #49	; 0x31
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004e74:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004e76:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004e7a:	4629      	mov	r1, r5
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004e7c:	f04f 090a 	mov.w	r9, #10
 8004e80:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004e84:	f010 fb8c 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004e88:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004e8a:	ee19 0a90 	vmov	r0, s19
 8004e8e:	f00d fd5f 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004e92:	ee1c 0a10 	vmov	r0, s24
 8004e96:	4631      	mov	r1, r6
 8004e98:	f8cd 9000 	str.w	r9, [sp]
 8004e9c:	23f0      	movs	r3, #240	; 0xf0
 8004e9e:	220f      	movs	r2, #15
 8004ea0:	f7fe fc99 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ea4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004ea6:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004eaa:	2205      	movs	r2, #5
 8004eac:	ee1c 0a10 	vmov	r0, s24
 8004eb0:	4611      	mov	r1, r2
 8004eb2:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 8004eb6:	e009      	b.n	8004ecc <_ZN23Calibration_PadViewBaseC1Ev+0x106c>
 8004eb8:	200138b0 	.word	0x200138b0
 8004ebc:	200138b8 	.word	0x200138b8
 8004ec0:	0802f6b1 	.word	0x0802f6b1
 8004ec4:	0802f724 	.word	0x0802f724
 8004ec8:	00ac00f0 	.word	0x00ac00f0
 8004ecc:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 8004ed0:	f7fe ffae 	bl	8003e30 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 8004ed4:	2205      	movs	r2, #5
 8004ed6:	ee1c 0a10 	vmov	r0, s24
 8004eda:	21eb      	movs	r1, #235	; 0xeb
 8004edc:	f7fe ffac 	bl	8003e38 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 8004ee0:	ee1c 0a10 	vmov	r0, s24
 8004ee4:	2101      	movs	r1, #1
 8004ee6:	f7fe ffab 	bl	8003e40 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004eea:	ee1c 0a10 	vmov	r0, s24
 8004eee:	2101      	movs	r1, #1
 8004ef0:	f00f ff26 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 8004ef4:	ee1c 1a10 	vmov	r1, s24
 8004ef8:	ee19 0a90 	vmov	r0, s19
 8004efc:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8004f00:	f00d fd26 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 8004f04:	4632      	mov	r2, r6
 8004f06:	9803      	ldr	r0, [sp, #12]
 8004f08:	2149      	movs	r1, #73	; 0x49
 8004f0a:	f7fe fc57 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8004f0e:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004f10:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 8004f14:	4640      	mov	r0, r8
        linespace = space;
 8004f16:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 8004f1a:	f010 f8a7 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f1e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004f22:	9b03      	ldr	r3, [sp, #12]
 8004f24:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004f28:	333c      	adds	r3, #60	; 0x3c
 8004f2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f2e:	231d      	movs	r3, #29
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 8004f30:	9803      	ldr	r0, [sp, #12]
 8004f32:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f36:	4629      	mov	r1, r5
 8004f38:	f010 fb32 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004f3c:	9903      	ldr	r1, [sp, #12]
 8004f3e:	ee19 0a90 	vmov	r0, s19
 8004f42:	f00d fd05 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004f46:	ee19 1a90 	vmov	r1, s19
 8004f4a:	ee18 0a10 	vmov	r0, s16
 8004f4e:	f00e f9e2 	bl	8013316 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8004f52:	ee18 0a10 	vmov	r0, s16
 8004f56:	4631      	mov	r1, r6
 8004f58:	f00e f9ce 	bl	80132f8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004f5c:	ee18 1a10 	vmov	r1, s16
 8004f60:	ee1a 0a10 	vmov	r0, s20
 8004f64:	f00d fcf4 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004f68:	ee1c 0a90 	vmov	r0, s25
 8004f6c:	4631      	mov	r1, r6
 8004f6e:	f8cd 9000 	str.w	r9, [sp]
 8004f72:	23f0      	movs	r3, #240	; 0xf0
 8004f74:	224b      	movs	r2, #75	; 0x4b
 8004f76:	f7fe fc2e 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004f7a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004f7e:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 8004f82:	2205      	movs	r2, #5
 8004f84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004f86:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004f8a:	ee1c 0a90 	vmov	r0, s25
 8004f8e:	4611      	mov	r1, r2
 8004f90:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004f94:	f7fe ff4c 	bl	8003e30 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004f98:	2205      	movs	r2, #5
 8004f9a:	ee1c 0a90 	vmov	r0, s25
 8004f9e:	21eb      	movs	r1, #235	; 0xeb
 8004fa0:	f7fe ff4a 	bl	8003e38 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004fa4:	ee1c 0a90 	vmov	r0, s25
 8004fa8:	2101      	movs	r1, #1
 8004faa:	f7fe ff49 	bl	8003e40 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004fae:	ee1c 0a90 	vmov	r0, s25
 8004fb2:	2101      	movs	r1, #1
 8004fb4:	f00f fec4 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004fb8:	ee1c 1a90 	vmov	r1, s25
 8004fbc:	ee1a 0a10 	vmov	r0, s20
 8004fc0:	f00d fcc6 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8004fc4:	9804      	ldr	r0, [sp, #16]
 8004fc6:	223c      	movs	r2, #60	; 0x3c
 8004fc8:	2146      	movs	r1, #70	; 0x46
 8004fca:	f7fe fbf7 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8004fce:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004fd0:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 8004fd4:	4640      	mov	r0, r8
        linespace = space;
 8004fd6:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 8004fda:	f010 f847 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004fde:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004fe2:	9b04      	ldr	r3, [sp, #16]
 8004fe4:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004fe8:	333c      	adds	r3, #60	; 0x3c
 8004fea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004fee:	233a      	movs	r3, #58	; 0x3a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004ff0:	9804      	ldr	r0, [sp, #16]
 8004ff2:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004ff6:	4629      	mov	r1, r5
 8004ff8:	f010 fad2 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ffc:	9904      	ldr	r1, [sp, #16]
 8004ffe:	ee1a 0a10 	vmov	r0, s20
 8005002:	f00d fca5 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005006:	ee1d 0a10 	vmov	r0, s26
 800500a:	4631      	mov	r1, r6
 800500c:	f8cd 9000 	str.w	r9, [sp]
 8005010:	23f0      	movs	r3, #240	; 0xf0
 8005012:	2232      	movs	r2, #50	; 0x32
 8005014:	f7fe fbdf 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005018:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800501a:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 800501e:	2205      	movs	r2, #5
 8005020:	ee1d 0a10 	vmov	r0, s26
 8005024:	4611      	mov	r1, r2
 8005026:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 800502a:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 800502e:	f7fe feff 	bl	8003e30 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 8005032:	2205      	movs	r2, #5
 8005034:	ee1d 0a10 	vmov	r0, s26
 8005038:	21eb      	movs	r1, #235	; 0xeb
 800503a:	f7fe fefd 	bl	8003e38 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 800503e:	ee1d 0a10 	vmov	r0, s26
 8005042:	2101      	movs	r1, #1
 8005044:	f7fe fefc 	bl	8003e40 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005048:	ee1d 0a10 	vmov	r0, s26
 800504c:	2101      	movs	r1, #1
 800504e:	f00f fe77 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005052:	ee1d 1a10 	vmov	r1, s26
 8005056:	ee1a 0a10 	vmov	r0, s20
 800505a:	f00d fc79 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 800505e:	9805      	ldr	r0, [sp, #20]
 8005060:	2223      	movs	r2, #35	; 0x23
 8005062:	2145      	movs	r1, #69	; 0x45
 8005064:	f7fe fbaa 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8005068:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 800506a:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 800506e:	4640      	mov	r0, r8
        linespace = space;
 8005070:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8005074:	f00f fffa 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005078:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800507c:	9b05      	ldr	r3, [sp, #20]
 800507e:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8005082:	333c      	adds	r3, #60	; 0x3c
 8005084:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005088:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800508a:	9805      	ldr	r0, [sp, #20]
 800508c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8005090:	4629      	mov	r1, r5
 8005092:	f010 fa85 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005096:	9905      	ldr	r1, [sp, #20]
 8005098:	ee1a 0a10 	vmov	r0, s20
 800509c:	f00d fc58 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80050a0:	9806      	ldr	r0, [sp, #24]
 80050a2:	220c      	movs	r2, #12
 80050a4:	2136      	movs	r1, #54	; 0x36
 80050a6:	f7fe fb89 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80050aa:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 80050ac:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 80050b0:	4640      	mov	r0, r8
        linespace = space;
 80050b2:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 80050b6:	f00f ffd9 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80050ba:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80050be:	9b06      	ldr	r3, [sp, #24]
 80050c0:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80050c4:	333c      	adds	r3, #60	; 0x3c
 80050c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80050ca:	233d      	movs	r3, #61	; 0x3d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80050cc:	9806      	ldr	r0, [sp, #24]
 80050ce:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80050d2:	4629      	mov	r1, r5
 80050d4:	f010 fa64 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80050d8:	ee1a 0a10 	vmov	r0, s20
 80050dc:	9906      	ldr	r1, [sp, #24]
 80050de:	f00d fc37 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80050e2:	4620      	mov	r0, r4
 80050e4:	b02d      	add	sp, #180	; 0xb4
 80050e6:	ecbd 8b10 	vpop	{d8-d15}
 80050ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80050ee:	bf00      	nop

080050f0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80050f0:	4770      	bx	lr

080050f2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80050f2:	4770      	bx	lr

080050f4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80050f4:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80050f8:	6808      	ldr	r0, [r1, #0]
 80050fa:	6849      	ldr	r1, [r1, #4]
 80050fc:	c303      	stmia	r3!, {r0, r1}
    }
 80050fe:	4770      	bx	lr

08005100 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8005100:	4770      	bx	lr

08005102 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8005102:	4770      	bx	lr

08005104 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8005104:	6041      	str	r1, [r0, #4]
    }
 8005106:	4770      	bx	lr

08005108 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8005108:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800510a:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 800510c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8005110:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8005114:	8002      	strh	r2, [r0, #0]
 8005116:	8042      	strh	r2, [r0, #2]
 8005118:	8084      	strh	r4, [r0, #4]
 800511a:	80c1      	strh	r1, [r0, #6]
        }
 800511c:	bd10      	pop	{r4, pc}

0800511e <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800511e:	4770      	bx	lr

08005120 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8005120:	4770      	bx	lr
	...

08005124 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005124:	4b06      	ldr	r3, [pc, #24]	; (8005140 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8005126:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800512a:	2300      	movs	r3, #0
 800512c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8005130:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005134:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005138:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 800513c:	4770      	bx	lr
 800513e:	bf00      	nop
 8005140:	080054e1 	.word	0x080054e1

08005144 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8005144:	2301      	movs	r3, #1
 8005146:	7203      	strb	r3, [r0, #8]
    }
 8005148:	4770      	bx	lr

0800514a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800514a:	4770      	bx	lr

0800514c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800514c:	4770      	bx	lr

0800514e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800514e:	4770      	bx	lr

08005150 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8005150:	4770      	bx	lr

08005152 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8005152:	4770      	bx	lr

08005154 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8005154:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8005156:	6840      	ldr	r0, [r0, #4]
 8005158:	6803      	ldr	r3, [r0, #0]
 800515a:	3110      	adds	r1, #16
 800515c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800515e:	4718      	bx	r3

08005160 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8005160:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8005162:	6840      	ldr	r0, [r0, #4]
 8005164:	6803      	ldr	r3, [r0, #0]
 8005166:	3110      	adds	r1, #16
 8005168:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800516a:	4718      	bx	r3

0800516c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800516c:	4770      	bx	lr

0800516e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800516e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8005170:	6840      	ldr	r0, [r0, #4]
 8005172:	6803      	ldr	r3, [r0, #0]
 8005174:	3110      	adds	r1, #16
 8005176:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005178:	4718      	bx	r3

0800517a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800517a:	4601      	mov	r1, r0
        screenContainer->add(solid);
 800517c:	6840      	ldr	r0, [r0, #4]
 800517e:	6803      	ldr	r3, [r0, #0]
 8005180:	3110      	adds	r1, #16
 8005182:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005184:	4718      	bx	r3

08005186 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8005186:	4770      	bx	lr

08005188 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8005188:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800518a:	68c2      	ldr	r2, [r0, #12]
 800518c:	6841      	ldr	r1, [r0, #4]
 800518e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8005190:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8005192:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8005196:	07d2      	lsls	r2, r2, #31
 8005198:	bf48      	it	mi
 800519a:	590a      	ldrmi	r2, [r1, r4]
 800519c:	689b      	ldr	r3, [r3, #8]
    }
 800519e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80051a2:	bf48      	it	mi
 80051a4:	58d3      	ldrmi	r3, [r2, r3]
 80051a6:	4718      	bx	r3

080051a8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80051a8:	6843      	ldr	r3, [r0, #4]
 80051aa:	b12b      	cbz	r3, 80051b8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80051ac:	6883      	ldr	r3, [r0, #8]
 80051ae:	b92b      	cbnz	r3, 80051bc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80051b0:	68c0      	ldr	r0, [r0, #12]
 80051b2:	f000 0001 	and.w	r0, r0, #1
 80051b6:	4770      	bx	lr
 80051b8:	4618      	mov	r0, r3
 80051ba:	4770      	bx	lr
 80051bc:	2001      	movs	r0, #1
    }
 80051be:	4770      	bx	lr

080051c0 <_ZN8touchgfx12NoTransitionD0Ev>:
 80051c0:	b510      	push	{r4, lr}
 80051c2:	210c      	movs	r1, #12
 80051c4:	4604      	mov	r4, r0
 80051c6:	f027 fdf8 	bl	802cdba <_ZdlPvj>
 80051ca:	4620      	mov	r0, r4
 80051cc:	bd10      	pop	{r4, pc}

080051ce <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80051ce:	b510      	push	{r4, lr}
 80051d0:	2110      	movs	r1, #16
 80051d2:	4604      	mov	r4, r0
 80051d4:	f027 fdf1 	bl	802cdba <_ZdlPvj>
 80051d8:	4620      	mov	r0, r4
 80051da:	bd10      	pop	{r4, pc}

080051dc <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80051dc:	b510      	push	{r4, lr}
 80051de:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80051e2:	4604      	mov	r4, r0
 80051e4:	f027 fde9 	bl	802cdba <_ZdlPvj>
 80051e8:	4620      	mov	r0, r4
 80051ea:	bd10      	pop	{r4, pc}

080051ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80051ec:	b510      	push	{r4, lr}
 80051ee:	2138      	movs	r1, #56	; 0x38
 80051f0:	4604      	mov	r4, r0
 80051f2:	f027 fde2 	bl	802cdba <_ZdlPvj>
 80051f6:	4620      	mov	r0, r4
 80051f8:	bd10      	pop	{r4, pc}

080051fa <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80051fa:	b510      	push	{r4, lr}
 80051fc:	2128      	movs	r1, #40	; 0x28
 80051fe:	4604      	mov	r4, r0
 8005200:	f027 fddb 	bl	802cdba <_ZdlPvj>
 8005204:	4620      	mov	r0, r4
 8005206:	bd10      	pop	{r4, pc}

08005208 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8005208:	b510      	push	{r4, lr}
 800520a:	2138      	movs	r1, #56	; 0x38
 800520c:	4604      	mov	r4, r0
 800520e:	f027 fdd4 	bl	802cdba <_ZdlPvj>
 8005212:	4620      	mov	r0, r4
 8005214:	bd10      	pop	{r4, pc}

08005216 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8005216:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8005218:	f013 fc72 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 800521c:	6803      	ldr	r3, [r0, #0]
    }
 800521e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8005222:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005224:	4718      	bx	r3
	...

08005228 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8005228:	b513      	push	{r0, r1, r4, lr}
 800522a:	4604      	mov	r4, r0
        animationCounter++;
 800522c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800522e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8005230:	3001      	adds	r0, #1
 8005232:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8005234:	4298      	cmp	r0, r3
        animationCounter++;
 8005236:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8005238:	d905      	bls.n	8005246 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 800523a:	2301      	movs	r3, #1
 800523c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800523e:	2300      	movs	r3, #0
 8005240:	72a3      	strb	r3, [r4, #10]
    }
 8005242:	b002      	add	sp, #8
 8005244:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005246:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800524a:	2100      	movs	r1, #0
 800524c:	f015 fac8 	bl	801a7e0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8005250:	f010 0201 	ands.w	r2, r0, #1
 8005254:	b283      	uxth	r3, r0
 8005256:	d12a      	bne.n	80052ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005258:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800525a:	4a19      	ldr	r2, [pc, #100]	; (80052c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 800525c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8005260:	89e3      	ldrh	r3, [r4, #14]
 8005262:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8005264:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8005268:	82a0      	strh	r0, [r4, #20]
 800526a:	2000      	movs	r0, #0
 800526c:	1ad2      	subs	r2, r2, r3
 800526e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8005272:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8005274:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8005276:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8005278:	4a12      	ldr	r2, [pc, #72]	; (80052c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800527a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800527e:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8005280:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8005284:	691b      	ldr	r3, [r3, #16]
 8005286:	f8ad 1000 	strh.w	r1, [sp]
 800528a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800528e:	4669      	mov	r1, sp
 8005290:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8005292:	7aa3      	ldrb	r3, [r4, #10]
 8005294:	2b01      	cmp	r3, #1
 8005296:	d1d4      	bne.n	8005242 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8005298:	4b0b      	ldr	r3, [pc, #44]	; (80052c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800529a:	781b      	ldrb	r3, [r3, #0]
 800529c:	2b00      	cmp	r3, #0
 800529e:	d0d0      	beq.n	8005242 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80052a0:	f013 fc2e 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80052a4:	b002      	add	sp, #8
 80052a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80052aa:	f013 bc2f 	b.w	8018b0c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80052ae:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80052b2:	2800      	cmp	r0, #0
 80052b4:	bfd8      	it	le
 80052b6:	460a      	movle	r2, r1
 80052b8:	4413      	add	r3, r2
 80052ba:	81e3      	strh	r3, [r4, #14]
 80052bc:	e7cd      	b.n	800525a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80052be:	bf00      	nop
 80052c0:	20013848 	.word	0x20013848
 80052c4:	2001384a 	.word	0x2001384a
 80052c8:	20013852 	.word	0x20013852

080052cc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80052cc:	b510      	push	{r4, lr}
 80052ce:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80052d0:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80052d4:	b158      	cbz	r0, 80052ee <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80052d6:	6803      	ldr	r3, [r0, #0]
 80052d8:	68db      	ldr	r3, [r3, #12]
 80052da:	4798      	blx	r3
 80052dc:	b138      	cbz	r0, 80052ee <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80052de:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80052e2:	6803      	ldr	r3, [r0, #0]
 80052e4:	689b      	ldr	r3, [r3, #8]
 80052e6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80052e8:	2300      	movs	r3, #0
 80052ea:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80052ee:	bd10      	pop	{r4, pc}

080052f0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80052f0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80052f4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80052f8:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80052fa:	68a8      	ldr	r0, [r5, #8]
 80052fc:	6803      	ldr	r3, [r0, #0]
 80052fe:	6a1b      	ldr	r3, [r3, #32]
 8005300:	4798      	blx	r3
 8005302:	2897      	cmp	r0, #151	; 0x97
 8005304:	d805      	bhi.n	8005312 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8005306:	4b46      	ldr	r3, [pc, #280]	; (8005420 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8005308:	4a46      	ldr	r2, [pc, #280]	; (8005424 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800530a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800530c:	4846      	ldr	r0, [pc, #280]	; (8005428 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 800530e:	f028 fc3b 	bl	802db88 <__assert_func>
 8005312:	6868      	ldr	r0, [r5, #4]
 8005314:	6803      	ldr	r3, [r0, #0]
 8005316:	6a1b      	ldr	r3, [r3, #32]
 8005318:	4798      	blx	r3
 800531a:	280f      	cmp	r0, #15
 800531c:	d803      	bhi.n	8005326 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 800531e:	4b43      	ldr	r3, [pc, #268]	; (800542c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8005320:	4a40      	ldr	r2, [pc, #256]	; (8005424 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8005322:	21a4      	movs	r1, #164	; 0xa4
 8005324:	e7f2      	b.n	800530c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005326:	68e8      	ldr	r0, [r5, #12]
 8005328:	6803      	ldr	r3, [r0, #0]
 800532a:	6a1b      	ldr	r3, [r3, #32]
 800532c:	4798      	blx	r3
 800532e:	280b      	cmp	r0, #11
 8005330:	d803      	bhi.n	800533a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8005332:	4b3f      	ldr	r3, [pc, #252]	; (8005430 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8005334:	4a3b      	ldr	r2, [pc, #236]	; (8005424 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8005336:	21a5      	movs	r1, #165	; 0xa5
 8005338:	e7e8      	b.n	800530c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800533a:	f013 fbe1 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800533e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8005438 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8005342:	3004      	adds	r0, #4
 8005344:	f013 fc42 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005348:	f8d9 0000 	ldr.w	r0, [r9]
 800534c:	b110      	cbz	r0, 8005354 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800534e:	6803      	ldr	r3, [r0, #0]
 8005350:	68db      	ldr	r3, [r3, #12]
 8005352:	4798      	blx	r3
    if (*currentTrans)
 8005354:	f8d9 0000 	ldr.w	r0, [r9]
 8005358:	b110      	cbz	r0, 8005360 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800535a:	6803      	ldr	r3, [r0, #0]
 800535c:	681b      	ldr	r3, [r3, #0]
 800535e:	4798      	blx	r3
    if (*currentScreen)
 8005360:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800543c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8005364:	f8d8 0000 	ldr.w	r0, [r8]
 8005368:	b110      	cbz	r0, 8005370 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800536a:	6803      	ldr	r3, [r0, #0]
 800536c:	695b      	ldr	r3, [r3, #20]
 800536e:	4798      	blx	r3
    if (*currentPresenter)
 8005370:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005374:	b110      	cbz	r0, 800537c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8005376:	6803      	ldr	r3, [r0, #0]
 8005378:	685b      	ldr	r3, [r3, #4]
 800537a:	4798      	blx	r3
    if (*currentScreen)
 800537c:	f8d8 0000 	ldr.w	r0, [r8]
 8005380:	b110      	cbz	r0, 8005388 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8005382:	6803      	ldr	r3, [r0, #0]
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	4798      	blx	r3
    if (*currentPresenter)
 8005388:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800538c:	b110      	cbz	r0, 8005394 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800538e:	6803      	ldr	r3, [r0, #0]
 8005390:	689b      	ldr	r3, [r3, #8]
 8005392:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005394:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8005396:	6803      	ldr	r3, [r0, #0]
 8005398:	2100      	movs	r1, #0
 800539a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800539c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800539e:	f04f 0b00 	mov.w	fp, #0
 80053a2:	4b24      	ldr	r3, [pc, #144]	; (8005434 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 80053a4:	6003      	str	r3, [r0, #0]
 80053a6:	4604      	mov	r4, r0
 80053a8:	f8c0 b004 	str.w	fp, [r0, #4]
 80053ac:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80053b0:	68a8      	ldr	r0, [r5, #8]
 80053b2:	6803      	ldr	r3, [r0, #0]
 80053b4:	4659      	mov	r1, fp
 80053b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053b8:	4798      	blx	r3
 80053ba:	4606      	mov	r6, r0
 80053bc:	f005 fee4 	bl	800b188 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80053c0:	6868      	ldr	r0, [r5, #4]
 80053c2:	6803      	ldr	r3, [r0, #0]
 80053c4:	4659      	mov	r1, fp
 80053c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053c8:	4798      	blx	r3
 80053ca:	4631      	mov	r1, r6
 80053cc:	4605      	mov	r5, r0
 80053ce:	f005 feb7 	bl	800b140 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80053d2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80053d6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80053da:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80053de:	b1e5      	cbz	r5, 800541a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80053e0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80053e2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80053e6:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80053e8:	f8c5 a008 	str.w	sl, [r5, #8]
 80053ec:	4630      	mov	r0, r6
 80053ee:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80053f0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80053f2:	4798      	blx	r3
    newPresenter->activate();
 80053f4:	682b      	ldr	r3, [r5, #0]
 80053f6:	4628      	mov	r0, r5
 80053f8:	681b      	ldr	r3, [r3, #0]
 80053fa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80053fc:	4621      	mov	r1, r4
 80053fe:	4630      	mov	r0, r6
 8005400:	f015 f9aa 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005404:	6823      	ldr	r3, [r4, #0]
 8005406:	4620      	mov	r0, r4
 8005408:	691b      	ldr	r3, [r3, #16]
 800540a:	4798      	blx	r3
    newTransition->invalidate();
 800540c:	6823      	ldr	r3, [r4, #0]
 800540e:	695b      	ldr	r3, [r3, #20]
 8005410:	4620      	mov	r0, r4
}
 8005412:	b001      	add	sp, #4
 8005414:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005418:	4718      	bx	r3
    model->bind(newPresenter);
 800541a:	462b      	mov	r3, r5
 800541c:	e7e1      	b.n	80053e2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 800541e:	bf00      	nop
 8005420:	0802f8a0 	.word	0x0802f8a0
 8005424:	0802f92e 	.word	0x0802f92e
 8005428:	0802fa3c 	.word	0x0802fa3c
 800542c:	0802fa83 	.word	0x0802fa83
 8005430:	0802fb26 	.word	0x0802fb26
 8005434:	08030be0 	.word	0x08030be0
 8005438:	2001389c 	.word	0x2001389c
 800543c:	20013898 	.word	0x20013898

08005440 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8005440:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005442:	4604      	mov	r4, r0
        animationCounter++;
 8005444:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8005446:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8005448:	3001      	adds	r0, #1
 800544a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800544c:	4298      	cmp	r0, r3
        animationCounter++;
 800544e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8005450:	d905      	bls.n	800545e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8005452:	2301      	movs	r3, #1
 8005454:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8005456:	2300      	movs	r3, #0
 8005458:	72a3      	strb	r3, [r4, #10]
    }
 800545a:	b003      	add	sp, #12
 800545c:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800545e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005462:	2100      	movs	r1, #0
 8005464:	f015 f9bc 	bl	801a7e0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8005468:	f010 0201 	ands.w	r2, r0, #1
 800546c:	b283      	uxth	r3, r0
 800546e:	d128      	bne.n	80054c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005470:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005472:	4b18      	ldr	r3, [pc, #96]	; (80054d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8005474:	4818      	ldr	r0, [pc, #96]	; (80054d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005476:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8005478:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800547a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800547c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8005480:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005484:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8005486:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8005488:	442b      	add	r3, r5
 800548a:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800548c:	b212      	sxth	r2, r2
 800548e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8005492:	6803      	ldr	r3, [r0, #0]
 8005494:	8322      	strh	r2, [r4, #24]
 8005496:	f8ad 2000 	strh.w	r2, [sp]
 800549a:	2200      	movs	r2, #0
 800549c:	691b      	ldr	r3, [r3, #16]
 800549e:	f8ad 2002 	strh.w	r2, [sp, #2]
 80054a2:	4669      	mov	r1, sp
 80054a4:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80054a6:	7aa3      	ldrb	r3, [r4, #10]
 80054a8:	2b01      	cmp	r3, #1
 80054aa:	d1d6      	bne.n	800545a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80054ac:	4b0b      	ldr	r3, [pc, #44]	; (80054dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80054ae:	781b      	ldrb	r3, [r3, #0]
 80054b0:	2b00      	cmp	r3, #0
 80054b2:	d0d2      	beq.n	800545a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80054b4:	f013 fb24 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80054b8:	b003      	add	sp, #12
 80054ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80054be:	f013 bb25 	b.w	8018b0c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80054c2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80054c6:	2800      	cmp	r0, #0
 80054c8:	bfd8      	it	le
 80054ca:	460a      	movle	r2, r1
 80054cc:	4413      	add	r3, r2
 80054ce:	81e3      	strh	r3, [r4, #14]
 80054d0:	e7cf      	b.n	8005472 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80054d2:	bf00      	nop
 80054d4:	20013848 	.word	0x20013848
 80054d8:	2001384a 	.word	0x2001384a
 80054dc:	20013852 	.word	0x20013852

080054e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80054e0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80054e4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80054e8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80054ea:	68a8      	ldr	r0, [r5, #8]
 80054ec:	6803      	ldr	r3, [r0, #0]
 80054ee:	6a1b      	ldr	r3, [r3, #32]
 80054f0:	4798      	blx	r3
 80054f2:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 80054f6:	d205      	bcs.n	8005504 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x24>
 80054f8:	4b45      	ldr	r3, [pc, #276]	; (8005610 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x130>)
 80054fa:	4a46      	ldr	r2, [pc, #280]	; (8005614 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80054fc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80054fe:	4846      	ldr	r0, [pc, #280]	; (8005618 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8005500:	f028 fb42 	bl	802db88 <__assert_func>
 8005504:	6868      	ldr	r0, [r5, #4]
 8005506:	6803      	ldr	r3, [r0, #0]
 8005508:	6a1b      	ldr	r3, [r3, #32]
 800550a:	4798      	blx	r3
 800550c:	280f      	cmp	r0, #15
 800550e:	d803      	bhi.n	8005518 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x38>
 8005510:	4b42      	ldr	r3, [pc, #264]	; (800561c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8005512:	4a40      	ldr	r2, [pc, #256]	; (8005614 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8005514:	21a4      	movs	r1, #164	; 0xa4
 8005516:	e7f2      	b.n	80054fe <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005518:	68e8      	ldr	r0, [r5, #12]
 800551a:	6803      	ldr	r3, [r0, #0]
 800551c:	6a1b      	ldr	r3, [r3, #32]
 800551e:	4798      	blx	r3
 8005520:	280b      	cmp	r0, #11
 8005522:	d803      	bhi.n	800552c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4c>
 8005524:	4b3e      	ldr	r3, [pc, #248]	; (8005620 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8005526:	4a3b      	ldr	r2, [pc, #236]	; (8005614 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8005528:	21a5      	movs	r1, #165	; 0xa5
 800552a:	e7e8      	b.n	80054fe <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800552c:	f013 fae8 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005530:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8005628 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>
 8005534:	3004      	adds	r0, #4
 8005536:	f013 fb49 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800553a:	f8d9 0000 	ldr.w	r0, [r9]
 800553e:	b110      	cbz	r0, 8005546 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8005540:	6803      	ldr	r3, [r0, #0]
 8005542:	68db      	ldr	r3, [r3, #12]
 8005544:	4798      	blx	r3
    if (*currentTrans)
 8005546:	f8d9 0000 	ldr.w	r0, [r9]
 800554a:	b110      	cbz	r0, 8005552 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 800554c:	6803      	ldr	r3, [r0, #0]
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	4798      	blx	r3
    if (*currentScreen)
 8005552:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800562c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8005556:	f8d8 0000 	ldr.w	r0, [r8]
 800555a:	b110      	cbz	r0, 8005562 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800555c:	6803      	ldr	r3, [r0, #0]
 800555e:	695b      	ldr	r3, [r3, #20]
 8005560:	4798      	blx	r3
    if (*currentPresenter)
 8005562:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005566:	b110      	cbz	r0, 800556e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005568:	6803      	ldr	r3, [r0, #0]
 800556a:	685b      	ldr	r3, [r3, #4]
 800556c:	4798      	blx	r3
    if (*currentScreen)
 800556e:	f8d8 0000 	ldr.w	r0, [r8]
 8005572:	b110      	cbz	r0, 800557a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005574:	6803      	ldr	r3, [r0, #0]
 8005576:	681b      	ldr	r3, [r3, #0]
 8005578:	4798      	blx	r3
    if (*currentPresenter)
 800557a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800557e:	b110      	cbz	r0, 8005586 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005580:	6803      	ldr	r3, [r0, #0]
 8005582:	689b      	ldr	r3, [r3, #8]
 8005584:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005586:	68e8      	ldr	r0, [r5, #12]
 8005588:	6803      	ldr	r3, [r0, #0]
 800558a:	2100      	movs	r1, #0
 800558c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800558e:	4798      	blx	r3
 8005590:	f04f 0b00 	mov.w	fp, #0
 8005594:	4b23      	ldr	r3, [pc, #140]	; (8005624 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8005596:	6003      	str	r3, [r0, #0]
 8005598:	4604      	mov	r4, r0
 800559a:	f8c0 b004 	str.w	fp, [r0, #4]
 800559e:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80055a2:	68a8      	ldr	r0, [r5, #8]
 80055a4:	6803      	ldr	r3, [r0, #0]
 80055a6:	4659      	mov	r1, fp
 80055a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055aa:	4798      	blx	r3
 80055ac:	4606      	mov	r6, r0
 80055ae:	f005 faa7 	bl	800ab00 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80055b2:	6868      	ldr	r0, [r5, #4]
 80055b4:	6803      	ldr	r3, [r0, #0]
 80055b6:	4659      	mov	r1, fp
 80055b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055ba:	4798      	blx	r3
 80055bc:	4631      	mov	r1, r6
 80055be:	4605      	mov	r5, r0
 80055c0:	f005 fa78 	bl	800aab4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80055c4:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80055c8:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80055cc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80055d0:	b1e5      	cbz	r5, 800560c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12c>
 80055d2:	1d2b      	adds	r3, r5, #4
 80055d4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80055d8:	6833      	ldr	r3, [r6, #0]
 80055da:	f8c5 a008 	str.w	sl, [r5, #8]
 80055de:	4630      	mov	r0, r6
 80055e0:	68db      	ldr	r3, [r3, #12]
 80055e2:	63f5      	str	r5, [r6, #60]	; 0x3c
 80055e4:	4798      	blx	r3
    newPresenter->activate();
 80055e6:	682b      	ldr	r3, [r5, #0]
 80055e8:	4628      	mov	r0, r5
 80055ea:	681b      	ldr	r3, [r3, #0]
 80055ec:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80055ee:	4621      	mov	r1, r4
 80055f0:	4630      	mov	r0, r6
 80055f2:	f015 f8b1 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80055f6:	6823      	ldr	r3, [r4, #0]
 80055f8:	4620      	mov	r0, r4
 80055fa:	691b      	ldr	r3, [r3, #16]
 80055fc:	4798      	blx	r3
    newTransition->invalidate();
 80055fe:	6823      	ldr	r3, [r4, #0]
 8005600:	695b      	ldr	r3, [r3, #20]
 8005602:	4620      	mov	r0, r4
}
 8005604:	b001      	add	sp, #4
 8005606:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800560a:	4718      	bx	r3
    model->bind(newPresenter);
 800560c:	462b      	mov	r3, r5
 800560e:	e7e1      	b.n	80055d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf4>
 8005610:	0802f8a0 	.word	0x0802f8a0
 8005614:	0802fbc9 	.word	0x0802fbc9
 8005618:	0802fa3c 	.word	0x0802fa3c
 800561c:	0802fa83 	.word	0x0802fa83
 8005620:	0802fb26 	.word	0x0802fb26
 8005624:	08030be0 	.word	0x08030be0
 8005628:	2001389c 	.word	0x2001389c
 800562c:	20013898 	.word	0x20013898

08005630 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8005630:	4b04      	ldr	r3, [pc, #16]	; (8005644 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8005638:	b10a      	cbz	r2, 800563e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800563a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800563c:	b900      	cbnz	r0, 8005640 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800563e:	6898      	ldr	r0, [r3, #8]
    }
 8005640:	4770      	bx	lr
 8005642:	bf00      	nop
 8005644:	20013854 	.word	0x20013854

08005648 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8005648:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800564a:	4604      	mov	r4, r0
 800564c:	4617      	mov	r7, r2
 800564e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8005650:	f013 fb8a 	bl	8018d68 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8005654:	4b10      	ldr	r3, [pc, #64]	; (8005698 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8005656:	601c      	str	r4, [r3, #0]
      model(m)
 8005658:	4b10      	ldr	r3, [pc, #64]	; (800569c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800565a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800565c:	4b10      	ldr	r3, [pc, #64]	; (80056a0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800565e:	2500      	movs	r5, #0
 8005660:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8005664:	4b0f      	ldr	r3, [pc, #60]	; (80056a4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8005666:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800566a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800566c:	6803      	ldr	r3, [r0, #0]
 800566e:	2101      	movs	r1, #1
 8005670:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8005672:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8005676:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800567a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800567c:	4628      	mov	r0, r5
 800567e:	f005 f873 	bl	800a768 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8005682:	f7ff ffd5 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8005686:	f01c ff72 	bl	802256e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800568a:	f7ff ffd1 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 800568e:	f01c ffe9 	bl	8022664 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8005692:	4620      	mov	r0, r4
 8005694:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005696:	bf00      	nop
 8005698:	200138a8 	.word	0x200138a8
 800569c:	08030b8c 	.word	0x08030b8c
 80056a0:	08030b74 	.word	0x08030b74
 80056a4:	20013854 	.word	0x20013854

080056a8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80056a8:	4b06      	ldr	r3, [pc, #24]	; (80056c4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 80056aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056ae:	2300      	movs	r3, #0
 80056b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056c0:	4770      	bx	lr
 80056c2:	bf00      	nop
 80056c4:	080054e1 	.word	0x080054e1

080056c8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80056c8:	4b06      	ldr	r3, [pc, #24]	; (80056e4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80056ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056ce:	2300      	movs	r3, #0
 80056d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056e0:	4770      	bx	lr
 80056e2:	bf00      	nop
 80056e4:	08005b4d 	.word	0x08005b4d

080056e8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80056e8:	4b06      	ldr	r3, [pc, #24]	; (8005704 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80056ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056ee:	2300      	movs	r3, #0
 80056f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005700:	4770      	bx	lr
 8005702:	bf00      	nop
 8005704:	080066f1 	.word	0x080066f1

08005708 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8005708:	4b06      	ldr	r3, [pc, #24]	; (8005724 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 800570a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800570e:	2300      	movs	r3, #0
 8005710:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005714:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005718:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800571c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005720:	4770      	bx	lr
 8005722:	bf00      	nop
 8005724:	08005a0d 	.word	0x08005a0d

08005728 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8005728:	4b06      	ldr	r3, [pc, #24]	; (8005744 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 800572a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800572e:	2300      	movs	r3, #0
 8005730:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005734:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005738:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800573c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005740:	4770      	bx	lr
 8005742:	bf00      	nop
 8005744:	080065b1 	.word	0x080065b1

08005748 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8005748:	4b06      	ldr	r3, [pc, #24]	; (8005764 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 800574a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800574e:	2300      	movs	r3, #0
 8005750:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005754:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005758:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800575c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005760:	4770      	bx	lr
 8005762:	bf00      	nop
 8005764:	08006471 	.word	0x08006471

08005768 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8005768:	4b06      	ldr	r3, [pc, #24]	; (8005784 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800576a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800576e:	2300      	movs	r3, #0
 8005770:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005774:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005778:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800577c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005780:	4770      	bx	lr
 8005782:	bf00      	nop
 8005784:	08006331 	.word	0x08006331

08005788 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8005788:	4b06      	ldr	r3, [pc, #24]	; (80057a4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 800578a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800578e:	2300      	movs	r3, #0
 8005790:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005794:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005798:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800579c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80057a0:	4770      	bx	lr
 80057a2:	bf00      	nop
 80057a4:	080061f1 	.word	0x080061f1

080057a8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 80057a8:	4b06      	ldr	r3, [pc, #24]	; (80057c4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 80057aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80057ae:	2300      	movs	r3, #0
 80057b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80057b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80057b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80057bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80057c0:	4770      	bx	lr
 80057c2:	bf00      	nop
 80057c4:	080058cd 	.word	0x080058cd

080057c8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80057c8:	4b06      	ldr	r3, [pc, #24]	; (80057e4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80057ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80057ce:	2300      	movs	r3, #0
 80057d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80057d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80057d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80057dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80057e0:	4770      	bx	lr
 80057e2:	bf00      	nop
 80057e4:	080060b1 	.word	0x080060b1

080057e8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 80057e8:	4b06      	ldr	r3, [pc, #24]	; (8005804 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 80057ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80057ee:	2300      	movs	r3, #0
 80057f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80057f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80057f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80057fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005800:	4770      	bx	lr
 8005802:	bf00      	nop
 8005804:	08005f71 	.word	0x08005f71

08005808 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8005808:	4b06      	ldr	r3, [pc, #24]	; (8005824 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 800580a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800580e:	2300      	movs	r3, #0
 8005810:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005814:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005818:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800581c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005820:	4770      	bx	lr
 8005822:	bf00      	nop
 8005824:	08005e31 	.word	0x08005e31

08005828 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8005828:	4b06      	ldr	r3, [pc, #24]	; (8005844 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 800582a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800582e:	2300      	movs	r3, #0
 8005830:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005834:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005838:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800583c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005840:	4770      	bx	lr
 8005842:	bf00      	nop
 8005844:	08005cf1 	.word	0x08005cf1

08005848 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8005848:	4b06      	ldr	r3, [pc, #24]	; (8005864 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 800584a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800584e:	2300      	movs	r3, #0
 8005850:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8005854:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005858:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800585c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005860:	4770      	bx	lr
 8005862:	bf00      	nop
 8005864:	080052f1 	.word	0x080052f1

08005868 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8005868:	6803      	ldr	r3, [r0, #0]
 800586a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800586c:	4718      	bx	r3
	...

08005870 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8005870:	4b12      	ldr	r3, [pc, #72]	; (80058bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005872:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005874:	6003      	str	r3, [r0, #0]
 8005876:	f44f 7380 	mov.w	r3, #256	; 0x100
 800587a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800587c:	4b10      	ldr	r3, [pc, #64]	; (80058c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800587e:	7241      	strb	r1, [r0, #9]
 8005880:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005882:	4910      	ldr	r1, [pc, #64]	; (80058c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005884:	4b10      	ldr	r3, [pc, #64]	; (80058c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005886:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800588a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800588e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005890:	2200      	movs	r2, #0
 8005892:	6042      	str	r2, [r0, #4]
 8005894:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005896:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005898:	81c2      	strh	r2, [r0, #14]
          solid()
 800589a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800589e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80058a2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80058a6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80058aa:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80058ac:	9100      	str	r1, [sp, #0]
 80058ae:	3010      	adds	r0, #16
 80058b0:	4611      	mov	r1, r2
 80058b2:	f7fd ff90 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 80058b6:	4620      	mov	r0, r4
 80058b8:	b002      	add	sp, #8
 80058ba:	bd10      	pop	{r4, pc}
 80058bc:	08030c28 	.word	0x08030c28
 80058c0:	08030b0c 	.word	0x08030b0c
 80058c4:	2001384a 	.word	0x2001384a
 80058c8:	20013848 	.word	0x20013848

080058cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 80058cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80058d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80058d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80058d6:	68a0      	ldr	r0, [r4, #8]
 80058d8:	6803      	ldr	r3, [r0, #0]
 80058da:	6a1b      	ldr	r3, [r3, #32]
 80058dc:	4798      	blx	r3
 80058de:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80058e2:	4298      	cmp	r0, r3
 80058e4:	d805      	bhi.n	80058f2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x26>
 80058e6:	4b42      	ldr	r3, [pc, #264]	; (80059f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 80058e8:	4a42      	ldr	r2, [pc, #264]	; (80059f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80058ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058ec:	4842      	ldr	r0, [pc, #264]	; (80059f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 80058ee:	f028 f94b 	bl	802db88 <__assert_func>
 80058f2:	6860      	ldr	r0, [r4, #4]
 80058f4:	6803      	ldr	r3, [r0, #0]
 80058f6:	6a1b      	ldr	r3, [r3, #32]
 80058f8:	4798      	blx	r3
 80058fa:	280f      	cmp	r0, #15
 80058fc:	d803      	bhi.n	8005906 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x3a>
 80058fe:	4b3f      	ldr	r3, [pc, #252]	; (80059fc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8005900:	4a3c      	ldr	r2, [pc, #240]	; (80059f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8005902:	21a4      	movs	r1, #164	; 0xa4
 8005904:	e7f2      	b.n	80058ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005906:	68e0      	ldr	r0, [r4, #12]
 8005908:	6803      	ldr	r3, [r0, #0]
 800590a:	6a1b      	ldr	r3, [r3, #32]
 800590c:	4798      	blx	r3
 800590e:	2837      	cmp	r0, #55	; 0x37
 8005910:	d803      	bhi.n	800591a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4e>
 8005912:	4b3b      	ldr	r3, [pc, #236]	; (8005a00 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8005914:	4a37      	ldr	r2, [pc, #220]	; (80059f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8005916:	21a5      	movs	r1, #165	; 0xa5
 8005918:	e7e8      	b.n	80058ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800591a:	f013 f8f1 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800591e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005a04 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8005922:	3004      	adds	r0, #4
 8005924:	f013 f952 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005928:	f8d9 0000 	ldr.w	r0, [r9]
 800592c:	b110      	cbz	r0, 8005934 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 800592e:	6803      	ldr	r3, [r0, #0]
 8005930:	68db      	ldr	r3, [r3, #12]
 8005932:	4798      	blx	r3
    if (*currentTrans)
 8005934:	f8d9 0000 	ldr.w	r0, [r9]
 8005938:	b110      	cbz	r0, 8005940 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 800593a:	6803      	ldr	r3, [r0, #0]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	4798      	blx	r3
    if (*currentScreen)
 8005940:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005a08 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8005944:	f8d8 0000 	ldr.w	r0, [r8]
 8005948:	b110      	cbz	r0, 8005950 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800594a:	6803      	ldr	r3, [r0, #0]
 800594c:	695b      	ldr	r3, [r3, #20]
 800594e:	4798      	blx	r3
    if (*currentPresenter)
 8005950:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005954:	b110      	cbz	r0, 800595c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005956:	6803      	ldr	r3, [r0, #0]
 8005958:	685b      	ldr	r3, [r3, #4]
 800595a:	4798      	blx	r3
    if (*currentScreen)
 800595c:	f8d8 0000 	ldr.w	r0, [r8]
 8005960:	b110      	cbz	r0, 8005968 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005962:	6803      	ldr	r3, [r0, #0]
 8005964:	681b      	ldr	r3, [r3, #0]
 8005966:	4798      	blx	r3
    if (*currentPresenter)
 8005968:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800596c:	b110      	cbz	r0, 8005974 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800596e:	6803      	ldr	r3, [r0, #0]
 8005970:	689b      	ldr	r3, [r3, #8]
 8005972:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005974:	68e0      	ldr	r0, [r4, #12]
 8005976:	2100      	movs	r1, #0
 8005978:	f7ff ff76 	bl	8005868 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800597c:	2114      	movs	r1, #20
 800597e:	4605      	mov	r5, r0
 8005980:	f7ff ff76 	bl	8005870 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005984:	68a0      	ldr	r0, [r4, #8]
 8005986:	6803      	ldr	r3, [r0, #0]
 8005988:	2100      	movs	r1, #0
 800598a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800598c:	4798      	blx	r3
 800598e:	4606      	mov	r6, r0
 8005990:	f005 f976 	bl	800ac80 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005994:	6860      	ldr	r0, [r4, #4]
 8005996:	6803      	ldr	r3, [r0, #0]
 8005998:	2100      	movs	r1, #0
 800599a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800599c:	4798      	blx	r3
 800599e:	4631      	mov	r1, r6
 80059a0:	4604      	mov	r4, r0
 80059a2:	f005 f947 	bl	800ac34 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80059a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80059aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80059ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80059b2:	b1dc      	cbz	r4, 80059ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x120>
 80059b4:	1d23      	adds	r3, r4, #4
 80059b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80059ba:	6833      	ldr	r3, [r6, #0]
 80059bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80059c0:	4630      	mov	r0, r6
 80059c2:	68db      	ldr	r3, [r3, #12]
 80059c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80059c6:	4798      	blx	r3
    newPresenter->activate();
 80059c8:	6823      	ldr	r3, [r4, #0]
 80059ca:	4620      	mov	r0, r4
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80059d0:	4629      	mov	r1, r5
 80059d2:	4630      	mov	r0, r6
 80059d4:	f014 fec0 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80059d8:	682b      	ldr	r3, [r5, #0]
 80059da:	4628      	mov	r0, r5
 80059dc:	691b      	ldr	r3, [r3, #16]
 80059de:	4798      	blx	r3
    newTransition->invalidate();
 80059e0:	682b      	ldr	r3, [r5, #0]
 80059e2:	4628      	mov	r0, r5
 80059e4:	695b      	ldr	r3, [r3, #20]
}
 80059e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059ea:	4718      	bx	r3
    model->bind(newPresenter);
 80059ec:	4623      	mov	r3, r4
 80059ee:	e7e2      	b.n	80059b6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xea>
 80059f0:	0802f8a0 	.word	0x0802f8a0
 80059f4:	0802fcd1 	.word	0x0802fcd1
 80059f8:	0802fa3c 	.word	0x0802fa3c
 80059fc:	0802fa83 	.word	0x0802fa83
 8005a00:	0802fb26 	.word	0x0802fb26
 8005a04:	2001389c 	.word	0x2001389c
 8005a08:	20013898 	.word	0x20013898

08005a0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8005a0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005a10:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005a14:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005a16:	68a0      	ldr	r0, [r4, #8]
 8005a18:	6803      	ldr	r3, [r0, #0]
 8005a1a:	6a1b      	ldr	r3, [r3, #32]
 8005a1c:	4798      	blx	r3
 8005a1e:	f241 13c3 	movw	r3, #4547	; 0x11c3
 8005a22:	4298      	cmp	r0, r3
 8005a24:	d805      	bhi.n	8005a32 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x26>
 8005a26:	4b42      	ldr	r3, [pc, #264]	; (8005b30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8005a28:	4a42      	ldr	r2, [pc, #264]	; (8005b34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8005a2a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a2c:	4842      	ldr	r0, [pc, #264]	; (8005b38 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8005a2e:	f028 f8ab 	bl	802db88 <__assert_func>
 8005a32:	6860      	ldr	r0, [r4, #4]
 8005a34:	6803      	ldr	r3, [r0, #0]
 8005a36:	6a1b      	ldr	r3, [r3, #32]
 8005a38:	4798      	blx	r3
 8005a3a:	280f      	cmp	r0, #15
 8005a3c:	d803      	bhi.n	8005a46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x3a>
 8005a3e:	4b3f      	ldr	r3, [pc, #252]	; (8005b3c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8005a40:	4a3c      	ldr	r2, [pc, #240]	; (8005b34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8005a42:	21a4      	movs	r1, #164	; 0xa4
 8005a44:	e7f2      	b.n	8005a2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a46:	68e0      	ldr	r0, [r4, #12]
 8005a48:	6803      	ldr	r3, [r0, #0]
 8005a4a:	6a1b      	ldr	r3, [r3, #32]
 8005a4c:	4798      	blx	r3
 8005a4e:	2837      	cmp	r0, #55	; 0x37
 8005a50:	d803      	bhi.n	8005a5a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4e>
 8005a52:	4b3b      	ldr	r3, [pc, #236]	; (8005b40 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8005a54:	4a37      	ldr	r2, [pc, #220]	; (8005b34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8005a56:	21a5      	movs	r1, #165	; 0xa5
 8005a58:	e7e8      	b.n	8005a2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005a5a:	f013 f851 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a5e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b44 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8005a62:	3004      	adds	r0, #4
 8005a64:	f013 f8b2 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a68:	f8d9 0000 	ldr.w	r0, [r9]
 8005a6c:	b110      	cbz	r0, 8005a74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8005a6e:	6803      	ldr	r3, [r0, #0]
 8005a70:	68db      	ldr	r3, [r3, #12]
 8005a72:	4798      	blx	r3
    if (*currentTrans)
 8005a74:	f8d9 0000 	ldr.w	r0, [r9]
 8005a78:	b110      	cbz	r0, 8005a80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8005a7a:	6803      	ldr	r3, [r0, #0]
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	4798      	blx	r3
    if (*currentScreen)
 8005a80:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005b48 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8005a84:	f8d8 0000 	ldr.w	r0, [r8]
 8005a88:	b110      	cbz	r0, 8005a90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005a8a:	6803      	ldr	r3, [r0, #0]
 8005a8c:	695b      	ldr	r3, [r3, #20]
 8005a8e:	4798      	blx	r3
    if (*currentPresenter)
 8005a90:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a94:	b110      	cbz	r0, 8005a9c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005a96:	6803      	ldr	r3, [r0, #0]
 8005a98:	685b      	ldr	r3, [r3, #4]
 8005a9a:	4798      	blx	r3
    if (*currentScreen)
 8005a9c:	f8d8 0000 	ldr.w	r0, [r8]
 8005aa0:	b110      	cbz	r0, 8005aa8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005aa2:	6803      	ldr	r3, [r0, #0]
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	4798      	blx	r3
    if (*currentPresenter)
 8005aa8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005aac:	b110      	cbz	r0, 8005ab4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005aae:	6803      	ldr	r3, [r0, #0]
 8005ab0:	689b      	ldr	r3, [r3, #8]
 8005ab2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005ab4:	68e0      	ldr	r0, [r4, #12]
 8005ab6:	2100      	movs	r1, #0
 8005ab8:	f7ff fed6 	bl	8005868 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005abc:	2114      	movs	r1, #20
 8005abe:	4605      	mov	r5, r0
 8005ac0:	f7ff fed6 	bl	8005870 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ac4:	68a0      	ldr	r0, [r4, #8]
 8005ac6:	6803      	ldr	r3, [r0, #0]
 8005ac8:	2100      	movs	r1, #0
 8005aca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005acc:	4798      	blx	r3
 8005ace:	4606      	mov	r6, r0
 8005ad0:	f005 f876 	bl	800abc0 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ad4:	6860      	ldr	r0, [r4, #4]
 8005ad6:	6803      	ldr	r3, [r0, #0]
 8005ad8:	2100      	movs	r1, #0
 8005ada:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005adc:	4798      	blx	r3
 8005ade:	4631      	mov	r1, r6
 8005ae0:	4604      	mov	r4, r0
 8005ae2:	f005 f847 	bl	800ab74 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005ae6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005aea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005aee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005af2:	b1dc      	cbz	r4, 8005b2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x120>
 8005af4:	1d23      	adds	r3, r4, #4
 8005af6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005afa:	6833      	ldr	r3, [r6, #0]
 8005afc:	f8c4 a008 	str.w	sl, [r4, #8]
 8005b00:	4630      	mov	r0, r6
 8005b02:	68db      	ldr	r3, [r3, #12]
 8005b04:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005b06:	4798      	blx	r3
    newPresenter->activate();
 8005b08:	6823      	ldr	r3, [r4, #0]
 8005b0a:	4620      	mov	r0, r4
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005b10:	4629      	mov	r1, r5
 8005b12:	4630      	mov	r0, r6
 8005b14:	f014 fe20 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005b18:	682b      	ldr	r3, [r5, #0]
 8005b1a:	4628      	mov	r0, r5
 8005b1c:	691b      	ldr	r3, [r3, #16]
 8005b1e:	4798      	blx	r3
    newTransition->invalidate();
 8005b20:	682b      	ldr	r3, [r5, #0]
 8005b22:	4628      	mov	r0, r5
 8005b24:	695b      	ldr	r3, [r3, #20]
}
 8005b26:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b2a:	4718      	bx	r3
    model->bind(newPresenter);
 8005b2c:	4623      	mov	r3, r4
 8005b2e:	e7e2      	b.n	8005af6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xea>
 8005b30:	0802f8a0 	.word	0x0802f8a0
 8005b34:	0802fe01 	.word	0x0802fe01
 8005b38:	0802fa3c 	.word	0x0802fa3c
 8005b3c:	0802fa83 	.word	0x0802fa83
 8005b40:	0802fb26 	.word	0x0802fb26
 8005b44:	2001389c 	.word	0x2001389c
 8005b48:	20013898 	.word	0x20013898

08005b4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8005b4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005b50:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005b54:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005b56:	68a0      	ldr	r0, [r4, #8]
 8005b58:	6803      	ldr	r3, [r0, #0]
 8005b5a:	6a1b      	ldr	r3, [r3, #32]
 8005b5c:	4798      	blx	r3
 8005b5e:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 8005b62:	d205      	bcs.n	8005b70 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x24>
 8005b64:	4b42      	ldr	r3, [pc, #264]	; (8005c70 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8005b66:	4a43      	ldr	r2, [pc, #268]	; (8005c74 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005b68:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005b6a:	4843      	ldr	r0, [pc, #268]	; (8005c78 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8005b6c:	f028 f80c 	bl	802db88 <__assert_func>
 8005b70:	6860      	ldr	r0, [r4, #4]
 8005b72:	6803      	ldr	r3, [r0, #0]
 8005b74:	6a1b      	ldr	r3, [r3, #32]
 8005b76:	4798      	blx	r3
 8005b78:	280f      	cmp	r0, #15
 8005b7a:	d803      	bhi.n	8005b84 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x38>
 8005b7c:	4b3f      	ldr	r3, [pc, #252]	; (8005c7c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8005b7e:	4a3d      	ldr	r2, [pc, #244]	; (8005c74 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005b80:	21a4      	movs	r1, #164	; 0xa4
 8005b82:	e7f2      	b.n	8005b6a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005b84:	68e0      	ldr	r0, [r4, #12]
 8005b86:	6803      	ldr	r3, [r0, #0]
 8005b88:	6a1b      	ldr	r3, [r3, #32]
 8005b8a:	4798      	blx	r3
 8005b8c:	2837      	cmp	r0, #55	; 0x37
 8005b8e:	d803      	bhi.n	8005b98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4c>
 8005b90:	4b3b      	ldr	r3, [pc, #236]	; (8005c80 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8005b92:	4a38      	ldr	r2, [pc, #224]	; (8005c74 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005b94:	21a5      	movs	r1, #165	; 0xa5
 8005b96:	e7e8      	b.n	8005b6a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005b98:	f012 ffb2 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005b9c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005c84 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8005ba0:	3004      	adds	r0, #4
 8005ba2:	f013 f813 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005ba6:	f8d9 0000 	ldr.w	r0, [r9]
 8005baa:	b110      	cbz	r0, 8005bb2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8005bac:	6803      	ldr	r3, [r0, #0]
 8005bae:	68db      	ldr	r3, [r3, #12]
 8005bb0:	4798      	blx	r3
    if (*currentTrans)
 8005bb2:	f8d9 0000 	ldr.w	r0, [r9]
 8005bb6:	b110      	cbz	r0, 8005bbe <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8005bb8:	6803      	ldr	r3, [r0, #0]
 8005bba:	681b      	ldr	r3, [r3, #0]
 8005bbc:	4798      	blx	r3
    if (*currentScreen)
 8005bbe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005c88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8005bc2:	f8d8 0000 	ldr.w	r0, [r8]
 8005bc6:	b110      	cbz	r0, 8005bce <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005bc8:	6803      	ldr	r3, [r0, #0]
 8005bca:	695b      	ldr	r3, [r3, #20]
 8005bcc:	4798      	blx	r3
    if (*currentPresenter)
 8005bce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005bd2:	b110      	cbz	r0, 8005bda <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005bd4:	6803      	ldr	r3, [r0, #0]
 8005bd6:	685b      	ldr	r3, [r3, #4]
 8005bd8:	4798      	blx	r3
    if (*currentScreen)
 8005bda:	f8d8 0000 	ldr.w	r0, [r8]
 8005bde:	b110      	cbz	r0, 8005be6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005be0:	6803      	ldr	r3, [r0, #0]
 8005be2:	681b      	ldr	r3, [r3, #0]
 8005be4:	4798      	blx	r3
    if (*currentPresenter)
 8005be6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005bea:	b110      	cbz	r0, 8005bf2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005bec:	6803      	ldr	r3, [r0, #0]
 8005bee:	689b      	ldr	r3, [r3, #8]
 8005bf0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005bf2:	68e0      	ldr	r0, [r4, #12]
 8005bf4:	2100      	movs	r1, #0
 8005bf6:	f7ff fe37 	bl	8005868 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005bfa:	2114      	movs	r1, #20
 8005bfc:	4605      	mov	r5, r0
 8005bfe:	f7ff fe37 	bl	8005870 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c02:	68a0      	ldr	r0, [r4, #8]
 8005c04:	6803      	ldr	r3, [r0, #0]
 8005c06:	2100      	movs	r1, #0
 8005c08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c0a:	4798      	blx	r3
 8005c0c:	4606      	mov	r6, r0
 8005c0e:	f004 ff77 	bl	800ab00 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c12:	6860      	ldr	r0, [r4, #4]
 8005c14:	6803      	ldr	r3, [r0, #0]
 8005c16:	2100      	movs	r1, #0
 8005c18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c1a:	4798      	blx	r3
 8005c1c:	4631      	mov	r1, r6
 8005c1e:	4604      	mov	r4, r0
 8005c20:	f004 ff48 	bl	800aab4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8005c24:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c28:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c2c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c30:	b1dc      	cbz	r4, 8005c6a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x11e>
 8005c32:	1d23      	adds	r3, r4, #4
 8005c34:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c38:	6833      	ldr	r3, [r6, #0]
 8005c3a:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c3e:	4630      	mov	r0, r6
 8005c40:	68db      	ldr	r3, [r3, #12]
 8005c42:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c44:	4798      	blx	r3
    newPresenter->activate();
 8005c46:	6823      	ldr	r3, [r4, #0]
 8005c48:	4620      	mov	r0, r4
 8005c4a:	681b      	ldr	r3, [r3, #0]
 8005c4c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c4e:	4629      	mov	r1, r5
 8005c50:	4630      	mov	r0, r6
 8005c52:	f014 fd81 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005c56:	682b      	ldr	r3, [r5, #0]
 8005c58:	4628      	mov	r0, r5
 8005c5a:	691b      	ldr	r3, [r3, #16]
 8005c5c:	4798      	blx	r3
    newTransition->invalidate();
 8005c5e:	682b      	ldr	r3, [r5, #0]
 8005c60:	4628      	mov	r0, r5
 8005c62:	695b      	ldr	r3, [r3, #20]
}
 8005c64:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c68:	4718      	bx	r3
    model->bind(newPresenter);
 8005c6a:	4623      	mov	r3, r4
 8005c6c:	e7e2      	b.n	8005c34 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xe8>
 8005c6e:	bf00      	nop
 8005c70:	0802f8a0 	.word	0x0802f8a0
 8005c74:	0802ff1f 	.word	0x0802ff1f
 8005c78:	0802fa3c 	.word	0x0802fa3c
 8005c7c:	0802fa83 	.word	0x0802fa83
 8005c80:	0802fb26 	.word	0x0802fb26
 8005c84:	2001389c 	.word	0x2001389c
 8005c88:	20013898 	.word	0x20013898

08005c8c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8005c8c:	6803      	ldr	r3, [r0, #0]
 8005c8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c90:	4718      	bx	r3
	...

08005c94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005c94:	4b12      	ldr	r3, [pc, #72]	; (8005ce0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005c96:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005c98:	6003      	str	r3, [r0, #0]
 8005c9a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005c9e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005ca0:	4b10      	ldr	r3, [pc, #64]	; (8005ce4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005ca2:	7241      	strb	r1, [r0, #9]
 8005ca4:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005ca6:	4910      	ldr	r1, [pc, #64]	; (8005ce8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005ca8:	4b10      	ldr	r3, [pc, #64]	; (8005cec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005caa:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005cae:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005cb2:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005cb4:	2200      	movs	r2, #0
 8005cb6:	6042      	str	r2, [r0, #4]
 8005cb8:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005cba:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005cbc:	81c2      	strh	r2, [r0, #14]
          solid()
 8005cbe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005cc2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005cc6:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8005cca:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005cce:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005cd0:	9100      	str	r1, [sp, #0]
 8005cd2:	3010      	adds	r0, #16
 8005cd4:	4611      	mov	r1, r2
 8005cd6:	f7fd fd7e 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005cda:	4620      	mov	r0, r4
 8005cdc:	b002      	add	sp, #8
 8005cde:	bd10      	pop	{r4, pc}
 8005ce0:	08030c04 	.word	0x08030c04
 8005ce4:	08030b0c 	.word	0x08030b0c
 8005ce8:	2001384a 	.word	0x2001384a
 8005cec:	20013848 	.word	0x20013848

08005cf0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8005cf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005cf4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005cf8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005cfa:	68a0      	ldr	r0, [r4, #8]
 8005cfc:	6803      	ldr	r3, [r0, #0]
 8005cfe:	6a1b      	ldr	r3, [r3, #32]
 8005d00:	4798      	blx	r3
 8005d02:	f241 137b 	movw	r3, #4475	; 0x117b
 8005d06:	4298      	cmp	r0, r3
 8005d08:	d805      	bhi.n	8005d16 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8005d0a:	4b42      	ldr	r3, [pc, #264]	; (8005e14 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8005d0c:	4a42      	ldr	r2, [pc, #264]	; (8005e18 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005d0e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005d10:	4842      	ldr	r0, [pc, #264]	; (8005e1c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8005d12:	f027 ff39 	bl	802db88 <__assert_func>
 8005d16:	6860      	ldr	r0, [r4, #4]
 8005d18:	6803      	ldr	r3, [r0, #0]
 8005d1a:	6a1b      	ldr	r3, [r3, #32]
 8005d1c:	4798      	blx	r3
 8005d1e:	280f      	cmp	r0, #15
 8005d20:	d803      	bhi.n	8005d2a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005d22:	4b3f      	ldr	r3, [pc, #252]	; (8005e20 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005d24:	4a3c      	ldr	r2, [pc, #240]	; (8005e18 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005d26:	21a4      	movs	r1, #164	; 0xa4
 8005d28:	e7f2      	b.n	8005d10 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005d2a:	68e0      	ldr	r0, [r4, #12]
 8005d2c:	6803      	ldr	r3, [r0, #0]
 8005d2e:	6a1b      	ldr	r3, [r3, #32]
 8005d30:	4798      	blx	r3
 8005d32:	2837      	cmp	r0, #55	; 0x37
 8005d34:	d803      	bhi.n	8005d3e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8005d36:	4b3b      	ldr	r3, [pc, #236]	; (8005e24 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005d38:	4a37      	ldr	r2, [pc, #220]	; (8005e18 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005d3a:	21a5      	movs	r1, #165	; 0xa5
 8005d3c:	e7e8      	b.n	8005d10 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005d3e:	f012 fedf 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005d42:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005e28 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005d46:	3004      	adds	r0, #4
 8005d48:	f012 ff40 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005d4c:	f8d9 0000 	ldr.w	r0, [r9]
 8005d50:	b110      	cbz	r0, 8005d58 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005d52:	6803      	ldr	r3, [r0, #0]
 8005d54:	68db      	ldr	r3, [r3, #12]
 8005d56:	4798      	blx	r3
    if (*currentTrans)
 8005d58:	f8d9 0000 	ldr.w	r0, [r9]
 8005d5c:	b110      	cbz	r0, 8005d64 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005d5e:	6803      	ldr	r3, [r0, #0]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	4798      	blx	r3
    if (*currentScreen)
 8005d64:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005e2c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005d68:	f8d8 0000 	ldr.w	r0, [r8]
 8005d6c:	b110      	cbz	r0, 8005d74 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005d6e:	6803      	ldr	r3, [r0, #0]
 8005d70:	695b      	ldr	r3, [r3, #20]
 8005d72:	4798      	blx	r3
    if (*currentPresenter)
 8005d74:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d78:	b110      	cbz	r0, 8005d80 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005d7a:	6803      	ldr	r3, [r0, #0]
 8005d7c:	685b      	ldr	r3, [r3, #4]
 8005d7e:	4798      	blx	r3
    if (*currentScreen)
 8005d80:	f8d8 0000 	ldr.w	r0, [r8]
 8005d84:	b110      	cbz	r0, 8005d8c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005d86:	6803      	ldr	r3, [r0, #0]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	4798      	blx	r3
    if (*currentPresenter)
 8005d8c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d90:	b110      	cbz	r0, 8005d98 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005d92:	6803      	ldr	r3, [r0, #0]
 8005d94:	689b      	ldr	r3, [r3, #8]
 8005d96:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005d98:	68e0      	ldr	r0, [r4, #12]
 8005d9a:	2100      	movs	r1, #0
 8005d9c:	f7ff ff76 	bl	8005c8c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005da0:	2114      	movs	r1, #20
 8005da2:	4605      	mov	r5, r0
 8005da4:	f7ff ff76 	bl	8005c94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005da8:	68a0      	ldr	r0, [r4, #8]
 8005daa:	6803      	ldr	r3, [r0, #0]
 8005dac:	2100      	movs	r1, #0
 8005dae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005db0:	4798      	blx	r3
 8005db2:	4606      	mov	r6, r0
 8005db4:	f005 f990 	bl	800b0d8 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005db8:	6860      	ldr	r0, [r4, #4]
 8005dba:	6803      	ldr	r3, [r0, #0]
 8005dbc:	2100      	movs	r1, #0
 8005dbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005dc0:	4798      	blx	r3
 8005dc2:	4631      	mov	r1, r6
 8005dc4:	4604      	mov	r4, r0
 8005dc6:	f005 f961 	bl	800b08c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8005dca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005dce:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005dd2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005dd6:	b1dc      	cbz	r4, 8005e10 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005dd8:	1d23      	adds	r3, r4, #4
 8005dda:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005dde:	6833      	ldr	r3, [r6, #0]
 8005de0:	f8c4 a008 	str.w	sl, [r4, #8]
 8005de4:	4630      	mov	r0, r6
 8005de6:	68db      	ldr	r3, [r3, #12]
 8005de8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005dea:	4798      	blx	r3
    newPresenter->activate();
 8005dec:	6823      	ldr	r3, [r4, #0]
 8005dee:	4620      	mov	r0, r4
 8005df0:	681b      	ldr	r3, [r3, #0]
 8005df2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005df4:	4629      	mov	r1, r5
 8005df6:	4630      	mov	r0, r6
 8005df8:	f014 fcae 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005dfc:	682b      	ldr	r3, [r5, #0]
 8005dfe:	4628      	mov	r0, r5
 8005e00:	691b      	ldr	r3, [r3, #16]
 8005e02:	4798      	blx	r3
    newTransition->invalidate();
 8005e04:	682b      	ldr	r3, [r5, #0]
 8005e06:	4628      	mov	r0, r5
 8005e08:	695b      	ldr	r3, [r3, #20]
}
 8005e0a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e0e:	4718      	bx	r3
    model->bind(newPresenter);
 8005e10:	4623      	mov	r3, r4
 8005e12:	e7e2      	b.n	8005dda <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005e14:	0802f8a0 	.word	0x0802f8a0
 8005e18:	08030039 	.word	0x08030039
 8005e1c:	0802fa3c 	.word	0x0802fa3c
 8005e20:	0802fa83 	.word	0x0802fa83
 8005e24:	0802fb26 	.word	0x0802fb26
 8005e28:	2001389c 	.word	0x2001389c
 8005e2c:	20013898 	.word	0x20013898

08005e30 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005e30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005e34:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005e38:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005e3a:	68a0      	ldr	r0, [r4, #8]
 8005e3c:	6803      	ldr	r3, [r0, #0]
 8005e3e:	6a1b      	ldr	r3, [r3, #32]
 8005e40:	4798      	blx	r3
 8005e42:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005e46:	4298      	cmp	r0, r3
 8005e48:	d805      	bhi.n	8005e56 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8005e4a:	4b42      	ldr	r3, [pc, #264]	; (8005f54 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8005e4c:	4a42      	ldr	r2, [pc, #264]	; (8005f58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005e4e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005e50:	4842      	ldr	r0, [pc, #264]	; (8005f5c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005e52:	f027 fe99 	bl	802db88 <__assert_func>
 8005e56:	6860      	ldr	r0, [r4, #4]
 8005e58:	6803      	ldr	r3, [r0, #0]
 8005e5a:	6a1b      	ldr	r3, [r3, #32]
 8005e5c:	4798      	blx	r3
 8005e5e:	280f      	cmp	r0, #15
 8005e60:	d803      	bhi.n	8005e6a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005e62:	4b3f      	ldr	r3, [pc, #252]	; (8005f60 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005e64:	4a3c      	ldr	r2, [pc, #240]	; (8005f58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005e66:	21a4      	movs	r1, #164	; 0xa4
 8005e68:	e7f2      	b.n	8005e50 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005e6a:	68e0      	ldr	r0, [r4, #12]
 8005e6c:	6803      	ldr	r3, [r0, #0]
 8005e6e:	6a1b      	ldr	r3, [r3, #32]
 8005e70:	4798      	blx	r3
 8005e72:	2837      	cmp	r0, #55	; 0x37
 8005e74:	d803      	bhi.n	8005e7e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005e76:	4b3b      	ldr	r3, [pc, #236]	; (8005f64 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005e78:	4a37      	ldr	r2, [pc, #220]	; (8005f58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005e7a:	21a5      	movs	r1, #165	; 0xa5
 8005e7c:	e7e8      	b.n	8005e50 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005e7e:	f012 fe3f 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005e82:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005f68 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005e86:	3004      	adds	r0, #4
 8005e88:	f012 fea0 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005e8c:	f8d9 0000 	ldr.w	r0, [r9]
 8005e90:	b110      	cbz	r0, 8005e98 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005e92:	6803      	ldr	r3, [r0, #0]
 8005e94:	68db      	ldr	r3, [r3, #12]
 8005e96:	4798      	blx	r3
    if (*currentTrans)
 8005e98:	f8d9 0000 	ldr.w	r0, [r9]
 8005e9c:	b110      	cbz	r0, 8005ea4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005e9e:	6803      	ldr	r3, [r0, #0]
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	4798      	blx	r3
    if (*currentScreen)
 8005ea4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005f6c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005ea8:	f8d8 0000 	ldr.w	r0, [r8]
 8005eac:	b110      	cbz	r0, 8005eb4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005eae:	6803      	ldr	r3, [r0, #0]
 8005eb0:	695b      	ldr	r3, [r3, #20]
 8005eb2:	4798      	blx	r3
    if (*currentPresenter)
 8005eb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005eb8:	b110      	cbz	r0, 8005ec0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005eba:	6803      	ldr	r3, [r0, #0]
 8005ebc:	685b      	ldr	r3, [r3, #4]
 8005ebe:	4798      	blx	r3
    if (*currentScreen)
 8005ec0:	f8d8 0000 	ldr.w	r0, [r8]
 8005ec4:	b110      	cbz	r0, 8005ecc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005ec6:	6803      	ldr	r3, [r0, #0]
 8005ec8:	681b      	ldr	r3, [r3, #0]
 8005eca:	4798      	blx	r3
    if (*currentPresenter)
 8005ecc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ed0:	b110      	cbz	r0, 8005ed8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005ed2:	6803      	ldr	r3, [r0, #0]
 8005ed4:	689b      	ldr	r3, [r3, #8]
 8005ed6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005ed8:	68e0      	ldr	r0, [r4, #12]
 8005eda:	2100      	movs	r1, #0
 8005edc:	f7ff fed6 	bl	8005c8c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005ee0:	2114      	movs	r1, #20
 8005ee2:	4605      	mov	r5, r0
 8005ee4:	f7ff fed6 	bl	8005c94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ee8:	68a0      	ldr	r0, [r4, #8]
 8005eea:	6803      	ldr	r3, [r0, #0]
 8005eec:	2100      	movs	r1, #0
 8005eee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ef0:	4798      	blx	r3
 8005ef2:	4606      	mov	r6, r0
 8005ef4:	f004 fcd0 	bl	800a898 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ef8:	6860      	ldr	r0, [r4, #4]
 8005efa:	6803      	ldr	r3, [r0, #0]
 8005efc:	2100      	movs	r1, #0
 8005efe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f00:	4798      	blx	r3
 8005f02:	4631      	mov	r1, r6
 8005f04:	4604      	mov	r4, r0
 8005f06:	f004 fca1 	bl	800a84c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8005f0a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005f0e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005f12:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005f16:	b1dc      	cbz	r4, 8005f50 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8005f18:	1d23      	adds	r3, r4, #4
 8005f1a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005f1e:	6833      	ldr	r3, [r6, #0]
 8005f20:	f8c4 a008 	str.w	sl, [r4, #8]
 8005f24:	4630      	mov	r0, r6
 8005f26:	68db      	ldr	r3, [r3, #12]
 8005f28:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005f2a:	4798      	blx	r3
    newPresenter->activate();
 8005f2c:	6823      	ldr	r3, [r4, #0]
 8005f2e:	4620      	mov	r0, r4
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005f34:	4629      	mov	r1, r5
 8005f36:	4630      	mov	r0, r6
 8005f38:	f014 fc0e 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005f3c:	682b      	ldr	r3, [r5, #0]
 8005f3e:	4628      	mov	r0, r5
 8005f40:	691b      	ldr	r3, [r3, #16]
 8005f42:	4798      	blx	r3
    newTransition->invalidate();
 8005f44:	682b      	ldr	r3, [r5, #0]
 8005f46:	4628      	mov	r0, r5
 8005f48:	695b      	ldr	r3, [r3, #20]
}
 8005f4a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f4e:	4718      	bx	r3
    model->bind(newPresenter);
 8005f50:	4623      	mov	r3, r4
 8005f52:	e7e2      	b.n	8005f1a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005f54:	0802f8a0 	.word	0x0802f8a0
 8005f58:	08030159 	.word	0x08030159
 8005f5c:	0802fa3c 	.word	0x0802fa3c
 8005f60:	0802fa83 	.word	0x0802fa83
 8005f64:	0802fb26 	.word	0x0802fb26
 8005f68:	2001389c 	.word	0x2001389c
 8005f6c:	20013898 	.word	0x20013898

08005f70 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005f70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005f74:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005f78:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005f7a:	68a0      	ldr	r0, [r4, #8]
 8005f7c:	6803      	ldr	r3, [r0, #0]
 8005f7e:	6a1b      	ldr	r3, [r3, #32]
 8005f80:	4798      	blx	r3
 8005f82:	f241 4377 	movw	r3, #5239	; 0x1477
 8005f86:	4298      	cmp	r0, r3
 8005f88:	d805      	bhi.n	8005f96 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005f8a:	4b42      	ldr	r3, [pc, #264]	; (8006094 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005f8c:	4a42      	ldr	r2, [pc, #264]	; (8006098 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005f8e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005f90:	4842      	ldr	r0, [pc, #264]	; (800609c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005f92:	f027 fdf9 	bl	802db88 <__assert_func>
 8005f96:	6860      	ldr	r0, [r4, #4]
 8005f98:	6803      	ldr	r3, [r0, #0]
 8005f9a:	6a1b      	ldr	r3, [r3, #32]
 8005f9c:	4798      	blx	r3
 8005f9e:	280f      	cmp	r0, #15
 8005fa0:	d803      	bhi.n	8005faa <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005fa2:	4b3f      	ldr	r3, [pc, #252]	; (80060a0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005fa4:	4a3c      	ldr	r2, [pc, #240]	; (8006098 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005fa6:	21a4      	movs	r1, #164	; 0xa4
 8005fa8:	e7f2      	b.n	8005f90 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005faa:	68e0      	ldr	r0, [r4, #12]
 8005fac:	6803      	ldr	r3, [r0, #0]
 8005fae:	6a1b      	ldr	r3, [r3, #32]
 8005fb0:	4798      	blx	r3
 8005fb2:	2837      	cmp	r0, #55	; 0x37
 8005fb4:	d803      	bhi.n	8005fbe <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005fb6:	4b3b      	ldr	r3, [pc, #236]	; (80060a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005fb8:	4a37      	ldr	r2, [pc, #220]	; (8006098 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005fba:	21a5      	movs	r1, #165	; 0xa5
 8005fbc:	e7e8      	b.n	8005f90 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005fbe:	f012 fd9f 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005fc2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80060a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005fc6:	3004      	adds	r0, #4
 8005fc8:	f012 fe00 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005fcc:	f8d9 0000 	ldr.w	r0, [r9]
 8005fd0:	b110      	cbz	r0, 8005fd8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005fd2:	6803      	ldr	r3, [r0, #0]
 8005fd4:	68db      	ldr	r3, [r3, #12]
 8005fd6:	4798      	blx	r3
    if (*currentTrans)
 8005fd8:	f8d9 0000 	ldr.w	r0, [r9]
 8005fdc:	b110      	cbz	r0, 8005fe4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005fde:	6803      	ldr	r3, [r0, #0]
 8005fe0:	681b      	ldr	r3, [r3, #0]
 8005fe2:	4798      	blx	r3
    if (*currentScreen)
 8005fe4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80060ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005fe8:	f8d8 0000 	ldr.w	r0, [r8]
 8005fec:	b110      	cbz	r0, 8005ff4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005fee:	6803      	ldr	r3, [r0, #0]
 8005ff0:	695b      	ldr	r3, [r3, #20]
 8005ff2:	4798      	blx	r3
    if (*currentPresenter)
 8005ff4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ff8:	b110      	cbz	r0, 8006000 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005ffa:	6803      	ldr	r3, [r0, #0]
 8005ffc:	685b      	ldr	r3, [r3, #4]
 8005ffe:	4798      	blx	r3
    if (*currentScreen)
 8006000:	f8d8 0000 	ldr.w	r0, [r8]
 8006004:	b110      	cbz	r0, 800600c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006006:	6803      	ldr	r3, [r0, #0]
 8006008:	681b      	ldr	r3, [r3, #0]
 800600a:	4798      	blx	r3
    if (*currentPresenter)
 800600c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006010:	b110      	cbz	r0, 8006018 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006012:	6803      	ldr	r3, [r0, #0]
 8006014:	689b      	ldr	r3, [r3, #8]
 8006016:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006018:	68e0      	ldr	r0, [r4, #12]
 800601a:	2100      	movs	r1, #0
 800601c:	f7ff fe36 	bl	8005c8c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006020:	2114      	movs	r1, #20
 8006022:	4605      	mov	r5, r0
 8006024:	f7ff fe36 	bl	8005c94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006028:	68a0      	ldr	r0, [r4, #8]
 800602a:	6803      	ldr	r3, [r0, #0]
 800602c:	2100      	movs	r1, #0
 800602e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006030:	4798      	blx	r3
 8006032:	4606      	mov	r6, r0
 8006034:	f004 fec0 	bl	800adb8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006038:	6860      	ldr	r0, [r4, #4]
 800603a:	6803      	ldr	r3, [r0, #0]
 800603c:	2100      	movs	r1, #0
 800603e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006040:	4798      	blx	r3
 8006042:	4631      	mov	r1, r6
 8006044:	4604      	mov	r4, r0
 8006046:	f004 fe91 	bl	800ad6c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800604a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800604e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8006052:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006056:	b1dc      	cbz	r4, 8006090 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8006058:	1d23      	adds	r3, r4, #4
 800605a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800605e:	6833      	ldr	r3, [r6, #0]
 8006060:	f8c4 a008 	str.w	sl, [r4, #8]
 8006064:	4630      	mov	r0, r6
 8006066:	68db      	ldr	r3, [r3, #12]
 8006068:	63f4      	str	r4, [r6, #60]	; 0x3c
 800606a:	4798      	blx	r3
    newPresenter->activate();
 800606c:	6823      	ldr	r3, [r4, #0]
 800606e:	4620      	mov	r0, r4
 8006070:	681b      	ldr	r3, [r3, #0]
 8006072:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8006074:	4629      	mov	r1, r5
 8006076:	4630      	mov	r0, r6
 8006078:	f014 fb6e 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800607c:	682b      	ldr	r3, [r5, #0]
 800607e:	4628      	mov	r0, r5
 8006080:	691b      	ldr	r3, [r3, #16]
 8006082:	4798      	blx	r3
    newTransition->invalidate();
 8006084:	682b      	ldr	r3, [r5, #0]
 8006086:	4628      	mov	r0, r5
 8006088:	695b      	ldr	r3, [r3, #20]
}
 800608a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800608e:	4718      	bx	r3
    model->bind(newPresenter);
 8006090:	4623      	mov	r3, r4
 8006092:	e7e2      	b.n	800605a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8006094:	0802f8a0 	.word	0x0802f8a0
 8006098:	0803027f 	.word	0x0803027f
 800609c:	0802fa3c 	.word	0x0802fa3c
 80060a0:	0802fa83 	.word	0x0802fa83
 80060a4:	0802fb26 	.word	0x0802fb26
 80060a8:	2001389c 	.word	0x2001389c
 80060ac:	20013898 	.word	0x20013898

080060b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80060b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80060b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80060b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80060ba:	68a0      	ldr	r0, [r4, #8]
 80060bc:	6803      	ldr	r3, [r0, #0]
 80060be:	6a1b      	ldr	r3, [r3, #32]
 80060c0:	4798      	blx	r3
 80060c2:	f241 4377 	movw	r3, #5239	; 0x1477
 80060c6:	4298      	cmp	r0, r3
 80060c8:	d805      	bhi.n	80060d6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80060ca:	4b42      	ldr	r3, [pc, #264]	; (80061d4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80060cc:	4a42      	ldr	r2, [pc, #264]	; (80061d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80060ce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80060d0:	4842      	ldr	r0, [pc, #264]	; (80061dc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80060d2:	f027 fd59 	bl	802db88 <__assert_func>
 80060d6:	6860      	ldr	r0, [r4, #4]
 80060d8:	6803      	ldr	r3, [r0, #0]
 80060da:	6a1b      	ldr	r3, [r3, #32]
 80060dc:	4798      	blx	r3
 80060de:	280f      	cmp	r0, #15
 80060e0:	d803      	bhi.n	80060ea <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80060e2:	4b3f      	ldr	r3, [pc, #252]	; (80061e0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80060e4:	4a3c      	ldr	r2, [pc, #240]	; (80061d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80060e6:	21a4      	movs	r1, #164	; 0xa4
 80060e8:	e7f2      	b.n	80060d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80060ea:	68e0      	ldr	r0, [r4, #12]
 80060ec:	6803      	ldr	r3, [r0, #0]
 80060ee:	6a1b      	ldr	r3, [r3, #32]
 80060f0:	4798      	blx	r3
 80060f2:	2837      	cmp	r0, #55	; 0x37
 80060f4:	d803      	bhi.n	80060fe <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80060f6:	4b3b      	ldr	r3, [pc, #236]	; (80061e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80060f8:	4a37      	ldr	r2, [pc, #220]	; (80061d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80060fa:	21a5      	movs	r1, #165	; 0xa5
 80060fc:	e7e8      	b.n	80060d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80060fe:	f012 fcff 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8006102:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80061e8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8006106:	3004      	adds	r0, #4
 8006108:	f012 fd60 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800610c:	f8d9 0000 	ldr.w	r0, [r9]
 8006110:	b110      	cbz	r0, 8006118 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8006112:	6803      	ldr	r3, [r0, #0]
 8006114:	68db      	ldr	r3, [r3, #12]
 8006116:	4798      	blx	r3
    if (*currentTrans)
 8006118:	f8d9 0000 	ldr.w	r0, [r9]
 800611c:	b110      	cbz	r0, 8006124 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800611e:	6803      	ldr	r3, [r0, #0]
 8006120:	681b      	ldr	r3, [r3, #0]
 8006122:	4798      	blx	r3
    if (*currentScreen)
 8006124:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80061ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8006128:	f8d8 0000 	ldr.w	r0, [r8]
 800612c:	b110      	cbz	r0, 8006134 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800612e:	6803      	ldr	r3, [r0, #0]
 8006130:	695b      	ldr	r3, [r3, #20]
 8006132:	4798      	blx	r3
    if (*currentPresenter)
 8006134:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006138:	b110      	cbz	r0, 8006140 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800613a:	6803      	ldr	r3, [r0, #0]
 800613c:	685b      	ldr	r3, [r3, #4]
 800613e:	4798      	blx	r3
    if (*currentScreen)
 8006140:	f8d8 0000 	ldr.w	r0, [r8]
 8006144:	b110      	cbz	r0, 800614c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006146:	6803      	ldr	r3, [r0, #0]
 8006148:	681b      	ldr	r3, [r3, #0]
 800614a:	4798      	blx	r3
    if (*currentPresenter)
 800614c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006150:	b110      	cbz	r0, 8006158 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006152:	6803      	ldr	r3, [r0, #0]
 8006154:	689b      	ldr	r3, [r3, #8]
 8006156:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006158:	68e0      	ldr	r0, [r4, #12]
 800615a:	2100      	movs	r1, #0
 800615c:	f7ff fd96 	bl	8005c8c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006160:	2114      	movs	r1, #20
 8006162:	4605      	mov	r5, r0
 8006164:	f7ff fd96 	bl	8005c94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006168:	68a0      	ldr	r0, [r4, #8]
 800616a:	6803      	ldr	r3, [r0, #0]
 800616c:	2100      	movs	r1, #0
 800616e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006170:	4798      	blx	r3
 8006172:	4606      	mov	r6, r0
 8006174:	f004 fdde 	bl	800ad34 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006178:	6860      	ldr	r0, [r4, #4]
 800617a:	6803      	ldr	r3, [r0, #0]
 800617c:	2100      	movs	r1, #0
 800617e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006180:	4798      	blx	r3
 8006182:	4631      	mov	r1, r6
 8006184:	4604      	mov	r4, r0
 8006186:	f004 fdaf 	bl	800ace8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800618a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800618e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8006192:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006196:	b1dc      	cbz	r4, 80061d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8006198:	1d23      	adds	r3, r4, #4
 800619a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800619e:	6833      	ldr	r3, [r6, #0]
 80061a0:	f8c4 a008 	str.w	sl, [r4, #8]
 80061a4:	4630      	mov	r0, r6
 80061a6:	68db      	ldr	r3, [r3, #12]
 80061a8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80061aa:	4798      	blx	r3
    newPresenter->activate();
 80061ac:	6823      	ldr	r3, [r4, #0]
 80061ae:	4620      	mov	r0, r4
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80061b4:	4629      	mov	r1, r5
 80061b6:	4630      	mov	r0, r6
 80061b8:	f014 face 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80061bc:	682b      	ldr	r3, [r5, #0]
 80061be:	4628      	mov	r0, r5
 80061c0:	691b      	ldr	r3, [r3, #16]
 80061c2:	4798      	blx	r3
    newTransition->invalidate();
 80061c4:	682b      	ldr	r3, [r5, #0]
 80061c6:	4628      	mov	r0, r5
 80061c8:	695b      	ldr	r3, [r3, #20]
}
 80061ca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80061ce:	4718      	bx	r3
    model->bind(newPresenter);
 80061d0:	4623      	mov	r3, r4
 80061d2:	e7e2      	b.n	800619a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80061d4:	0802f8a0 	.word	0x0802f8a0
 80061d8:	080303c3 	.word	0x080303c3
 80061dc:	0802fa3c 	.word	0x0802fa3c
 80061e0:	0802fa83 	.word	0x0802fa83
 80061e4:	0802fb26 	.word	0x0802fb26
 80061e8:	2001389c 	.word	0x2001389c
 80061ec:	20013898 	.word	0x20013898

080061f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80061f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80061f4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80061f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80061fa:	68a0      	ldr	r0, [r4, #8]
 80061fc:	6803      	ldr	r3, [r0, #0]
 80061fe:	6a1b      	ldr	r3, [r3, #32]
 8006200:	4798      	blx	r3
 8006202:	f241 13c3 	movw	r3, #4547	; 0x11c3
 8006206:	4298      	cmp	r0, r3
 8006208:	d805      	bhi.n	8006216 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x26>
 800620a:	4b42      	ldr	r3, [pc, #264]	; (8006314 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 800620c:	4a42      	ldr	r2, [pc, #264]	; (8006318 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800620e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006210:	4842      	ldr	r0, [pc, #264]	; (800631c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8006212:	f027 fcb9 	bl	802db88 <__assert_func>
 8006216:	6860      	ldr	r0, [r4, #4]
 8006218:	6803      	ldr	r3, [r0, #0]
 800621a:	6a1b      	ldr	r3, [r3, #32]
 800621c:	4798      	blx	r3
 800621e:	280f      	cmp	r0, #15
 8006220:	d803      	bhi.n	800622a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x3a>
 8006222:	4b3f      	ldr	r3, [pc, #252]	; (8006320 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8006224:	4a3c      	ldr	r2, [pc, #240]	; (8006318 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8006226:	21a4      	movs	r1, #164	; 0xa4
 8006228:	e7f2      	b.n	8006210 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800622a:	68e0      	ldr	r0, [r4, #12]
 800622c:	6803      	ldr	r3, [r0, #0]
 800622e:	6a1b      	ldr	r3, [r3, #32]
 8006230:	4798      	blx	r3
 8006232:	2837      	cmp	r0, #55	; 0x37
 8006234:	d803      	bhi.n	800623e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4e>
 8006236:	4b3b      	ldr	r3, [pc, #236]	; (8006324 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8006238:	4a37      	ldr	r2, [pc, #220]	; (8006318 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800623a:	21a5      	movs	r1, #165	; 0xa5
 800623c:	e7e8      	b.n	8006210 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800623e:	f012 fc5f 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8006242:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006328 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8006246:	3004      	adds	r0, #4
 8006248:	f012 fcc0 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800624c:	f8d9 0000 	ldr.w	r0, [r9]
 8006250:	b110      	cbz	r0, 8006258 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8006252:	6803      	ldr	r3, [r0, #0]
 8006254:	68db      	ldr	r3, [r3, #12]
 8006256:	4798      	blx	r3
    if (*currentTrans)
 8006258:	f8d9 0000 	ldr.w	r0, [r9]
 800625c:	b110      	cbz	r0, 8006264 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800625e:	6803      	ldr	r3, [r0, #0]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	4798      	blx	r3
    if (*currentScreen)
 8006264:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800632c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8006268:	f8d8 0000 	ldr.w	r0, [r8]
 800626c:	b110      	cbz	r0, 8006274 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800626e:	6803      	ldr	r3, [r0, #0]
 8006270:	695b      	ldr	r3, [r3, #20]
 8006272:	4798      	blx	r3
    if (*currentPresenter)
 8006274:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006278:	b110      	cbz	r0, 8006280 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800627a:	6803      	ldr	r3, [r0, #0]
 800627c:	685b      	ldr	r3, [r3, #4]
 800627e:	4798      	blx	r3
    if (*currentScreen)
 8006280:	f8d8 0000 	ldr.w	r0, [r8]
 8006284:	b110      	cbz	r0, 800628c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006286:	6803      	ldr	r3, [r0, #0]
 8006288:	681b      	ldr	r3, [r3, #0]
 800628a:	4798      	blx	r3
    if (*currentPresenter)
 800628c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006290:	b110      	cbz	r0, 8006298 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006292:	6803      	ldr	r3, [r0, #0]
 8006294:	689b      	ldr	r3, [r3, #8]
 8006296:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006298:	68e0      	ldr	r0, [r4, #12]
 800629a:	2100      	movs	r1, #0
 800629c:	f7ff fcf6 	bl	8005c8c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80062a0:	2114      	movs	r1, #20
 80062a2:	4605      	mov	r5, r0
 80062a4:	f7ff fcf6 	bl	8005c94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80062a8:	68a0      	ldr	r0, [r4, #8]
 80062aa:	6803      	ldr	r3, [r0, #0]
 80062ac:	2100      	movs	r1, #0
 80062ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80062b0:	4798      	blx	r3
 80062b2:	4606      	mov	r6, r0
 80062b4:	f004 fce4 	bl	800ac80 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80062b8:	6860      	ldr	r0, [r4, #4]
 80062ba:	6803      	ldr	r3, [r0, #0]
 80062bc:	2100      	movs	r1, #0
 80062be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80062c0:	4798      	blx	r3
 80062c2:	4631      	mov	r1, r6
 80062c4:	4604      	mov	r4, r0
 80062c6:	f004 fcb5 	bl	800ac34 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80062ca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80062ce:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80062d2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80062d6:	b1dc      	cbz	r4, 8006310 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x120>
 80062d8:	1d23      	adds	r3, r4, #4
 80062da:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80062de:	6833      	ldr	r3, [r6, #0]
 80062e0:	f8c4 a008 	str.w	sl, [r4, #8]
 80062e4:	4630      	mov	r0, r6
 80062e6:	68db      	ldr	r3, [r3, #12]
 80062e8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80062ea:	4798      	blx	r3
    newPresenter->activate();
 80062ec:	6823      	ldr	r3, [r4, #0]
 80062ee:	4620      	mov	r0, r4
 80062f0:	681b      	ldr	r3, [r3, #0]
 80062f2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80062f4:	4629      	mov	r1, r5
 80062f6:	4630      	mov	r0, r6
 80062f8:	f014 fa2e 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80062fc:	682b      	ldr	r3, [r5, #0]
 80062fe:	4628      	mov	r0, r5
 8006300:	691b      	ldr	r3, [r3, #16]
 8006302:	4798      	blx	r3
    newTransition->invalidate();
 8006304:	682b      	ldr	r3, [r5, #0]
 8006306:	4628      	mov	r0, r5
 8006308:	695b      	ldr	r3, [r3, #20]
}
 800630a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800630e:	4718      	bx	r3
    model->bind(newPresenter);
 8006310:	4623      	mov	r3, r4
 8006312:	e7e2      	b.n	80062da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xea>
 8006314:	0802f8a0 	.word	0x0802f8a0
 8006318:	08030503 	.word	0x08030503
 800631c:	0802fa3c 	.word	0x0802fa3c
 8006320:	0802fa83 	.word	0x0802fa83
 8006324:	0802fb26 	.word	0x0802fb26
 8006328:	2001389c 	.word	0x2001389c
 800632c:	20013898 	.word	0x20013898

08006330 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8006330:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8006334:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006338:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800633a:	68a0      	ldr	r0, [r4, #8]
 800633c:	6803      	ldr	r3, [r0, #0]
 800633e:	6a1b      	ldr	r3, [r3, #32]
 8006340:	4798      	blx	r3
 8006342:	f241 4377 	movw	r3, #5239	; 0x1477
 8006346:	4298      	cmp	r0, r3
 8006348:	d805      	bhi.n	8006356 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800634a:	4b42      	ldr	r3, [pc, #264]	; (8006454 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 800634c:	4a42      	ldr	r2, [pc, #264]	; (8006458 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800634e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006350:	4842      	ldr	r0, [pc, #264]	; (800645c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8006352:	f027 fc19 	bl	802db88 <__assert_func>
 8006356:	6860      	ldr	r0, [r4, #4]
 8006358:	6803      	ldr	r3, [r0, #0]
 800635a:	6a1b      	ldr	r3, [r3, #32]
 800635c:	4798      	blx	r3
 800635e:	280f      	cmp	r0, #15
 8006360:	d803      	bhi.n	800636a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8006362:	4b3f      	ldr	r3, [pc, #252]	; (8006460 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8006364:	4a3c      	ldr	r2, [pc, #240]	; (8006458 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8006366:	21a4      	movs	r1, #164	; 0xa4
 8006368:	e7f2      	b.n	8006350 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800636a:	68e0      	ldr	r0, [r4, #12]
 800636c:	6803      	ldr	r3, [r0, #0]
 800636e:	6a1b      	ldr	r3, [r3, #32]
 8006370:	4798      	blx	r3
 8006372:	2837      	cmp	r0, #55	; 0x37
 8006374:	d803      	bhi.n	800637e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8006376:	4b3b      	ldr	r3, [pc, #236]	; (8006464 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8006378:	4a37      	ldr	r2, [pc, #220]	; (8006458 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800637a:	21a5      	movs	r1, #165	; 0xa5
 800637c:	e7e8      	b.n	8006350 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800637e:	f012 fbbf 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8006382:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006468 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8006386:	3004      	adds	r0, #4
 8006388:	f012 fc20 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800638c:	f8d9 0000 	ldr.w	r0, [r9]
 8006390:	b110      	cbz	r0, 8006398 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8006392:	6803      	ldr	r3, [r0, #0]
 8006394:	68db      	ldr	r3, [r3, #12]
 8006396:	4798      	blx	r3
    if (*currentTrans)
 8006398:	f8d9 0000 	ldr.w	r0, [r9]
 800639c:	b110      	cbz	r0, 80063a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800639e:	6803      	ldr	r3, [r0, #0]
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	4798      	blx	r3
    if (*currentScreen)
 80063a4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800646c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80063a8:	f8d8 0000 	ldr.w	r0, [r8]
 80063ac:	b110      	cbz	r0, 80063b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80063ae:	6803      	ldr	r3, [r0, #0]
 80063b0:	695b      	ldr	r3, [r3, #20]
 80063b2:	4798      	blx	r3
    if (*currentPresenter)
 80063b4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80063b8:	b110      	cbz	r0, 80063c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80063ba:	6803      	ldr	r3, [r0, #0]
 80063bc:	685b      	ldr	r3, [r3, #4]
 80063be:	4798      	blx	r3
    if (*currentScreen)
 80063c0:	f8d8 0000 	ldr.w	r0, [r8]
 80063c4:	b110      	cbz	r0, 80063cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80063c6:	6803      	ldr	r3, [r0, #0]
 80063c8:	681b      	ldr	r3, [r3, #0]
 80063ca:	4798      	blx	r3
    if (*currentPresenter)
 80063cc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80063d0:	b110      	cbz	r0, 80063d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80063d2:	6803      	ldr	r3, [r0, #0]
 80063d4:	689b      	ldr	r3, [r3, #8]
 80063d6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80063d8:	68e0      	ldr	r0, [r4, #12]
 80063da:	2100      	movs	r1, #0
 80063dc:	f7ff fc56 	bl	8005c8c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80063e0:	2114      	movs	r1, #20
 80063e2:	4605      	mov	r5, r0
 80063e4:	f7ff fc56 	bl	8005c94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80063e8:	68a0      	ldr	r0, [r4, #8]
 80063ea:	6803      	ldr	r3, [r0, #0]
 80063ec:	2100      	movs	r1, #0
 80063ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063f0:	4798      	blx	r3
 80063f2:	4606      	mov	r6, r0
 80063f4:	f004 fe0a 	bl	800b00c <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80063f8:	6860      	ldr	r0, [r4, #4]
 80063fa:	6803      	ldr	r3, [r0, #0]
 80063fc:	2100      	movs	r1, #0
 80063fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006400:	4798      	blx	r3
 8006402:	4631      	mov	r1, r6
 8006404:	4604      	mov	r4, r0
 8006406:	f004 fddb 	bl	800afc0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 800640a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800640e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8006412:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006416:	b1dc      	cbz	r4, 8006450 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8006418:	1d23      	adds	r3, r4, #4
 800641a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800641e:	6833      	ldr	r3, [r6, #0]
 8006420:	f8c4 a008 	str.w	sl, [r4, #8]
 8006424:	4630      	mov	r0, r6
 8006426:	68db      	ldr	r3, [r3, #12]
 8006428:	63f4      	str	r4, [r6, #60]	; 0x3c
 800642a:	4798      	blx	r3
    newPresenter->activate();
 800642c:	6823      	ldr	r3, [r4, #0]
 800642e:	4620      	mov	r0, r4
 8006430:	681b      	ldr	r3, [r3, #0]
 8006432:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8006434:	4629      	mov	r1, r5
 8006436:	4630      	mov	r0, r6
 8006438:	f014 f98e 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800643c:	682b      	ldr	r3, [r5, #0]
 800643e:	4628      	mov	r0, r5
 8006440:	691b      	ldr	r3, [r3, #16]
 8006442:	4798      	blx	r3
    newTransition->invalidate();
 8006444:	682b      	ldr	r3, [r5, #0]
 8006446:	4628      	mov	r0, r5
 8006448:	695b      	ldr	r3, [r3, #20]
}
 800644a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800644e:	4718      	bx	r3
    model->bind(newPresenter);
 8006450:	4623      	mov	r3, r4
 8006452:	e7e2      	b.n	800641a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8006454:	0802f8a0 	.word	0x0802f8a0
 8006458:	08030633 	.word	0x08030633
 800645c:	0802fa3c 	.word	0x0802fa3c
 8006460:	0802fa83 	.word	0x0802fa83
 8006464:	0802fb26 	.word	0x0802fb26
 8006468:	2001389c 	.word	0x2001389c
 800646c:	20013898 	.word	0x20013898

08006470 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8006470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8006474:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006478:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800647a:	68a0      	ldr	r0, [r4, #8]
 800647c:	6803      	ldr	r3, [r0, #0]
 800647e:	6a1b      	ldr	r3, [r3, #32]
 8006480:	4798      	blx	r3
 8006482:	f241 437b 	movw	r3, #5243	; 0x147b
 8006486:	4298      	cmp	r0, r3
 8006488:	d805      	bhi.n	8006496 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800648a:	4b42      	ldr	r3, [pc, #264]	; (8006594 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 800648c:	4a42      	ldr	r2, [pc, #264]	; (8006598 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800648e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006490:	4842      	ldr	r0, [pc, #264]	; (800659c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8006492:	f027 fb79 	bl	802db88 <__assert_func>
 8006496:	6860      	ldr	r0, [r4, #4]
 8006498:	6803      	ldr	r3, [r0, #0]
 800649a:	6a1b      	ldr	r3, [r3, #32]
 800649c:	4798      	blx	r3
 800649e:	280f      	cmp	r0, #15
 80064a0:	d803      	bhi.n	80064aa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80064a2:	4b3f      	ldr	r3, [pc, #252]	; (80065a0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80064a4:	4a3c      	ldr	r2, [pc, #240]	; (8006598 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80064a6:	21a4      	movs	r1, #164	; 0xa4
 80064a8:	e7f2      	b.n	8006490 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80064aa:	68e0      	ldr	r0, [r4, #12]
 80064ac:	6803      	ldr	r3, [r0, #0]
 80064ae:	6a1b      	ldr	r3, [r3, #32]
 80064b0:	4798      	blx	r3
 80064b2:	2837      	cmp	r0, #55	; 0x37
 80064b4:	d803      	bhi.n	80064be <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 80064b6:	4b3b      	ldr	r3, [pc, #236]	; (80065a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 80064b8:	4a37      	ldr	r2, [pc, #220]	; (8006598 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80064ba:	21a5      	movs	r1, #165	; 0xa5
 80064bc:	e7e8      	b.n	8006490 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80064be:	f012 fb1f 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80064c2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80065a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80064c6:	3004      	adds	r0, #4
 80064c8:	f012 fb80 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80064cc:	f8d9 0000 	ldr.w	r0, [r9]
 80064d0:	b110      	cbz	r0, 80064d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80064d2:	6803      	ldr	r3, [r0, #0]
 80064d4:	68db      	ldr	r3, [r3, #12]
 80064d6:	4798      	blx	r3
    if (*currentTrans)
 80064d8:	f8d9 0000 	ldr.w	r0, [r9]
 80064dc:	b110      	cbz	r0, 80064e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80064de:	6803      	ldr	r3, [r0, #0]
 80064e0:	681b      	ldr	r3, [r3, #0]
 80064e2:	4798      	blx	r3
    if (*currentScreen)
 80064e4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80065ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80064e8:	f8d8 0000 	ldr.w	r0, [r8]
 80064ec:	b110      	cbz	r0, 80064f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80064ee:	6803      	ldr	r3, [r0, #0]
 80064f0:	695b      	ldr	r3, [r3, #20]
 80064f2:	4798      	blx	r3
    if (*currentPresenter)
 80064f4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064f8:	b110      	cbz	r0, 8006500 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80064fa:	6803      	ldr	r3, [r0, #0]
 80064fc:	685b      	ldr	r3, [r3, #4]
 80064fe:	4798      	blx	r3
    if (*currentScreen)
 8006500:	f8d8 0000 	ldr.w	r0, [r8]
 8006504:	b110      	cbz	r0, 800650c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006506:	6803      	ldr	r3, [r0, #0]
 8006508:	681b      	ldr	r3, [r3, #0]
 800650a:	4798      	blx	r3
    if (*currentPresenter)
 800650c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006510:	b110      	cbz	r0, 8006518 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006512:	6803      	ldr	r3, [r0, #0]
 8006514:	689b      	ldr	r3, [r3, #8]
 8006516:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006518:	68e0      	ldr	r0, [r4, #12]
 800651a:	2100      	movs	r1, #0
 800651c:	f7ff fbb6 	bl	8005c8c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006520:	2114      	movs	r1, #20
 8006522:	4605      	mov	r5, r0
 8006524:	f7ff fbb6 	bl	8005c94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006528:	68a0      	ldr	r0, [r4, #8]
 800652a:	6803      	ldr	r3, [r0, #0]
 800652c:	2100      	movs	r1, #0
 800652e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006530:	4798      	blx	r3
 8006532:	4606      	mov	r6, r0
 8006534:	f004 fce2 	bl	800aefc <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006538:	6860      	ldr	r0, [r4, #4]
 800653a:	6803      	ldr	r3, [r0, #0]
 800653c:	2100      	movs	r1, #0
 800653e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006540:	4798      	blx	r3
 8006542:	4631      	mov	r1, r6
 8006544:	4604      	mov	r4, r0
 8006546:	f004 fcb3 	bl	800aeb0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800654a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800654e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8006552:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006556:	b1dc      	cbz	r4, 8006590 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8006558:	1d23      	adds	r3, r4, #4
 800655a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800655e:	6833      	ldr	r3, [r6, #0]
 8006560:	f8c4 a008 	str.w	sl, [r4, #8]
 8006564:	4630      	mov	r0, r6
 8006566:	68db      	ldr	r3, [r3, #12]
 8006568:	63f4      	str	r4, [r6, #60]	; 0x3c
 800656a:	4798      	blx	r3
    newPresenter->activate();
 800656c:	6823      	ldr	r3, [r4, #0]
 800656e:	4620      	mov	r0, r4
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8006574:	4629      	mov	r1, r5
 8006576:	4630      	mov	r0, r6
 8006578:	f014 f8ee 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800657c:	682b      	ldr	r3, [r5, #0]
 800657e:	4628      	mov	r0, r5
 8006580:	691b      	ldr	r3, [r3, #16]
 8006582:	4798      	blx	r3
    newTransition->invalidate();
 8006584:	682b      	ldr	r3, [r5, #0]
 8006586:	4628      	mov	r0, r5
 8006588:	695b      	ldr	r3, [r3, #20]
}
 800658a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800658e:	4718      	bx	r3
    model->bind(newPresenter);
 8006590:	4623      	mov	r3, r4
 8006592:	e7e2      	b.n	800655a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8006594:	0802f8a0 	.word	0x0802f8a0
 8006598:	08030775 	.word	0x08030775
 800659c:	0802fa3c 	.word	0x0802fa3c
 80065a0:	0802fa83 	.word	0x0802fa83
 80065a4:	0802fb26 	.word	0x0802fb26
 80065a8:	2001389c 	.word	0x2001389c
 80065ac:	20013898 	.word	0x20013898

080065b0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80065b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80065b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80065b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80065ba:	68a0      	ldr	r0, [r4, #8]
 80065bc:	6803      	ldr	r3, [r0, #0]
 80065be:	6a1b      	ldr	r3, [r3, #32]
 80065c0:	4798      	blx	r3
 80065c2:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80065c6:	4298      	cmp	r0, r3
 80065c8:	d805      	bhi.n	80065d6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x26>
 80065ca:	4b42      	ldr	r3, [pc, #264]	; (80066d4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80065cc:	4a42      	ldr	r2, [pc, #264]	; (80066d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80065ce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80065d0:	4842      	ldr	r0, [pc, #264]	; (80066dc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80065d2:	f027 fad9 	bl	802db88 <__assert_func>
 80065d6:	6860      	ldr	r0, [r4, #4]
 80065d8:	6803      	ldr	r3, [r0, #0]
 80065da:	6a1b      	ldr	r3, [r3, #32]
 80065dc:	4798      	blx	r3
 80065de:	280f      	cmp	r0, #15
 80065e0:	d803      	bhi.n	80065ea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x3a>
 80065e2:	4b3f      	ldr	r3, [pc, #252]	; (80066e0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80065e4:	4a3c      	ldr	r2, [pc, #240]	; (80066d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80065e6:	21a4      	movs	r1, #164	; 0xa4
 80065e8:	e7f2      	b.n	80065d0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80065ea:	68e0      	ldr	r0, [r4, #12]
 80065ec:	6803      	ldr	r3, [r0, #0]
 80065ee:	6a1b      	ldr	r3, [r3, #32]
 80065f0:	4798      	blx	r3
 80065f2:	2837      	cmp	r0, #55	; 0x37
 80065f4:	d803      	bhi.n	80065fe <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4e>
 80065f6:	4b3b      	ldr	r3, [pc, #236]	; (80066e4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80065f8:	4a37      	ldr	r2, [pc, #220]	; (80066d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80065fa:	21a5      	movs	r1, #165	; 0xa5
 80065fc:	e7e8      	b.n	80065d0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80065fe:	f012 fa7f 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8006602:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80066e8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8006606:	3004      	adds	r0, #4
 8006608:	f012 fae0 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800660c:	f8d9 0000 	ldr.w	r0, [r9]
 8006610:	b110      	cbz	r0, 8006618 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8006612:	6803      	ldr	r3, [r0, #0]
 8006614:	68db      	ldr	r3, [r3, #12]
 8006616:	4798      	blx	r3
    if (*currentTrans)
 8006618:	f8d9 0000 	ldr.w	r0, [r9]
 800661c:	b110      	cbz	r0, 8006624 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800661e:	6803      	ldr	r3, [r0, #0]
 8006620:	681b      	ldr	r3, [r3, #0]
 8006622:	4798      	blx	r3
    if (*currentScreen)
 8006624:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80066ec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8006628:	f8d8 0000 	ldr.w	r0, [r8]
 800662c:	b110      	cbz	r0, 8006634 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800662e:	6803      	ldr	r3, [r0, #0]
 8006630:	695b      	ldr	r3, [r3, #20]
 8006632:	4798      	blx	r3
    if (*currentPresenter)
 8006634:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006638:	b110      	cbz	r0, 8006640 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800663a:	6803      	ldr	r3, [r0, #0]
 800663c:	685b      	ldr	r3, [r3, #4]
 800663e:	4798      	blx	r3
    if (*currentScreen)
 8006640:	f8d8 0000 	ldr.w	r0, [r8]
 8006644:	b110      	cbz	r0, 800664c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006646:	6803      	ldr	r3, [r0, #0]
 8006648:	681b      	ldr	r3, [r3, #0]
 800664a:	4798      	blx	r3
    if (*currentPresenter)
 800664c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006650:	b110      	cbz	r0, 8006658 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006652:	6803      	ldr	r3, [r0, #0]
 8006654:	689b      	ldr	r3, [r3, #8]
 8006656:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006658:	68e0      	ldr	r0, [r4, #12]
 800665a:	2100      	movs	r1, #0
 800665c:	f7ff fb16 	bl	8005c8c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006660:	2114      	movs	r1, #20
 8006662:	4605      	mov	r5, r0
 8006664:	f7ff fb16 	bl	8005c94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006668:	68a0      	ldr	r0, [r4, #8]
 800666a:	6803      	ldr	r3, [r0, #0]
 800666c:	2100      	movs	r1, #0
 800666e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006670:	4798      	blx	r3
 8006672:	4606      	mov	r6, r0
 8006674:	f004 fbe8 	bl	800ae48 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006678:	6860      	ldr	r0, [r4, #4]
 800667a:	6803      	ldr	r3, [r0, #0]
 800667c:	2100      	movs	r1, #0
 800667e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006680:	4798      	blx	r3
 8006682:	4631      	mov	r1, r6
 8006684:	4604      	mov	r4, r0
 8006686:	f004 fbb9 	bl	800adfc <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 800668a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800668e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8006692:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8006696:	b1dc      	cbz	r4, 80066d0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x120>
 8006698:	1d23      	adds	r3, r4, #4
 800669a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800669e:	6833      	ldr	r3, [r6, #0]
 80066a0:	f8c4 a008 	str.w	sl, [r4, #8]
 80066a4:	4630      	mov	r0, r6
 80066a6:	68db      	ldr	r3, [r3, #12]
 80066a8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80066aa:	4798      	blx	r3
    newPresenter->activate();
 80066ac:	6823      	ldr	r3, [r4, #0]
 80066ae:	4620      	mov	r0, r4
 80066b0:	681b      	ldr	r3, [r3, #0]
 80066b2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80066b4:	4629      	mov	r1, r5
 80066b6:	4630      	mov	r0, r6
 80066b8:	f014 f84e 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80066bc:	682b      	ldr	r3, [r5, #0]
 80066be:	4628      	mov	r0, r5
 80066c0:	691b      	ldr	r3, [r3, #16]
 80066c2:	4798      	blx	r3
    newTransition->invalidate();
 80066c4:	682b      	ldr	r3, [r5, #0]
 80066c6:	4628      	mov	r0, r5
 80066c8:	695b      	ldr	r3, [r3, #20]
}
 80066ca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80066ce:	4718      	bx	r3
    model->bind(newPresenter);
 80066d0:	4623      	mov	r3, r4
 80066d2:	e7e2      	b.n	800669a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xea>
 80066d4:	0802f8a0 	.word	0x0802f8a0
 80066d8:	080308b7 	.word	0x080308b7
 80066dc:	0802fa3c 	.word	0x0802fa3c
 80066e0:	0802fa83 	.word	0x0802fa83
 80066e4:	0802fb26 	.word	0x0802fb26
 80066e8:	2001389c 	.word	0x2001389c
 80066ec:	20013898 	.word	0x20013898

080066f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 80066f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80066f4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80066f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80066fa:	68a0      	ldr	r0, [r4, #8]
 80066fc:	6803      	ldr	r3, [r0, #0]
 80066fe:	6a1b      	ldr	r3, [r3, #32]
 8006700:	4798      	blx	r3
 8006702:	f241 13c3 	movw	r3, #4547	; 0x11c3
 8006706:	4298      	cmp	r0, r3
 8006708:	d805      	bhi.n	8006716 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x26>
 800670a:	4b42      	ldr	r3, [pc, #264]	; (8006814 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 800670c:	4a42      	ldr	r2, [pc, #264]	; (8006818 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 800670e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006710:	4842      	ldr	r0, [pc, #264]	; (800681c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8006712:	f027 fa39 	bl	802db88 <__assert_func>
 8006716:	6860      	ldr	r0, [r4, #4]
 8006718:	6803      	ldr	r3, [r0, #0]
 800671a:	6a1b      	ldr	r3, [r3, #32]
 800671c:	4798      	blx	r3
 800671e:	280f      	cmp	r0, #15
 8006720:	d803      	bhi.n	800672a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x3a>
 8006722:	4b3f      	ldr	r3, [pc, #252]	; (8006820 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8006724:	4a3c      	ldr	r2, [pc, #240]	; (8006818 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8006726:	21a4      	movs	r1, #164	; 0xa4
 8006728:	e7f2      	b.n	8006710 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800672a:	68e0      	ldr	r0, [r4, #12]
 800672c:	6803      	ldr	r3, [r0, #0]
 800672e:	6a1b      	ldr	r3, [r3, #32]
 8006730:	4798      	blx	r3
 8006732:	2837      	cmp	r0, #55	; 0x37
 8006734:	d803      	bhi.n	800673e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4e>
 8006736:	4b3b      	ldr	r3, [pc, #236]	; (8006824 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8006738:	4a37      	ldr	r2, [pc, #220]	; (8006818 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 800673a:	21a5      	movs	r1, #165	; 0xa5
 800673c:	e7e8      	b.n	8006710 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800673e:	f012 f9df 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8006742:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006828 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8006746:	3004      	adds	r0, #4
 8006748:	f012 fa40 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800674c:	f8d9 0000 	ldr.w	r0, [r9]
 8006750:	b110      	cbz	r0, 8006758 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8006752:	6803      	ldr	r3, [r0, #0]
 8006754:	68db      	ldr	r3, [r3, #12]
 8006756:	4798      	blx	r3
    if (*currentTrans)
 8006758:	f8d9 0000 	ldr.w	r0, [r9]
 800675c:	b110      	cbz	r0, 8006764 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800675e:	6803      	ldr	r3, [r0, #0]
 8006760:	681b      	ldr	r3, [r3, #0]
 8006762:	4798      	blx	r3
    if (*currentScreen)
 8006764:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800682c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8006768:	f8d8 0000 	ldr.w	r0, [r8]
 800676c:	b110      	cbz	r0, 8006774 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800676e:	6803      	ldr	r3, [r0, #0]
 8006770:	695b      	ldr	r3, [r3, #20]
 8006772:	4798      	blx	r3
    if (*currentPresenter)
 8006774:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006778:	b110      	cbz	r0, 8006780 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800677a:	6803      	ldr	r3, [r0, #0]
 800677c:	685b      	ldr	r3, [r3, #4]
 800677e:	4798      	blx	r3
    if (*currentScreen)
 8006780:	f8d8 0000 	ldr.w	r0, [r8]
 8006784:	b110      	cbz	r0, 800678c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8006786:	6803      	ldr	r3, [r0, #0]
 8006788:	681b      	ldr	r3, [r3, #0]
 800678a:	4798      	blx	r3
    if (*currentPresenter)
 800678c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006790:	b110      	cbz	r0, 8006798 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8006792:	6803      	ldr	r3, [r0, #0]
 8006794:	689b      	ldr	r3, [r3, #8]
 8006796:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006798:	68e0      	ldr	r0, [r4, #12]
 800679a:	2100      	movs	r1, #0
 800679c:	f7ff fa76 	bl	8005c8c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80067a0:	2114      	movs	r1, #20
 80067a2:	4605      	mov	r5, r0
 80067a4:	f7ff fa76 	bl	8005c94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80067a8:	68a0      	ldr	r0, [r4, #8]
 80067aa:	6803      	ldr	r3, [r0, #0]
 80067ac:	2100      	movs	r1, #0
 80067ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80067b0:	4798      	blx	r3
 80067b2:	4606      	mov	r6, r0
 80067b4:	f004 fa04 	bl	800abc0 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80067b8:	6860      	ldr	r0, [r4, #4]
 80067ba:	6803      	ldr	r3, [r0, #0]
 80067bc:	2100      	movs	r1, #0
 80067be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80067c0:	4798      	blx	r3
 80067c2:	4631      	mov	r1, r6
 80067c4:	4604      	mov	r4, r0
 80067c6:	f004 f9d5 	bl	800ab74 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80067ca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80067ce:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80067d2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80067d6:	b1dc      	cbz	r4, 8006810 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x120>
 80067d8:	1d23      	adds	r3, r4, #4
 80067da:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80067de:	6833      	ldr	r3, [r6, #0]
 80067e0:	f8c4 a008 	str.w	sl, [r4, #8]
 80067e4:	4630      	mov	r0, r6
 80067e6:	68db      	ldr	r3, [r3, #12]
 80067e8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80067ea:	4798      	blx	r3
    newPresenter->activate();
 80067ec:	6823      	ldr	r3, [r4, #0]
 80067ee:	4620      	mov	r0, r4
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80067f4:	4629      	mov	r1, r5
 80067f6:	4630      	mov	r0, r6
 80067f8:	f013 ffae 	bl	801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80067fc:	682b      	ldr	r3, [r5, #0]
 80067fe:	4628      	mov	r0, r5
 8006800:	691b      	ldr	r3, [r3, #16]
 8006802:	4798      	blx	r3
    newTransition->invalidate();
 8006804:	682b      	ldr	r3, [r5, #0]
 8006806:	4628      	mov	r0, r5
 8006808:	695b      	ldr	r3, [r3, #20]
}
 800680a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800680e:	4718      	bx	r3
    model->bind(newPresenter);
 8006810:	4623      	mov	r3, r4
 8006812:	e7e2      	b.n	80067da <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xea>
 8006814:	0802f8a0 	.word	0x0802f8a0
 8006818:	080309e3 	.word	0x080309e3
 800681c:	0802fa3c 	.word	0x0802fa3c
 8006820:	0802fa83 	.word	0x0802fa83
 8006824:	0802fb26 	.word	0x0802fb26
 8006828:	2001389c 	.word	0x2001389c
 800682c:	20013898 	.word	0x20013898

08006830 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8006830:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8006832:	4770      	bx	lr

08006834 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8006834:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8006836:	4770      	bx	lr

08006838 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8006838:	4770      	bx	lr

0800683a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800683a:	888b      	ldrh	r3, [r1, #4]
 800683c:	69c0      	ldr	r0, [r0, #28]
 800683e:	680a      	ldr	r2, [r1, #0]
 8006840:	0adb      	lsrs	r3, r3, #11
 8006842:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8006846:	4410      	add	r0, r2
 8006848:	4770      	bx	lr

0800684a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800684a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800684c:	b1c2      	cbz	r2, 8006880 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800684e:	7b13      	ldrb	r3, [r2, #12]
 8006850:	b1b3      	cbz	r3, 8006880 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8006852:	7b54      	ldrb	r4, [r2, #13]
 8006854:	7ad2      	ldrb	r2, [r2, #11]
 8006856:	0224      	lsls	r4, r4, #8
 8006858:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800685c:	4314      	orrs	r4, r2
 800685e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006860:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006862:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8006866:	8813      	ldrh	r3, [r2, #0]
 8006868:	428b      	cmp	r3, r1
 800686a:	d102      	bne.n	8006872 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800686c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8006870:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8006872:	d805      	bhi.n	8006880 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006874:	3801      	subs	r0, #1
 8006876:	b280      	uxth	r0, r0
 8006878:	3204      	adds	r2, #4
 800687a:	2800      	cmp	r0, #0
 800687c:	d1f3      	bne.n	8006866 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800687e:	e7f7      	b.n	8006870 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8006880:	2000      	movs	r0, #0
 8006882:	e7f5      	b.n	8006870 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08006884 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8006884:	b510      	push	{r4, lr}
 8006886:	212c      	movs	r1, #44	; 0x2c
 8006888:	4604      	mov	r4, r0
 800688a:	f026 fa96 	bl	802cdba <_ZdlPvj>
 800688e:	4620      	mov	r0, r4
 8006890:	bd10      	pop	{r4, pc}
	...

08006894 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8006894:	b530      	push	{r4, r5, lr}
 8006896:	b08b      	sub	sp, #44	; 0x2c
 8006898:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800689a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800689e:	9508      	str	r5, [sp, #32]
 80068a0:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80068a4:	9507      	str	r5, [sp, #28]
 80068a6:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80068aa:	9506      	str	r5, [sp, #24]
 80068ac:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80068b0:	9505      	str	r5, [sp, #20]
 80068b2:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80068b6:	9504      	str	r5, [sp, #16]
 80068b8:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80068bc:	9503      	str	r5, [sp, #12]
 80068be:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80068c2:	9502      	str	r5, [sp, #8]
 80068c4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80068c8:	9501      	str	r5, [sp, #4]
 80068ca:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80068ce:	9500      	str	r5, [sp, #0]
 80068d0:	f013 faac 	bl	8019e2c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80068d4:	4b06      	ldr	r3, [pc, #24]	; (80068f0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80068d6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80068d8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80068da:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80068dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80068de:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80068e0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80068e2:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80068e4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80068e6:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80068e8:	4620      	mov	r0, r4
 80068ea:	b00b      	add	sp, #44	; 0x2c
 80068ec:	bd30      	pop	{r4, r5, pc}
 80068ee:	bf00      	nop
 80068f0:	08030c4c 	.word	0x08030c4c

080068f4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80068f4:	4770      	bx	lr

080068f6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80068f6:	4770      	bx	lr

080068f8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80068f8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80068fa:	68c2      	ldr	r2, [r0, #12]
 80068fc:	6844      	ldr	r4, [r0, #4]
 80068fe:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006900:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006902:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006906:	07d2      	lsls	r2, r2, #31
 8006908:	bf48      	it	mi
 800690a:	5962      	ldrmi	r2, [r4, r5]
 800690c:	689b      	ldr	r3, [r3, #8]
    }
 800690e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006910:	bf48      	it	mi
 8006912:	58d3      	ldrmi	r3, [r2, r3]
 8006914:	4718      	bx	r3

08006916 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006916:	6843      	ldr	r3, [r0, #4]
 8006918:	b12b      	cbz	r3, 8006926 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800691a:	6883      	ldr	r3, [r0, #8]
 800691c:	b92b      	cbnz	r3, 800692a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800691e:	68c0      	ldr	r0, [r0, #12]
 8006920:	f000 0001 	and.w	r0, r0, #1
 8006924:	4770      	bx	lr
 8006926:	4618      	mov	r0, r3
 8006928:	4770      	bx	lr
 800692a:	2001      	movs	r0, #1
    }
 800692c:	4770      	bx	lr

0800692e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800692e:	b510      	push	{r4, lr}
 8006930:	2110      	movs	r1, #16
 8006932:	4604      	mov	r4, r0
 8006934:	f026 fa41 	bl	802cdba <_ZdlPvj>
 8006938:	4620      	mov	r0, r4
 800693a:	bd10      	pop	{r4, pc}

0800693c <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 800693c:	b510      	push	{r4, lr}
 800693e:	4b03      	ldr	r3, [pc, #12]	; (800694c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8006940:	6003      	str	r3, [r0, #0]
 8006942:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006944:	f010 fbda 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006948:	4620      	mov	r0, r4
 800694a:	bd10      	pop	{r4, pc}
 800694c:	08030cc4 	.word	0x08030cc4

08006950 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006950:	b507      	push	{r0, r1, r2, lr}
 8006952:	4b07      	ldr	r3, [pc, #28]	; (8006970 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8006954:	6003      	str	r3, [r0, #0]
 8006956:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006958:	f010 fbd0 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800695c:	9801      	ldr	r0, [sp, #4]
 800695e:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 8006962:	f026 fa2a 	bl	802cdba <_ZdlPvj>
 8006966:	9801      	ldr	r0, [sp, #4]
 8006968:	b003      	add	sp, #12
 800696a:	f85d fb04 	ldr.w	pc, [sp], #4
 800696e:	bf00      	nop
 8006970:	08030cc4 	.word	0x08030cc4

08006974 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006974:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Measure)
 8006976:	f500 73ba 	add.w	r3, r0, #372	; 0x174
 800697a:	4299      	cmp	r1, r3
{
 800697c:	4604      	mov	r4, r0
 800697e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Measure)
 8006980:	d103      	bne.n	800698a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006982:	f012 f8bd 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Measure clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8006986:	f7fe feaf 	bl	80056e8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Calibration)
 800698a:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800698e:	429d      	cmp	r5, r3
 8006990:	d103      	bne.n	800699a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006992:	f012 f8b5 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Calibration clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8006996:	f7fe ff37 	bl	8005808 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_ProjectInfo)
 800699a:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 800699e:	429d      	cmp	r5, r3
 80069a0:	d103      	bne.n	80069aa <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80069a2:	f012 f8ad 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel_ProjectInfo clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80069a6:	f7fe ff3f 	bl	8005828 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon_turn_off)
 80069aa:	f504 7467 	add.w	r4, r4, #924	; 0x39c
 80069ae:	42a5      	cmp	r5, r4
 80069b0:	d10a      	bne.n	80069c8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon_turn_off clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80069b2:	4806      	ldr	r0, [pc, #24]	; (80069cc <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80069b4:	2200      	movs	r2, #0
 80069b6:	2120      	movs	r1, #32
 80069b8:	f005 fa84 	bl	800bec4 <HAL_GPIO_WritePin>
 80069bc:	f012 f8a0 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon_turn_off clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80069c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80069c4:	f7fe bf40 	b.w	8005848 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80069c8:	bd38      	pop	{r3, r4, r5, pc}
 80069ca:	bf00      	nop
 80069cc:	40021000 	.word	0x40021000

080069d0 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80069d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80069d4:	ed2d 8b08 	vpush	{d8-d11}
 80069d8:	4604      	mov	r4, r0
 80069da:	b091      	sub	sp, #68	; 0x44
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80069dc:	46a2      	mov	sl, r4
        : presenter(0)
 80069de:	2500      	movs	r5, #0
 80069e0:	f013 fd0e 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 80069e4:	4b75      	ldr	r3, [pc, #468]	; (8006bbc <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
 80069e6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80069e8:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 80069ec:	2226      	movs	r2, #38	; 0x26
 80069ee:	4629      	mov	r1, r5
 80069f0:	4650      	mov	r0, sl
 80069f2:	f027 face 	bl	802df92 <memset>
 80069f6:	4650      	mov	r0, sl
 80069f8:	f7fc ff12 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 80069fc:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006a00:	26ff      	movs	r6, #255	; 0xff
 8006a02:	4b6f      	ldr	r3, [pc, #444]	; (8006bc0 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8006a04:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006a06:	2226      	movs	r2, #38	; 0x26
 8006a08:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006a0c:	4629      	mov	r1, r5
 8006a0e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006a12:	4648      	mov	r0, r9
        : color(col)
 8006a14:	66a5      	str	r5, [r4, #104]	; 0x68
 8006a16:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006a1a:	f027 faba 	bl	802df92 <memset>
 8006a1e:	4648      	mov	r0, r9
 8006a20:	f7fc fefe 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8006a24:	4b67      	ldr	r3, [pc, #412]	; (8006bc4 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>)
 8006a26:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006a28:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8006a2c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006a30:	a90e      	add	r1, sp, #56	; 0x38
 8006a32:	4648      	mov	r0, r9
 8006a34:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006a38:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006a3c:	f00f fb61 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006a40:	4640      	mov	r0, r8
 8006a42:	f7fc ff51 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006a46:	4b60      	ldr	r3, [pc, #384]	; (8006bc8 <_ZN17Main_MenuViewBaseC1Ev+0x1f8>)
 8006a48:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006a4c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006a50:	4618      	mov	r0, r3
 8006a52:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006a56:	ee09 3a90 	vmov	s19, r3
 8006a5a:	f00f fc89 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006a5e:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006a62:	4618      	mov	r0, r3
 8006a64:	ee0a 3a10 	vmov	s20, r3
 8006a68:	f00f fc82 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006a6c:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006a70:	4618      	mov	r0, r3
 8006a72:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8006a76:	ee0a 3a90 	vmov	s21, r3
 8006a7a:	f00f fc79 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006a7e:	4638      	mov	r0, r7
 8006a80:	f00e f832 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006a84:	4e51      	ldr	r6, [pc, #324]	; (8006bcc <_ZN17Main_MenuViewBaseC1Ev+0x1fc>)
 8006a86:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8006a8a:	4618      	mov	r0, r3
 8006a8c:	9304      	str	r3, [sp, #16]
 8006a8e:	f7fc fccb 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006a92:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006a96:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8006a9a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006a9e:	4618      	mov	r0, r3
 8006aa0:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8006aa4:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006aa8:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8006aac:	ee08 3a10 	vmov	s16, r3
 8006ab0:	f7fc ff1a 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8006ab4:	4658      	mov	r0, fp
 8006ab6:	f00e f817 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8006aba:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8006abe:	4618      	mov	r0, r3
 8006ac0:	9305      	str	r3, [sp, #20]
 8006ac2:	f7fc fcb1 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006ac6:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006aca:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8006ace:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8006ad2:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8006ad6:	4618      	mov	r0, r3
 8006ad8:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006adc:	ee08 3a90 	vmov	s17, r3
 8006ae0:	f7fc ff02 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8006ae4:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006ae8:	4618      	mov	r0, r3
 8006aea:	ee09 3a10 	vmov	s18, r3
 8006aee:	f7fc fefb 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8006af2:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 8006af6:	4618      	mov	r0, r3
 8006af8:	ee0b 3a10 	vmov	s22, r3
 8006afc:	f00f fada 	bl	80160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006b00:	4a33      	ldr	r2, [pc, #204]	; (8006bd0 <_ZN17Main_MenuViewBaseC1Ev+0x200>)
 8006b02:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006b06:	e9c3 247c 	strd	r2, r4, [r3, #496]	; 0x1f0
 8006b0a:	4a32      	ldr	r2, [pc, #200]	; (8006bd4 <_ZN17Main_MenuViewBaseC1Ev+0x204>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006b0c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006b10:	e9c3 257e 	strd	r2, r5, [r3, #504]	; 0x1f8
 8006b14:	f504 7078 	add.w	r0, r4, #992	; 0x3e0
 8006b18:	f010 fae6 	bl	80170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006b1c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006b20:	462a      	mov	r2, r5
 8006b22:	4650      	mov	r0, sl
 8006b24:	9300      	str	r3, [sp, #0]
 8006b26:	4629      	mov	r1, r5
 8006b28:	23f0      	movs	r3, #240	; 0xf0
 8006b2a:	f7fc fe54 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b2e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006b30:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006b34:	66a3      	str	r3, [r4, #104]	; 0x68
 8006b36:	4651      	mov	r1, sl
 8006b38:	4630      	mov	r0, r6
 8006b3a:	f00b ff09 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8006b3e:	462a      	mov	r2, r5
 8006b40:	4648      	mov	r0, r9
 8006b42:	4629      	mov	r1, r5
 8006b44:	f7fc fe3a 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8006b48:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006b4a:	4648      	mov	r0, r9
 8006b4c:	a90e      	add	r1, sp, #56	; 0x38
 8006b4e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006b52:	f00f fad6 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006b56:	4649      	mov	r1, r9
 8006b58:	4630      	mov	r0, r6
 8006b5a:	f00b fef9 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8006b5e:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006b62:	2156      	movs	r1, #86	; 0x56
 8006b64:	4640      	mov	r0, r8
 8006b66:	f7fc fe29 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8006b6a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006b6e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006b72:	f10d 0918 	add.w	r9, sp, #24
        color = newColor;
 8006b76:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8006b7a:	4648      	mov	r0, r9
 8006b7c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006b80:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006b84:	4641      	mov	r1, r8
 8006b86:	4798      	blx	r3
 8006b88:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006b8c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006b90:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006b94:	4b10      	ldr	r3, [pc, #64]	; (8006bd8 <_ZN17Main_MenuViewBaseC1Ev+0x208>)
 8006b96:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8006b98:	f504 7976 	add.w	r9, r4, #984	; 0x3d8
 8006b9c:	b92b      	cbnz	r3, 8006baa <_ZN17Main_MenuViewBaseC1Ev+0x1da>
 8006b9e:	4b0f      	ldr	r3, [pc, #60]	; (8006bdc <_ZN17Main_MenuViewBaseC1Ev+0x20c>)
 8006ba0:	4a0f      	ldr	r2, [pc, #60]	; (8006be0 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006ba2:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ba4:	480f      	ldr	r0, [pc, #60]	; (8006be4 <_ZN17Main_MenuViewBaseC1Ev+0x214>)
 8006ba6:	f026 ffef 	bl	802db88 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006baa:	4b0f      	ldr	r3, [pc, #60]	; (8006be8 <_ZN17Main_MenuViewBaseC1Ev+0x218>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006bac:	881b      	ldrh	r3, [r3, #0]
 8006bae:	2b54      	cmp	r3, #84	; 0x54
 8006bb0:	d81e      	bhi.n	8006bf0 <_ZN17Main_MenuViewBaseC1Ev+0x220>
 8006bb2:	4b0e      	ldr	r3, [pc, #56]	; (8006bec <_ZN17Main_MenuViewBaseC1Ev+0x21c>)
 8006bb4:	4a0a      	ldr	r2, [pc, #40]	; (8006be0 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006bb6:	2161      	movs	r1, #97	; 0x61
 8006bb8:	e7f4      	b.n	8006ba4 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>
 8006bba:	bf00      	nop
 8006bbc:	08030cc4 	.word	0x08030cc4
 8006bc0:	08031c78 	.word	0x08031c78
 8006bc4:	08031ec4 	.word	0x08031ec4
 8006bc8:	0802f7c4 	.word	0x0802f7c4
 8006bcc:	080319ac 	.word	0x080319ac
 8006bd0:	08030cac 	.word	0x08030cac
 8006bd4:	08006975 	.word	0x08006975
 8006bd8:	200138ac 	.word	0x200138ac
 8006bdc:	0802f574 	.word	0x0802f574
 8006be0:	0802f679 	.word	0x0802f679
 8006be4:	0802f5f1 	.word	0x0802f5f1
 8006be8:	200138b0 	.word	0x200138b0
 8006bec:	0802f638 	.word	0x0802f638
        return texts->getText(typedTextId);
 8006bf0:	4bc1      	ldr	r3, [pc, #772]	; (8006ef8 <_ZN17Main_MenuViewBaseC1Ev+0x528>)
 8006bf2:	2154      	movs	r1, #84	; 0x54
 8006bf4:	6818      	ldr	r0, [r3, #0]
 8006bf6:	f003 fdf3 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8006bfa:	4ac0      	ldr	r2, [pc, #768]	; (8006efc <_ZN17Main_MenuViewBaseC1Ev+0x52c>)
 8006bfc:	4603      	mov	r3, r0
 8006bfe:	2104      	movs	r1, #4
 8006c00:	4648      	mov	r0, r9
 8006c02:	f015 f92b 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8006c06:	4640      	mov	r0, r8
        wc1 = value;
 8006c08:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8006c0c:	f00e fca8 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006c10:	4bbb      	ldr	r3, [pc, #748]	; (8006f00 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006c12:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006c14:	4640      	mov	r0, r8
 8006c16:	2355      	movs	r3, #85	; 0x55
 8006c18:	a90e      	add	r1, sp, #56	; 0x38
 8006c1a:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006c1e:	f00e fcbf 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c22:	4641      	mov	r1, r8
 8006c24:	4630      	mov	r0, r6
 8006c26:	f00b fe93 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_ProjectInfo.setXY(33, 240);
 8006c2a:	ee19 0a90 	vmov	r0, s19
 8006c2e:	22f0      	movs	r2, #240	; 0xf0
 8006c30:	2121      	movs	r1, #33	; 0x21
 8006c32:	f7fc fdc3 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8006c36:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel_ProjectInfo.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c3a:	aa0e      	add	r2, sp, #56	; 0x38
 8006c3c:	f04f 0802 	mov.w	r8, #2
 8006c40:	a90d      	add	r1, sp, #52	; 0x34
 8006c42:	ee19 0a90 	vmov	r0, s19
 8006c46:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006c4a:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006c4e:	f00f f862 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006c52:	236f      	movs	r3, #111	; 0x6f
        updateTextPosition();
 8006c54:	ee19 0a90 	vmov	r0, s19
 8006c58:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 8006c5c:	f7fc fdf2 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_ProjectInfo.setAction(buttonCallback);
 8006c60:	f504 538f 	add.w	r3, r4, #4576	; 0x11e0
 8006c64:	3310      	adds	r3, #16
 8006c66:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8006c6a:	ee19 1a90 	vmov	r1, s19
 8006c6e:	4630      	mov	r0, r6
        colorPressed = col;
 8006c70:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8006c74:	9303      	str	r3, [sp, #12]
 8006c76:	f00b fe6b 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Calibration.setXY(33, 170);
 8006c7a:	ee1a 0a10 	vmov	r0, s20
 8006c7e:	22aa      	movs	r2, #170	; 0xaa
 8006c80:	2121      	movs	r1, #33	; 0x21
 8006c82:	f7fc fd9b 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Calibration.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c86:	aa0e      	add	r2, sp, #56	; 0x38
 8006c88:	a90d      	add	r1, sp, #52	; 0x34
 8006c8a:	ee1a 0a10 	vmov	r0, s20
 8006c8e:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006c92:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006c96:	f00f f83e 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006c9a:	2370      	movs	r3, #112	; 0x70
        updateTextPosition();
 8006c9c:	ee1a 0a10 	vmov	r0, s20
 8006ca0:	f8a4 3164 	strh.w	r3, [r4, #356]	; 0x164
 8006ca4:	f7fc fdce 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ca8:	9b03      	ldr	r3, [sp, #12]
 8006caa:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006cae:	ee1a 1a10 	vmov	r1, s20
 8006cb2:	4630      	mov	r0, r6
        colorPressed = col;
 8006cb4:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8006cb8:	f00b fe4a 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Measure.setXY(33, 100);
 8006cbc:	ee1a 0a90 	vmov	r0, s21
 8006cc0:	2264      	movs	r2, #100	; 0x64
 8006cc2:	2121      	movs	r1, #33	; 0x21
 8006cc4:	f7fc fd7a 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Measure.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006cc8:	aa0e      	add	r2, sp, #56	; 0x38
 8006cca:	a90d      	add	r1, sp, #52	; 0x34
 8006ccc:	ee1a 0a90 	vmov	r0, s21
 8006cd0:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006cd4:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006cd8:	f00f f81d 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006cdc:	2371      	movs	r3, #113	; 0x71
        updateTextPosition();
 8006cde:	ee1a 0a90 	vmov	r0, s21
 8006ce2:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006ce6:	f7fc fdad 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006cea:	9b03      	ldr	r3, [sp, #12]
 8006cec:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006cf0:	ee1a 1a90 	vmov	r1, s21
 8006cf4:	4630      	mov	r0, r6
        colorPressed = col;
 8006cf6:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8006cfa:	f00b fe29 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8006cfe:	230a      	movs	r3, #10
 8006d00:	9300      	str	r3, [sp, #0]
 8006d02:	224b      	movs	r2, #75	; 0x4b
 8006d04:	23f0      	movs	r3, #240	; 0xf0
 8006d06:	4629      	mov	r1, r5
 8006d08:	4638      	mov	r0, r7
 8006d0a:	f7fc fd64 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d0e:	9b04      	ldr	r3, [sp, #16]
 8006d10:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d14:	22a0      	movs	r2, #160	; 0xa0
 8006d16:	4611      	mov	r1, r2
 8006d18:	4638      	mov	r0, r7
 8006d1a:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006d1e:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8006d22:	f00d fff7 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d26:	22a0      	movs	r2, #160	; 0xa0
 8006d28:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006d2c:	4638      	mov	r0, r7
 8006d2e:	f00d fffc 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006d32:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8006d36:	2b20      	cmp	r3, #32
 8006d38:	d005      	beq.n	8006d46 <_ZN17Main_MenuViewBaseC1Ev+0x376>
        lineWidthQ5 = widthQ5;
 8006d3a:	2320      	movs	r3, #32
 8006d3c:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8006d40:	4638      	mov	r0, r7
 8006d42:	f00d fef1 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006d46:	4638      	mov	r0, r7
 8006d48:	2101      	movs	r1, #1
 8006d4a:	f00d fff9 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006d4e:	4639      	mov	r1, r7
 8006d50:	4630      	mov	r0, r6
 8006d52:	f00b fdfd 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006d56:	f04f 35ff 	mov.w	r5, #4294967295
    textArea_menu.setXY(88, 60);
 8006d5a:	223c      	movs	r2, #60	; 0x3c
 8006d5c:	ee18 0a10 	vmov	r0, s16
 8006d60:	2158      	movs	r1, #88	; 0x58
        linespace = space;
 8006d62:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006d64:	f10d 0818 	add.w	r8, sp, #24
 8006d68:	f7fc fd28 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8006d6c:	ee18 1a10 	vmov	r1, s16
 8006d70:	4640      	mov	r0, r8
        color = newColor;
 8006d72:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
        linespace = space;
 8006d76:	f8a4 7274 	strh.w	r7, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8006d7a:	f00e f977 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d7e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d82:	ee18 3a10 	vmov	r3, s16
 8006d86:	333c      	adds	r3, #60	; 0x3c
 8006d88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006d8c:	4b5c      	ldr	r3, [pc, #368]	; (8006f00 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006d8e:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006d90:	ee18 0a10 	vmov	r0, s16
 8006d94:	2344      	movs	r3, #68	; 0x44
 8006d96:	a90e      	add	r1, sp, #56	; 0x38
 8006d98:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006d9c:	f00e fc00 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006da0:	ee18 1a10 	vmov	r1, s16
 8006da4:	4630      	mov	r0, r6
 8006da6:	f00b fdd3 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006daa:	230a      	movs	r3, #10
 8006dac:	9300      	str	r3, [sp, #0]
 8006dae:	2232      	movs	r2, #50	; 0x32
 8006db0:	23f0      	movs	r3, #240	; 0xf0
 8006db2:	4639      	mov	r1, r7
 8006db4:	4658      	mov	r0, fp
 8006db6:	f7fc fd0e 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006dba:	9b05      	ldr	r3, [sp, #20]
 8006dbc:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dc0:	22a0      	movs	r2, #160	; 0xa0
 8006dc2:	4611      	mov	r1, r2
 8006dc4:	4658      	mov	r0, fp
 8006dc6:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006dca:	f8a4 5308 	strh.w	r5, [r4, #776]	; 0x308
 8006dce:	f00d ffa1 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dd2:	22a0      	movs	r2, #160	; 0xa0
 8006dd4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006dd8:	4658      	mov	r0, fp
 8006dda:	f00d ffa6 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006dde:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8006de2:	2b20      	cmp	r3, #32
 8006de4:	d005      	beq.n	8006df2 <_ZN17Main_MenuViewBaseC1Ev+0x422>
        lineWidthQ5 = widthQ5;
 8006de6:	2320      	movs	r3, #32
 8006de8:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8006dec:	4658      	mov	r0, fp
 8006dee:	f00d fe9b 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006df2:	4658      	mov	r0, fp
 8006df4:	2101      	movs	r1, #1
 8006df6:	f00d ffa3 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006dfa:	4659      	mov	r1, fp
 8006dfc:	4630      	mov	r0, r6
 8006dfe:	f00b fda7 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006e02:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006e04:	ad06      	add	r5, sp, #24
    textArea_name.setXY(69, 35);
 8006e06:	ee18 0a90 	vmov	r0, s17
 8006e0a:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8006e0c:	f04f 39ff 	mov.w	r9, #4294967295
 8006e10:	2145      	movs	r1, #69	; 0x45
 8006e12:	f7fc fcd3 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006e16:	ee18 1a90 	vmov	r1, s17
 8006e1a:	4628      	mov	r0, r5
        color = newColor;
 8006e1c:	f8c4 933c 	str.w	r9, [r4, #828]	; 0x33c
        linespace = space;
 8006e20:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8006e24:	f00e f922 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e28:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e2c:	ee18 3a90 	vmov	r3, s17
 8006e30:	333c      	adds	r3, #60	; 0x3c
 8006e32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8006e36:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8006e3a:	4b31      	ldr	r3, [pc, #196]	; (8006f00 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006e3c:	930e      	str	r3, [sp, #56]	; 0x38
 8006e3e:	ee18 0a90 	vmov	r0, s17
 8006e42:	236d      	movs	r3, #109	; 0x6d
 8006e44:	4641      	mov	r1, r8
 8006e46:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006e4a:	f00e fba9 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e4e:	ee18 1a90 	vmov	r1, s17
 8006e52:	4630      	mov	r0, r6
 8006e54:	f00b fd7c 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8006e58:	ee19 0a10 	vmov	r0, s18
 8006e5c:	220c      	movs	r2, #12
 8006e5e:	2136      	movs	r1, #54	; 0x36
 8006e60:	f7fc fcac 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8006e64:	ee19 1a10 	vmov	r1, s18
 8006e68:	4628      	mov	r0, r5
        color = newColor;
 8006e6a:	f8c4 9384 	str.w	r9, [r4, #900]	; 0x384
        linespace = space;
 8006e6e:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8006e72:	f00e f8fb 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e76:	ee19 2a10 	vmov	r2, s18
 8006e7a:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8006e7e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e82:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e86:	4b1e      	ldr	r3, [pc, #120]	; (8006f00 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006e88:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8006e8a:	ee19 0a10 	vmov	r0, s18
 8006e8e:	236e      	movs	r3, #110	; 0x6e
 8006e90:	4641      	mov	r1, r8
 8006e92:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006e96:	f00e fb83 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e9a:	ee19 1a10 	vmov	r1, s18
 8006e9e:	4630      	mov	r0, r6
 8006ea0:	f00b fd56 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_turn_off.setXY(198, 5);
 8006ea4:	ee1b 0a10 	vmov	r0, s22
 8006ea8:	2205      	movs	r2, #5
 8006eaa:	21c6      	movs	r1, #198	; 0xc6
 8006eac:	f7fc fc86 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8006eb0:	2301      	movs	r3, #1
 8006eb2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006eb6:	230a      	movs	r3, #10
    buttonWithIcon_turn_off.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006eb8:	ee1b 0a10 	vmov	r0, s22
 8006ebc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006ec0:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006ec4:	aa0c      	add	r2, sp, #48	; 0x30
 8006ec6:	ab0d      	add	r3, sp, #52	; 0x34
 8006ec8:	a90b      	add	r1, sp, #44	; 0x2c
 8006eca:	f8cd 8000 	str.w	r8, [sp]
 8006ece:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8006ed2:	f00f f85a 	bl	8015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006ed6:	9b03      	ldr	r3, [sp, #12]
 8006ed8:	f8c4 73d4 	str.w	r7, [r4, #980]	; 0x3d4
 8006edc:	4630      	mov	r0, r6
 8006ede:	ee1b 1a10 	vmov	r1, s22
 8006ee2:	f8c4 33c4 	str.w	r3, [r4, #964]	; 0x3c4
 8006ee6:	f00b fd33 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006eea:	4620      	mov	r0, r4
 8006eec:	b011      	add	sp, #68	; 0x44
 8006eee:	ecbd 8b08 	vpop	{d8-d11}
 8006ef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ef6:	bf00      	nop
 8006ef8:	200138b8 	.word	0x200138b8
 8006efc:	0802f6b1 	.word	0x0802f6b1
 8006f00:	0802f724 	.word	0x0802f724

08006f04 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006f04:	4770      	bx	lr

08006f06 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f06:	4770      	bx	lr

08006f08 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006f08:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f0a:	68c2      	ldr	r2, [r0, #12]
 8006f0c:	6844      	ldr	r4, [r0, #4]
 8006f0e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006f10:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006f12:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006f16:	07d2      	lsls	r2, r2, #31
 8006f18:	bf48      	it	mi
 8006f1a:	5962      	ldrmi	r2, [r4, r5]
 8006f1c:	689b      	ldr	r3, [r3, #8]
    }
 8006f1e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f20:	bf48      	it	mi
 8006f22:	58d3      	ldrmi	r3, [r2, r3]
 8006f24:	4718      	bx	r3

08006f26 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006f26:	6843      	ldr	r3, [r0, #4]
 8006f28:	b12b      	cbz	r3, 8006f36 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006f2a:	6883      	ldr	r3, [r0, #8]
 8006f2c:	b92b      	cbnz	r3, 8006f3a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006f2e:	68c0      	ldr	r0, [r0, #12]
 8006f30:	f000 0001 	and.w	r0, r0, #1
 8006f34:	4770      	bx	lr
 8006f36:	4618      	mov	r0, r3
 8006f38:	4770      	bx	lr
 8006f3a:	2001      	movs	r0, #1
    }
 8006f3c:	4770      	bx	lr

08006f3e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f3e:	b510      	push	{r4, lr}
 8006f40:	2110      	movs	r1, #16
 8006f42:	4604      	mov	r4, r0
 8006f44:	f025 ff39 	bl	802cdba <_ZdlPvj>
 8006f48:	4620      	mov	r0, r4
 8006f4a:	bd10      	pop	{r4, pc}

08006f4c <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006f4c:	b510      	push	{r4, lr}
 8006f4e:	4b03      	ldr	r3, [pc, #12]	; (8006f5c <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006f50:	6003      	str	r3, [r0, #0]
 8006f52:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f54:	f010 f8d2 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f58:	4620      	mov	r0, r4
 8006f5a:	bd10      	pop	{r4, pc}
 8006f5c:	08030d10 	.word	0x08030d10

08006f60 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006f60:	b507      	push	{r0, r1, r2, lr}
 8006f62:	4b07      	ldr	r3, [pc, #28]	; (8006f80 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006f64:	6003      	str	r3, [r0, #0]
 8006f66:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f68:	f010 f8c8 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f6c:	9801      	ldr	r0, [sp, #4]
 8006f6e:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8006f72:	f025 ff22 	bl	802cdba <_ZdlPvj>
 8006f76:	9801      	ldr	r0, [sp, #4]
 8006f78:	b003      	add	sp, #12
 8006f7a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006f7e:	bf00      	nop
 8006f80:	08030d10 	.word	0x08030d10

08006f84 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006f84:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 8006f86:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 8006f8a:	4299      	cmp	r1, r3
{
 8006f8c:	4604      	mov	r4, r0
 8006f8e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8006f90:	d103      	bne.n	8006f9a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006f92:	f011 fdb5 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006f96:	f7fe fb97 	bl	80056c8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_Single)
 8006f9a:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006f9e:	429d      	cmp	r5, r3
 8006fa0:	d103      	bne.n	8006faa <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006fa2:	f011 fdad 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Single clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006fa6:	f7fe fbbf 	bl	8005728 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Accurate)
 8006faa:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 8006fae:	42a5      	cmp	r5, r4
 8006fb0:	d105      	bne.n	8006fbe <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006fb2:	f011 fda5 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_Accurate clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006fb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006fba:	f7fe bbe5 	b.w	8005788 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006fbe:	bd38      	pop	{r3, r4, r5, pc}

08006fc0 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006fc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fc4:	ed2d 8b06 	vpush	{d8-d10}
 8006fc8:	4604      	mov	r4, r0
 8006fca:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006fcc:	46a2      	mov	sl, r4
 8006fce:	2500      	movs	r5, #0
 8006fd0:	f013 fa16 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 8006fd4:	4b71      	ldr	r3, [pc, #452]	; (800719c <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
 8006fd6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006fd8:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006fdc:	2226      	movs	r2, #38	; 0x26
 8006fde:	4629      	mov	r1, r5
 8006fe0:	4650      	mov	r0, sl
 8006fe2:	f026 ffd6 	bl	802df92 <memset>
 8006fe6:	4650      	mov	r0, sl
 8006fe8:	f7fc fc1a 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8006fec:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006ff0:	26ff      	movs	r6, #255	; 0xff
 8006ff2:	4b6b      	ldr	r3, [pc, #428]	; (80071a0 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006ff4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006ff6:	2226      	movs	r2, #38	; 0x26
 8006ff8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006ffc:	4629      	mov	r1, r5
 8006ffe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007002:	4648      	mov	r0, r9
 8007004:	66a5      	str	r5, [r4, #104]	; 0x68
 8007006:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800700a:	f026 ffc2 	bl	802df92 <memset>
 800700e:	4648      	mov	r0, r9
 8007010:	f7fc fc06 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8007014:	4b63      	ldr	r3, [pc, #396]	; (80071a4 <_ZN19MeasurementViewBaseC1Ev+0x1e4>)
 8007016:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007018:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800701c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007020:	a90a      	add	r1, sp, #40	; 0x28
 8007022:	4648      	mov	r0, r9
 8007024:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007028:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800702c:	f00f f869 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007030:	4640      	mov	r0, r8
 8007032:	f7fc fc59 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007036:	4b5c      	ldr	r3, [pc, #368]	; (80071a8 <_ZN19MeasurementViewBaseC1Ev+0x1e8>)
 8007038:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800703c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007040:	4618      	mov	r0, r3
 8007042:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007046:	ee09 3a90 	vmov	s19, r3
 800704a:	f00f f991 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800704e:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8007052:	4618      	mov	r0, r3
 8007054:	ee0a 3a10 	vmov	s20, r3
 8007058:	f00f f98a 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800705c:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8007060:	4618      	mov	r0, r3
 8007062:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8007066:	ee0a 3a90 	vmov	s21, r3
 800706a:	f00f f981 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800706e:	4638      	mov	r0, r7
 8007070:	f00d fd3a 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007074:	4e4d      	ldr	r6, [pc, #308]	; (80071ac <_ZN19MeasurementViewBaseC1Ev+0x1ec>)
 8007076:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 800707a:	4618      	mov	r0, r3
 800707c:	9302      	str	r3, [sp, #8]
 800707e:	f7fc f9d3 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007082:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007086:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 800708a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800708e:	4618      	mov	r0, r3
 8007090:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8007094:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8007098:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 800709c:	ee08 3a10 	vmov	s16, r3
 80070a0:	f7fc fc22 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 80070a4:	4658      	mov	r0, fp
 80070a6:	f00d fd1f 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 80070aa:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 80070ae:	4618      	mov	r0, r3
 80070b0:	9303      	str	r3, [sp, #12]
 80070b2:	f7fc f9b9 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80070b6:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80070ba:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80070be:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 80070c2:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 80070c6:	4618      	mov	r0, r3
 80070c8:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 80070cc:	ee08 3a90 	vmov	s17, r3
 80070d0:	f7fc fc0a 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 80070d4:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80070d8:	4618      	mov	r0, r3
 80070da:	ee09 3a10 	vmov	s18, r3
 80070de:	f7fc fc03 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80070e2:	4a33      	ldr	r2, [pc, #204]	; (80071b0 <_ZN19MeasurementViewBaseC1Ev+0x1f0>)
 80070e4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80070e8:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 80070ec:	4a31      	ldr	r2, [pc, #196]	; (80071b4 <_ZN19MeasurementViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80070ee:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80070f2:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 80070f6:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 80070fa:	f00f fff5 	bl	80170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80070fe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007102:	462a      	mov	r2, r5
 8007104:	4650      	mov	r0, sl
 8007106:	9300      	str	r3, [sp, #0]
 8007108:	4629      	mov	r1, r5
 800710a:	23f0      	movs	r3, #240	; 0xf0
 800710c:	f7fc fb63 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007110:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007112:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007116:	66a3      	str	r3, [r4, #104]	; 0x68
 8007118:	4651      	mov	r1, sl
 800711a:	4630      	mov	r0, r6
 800711c:	f00b fc18 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8007120:	462a      	mov	r2, r5
 8007122:	4648      	mov	r0, r9
 8007124:	4629      	mov	r1, r5
 8007126:	f7fc fb49 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800712a:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800712c:	4648      	mov	r0, r9
 800712e:	a90a      	add	r1, sp, #40	; 0x28
 8007130:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007134:	f00e ffe5 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007138:	4649      	mov	r1, r9
 800713a:	4630      	mov	r0, r6
 800713c:	f00b fc08 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8007140:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007144:	2156      	movs	r1, #86	; 0x56
 8007146:	4640      	mov	r0, r8
 8007148:	f7fc fb38 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800714c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007150:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007154:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8007158:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 800715c:	4648      	mov	r0, r9
 800715e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007162:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007166:	4641      	mov	r1, r8
 8007168:	4798      	blx	r3
 800716a:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800716e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007172:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007176:	4b10      	ldr	r3, [pc, #64]	; (80071b8 <_ZN19MeasurementViewBaseC1Ev+0x1f8>)
 8007178:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 800717a:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 800717e:	b92b      	cbnz	r3, 800718c <_ZN19MeasurementViewBaseC1Ev+0x1cc>
 8007180:	4b0e      	ldr	r3, [pc, #56]	; (80071bc <_ZN19MeasurementViewBaseC1Ev+0x1fc>)
 8007182:	4a0f      	ldr	r2, [pc, #60]	; (80071c0 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8007184:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007186:	480f      	ldr	r0, [pc, #60]	; (80071c4 <_ZN19MeasurementViewBaseC1Ev+0x204>)
 8007188:	f026 fcfe 	bl	802db88 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800718c:	4b0e      	ldr	r3, [pc, #56]	; (80071c8 <_ZN19MeasurementViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800718e:	881b      	ldrh	r3, [r3, #0]
 8007190:	2b45      	cmp	r3, #69	; 0x45
 8007192:	d81d      	bhi.n	80071d0 <_ZN19MeasurementViewBaseC1Ev+0x210>
 8007194:	4b0d      	ldr	r3, [pc, #52]	; (80071cc <_ZN19MeasurementViewBaseC1Ev+0x20c>)
 8007196:	4a0a      	ldr	r2, [pc, #40]	; (80071c0 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8007198:	2161      	movs	r1, #97	; 0x61
 800719a:	e7f4      	b.n	8007186 <_ZN19MeasurementViewBaseC1Ev+0x1c6>
 800719c:	08030d10 	.word	0x08030d10
 80071a0:	08031c78 	.word	0x08031c78
 80071a4:	08031ec4 	.word	0x08031ec4
 80071a8:	0802f7c4 	.word	0x0802f7c4
 80071ac:	080319ac 	.word	0x080319ac
 80071b0:	08030cf8 	.word	0x08030cf8
 80071b4:	08006f85 	.word	0x08006f85
 80071b8:	200138ac 	.word	0x200138ac
 80071bc:	0802f574 	.word	0x0802f574
 80071c0:	0802f679 	.word	0x0802f679
 80071c4:	0802f5f1 	.word	0x0802f5f1
 80071c8:	200138b0 	.word	0x200138b0
 80071cc:	0802f638 	.word	0x0802f638
        return texts->getText(typedTextId);
 80071d0:	4bad      	ldr	r3, [pc, #692]	; (8007488 <_ZN19MeasurementViewBaseC1Ev+0x4c8>)
 80071d2:	2145      	movs	r1, #69	; 0x45
 80071d4:	6818      	ldr	r0, [r3, #0]
 80071d6:	f003 fb03 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 80071da:	4aac      	ldr	r2, [pc, #688]	; (800748c <_ZN19MeasurementViewBaseC1Ev+0x4cc>)
 80071dc:	4603      	mov	r3, r0
 80071de:	2104      	movs	r1, #4
 80071e0:	4648      	mov	r0, r9
 80071e2:	f014 fe3b 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 80071e6:	4640      	mov	r0, r8
        wc1 = value;
 80071e8:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 80071ec:	f00e f9b8 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80071f0:	4ba7      	ldr	r3, [pc, #668]	; (8007490 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 80071f2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80071f4:	4640      	mov	r0, r8
 80071f6:	2346      	movs	r3, #70	; 0x46
 80071f8:	a90a      	add	r1, sp, #40	; 0x28
 80071fa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071fe:	f00e f9cf 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007202:	4641      	mov	r1, r8
 8007204:	4630      	mov	r0, r6
 8007206:	f00b fba3 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 800720a:	ee19 0a90 	vmov	r0, s19
 800720e:	22f0      	movs	r2, #240	; 0xf0
 8007210:	2121      	movs	r1, #33	; 0x21
 8007212:	f7fc fad3 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8007216:	f04f 0802 	mov.w	r8, #2
 800721a:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800721c:	a909      	add	r1, sp, #36	; 0x24
 800721e:	ee19 0a90 	vmov	r0, s19
 8007222:	aa0a      	add	r2, sp, #40	; 0x28
 8007224:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007228:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 800722c:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007230:	f00e fd71 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007234:	226a      	movs	r2, #106	; 0x6a
 8007236:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 800723a:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 800723e:	ee19 0a90 	vmov	r0, s19
 8007242:	f7fc faff 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007246:	ee19 1a90 	vmov	r1, s19
 800724a:	4630      	mov	r0, r6
        colorPressed = col;
 800724c:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8007250:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 8007254:	f00b fb7c 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Accurate.setXY(33, 170);
 8007258:	ee1a 0a10 	vmov	r0, s20
 800725c:	22aa      	movs	r2, #170	; 0xaa
 800725e:	2121      	movs	r1, #33	; 0x21
 8007260:	f7fc faac 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8007264:	2303      	movs	r3, #3
    buttonWithLabel_Accurate.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007266:	a909      	add	r1, sp, #36	; 0x24
 8007268:	ee1a 0a10 	vmov	r0, s20
 800726c:	aa0a      	add	r2, sp, #40	; 0x28
 800726e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007272:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007276:	f00e fd4e 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800727a:	2269      	movs	r2, #105	; 0x69
 800727c:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8007280:	ee1a 0a10 	vmov	r0, s20
 8007284:	f7fc fade 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007288:	ee1a 1a10 	vmov	r1, s20
 800728c:	4630      	mov	r0, r6
        colorPressed = col;
 800728e:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8007292:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8007296:	f00b fb5b 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Single.setXY(33, 100);
 800729a:	ee1a 0a90 	vmov	r0, s21
 800729e:	2264      	movs	r2, #100	; 0x64
 80072a0:	2121      	movs	r1, #33	; 0x21
 80072a2:	f7fc fa8b 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Single.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80072a6:	aa0a      	add	r2, sp, #40	; 0x28
 80072a8:	2303      	movs	r3, #3
 80072aa:	a909      	add	r1, sp, #36	; 0x24
 80072ac:	ee1a 0a90 	vmov	r0, s21
 80072b0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80072b4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80072b8:	f00e fd2d 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80072bc:	2368      	movs	r3, #104	; 0x68
 80072be:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 80072c2:	ee1a 0a90 	vmov	r0, s21
 80072c6:	f7fc fabd 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80072ca:	ee1a 1a90 	vmov	r1, s21
 80072ce:	4630      	mov	r0, r6
        colorPressed = col;
 80072d0:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 80072d4:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 80072d8:	f00b fb3a 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 80072dc:	230a      	movs	r3, #10
 80072de:	9300      	str	r3, [sp, #0]
 80072e0:	224b      	movs	r2, #75	; 0x4b
 80072e2:	23f0      	movs	r3, #240	; 0xf0
 80072e4:	4629      	mov	r1, r5
 80072e6:	4638      	mov	r0, r7
 80072e8:	f7fc fa75 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80072ec:	9b02      	ldr	r3, [sp, #8]
 80072ee:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80072f2:	22a0      	movs	r2, #160	; 0xa0
 80072f4:	4611      	mov	r1, r2
 80072f6:	4638      	mov	r0, r7
 80072f8:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 80072fc:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8007300:	f00d fd08 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007304:	22a0      	movs	r2, #160	; 0xa0
 8007306:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800730a:	4638      	mov	r0, r7
 800730c:	f00d fd0d 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007310:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8007314:	2b20      	cmp	r3, #32
 8007316:	d005      	beq.n	8007324 <_ZN19MeasurementViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8007318:	2320      	movs	r3, #32
 800731a:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 800731e:	4638      	mov	r0, r7
 8007320:	f00d fc02 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007324:	4638      	mov	r0, r7
 8007326:	2101      	movs	r1, #1
 8007328:	f00d fd0a 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800732c:	4639      	mov	r1, r7
 800732e:	4630      	mov	r0, r6
 8007330:	f00b fb0e 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007334:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(61, 60);
 8007338:	223c      	movs	r2, #60	; 0x3c
 800733a:	ee18 0a10 	vmov	r0, s16
 800733e:	213d      	movs	r1, #61	; 0x3d
        linespace = space;
 8007340:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 8007344:	ad04      	add	r5, sp, #16
 8007346:	f7fc fa39 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800734a:	ee18 1a10 	vmov	r1, s16
 800734e:	4628      	mov	r0, r5
        color = newColor;
 8007350:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007354:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007358:	f00d fe88 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800735c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007360:	ee18 3a10 	vmov	r3, s16
 8007364:	333c      	adds	r3, #60	; 0x3c
 8007366:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800736a:	4b49      	ldr	r3, [pc, #292]	; (8007490 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 800736c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 800736e:	ee18 0a10 	vmov	r0, s16
 8007372:	2353      	movs	r3, #83	; 0x53
 8007374:	a90a      	add	r1, sp, #40	; 0x28
 8007376:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800737a:	f00e f911 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800737e:	ee18 1a10 	vmov	r1, s16
 8007382:	4630      	mov	r0, r6
 8007384:	f00b fae4 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007388:	230a      	movs	r3, #10
 800738a:	9300      	str	r3, [sp, #0]
 800738c:	2232      	movs	r2, #50	; 0x32
 800738e:	23f0      	movs	r3, #240	; 0xf0
 8007390:	4641      	mov	r1, r8
 8007392:	4658      	mov	r0, fp
 8007394:	f7fc fa1f 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007398:	9b03      	ldr	r3, [sp, #12]
 800739a:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800739e:	22a0      	movs	r2, #160	; 0xa0
 80073a0:	4611      	mov	r1, r2
 80073a2:	4658      	mov	r0, fp
 80073a4:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 80073a8:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 80073ac:	f00d fcb2 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80073b0:	22a0      	movs	r2, #160	; 0xa0
 80073b2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80073b6:	4658      	mov	r0, fp
 80073b8:	f00d fcb7 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80073bc:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 80073c0:	2b20      	cmp	r3, #32
 80073c2:	d005      	beq.n	80073d0 <_ZN19MeasurementViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 80073c4:	2320      	movs	r3, #32
 80073c6:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 80073ca:	4658      	mov	r0, fp
 80073cc:	f00d fbac 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80073d0:	4658      	mov	r0, fp
 80073d2:	2101      	movs	r1, #1
 80073d4:	f00d fcb4 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80073d8:	4659      	mov	r1, fp
 80073da:	4630      	mov	r0, r6
 80073dc:	f00b fab8 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80073e0:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 80073e4:	ee18 0a90 	vmov	r0, s17
 80073e8:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80073ea:	2700      	movs	r7, #0
 80073ec:	2145      	movs	r1, #69	; 0x45
 80073ee:	f7fc f9e5 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80073f2:	ee18 1a90 	vmov	r1, s17
 80073f6:	4628      	mov	r0, r5
        color = newColor;
 80073f8:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 80073fc:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8007400:	f00d fe34 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007404:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007408:	ee18 3a90 	vmov	r3, s17
 800740c:	333c      	adds	r3, #60	; 0x3c
 800740e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007412:	4b1f      	ldr	r3, [pc, #124]	; (8007490 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007414:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8007416:	ee18 0a90 	vmov	r0, s17
 800741a:	236b      	movs	r3, #107	; 0x6b
 800741c:	a90a      	add	r1, sp, #40	; 0x28
 800741e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007422:	f00e f8bd 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007426:	ee18 1a90 	vmov	r1, s17
 800742a:	4630      	mov	r0, r6
 800742c:	f00b fa90 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8007430:	ee19 0a10 	vmov	r0, s18
 8007434:	220c      	movs	r2, #12
 8007436:	2136      	movs	r1, #54	; 0x36
 8007438:	f7fc f9c0 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800743c:	ee19 1a10 	vmov	r1, s18
 8007440:	4628      	mov	r0, r5
        color = newColor;
 8007442:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 8007446:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 800744a:	f00d fe0f 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800744e:	ee19 2a10 	vmov	r2, s18
 8007452:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8007456:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800745a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800745e:	4b0c      	ldr	r3, [pc, #48]	; (8007490 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007460:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8007462:	ee19 0a10 	vmov	r0, s18
 8007466:	236c      	movs	r3, #108	; 0x6c
 8007468:	a90a      	add	r1, sp, #40	; 0x28
 800746a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800746e:	f00e f897 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007472:	4630      	mov	r0, r6
 8007474:	ee19 1a10 	vmov	r1, s18
 8007478:	f00b fa6a 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800747c:	4620      	mov	r0, r4
 800747e:	b00d      	add	sp, #52	; 0x34
 8007480:	ecbd 8b06 	vpop	{d8-d10}
 8007484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007488:	200138b8 	.word	0x200138b8
 800748c:	0802f6b1 	.word	0x0802f6b1
 8007490:	0802f724 	.word	0x0802f724

08007494 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8007494:	4770      	bx	lr

08007496 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007496:	4770      	bx	lr

08007498 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007498:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800749a:	68c2      	ldr	r2, [r0, #12]
 800749c:	6844      	ldr	r4, [r0, #4]
 800749e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80074a0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80074a2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80074a6:	07d2      	lsls	r2, r2, #31
 80074a8:	bf48      	it	mi
 80074aa:	5962      	ldrmi	r2, [r4, r5]
 80074ac:	689b      	ldr	r3, [r3, #8]
    }
 80074ae:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80074b0:	bf48      	it	mi
 80074b2:	58d3      	ldrmi	r3, [r2, r3]
 80074b4:	4718      	bx	r3

080074b6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80074b6:	6843      	ldr	r3, [r0, #4]
 80074b8:	b12b      	cbz	r3, 80074c6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80074ba:	6883      	ldr	r3, [r0, #8]
 80074bc:	b92b      	cbnz	r3, 80074ca <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80074be:	68c0      	ldr	r0, [r0, #12]
 80074c0:	f000 0001 	and.w	r0, r0, #1
 80074c4:	4770      	bx	lr
 80074c6:	4618      	mov	r0, r3
 80074c8:	4770      	bx	lr
 80074ca:	2001      	movs	r0, #1
    }
 80074cc:	4770      	bx	lr

080074ce <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80074ce:	b510      	push	{r4, lr}
 80074d0:	2110      	movs	r1, #16
 80074d2:	4604      	mov	r4, r0
 80074d4:	f025 fc71 	bl	802cdba <_ZdlPvj>
 80074d8:	4620      	mov	r0, r4
 80074da:	bd10      	pop	{r4, pc}

080074dc <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80074dc:	b510      	push	{r4, lr}
 80074de:	4b03      	ldr	r3, [pc, #12]	; (80074ec <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 80074e0:	6003      	str	r3, [r0, #0]
 80074e2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80074e4:	f00f fe0a 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80074e8:	4620      	mov	r0, r4
 80074ea:	bd10      	pop	{r4, pc}
 80074ec:	08030d5c 	.word	0x08030d5c

080074f0 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80074f0:	b507      	push	{r0, r1, r2, lr}
 80074f2:	4b07      	ldr	r3, [pc, #28]	; (8007510 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 80074f4:	6003      	str	r3, [r0, #0]
 80074f6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80074f8:	f00f fe00 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80074fc:	9801      	ldr	r0, [sp, #4]
 80074fe:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8007502:	f025 fc5a 	bl	802cdba <_ZdlPvj>
 8007506:	9801      	ldr	r0, [sp, #4]
 8007508:	b003      	add	sp, #12
 800750a:	f85d fb04 	ldr.w	pc, [sp], #4
 800750e:	bf00      	nop
 8007510:	08030d5c 	.word	0x08030d5c

08007514 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007514:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 8007516:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 800751a:	4299      	cmp	r1, r3
{
 800751c:	4604      	mov	r4, r0
 800751e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8007520:	d103      	bne.n	800752a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007522:	f011 faed 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8007526:	f7fe f8ef 	bl	8005708 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 800752a:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800752e:	429d      	cmp	r5, r3
 8007530:	d103      	bne.n	800753a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8007532:	f011 fae5 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8007536:	f7fe f957 	bl	80057e8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 800753a:	f504 74ba 	add.w	r4, r4, #372	; 0x174
 800753e:	42a5      	cmp	r5, r4
 8007540:	d105      	bne.n	800754e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8007542:	f011 fadd 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8007546:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 800754a:	f7fe b93d 	b.w	80057c8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 800754e:	bd38      	pop	{r3, r4, r5, pc}

08007550 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8007550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007554:	ed2d 8b06 	vpush	{d8-d10}
 8007558:	4604      	mov	r4, r0
 800755a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 800755c:	46a2      	mov	sl, r4
 800755e:	2500      	movs	r5, #0
 8007560:	f012 ff4e 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 8007564:	4b71      	ldr	r3, [pc, #452]	; (800772c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
 8007566:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007568:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 800756c:	2226      	movs	r2, #38	; 0x26
 800756e:	4629      	mov	r1, r5
 8007570:	4650      	mov	r0, sl
 8007572:	f026 fd0e 	bl	802df92 <memset>
 8007576:	4650      	mov	r0, sl
 8007578:	f7fc f952 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 800757c:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8007580:	26ff      	movs	r6, #255	; 0xff
 8007582:	4b6b      	ldr	r3, [pc, #428]	; (8007730 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8007584:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007586:	2226      	movs	r2, #38	; 0x26
 8007588:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800758c:	4629      	mov	r1, r5
 800758e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007592:	4648      	mov	r0, r9
 8007594:	66a5      	str	r5, [r4, #104]	; 0x68
 8007596:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800759a:	f026 fcfa 	bl	802df92 <memset>
 800759e:	4648      	mov	r0, r9
 80075a0:	f7fc f93e 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 80075a4:	4b63      	ldr	r3, [pc, #396]	; (8007734 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>)
 80075a6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80075a8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80075ac:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80075b0:	a90a      	add	r1, sp, #40	; 0x28
 80075b2:	4648      	mov	r0, r9
 80075b4:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80075b8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80075bc:	f00e fda1 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80075c0:	4640      	mov	r0, r8
 80075c2:	f7fc f991 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80075c6:	4b5c      	ldr	r3, [pc, #368]	; (8007738 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e8>)
 80075c8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80075cc:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80075d0:	4618      	mov	r0, r3
 80075d2:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80075d6:	ee09 3a90 	vmov	s19, r3
 80075da:	f00e fec9 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80075de:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80075e2:	4618      	mov	r0, r3
 80075e4:	ee0a 3a10 	vmov	s20, r3
 80075e8:	f00e fec2 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80075ec:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80075f0:	4618      	mov	r0, r3
 80075f2:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 80075f6:	ee0a 3a90 	vmov	s21, r3
 80075fa:	f00e feb9 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80075fe:	4638      	mov	r0, r7
 8007600:	f00d fa72 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007604:	4e4d      	ldr	r6, [pc, #308]	; (800773c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1ec>)
 8007606:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 800760a:	4618      	mov	r0, r3
 800760c:	9302      	str	r3, [sp, #8]
 800760e:	f7fb ff0b 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007612:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007616:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 800761a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800761e:	4618      	mov	r0, r3
 8007620:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8007624:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8007628:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 800762c:	ee08 3a10 	vmov	s16, r3
 8007630:	f7fc f95a 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8007634:	4658      	mov	r0, fp
 8007636:	f00d fa57 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 800763a:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 800763e:	4618      	mov	r0, r3
 8007640:	9303      	str	r3, [sp, #12]
 8007642:	f7fb fef1 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007646:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800764a:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 800764e:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8007652:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8007656:	4618      	mov	r0, r3
 8007658:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 800765c:	ee08 3a90 	vmov	s17, r3
 8007660:	f7fc f942 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8007664:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007668:	4618      	mov	r0, r3
 800766a:	ee09 3a10 	vmov	s18, r3
 800766e:	f7fc f93b 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007672:	4a33      	ldr	r2, [pc, #204]	; (8007740 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f0>)
 8007674:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007678:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 800767c:	4a31      	ldr	r2, [pc, #196]	; (8007744 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800767e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007682:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8007686:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 800768a:	f00f fd2d 	bl	80170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800768e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007692:	462a      	mov	r2, r5
 8007694:	4650      	mov	r0, sl
 8007696:	9300      	str	r3, [sp, #0]
 8007698:	4629      	mov	r1, r5
 800769a:	23f0      	movs	r3, #240	; 0xf0
 800769c:	f7fc f89b 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80076a0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80076a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80076a6:	66a3      	str	r3, [r4, #104]	; 0x68
 80076a8:	4651      	mov	r1, sl
 80076aa:	4630      	mov	r0, r6
 80076ac:	f00b f950 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_return.setXY(0, 0);
 80076b0:	462a      	mov	r2, r5
 80076b2:	4648      	mov	r0, r9
 80076b4:	4629      	mov	r1, r5
 80076b6:	f7fc f881 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80076ba:	2308      	movs	r3, #8
    image_return.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80076bc:	4648      	mov	r0, r9
 80076be:	a90a      	add	r1, sp, #40	; 0x28
 80076c0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80076c4:	f00e fd1d 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80076c8:	4649      	mov	r1, r9
 80076ca:	4630      	mov	r0, r6
 80076cc:	f00b f940 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 80076d0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80076d4:	2156      	movs	r1, #86	; 0x56
 80076d6:	4640      	mov	r0, r8
 80076d8:	f7fc f870 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80076dc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80076e0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80076e4:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 80076e8:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 80076ec:	4648      	mov	r0, r9
 80076ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80076f2:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80076f6:	4641      	mov	r1, r8
 80076f8:	4798      	blx	r3
 80076fa:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80076fe:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007702:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007706:	4b10      	ldr	r3, [pc, #64]	; (8007748 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f8>)
 8007708:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 800770a:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 800770e:	b92b      	cbnz	r3, 800771c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>
 8007710:	4b0e      	ldr	r3, [pc, #56]	; (800774c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1fc>)
 8007712:	4a0f      	ldr	r2, [pc, #60]	; (8007750 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 8007714:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007716:	480f      	ldr	r0, [pc, #60]	; (8007754 <_ZN28Measurement_AccurateViewBaseC1Ev+0x204>)
 8007718:	f026 fa36 	bl	802db88 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800771c:	4b0e      	ldr	r3, [pc, #56]	; (8007758 <_ZN28Measurement_AccurateViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800771e:	881b      	ldrh	r3, [r3, #0]
 8007720:	2b40      	cmp	r3, #64	; 0x40
 8007722:	d81d      	bhi.n	8007760 <_ZN28Measurement_AccurateViewBaseC1Ev+0x210>
 8007724:	4b0d      	ldr	r3, [pc, #52]	; (800775c <_ZN28Measurement_AccurateViewBaseC1Ev+0x20c>)
 8007726:	4a0a      	ldr	r2, [pc, #40]	; (8007750 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 8007728:	2161      	movs	r1, #97	; 0x61
 800772a:	e7f4      	b.n	8007716 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c6>
 800772c:	08030d5c 	.word	0x08030d5c
 8007730:	08031c78 	.word	0x08031c78
 8007734:	08031ec4 	.word	0x08031ec4
 8007738:	0802f7c4 	.word	0x0802f7c4
 800773c:	080319ac 	.word	0x080319ac
 8007740:	08030d44 	.word	0x08030d44
 8007744:	08007515 	.word	0x08007515
 8007748:	200138ac 	.word	0x200138ac
 800774c:	0802f574 	.word	0x0802f574
 8007750:	0802f679 	.word	0x0802f679
 8007754:	0802f5f1 	.word	0x0802f5f1
 8007758:	200138b0 	.word	0x200138b0
 800775c:	0802f638 	.word	0x0802f638
        return texts->getText(typedTextId);
 8007760:	4bad      	ldr	r3, [pc, #692]	; (8007a18 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4c8>)
 8007762:	2140      	movs	r1, #64	; 0x40
 8007764:	6818      	ldr	r0, [r3, #0]
 8007766:	f003 f83b 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 800776a:	4aac      	ldr	r2, [pc, #688]	; (8007a1c <_ZN28Measurement_AccurateViewBaseC1Ev+0x4cc>)
 800776c:	4603      	mov	r3, r0
 800776e:	2104      	movs	r1, #4
 8007770:	4648      	mov	r0, r9
 8007772:	f014 fb73 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8007776:	4640      	mov	r0, r8
        wc1 = value;
 8007778:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 800777c:	f00d fef0 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007780:	4ba7      	ldr	r3, [pc, #668]	; (8007a20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 8007782:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8007784:	4640      	mov	r0, r8
 8007786:	2341      	movs	r3, #65	; 0x41
 8007788:	a90a      	add	r1, sp, #40	; 0x28
 800778a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800778e:	f00d ff07 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007792:	4641      	mov	r1, r8
 8007794:	4630      	mov	r0, r6
 8007796:	f00b f8db 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 800779a:	ee19 0a90 	vmov	r0, s19
 800779e:	22f0      	movs	r2, #240	; 0xf0
 80077a0:	2121      	movs	r1, #33	; 0x21
 80077a2:	f7fc f80b 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80077a6:	f04f 0802 	mov.w	r8, #2
 80077aa:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80077ac:	a909      	add	r1, sp, #36	; 0x24
 80077ae:	ee19 0a90 	vmov	r0, s19
 80077b2:	aa0a      	add	r2, sp, #40	; 0x28
 80077b4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80077b8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 80077bc:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80077c0:	f00e faa9 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80077c4:	225e      	movs	r2, #94	; 0x5e
 80077c6:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 80077ca:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 80077ce:	ee19 0a90 	vmov	r0, s19
 80077d2:	f7fc f837 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80077d6:	ee19 1a90 	vmov	r1, s19
 80077da:	4630      	mov	r0, r6
        colorPressed = col;
 80077dc:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 80077e0:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 80077e4:	f00b f8b4 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 80077e8:	ee1a 0a10 	vmov	r0, s20
 80077ec:	22aa      	movs	r2, #170	; 0xaa
 80077ee:	2121      	movs	r1, #33	; 0x21
 80077f0:	f7fb ffe4 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80077f4:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80077f6:	a909      	add	r1, sp, #36	; 0x24
 80077f8:	ee1a 0a10 	vmov	r0, s20
 80077fc:	aa0a      	add	r2, sp, #40	; 0x28
 80077fe:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007802:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007806:	f00e fa86 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800780a:	225d      	movs	r2, #93	; 0x5d
 800780c:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8007810:	ee1a 0a10 	vmov	r0, s20
 8007814:	f7fc f816 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007818:	ee1a 1a10 	vmov	r1, s20
 800781c:	4630      	mov	r0, r6
        colorPressed = col;
 800781e:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8007822:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8007826:	f00b f893 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 800782a:	ee1a 0a90 	vmov	r0, s21
 800782e:	2264      	movs	r2, #100	; 0x64
 8007830:	2121      	movs	r1, #33	; 0x21
 8007832:	f7fb ffc3 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007836:	aa0a      	add	r2, sp, #40	; 0x28
 8007838:	2303      	movs	r3, #3
 800783a:	a909      	add	r1, sp, #36	; 0x24
 800783c:	ee1a 0a90 	vmov	r0, s21
 8007840:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007844:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007848:	f00e fa65 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800784c:	235c      	movs	r3, #92	; 0x5c
 800784e:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8007852:	ee1a 0a90 	vmov	r0, s21
 8007856:	f7fb fff5 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800785a:	ee1a 1a90 	vmov	r1, s21
 800785e:	4630      	mov	r0, r6
        colorPressed = col;
 8007860:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8007864:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007868:	f00b f872 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 800786c:	230a      	movs	r3, #10
 800786e:	9300      	str	r3, [sp, #0]
 8007870:	224b      	movs	r2, #75	; 0x4b
 8007872:	23f0      	movs	r3, #240	; 0xf0
 8007874:	4629      	mov	r1, r5
 8007876:	4638      	mov	r0, r7
 8007878:	f7fb ffad 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800787c:	9b02      	ldr	r3, [sp, #8]
 800787e:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007882:	22a0      	movs	r2, #160	; 0xa0
 8007884:	4611      	mov	r1, r2
 8007886:	4638      	mov	r0, r7
 8007888:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 800788c:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8007890:	f00d fa40 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007894:	22a0      	movs	r2, #160	; 0xa0
 8007896:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800789a:	4638      	mov	r0, r7
 800789c:	f00d fa45 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80078a0:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 80078a4:	2b20      	cmp	r3, #32
 80078a6:	d005      	beq.n	80078b4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 80078a8:	2320      	movs	r3, #32
 80078aa:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 80078ae:	4638      	mov	r0, r7
 80078b0:	f00d f93a 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80078b4:	4638      	mov	r0, r7
 80078b6:	2101      	movs	r1, #1
 80078b8:	f00d fa42 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80078bc:	4639      	mov	r1, r7
 80078be:	4630      	mov	r0, r6
 80078c0:	f00b f846 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80078c4:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(33, 60);
 80078c8:	223c      	movs	r2, #60	; 0x3c
 80078ca:	ee18 0a10 	vmov	r0, s16
 80078ce:	2121      	movs	r1, #33	; 0x21
        linespace = space;
 80078d0:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 80078d4:	ad04      	add	r5, sp, #16
 80078d6:	f7fb ff71 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80078da:	ee18 1a10 	vmov	r1, s16
 80078de:	4628      	mov	r0, r5
        color = newColor;
 80078e0:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 80078e4:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 80078e8:	f00d fbc0 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80078ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80078f0:	ee18 3a10 	vmov	r3, s16
 80078f4:	333c      	adds	r3, #60	; 0x3c
 80078f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80078fa:	4b49      	ldr	r3, [pc, #292]	; (8007a20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80078fc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 80078fe:	ee18 0a10 	vmov	r0, s16
 8007902:	234f      	movs	r3, #79	; 0x4f
 8007904:	a90a      	add	r1, sp, #40	; 0x28
 8007906:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800790a:	f00d fe49 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800790e:	ee18 1a10 	vmov	r1, s16
 8007912:	4630      	mov	r0, r6
 8007914:	f00b f81c 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007918:	230a      	movs	r3, #10
 800791a:	9300      	str	r3, [sp, #0]
 800791c:	2232      	movs	r2, #50	; 0x32
 800791e:	23f0      	movs	r3, #240	; 0xf0
 8007920:	4641      	mov	r1, r8
 8007922:	4658      	mov	r0, fp
 8007924:	f7fb ff57 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007928:	9b03      	ldr	r3, [sp, #12]
 800792a:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800792e:	22a0      	movs	r2, #160	; 0xa0
 8007930:	4611      	mov	r1, r2
 8007932:	4658      	mov	r0, fp
 8007934:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8007938:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 800793c:	f00d f9ea 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007940:	22a0      	movs	r2, #160	; 0xa0
 8007942:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007946:	4658      	mov	r0, fp
 8007948:	f00d f9ef 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800794c:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8007950:	2b20      	cmp	r3, #32
 8007952:	d005      	beq.n	8007960 <_ZN28Measurement_AccurateViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 8007954:	2320      	movs	r3, #32
 8007956:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 800795a:	4658      	mov	r0, fp
 800795c:	f00d f8e4 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007960:	4658      	mov	r0, fp
 8007962:	2101      	movs	r1, #1
 8007964:	f00d f9ec 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007968:	4659      	mov	r1, fp
 800796a:	4630      	mov	r0, r6
 800796c:	f00a fff0 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007970:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 8007974:	ee18 0a90 	vmov	r0, s17
 8007978:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800797a:	2700      	movs	r7, #0
 800797c:	2145      	movs	r1, #69	; 0x45
 800797e:	f7fb ff1d 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007982:	ee18 1a90 	vmov	r1, s17
 8007986:	4628      	mov	r0, r5
        color = newColor;
 8007988:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 800798c:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8007990:	f00d fb6c 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007994:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007998:	ee18 3a90 	vmov	r3, s17
 800799c:	333c      	adds	r3, #60	; 0x3c
 800799e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80079a2:	4b1f      	ldr	r3, [pc, #124]	; (8007a20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80079a4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80079a6:	ee18 0a90 	vmov	r0, s17
 80079aa:	2360      	movs	r3, #96	; 0x60
 80079ac:	a90a      	add	r1, sp, #40	; 0x28
 80079ae:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079b2:	f00d fdf5 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079b6:	ee18 1a90 	vmov	r1, s17
 80079ba:	4630      	mov	r0, r6
 80079bc:	f00a ffc8 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 80079c0:	ee19 0a10 	vmov	r0, s18
 80079c4:	220c      	movs	r2, #12
 80079c6:	2136      	movs	r1, #54	; 0x36
 80079c8:	f7fb fef8 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80079cc:	ee19 1a10 	vmov	r1, s18
 80079d0:	4628      	mov	r0, r5
        color = newColor;
 80079d2:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 80079d6:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 80079da:	f00d fb47 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079de:	ee19 2a10 	vmov	r2, s18
 80079e2:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 80079e6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80079ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80079ee:	4b0c      	ldr	r3, [pc, #48]	; (8007a20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80079f0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80079f2:	ee19 0a10 	vmov	r0, s18
 80079f6:	235f      	movs	r3, #95	; 0x5f
 80079f8:	a90a      	add	r1, sp, #40	; 0x28
 80079fa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079fe:	f00d fdcf 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a02:	4630      	mov	r0, r6
 8007a04:	ee19 1a10 	vmov	r1, s18
 8007a08:	f00a ffa2 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007a0c:	4620      	mov	r0, r4
 8007a0e:	b00d      	add	sp, #52	; 0x34
 8007a10:	ecbd 8b06 	vpop	{d8-d10}
 8007a14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a18:	200138b8 	.word	0x200138b8
 8007a1c:	0802f6b1 	.word	0x0802f6b1
 8007a20:	0802f724 	.word	0x0802f724

08007a24 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8007a24:	4770      	bx	lr

08007a26 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007a26:	4770      	bx	lr

08007a28 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007a28:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007a2a:	68c2      	ldr	r2, [r0, #12]
 8007a2c:	6844      	ldr	r4, [r0, #4]
 8007a2e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007a30:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007a32:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007a36:	07d2      	lsls	r2, r2, #31
 8007a38:	bf48      	it	mi
 8007a3a:	5962      	ldrmi	r2, [r4, r5]
 8007a3c:	689b      	ldr	r3, [r3, #8]
    }
 8007a3e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007a40:	bf48      	it	mi
 8007a42:	58d3      	ldrmi	r3, [r2, r3]
 8007a44:	4718      	bx	r3

08007a46 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007a46:	6843      	ldr	r3, [r0, #4]
 8007a48:	b12b      	cbz	r3, 8007a56 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007a4a:	6883      	ldr	r3, [r0, #8]
 8007a4c:	b92b      	cbnz	r3, 8007a5a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007a4e:	68c0      	ldr	r0, [r0, #12]
 8007a50:	f000 0001 	and.w	r0, r0, #1
 8007a54:	4770      	bx	lr
 8007a56:	4618      	mov	r0, r3
 8007a58:	4770      	bx	lr
 8007a5a:	2001      	movs	r0, #1
    }
 8007a5c:	4770      	bx	lr

08007a5e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007a5e:	b510      	push	{r4, lr}
 8007a60:	2110      	movs	r1, #16
 8007a62:	4604      	mov	r4, r0
 8007a64:	f025 f9a9 	bl	802cdba <_ZdlPvj>
 8007a68:	4620      	mov	r0, r4
 8007a6a:	bd10      	pop	{r4, pc}

08007a6c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007a6c:	b510      	push	{r4, lr}
 8007a6e:	4b03      	ldr	r3, [pc, #12]	; (8007a7c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8007a70:	6003      	str	r3, [r0, #0]
 8007a72:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a74:	f00f fb42 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a78:	4620      	mov	r0, r4
 8007a7a:	bd10      	pop	{r4, pc}
 8007a7c:	08030da8 	.word	0x08030da8

08007a80 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007a80:	b507      	push	{r0, r1, r2, lr}
 8007a82:	4b07      	ldr	r3, [pc, #28]	; (8007aa0 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8007a84:	6003      	str	r3, [r0, #0]
 8007a86:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a88:	f00f fb38 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a8c:	9801      	ldr	r0, [sp, #4]
 8007a8e:	f241 4178 	movw	r1, #5240	; 0x1478
 8007a92:	f025 f992 	bl	802cdba <_ZdlPvj>
 8007a96:	9801      	ldr	r0, [sp, #4]
 8007a98:	b003      	add	sp, #12
 8007a9a:	f85d fb04 	ldr.w	pc, [sp], #4
 8007a9e:	bf00      	nop
 8007aa0:	08030da8 	.word	0x08030da8

08007aa4 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8007aa4:	3098      	adds	r0, #152	; 0x98
 8007aa6:	4288      	cmp	r0, r1
{
 8007aa8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8007aaa:	d105      	bne.n	8007ab8 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007aac:	f011 f828 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007ab0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8007ab4:	f7fd be78 	b.w	80057a8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007ab8:	bd08      	pop	{r3, pc}
	...

08007abc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8007abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ac0:	ed2d 8b0a 	vpush	{d8-d12}
 8007ac4:	4604      	mov	r4, r0
 8007ac6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007ac8:	46a0      	mov	r8, r4
 8007aca:	2500      	movs	r5, #0
 8007acc:	f012 fc98 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 8007ad0:	4bce      	ldr	r3, [pc, #824]	; (8007e0c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x350>)
 8007ad2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007ad4:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8007ad8:	2226      	movs	r2, #38	; 0x26
 8007ada:	4629      	mov	r1, r5
 8007adc:	4640      	mov	r0, r8
 8007ade:	f026 fa58 	bl	802df92 <memset>
 8007ae2:	4640      	mov	r0, r8
 8007ae4:	f7fb fe9c 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8007ae8:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007aec:	26ff      	movs	r6, #255	; 0xff
 8007aee:	4bc8      	ldr	r3, [pc, #800]	; (8007e10 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x354>)
 8007af0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007af2:	2226      	movs	r2, #38	; 0x26
 8007af4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007af8:	4629      	mov	r1, r5
 8007afa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007afe:	4638      	mov	r0, r7
 8007b00:	66a5      	str	r5, [r4, #104]	; 0x68
 8007b02:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b06:	f026 fa44 	bl	802df92 <memset>
 8007b0a:	4638      	mov	r0, r7
 8007b0c:	f7fb fe88 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8007b10:	4bc0      	ldr	r3, [pc, #768]	; (8007e14 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x358>)
 8007b12:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007b14:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007b18:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007b1c:	a90a      	add	r1, sp, #40	; 0x28
 8007b1e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007b22:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8007b24:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007b28:	f00e faeb 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b2c:	4658      	mov	r0, fp
 8007b2e:	f00e fc1f 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007b32:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8007b36:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8007b3a:	4618      	mov	r0, r3
 8007b3c:	ee0a 3a90 	vmov	s21, r3
 8007b40:	f7fb fed2 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8007b44:	4648      	mov	r0, r9
 8007b46:	f7fb fecf 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8007b4a:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8007b4e:	4618      	mov	r0, r3
 8007b50:	ee0b 3a10 	vmov	s22, r3
 8007b54:	f7fb fec8 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8007b58:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8007b5c:	4618      	mov	r0, r3
 8007b5e:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007b62:	4ead      	ldr	r6, [pc, #692]	; (8007e18 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x35c>)
        : TextArea()
 8007b64:	f7fb fec0 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8007b68:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8007b6c:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8007b70:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007b72:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8007b76:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8007b7a:	f7fb feb5 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8007b7e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8007b82:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007b84:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8007b88:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8007b8c:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8007b90:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8007b94:	f7fb fea8 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007b98:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8007b9c:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8007ba0:	4650      	mov	r0, sl
 8007ba2:	f00d ff71 	bl	8015a88 <_ZN8touchgfx5GaugeC1Ev>
 8007ba6:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8007baa:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007bac:	4e9b      	ldr	r6, [pc, #620]	; (8007e1c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x360>)
 8007bae:	ee08 3a10 	vmov	s16, r3
 8007bb2:	f00c ff99 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8007bb6:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8007bba:	4618      	mov	r0, r3
 8007bbc:	9302      	str	r3, [sp, #8]
 8007bbe:	f7fb fc33 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007bc2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007bc6:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007bca:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007bce:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8007bd2:	4618      	mov	r0, r3
 8007bd4:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007bd8:	ee09 3a10 	vmov	s18, r3
 8007bdc:	f7fb fe84 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8007be0:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007be4:	4618      	mov	r0, r3
 8007be6:	ee08 3a90 	vmov	s17, r3
 8007bea:	f00c ff7d 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8007bee:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8007bf2:	4618      	mov	r0, r3
 8007bf4:	9303      	str	r3, [sp, #12]
 8007bf6:	f7fb fc17 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007bfa:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007bfe:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8007c02:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8007c06:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8007c0a:	4618      	mov	r0, r3
 8007c0c:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8007c10:	ee09 3a90 	vmov	s19, r3
 8007c14:	f7fb fe68 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8007c18:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8007c1c:	4618      	mov	r0, r3
 8007c1e:	ee0a 3a10 	vmov	s20, r3
 8007c22:	f7fb fe61 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007c26:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007c2a:	4a7d      	ldr	r2, [pc, #500]	; (8007e20 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x364>)
 8007c2c:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8007c30:	4a7c      	ldr	r2, [pc, #496]	; (8007e24 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x368>)
 8007c32:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8007c36:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8007c3a:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007c3e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007c42:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8007c46:	f00f fa4f 	bl	80170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007c4a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007c4e:	462a      	mov	r2, r5
 8007c50:	4640      	mov	r0, r8
 8007c52:	9300      	str	r3, [sp, #0]
 8007c54:	4629      	mov	r1, r5
 8007c56:	23f0      	movs	r3, #240	; 0xf0
 8007c58:	f7fb fdbd 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c5c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007c5e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007c62:	66a3      	str	r3, [r4, #104]	; 0x68
 8007c64:	4641      	mov	r1, r8
 8007c66:	4630      	mov	r0, r6
 8007c68:	f00a fe72 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8007c6c:	462a      	mov	r2, r5
 8007c6e:	4638      	mov	r0, r7
 8007c70:	4629      	mov	r1, r5
 8007c72:	f7fb fda3 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8007c76:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007c7a:	4638      	mov	r0, r7
 8007c7c:	a90a      	add	r1, sp, #40	; 0x28
 8007c7e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007c82:	f00e fa3e 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007c86:	4639      	mov	r1, r7
 8007c88:	4630      	mov	r0, r6
 8007c8a:	f00a fe61 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 8007c8e:	4658      	mov	r0, fp
 8007c90:	f240 1201 	movw	r2, #257	; 0x101
 8007c94:	2121      	movs	r1, #33	; 0x21
 8007c96:	f7fb fd91 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8007c9a:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c9c:	a909      	add	r1, sp, #36	; 0x24
 8007c9e:	4658      	mov	r0, fp
 8007ca0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007ca4:	aa0a      	add	r2, sp, #40	; 0x28
 8007ca6:	2302      	movs	r3, #2
 8007ca8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007cac:	f00e f833 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007cb0:	f04f 024b 	mov.w	r2, #75	; 0x4b
 8007cb4:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 8007cb8:	4658      	mov	r0, fp
 8007cba:	f7fb fdc3 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8007cbe:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8007cc2:	f04f 38ff 	mov.w	r8, #4294967295
 8007cc6:	3308      	adds	r3, #8
 8007cc8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007ccc:	4659      	mov	r1, fp
 8007cce:	4630      	mov	r0, r6
        colorPressed = col;
 8007cd0:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8007cd4:	af04      	add	r7, sp, #16
 8007cd6:	f00a fe3b 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8007cda:	22c2      	movs	r2, #194	; 0xc2
 8007cdc:	ee1a 0a90 	vmov	r0, s21
 8007ce0:	4629      	mov	r1, r5
 8007ce2:	f7fb fd6b 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8007ce6:	ee1a 1a90 	vmov	r1, s21
 8007cea:	4638      	mov	r0, r7
        color = newColor;
 8007cec:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8007cf0:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007cf4:	f00d f9ba 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cf8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007cfc:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007d00:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007d04:	f04f 0b0a 	mov.w	fp, #10
 8007d08:	4b47      	ldr	r3, [pc, #284]	; (8007e28 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007d0a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HYQ8));
 8007d0c:	ee1a 0a90 	vmov	r0, s21
 8007d10:	a90a      	add	r1, sp, #40	; 0x28
 8007d12:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8007d16:	f00d fc43 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d1a:	ee1a 1a90 	vmov	r1, s21
 8007d1e:	4630      	mov	r0, r6
 8007d20:	f00a fe16 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8007d24:	22c2      	movs	r2, #194	; 0xc2
 8007d26:	4648      	mov	r0, r9
 8007d28:	21d9      	movs	r1, #217	; 0xd9
 8007d2a:	f7fb fd47 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8007d2e:	4649      	mov	r1, r9
 8007d30:	4638      	mov	r0, r7
        color = newColor;
 8007d32:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8007d36:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8007d3a:	f00d f997 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d3e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007d42:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8007d46:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d4a:	4b37      	ldr	r3, [pc, #220]	; (8007e28 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007d4c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MW1V));
 8007d4e:	4648      	mov	r0, r9
 8007d50:	2309      	movs	r3, #9
 8007d52:	a90a      	add	r1, sp, #40	; 0x28
 8007d54:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d58:	f00d fc22 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d5c:	4649      	mov	r1, r9
 8007d5e:	4630      	mov	r0, r6
 8007d60:	f00a fdf6 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8007d64:	2255      	movs	r2, #85	; 0x55
 8007d66:	ee1b 0a10 	vmov	r0, s22
 8007d6a:	2171      	movs	r1, #113	; 0x71
 8007d6c:	f7fb fd26 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8007d70:	ee1b 1a10 	vmov	r1, s22
 8007d74:	4638      	mov	r0, r7
        color = newColor;
 8007d76:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8007d7a:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8007d7e:	f00d f975 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d82:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007d86:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007d8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d8e:	4b26      	ldr	r3, [pc, #152]	; (8007e28 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007d90:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H3VA));
 8007d92:	ee1b 0a10 	vmov	r0, s22
 8007d96:	f04f 0308 	mov.w	r3, #8
 8007d9a:	a90a      	add	r1, sp, #40	; 0x28
 8007d9c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007da0:	f00d fbfe 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007da4:	ee1b 1a10 	vmov	r1, s22
 8007da8:	4630      	mov	r0, r6
 8007daa:	f00a fdd1 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Current.setPosition(0, 239, 240, 15);
 8007dae:	230f      	movs	r3, #15
 8007db0:	22ef      	movs	r2, #239	; 0xef
 8007db2:	ee1b 0a90 	vmov	r0, s23
 8007db6:	9300      	str	r3, [sp, #0]
 8007db8:	4629      	mov	r1, r5
 8007dba:	23f0      	movs	r3, #240	; 0xf0
 8007dbc:	f7fb fd0b 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007dc0:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8007dc4:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8007dc8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007dcc:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8007dd0:	ee1b 1a90 	vmov	r1, s23
 8007dd4:	4638      	mov	r0, r7
 8007dd6:	4798      	blx	r3
 8007dd8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007ddc:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007de0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007de4:	4b11      	ldr	r3, [pc, #68]	; (8007e2c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x370>)
 8007de6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(AMD1_CurrentBuffer, AMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DKHH).getText());
 8007de8:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8007dec:	b92b      	cbnz	r3, 8007dfa <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x33e>
 8007dee:	4b10      	ldr	r3, [pc, #64]	; (8007e30 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x374>)
 8007df0:	4a10      	ldr	r2, [pc, #64]	; (8007e34 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007df2:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007df4:	4810      	ldr	r0, [pc, #64]	; (8007e38 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x37c>)
 8007df6:	f025 fec7 	bl	802db88 <__assert_func>
 8007dfa:	4b10      	ldr	r3, [pc, #64]	; (8007e3c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x380>)
 8007dfc:	881b      	ldrh	r3, [r3, #0]
 8007dfe:	2b0e      	cmp	r3, #14
 8007e00:	d820      	bhi.n	8007e44 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x388>
 8007e02:	4b0f      	ldr	r3, [pc, #60]	; (8007e40 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x384>)
 8007e04:	4a0b      	ldr	r2, [pc, #44]	; (8007e34 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007e06:	2161      	movs	r1, #97	; 0x61
 8007e08:	e7f4      	b.n	8007df4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x338>
 8007e0a:	bf00      	nop
 8007e0c:	08030da8 	.word	0x08030da8
 8007e10:	08031c78 	.word	0x08031c78
 8007e14:	08031ec4 	.word	0x08031ec4
 8007e18:	0802f7c4 	.word	0x0802f7c4
 8007e1c:	080319ac 	.word	0x080319ac
 8007e20:	08030d90 	.word	0x08030d90
 8007e24:	08007aa5 	.word	0x08007aa5
 8007e28:	0802f724 	.word	0x0802f724
 8007e2c:	200138ac 	.word	0x200138ac
 8007e30:	0802f574 	.word	0x0802f574
 8007e34:	0802f679 	.word	0x0802f679
 8007e38:	0802f5f1 	.word	0x0802f5f1
 8007e3c:	200138b0 	.word	0x200138b0
 8007e40:	0802f638 	.word	0x0802f638
        return texts->getText(typedTextId);
 8007e44:	4bde      	ldr	r3, [pc, #888]	; (80081c0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007e46:	210e      	movs	r1, #14
 8007e48:	6818      	ldr	r0, [r3, #0]
 8007e4a:	f002 fcc9 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8007e4e:	4add      	ldr	r2, [pc, #884]	; (80081c4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007e50:	4603      	mov	r3, r0
 8007e52:	4659      	mov	r1, fp
 8007e54:	4648      	mov	r0, r9
 8007e56:	f014 f801 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007e5a:	f04f 010f 	mov.w	r1, #15
 8007e5e:	4ada      	ldr	r2, [pc, #872]	; (80081c8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
        wc1 = value;
 8007e60:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    AMD1_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENTAMD1_CURRENT));
 8007e64:	ee1b 0a90 	vmov	r0, s23
 8007e68:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8007e6c:	a90a      	add	r1, sp, #40	; 0x28
 8007e6e:	920a      	str	r2, [sp, #40]	; 0x28
 8007e70:	f00d fb96 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e74:	ee1b 1a90 	vmov	r1, s23
 8007e78:	4630      	mov	r0, r6
 8007e7a:	f00a fd69 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Frequency.setPosition(0, 224, 240, 15);
 8007e7e:	210f      	movs	r1, #15
 8007e80:	22e0      	movs	r2, #224	; 0xe0
 8007e82:	ee1c 0a10 	vmov	r0, s24
 8007e86:	9100      	str	r1, [sp, #0]
 8007e88:	23f0      	movs	r3, #240	; 0xf0
 8007e8a:	4629      	mov	r1, r5
 8007e8c:	f7fb fca3 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007e90:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8007e94:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8007e98:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007e9c:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8007ea0:	ee1c 1a10 	vmov	r1, s24
 8007ea4:	4638      	mov	r0, r7
 8007ea6:	4798      	blx	r3
 8007ea8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007eac:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007eb0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007eb4:	49c5      	ldr	r1, [pc, #788]	; (80081cc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007eb6:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_FrequencyBuffer, AMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_23ZO).getText());
 8007eb8:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8007ebc:	2b00      	cmp	r3, #0
 8007ebe:	d096      	beq.n	8007dee <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007ec0:	48c3      	ldr	r0, [pc, #780]	; (80081d0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007ec2:	8803      	ldrh	r3, [r0, #0]
 8007ec4:	2b0c      	cmp	r3, #12
 8007ec6:	d99c      	bls.n	8007e02 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007ec8:	4bbd      	ldr	r3, [pc, #756]	; (80081c0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007eca:	210c      	movs	r1, #12
 8007ecc:	6818      	ldr	r0, [r3, #0]
 8007ece:	f002 fc87 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8007ed2:	4abc      	ldr	r2, [pc, #752]	; (80081c4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007ed4:	4603      	mov	r3, r0
 8007ed6:	4659      	mov	r1, fp
 8007ed8:	4648      	mov	r0, r9
 8007eda:	f013 ffbf 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    AMD1_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8007ede:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8007ee2:	4ab9      	ldr	r2, [pc, #740]	; (80081c8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007ee4:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8007ee8:	230d      	movs	r3, #13
 8007eea:	4661      	mov	r1, ip
 8007eec:	ee1c 0a10 	vmov	r0, s24
 8007ef0:	920a      	str	r2, [sp, #40]	; 0x28
 8007ef2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ef6:	f00d fb53 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007efa:	ee1c 1a10 	vmov	r1, s24
 8007efe:	4630      	mov	r0, r6
 8007f00:	f00a fd26 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Distance.setPosition(0, 209, 240, 15);
 8007f04:	f04f 0c0f 	mov.w	ip, #15
 8007f08:	22d1      	movs	r2, #209	; 0xd1
 8007f0a:	ee1c 0a90 	vmov	r0, s25
 8007f0e:	f8cd c000 	str.w	ip, [sp]
 8007f12:	23f0      	movs	r3, #240	; 0xf0
 8007f14:	4629      	mov	r1, r5
 8007f16:	f7fb fc5e 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f1a:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8007f1e:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8007f22:	4638      	mov	r0, r7
 8007f24:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007f28:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8007f2c:	ee1c 1a90 	vmov	r1, s25
 8007f30:	4798      	blx	r3
 8007f32:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007f36:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8007f3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007f3e:	49a3      	ldr	r1, [pc, #652]	; (80081cc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007f40:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_DistanceBuffer, AMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7DZL).getText());
 8007f42:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8007f46:	2b00      	cmp	r3, #0
 8007f48:	f43f af51 	beq.w	8007dee <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007f4c:	48a0      	ldr	r0, [pc, #640]	; (80081d0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007f4e:	8803      	ldrh	r3, [r0, #0]
 8007f50:	2b0b      	cmp	r3, #11
 8007f52:	f67f af56 	bls.w	8007e02 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007f56:	4b9a      	ldr	r3, [pc, #616]	; (80081c0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007f58:	210b      	movs	r1, #11
 8007f5a:	6818      	ldr	r0, [r3, #0]
 8007f5c:	f002 fc40 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8007f60:	4a98      	ldr	r2, [pc, #608]	; (80081c4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007f62:	4603      	mov	r3, r0
 8007f64:	4659      	mov	r1, fp
 8007f66:	4638      	mov	r0, r7
 8007f68:	f013 ff78 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007f6c:	4a96      	ldr	r2, [pc, #600]	; (80081c8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007f6e:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8007f72:	2336      	movs	r3, #54	; 0x36
    AMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8007f74:	ee1c 0a90 	vmov	r0, s25
 8007f78:	a90a      	add	r1, sp, #40	; 0x28
 8007f7a:	920a      	str	r2, [sp, #40]	; 0x28
 8007f7c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007f80:	f00d fb0e 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007f84:	ee1c 1a90 	vmov	r1, s25
 8007f88:	4630      	mov	r0, r6
 8007f8a:	f00a fce1 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f8e:	2304      	movs	r3, #4
    AMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007f90:	a90a      	add	r1, sp, #40	; 0x28
 8007f92:	4650      	mov	r0, sl
 8007f94:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f98:	f00a fc6c 	bl	8012874 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD1_Gauge.setPosition(28, 103, 184, 106);
 8007f9c:	236a      	movs	r3, #106	; 0x6a
 8007f9e:	9300      	str	r3, [sp, #0]
 8007fa0:	2267      	movs	r2, #103	; 0x67
 8007fa2:	23b8      	movs	r3, #184	; 0xb8
 8007fa4:	211c      	movs	r1, #28
 8007fa6:	4650      	mov	r0, sl
 8007fa8:	f7fb fc15 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD1_Gauge.setCenter(92, 92);
 8007fac:	225c      	movs	r2, #92	; 0x5c
 8007fae:	4611      	mov	r1, r2
 8007fb0:	4650      	mov	r0, sl
 8007fb2:	f00d fe14 	bl	8015bde <_ZN8touchgfx5Gauge9setCenterEii>
    AMD1_Gauge.setStartEndAngle(-90, 90);
 8007fb6:	225a      	movs	r2, #90	; 0x5a
 8007fb8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007fbc:	4650      	mov	r0, sl
 8007fbe:	f00d fe93 	bl	8015ce8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD1_Gauge.setRange(-90, 90);
 8007fc2:	462b      	mov	r3, r5
 8007fc4:	225a      	movs	r2, #90	; 0x5a
 8007fc6:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007fca:	4650      	mov	r0, sl
 8007fcc:	9500      	str	r5, [sp, #0]
 8007fce:	f00a fafe 	bl	80125ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD1_Gauge.setValue(0);
 8007fd2:	4629      	mov	r1, r5
 8007fd4:	4650      	mov	r0, sl
 8007fd6:	f00d fe31 	bl	8015c3c <_ZN8touchgfx5Gauge8setValueEi>
    AMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007fda:	2335      	movs	r3, #53	; 0x35
 8007fdc:	2208      	movs	r2, #8
 8007fde:	2105      	movs	r1, #5
 8007fe0:	4650      	mov	r0, sl
 8007fe2:	f00d fde7 	bl	8015bb4 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007fe6:	2101      	movs	r1, #1
 8007fe8:	4650      	mov	r0, sl
 8007fea:	f00d fd85 	bl	8015af8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007fee:	2101      	movs	r1, #1
 8007ff0:	4650      	mov	r0, sl
 8007ff2:	f00d fd84 	bl	8015afe <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007ff6:	4651      	mov	r1, sl
 8007ff8:	4630      	mov	r0, r6
 8007ffa:	f00a fca9 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007ffe:	ee18 0a10 	vmov	r0, s16
 8008002:	23f0      	movs	r3, #240	; 0xf0
 8008004:	224b      	movs	r2, #75	; 0x4b
 8008006:	4629      	mov	r1, r5
 8008008:	f8cd b000 	str.w	fp, [sp]
 800800c:	f7fb fbe3 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008010:	9b02      	ldr	r3, [sp, #8]
 8008012:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008016:	22a0      	movs	r2, #160	; 0xa0
 8008018:	4611      	mov	r1, r2
 800801a:	ee18 0a10 	vmov	r0, s16
 800801e:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008022:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8008026:	f00c fe75 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800802a:	ee18 0a10 	vmov	r0, s16
 800802e:	22a0      	movs	r2, #160	; 0xa0
 8008030:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008034:	f00c fe79 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008038:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 800803c:	2b20      	cmp	r3, #32
 800803e:	d006      	beq.n	800804e <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x592>
        lineWidthQ5 = widthQ5;
 8008040:	2320      	movs	r3, #32
        updateCachedShape();
 8008042:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8008046:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800804a:	f00c fd6d 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800804e:	ee18 0a10 	vmov	r0, s16
 8008052:	2101      	movs	r1, #1
 8008054:	f00c fe74 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008058:	ee18 1a10 	vmov	r1, s16
 800805c:	4630      	mov	r0, r6
 800805e:	f00a fc77 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008062:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 8008066:	223c      	movs	r2, #60	; 0x3c
 8008068:	ee19 0a10 	vmov	r0, s18
 800806c:	2117      	movs	r1, #23
        linespace = space;
 800806e:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8008072:	ad04      	add	r5, sp, #16
 8008074:	f7fb fba2 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008078:	ee19 1a10 	vmov	r1, s18
 800807c:	4628      	mov	r0, r5
        color = newColor;
 800807e:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8008082:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8008086:	f00c fff1 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800808a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800808e:	ee19 3a10 	vmov	r3, s18
 8008092:	333c      	adds	r3, #60	; 0x3c
 8008094:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008098:	4f4b      	ldr	r7, [pc, #300]	; (80081c8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 800809a:	970a      	str	r7, [sp, #40]	; 0x28
 800809c:	234c      	movs	r3, #76	; 0x4c
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 800809e:	ee19 0a10 	vmov	r0, s18
 80080a2:	a90a      	add	r1, sp, #40	; 0x28
 80080a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80080a8:	f00d fa7a 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080ac:	ee19 1a10 	vmov	r1, s18
 80080b0:	4630      	mov	r0, r6
 80080b2:	f00a fc4d 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80080b6:	230a      	movs	r3, #10
 80080b8:	ee18 0a90 	vmov	r0, s17
 80080bc:	9300      	str	r3, [sp, #0]
 80080be:	2232      	movs	r2, #50	; 0x32
 80080c0:	23f0      	movs	r3, #240	; 0xf0
 80080c2:	4649      	mov	r1, r9
 80080c4:	f7fb fb87 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80080c8:	9b03      	ldr	r3, [sp, #12]
 80080ca:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80080ce:	22a0      	movs	r2, #160	; 0xa0
 80080d0:	4611      	mov	r1, r2
 80080d2:	ee18 0a90 	vmov	r0, s17
 80080d6:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 80080da:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 80080de:	f00c fe19 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80080e2:	ee18 0a90 	vmov	r0, s17
 80080e6:	22a0      	movs	r2, #160	; 0xa0
 80080e8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80080ec:	f00c fe1d 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80080f0:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 80080f4:	2b20      	cmp	r3, #32
 80080f6:	d006      	beq.n	8008106 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x64a>
        lineWidthQ5 = widthQ5;
 80080f8:	2320      	movs	r3, #32
        updateCachedShape();
 80080fa:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 80080fe:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8008102:	f00c fd11 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008106:	ee18 0a90 	vmov	r0, s17
 800810a:	2101      	movs	r1, #1
 800810c:	f00c fe18 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008110:	ee18 1a90 	vmov	r1, s17
 8008114:	4630      	mov	r0, r6
 8008116:	f00a fc1b 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800811a:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 800811e:	ee19 0a90 	vmov	r0, s19
 8008122:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008124:	f04f 0800 	mov.w	r8, #0
 8008128:	2145      	movs	r1, #69	; 0x45
 800812a:	f7fb fb47 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800812e:	ee19 1a90 	vmov	r1, s19
 8008132:	4628      	mov	r0, r5
        color = newColor;
 8008134:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8008138:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 800813c:	f00c ff96 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008140:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008144:	ee19 3a90 	vmov	r3, s19
 8008148:	333c      	adds	r3, #60	; 0x3c
 800814a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800814e:	234d      	movs	r3, #77	; 0x4d
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8008150:	ee19 0a90 	vmov	r0, s19
 8008154:	a90a      	add	r1, sp, #40	; 0x28
 8008156:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800815a:	970a      	str	r7, [sp, #40]	; 0x28
 800815c:	f00d fa20 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008160:	ee19 1a90 	vmov	r1, s19
 8008164:	4630      	mov	r0, r6
 8008166:	f00a fbf3 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 800816a:	ee1a 0a10 	vmov	r0, s20
 800816e:	220c      	movs	r2, #12
 8008170:	2136      	movs	r1, #54	; 0x36
 8008172:	f7fb fb23 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008176:	ee1a 1a10 	vmov	r1, s20
 800817a:	4628      	mov	r0, r5
        color = newColor;
 800817c:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8008180:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8008184:	f00c ff72 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008188:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800818c:	ee1a 3a10 	vmov	r3, s20
 8008190:	333c      	adds	r3, #60	; 0x3c
 8008192:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008196:	234e      	movs	r3, #78	; 0x4e
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8008198:	ee1a 0a10 	vmov	r0, s20
 800819c:	a90a      	add	r1, sp, #40	; 0x28
 800819e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80081a2:	970a      	str	r7, [sp, #40]	; 0x28
 80081a4:	f00d f9fc 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081a8:	4630      	mov	r0, r6
 80081aa:	ee1a 1a10 	vmov	r1, s20
 80081ae:	f00a fbcf 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80081b2:	4620      	mov	r0, r4
 80081b4:	b00d      	add	sp, #52	; 0x34
 80081b6:	ecbd 8b0a 	vpop	{d8-d12}
 80081ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80081be:	bf00      	nop
 80081c0:	200138b8 	.word	0x200138b8
 80081c4:	0802f6b1 	.word	0x0802f6b1
 80081c8:	0802f724 	.word	0x0802f724
 80081cc:	200138ac 	.word	0x200138ac
 80081d0:	200138b0 	.word	0x200138b0

080081d4 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 80081d4:	4770      	bx	lr

080081d6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081d6:	4770      	bx	lr

080081d8 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80081d8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081da:	68c2      	ldr	r2, [r0, #12]
 80081dc:	6844      	ldr	r4, [r0, #4]
 80081de:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80081e0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80081e2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80081e6:	07d2      	lsls	r2, r2, #31
 80081e8:	bf48      	it	mi
 80081ea:	5962      	ldrmi	r2, [r4, r5]
 80081ec:	689b      	ldr	r3, [r3, #8]
    }
 80081ee:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081f0:	bf48      	it	mi
 80081f2:	58d3      	ldrmi	r3, [r2, r3]
 80081f4:	4718      	bx	r3

080081f6 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80081f6:	6843      	ldr	r3, [r0, #4]
 80081f8:	b12b      	cbz	r3, 8008206 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80081fa:	6883      	ldr	r3, [r0, #8]
 80081fc:	b92b      	cbnz	r3, 800820a <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80081fe:	68c0      	ldr	r0, [r0, #12]
 8008200:	f000 0001 	and.w	r0, r0, #1
 8008204:	4770      	bx	lr
 8008206:	4618      	mov	r0, r3
 8008208:	4770      	bx	lr
 800820a:	2001      	movs	r0, #1
    }
 800820c:	4770      	bx	lr

0800820e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800820e:	b510      	push	{r4, lr}
 8008210:	2110      	movs	r1, #16
 8008212:	4604      	mov	r4, r0
 8008214:	f024 fdd1 	bl	802cdba <_ZdlPvj>
 8008218:	4620      	mov	r0, r4
 800821a:	bd10      	pop	{r4, pc}

0800821c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 800821c:	b510      	push	{r4, lr}
 800821e:	4b03      	ldr	r3, [pc, #12]	; (800822c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8008220:	6003      	str	r3, [r0, #0]
 8008222:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008224:	f00e ff6a 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008228:	4620      	mov	r0, r4
 800822a:	bd10      	pop	{r4, pc}
 800822c:	08030df4 	.word	0x08030df4

08008230 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8008230:	b507      	push	{r0, r1, r2, lr}
 8008232:	4b07      	ldr	r3, [pc, #28]	; (8008250 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8008234:	6003      	str	r3, [r0, #0]
 8008236:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008238:	f00e ff60 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800823c:	9801      	ldr	r0, [sp, #4]
 800823e:	f241 4178 	movw	r1, #5240	; 0x1478
 8008242:	f024 fdba 	bl	802cdba <_ZdlPvj>
 8008246:	9801      	ldr	r0, [sp, #4]
 8008248:	b003      	add	sp, #12
 800824a:	f85d fb04 	ldr.w	pc, [sp], #4
 800824e:	bf00      	nop
 8008250:	08030df4 	.word	0x08030df4

08008254 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8008254:	3098      	adds	r0, #152	; 0x98
 8008256:	4288      	cmp	r0, r1
{
 8008258:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 800825a:	d105      	bne.n	8008268 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800825c:	f010 fc50 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8008260:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8008264:	f7fd baa0 	b.w	80057a8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8008268:	bd08      	pop	{r3, pc}
	...

0800826c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 800826c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008270:	ed2d 8b0a 	vpush	{d8-d12}
 8008274:	4604      	mov	r4, r0
 8008276:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8008278:	46a0      	mov	r8, r4
 800827a:	2500      	movs	r5, #0
 800827c:	f012 f8c0 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 8008280:	4bcf      	ldr	r3, [pc, #828]	; (80085c0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x354>)
 8008282:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008284:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008288:	2226      	movs	r2, #38	; 0x26
 800828a:	4629      	mov	r1, r5
 800828c:	4640      	mov	r0, r8
 800828e:	f025 fe80 	bl	802df92 <memset>
 8008292:	4640      	mov	r0, r8
 8008294:	f7fb fac4 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8008298:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800829c:	26ff      	movs	r6, #255	; 0xff
 800829e:	4bc9      	ldr	r3, [pc, #804]	; (80085c4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x358>)
 80082a0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80082a2:	2226      	movs	r2, #38	; 0x26
 80082a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80082a8:	4629      	mov	r1, r5
 80082aa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80082ae:	4638      	mov	r0, r7
 80082b0:	66a5      	str	r5, [r4, #104]	; 0x68
 80082b2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80082b6:	f025 fe6c 	bl	802df92 <memset>
 80082ba:	4638      	mov	r0, r7
 80082bc:	f7fb fab0 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 80082c0:	4bc1      	ldr	r3, [pc, #772]	; (80085c8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x35c>)
 80082c2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80082c4:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80082c8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80082cc:	a90c      	add	r1, sp, #48	; 0x30
 80082ce:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80082d2:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 80082d4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80082d8:	f00d ff13 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80082dc:	4658      	mov	r0, fp
 80082de:	f00e f847 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80082e2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80082e6:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80082ea:	4618      	mov	r0, r3
 80082ec:	ee0a 3a90 	vmov	s21, r3
 80082f0:	f7fb fafa 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 80082f4:	4648      	mov	r0, r9
 80082f6:	f7fb faf7 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 80082fa:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80082fe:	4618      	mov	r0, r3
 8008300:	ee0b 3a10 	vmov	s22, r3
 8008304:	f7fb faf0 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8008308:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 800830c:	4618      	mov	r0, r3
 800830e:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008312:	4eae      	ldr	r6, [pc, #696]	; (80085cc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x360>)
        : TextArea()
 8008314:	f7fb fae8 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8008318:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 800831c:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8008320:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008322:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8008326:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 800832a:	f7fb fadd 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 800832e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8008332:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008334:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8008338:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 800833c:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8008340:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8008344:	f7fb fad0 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008348:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 800834c:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008350:	4650      	mov	r0, sl
 8008352:	f00d fb99 	bl	8015a88 <_ZN8touchgfx5GaugeC1Ev>
 8008356:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 800835a:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800835c:	4e9c      	ldr	r6, [pc, #624]	; (80085d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x364>)
 800835e:	ee08 3a10 	vmov	s16, r3
 8008362:	f00c fbc1 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8008366:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 800836a:	4618      	mov	r0, r3
 800836c:	9303      	str	r3, [sp, #12]
 800836e:	f7fb f85b 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008372:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008376:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 800837a:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 800837e:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8008382:	4618      	mov	r0, r3
 8008384:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008388:	ee09 3a10 	vmov	s18, r3
 800838c:	f7fb faac 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8008390:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8008394:	4618      	mov	r0, r3
 8008396:	ee08 3a90 	vmov	s17, r3
 800839a:	f00c fba5 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 800839e:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 80083a2:	4618      	mov	r0, r3
 80083a4:	9304      	str	r3, [sp, #16]
 80083a6:	f7fb f83f 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80083aa:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80083ae:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 80083b2:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 80083b6:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 80083ba:	4618      	mov	r0, r3
 80083bc:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 80083c0:	ee09 3a90 	vmov	s19, r3
 80083c4:	f7fb fa90 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 80083c8:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80083cc:	4618      	mov	r0, r3
 80083ce:	ee0a 3a10 	vmov	s20, r3
 80083d2:	f7fb fa89 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80083d6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80083da:	4a7e      	ldr	r2, [pc, #504]	; (80085d4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x368>)
 80083dc:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 80083e0:	4a7d      	ldr	r2, [pc, #500]	; (80085d8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x36c>)
 80083e2:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 80083e6:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 80083ea:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80083ee:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80083f2:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80083f6:	f00e fe77 	bl	80170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80083fa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80083fe:	462a      	mov	r2, r5
 8008400:	4640      	mov	r0, r8
 8008402:	9300      	str	r3, [sp, #0]
 8008404:	4629      	mov	r1, r5
 8008406:	23f0      	movs	r3, #240	; 0xf0
 8008408:	f7fb f9e5 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800840c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800840e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008412:	66a3      	str	r3, [r4, #104]	; 0x68
 8008414:	4641      	mov	r1, r8
 8008416:	4630      	mov	r0, r6
 8008418:	f00a fa9a 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 800841c:	462a      	mov	r2, r5
 800841e:	4638      	mov	r0, r7
 8008420:	4629      	mov	r1, r5
 8008422:	f7fb f9cb 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008426:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800842a:	4638      	mov	r0, r7
 800842c:	a90c      	add	r1, sp, #48	; 0x30
 800842e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008432:	f00d fe66 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008436:	4639      	mov	r1, r7
 8008438:	4630      	mov	r0, r6
 800843a:	f00a fa89 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 800843e:	4658      	mov	r0, fp
 8008440:	f240 1201 	movw	r2, #257	; 0x101
 8008444:	2121      	movs	r1, #33	; 0x21
 8008446:	f7fb f9b9 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800844a:	f04f 0303 	mov.w	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800844e:	aa0c      	add	r2, sp, #48	; 0x30
 8008450:	a90b      	add	r1, sp, #44	; 0x2c
 8008452:	4658      	mov	r0, fp
 8008454:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008458:	f04f 0302 	mov.w	r3, #2
 800845c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008460:	f00d fc59 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008464:	2347      	movs	r3, #71	; 0x47
        updateTextPosition();
 8008466:	4658      	mov	r0, fp
 8008468:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800846c:	f7fb f9ea 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8008470:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8008474:	f04f 38ff 	mov.w	r8, #4294967295
 8008478:	3308      	adds	r3, #8
 800847a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800847e:	4659      	mov	r1, fp
 8008480:	4630      	mov	r0, r6
        colorPressed = col;
 8008482:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8008486:	af06      	add	r7, sp, #24
 8008488:	f00a fa62 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 800848c:	22c2      	movs	r2, #194	; 0xc2
 800848e:	ee1a 0a90 	vmov	r0, s21
 8008492:	4629      	mov	r1, r5
 8008494:	f7fb f992 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008498:	ee1a 1a90 	vmov	r1, s21
 800849c:	4638      	mov	r0, r7
        color = newColor;
 800849e:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 80084a2:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80084a6:	f00c fde1 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80084aa:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80084ae:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80084b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80084b6:	4b49      	ldr	r3, [pc, #292]	; (80085dc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 80084b8:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TIF0));
 80084ba:	ee1a 0a90 	vmov	r0, s21
 80084be:	2307      	movs	r3, #7
 80084c0:	a90c      	add	r1, sp, #48	; 0x30
 80084c2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80084c6:	f00d f86b 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084ca:	ee1a 1a90 	vmov	r1, s21
 80084ce:	4630      	mov	r0, r6
 80084d0:	f00a fa3e 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 80084d4:	22c2      	movs	r2, #194	; 0xc2
 80084d6:	4648      	mov	r0, r9
 80084d8:	21d9      	movs	r1, #217	; 0xd9
 80084da:	f7fb f96f 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80084de:	4649      	mov	r1, r9
 80084e0:	4638      	mov	r0, r7
        color = newColor;
 80084e2:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 80084e6:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80084ea:	f00c fdbf 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80084ee:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80084f2:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80084f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80084fa:	4b38      	ldr	r3, [pc, #224]	; (80085dc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 80084fc:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H7OA));
 80084fe:	4648      	mov	r0, r9
 8008500:	2306      	movs	r3, #6
 8008502:	a90c      	add	r1, sp, #48	; 0x30
 8008504:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008508:	f00d f84a 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800850c:	4649      	mov	r1, r9
 800850e:	4630      	mov	r0, r6
 8008510:	f00a fa1e 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8008514:	2255      	movs	r2, #85	; 0x55
 8008516:	ee1b 0a10 	vmov	r0, s22
 800851a:	2171      	movs	r1, #113	; 0x71
 800851c:	f7fb f94e 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008520:	ee1b 1a10 	vmov	r1, s22
 8008524:	4638      	mov	r0, r7
        color = newColor;
 8008526:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 800852a:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 800852e:	f00c fd9d 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008532:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008536:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800853a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800853e:	4b27      	ldr	r3, [pc, #156]	; (80085dc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008540:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_61VS));
 8008542:	ee1b 0a10 	vmov	r0, s22
 8008546:	f04f 0305 	mov.w	r3, #5
 800854a:	a90c      	add	r1, sp, #48	; 0x30
 800854c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008550:	f00d f826 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008554:	ee1b 1a10 	vmov	r1, s22
 8008558:	4630      	mov	r0, r6
 800855a:	f00a f9f9 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Current.setPosition(0, 239, 240, 15);
 800855e:	230f      	movs	r3, #15
 8008560:	22ef      	movs	r2, #239	; 0xef
 8008562:	ee1b 0a90 	vmov	r0, s23
 8008566:	9300      	str	r3, [sp, #0]
 8008568:	4629      	mov	r1, r5
 800856a:	23f0      	movs	r3, #240	; 0xf0
 800856c:	f7fb f933 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008570:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8008574:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8008578:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800857c:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8008580:	ee1b 1a90 	vmov	r1, s23
 8008584:	4638      	mov	r0, r7
 8008586:	4798      	blx	r3
 8008588:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800858c:	f8df 9064 	ldr.w	r9, [pc, #100]	; 80085f4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x388>
 8008590:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8008594:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008598:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_CurrentBuffer, AMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VDGC).getText());
 800859c:	f204 6b1c 	addw	fp, r4, #1564	; 0x61c
 80085a0:	b92b      	cbnz	r3, 80085ae <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x342>
 80085a2:	4b0f      	ldr	r3, [pc, #60]	; (80085e0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x374>)
 80085a4:	4a0f      	ldr	r2, [pc, #60]	; (80085e4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 80085a6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80085a8:	480f      	ldr	r0, [pc, #60]	; (80085e8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x37c>)
 80085aa:	f025 faed 	bl	802db88 <__assert_func>
 80085ae:	4b0f      	ldr	r3, [pc, #60]	; (80085ec <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x380>)
 80085b0:	881b      	ldrh	r3, [r3, #0]
 80085b2:	2b04      	cmp	r3, #4
 80085b4:	d820      	bhi.n	80085f8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x38c>
 80085b6:	4b0e      	ldr	r3, [pc, #56]	; (80085f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x384>)
 80085b8:	4a0a      	ldr	r2, [pc, #40]	; (80085e4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 80085ba:	2161      	movs	r1, #97	; 0x61
 80085bc:	e7f4      	b.n	80085a8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x33c>
 80085be:	bf00      	nop
 80085c0:	08030df4 	.word	0x08030df4
 80085c4:	08031c78 	.word	0x08031c78
 80085c8:	08031ec4 	.word	0x08031ec4
 80085cc:	0802f7c4 	.word	0x0802f7c4
 80085d0:	080319ac 	.word	0x080319ac
 80085d4:	08030ddc 	.word	0x08030ddc
 80085d8:	08008255 	.word	0x08008255
 80085dc:	0802f724 	.word	0x0802f724
 80085e0:	0802f574 	.word	0x0802f574
 80085e4:	0802f679 	.word	0x0802f679
 80085e8:	0802f5f1 	.word	0x0802f5f1
 80085ec:	200138b0 	.word	0x200138b0
 80085f0:	0802f638 	.word	0x0802f638
 80085f4:	200138ac 	.word	0x200138ac
        return texts->getText(typedTextId);
 80085f8:	4bdd      	ldr	r3, [pc, #884]	; (8008970 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80085fa:	2104      	movs	r1, #4
 80085fc:	6818      	ldr	r0, [r3, #0]
 80085fe:	f002 f8ef 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8008602:	4adc      	ldr	r2, [pc, #880]	; (8008974 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 8008604:	4603      	mov	r3, r0
 8008606:	210a      	movs	r1, #10
 8008608:	4658      	mov	r0, fp
 800860a:	f013 fc27 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800860e:	4ada      	ldr	r2, [pc, #872]	; (8008978 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
        wc1 = value;
 8008610:	f8c4 b200 	str.w	fp, [r4, #512]	; 0x200
    AMD3_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENT));
 8008614:	ee1b 0a90 	vmov	r0, s23
 8008618:	a90c      	add	r1, sp, #48	; 0x30
 800861a:	f04f 0b01 	mov.w	fp, #1
 800861e:	920c      	str	r2, [sp, #48]	; 0x30
 8008620:	f8ad b034 	strh.w	fp, [sp, #52]	; 0x34
 8008624:	f00c ffbc 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008628:	ee1b 1a90 	vmov	r1, s23
 800862c:	4630      	mov	r0, r6
 800862e:	f00a f98f 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Frequency.setPosition(0, 224, 240, 15);
 8008632:	210f      	movs	r1, #15
 8008634:	22e0      	movs	r2, #224	; 0xe0
 8008636:	ee1c 0a10 	vmov	r0, s24
 800863a:	9100      	str	r1, [sp, #0]
 800863c:	23f0      	movs	r3, #240	; 0xf0
 800863e:	4629      	mov	r1, r5
 8008640:	f7fb f8c9 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008644:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8008648:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 800864c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008650:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8008654:	ee1c 1a10 	vmov	r1, s24
 8008658:	4638      	mov	r0, r7
 800865a:	4798      	blx	r3
 800865c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008660:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008664:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008668:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_FrequencyBuffer, AMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RCRP).getText());
 800866c:	f504 61c6 	add.w	r1, r4, #1584	; 0x630
 8008670:	9105      	str	r1, [sp, #20]
 8008672:	2b00      	cmp	r3, #0
 8008674:	d095      	beq.n	80085a2 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008676:	49c1      	ldr	r1, [pc, #772]	; (800897c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 8008678:	880b      	ldrh	r3, [r1, #0]
 800867a:	2b03      	cmp	r3, #3
 800867c:	d99b      	bls.n	80085b6 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 800867e:	4bbc      	ldr	r3, [pc, #752]	; (8008970 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 8008680:	2103      	movs	r1, #3
 8008682:	6818      	ldr	r0, [r3, #0]
 8008684:	f002 f8ac 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8008688:	4aba      	ldr	r2, [pc, #744]	; (8008974 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 800868a:	4603      	mov	r3, r0
 800868c:	210a      	movs	r1, #10
 800868e:	9805      	ldr	r0, [sp, #20]
 8008690:	f013 fbe4 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8008694:	9805      	ldr	r0, [sp, #20]
 8008696:	f8c4 024c 	str.w	r0, [r4, #588]	; 0x24c
    AMD3_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 800869a:	a80c      	add	r0, sp, #48	; 0x30
        : typedTextId(id)
 800869c:	4ab6      	ldr	r2, [pc, #728]	; (8008978 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 800869e:	920c      	str	r2, [sp, #48]	; 0x30
 80086a0:	230d      	movs	r3, #13
 80086a2:	4601      	mov	r1, r0
 80086a4:	ee1c 0a10 	vmov	r0, s24
 80086a8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80086ac:	f00c ff78 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80086b0:	ee1c 1a10 	vmov	r1, s24
 80086b4:	4630      	mov	r0, r6
 80086b6:	f00a f94b 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Distance.setPosition(0, 209, 240, 15);
 80086ba:	200f      	movs	r0, #15
 80086bc:	22d1      	movs	r2, #209	; 0xd1
 80086be:	9000      	str	r0, [sp, #0]
 80086c0:	23f0      	movs	r3, #240	; 0xf0
 80086c2:	ee1c 0a90 	vmov	r0, s25
 80086c6:	4629      	mov	r1, r5
 80086c8:	f7fb f885 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80086cc:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 80086d0:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 80086d4:	4638      	mov	r0, r7
 80086d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80086da:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 80086de:	ee1c 1a90 	vmov	r1, s25
 80086e2:	4798      	blx	r3
 80086e4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80086e8:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 80086ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80086f0:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_DistanceBuffer, AMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VKRM).getText());
 80086f4:	f204 6744 	addw	r7, r4, #1604	; 0x644
 80086f8:	2b00      	cmp	r3, #0
 80086fa:	f43f af52 	beq.w	80085a2 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80086fe:	499f      	ldr	r1, [pc, #636]	; (800897c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 8008700:	880b      	ldrh	r3, [r1, #0]
 8008702:	2b02      	cmp	r3, #2
 8008704:	f67f af57 	bls.w	80085b6 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 8008708:	4b99      	ldr	r3, [pc, #612]	; (8008970 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 800870a:	2102      	movs	r1, #2
 800870c:	6818      	ldr	r0, [r3, #0]
 800870e:	f002 f867 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8008712:	4a98      	ldr	r2, [pc, #608]	; (8008974 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 8008714:	4603      	mov	r3, r0
 8008716:	210a      	movs	r1, #10
 8008718:	4638      	mov	r0, r7
 800871a:	f013 fb9f 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800871e:	4a96      	ldr	r2, [pc, #600]	; (8008978 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 8008720:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8008724:	2336      	movs	r3, #54	; 0x36
    AMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8008726:	ee1c 0a90 	vmov	r0, s25
 800872a:	a90c      	add	r1, sp, #48	; 0x30
 800872c:	920c      	str	r2, [sp, #48]	; 0x30
 800872e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008732:	f00c ff35 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008736:	ee1c 1a90 	vmov	r1, s25
 800873a:	4630      	mov	r0, r6
 800873c:	f00a f908 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008740:	2304      	movs	r3, #4
    AMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8008742:	a90c      	add	r1, sp, #48	; 0x30
 8008744:	4650      	mov	r0, sl
 8008746:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800874a:	f00a f893 	bl	8012874 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD3_Gauge.setPosition(28, 103, 184, 106);
 800874e:	236a      	movs	r3, #106	; 0x6a
 8008750:	9300      	str	r3, [sp, #0]
 8008752:	2267      	movs	r2, #103	; 0x67
 8008754:	23b8      	movs	r3, #184	; 0xb8
 8008756:	211c      	movs	r1, #28
 8008758:	4650      	mov	r0, sl
 800875a:	f7fb f83c 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD3_Gauge.setCenter(92, 92);
 800875e:	225c      	movs	r2, #92	; 0x5c
 8008760:	4611      	mov	r1, r2
 8008762:	4650      	mov	r0, sl
 8008764:	f00d fa3b 	bl	8015bde <_ZN8touchgfx5Gauge9setCenterEii>
    AMD3_Gauge.setStartEndAngle(-90, 90);
 8008768:	225a      	movs	r2, #90	; 0x5a
 800876a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800876e:	4650      	mov	r0, sl
 8008770:	f00d faba 	bl	8015ce8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD3_Gauge.setRange(-90, 90);
 8008774:	462b      	mov	r3, r5
 8008776:	225a      	movs	r2, #90	; 0x5a
 8008778:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800877c:	4650      	mov	r0, sl
 800877e:	9500      	str	r5, [sp, #0]
 8008780:	f009 ff25 	bl	80125ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD3_Gauge.setValue(0);
 8008784:	4629      	mov	r1, r5
 8008786:	4650      	mov	r0, sl
 8008788:	f00d fa58 	bl	8015c3c <_ZN8touchgfx5Gauge8setValueEi>
    AMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 800878c:	2335      	movs	r3, #53	; 0x35
 800878e:	2208      	movs	r2, #8
 8008790:	2105      	movs	r1, #5
 8008792:	4650      	mov	r0, sl
 8008794:	f00d fa0e 	bl	8015bb4 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008798:	4659      	mov	r1, fp
 800879a:	4650      	mov	r0, sl
 800879c:	f00d f9ac 	bl	8015af8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80087a0:	4659      	mov	r1, fp
 80087a2:	4650      	mov	r0, sl
 80087a4:	f00d f9ab 	bl	8015afe <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80087a8:	4651      	mov	r1, sl
 80087aa:	4630      	mov	r0, r6
 80087ac:	f00a f8d0 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 80087b0:	230a      	movs	r3, #10
 80087b2:	ee18 0a10 	vmov	r0, s16
 80087b6:	9300      	str	r3, [sp, #0]
 80087b8:	224b      	movs	r2, #75	; 0x4b
 80087ba:	23f0      	movs	r3, #240	; 0xf0
 80087bc:	4629      	mov	r1, r5
 80087be:	f7fb f80a 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80087c2:	9b03      	ldr	r3, [sp, #12]
 80087c4:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80087c8:	22a0      	movs	r2, #160	; 0xa0
 80087ca:	4611      	mov	r1, r2
 80087cc:	ee18 0a10 	vmov	r0, s16
 80087d0:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80087d4:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 80087d8:	f00c fa9c 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80087dc:	ee18 0a10 	vmov	r0, s16
 80087e0:	22a0      	movs	r2, #160	; 0xa0
 80087e2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80087e6:	f00c faa0 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80087ea:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80087ee:	2b20      	cmp	r3, #32
 80087f0:	d006      	beq.n	8008800 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x594>
        lineWidthQ5 = widthQ5;
 80087f2:	2320      	movs	r3, #32
        updateCachedShape();
 80087f4:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 80087f8:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80087fc:	f00c f994 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008800:	ee18 0a10 	vmov	r0, s16
 8008804:	2101      	movs	r1, #1
 8008806:	f00c fa9b 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800880a:	ee18 1a10 	vmov	r1, s16
 800880e:	4630      	mov	r0, r6
 8008810:	f00a f89e 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008814:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 8008818:	223c      	movs	r2, #60	; 0x3c
 800881a:	ee19 0a10 	vmov	r0, s18
 800881e:	2117      	movs	r1, #23
        linespace = space;
 8008820:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8008824:	ad06      	add	r5, sp, #24
 8008826:	f7fa ffc9 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800882a:	ee19 1a10 	vmov	r1, s18
 800882e:	4628      	mov	r0, r5
        color = newColor;
 8008830:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8008834:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8008838:	f00c fc18 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800883c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008840:	ee19 3a10 	vmov	r3, s18
 8008844:	333c      	adds	r3, #60	; 0x3c
 8008846:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800884a:	4f4b      	ldr	r7, [pc, #300]	; (8008978 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 800884c:	970c      	str	r7, [sp, #48]	; 0x30
 800884e:	2348      	movs	r3, #72	; 0x48
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8008850:	ee19 0a10 	vmov	r0, s18
 8008854:	a90c      	add	r1, sp, #48	; 0x30
 8008856:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800885a:	f00c fea1 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800885e:	ee19 1a10 	vmov	r1, s18
 8008862:	4630      	mov	r0, r6
 8008864:	f00a f874 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008868:	230a      	movs	r3, #10
 800886a:	ee18 0a90 	vmov	r0, s17
 800886e:	9300      	str	r3, [sp, #0]
 8008870:	2232      	movs	r2, #50	; 0x32
 8008872:	23f0      	movs	r3, #240	; 0xf0
 8008874:	4649      	mov	r1, r9
 8008876:	f7fa ffae 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800887a:	9b04      	ldr	r3, [sp, #16]
 800887c:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008880:	22a0      	movs	r2, #160	; 0xa0
 8008882:	4611      	mov	r1, r2
 8008884:	ee18 0a90 	vmov	r0, s17
 8008888:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 800888c:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8008890:	f00c fa40 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008894:	ee18 0a90 	vmov	r0, s17
 8008898:	22a0      	movs	r2, #160	; 0xa0
 800889a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800889e:	f00c fa44 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80088a2:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 80088a6:	2b20      	cmp	r3, #32
 80088a8:	d006      	beq.n	80088b8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x64c>
        lineWidthQ5 = widthQ5;
 80088aa:	2320      	movs	r3, #32
        updateCachedShape();
 80088ac:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 80088b0:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 80088b4:	f00c f938 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80088b8:	ee18 0a90 	vmov	r0, s17
 80088bc:	2101      	movs	r1, #1
 80088be:	f00c fa3f 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80088c2:	ee18 1a90 	vmov	r1, s17
 80088c6:	4630      	mov	r0, r6
 80088c8:	f00a f842 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80088cc:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 80088d0:	ee19 0a90 	vmov	r0, s19
 80088d4:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80088d6:	f04f 0800 	mov.w	r8, #0
 80088da:	2145      	movs	r1, #69	; 0x45
 80088dc:	f7fa ff6e 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80088e0:	ee19 1a90 	vmov	r1, s19
 80088e4:	4628      	mov	r0, r5
        color = newColor;
 80088e6:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 80088ea:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 80088ee:	f00c fbbd 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80088f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80088f6:	ee19 3a90 	vmov	r3, s19
 80088fa:	333c      	adds	r3, #60	; 0x3c
 80088fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008900:	2349      	movs	r3, #73	; 0x49
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8008902:	ee19 0a90 	vmov	r0, s19
 8008906:	a90c      	add	r1, sp, #48	; 0x30
 8008908:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800890c:	970c      	str	r7, [sp, #48]	; 0x30
 800890e:	f00c fe47 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008912:	ee19 1a90 	vmov	r1, s19
 8008916:	4630      	mov	r0, r6
 8008918:	f00a f81a 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 800891c:	ee1a 0a10 	vmov	r0, s20
 8008920:	220c      	movs	r2, #12
 8008922:	2136      	movs	r1, #54	; 0x36
 8008924:	f7fa ff4a 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008928:	ee1a 1a10 	vmov	r1, s20
 800892c:	4628      	mov	r0, r5
        color = newColor;
 800892e:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8008932:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8008936:	f00c fb99 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800893a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800893e:	ee1a 3a10 	vmov	r3, s20
 8008942:	333c      	adds	r3, #60	; 0x3c
 8008944:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008948:	234a      	movs	r3, #74	; 0x4a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 800894a:	ee1a 0a10 	vmov	r0, s20
 800894e:	a90c      	add	r1, sp, #48	; 0x30
 8008950:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008954:	970c      	str	r7, [sp, #48]	; 0x30
 8008956:	f00c fe23 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800895a:	4630      	mov	r0, r6
 800895c:	ee1a 1a10 	vmov	r1, s20
 8008960:	f009 fff6 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008964:	4620      	mov	r0, r4
 8008966:	b00f      	add	sp, #60	; 0x3c
 8008968:	ecbd 8b0a 	vpop	{d8-d12}
 800896c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008970:	200138b8 	.word	0x200138b8
 8008974:	0802f6b1 	.word	0x0802f6b1
 8008978:	0802f724 	.word	0x0802f724
 800897c:	200138b0 	.word	0x200138b0

08008980 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8008980:	4770      	bx	lr

08008982 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008982:	4770      	bx	lr

08008984 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008984:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008986:	68c2      	ldr	r2, [r0, #12]
 8008988:	6844      	ldr	r4, [r0, #4]
 800898a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800898c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800898e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008992:	07d2      	lsls	r2, r2, #31
 8008994:	bf48      	it	mi
 8008996:	5962      	ldrmi	r2, [r4, r5]
 8008998:	689b      	ldr	r3, [r3, #8]
    }
 800899a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800899c:	bf48      	it	mi
 800899e:	58d3      	ldrmi	r3, [r2, r3]
 80089a0:	4718      	bx	r3

080089a2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80089a2:	6843      	ldr	r3, [r0, #4]
 80089a4:	b12b      	cbz	r3, 80089b2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80089a6:	6883      	ldr	r3, [r0, #8]
 80089a8:	b92b      	cbnz	r3, 80089b6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80089aa:	68c0      	ldr	r0, [r0, #12]
 80089ac:	f000 0001 	and.w	r0, r0, #1
 80089b0:	4770      	bx	lr
 80089b2:	4618      	mov	r0, r3
 80089b4:	4770      	bx	lr
 80089b6:	2001      	movs	r0, #1
    }
 80089b8:	4770      	bx	lr

080089ba <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80089ba:	b510      	push	{r4, lr}
 80089bc:	2110      	movs	r1, #16
 80089be:	4604      	mov	r4, r0
 80089c0:	f024 f9fb 	bl	802cdba <_ZdlPvj>
 80089c4:	4620      	mov	r0, r4
 80089c6:	bd10      	pop	{r4, pc}

080089c8 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80089c8:	b510      	push	{r4, lr}
 80089ca:	4b03      	ldr	r3, [pc, #12]	; (80089d8 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80089cc:	6003      	str	r3, [r0, #0]
 80089ce:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80089d0:	f00e fb94 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80089d4:	4620      	mov	r0, r4
 80089d6:	bd10      	pop	{r4, pc}
 80089d8:	08030e40 	.word	0x08030e40

080089dc <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80089dc:	b507      	push	{r0, r1, r2, lr}
 80089de:	4b07      	ldr	r3, [pc, #28]	; (80089fc <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80089e0:	6003      	str	r3, [r0, #0]
 80089e2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80089e4:	f00e fb8a 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80089e8:	9801      	ldr	r0, [sp, #4]
 80089ea:	f241 11c4 	movw	r1, #4548	; 0x11c4
 80089ee:	f024 f9e4 	bl	802cdba <_ZdlPvj>
 80089f2:	9801      	ldr	r0, [sp, #4]
 80089f4:	b003      	add	sp, #12
 80089f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80089fa:	bf00      	nop
 80089fc:	08030e40 	.word	0x08030e40

08008a00 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8008a00:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 8008a02:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 8008a06:	4299      	cmp	r1, r3
{
 8008a08:	4604      	mov	r4, r0
 8008a0a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8008a0c:	d103      	bne.n	8008a16 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008a0e:	f010 f877 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8008a12:	f7fc fe79 	bl	8005708 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 8008a16:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8008a1a:	429d      	cmp	r5, r3
 8008a1c:	d103      	bne.n	8008a26 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8008a1e:	f010 f86f 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8008a22:	f7fc fe91 	bl	8005748 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 8008a26:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 8008a2a:	42a5      	cmp	r5, r4
 8008a2c:	d105      	bne.n	8008a3a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8008a2e:	f010 f867 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8008a32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8008a36:	f7fc be97 	b.w	8005768 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8008a3a:	bd38      	pop	{r3, r4, r5, pc}

08008a3c <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8008a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008a40:	ed2d 8b06 	vpush	{d8-d10}
 8008a44:	4604      	mov	r4, r0
 8008a46:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8008a48:	46a2      	mov	sl, r4
 8008a4a:	2500      	movs	r5, #0
 8008a4c:	f011 fcd8 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 8008a50:	4b71      	ldr	r3, [pc, #452]	; (8008c18 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
 8008a52:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008a54:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8008a58:	2226      	movs	r2, #38	; 0x26
 8008a5a:	4629      	mov	r1, r5
 8008a5c:	4650      	mov	r0, sl
 8008a5e:	f025 fa98 	bl	802df92 <memset>
 8008a62:	4650      	mov	r0, sl
 8008a64:	f7fa fedc 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8008a68:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8008a6c:	26ff      	movs	r6, #255	; 0xff
 8008a6e:	4b6b      	ldr	r3, [pc, #428]	; (8008c1c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8008a70:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008a72:	2226      	movs	r2, #38	; 0x26
 8008a74:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008a78:	4629      	mov	r1, r5
 8008a7a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008a7e:	4648      	mov	r0, r9
 8008a80:	66a5      	str	r5, [r4, #104]	; 0x68
 8008a82:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008a86:	f025 fa84 	bl	802df92 <memset>
 8008a8a:	4648      	mov	r0, r9
 8008a8c:	f7fa fec8 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8008a90:	4b63      	ldr	r3, [pc, #396]	; (8008c20 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>)
 8008a92:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008a94:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008a98:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008a9c:	a90a      	add	r1, sp, #40	; 0x28
 8008a9e:	4648      	mov	r0, r9
 8008aa0:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008aa4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008aa8:	f00d fb2b 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008aac:	4640      	mov	r0, r8
 8008aae:	f7fa ff1b 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008ab2:	4b5c      	ldr	r3, [pc, #368]	; (8008c24 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e8>)
 8008ab4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008ab8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8008abc:	4618      	mov	r0, r3
 8008abe:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8008ac2:	ee09 3a90 	vmov	s19, r3
 8008ac6:	f00d fc53 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008aca:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8008ace:	4618      	mov	r0, r3
 8008ad0:	ee0a 3a10 	vmov	s20, r3
 8008ad4:	f00d fc4c 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008ad8:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8008adc:	4618      	mov	r0, r3
 8008ade:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8008ae2:	ee0a 3a90 	vmov	s21, r3
 8008ae6:	f00d fc43 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008aea:	4638      	mov	r0, r7
 8008aec:	f00b fffc 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008af0:	4e4d      	ldr	r6, [pc, #308]	; (8008c28 <_ZN26Measurement_SingleViewBaseC1Ev+0x1ec>)
 8008af2:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8008af6:	4618      	mov	r0, r3
 8008af8:	9302      	str	r3, [sp, #8]
 8008afa:	f7fa fc95 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008afe:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008b02:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8008b06:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008b0a:	4618      	mov	r0, r3
 8008b0c:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8008b10:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8008b14:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8008b18:	ee08 3a10 	vmov	s16, r3
 8008b1c:	f7fa fee4 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8008b20:	4658      	mov	r0, fp
 8008b22:	f00b ffe1 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8008b26:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8008b2a:	4618      	mov	r0, r3
 8008b2c:	9303      	str	r3, [sp, #12]
 8008b2e:	f7fa fc7b 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008b32:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008b36:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8008b3a:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8008b3e:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8008b42:	4618      	mov	r0, r3
 8008b44:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8008b48:	ee08 3a90 	vmov	s17, r3
 8008b4c:	f7fa fecc 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8008b50:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8008b54:	4618      	mov	r0, r3
 8008b56:	ee09 3a10 	vmov	s18, r3
 8008b5a:	f7fa fec5 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008b5e:	4a33      	ldr	r2, [pc, #204]	; (8008c2c <_ZN26Measurement_SingleViewBaseC1Ev+0x1f0>)
 8008b60:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008b64:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8008b68:	4a31      	ldr	r2, [pc, #196]	; (8008c30 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008b6a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008b6e:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8008b72:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8008b76:	f00e fab7 	bl	80170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008b7a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008b7e:	462a      	mov	r2, r5
 8008b80:	4650      	mov	r0, sl
 8008b82:	9300      	str	r3, [sp, #0]
 8008b84:	4629      	mov	r1, r5
 8008b86:	23f0      	movs	r3, #240	; 0xf0
 8008b88:	f7fa fe25 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008b8c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008b8e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008b92:	66a3      	str	r3, [r4, #104]	; 0x68
 8008b94:	4651      	mov	r1, sl
 8008b96:	4630      	mov	r0, r6
 8008b98:	f009 feda 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8008b9c:	462a      	mov	r2, r5
 8008b9e:	4648      	mov	r0, r9
 8008ba0:	4629      	mov	r1, r5
 8008ba2:	f7fa fe0b 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008ba6:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008ba8:	4648      	mov	r0, r9
 8008baa:	a90a      	add	r1, sp, #40	; 0x28
 8008bac:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008bb0:	f00d faa7 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008bb4:	4649      	mov	r1, r9
 8008bb6:	4630      	mov	r0, r6
 8008bb8:	f009 feca 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8008bbc:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008bc0:	2156      	movs	r1, #86	; 0x56
 8008bc2:	4640      	mov	r0, r8
 8008bc4:	f7fa fdfa 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008bc8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008bcc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008bd0:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8008bd4:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8008bd8:	4648      	mov	r0, r9
 8008bda:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008bde:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008be2:	4641      	mov	r1, r8
 8008be4:	4798      	blx	r3
 8008be6:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8008bea:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008bee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008bf2:	4b10      	ldr	r3, [pc, #64]	; (8008c34 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f8>)
 8008bf4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8008bf6:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8008bfa:	b92b      	cbnz	r3, 8008c08 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>
 8008bfc:	4b0e      	ldr	r3, [pc, #56]	; (8008c38 <_ZN26Measurement_SingleViewBaseC1Ev+0x1fc>)
 8008bfe:	4a0f      	ldr	r2, [pc, #60]	; (8008c3c <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008c00:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008c02:	480f      	ldr	r0, [pc, #60]	; (8008c40 <_ZN26Measurement_SingleViewBaseC1Ev+0x204>)
 8008c04:	f024 ffc0 	bl	802db88 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008c08:	4b0e      	ldr	r3, [pc, #56]	; (8008c44 <_ZN26Measurement_SingleViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008c0a:	881b      	ldrh	r3, [r3, #0]
 8008c0c:	2b42      	cmp	r3, #66	; 0x42
 8008c0e:	d81d      	bhi.n	8008c4c <_ZN26Measurement_SingleViewBaseC1Ev+0x210>
 8008c10:	4b0d      	ldr	r3, [pc, #52]	; (8008c48 <_ZN26Measurement_SingleViewBaseC1Ev+0x20c>)
 8008c12:	4a0a      	ldr	r2, [pc, #40]	; (8008c3c <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008c14:	2161      	movs	r1, #97	; 0x61
 8008c16:	e7f4      	b.n	8008c02 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c6>
 8008c18:	08030e40 	.word	0x08030e40
 8008c1c:	08031c78 	.word	0x08031c78
 8008c20:	08031ec4 	.word	0x08031ec4
 8008c24:	0802f7c4 	.word	0x0802f7c4
 8008c28:	080319ac 	.word	0x080319ac
 8008c2c:	08030e28 	.word	0x08030e28
 8008c30:	08008a01 	.word	0x08008a01
 8008c34:	200138ac 	.word	0x200138ac
 8008c38:	0802f574 	.word	0x0802f574
 8008c3c:	0802f679 	.word	0x0802f679
 8008c40:	0802f5f1 	.word	0x0802f5f1
 8008c44:	200138b0 	.word	0x200138b0
 8008c48:	0802f638 	.word	0x0802f638
        return texts->getText(typedTextId);
 8008c4c:	4bad      	ldr	r3, [pc, #692]	; (8008f04 <_ZN26Measurement_SingleViewBaseC1Ev+0x4c8>)
 8008c4e:	2142      	movs	r1, #66	; 0x42
 8008c50:	6818      	ldr	r0, [r3, #0]
 8008c52:	f001 fdc5 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8008c56:	4aac      	ldr	r2, [pc, #688]	; (8008f08 <_ZN26Measurement_SingleViewBaseC1Ev+0x4cc>)
 8008c58:	4603      	mov	r3, r0
 8008c5a:	2104      	movs	r1, #4
 8008c5c:	4648      	mov	r0, r9
 8008c5e:	f013 f8fd 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8008c62:	4640      	mov	r0, r8
        wc1 = value;
 8008c64:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8008c68:	f00c fc7a 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008c6c:	4ba7      	ldr	r3, [pc, #668]	; (8008f0c <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008c6e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8008c70:	4640      	mov	r0, r8
 8008c72:	2343      	movs	r3, #67	; 0x43
 8008c74:	a90a      	add	r1, sp, #40	; 0x28
 8008c76:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008c7a:	f00c fc91 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008c7e:	4641      	mov	r1, r8
 8008c80:	4630      	mov	r0, r6
 8008c82:	f009 fe65 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8008c86:	ee19 0a90 	vmov	r0, s19
 8008c8a:	22f0      	movs	r2, #240	; 0xf0
 8008c8c:	2121      	movs	r1, #33	; 0x21
 8008c8e:	f7fa fd95 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008c92:	f04f 0802 	mov.w	r8, #2
 8008c96:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008c98:	a909      	add	r1, sp, #36	; 0x24
 8008c9a:	ee19 0a90 	vmov	r0, s19
 8008c9e:	aa0a      	add	r2, sp, #40	; 0x28
 8008ca0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008ca4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8008ca8:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008cac:	f00d f833 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008cb0:	2263      	movs	r2, #99	; 0x63
 8008cb2:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8008cb6:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8008cba:	ee19 0a90 	vmov	r0, s19
 8008cbe:	f7fa fdc1 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008cc2:	ee19 1a90 	vmov	r1, s19
 8008cc6:	4630      	mov	r0, r6
        colorPressed = col;
 8008cc8:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8008ccc:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 8008cd0:	f009 fe3e 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 8008cd4:	ee1a 0a10 	vmov	r0, s20
 8008cd8:	22aa      	movs	r2, #170	; 0xaa
 8008cda:	2121      	movs	r1, #33	; 0x21
 8008cdc:	f7fa fd6e 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008ce0:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008ce2:	a909      	add	r1, sp, #36	; 0x24
 8008ce4:	ee1a 0a10 	vmov	r0, s20
 8008ce8:	aa0a      	add	r2, sp, #40	; 0x28
 8008cea:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008cee:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008cf2:	f00d f810 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008cf6:	2262      	movs	r2, #98	; 0x62
 8008cf8:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8008cfc:	ee1a 0a10 	vmov	r0, s20
 8008d00:	f7fa fda0 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008d04:	ee1a 1a10 	vmov	r1, s20
 8008d08:	4630      	mov	r0, r6
        colorPressed = col;
 8008d0a:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8008d0e:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8008d12:	f009 fe1d 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 8008d16:	ee1a 0a90 	vmov	r0, s21
 8008d1a:	2264      	movs	r2, #100	; 0x64
 8008d1c:	2121      	movs	r1, #33	; 0x21
 8008d1e:	f7fa fd4d 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008d22:	aa0a      	add	r2, sp, #40	; 0x28
 8008d24:	2303      	movs	r3, #3
 8008d26:	a909      	add	r1, sp, #36	; 0x24
 8008d28:	ee1a 0a90 	vmov	r0, s21
 8008d2c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008d30:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008d34:	f00c ffef 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008d38:	2361      	movs	r3, #97	; 0x61
 8008d3a:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8008d3e:	ee1a 0a90 	vmov	r0, s21
 8008d42:	f7fa fd7f 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008d46:	ee1a 1a90 	vmov	r1, s21
 8008d4a:	4630      	mov	r0, r6
        colorPressed = col;
 8008d4c:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8008d50:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8008d54:	f009 fdfc 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008d58:	230a      	movs	r3, #10
 8008d5a:	9300      	str	r3, [sp, #0]
 8008d5c:	224b      	movs	r2, #75	; 0x4b
 8008d5e:	23f0      	movs	r3, #240	; 0xf0
 8008d60:	4629      	mov	r1, r5
 8008d62:	4638      	mov	r0, r7
 8008d64:	f7fa fd37 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008d68:	9b02      	ldr	r3, [sp, #8]
 8008d6a:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008d6e:	22a0      	movs	r2, #160	; 0xa0
 8008d70:	4611      	mov	r1, r2
 8008d72:	4638      	mov	r0, r7
 8008d74:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008d78:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8008d7c:	f00b ffca 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008d80:	22a0      	movs	r2, #160	; 0xa0
 8008d82:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008d86:	4638      	mov	r0, r7
 8008d88:	f00b ffcf 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008d8c:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8008d90:	2b20      	cmp	r3, #32
 8008d92:	d005      	beq.n	8008da0 <_ZN26Measurement_SingleViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8008d94:	2320      	movs	r3, #32
 8008d96:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8008d9a:	4638      	mov	r0, r7
 8008d9c:	f00b fec4 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008da0:	4638      	mov	r0, r7
 8008da2:	2101      	movs	r1, #1
 8008da4:	f00b ffcc 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008da8:	4639      	mov	r1, r7
 8008daa:	4630      	mov	r0, r6
 8008dac:	f009 fdd0 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008db0:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(41, 60);
 8008db4:	223c      	movs	r2, #60	; 0x3c
 8008db6:	ee18 0a10 	vmov	r0, s16
 8008dba:	2129      	movs	r1, #41	; 0x29
        linespace = space;
 8008dbc:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 8008dc0:	ad04      	add	r5, sp, #16
 8008dc2:	f7fa fcfb 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008dc6:	ee18 1a10 	vmov	r1, s16
 8008dca:	4628      	mov	r0, r5
        color = newColor;
 8008dcc:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008dd0:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008dd4:	f00c f94a 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008dd8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008ddc:	ee18 3a10 	vmov	r3, s16
 8008de0:	333c      	adds	r3, #60	; 0x3c
 8008de2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008de6:	4b49      	ldr	r3, [pc, #292]	; (8008f0c <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008de8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8008dea:	ee18 0a10 	vmov	r0, s16
 8008dee:	2352      	movs	r3, #82	; 0x52
 8008df0:	a90a      	add	r1, sp, #40	; 0x28
 8008df2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008df6:	f00c fbd3 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008dfa:	ee18 1a10 	vmov	r1, s16
 8008dfe:	4630      	mov	r0, r6
 8008e00:	f009 fda6 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008e04:	230a      	movs	r3, #10
 8008e06:	9300      	str	r3, [sp, #0]
 8008e08:	2232      	movs	r2, #50	; 0x32
 8008e0a:	23f0      	movs	r3, #240	; 0xf0
 8008e0c:	4641      	mov	r1, r8
 8008e0e:	4658      	mov	r0, fp
 8008e10:	f7fa fce1 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008e14:	9b03      	ldr	r3, [sp, #12]
 8008e16:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008e1a:	22a0      	movs	r2, #160	; 0xa0
 8008e1c:	4611      	mov	r1, r2
 8008e1e:	4658      	mov	r0, fp
 8008e20:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8008e24:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8008e28:	f00b ff74 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008e2c:	22a0      	movs	r2, #160	; 0xa0
 8008e2e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008e32:	4658      	mov	r0, fp
 8008e34:	f00b ff79 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008e38:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8008e3c:	2b20      	cmp	r3, #32
 8008e3e:	d005      	beq.n	8008e4c <_ZN26Measurement_SingleViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 8008e40:	2320      	movs	r3, #32
 8008e42:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8008e46:	4658      	mov	r0, fp
 8008e48:	f00b fe6e 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008e4c:	4658      	mov	r0, fp
 8008e4e:	2101      	movs	r1, #1
 8008e50:	f00b ff76 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008e54:	4659      	mov	r1, fp
 8008e56:	4630      	mov	r0, r6
 8008e58:	f009 fd7a 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008e5c:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 8008e60:	ee18 0a90 	vmov	r0, s17
 8008e64:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008e66:	2700      	movs	r7, #0
 8008e68:	2145      	movs	r1, #69	; 0x45
 8008e6a:	f7fa fca7 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008e6e:	ee18 1a90 	vmov	r1, s17
 8008e72:	4628      	mov	r0, r5
        color = newColor;
 8008e74:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8008e78:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8008e7c:	f00c f8f6 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008e80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008e84:	ee18 3a90 	vmov	r3, s17
 8008e88:	333c      	adds	r3, #60	; 0x3c
 8008e8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008e8e:	4b1f      	ldr	r3, [pc, #124]	; (8008f0c <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008e90:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8008e92:	ee18 0a90 	vmov	r0, s17
 8008e96:	2311      	movs	r3, #17
 8008e98:	a90a      	add	r1, sp, #40	; 0x28
 8008e9a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008e9e:	f00c fb7f 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008ea2:	ee18 1a90 	vmov	r1, s17
 8008ea6:	4630      	mov	r0, r6
 8008ea8:	f009 fd52 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008eac:	ee19 0a10 	vmov	r0, s18
 8008eb0:	220c      	movs	r2, #12
 8008eb2:	2136      	movs	r1, #54	; 0x36
 8008eb4:	f7fa fc82 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8008eb8:	ee19 1a10 	vmov	r1, s18
 8008ebc:	4628      	mov	r0, r5
        color = newColor;
 8008ebe:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 8008ec2:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8008ec6:	f00c f8d1 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008eca:	ee19 2a10 	vmov	r2, s18
 8008ece:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8008ed2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008ed6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008eda:	4b0c      	ldr	r3, [pc, #48]	; (8008f0c <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008edc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8008ede:	ee19 0a10 	vmov	r0, s18
 8008ee2:	2310      	movs	r3, #16
 8008ee4:	a90a      	add	r1, sp, #40	; 0x28
 8008ee6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008eea:	f00c fb59 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008eee:	4630      	mov	r0, r6
 8008ef0:	ee19 1a10 	vmov	r1, s18
 8008ef4:	f009 fd2c 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008ef8:	4620      	mov	r0, r4
 8008efa:	b00d      	add	sp, #52	; 0x34
 8008efc:	ecbd 8b06 	vpop	{d8-d10}
 8008f00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008f04:	200138b8 	.word	0x200138b8
 8008f08:	0802f6b1 	.word	0x0802f6b1
 8008f0c:	0802f724 	.word	0x0802f724

08008f10 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8008f10:	4770      	bx	lr

08008f12 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8008f12:	4770      	bx	lr

08008f14 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008f14:	4770      	bx	lr

08008f16 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008f16:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008f18:	68c2      	ldr	r2, [r0, #12]
 8008f1a:	6844      	ldr	r4, [r0, #4]
 8008f1c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008f1e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008f20:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008f24:	07d2      	lsls	r2, r2, #31
 8008f26:	bf48      	it	mi
 8008f28:	5962      	ldrmi	r2, [r4, r5]
 8008f2a:	689b      	ldr	r3, [r3, #8]
    }
 8008f2c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008f2e:	bf48      	it	mi
 8008f30:	58d3      	ldrmi	r3, [r2, r3]
 8008f32:	4718      	bx	r3

08008f34 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008f34:	6843      	ldr	r3, [r0, #4]
 8008f36:	b12b      	cbz	r3, 8008f44 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008f38:	6883      	ldr	r3, [r0, #8]
 8008f3a:	b92b      	cbnz	r3, 8008f48 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008f3c:	68c0      	ldr	r0, [r0, #12]
 8008f3e:	f000 0001 	and.w	r0, r0, #1
 8008f42:	4770      	bx	lr
 8008f44:	4618      	mov	r0, r3
 8008f46:	4770      	bx	lr
 8008f48:	2001      	movs	r0, #1
    }
 8008f4a:	4770      	bx	lr

08008f4c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008f4c:	b510      	push	{r4, lr}
 8008f4e:	2110      	movs	r1, #16
 8008f50:	4604      	mov	r4, r0
 8008f52:	f023 ff32 	bl	802cdba <_ZdlPvj>
 8008f56:	4620      	mov	r0, r4
 8008f58:	bd10      	pop	{r4, pc}
	...

08008f5c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008f5c:	b510      	push	{r4, lr}
 8008f5e:	4b03      	ldr	r3, [pc, #12]	; (8008f6c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8008f60:	6003      	str	r3, [r0, #0]
 8008f62:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008f64:	f00e f8ca 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008f68:	4620      	mov	r0, r4
 8008f6a:	bd10      	pop	{r4, pc}
 8008f6c:	08030e8c 	.word	0x08030e8c

08008f70 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008f70:	b507      	push	{r0, r1, r2, lr}
 8008f72:	4b07      	ldr	r3, [pc, #28]	; (8008f90 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8008f74:	6003      	str	r3, [r0, #0]
 8008f76:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008f78:	f00e f8c0 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008f7c:	9801      	ldr	r0, [sp, #4]
 8008f7e:	f241 417c 	movw	r1, #5244	; 0x147c
 8008f82:	f023 ff1a 	bl	802cdba <_ZdlPvj>
 8008f86:	9801      	ldr	r0, [sp, #4]
 8008f88:	b003      	add	sp, #12
 8008f8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8008f8e:	bf00      	nop
 8008f90:	08030e8c 	.word	0x08030e8c

08008f94 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8008f94:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8008f96:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8008f9a:	f8d4 2478 	ldr.w	r2, [r4, #1144]	; 0x478
 8008f9e:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008fa0:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8008fa2:	f8c4 2478 	str.w	r2, [r4, #1144]	; 0x478
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008fa6:	d105      	bne.n	8008fb4 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8008fa8:	6803      	ldr	r3, [r0, #0]
 8008faa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008fac:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8008fae:	2300      	movs	r3, #0
 8008fb0:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
    }
}
 8008fb4:	bd10      	pop	{r4, pc}

08008fb6 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel_return)
 8008fb6:	3098      	adds	r0, #152	; 0x98
 8008fb8:	4288      	cmp	r0, r1
{
 8008fba:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 8008fbc:	d105      	bne.n	8008fca <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008fbe:	f00f fd9f 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
}
 8008fc2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008fc6:	f7fc bbaf 	b.w	8005728 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008fca:	bd08      	pop	{r3, pc}

08008fcc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8008fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008fd0:	ed2d 8b0a 	vpush	{d8-d12}
 8008fd4:	4604      	mov	r4, r0
 8008fd6:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8008fd8:	46a0      	mov	r8, r4
 8008fda:	2500      	movs	r5, #0
 8008fdc:	f011 fa10 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 8008fe0:	4bce      	ldr	r3, [pc, #824]	; (800931c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x350>)
 8008fe2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008fe4:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008fe8:	2226      	movs	r2, #38	; 0x26
 8008fea:	4629      	mov	r1, r5
 8008fec:	4640      	mov	r0, r8
 8008fee:	f024 ffd0 	bl	802df92 <memset>
 8008ff2:	4640      	mov	r0, r8
 8008ff4:	f7fa fc14 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8008ff8:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008ffc:	26ff      	movs	r6, #255	; 0xff
 8008ffe:	4bc8      	ldr	r3, [pc, #800]	; (8009320 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x354>)
 8009000:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009002:	2226      	movs	r2, #38	; 0x26
 8009004:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009008:	4629      	mov	r1, r5
 800900a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800900e:	4638      	mov	r0, r7
 8009010:	66a5      	str	r5, [r4, #104]	; 0x68
 8009012:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009016:	f024 ffbc 	bl	802df92 <memset>
 800901a:	4638      	mov	r0, r7
 800901c:	f7fa fc00 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8009020:	4bc0      	ldr	r3, [pc, #768]	; (8009324 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x358>)
 8009022:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009024:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009028:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800902c:	a90a      	add	r1, sp, #40	; 0x28
 800902e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8009032:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8009034:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009038:	f00d f863 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800903c:	4658      	mov	r0, fp
 800903e:	f00d f997 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009042:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8009046:	f504 7994 	add.w	r9, r4, #296	; 0x128
 800904a:	4618      	mov	r0, r3
 800904c:	ee0a 3a90 	vmov	s21, r3
 8009050:	f7fa fc4a 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009054:	4648      	mov	r0, r9
 8009056:	f7fa fc47 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 800905a:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 800905e:	4618      	mov	r0, r3
 8009060:	ee0b 3a10 	vmov	s22, r3
 8009064:	f7fa fc40 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009068:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 800906c:	4618      	mov	r0, r3
 800906e:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8009072:	4ead      	ldr	r6, [pc, #692]	; (8009328 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x35c>)
        : TextArea()
 8009074:	f7fa fc38 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009078:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 800907c:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8009080:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8009082:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8009086:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 800908a:	f7fa fc2d 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 800908e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8009092:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8009094:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8009098:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 800909c:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 80090a0:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 80090a4:	f7fa fc20 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80090a8:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 80090ac:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 80090b0:	4650      	mov	r0, sl
 80090b2:	f00c fce9 	bl	8015a88 <_ZN8touchgfx5GaugeC1Ev>
 80090b6:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 80090ba:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80090bc:	4e9b      	ldr	r6, [pc, #620]	; (800932c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x360>)
 80090be:	ee08 3a10 	vmov	s16, r3
 80090c2:	f00b fd11 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 80090c6:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 80090ca:	4618      	mov	r0, r3
 80090cc:	9302      	str	r3, [sp, #8]
 80090ce:	f7fa f9ab 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80090d2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80090d6:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80090da:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80090de:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 80090e2:	4618      	mov	r0, r3
 80090e4:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80090e8:	ee09 3a10 	vmov	s18, r3
 80090ec:	f7fa fbfc 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 80090f0:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80090f4:	4618      	mov	r0, r3
 80090f6:	ee08 3a90 	vmov	s17, r3
 80090fa:	f00b fcf5 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 80090fe:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8009102:	4618      	mov	r0, r3
 8009104:	9303      	str	r3, [sp, #12]
 8009106:	f7fa f98f 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800910a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800910e:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8009112:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8009116:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 800911a:	4618      	mov	r0, r3
 800911c:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8009120:	ee09 3a90 	vmov	s19, r3
 8009124:	f7fa fbe0 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009128:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 800912c:	4618      	mov	r0, r3
 800912e:	ee0a 3a10 	vmov	s20, r3
 8009132:	f7fa fbd9 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009136:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800913a:	4a7d      	ldr	r2, [pc, #500]	; (8009330 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x364>)
 800913c:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8009140:	4a7c      	ldr	r2, [pc, #496]	; (8009334 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x368>)
 8009142:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8009146:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 800914a:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
 800914e:	f8c3 5478 	str.w	r5, [r3, #1144]	; 0x478
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8009152:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8009156:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 800915a:	f00d ffc5 	bl	80170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800915e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8009162:	462a      	mov	r2, r5
 8009164:	4640      	mov	r0, r8
 8009166:	9300      	str	r3, [sp, #0]
 8009168:	4629      	mov	r1, r5
 800916a:	23f0      	movs	r3, #240	; 0xf0
 800916c:	f7fa fb33 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009170:	1d26      	adds	r6, r4, #4
        color = newColor;
 8009172:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009176:	66a3      	str	r3, [r4, #104]	; 0x68
 8009178:	4641      	mov	r1, r8
 800917a:	4630      	mov	r0, r6
 800917c:	f009 fbe8 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009180:	462a      	mov	r2, r5
 8009182:	4638      	mov	r0, r7
 8009184:	4629      	mov	r1, r5
 8009186:	f7fa fb19 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800918a:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800918e:	4638      	mov	r0, r7
 8009190:	a90a      	add	r1, sp, #40	; 0x28
 8009192:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009196:	f00c ffb4 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800919a:	4639      	mov	r1, r7
 800919c:	4630      	mov	r0, r6
 800919e:	f009 fbd7 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 80091a2:	4658      	mov	r0, fp
 80091a4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80091a8:	2121      	movs	r1, #33	; 0x21
 80091aa:	f7fa fb07 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80091ae:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80091b0:	aa0a      	add	r2, sp, #40	; 0x28
 80091b2:	a909      	add	r1, sp, #36	; 0x24
 80091b4:	4658      	mov	r0, fp
 80091b6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80091ba:	2302      	movs	r3, #2
 80091bc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80091c0:	f00c fda9 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80091c4:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 80091c6:	4658      	mov	r0, fp
 80091c8:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80091cc:	f7fa fb3a 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 80091d0:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 80091d4:	f04f 38ff 	mov.w	r8, #4294967295
 80091d8:	3308      	adds	r3, #8
 80091da:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80091de:	4659      	mov	r1, fp
 80091e0:	4630      	mov	r0, r6
        colorPressed = col;
 80091e2:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 80091e6:	af04      	add	r7, sp, #16
 80091e8:	f009 fbb2 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 80091ec:	22c2      	movs	r2, #194	; 0xc2
 80091ee:	ee1a 0a90 	vmov	r0, s21
 80091f2:	4629      	mov	r1, r5
 80091f4:	f7fa fae2 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80091f8:	ee1a 1a90 	vmov	r1, s21
 80091fc:	4638      	mov	r0, r7
        color = newColor;
 80091fe:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8009202:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8009206:	f00b ff31 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800920a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800920e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8009212:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8009216:	4b48      	ldr	r3, [pc, #288]	; (8009338 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8009218:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 800921a:	ee1a 0a90 	vmov	r0, s21
 800921e:	2338      	movs	r3, #56	; 0x38
 8009220:	a90a      	add	r1, sp, #40	; 0x28
 8009222:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009226:	f00c f9bb 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800922a:	ee1a 1a90 	vmov	r1, s21
 800922e:	4630      	mov	r0, r6
 8009230:	f009 fb8e 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8009234:	22c2      	movs	r2, #194	; 0xc2
 8009236:	4648      	mov	r0, r9
 8009238:	21d9      	movs	r1, #217	; 0xd9
 800923a:	f7fa fabf 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800923e:	4649      	mov	r1, r9
 8009240:	4638      	mov	r0, r7
        color = newColor;
 8009242:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8009246:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 800924a:	f00b ff0f 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800924e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009252:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8009256:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800925a:	4b37      	ldr	r3, [pc, #220]	; (8009338 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 800925c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 800925e:	4648      	mov	r0, r9
 8009260:	2339      	movs	r3, #57	; 0x39
 8009262:	a90a      	add	r1, sp, #40	; 0x28
 8009264:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009268:	f00c f99a 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800926c:	4649      	mov	r1, r9
 800926e:	4630      	mov	r0, r6
 8009270:	f009 fb6e 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8009274:	2255      	movs	r2, #85	; 0x55
 8009276:	ee1b 0a10 	vmov	r0, s22
 800927a:	2171      	movs	r1, #113	; 0x71
 800927c:	f7fa fa9e 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8009280:	ee1b 1a10 	vmov	r1, s22
 8009284:	4638      	mov	r0, r7
        color = newColor;
 8009286:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 800928a:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 800928e:	f00b feed 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009292:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009296:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800929a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800929e:	4b26      	ldr	r3, [pc, #152]	; (8009338 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 80092a0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 80092a2:	ee1b 0a10 	vmov	r0, s22
 80092a6:	2337      	movs	r3, #55	; 0x37
 80092a8:	a90a      	add	r1, sp, #40	; 0x28
 80092aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80092ae:	f00c f977 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80092b2:	ee1b 1a10 	vmov	r1, s22
 80092b6:	4630      	mov	r0, r6
 80092b8:	f009 fb4a 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 239, 240, 15);
 80092bc:	230f      	movs	r3, #15
 80092be:	22ef      	movs	r2, #239	; 0xef
 80092c0:	ee1b 0a90 	vmov	r0, s23
 80092c4:	9300      	str	r3, [sp, #0]
 80092c6:	4629      	mov	r1, r5
 80092c8:	23f0      	movs	r3, #240	; 0xf0
 80092ca:	f7fa fa84 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80092ce:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 80092d2:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 80092d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80092da:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 80092de:	ee1b 1a90 	vmov	r1, s23
 80092e2:	4638      	mov	r0, r7
 80092e4:	4798      	blx	r3
 80092e6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80092ea:	f8df b064 	ldr.w	fp, [pc, #100]	; 8009350 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x384>
 80092ee:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80092f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80092f6:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LFLK).getText());
 80092fa:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 80092fe:	b92b      	cbnz	r3, 800930c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x340>
 8009300:	4b0e      	ldr	r3, [pc, #56]	; (800933c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x370>)
 8009302:	4a0f      	ldr	r2, [pc, #60]	; (8009340 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 8009304:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009306:	480f      	ldr	r0, [pc, #60]	; (8009344 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x378>)
 8009308:	f024 fc3e 	bl	802db88 <__assert_func>
 800930c:	4b0e      	ldr	r3, [pc, #56]	; (8009348 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x37c>)
 800930e:	881b      	ldrh	r3, [r3, #0]
 8009310:	2b1b      	cmp	r3, #27
 8009312:	d81f      	bhi.n	8009354 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x388>
 8009314:	4b0d      	ldr	r3, [pc, #52]	; (800934c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x380>)
 8009316:	4a0a      	ldr	r2, [pc, #40]	; (8009340 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 8009318:	2161      	movs	r1, #97	; 0x61
 800931a:	e7f4      	b.n	8009306 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x33a>
 800931c:	08030e8c 	.word	0x08030e8c
 8009320:	08031c78 	.word	0x08031c78
 8009324:	08031ec4 	.word	0x08031ec4
 8009328:	0802f7c4 	.word	0x0802f7c4
 800932c:	080319ac 	.word	0x080319ac
 8009330:	08030e74 	.word	0x08030e74
 8009334:	08008fb7 	.word	0x08008fb7
 8009338:	0802f724 	.word	0x0802f724
 800933c:	0802f574 	.word	0x0802f574
 8009340:	0802f679 	.word	0x0802f679
 8009344:	0802f5f1 	.word	0x0802f5f1
 8009348:	200138b0 	.word	0x200138b0
 800934c:	0802f638 	.word	0x0802f638
 8009350:	200138ac 	.word	0x200138ac
        return texts->getText(typedTextId);
 8009354:	4bdd      	ldr	r3, [pc, #884]	; (80096cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 8009356:	211b      	movs	r1, #27
 8009358:	6818      	ldr	r0, [r3, #0]
 800935a:	f001 fa41 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 800935e:	4adc      	ldr	r2, [pc, #880]	; (80096d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 8009360:	4603      	mov	r3, r0
 8009362:	210a      	movs	r1, #10
 8009364:	4648      	mov	r0, r9
 8009366:	f012 fd79 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800936a:	f04f 011c 	mov.w	r1, #28
 800936e:	4ad9      	ldr	r2, [pc, #868]	; (80096d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
        wc1 = value;
 8009370:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G8ED));
 8009374:	ee1b 0a90 	vmov	r0, s23
 8009378:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800937c:	a90a      	add	r1, sp, #40	; 0x28
 800937e:	920a      	str	r2, [sp, #40]	; 0x28
 8009380:	f00c f90e 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009384:	ee1b 1a90 	vmov	r1, s23
 8009388:	4630      	mov	r0, r6
 800938a:	f009 fae1 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 224, 240, 15);
 800938e:	210f      	movs	r1, #15
 8009390:	22e0      	movs	r2, #224	; 0xe0
 8009392:	ee1c 0a10 	vmov	r0, s24
 8009396:	9100      	str	r1, [sp, #0]
 8009398:	23f0      	movs	r3, #240	; 0xf0
 800939a:	4629      	mov	r1, r5
 800939c:	f7fa fa1b 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80093a0:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 80093a4:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 80093a8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80093ac:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 80093b0:	ee1c 1a10 	vmov	r1, s24
 80093b4:	4638      	mov	r0, r7
 80093b6:	4798      	blx	r3
 80093b8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80093bc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80093c0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80093c4:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 80093c8:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 80093cc:	2b00      	cmp	r3, #0
 80093ce:	d097      	beq.n	8009300 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80093d0:	49c1      	ldr	r1, [pc, #772]	; (80096d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 80093d2:	880b      	ldrh	r3, [r1, #0]
 80093d4:	2b32      	cmp	r3, #50	; 0x32
 80093d6:	d99d      	bls.n	8009314 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 80093d8:	4bbc      	ldr	r3, [pc, #752]	; (80096cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 80093da:	2132      	movs	r1, #50	; 0x32
 80093dc:	6818      	ldr	r0, [r3, #0]
 80093de:	f001 f9ff 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 80093e2:	4abb      	ldr	r2, [pc, #748]	; (80096d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 80093e4:	4603      	mov	r3, r0
 80093e6:	210a      	movs	r1, #10
 80093e8:	4648      	mov	r0, r9
 80093ea:	f012 fd37 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80093ee:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 80093f0:	4ab8      	ldr	r2, [pc, #736]	; (80096d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 80093f2:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 80093f6:	4601      	mov	r1, r0
 80093f8:	f04f 0935 	mov.w	r9, #53	; 0x35
 80093fc:	ee1c 0a10 	vmov	r0, s24
 8009400:	920a      	str	r2, [sp, #40]	; 0x28
 8009402:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8009406:	f00c f8cb 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800940a:	ee1c 1a10 	vmov	r1, s24
 800940e:	4630      	mov	r0, r6
 8009410:	f009 fa9e 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 209, 240, 15);
 8009414:	200f      	movs	r0, #15
 8009416:	22d1      	movs	r2, #209	; 0xd1
 8009418:	9000      	str	r0, [sp, #0]
 800941a:	23f0      	movs	r3, #240	; 0xf0
 800941c:	ee1c 0a90 	vmov	r0, s25
 8009420:	4629      	mov	r1, r5
 8009422:	f7fa f9d8 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009426:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 800942a:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 800942e:	4638      	mov	r0, r7
 8009430:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009434:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8009438:	ee1c 1a90 	vmov	r1, s25
 800943c:	4798      	blx	r3
 800943e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009442:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8009446:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800944a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800944e:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8009452:	2b00      	cmp	r3, #0
 8009454:	f43f af54 	beq.w	8009300 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009458:	499f      	ldr	r1, [pc, #636]	; (80096d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 800945a:	880b      	ldrh	r3, [r1, #0]
 800945c:	2b33      	cmp	r3, #51	; 0x33
 800945e:	f67f af59 	bls.w	8009314 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 8009462:	4b9a      	ldr	r3, [pc, #616]	; (80096cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 8009464:	2133      	movs	r1, #51	; 0x33
 8009466:	6818      	ldr	r0, [r3, #0]
 8009468:	f001 f9ba 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 800946c:	4a98      	ldr	r2, [pc, #608]	; (80096d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 800946e:	4603      	mov	r3, r0
 8009470:	210a      	movs	r1, #10
 8009472:	4638      	mov	r0, r7
 8009474:	f012 fcf2 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009478:	4a96      	ldr	r2, [pc, #600]	; (80096d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 800947a:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 800947e:	2336      	movs	r3, #54	; 0x36
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009480:	ee1c 0a90 	vmov	r0, s25
 8009484:	a90a      	add	r1, sp, #40	; 0x28
 8009486:	920a      	str	r2, [sp, #40]	; 0x28
 8009488:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800948c:	f00c f888 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009490:	ee1c 1a90 	vmov	r1, s25
 8009494:	4630      	mov	r0, r6
 8009496:	f009 fa5b 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800949a:	2304      	movs	r3, #4
    SMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800949c:	a90a      	add	r1, sp, #40	; 0x28
 800949e:	4650      	mov	r0, sl
 80094a0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80094a4:	f009 f9e6 	bl	8012874 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_Gauge.setPosition(28, 103, 184, 106);
 80094a8:	236a      	movs	r3, #106	; 0x6a
 80094aa:	9300      	str	r3, [sp, #0]
 80094ac:	2267      	movs	r2, #103	; 0x67
 80094ae:	23b8      	movs	r3, #184	; 0xb8
 80094b0:	211c      	movs	r1, #28
 80094b2:	4650      	mov	r0, sl
 80094b4:	f7fa f98f 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_Gauge.setCenter(92, 92);
 80094b8:	225c      	movs	r2, #92	; 0x5c
 80094ba:	4611      	mov	r1, r2
 80094bc:	4650      	mov	r0, sl
 80094be:	f00c fb8e 	bl	8015bde <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_Gauge.setStartEndAngle(-90, 90);
 80094c2:	225a      	movs	r2, #90	; 0x5a
 80094c4:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80094c8:	4650      	mov	r0, sl
 80094ca:	f00c fc0d 	bl	8015ce8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_Gauge.setRange(-90, 90);
 80094ce:	462b      	mov	r3, r5
 80094d0:	225a      	movs	r2, #90	; 0x5a
 80094d2:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80094d6:	4650      	mov	r0, sl
 80094d8:	9500      	str	r5, [sp, #0]
 80094da:	f009 f878 	bl	80125ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_Gauge.setValue(0);
 80094de:	4629      	mov	r1, r5
 80094e0:	4650      	mov	r0, sl
 80094e2:	f00c fbab 	bl	8015c3c <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80094e6:	464b      	mov	r3, r9
 80094e8:	2208      	movs	r2, #8
 80094ea:	2105      	movs	r1, #5
 80094ec:	4650      	mov	r0, sl
 80094ee:	f00c fb61 	bl	8015bb4 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80094f2:	2101      	movs	r1, #1
 80094f4:	4650      	mov	r0, sl
 80094f6:	f00c faff 	bl	8015af8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80094fa:	2101      	movs	r1, #1
 80094fc:	4650      	mov	r0, sl
 80094fe:	f00c fafe 	bl	8015afe <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8009502:	4651      	mov	r1, sl
 8009504:	4630      	mov	r0, r6
 8009506:	f009 fa23 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 800950a:	230a      	movs	r3, #10
 800950c:	ee18 0a10 	vmov	r0, s16
 8009510:	9300      	str	r3, [sp, #0]
 8009512:	224b      	movs	r2, #75	; 0x4b
 8009514:	23f0      	movs	r3, #240	; 0xf0
 8009516:	4629      	mov	r1, r5
 8009518:	f7fa f95d 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800951c:	9b02      	ldr	r3, [sp, #8]
 800951e:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009522:	22a0      	movs	r2, #160	; 0xa0
 8009524:	4611      	mov	r1, r2
 8009526:	ee18 0a10 	vmov	r0, s16
 800952a:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800952e:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8009532:	f00b fbef 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009536:	ee18 0a10 	vmov	r0, s16
 800953a:	22a0      	movs	r2, #160	; 0xa0
 800953c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009540:	f00b fbf3 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009544:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009548:	2b20      	cmp	r3, #32
 800954a:	d006      	beq.n	800955a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x58e>
        lineWidthQ5 = widthQ5;
 800954c:	2320      	movs	r3, #32
        updateCachedShape();
 800954e:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8009552:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8009556:	f00b fae7 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800955a:	ee18 0a10 	vmov	r0, s16
 800955e:	2101      	movs	r1, #1
 8009560:	f00b fbee 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009564:	ee18 1a10 	vmov	r1, s16
 8009568:	4630      	mov	r0, r6
 800956a:	f009 f9f1 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800956e:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 8009572:	223c      	movs	r2, #60	; 0x3c
 8009574:	ee19 0a10 	vmov	r0, s18
 8009578:	211f      	movs	r1, #31
        linespace = space;
 800957a:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 800957e:	ad04      	add	r5, sp, #16
 8009580:	f7fa f91c 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8009584:	ee19 1a10 	vmov	r1, s18
 8009588:	4628      	mov	r0, r5
        color = newColor;
 800958a:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 800958e:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8009592:	f00b fd6b 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009596:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800959a:	ee19 3a10 	vmov	r3, s18
 800959e:	333c      	adds	r3, #60	; 0x3c
 80095a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80095a4:	4f4b      	ldr	r7, [pc, #300]	; (80096d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 80095a6:	970a      	str	r7, [sp, #40]	; 0x28
 80095a8:	2351      	movs	r3, #81	; 0x51
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80095aa:	ee19 0a10 	vmov	r0, s18
 80095ae:	a90a      	add	r1, sp, #40	; 0x28
 80095b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80095b4:	f00b fff4 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80095b8:	ee19 1a10 	vmov	r1, s18
 80095bc:	4630      	mov	r0, r6
 80095be:	f009 f9c7 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80095c2:	230a      	movs	r3, #10
 80095c4:	ee18 0a90 	vmov	r0, s17
 80095c8:	9300      	str	r3, [sp, #0]
 80095ca:	2232      	movs	r2, #50	; 0x32
 80095cc:	23f0      	movs	r3, #240	; 0xf0
 80095ce:	4649      	mov	r1, r9
 80095d0:	f7fa f901 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80095d4:	9b03      	ldr	r3, [sp, #12]
 80095d6:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80095da:	22a0      	movs	r2, #160	; 0xa0
 80095dc:	4611      	mov	r1, r2
 80095de:	ee18 0a90 	vmov	r0, s17
 80095e2:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 80095e6:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 80095ea:	f00b fb93 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80095ee:	ee18 0a90 	vmov	r0, s17
 80095f2:	22a0      	movs	r2, #160	; 0xa0
 80095f4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80095f8:	f00b fb97 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80095fc:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8009600:	2b20      	cmp	r3, #32
 8009602:	d006      	beq.n	8009612 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x646>
        lineWidthQ5 = widthQ5;
 8009604:	2320      	movs	r3, #32
        updateCachedShape();
 8009606:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 800960a:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 800960e:	f00b fa8b 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009612:	ee18 0a90 	vmov	r0, s17
 8009616:	2101      	movs	r1, #1
 8009618:	f00b fb92 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800961c:	ee18 1a90 	vmov	r1, s17
 8009620:	4630      	mov	r0, r6
 8009622:	f009 f995 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009626:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 800962a:	ee19 0a90 	vmov	r0, s19
 800962e:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8009630:	f04f 0800 	mov.w	r8, #0
 8009634:	2145      	movs	r1, #69	; 0x45
 8009636:	f7fa f8c1 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800963a:	ee19 1a90 	vmov	r1, s19
 800963e:	4628      	mov	r0, r5
        color = newColor;
 8009640:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8009644:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009648:	f00b fd10 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800964c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009650:	ee19 3a90 	vmov	r3, s19
 8009654:	333c      	adds	r3, #60	; 0x3c
 8009656:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800965a:	2358      	movs	r3, #88	; 0x58
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 800965c:	ee19 0a90 	vmov	r0, s19
 8009660:	a90a      	add	r1, sp, #40	; 0x28
 8009662:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009666:	970a      	str	r7, [sp, #40]	; 0x28
 8009668:	f00b ff9a 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800966c:	ee19 1a90 	vmov	r1, s19
 8009670:	4630      	mov	r0, r6
 8009672:	f009 f96d 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_titel.setXY(54, 12);
 8009676:	ee1a 0a10 	vmov	r0, s20
 800967a:	220c      	movs	r2, #12
 800967c:	2136      	movs	r1, #54	; 0x36
 800967e:	f7fa f89d 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8009682:	ee1a 1a10 	vmov	r1, s20
 8009686:	4628      	mov	r0, r5
        color = newColor;
 8009688:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 800968c:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009690:	f00b fcec 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009694:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009698:	ee1a 3a10 	vmov	r3, s20
 800969c:	333c      	adds	r3, #60	; 0x3c
 800969e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80096a2:	2357      	movs	r3, #87	; 0x57
    textArea_titel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 80096a4:	ee1a 0a10 	vmov	r0, s20
 80096a8:	a90a      	add	r1, sp, #40	; 0x28
 80096aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80096ae:	970a      	str	r7, [sp, #40]	; 0x28
 80096b0:	f00b ff76 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80096b4:	4630      	mov	r0, r6
 80096b6:	ee1a 1a10 	vmov	r1, s20
 80096ba:	f009 f949 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80096be:	4620      	mov	r0, r4
 80096c0:	b00d      	add	sp, #52	; 0x34
 80096c2:	ecbd 8b0a 	vpop	{d8-d12}
 80096c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80096ca:	bf00      	nop
 80096cc:	200138b8 	.word	0x200138b8
 80096d0:	0802f6b1 	.word	0x0802f6b1
 80096d4:	0802f724 	.word	0x0802f724
 80096d8:	200138b0 	.word	0x200138b0

080096dc <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 80096dc:	4770      	bx	lr

080096de <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80096de:	4770      	bx	lr

080096e0 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80096e0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80096e2:	68c2      	ldr	r2, [r0, #12]
 80096e4:	6844      	ldr	r4, [r0, #4]
 80096e6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80096e8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80096ea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80096ee:	07d2      	lsls	r2, r2, #31
 80096f0:	bf48      	it	mi
 80096f2:	5962      	ldrmi	r2, [r4, r5]
 80096f4:	689b      	ldr	r3, [r3, #8]
    }
 80096f6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80096f8:	bf48      	it	mi
 80096fa:	58d3      	ldrmi	r3, [r2, r3]
 80096fc:	4718      	bx	r3

080096fe <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80096fe:	6843      	ldr	r3, [r0, #4]
 8009700:	b12b      	cbz	r3, 800970e <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8009702:	6883      	ldr	r3, [r0, #8]
 8009704:	b92b      	cbnz	r3, 8009712 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8009706:	68c0      	ldr	r0, [r0, #12]
 8009708:	f000 0001 	and.w	r0, r0, #1
 800970c:	4770      	bx	lr
 800970e:	4618      	mov	r0, r3
 8009710:	4770      	bx	lr
 8009712:	2001      	movs	r0, #1
    }
 8009714:	4770      	bx	lr

08009716 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009716:	b510      	push	{r4, lr}
 8009718:	2110      	movs	r1, #16
 800971a:	4604      	mov	r4, r0
 800971c:	f023 fb4d 	bl	802cdba <_ZdlPvj>
 8009720:	4620      	mov	r0, r4
 8009722:	bd10      	pop	{r4, pc}

08009724 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8009724:	b510      	push	{r4, lr}
 8009726:	4b03      	ldr	r3, [pc, #12]	; (8009734 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8009728:	6003      	str	r3, [r0, #0]
 800972a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800972c:	f00d fce6 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009730:	4620      	mov	r0, r4
 8009732:	bd10      	pop	{r4, pc}
 8009734:	08030edc 	.word	0x08030edc

08009738 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8009738:	b507      	push	{r0, r1, r2, lr}
 800973a:	4b07      	ldr	r3, [pc, #28]	; (8009758 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 800973c:	6003      	str	r3, [r0, #0]
 800973e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009740:	f00d fcdc 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009744:	9801      	ldr	r0, [sp, #4]
 8009746:	f241 4178 	movw	r1, #5240	; 0x1478
 800974a:	f023 fb36 	bl	802cdba <_ZdlPvj>
 800974e:	9801      	ldr	r0, [sp, #4]
 8009750:	b003      	add	sp, #12
 8009752:	f85d fb04 	ldr.w	pc, [sp], #4
 8009756:	bf00      	nop
 8009758:	08030edc 	.word	0x08030edc

0800975c <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_return)
 800975c:	3098      	adds	r0, #152	; 0x98
 800975e:	4288      	cmp	r0, r1
{
 8009760:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 8009762:	d105      	bne.n	8009770 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009764:	f00f f9cc 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_return clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8009768:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800976c:	f7fb bfdc 	b.w	8005728 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8009770:	bd08      	pop	{r3, pc}
	...

08009774 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8009774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009778:	ed2d 8b0a 	vpush	{d8-d12}
 800977c:	4604      	mov	r4, r0
 800977e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8009780:	46a0      	mov	r8, r4
 8009782:	2500      	movs	r5, #0
 8009784:	f010 fe3c 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 8009788:	4bcd      	ldr	r3, [pc, #820]	; (8009ac0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x34c>)
 800978a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800978c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8009790:	2226      	movs	r2, #38	; 0x26
 8009792:	4629      	mov	r1, r5
 8009794:	4640      	mov	r0, r8
 8009796:	f024 fbfc 	bl	802df92 <memset>
 800979a:	4640      	mov	r0, r8
 800979c:	f7fa f840 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 80097a0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80097a4:	26ff      	movs	r6, #255	; 0xff
 80097a6:	4bc7      	ldr	r3, [pc, #796]	; (8009ac4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x350>)
 80097a8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80097aa:	2226      	movs	r2, #38	; 0x26
 80097ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80097b0:	4629      	mov	r1, r5
 80097b2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80097b6:	4638      	mov	r0, r7
 80097b8:	66a5      	str	r5, [r4, #104]	; 0x68
 80097ba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80097be:	f024 fbe8 	bl	802df92 <memset>
 80097c2:	4638      	mov	r0, r7
 80097c4:	f7fa f82c 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 80097c8:	4bbf      	ldr	r3, [pc, #764]	; (8009ac8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x354>)
 80097ca:	66e3      	str	r3, [r4, #108]	; 0x6c
 80097cc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80097d0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80097d4:	a90a      	add	r1, sp, #40	; 0x28
 80097d6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80097da:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 80097dc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80097e0:	f00c fc8f 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80097e4:	4658      	mov	r0, fp
 80097e6:	f00c fdc3 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80097ea:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80097ee:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80097f2:	4618      	mov	r0, r3
 80097f4:	ee0a 3a90 	vmov	s21, r3
 80097f8:	f7fa f876 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 80097fc:	4648      	mov	r0, r9
 80097fe:	f7fa f873 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009802:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8009806:	4618      	mov	r0, r3
 8009808:	ee0b 3a10 	vmov	s22, r3
 800980c:	f7fa f86c 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009810:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8009814:	4618      	mov	r0, r3
 8009816:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800981a:	4eac      	ldr	r6, [pc, #688]	; (8009acc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x358>)
        : TextArea()
 800981c:	f7fa f864 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009820:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8009824:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8009828:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800982a:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 800982e:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8009832:	f7fa f859 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009836:	f504 7314 	add.w	r3, r4, #592	; 0x250
 800983a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800983c:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8009840:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8009844:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8009848:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 800984c:	f7fa f84c 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009850:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8009854:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8009858:	4650      	mov	r0, sl
 800985a:	f00c f915 	bl	8015a88 <_ZN8touchgfx5GaugeC1Ev>
 800985e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8009862:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8009864:	4e9a      	ldr	r6, [pc, #616]	; (8009ad0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x35c>)
 8009866:	ee08 3a10 	vmov	s16, r3
 800986a:	f00b f93d 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 800986e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8009872:	4618      	mov	r0, r3
 8009874:	9302      	str	r3, [sp, #8]
 8009876:	f7f9 fdd7 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800987a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800987e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8009882:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8009886:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 800988a:	4618      	mov	r0, r3
 800988c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8009890:	ee09 3a10 	vmov	s18, r3
 8009894:	f7fa f828 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009898:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800989c:	4618      	mov	r0, r3
 800989e:	ee08 3a90 	vmov	s17, r3
 80098a2:	f00b f921 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 80098a6:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 80098aa:	4618      	mov	r0, r3
 80098ac:	9303      	str	r3, [sp, #12]
 80098ae:	f7f9 fdbb 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80098b2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80098b6:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 80098ba:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 80098be:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 80098c2:	4618      	mov	r0, r3
 80098c4:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 80098c8:	ee09 3a90 	vmov	s19, r3
 80098cc:	f7fa f80c 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 80098d0:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80098d4:	4618      	mov	r0, r3
 80098d6:	ee0a 3a10 	vmov	s20, r3
 80098da:	f7fa f805 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80098de:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80098e2:	4a7c      	ldr	r2, [pc, #496]	; (8009ad4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x360>)
 80098e4:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 80098e8:	4a7b      	ldr	r2, [pc, #492]	; (8009ad8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x364>)
 80098ea:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 80098ee:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 80098f2:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80098f6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80098fa:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80098fe:	f00d fbf3 	bl	80170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8009902:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8009906:	462a      	mov	r2, r5
 8009908:	4640      	mov	r0, r8
 800990a:	9300      	str	r3, [sp, #0]
 800990c:	4629      	mov	r1, r5
 800990e:	23f0      	movs	r3, #240	; 0xf0
 8009910:	f7f9 ff61 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009914:	1d26      	adds	r6, r4, #4
        color = newColor;
 8009916:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800991a:	66a3      	str	r3, [r4, #104]	; 0x68
 800991c:	4641      	mov	r1, r8
 800991e:	4630      	mov	r0, r6
 8009920:	f009 f816 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009924:	462a      	mov	r2, r5
 8009926:	4638      	mov	r0, r7
 8009928:	4629      	mov	r1, r5
 800992a:	f7f9 ff47 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800992e:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009932:	4638      	mov	r0, r7
 8009934:	a90a      	add	r1, sp, #40	; 0x28
 8009936:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800993a:	f00c fbe2 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800993e:	4639      	mov	r1, r7
 8009940:	4630      	mov	r0, r6
 8009942:	f009 f805 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 8009946:	4658      	mov	r0, fp
 8009948:	f44f 7280 	mov.w	r2, #256	; 0x100
 800994c:	2121      	movs	r1, #33	; 0x21
 800994e:	f7f9 ff35 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8009952:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8009954:	aa0a      	add	r2, sp, #40	; 0x28
 8009956:	a909      	add	r1, sp, #36	; 0x24
 8009958:	4658      	mov	r0, fp
 800995a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800995e:	2302      	movs	r3, #2
 8009960:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009964:	f00c f9d7 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8009968:	2359      	movs	r3, #89	; 0x59
        updateTextPosition();
 800996a:	4658      	mov	r0, fp
 800996c:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8009970:	f7f9 ff68 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 8009974:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8009978:	f04f 38ff 	mov.w	r8, #4294967295
 800997c:	3308      	adds	r3, #8
 800997e:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8009982:	4659      	mov	r1, fp
 8009984:	4630      	mov	r0, r6
        colorPressed = col;
 8009986:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 800998a:	af04      	add	r7, sp, #16
 800998c:	f008 ffe0 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8009990:	22c2      	movs	r2, #194	; 0xc2
 8009992:	ee1a 0a90 	vmov	r0, s21
 8009996:	4629      	mov	r1, r5
 8009998:	f7f9 ff10 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800999c:	ee1a 1a90 	vmov	r1, s21
 80099a0:	4638      	mov	r0, r7
        color = newColor;
 80099a2:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 80099a6:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80099aa:	f00b fb5f 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80099ae:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80099b2:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80099b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80099ba:	4b48      	ldr	r3, [pc, #288]	; (8009adc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 80099bc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C7CD));
 80099be:	ee1a 0a90 	vmov	r0, s21
 80099c2:	2313      	movs	r3, #19
 80099c4:	a90a      	add	r1, sp, #40	; 0x28
 80099c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80099ca:	f00b fde9 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80099ce:	ee1a 1a90 	vmov	r1, s21
 80099d2:	4630      	mov	r0, r6
 80099d4:	f008 ffbc 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 80099d8:	22c2      	movs	r2, #194	; 0xc2
 80099da:	4648      	mov	r0, r9
 80099dc:	21d9      	movs	r1, #217	; 0xd9
 80099de:	f7f9 feed 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80099e2:	4649      	mov	r1, r9
 80099e4:	4638      	mov	r0, r7
        color = newColor;
 80099e6:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 80099ea:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80099ee:	f00b fb3d 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80099f2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80099f6:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80099fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80099fe:	4b37      	ldr	r3, [pc, #220]	; (8009adc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 8009a00:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_85IX));
 8009a02:	4648      	mov	r0, r9
 8009a04:	2312      	movs	r3, #18
 8009a06:	a90a      	add	r1, sp, #40	; 0x28
 8009a08:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009a0c:	f00b fdc8 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009a10:	4649      	mov	r1, r9
 8009a12:	4630      	mov	r0, r6
 8009a14:	f008 ff9c 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8009a18:	2255      	movs	r2, #85	; 0x55
 8009a1a:	ee1b 0a10 	vmov	r0, s22
 8009a1e:	2171      	movs	r1, #113	; 0x71
 8009a20:	f7f9 fecc 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8009a24:	ee1b 1a10 	vmov	r1, s22
 8009a28:	4638      	mov	r0, r7
        color = newColor;
 8009a2a:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8009a2e:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8009a32:	f00b fb1b 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009a36:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009a3a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8009a3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009a42:	4b26      	ldr	r3, [pc, #152]	; (8009adc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 8009a44:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XVJO));
 8009a46:	ee1b 0a10 	vmov	r0, s22
 8009a4a:	2314      	movs	r3, #20
 8009a4c:	a90a      	add	r1, sp, #40	; 0x28
 8009a4e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009a52:	f00b fda5 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009a56:	ee1b 1a10 	vmov	r1, s22
 8009a5a:	4630      	mov	r0, r6
 8009a5c:	f008 ff78 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Current.setPosition(0, 239, 240, 15);
 8009a60:	230f      	movs	r3, #15
 8009a62:	22ef      	movs	r2, #239	; 0xef
 8009a64:	ee1b 0a90 	vmov	r0, s23
 8009a68:	9300      	str	r3, [sp, #0]
 8009a6a:	4629      	mov	r1, r5
 8009a6c:	23f0      	movs	r3, #240	; 0xf0
 8009a6e:	f7f9 feb2 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009a72:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8009a76:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8009a7a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009a7e:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8009a82:	ee1b 1a90 	vmov	r1, s23
 8009a86:	4638      	mov	r0, r7
 8009a88:	4798      	blx	r3
 8009a8a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009a8e:	f8df b064 	ldr.w	fp, [pc, #100]	; 8009af4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x380>
 8009a92:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8009a96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009a9a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_CurrentBuffer, SMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HT0R).getText());
 8009a9e:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8009aa2:	b92b      	cbnz	r3, 8009ab0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x33c>
 8009aa4:	4b0e      	ldr	r3, [pc, #56]	; (8009ae0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x36c>)
 8009aa6:	4a0f      	ldr	r2, [pc, #60]	; (8009ae4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009aa8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009aaa:	480f      	ldr	r0, [pc, #60]	; (8009ae8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x374>)
 8009aac:	f024 f86c 	bl	802db88 <__assert_func>
 8009ab0:	4b0e      	ldr	r3, [pc, #56]	; (8009aec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x378>)
 8009ab2:	881b      	ldrh	r3, [r3, #0]
 8009ab4:	2b18      	cmp	r3, #24
 8009ab6:	d81f      	bhi.n	8009af8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x384>
 8009ab8:	4b0d      	ldr	r3, [pc, #52]	; (8009af0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x37c>)
 8009aba:	4a0a      	ldr	r2, [pc, #40]	; (8009ae4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009abc:	2161      	movs	r1, #97	; 0x61
 8009abe:	e7f4      	b.n	8009aaa <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x336>
 8009ac0:	08030edc 	.word	0x08030edc
 8009ac4:	08031c78 	.word	0x08031c78
 8009ac8:	08031ec4 	.word	0x08031ec4
 8009acc:	0802f7c4 	.word	0x0802f7c4
 8009ad0:	080319ac 	.word	0x080319ac
 8009ad4:	08030ec4 	.word	0x08030ec4
 8009ad8:	0800975d 	.word	0x0800975d
 8009adc:	0802f724 	.word	0x0802f724
 8009ae0:	0802f574 	.word	0x0802f574
 8009ae4:	0802f679 	.word	0x0802f679
 8009ae8:	0802f5f1 	.word	0x0802f5f1
 8009aec:	200138b0 	.word	0x200138b0
 8009af0:	0802f638 	.word	0x0802f638
 8009af4:	200138ac 	.word	0x200138ac
        return texts->getText(typedTextId);
 8009af8:	4bdc      	ldr	r3, [pc, #880]	; (8009e6c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009afa:	2118      	movs	r1, #24
 8009afc:	6818      	ldr	r0, [r3, #0]
 8009afe:	f000 fe6f 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8009b02:	4adb      	ldr	r2, [pc, #876]	; (8009e70 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009b04:	4603      	mov	r3, r0
 8009b06:	210a      	movs	r1, #10
 8009b08:	4648      	mov	r0, r9
 8009b0a:	f012 f9a7 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009b0e:	4ad9      	ldr	r2, [pc, #868]	; (8009e74 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
        wc1 = value;
 8009b10:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
 8009b14:	2319      	movs	r3, #25
    SMD3_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6OVJ));
 8009b16:	ee1b 0a90 	vmov	r0, s23
 8009b1a:	a90a      	add	r1, sp, #40	; 0x28
 8009b1c:	920a      	str	r2, [sp, #40]	; 0x28
 8009b1e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009b22:	f00b fd3d 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009b26:	ee1b 1a90 	vmov	r1, s23
 8009b2a:	4630      	mov	r0, r6
 8009b2c:	f008 ff10 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Frequency.setPosition(0, 224, 240, 15);
 8009b30:	210f      	movs	r1, #15
 8009b32:	22e0      	movs	r2, #224	; 0xe0
 8009b34:	ee1c 0a10 	vmov	r0, s24
 8009b38:	9100      	str	r1, [sp, #0]
 8009b3a:	23f0      	movs	r3, #240	; 0xf0
 8009b3c:	4629      	mov	r1, r5
 8009b3e:	f7f9 fe4a 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009b42:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8009b46:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8009b4a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009b4e:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8009b52:	ee1c 1a10 	vmov	r1, s24
 8009b56:	4638      	mov	r0, r7
 8009b58:	4798      	blx	r3
 8009b5a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009b5e:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8009b62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009b66:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_FrequencyBuffer, SMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YT2E).getText());
 8009b6a:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8009b6e:	2b00      	cmp	r3, #0
 8009b70:	d098      	beq.n	8009aa4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009b72:	49c1      	ldr	r1, [pc, #772]	; (8009e78 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009b74:	880b      	ldrh	r3, [r1, #0]
 8009b76:	2b16      	cmp	r3, #22
 8009b78:	d99e      	bls.n	8009ab8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009b7a:	4bbc      	ldr	r3, [pc, #752]	; (8009e6c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009b7c:	2116      	movs	r1, #22
 8009b7e:	6818      	ldr	r0, [r3, #0]
 8009b80:	f000 fe2e 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8009b84:	4aba      	ldr	r2, [pc, #744]	; (8009e70 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009b86:	4603      	mov	r3, r0
 8009b88:	210a      	movs	r1, #10
 8009b8a:	4648      	mov	r0, r9
 8009b8c:	f012 f966 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD3_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W5I5));
 8009b90:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 8009b92:	4ab8      	ldr	r2, [pc, #736]	; (8009e74 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009b94:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8009b98:	2317      	movs	r3, #23
 8009b9a:	4601      	mov	r1, r0
 8009b9c:	ee1c 0a10 	vmov	r0, s24
 8009ba0:	920a      	str	r2, [sp, #40]	; 0x28
 8009ba2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009ba6:	f00b fcfb 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009baa:	ee1c 1a10 	vmov	r1, s24
 8009bae:	4630      	mov	r0, r6
 8009bb0:	f008 fece 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Distance.setPosition(0, 209, 240, 15);
 8009bb4:	200f      	movs	r0, #15
 8009bb6:	22d1      	movs	r2, #209	; 0xd1
 8009bb8:	9000      	str	r0, [sp, #0]
 8009bba:	23f0      	movs	r3, #240	; 0xf0
 8009bbc:	ee1c 0a90 	vmov	r0, s25
 8009bc0:	4629      	mov	r1, r5
 8009bc2:	f7f9 fe08 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009bc6:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8009bca:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8009bce:	4638      	mov	r0, r7
 8009bd0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009bd4:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8009bd8:	ee1c 1a90 	vmov	r1, s25
 8009bdc:	4798      	blx	r3
 8009bde:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009be2:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8009be6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009bea:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_DistanceBuffer, SMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EK4L).getText());
 8009bee:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8009bf2:	2b00      	cmp	r3, #0
 8009bf4:	f43f af56 	beq.w	8009aa4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009bf8:	499f      	ldr	r1, [pc, #636]	; (8009e78 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009bfa:	880b      	ldrh	r3, [r1, #0]
 8009bfc:	2b15      	cmp	r3, #21
 8009bfe:	f67f af5b 	bls.w	8009ab8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009c02:	4b9a      	ldr	r3, [pc, #616]	; (8009e6c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009c04:	2115      	movs	r1, #21
 8009c06:	6818      	ldr	r0, [r3, #0]
 8009c08:	f000 fdea 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8009c0c:	4a98      	ldr	r2, [pc, #608]	; (8009e70 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009c0e:	4603      	mov	r3, r0
 8009c10:	210a      	movs	r1, #10
 8009c12:	4638      	mov	r0, r7
 8009c14:	f012 f922 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009c18:	4a96      	ldr	r2, [pc, #600]	; (8009e74 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009c1a:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8009c1e:	2336      	movs	r3, #54	; 0x36
    SMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009c20:	ee1c 0a90 	vmov	r0, s25
 8009c24:	a90a      	add	r1, sp, #40	; 0x28
 8009c26:	920a      	str	r2, [sp, #40]	; 0x28
 8009c28:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009c2c:	f00b fcb8 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009c30:	ee1c 1a90 	vmov	r1, s25
 8009c34:	4630      	mov	r0, r6
 8009c36:	f008 fe8b 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009c3a:	2304      	movs	r3, #4
    SMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009c3c:	a90a      	add	r1, sp, #40	; 0x28
 8009c3e:	4650      	mov	r0, sl
 8009c40:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009c44:	f008 fe16 	bl	8012874 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD3_Gauge.setPosition(28, 103, 184, 106);
 8009c48:	236a      	movs	r3, #106	; 0x6a
 8009c4a:	9300      	str	r3, [sp, #0]
 8009c4c:	2267      	movs	r2, #103	; 0x67
 8009c4e:	23b8      	movs	r3, #184	; 0xb8
 8009c50:	211c      	movs	r1, #28
 8009c52:	4650      	mov	r0, sl
 8009c54:	f7f9 fdbf 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD3_Gauge.setCenter(92, 92);
 8009c58:	225c      	movs	r2, #92	; 0x5c
 8009c5a:	4611      	mov	r1, r2
 8009c5c:	4650      	mov	r0, sl
 8009c5e:	f00b ffbe 	bl	8015bde <_ZN8touchgfx5Gauge9setCenterEii>
    SMD3_Gauge.setStartEndAngle(-90, 90);
 8009c62:	225a      	movs	r2, #90	; 0x5a
 8009c64:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009c68:	4650      	mov	r0, sl
 8009c6a:	f00c f83d 	bl	8015ce8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD3_Gauge.setRange(-90, 90);
 8009c6e:	462b      	mov	r3, r5
 8009c70:	225a      	movs	r2, #90	; 0x5a
 8009c72:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009c76:	4650      	mov	r0, sl
 8009c78:	9500      	str	r5, [sp, #0]
 8009c7a:	f008 fca8 	bl	80125ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD3_Gauge.setValue(0);
 8009c7e:	4629      	mov	r1, r5
 8009c80:	4650      	mov	r0, sl
 8009c82:	f00b ffdb 	bl	8015c3c <_ZN8touchgfx5Gauge8setValueEi>
    SMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8009c86:	2335      	movs	r3, #53	; 0x35
 8009c88:	2208      	movs	r2, #8
 8009c8a:	2105      	movs	r1, #5
 8009c8c:	4650      	mov	r0, sl
 8009c8e:	f00b ff91 	bl	8015bb4 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009c92:	2101      	movs	r1, #1
 8009c94:	4650      	mov	r0, sl
 8009c96:	f00b ff2f 	bl	8015af8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009c9a:	2101      	movs	r1, #1
 8009c9c:	4650      	mov	r0, sl
 8009c9e:	f00b ff2e 	bl	8015afe <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8009ca2:	4651      	mov	r1, sl
 8009ca4:	4630      	mov	r0, r6
 8009ca6:	f008 fe53 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8009caa:	230a      	movs	r3, #10
 8009cac:	ee18 0a10 	vmov	r0, s16
 8009cb0:	9300      	str	r3, [sp, #0]
 8009cb2:	224b      	movs	r2, #75	; 0x4b
 8009cb4:	23f0      	movs	r3, #240	; 0xf0
 8009cb6:	4629      	mov	r1, r5
 8009cb8:	f7f9 fd8d 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009cbc:	9b02      	ldr	r3, [sp, #8]
 8009cbe:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009cc2:	22a0      	movs	r2, #160	; 0xa0
 8009cc4:	4611      	mov	r1, r2
 8009cc6:	ee18 0a10 	vmov	r0, s16
 8009cca:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8009cce:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8009cd2:	f00b f81f 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009cd6:	ee18 0a10 	vmov	r0, s16
 8009cda:	22a0      	movs	r2, #160	; 0xa0
 8009cdc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009ce0:	f00b f823 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009ce4:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009ce8:	2b20      	cmp	r3, #32
 8009cea:	d006      	beq.n	8009cfa <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x586>
        lineWidthQ5 = widthQ5;
 8009cec:	2320      	movs	r3, #32
        updateCachedShape();
 8009cee:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8009cf2:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8009cf6:	f00a ff17 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009cfa:	ee18 0a10 	vmov	r0, s16
 8009cfe:	2101      	movs	r1, #1
 8009d00:	f00b f81e 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009d04:	ee18 1a10 	vmov	r1, s16
 8009d08:	4630      	mov	r0, r6
 8009d0a:	f008 fe21 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009d0e:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 8009d12:	223c      	movs	r2, #60	; 0x3c
 8009d14:	ee19 0a10 	vmov	r0, s18
 8009d18:	211f      	movs	r1, #31
        linespace = space;
 8009d1a:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8009d1e:	ad04      	add	r5, sp, #16
 8009d20:	f7f9 fd4c 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8009d24:	ee19 1a10 	vmov	r1, s18
 8009d28:	4628      	mov	r0, r5
        color = newColor;
 8009d2a:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009d2e:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8009d32:	f00b f99b 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009d36:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009d3a:	ee19 3a10 	vmov	r3, s18
 8009d3e:	333c      	adds	r3, #60	; 0x3c
 8009d40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009d44:	4f4b      	ldr	r7, [pc, #300]	; (8009e74 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009d46:	970a      	str	r7, [sp, #40]	; 0x28
 8009d48:	2350      	movs	r3, #80	; 0x50
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8009d4a:	ee19 0a10 	vmov	r0, s18
 8009d4e:	a90a      	add	r1, sp, #40	; 0x28
 8009d50:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009d54:	f00b fc24 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009d58:	ee19 1a10 	vmov	r1, s18
 8009d5c:	4630      	mov	r0, r6
 8009d5e:	f008 fdf7 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8009d62:	230a      	movs	r3, #10
 8009d64:	ee18 0a90 	vmov	r0, s17
 8009d68:	9300      	str	r3, [sp, #0]
 8009d6a:	2232      	movs	r2, #50	; 0x32
 8009d6c:	23f0      	movs	r3, #240	; 0xf0
 8009d6e:	4649      	mov	r1, r9
 8009d70:	f7f9 fd31 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009d74:	9b03      	ldr	r3, [sp, #12]
 8009d76:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009d7a:	22a0      	movs	r2, #160	; 0xa0
 8009d7c:	4611      	mov	r1, r2
 8009d7e:	ee18 0a90 	vmov	r0, s17
 8009d82:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8009d86:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8009d8a:	f00a ffc3 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009d8e:	ee18 0a90 	vmov	r0, s17
 8009d92:	22a0      	movs	r2, #160	; 0xa0
 8009d94:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009d98:	f00a ffc7 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009d9c:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8009da0:	2b20      	cmp	r3, #32
 8009da2:	d006      	beq.n	8009db2 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x63e>
        lineWidthQ5 = widthQ5;
 8009da4:	2320      	movs	r3, #32
        updateCachedShape();
 8009da6:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8009daa:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8009dae:	f00a febb 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009db2:	ee18 0a90 	vmov	r0, s17
 8009db6:	2101      	movs	r1, #1
 8009db8:	f00a ffc2 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009dbc:	ee18 1a90 	vmov	r1, s17
 8009dc0:	4630      	mov	r0, r6
 8009dc2:	f008 fdc5 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009dc6:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8009dca:	ee19 0a90 	vmov	r0, s19
 8009dce:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8009dd0:	f04f 0800 	mov.w	r8, #0
 8009dd4:	2145      	movs	r1, #69	; 0x45
 8009dd6:	f7f9 fcf1 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8009dda:	ee19 1a90 	vmov	r1, s19
 8009dde:	4628      	mov	r0, r5
        color = newColor;
 8009de0:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8009de4:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009de8:	f00b f940 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009dec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009df0:	ee19 3a90 	vmov	r3, s19
 8009df4:	333c      	adds	r3, #60	; 0x3c
 8009df6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009dfa:	235b      	movs	r3, #91	; 0x5b
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8009dfc:	ee19 0a90 	vmov	r0, s19
 8009e00:	a90a      	add	r1, sp, #40	; 0x28
 8009e02:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009e06:	970a      	str	r7, [sp, #40]	; 0x28
 8009e08:	f00b fbca 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009e0c:	ee19 1a90 	vmov	r1, s19
 8009e10:	4630      	mov	r0, r6
 8009e12:	f008 fd9d 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8009e16:	ee1a 0a10 	vmov	r0, s20
 8009e1a:	220c      	movs	r2, #12
 8009e1c:	2136      	movs	r1, #54	; 0x36
 8009e1e:	f7f9 fccd 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8009e22:	ee1a 1a10 	vmov	r1, s20
 8009e26:	4628      	mov	r0, r5
        color = newColor;
 8009e28:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009e2c:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009e30:	f00b f91c 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009e34:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009e38:	ee1a 3a10 	vmov	r3, s20
 8009e3c:	333c      	adds	r3, #60	; 0x3c
 8009e3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009e42:	235a      	movs	r3, #90	; 0x5a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8009e44:	ee1a 0a10 	vmov	r0, s20
 8009e48:	a90a      	add	r1, sp, #40	; 0x28
 8009e4a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009e4e:	970a      	str	r7, [sp, #40]	; 0x28
 8009e50:	f00b fba6 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009e54:	4630      	mov	r0, r6
 8009e56:	ee1a 1a10 	vmov	r1, s20
 8009e5a:	f008 fd79 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009e5e:	4620      	mov	r0, r4
 8009e60:	b00d      	add	sp, #52	; 0x34
 8009e62:	ecbd 8b0a 	vpop	{d8-d12}
 8009e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e6a:	bf00      	nop
 8009e6c:	200138b8 	.word	0x200138b8
 8009e70:	0802f6b1 	.word	0x0802f6b1
 8009e74:	0802f724 	.word	0x0802f724
 8009e78:	200138b0 	.word	0x200138b0

08009e7c <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8009e7c:	4770      	bx	lr

08009e7e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009e7e:	4770      	bx	lr

08009e80 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009e80:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009e82:	68c2      	ldr	r2, [r0, #12]
 8009e84:	6844      	ldr	r4, [r0, #4]
 8009e86:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009e88:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009e8a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009e8e:	07d2      	lsls	r2, r2, #31
 8009e90:	bf48      	it	mi
 8009e92:	5962      	ldrmi	r2, [r4, r5]
 8009e94:	689b      	ldr	r3, [r3, #8]
    }
 8009e96:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009e98:	bf48      	it	mi
 8009e9a:	58d3      	ldrmi	r3, [r2, r3]
 8009e9c:	4718      	bx	r3

08009e9e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8009e9e:	6843      	ldr	r3, [r0, #4]
 8009ea0:	b12b      	cbz	r3, 8009eae <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8009ea2:	6883      	ldr	r3, [r0, #8]
 8009ea4:	b92b      	cbnz	r3, 8009eb2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8009ea6:	68c0      	ldr	r0, [r0, #12]
 8009ea8:	f000 0001 	and.w	r0, r0, #1
 8009eac:	4770      	bx	lr
 8009eae:	4618      	mov	r0, r3
 8009eb0:	4770      	bx	lr
 8009eb2:	2001      	movs	r0, #1
    }
 8009eb4:	4770      	bx	lr

08009eb6 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009eb6:	b510      	push	{r4, lr}
 8009eb8:	2110      	movs	r1, #16
 8009eba:	4604      	mov	r4, r0
 8009ebc:	f022 ff7d 	bl	802cdba <_ZdlPvj>
 8009ec0:	4620      	mov	r0, r4
 8009ec2:	bd10      	pop	{r4, pc}

08009ec4 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009ec4:	b510      	push	{r4, lr}
 8009ec6:	4b03      	ldr	r3, [pc, #12]	; (8009ed4 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8009ec8:	6003      	str	r3, [r0, #0]
 8009eca:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009ecc:	f00d f916 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009ed0:	4620      	mov	r0, r4
 8009ed2:	bd10      	pop	{r4, pc}
 8009ed4:	08030f28 	.word	0x08030f28

08009ed8 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009ed8:	b507      	push	{r0, r1, r2, lr}
 8009eda:	4b07      	ldr	r3, [pc, #28]	; (8009ef8 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8009edc:	6003      	str	r3, [r0, #0]
 8009ede:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009ee0:	f00d f90c 	bl	80170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009ee4:	9801      	ldr	r0, [sp, #4]
 8009ee6:	f241 117c 	movw	r1, #4476	; 0x117c
 8009eea:	f022 ff66 	bl	802cdba <_ZdlPvj>
 8009eee:	9801      	ldr	r0, [sp, #4]
 8009ef0:	b003      	add	sp, #12
 8009ef2:	f85d fb04 	ldr.w	pc, [sp], #4
 8009ef6:	bf00      	nop
 8009ef8:	08030f28 	.word	0x08030f28

08009efc <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8009efc:	30e4      	adds	r0, #228	; 0xe4
 8009efe:	4288      	cmp	r0, r1
{
 8009f00:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8009f02:	d105      	bne.n	8009f10 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009f04:	f00e fdfc 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8009f08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8009f0c:	f7fb bbdc 	b.w	80056c8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8009f10:	bd08      	pop	{r3, pc}
	...

08009f14 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8009f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f18:	ed2d 8b06 	vpush	{d8-d10}
 8009f1c:	4604      	mov	r4, r0
 8009f1e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8009f20:	46a3      	mov	fp, r4
 8009f22:	2500      	movs	r5, #0
 8009f24:	f010 fa6c 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 8009f28:	4b6e      	ldr	r3, [pc, #440]	; (800a0e4 <_ZN20Project_InfoViewBaseC1Ev+0x1d0>)
 8009f2a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009f2c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8009f30:	2226      	movs	r2, #38	; 0x26
 8009f32:	4629      	mov	r1, r5
 8009f34:	4658      	mov	r0, fp
 8009f36:	f024 f82c 	bl	802df92 <memset>
 8009f3a:	4658      	mov	r0, fp
 8009f3c:	f7f9 fc70 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8009f40:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8009f44:	26ff      	movs	r6, #255	; 0xff
 8009f46:	4b68      	ldr	r3, [pc, #416]	; (800a0e8 <_ZN20Project_InfoViewBaseC1Ev+0x1d4>)
 8009f48:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009f4a:	2226      	movs	r2, #38	; 0x26
 8009f4c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009f50:	4629      	mov	r1, r5
 8009f52:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009f56:	4650      	mov	r0, sl
 8009f58:	66a5      	str	r5, [r4, #104]	; 0x68
 8009f5a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009f5e:	f024 f818 	bl	802df92 <memset>
 8009f62:	4650      	mov	r0, sl
 8009f64:	f7f9 fc5c 	bl	8003820 <_ZN8touchgfx6WidgetC1Ev>
 8009f68:	4b60      	ldr	r3, [pc, #384]	; (800a0ec <_ZN20Project_InfoViewBaseC1Ev+0x1d8>)
 8009f6a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009f6c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009f70:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8009f74:	a90a      	add	r1, sp, #40	; 0x28
 8009f76:	4650      	mov	r0, sl
 8009f78:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8009f7c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009f80:	f00c f8bf 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8009f84:	4648      	mov	r0, r9
 8009f86:	f7f9 fcaf 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009f8a:	4b59      	ldr	r3, [pc, #356]	; (800a0f0 <_ZN20Project_InfoViewBaseC1Ev+0x1dc>)
 8009f8c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8009f90:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8009f94:	4618      	mov	r0, r3
 8009f96:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8009f9a:	ee09 3a90 	vmov	s19, r3
 8009f9e:	f00c f9e7 	bl	8016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009fa2:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8009fa6:	4618      	mov	r0, r3
 8009fa8:	f504 78ba 	add.w	r8, r4, #372	; 0x174
 8009fac:	ee0a 3a10 	vmov	s20, r3
 8009fb0:	f7f9 fc9a 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009fb4:	4640      	mov	r0, r8
 8009fb6:	f00a fd97 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8009fba:	4e4e      	ldr	r6, [pc, #312]	; (800a0f4 <_ZN20Project_InfoViewBaseC1Ev+0x1e0>)
 8009fbc:	f504 73f2 	add.w	r3, r4, #484	; 0x1e4
 8009fc0:	4618      	mov	r0, r3
 8009fc2:	9302      	str	r3, [sp, #8]
 8009fc4:	f7f9 fa30 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009fc8:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009fcc:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 8009fd0:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8009fd4:	4618      	mov	r0, r3
 8009fd6:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8009fda:	f8c4 51f0 	str.w	r5, [r4, #496]	; 0x1f0
 8009fde:	f504 7710 	add.w	r7, r4, #576	; 0x240
 8009fe2:	ee08 3a10 	vmov	s16, r3
 8009fe6:	f7f9 fc7f 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 8009fea:	4638      	mov	r0, r7
 8009fec:	f00a fd7c 	bl	8014ae8 <_ZN8touchgfx4LineC1Ev>
 8009ff0:	f504 732c 	add.w	r3, r4, #688	; 0x2b0
 8009ff4:	4618      	mov	r0, r3
 8009ff6:	9303      	str	r3, [sp, #12]
 8009ff8:	f7f9 fa16 	bl	8003428 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009ffc:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800a000:	f8c4 32b8 	str.w	r3, [r4, #696]	; 0x2b8
 800a004:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 800a008:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
 800a00c:	4618      	mov	r0, r3
 800a00e:	f8c4 52bc 	str.w	r5, [r4, #700]	; 0x2bc
 800a012:	ee08 3a90 	vmov	s17, r3
 800a016:	f7f9 fc67 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
 800a01a:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 800a01e:	4618      	mov	r0, r3
 800a020:	ee09 3a10 	vmov	s18, r3
 800a024:	f7f9 fc60 	bl	80038e8 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800a028:	4a33      	ldr	r2, [pc, #204]	; (800a0f8 <_ZN20Project_InfoViewBaseC1Ev+0x1e4>)
 800a02a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800a02e:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 800a032:	4a32      	ldr	r2, [pc, #200]	; (800a0fc <_ZN20Project_InfoViewBaseC1Ev+0x1e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800a034:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800a038:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 800a03c:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 800a040:	f00d f852 	bl	80170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800a044:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800a048:	462a      	mov	r2, r5
 800a04a:	4658      	mov	r0, fp
 800a04c:	9300      	str	r3, [sp, #0]
 800a04e:	4629      	mov	r1, r5
 800a050:	23f0      	movs	r3, #240	; 0xf0
 800a052:	f7f9 fbc0 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800a056:	1d26      	adds	r6, r4, #4
        color = newColor;
 800a058:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a05c:	66a3      	str	r3, [r4, #104]	; 0x68
 800a05e:	4659      	mov	r1, fp
 800a060:	4630      	mov	r0, r6
 800a062:	f008 fc75 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 800a066:	462a      	mov	r2, r5
 800a068:	4650      	mov	r0, sl
 800a06a:	4629      	mov	r1, r5
 800a06c:	f7f9 fba6 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800a070:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800a072:	4650      	mov	r0, sl
 800a074:	a90a      	add	r1, sp, #40	; 0x28
 800a076:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800a07a:	f00c f842 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a07e:	4651      	mov	r1, sl
 800a080:	4630      	mov	r0, r6
 800a082:	f008 fc65 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 800a086:	f44f 729a 	mov.w	r2, #308	; 0x134
 800a08a:	2156      	movs	r1, #86	; 0x56
 800a08c:	4648      	mov	r0, r9
 800a08e:	f7f9 fb95 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800a092:	f04f 33ff 	mov.w	r3, #4294967295
 800a096:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800a09a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800a09e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800a0a2:	f10d 0b10 	add.w	fp, sp, #16
 800a0a6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a0aa:	4649      	mov	r1, r9
 800a0ac:	4658      	mov	r0, fp
 800a0ae:	4798      	blx	r3
 800a0b0:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800a0b4:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800a0b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800a0bc:	4b10      	ldr	r3, [pc, #64]	; (800a100 <_ZN20Project_InfoViewBaseC1Ev+0x1ec>)
 800a0be:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 800a0c0:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 800a0c4:	b92b      	cbnz	r3, 800a0d2 <_ZN20Project_InfoViewBaseC1Ev+0x1be>
 800a0c6:	4b0f      	ldr	r3, [pc, #60]	; (800a104 <_ZN20Project_InfoViewBaseC1Ev+0x1f0>)
 800a0c8:	4a0f      	ldr	r2, [pc, #60]	; (800a108 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 800a0ca:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a0cc:	480f      	ldr	r0, [pc, #60]	; (800a10c <_ZN20Project_InfoViewBaseC1Ev+0x1f8>)
 800a0ce:	f023 fd5b 	bl	802db88 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800a0d2:	4b0f      	ldr	r3, [pc, #60]	; (800a110 <_ZN20Project_InfoViewBaseC1Ev+0x1fc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a0d4:	881b      	ldrh	r3, [r3, #0]
 800a0d6:	2b3e      	cmp	r3, #62	; 0x3e
 800a0d8:	d81e      	bhi.n	800a118 <_ZN20Project_InfoViewBaseC1Ev+0x204>
 800a0da:	4b0e      	ldr	r3, [pc, #56]	; (800a114 <_ZN20Project_InfoViewBaseC1Ev+0x200>)
 800a0dc:	4a0a      	ldr	r2, [pc, #40]	; (800a108 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 800a0de:	2161      	movs	r1, #97	; 0x61
 800a0e0:	e7f4      	b.n	800a0cc <_ZN20Project_InfoViewBaseC1Ev+0x1b8>
 800a0e2:	bf00      	nop
 800a0e4:	08030f28 	.word	0x08030f28
 800a0e8:	08031c78 	.word	0x08031c78
 800a0ec:	08031ec4 	.word	0x08031ec4
 800a0f0:	0802f7c4 	.word	0x0802f7c4
 800a0f4:	080319ac 	.word	0x080319ac
 800a0f8:	08030f10 	.word	0x08030f10
 800a0fc:	08009efd 	.word	0x08009efd
 800a100:	200138ac 	.word	0x200138ac
 800a104:	0802f574 	.word	0x0802f574
 800a108:	0802f679 	.word	0x0802f679
 800a10c:	0802f5f1 	.word	0x0802f5f1
 800a110:	200138b0 	.word	0x200138b0
 800a114:	0802f638 	.word	0x0802f638
        return texts->getText(typedTextId);
 800a118:	4ba0      	ldr	r3, [pc, #640]	; (800a39c <_ZN20Project_InfoViewBaseC1Ev+0x488>)
 800a11a:	213e      	movs	r1, #62	; 0x3e
 800a11c:	6818      	ldr	r0, [r3, #0]
 800a11e:	f000 fb5f 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 800a122:	4a9f      	ldr	r2, [pc, #636]	; (800a3a0 <_ZN20Project_InfoViewBaseC1Ev+0x48c>)
 800a124:	4603      	mov	r3, r0
 800a126:	2104      	movs	r1, #4
 800a128:	4650      	mov	r0, sl
 800a12a:	f011 fe97 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800a12e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea_auto_off.resizeToCurrentText();
 800a132:	4648      	mov	r0, r9
 800a134:	f00b fa14 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800a138:	f8df a268 	ldr.w	sl, [pc, #616]	; 800a3a4 <_ZN20Project_InfoViewBaseC1Ev+0x490>
 800a13c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a140:	233f      	movs	r3, #63	; 0x3f
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 800a142:	a90a      	add	r1, sp, #40	; 0x28
 800a144:	4648      	mov	r0, r9
 800a146:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a14a:	f00b fa29 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a14e:	4649      	mov	r1, r9
 800a150:	4630      	mov	r0, r6
 800a152:	f008 fbfd 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 800a156:	ee19 0a90 	vmov	r0, s19
 800a15a:	22f0      	movs	r2, #240	; 0xf0
 800a15c:	2121      	movs	r1, #33	; 0x21
 800a15e:	f7f9 fb2d 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800a162:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800a164:	aa0a      	add	r2, sp, #40	; 0x28
 800a166:	a909      	add	r1, sp, #36	; 0x24
 800a168:	ee19 0a90 	vmov	r0, s19
 800a16c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a170:	2302      	movs	r3, #2
 800a172:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800a176:	f00b fdce 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800a17a:	2364      	movs	r3, #100	; 0x64
        updateTextPosition();
 800a17c:	ee19 0a90 	vmov	r0, s19
 800a180:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 800a184:	f7f9 fb5e 	bl	8003844 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800a188:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800a18c:	e9c4 3348 	strd	r3, r3, [r4, #288]	; 0x120
    buttonWithLabel_Return.setAction(buttonCallback);
 800a190:	f504 538b 	add.w	r3, r4, #4448	; 0x1160
 800a194:	330c      	adds	r3, #12
 800a196:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 800a19a:	ee19 1a90 	vmov	r1, s19
 800a19e:	4630      	mov	r0, r6
 800a1a0:	f008 fbd6 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_Info.setXY(7, 91);
 800a1a4:	225b      	movs	r2, #91	; 0x5b
 800a1a6:	ee1a 0a10 	vmov	r0, s20
 800a1aa:	2107      	movs	r1, #7
 800a1ac:	f7f9 fb06 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800a1b0:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800a1b4:	ee1a 1a10 	vmov	r1, s20
        color = newColor;
 800a1b8:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 800a1bc:	4658      	mov	r0, fp
        linespace = space;
 800a1be:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 800a1c2:	f00a ff53 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a1c6:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800a1ca:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800a1ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800a1d2:	2365      	movs	r3, #101	; 0x65
    textArea_Info.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 800a1d4:	ee1a 0a10 	vmov	r0, s20
 800a1d8:	a90a      	add	r1, sp, #40	; 0x28
 800a1da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a1de:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a1e2:	f00b f9dd 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a1e6:	ee1a 1a10 	vmov	r1, s20
 800a1ea:	4630      	mov	r0, r6
 800a1ec:	f008 fbb0 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 800a1f0:	230a      	movs	r3, #10
 800a1f2:	9300      	str	r3, [sp, #0]
 800a1f4:	224b      	movs	r2, #75	; 0x4b
 800a1f6:	23f0      	movs	r3, #240	; 0xf0
 800a1f8:	4629      	mov	r1, r5
 800a1fa:	4640      	mov	r0, r8
 800a1fc:	f7f9 faeb 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800a200:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a204:	22a0      	movs	r2, #160	; 0xa0
 800a206:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
        color565 = LCD16bpp::getNativeColor(painterColor);
 800a20a:	f8a4 31f4 	strh.w	r3, [r4, #500]	; 0x1f4
 800a20e:	9b02      	ldr	r3, [sp, #8]
 800a210:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800a214:	4611      	mov	r1, r2
 800a216:	4640      	mov	r0, r8
 800a218:	f00a fd7c 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a21c:	22a0      	movs	r2, #160	; 0xa0
 800a21e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a222:	4640      	mov	r0, r8
 800a224:	f00a fd81 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a228:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 800a22c:	2b20      	cmp	r3, #32
 800a22e:	d005      	beq.n	800a23c <_ZN20Project_InfoViewBaseC1Ev+0x328>
        lineWidthQ5 = widthQ5;
 800a230:	2320      	movs	r3, #32
 800a232:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
        updateCachedShape();
 800a236:	4640      	mov	r0, r8
 800a238:	f00a fc76 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a23c:	4640      	mov	r0, r8
 800a23e:	2101      	movs	r1, #1
 800a240:	f00a fd7e 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a244:	4641      	mov	r1, r8
 800a246:	4630      	mov	r0, r6
 800a248:	f008 fb82 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a24c:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(70, 60);
 800a250:	223c      	movs	r2, #60	; 0x3c
        linespace = space;
 800a252:	f04f 0900 	mov.w	r9, #0
 800a256:	ee18 0a10 	vmov	r0, s16
 800a25a:	2146      	movs	r1, #70	; 0x46
        boundingArea = calculateBoundingArea();
 800a25c:	ad04      	add	r5, sp, #16
 800a25e:	f7f9 faad 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800a262:	ee18 1a10 	vmov	r1, s16
 800a266:	4628      	mov	r0, r5
        color = newColor;
 800a268:	f8c4 8228 	str.w	r8, [r4, #552]	; 0x228
        linespace = space;
 800a26c:	f8a4 922c 	strh.w	r9, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800a270:	f00a fefc 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a274:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a278:	ee18 3a10 	vmov	r3, s16
 800a27c:	333c      	adds	r3, #60	; 0x3c
 800a27e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BYJD));
 800a282:	ee18 0a10 	vmov	r0, s16
 800a286:	a90a      	add	r1, sp, #40	; 0x28
 800a288:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a28c:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 800a290:	f00b f986 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a294:	ee18 1a10 	vmov	r1, s16
 800a298:	4630      	mov	r0, r6
 800a29a:	f008 fb59 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800a29e:	230a      	movs	r3, #10
 800a2a0:	9300      	str	r3, [sp, #0]
 800a2a2:	2232      	movs	r2, #50	; 0x32
 800a2a4:	23f0      	movs	r3, #240	; 0xf0
 800a2a6:	4649      	mov	r1, r9
 800a2a8:	4638      	mov	r0, r7
 800a2aa:	f7f9 fa94 	bl	80037d6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800a2ae:	9b03      	ldr	r3, [sp, #12]
 800a2b0:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a2b4:	22a0      	movs	r2, #160	; 0xa0
 800a2b6:	4611      	mov	r1, r2
 800a2b8:	4638      	mov	r0, r7
 800a2ba:	f8c4 82bc 	str.w	r8, [r4, #700]	; 0x2bc
 800a2be:	f8a4 82c0 	strh.w	r8, [r4, #704]	; 0x2c0
 800a2c2:	f00a fd27 	bl	8014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a2c6:	22a0      	movs	r2, #160	; 0xa0
 800a2c8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a2cc:	4638      	mov	r0, r7
 800a2ce:	f00a fd2c 	bl	8014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a2d2:	f8d4 327c 	ldr.w	r3, [r4, #636]	; 0x27c
 800a2d6:	2b20      	cmp	r3, #32
 800a2d8:	d005      	beq.n	800a2e6 <_ZN20Project_InfoViewBaseC1Ev+0x3d2>
        lineWidthQ5 = widthQ5;
 800a2da:	2320      	movs	r3, #32
 800a2dc:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
        updateCachedShape();
 800a2e0:	4638      	mov	r0, r7
 800a2e2:	f00a fc21 	bl	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a2e6:	4638      	mov	r0, r7
 800a2e8:	2101      	movs	r1, #1
 800a2ea:	f00a fd29 	bl	8014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a2ee:	4639      	mov	r1, r7
 800a2f0:	4630      	mov	r0, r6
 800a2f2:	f008 fb2d 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a2f6:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800a2fa:	ee18 0a90 	vmov	r0, s17
 800a2fe:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800a300:	2700      	movs	r7, #0
 800a302:	2145      	movs	r1, #69	; 0x45
 800a304:	f7f9 fa5a 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800a308:	ee18 1a90 	vmov	r1, s17
 800a30c:	4628      	mov	r0, r5
        color = newColor;
 800a30e:	f8c4 82f4 	str.w	r8, [r4, #756]	; 0x2f4
        linespace = space;
 800a312:	f8a4 72f8 	strh.w	r7, [r4, #760]	; 0x2f8
        boundingArea = calculateBoundingArea();
 800a316:	f00a fea9 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a31a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a31e:	ee18 3a90 	vmov	r3, s17
 800a322:	333c      	adds	r3, #60	; 0x3c
 800a324:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a328:	2367      	movs	r3, #103	; 0x67
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800a32a:	ee18 0a90 	vmov	r0, s17
 800a32e:	a90a      	add	r1, sp, #40	; 0x28
 800a330:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a334:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a338:	f00b f932 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a33c:	ee18 1a90 	vmov	r1, s17
 800a340:	4630      	mov	r0, r6
 800a342:	f008 fb05 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 800a346:	ee19 0a10 	vmov	r0, s18
 800a34a:	220c      	movs	r2, #12
 800a34c:	2136      	movs	r1, #54	; 0x36
 800a34e:	f7f9 fa35 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800a352:	ee19 1a10 	vmov	r1, s18
 800a356:	4628      	mov	r0, r5
        color = newColor;
 800a358:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 800a35c:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 800a360:	f00a fe84 	bl	801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a364:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a368:	ee19 3a10 	vmov	r3, s18
 800a36c:	333c      	adds	r3, #60	; 0x3c
 800a36e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a372:	2366      	movs	r3, #102	; 0x66
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800a374:	ee19 0a10 	vmov	r0, s18
 800a378:	a90a      	add	r1, sp, #40	; 0x28
 800a37a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a37e:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a382:	f00b f90d 	bl	80155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a386:	4630      	mov	r0, r6
 800a388:	ee19 1a10 	vmov	r1, s18
 800a38c:	f008 fae0 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a390:	4620      	mov	r0, r4
 800a392:	b00d      	add	sp, #52	; 0x34
 800a394:	ecbd 8b06 	vpop	{d8-d10}
 800a398:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a39c:	200138b8 	.word	0x200138b8
 800a3a0:	0802f6b1 	.word	0x0802f6b1
 800a3a4:	0802f724 	.word	0x0802f724

0800a3a8 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 800a3a8:	4770      	bx	lr

0800a3aa <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800a3aa:	4770      	bx	lr

0800a3ac <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a3ac:	b510      	push	{r4, lr}
}
 800a3ae:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a3b0:	4604      	mov	r4, r0
}
 800a3b2:	f022 fd02 	bl	802cdba <_ZdlPvj>
 800a3b6:	4620      	mov	r0, r4
 800a3b8:	bd10      	pop	{r4, pc}
	...

0800a3bc <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 800a3bc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a3c0:	4604      	mov	r4, r0
 800a3c2:	4626      	mov	r6, r4
 800a3c4:	f010 f81c 	bl	801a400 <_ZN8touchgfx6ScreenC1Ev>
 800a3c8:	2500      	movs	r5, #0
 800a3ca:	4b2e      	ldr	r3, [pc, #184]	; (800a484 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800a3cc:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a3ce:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a3d2:	4b2d      	ldr	r3, [pc, #180]	; (800a488 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 800a3d4:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800a3d6:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800a3da:	f44f 7280 	mov.w	r2, #256	; 0x100
 800a3de:	23ff      	movs	r3, #255	; 0xff
 800a3e0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800a3e4:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 800a3e8:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800a3ec:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 800a3f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800a3f4:	4a25      	ldr	r2, [pc, #148]	; (800a48c <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800a3f6:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800a3fa:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800a3fe:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800a400:	a901      	add	r1, sp, #4
 800a402:	4638      	mov	r0, r7
 800a404:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 800a408:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 800a40c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800a410:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800a414:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 800a418:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800a41c:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800a420:	66a5      	str	r5, [r4, #104]	; 0x68
 800a422:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a426:	f00b fe6c 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800a42a:	462a      	mov	r2, r5
 800a42c:	4629      	mov	r1, r5
 800a42e:	4630      	mov	r0, r6
 800a430:	f7f9 f9c4 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a434:	4630      	mov	r0, r6
 800a436:	21f0      	movs	r1, #240	; 0xf0
 800a438:	f7f8 ff42 	bl	80032c0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800a43c:	4630      	mov	r0, r6
 800a43e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a442:	f7f8 ff3f 	bl	80032c4 <_ZN8touchgfx8Drawable9setHeightEs>
 800a446:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800a44a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a44e:	66a3      	str	r3, [r4, #104]	; 0x68
 800a450:	4631      	mov	r1, r6
 800a452:	4640      	mov	r0, r8
 800a454:	f008 fa7c 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_shutdown.setXY(-3, 0);
 800a458:	462a      	mov	r2, r5
 800a45a:	4638      	mov	r0, r7
 800a45c:	f06f 0102 	mvn.w	r1, #2
 800a460:	f7f9 f9ac 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 800a464:	230b      	movs	r3, #11
    image_shutdown.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 800a466:	a901      	add	r1, sp, #4
 800a468:	4638      	mov	r0, r7
 800a46a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a46e:	f00b fe48 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a472:	4640      	mov	r0, r8
 800a474:	4639      	mov	r1, r7
 800a476:	f008 fa6b 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a47a:	4620      	mov	r0, r4
 800a47c:	b002      	add	sp, #8
 800a47e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a482:	bf00      	nop
 800a484:	08030f5c 	.word	0x08030f5c
 800a488:	08031c78 	.word	0x08031c78
 800a48c:	08031ec4 	.word	0x08031ec4

0800a490 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a490:	4770      	bx	lr
	...

0800a494 <_Z23getFont_verdana_10_4bppv>:
{
 800a494:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a496:	4d17      	ldr	r5, [pc, #92]	; (800a4f4 <_Z23getFont_verdana_10_4bppv+0x60>)
 800a498:	682c      	ldr	r4, [r5, #0]
 800a49a:	f3bf 8f5b 	dmb	ish
 800a49e:	f014 0401 	ands.w	r4, r4, #1
{
 800a4a2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a4a4:	d122      	bne.n	800a4ec <_Z23getFont_verdana_10_4bppv+0x58>
 800a4a6:	4628      	mov	r0, r5
 800a4a8:	f022 fc89 	bl	802cdbe <__cxa_guard_acquire>
 800a4ac:	b1f0      	cbz	r0, 800a4ec <_Z23getFont_verdana_10_4bppv+0x58>
 800a4ae:	233f      	movs	r3, #63	; 0x3f
 800a4b0:	9309      	str	r3, [sp, #36]	; 0x24
 800a4b2:	4b11      	ldr	r3, [pc, #68]	; (800a4f8 <_Z23getFont_verdana_10_4bppv+0x64>)
 800a4b4:	9308      	str	r3, [sp, #32]
 800a4b6:	4b11      	ldr	r3, [pc, #68]	; (800a4fc <_Z23getFont_verdana_10_4bppv+0x68>)
 800a4b8:	9307      	str	r3, [sp, #28]
 800a4ba:	2301      	movs	r3, #1
 800a4bc:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a4c0:	9304      	str	r3, [sp, #16]
 800a4c2:	2304      	movs	r3, #4
 800a4c4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a4c8:	230a      	movs	r3, #10
 800a4ca:	490d      	ldr	r1, [pc, #52]	; (800a500 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800a4cc:	9300      	str	r3, [sp, #0]
 800a4ce:	225f      	movs	r2, #95	; 0x5f
 800a4d0:	230c      	movs	r3, #12
 800a4d2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a4d6:	480b      	ldr	r0, [pc, #44]	; (800a504 <_Z23getFont_verdana_10_4bppv+0x70>)
 800a4d8:	940a      	str	r4, [sp, #40]	; 0x28
 800a4da:	9401      	str	r4, [sp, #4]
 800a4dc:	f7fc f9da 	bl	8006894 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a4e0:	4809      	ldr	r0, [pc, #36]	; (800a508 <_Z23getFont_verdana_10_4bppv+0x74>)
 800a4e2:	f023 fb6f 	bl	802dbc4 <atexit>
 800a4e6:	4628      	mov	r0, r5
 800a4e8:	f022 fc75 	bl	802cdd6 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800a4ec:	4805      	ldr	r0, [pc, #20]	; (800a504 <_Z23getFont_verdana_10_4bppv+0x70>)
 800a4ee:	b00f      	add	sp, #60	; 0x3c
 800a4f0:	bd30      	pop	{r4, r5, pc}
 800a4f2:	bf00      	nop
 800a4f4:	20002954 	.word	0x20002954
 800a4f8:	08049b68 	.word	0x08049b68
 800a4fc:	08049da4 	.word	0x08049da4
 800a500:	08048bb0 	.word	0x08048bb0
 800a504:	20002958 	.word	0x20002958
 800a508:	0800a491 	.word	0x0800a491

0800a50c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a50c:	4770      	bx	lr
	...

0800a510 <_Z23getFont_verdana_12_4bppv>:
{
 800a510:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a512:	4d17      	ldr	r5, [pc, #92]	; (800a570 <_Z23getFont_verdana_12_4bppv+0x60>)
 800a514:	682c      	ldr	r4, [r5, #0]
 800a516:	f3bf 8f5b 	dmb	ish
 800a51a:	f014 0401 	ands.w	r4, r4, #1
{
 800a51e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a520:	d122      	bne.n	800a568 <_Z23getFont_verdana_12_4bppv+0x58>
 800a522:	4628      	mov	r0, r5
 800a524:	f022 fc4b 	bl	802cdbe <__cxa_guard_acquire>
 800a528:	b1f0      	cbz	r0, 800a568 <_Z23getFont_verdana_12_4bppv+0x58>
 800a52a:	233f      	movs	r3, #63	; 0x3f
 800a52c:	9309      	str	r3, [sp, #36]	; 0x24
 800a52e:	4b11      	ldr	r3, [pc, #68]	; (800a574 <_Z23getFont_verdana_12_4bppv+0x64>)
 800a530:	9308      	str	r3, [sp, #32]
 800a532:	4b11      	ldr	r3, [pc, #68]	; (800a578 <_Z23getFont_verdana_12_4bppv+0x68>)
 800a534:	9307      	str	r3, [sp, #28]
 800a536:	2301      	movs	r3, #1
 800a538:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a53c:	9304      	str	r3, [sp, #16]
 800a53e:	2304      	movs	r3, #4
 800a540:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a544:	230c      	movs	r3, #12
 800a546:	490d      	ldr	r1, [pc, #52]	; (800a57c <_Z23getFont_verdana_12_4bppv+0x6c>)
 800a548:	9300      	str	r3, [sp, #0]
 800a54a:	2260      	movs	r2, #96	; 0x60
 800a54c:	230f      	movs	r3, #15
 800a54e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a552:	480b      	ldr	r0, [pc, #44]	; (800a580 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a554:	940a      	str	r4, [sp, #40]	; 0x28
 800a556:	9401      	str	r4, [sp, #4]
 800a558:	f7fc f99c 	bl	8006894 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a55c:	4809      	ldr	r0, [pc, #36]	; (800a584 <_Z23getFont_verdana_12_4bppv+0x74>)
 800a55e:	f023 fb31 	bl	802dbc4 <atexit>
 800a562:	4628      	mov	r0, r5
 800a564:	f022 fc37 	bl	802cdd6 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 800a568:	4805      	ldr	r0, [pc, #20]	; (800a580 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a56a:	b00f      	add	sp, #60	; 0x3c
 800a56c:	bd30      	pop	{r4, r5, pc}
 800a56e:	bf00      	nop
 800a570:	20002984 	.word	0x20002984
 800a574:	08049b9c 	.word	0x08049b9c
 800a578:	08049da8 	.word	0x08049da8
 800a57c:	080490e4 	.word	0x080490e4
 800a580:	20002988 	.word	0x20002988
 800a584:	0800a50d 	.word	0x0800a50d

0800a588 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a588:	4770      	bx	lr
	...

0800a58c <_Z23getFont_verdana_19_4bppv>:
{
 800a58c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a58e:	4d17      	ldr	r5, [pc, #92]	; (800a5ec <_Z23getFont_verdana_19_4bppv+0x60>)
 800a590:	682c      	ldr	r4, [r5, #0]
 800a592:	f3bf 8f5b 	dmb	ish
 800a596:	f014 0401 	ands.w	r4, r4, #1
{
 800a59a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a59c:	d122      	bne.n	800a5e4 <_Z23getFont_verdana_19_4bppv+0x58>
 800a59e:	4628      	mov	r0, r5
 800a5a0:	f022 fc0d 	bl	802cdbe <__cxa_guard_acquire>
 800a5a4:	b1f0      	cbz	r0, 800a5e4 <_Z23getFont_verdana_19_4bppv+0x58>
 800a5a6:	233f      	movs	r3, #63	; 0x3f
 800a5a8:	9309      	str	r3, [sp, #36]	; 0x24
 800a5aa:	4b11      	ldr	r3, [pc, #68]	; (800a5f0 <_Z23getFont_verdana_19_4bppv+0x64>)
 800a5ac:	9308      	str	r3, [sp, #32]
 800a5ae:	4b11      	ldr	r3, [pc, #68]	; (800a5f4 <_Z23getFont_verdana_19_4bppv+0x68>)
 800a5b0:	9307      	str	r3, [sp, #28]
 800a5b2:	2301      	movs	r3, #1
 800a5b4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a5b8:	9304      	str	r3, [sp, #16]
 800a5ba:	2304      	movs	r3, #4
 800a5bc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a5c0:	2313      	movs	r3, #19
 800a5c2:	490d      	ldr	r1, [pc, #52]	; (800a5f8 <_Z23getFont_verdana_19_4bppv+0x6c>)
 800a5c4:	9300      	str	r3, [sp, #0]
 800a5c6:	225f      	movs	r2, #95	; 0x5f
 800a5c8:	2317      	movs	r3, #23
 800a5ca:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a5ce:	480b      	ldr	r0, [pc, #44]	; (800a5fc <_Z23getFont_verdana_19_4bppv+0x70>)
 800a5d0:	940a      	str	r4, [sp, #40]	; 0x28
 800a5d2:	9401      	str	r4, [sp, #4]
 800a5d4:	f7fc f95e 	bl	8006894 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a5d8:	4809      	ldr	r0, [pc, #36]	; (800a600 <_Z23getFont_verdana_19_4bppv+0x74>)
 800a5da:	f023 faf3 	bl	802dbc4 <atexit>
 800a5de:	4628      	mov	r0, r5
 800a5e0:	f022 fbf9 	bl	802cdd6 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 800a5e4:	4805      	ldr	r0, [pc, #20]	; (800a5fc <_Z23getFont_verdana_19_4bppv+0x70>)
 800a5e6:	b00f      	add	sp, #60	; 0x3c
 800a5e8:	bd30      	pop	{r4, r5, pc}
 800a5ea:	bf00      	nop
 800a5ec:	200029b4 	.word	0x200029b4
 800a5f0:	08049c20 	.word	0x08049c20
 800a5f4:	08049dac 	.word	0x08049dac
 800a5f8:	08049624 	.word	0x08049624
 800a5fc:	200029b8 	.word	0x200029b8
 800a600:	0800a589 	.word	0x0800a589

0800a604 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a604:	4770      	bx	lr
	...

0800a608 <_Z23getFont_verdana_40_4bppv>:
{
 800a608:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a60a:	4d16      	ldr	r5, [pc, #88]	; (800a664 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800a60c:	682c      	ldr	r4, [r5, #0]
 800a60e:	f3bf 8f5b 	dmb	ish
 800a612:	f014 0401 	ands.w	r4, r4, #1
{
 800a616:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a618:	d120      	bne.n	800a65c <_Z23getFont_verdana_40_4bppv+0x54>
 800a61a:	4628      	mov	r0, r5
 800a61c:	f022 fbcf 	bl	802cdbe <__cxa_guard_acquire>
 800a620:	b1e0      	cbz	r0, 800a65c <_Z23getFont_verdana_40_4bppv+0x54>
 800a622:	233f      	movs	r3, #63	; 0x3f
 800a624:	9309      	str	r3, [sp, #36]	; 0x24
 800a626:	4b10      	ldr	r3, [pc, #64]	; (800a668 <_Z23getFont_verdana_40_4bppv+0x60>)
 800a628:	9308      	str	r3, [sp, #32]
 800a62a:	4b10      	ldr	r3, [pc, #64]	; (800a66c <_Z23getFont_verdana_40_4bppv+0x64>)
 800a62c:	4910      	ldr	r1, [pc, #64]	; (800a670 <_Z23getFont_verdana_40_4bppv+0x68>)
 800a62e:	4811      	ldr	r0, [pc, #68]	; (800a674 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a630:	940a      	str	r4, [sp, #40]	; 0x28
 800a632:	2201      	movs	r2, #1
 800a634:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a638:	2304      	movs	r3, #4
 800a63a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a63e:	2328      	movs	r3, #40	; 0x28
 800a640:	9300      	str	r3, [sp, #0]
 800a642:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a646:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a64a:	9405      	str	r4, [sp, #20]
 800a64c:	f7fc f922 	bl	8006894 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a650:	4809      	ldr	r0, [pc, #36]	; (800a678 <_Z23getFont_verdana_40_4bppv+0x70>)
 800a652:	f023 fab7 	bl	802dbc4 <atexit>
 800a656:	4628      	mov	r0, r5
 800a658:	f022 fbbd 	bl	802cdd6 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800a65c:	4805      	ldr	r0, [pc, #20]	; (800a674 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a65e:	b00f      	add	sp, #60	; 0x3c
 800a660:	bd30      	pop	{r4, r5, pc}
 800a662:	bf00      	nop
 800a664:	200029e4 	.word	0x200029e4
 800a668:	08049da0 	.word	0x08049da0
 800a66c:	08049db0 	.word	0x08049db0
 800a670:	08049b58 	.word	0x08049b58
 800a674:	200029e8 	.word	0x200029e8
 800a678:	0800a605 	.word	0x0800a605

0800a67c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800a67c:	2000      	movs	r0, #0
 800a67e:	4770      	bx	lr

0800a680 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800a680:	2000      	movs	r0, #0
 800a682:	4770      	bx	lr

0800a684 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a684:	b40e      	push	{r1, r2, r3}
 800a686:	b503      	push	{r0, r1, lr}
 800a688:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a68a:	2100      	movs	r1, #0
{
 800a68c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800a690:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a692:	f00f f9f3 	bl	8019a7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a696:	b002      	add	sp, #8
 800a698:	f85d eb04 	ldr.w	lr, [sp], #4
 800a69c:	b003      	add	sp, #12
 800a69e:	4770      	bx	lr

0800a6a0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a6a0:	b40c      	push	{r2, r3}
 800a6a2:	b507      	push	{r0, r1, r2, lr}
 800a6a4:	ab04      	add	r3, sp, #16
 800a6a6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800a6aa:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a6ac:	f00f f9e6 	bl	8019a7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a6b0:	b003      	add	sp, #12
 800a6b2:	f85d eb04 	ldr.w	lr, [sp], #4
 800a6b6:	b002      	add	sp, #8
 800a6b8:	4770      	bx	lr
	...

0800a6bc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800a6bc:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800a6be:	b510      	push	{r4, lr}
 800a6c0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800a6c2:	b373      	cbz	r3, 800a722 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a6c4:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800a6c6:	b92b      	cbnz	r3, 800a6d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800a6c8:	4b18      	ldr	r3, [pc, #96]	; (800a72c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800a6ca:	4a19      	ldr	r2, [pc, #100]	; (800a730 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800a6cc:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a6ce:	4819      	ldr	r0, [pc, #100]	; (800a734 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800a6d0:	f023 fa5a 	bl	802db88 <__assert_func>
            return buffer[pos];
 800a6d4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800a6d6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a6da:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800a6dc:	b30b      	cbz	r3, 800a722 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800a6de:	f010 fe08 	bl	801b2f2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800a6e2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800a6e4:	2b01      	cmp	r3, #1
 800a6e6:	d803      	bhi.n	800a6f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800a6e8:	4b13      	ldr	r3, [pc, #76]	; (800a738 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800a6ea:	4a14      	ldr	r2, [pc, #80]	; (800a73c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800a6ec:	21cb      	movs	r1, #203	; 0xcb
 800a6ee:	e7ee      	b.n	800a6ce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800a6f0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a6f2:	1c53      	adds	r3, r2, #1
 800a6f4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800a6f6:	2b09      	cmp	r3, #9
 800a6f8:	4619      	mov	r1, r3
 800a6fa:	bf88      	it	hi
 800a6fc:	f1a3 010a 	subhi.w	r1, r3, #10
 800a700:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a704:	f640 103f 	movw	r0, #2367	; 0x93f
 800a708:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800a70a:	4281      	cmp	r1, r0
 800a70c:	d109      	bne.n	800a722 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800a70e:	2b0a      	cmp	r3, #10
 800a710:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800a714:	bf28      	it	cs
 800a716:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800a718:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800a71c:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800a71e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800a720:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800a722:	4620      	mov	r0, r4
}
 800a724:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800a728:	f010 bce6 	b.w	801b0f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a72c:	08030f88 	.word	0x08030f88
 800a730:	08030f91 	.word	0x08030f91
 800a734:	0803103c 	.word	0x0803103c
 800a738:	08031086 	.word	0x08031086
 800a73c:	08031094 	.word	0x08031094

0800a740 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800a740:	f010 bca1 	b.w	801b086 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800a744 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a744:	b510      	push	{r4, lr}
 800a746:	b086      	sub	sp, #24
 800a748:	ac02      	add	r4, sp, #8
 800a74a:	e884 0006 	stmia.w	r4, {r1, r2}
 800a74e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800a750:	ab0a      	add	r3, sp, #40	; 0x28
 800a752:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a754:	9301      	str	r3, [sp, #4]
 800a756:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a758:	9300      	str	r3, [sp, #0]
 800a75a:	4621      	mov	r1, r4
 800a75c:	9b08      	ldr	r3, [sp, #32]
 800a75e:	f00d fd51 	bl	8018204 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a762:	b006      	add	sp, #24
 800a764:	bd10      	pop	{r4, pc}
	...

0800a768 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a768:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800a76a:	bb18      	cbnz	r0, 800a7b4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800a76c:	4b12      	ldr	r3, [pc, #72]	; (800a7b8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800a76e:	4813      	ldr	r0, [pc, #76]	; (800a7bc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800a770:	681c      	ldr	r4, [r3, #0]
 800a772:	4913      	ldr	r1, [pc, #76]	; (800a7c0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800a774:	b1b4      	cbz	r4, 800a7a4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a776:	6822      	ldr	r2, [r4, #0]
 800a778:	4422      	add	r2, r4
 800a77a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a77c:	6862      	ldr	r2, [r4, #4]
 800a77e:	4422      	add	r2, r4
 800a780:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a782:	68a2      	ldr	r2, [r4, #8]
 800a784:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800a786:	4b0f      	ldr	r3, [pc, #60]	; (800a7c4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800a788:	2200      	movs	r2, #0
 800a78a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a78c:	f000 f838 	bl	800a800 <_ZN17TypedTextDatabase8getFontsEv>
 800a790:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a792:	f000 f833 	bl	800a7fc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800a796:	4b0c      	ldr	r3, [pc, #48]	; (800a7c8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a798:	601c      	str	r4, [r3, #0]
        fonts = f;
 800a79a:	4b0c      	ldr	r3, [pc, #48]	; (800a7cc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a79c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800a79e:	4b0c      	ldr	r3, [pc, #48]	; (800a7d0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800a7a0:	8018      	strh	r0, [r3, #0]
    }
}
 800a7a2:	e007      	b.n	800a7b4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800a7a4:	4b0b      	ldr	r3, [pc, #44]	; (800a7d4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800a7a6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a7a8:	4b0b      	ldr	r3, [pc, #44]	; (800a7d8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800a7aa:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a7ac:	4b0b      	ldr	r3, [pc, #44]	; (800a7dc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800a7ae:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800a7b0:	2c00      	cmp	r4, #0
 800a7b2:	d1e8      	bne.n	800a786 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800a7b4:	bd38      	pop	{r3, r4, r5, pc}
 800a7b6:	bf00      	nop
 800a7b8:	20002a14 	.word	0x20002a14
 800a7bc:	20002a18 	.word	0x20002a18
 800a7c0:	20002a1c 	.word	0x20002a1c
 800a7c4:	20002a20 	.word	0x20002a20
 800a7c8:	200138ac 	.word	0x200138ac
 800a7cc:	200138b4 	.word	0x200138b4
 800a7d0:	200138b0 	.word	0x200138b0
 800a7d4:	08049f7c 	.word	0x08049f7c
 800a7d8:	08049db4 	.word	0x08049db4
 800a7dc:	0804a4e4 	.word	0x0804a4e4

0800a7e0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a7e0:	4b04      	ldr	r3, [pc, #16]	; (800a7f4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800a7e2:	681b      	ldr	r3, [r3, #0]
 800a7e4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800a7e8:	4b03      	ldr	r3, [pc, #12]	; (800a7f8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800a7ea:	681b      	ldr	r3, [r3, #0]
}
 800a7ec:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a7f0:	4770      	bx	lr
 800a7f2:	bf00      	nop
 800a7f4:	20002a1c 	.word	0x20002a1c
 800a7f8:	20002a18 	.word	0x20002a18

0800a7fc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800a7fc:	2072      	movs	r0, #114	; 0x72
 800a7fe:	4770      	bx	lr

0800a800 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800a800:	4800      	ldr	r0, [pc, #0]	; (800a804 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800a802:	4770      	bx	lr
 800a804:	20002a24 	.word	0x20002a24

0800a808 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a808:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800a80a:	f7ff febf 	bl	800a58c <_Z23getFont_verdana_19_4bppv>
};
 800a80e:	4c06      	ldr	r4, [pc, #24]	; (800a828 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800a810:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800a812:	f7ff fef9 	bl	800a608 <_Z23getFont_verdana_40_4bppv>
};
 800a816:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800a818:	f7ff fe3c 	bl	800a494 <_Z23getFont_verdana_10_4bppv>
};
 800a81c:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800a81e:	f7ff fe77 	bl	800a510 <_Z23getFont_verdana_12_4bppv>
};
 800a822:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800a824:	bd10      	pop	{r4, pc}
 800a826:	bf00      	nop
 800a828:	20002a24 	.word	0x20002a24

0800a82c <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800a82c:	4770      	bx	lr

0800a82e <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800a82e:	3804      	subs	r0, #4
 800a830:	4770      	bx	lr

0800a832 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800a832:	4770      	bx	lr

0800a834 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800a834:	4770      	bx	lr

0800a836 <_ZN24Calibration_PadPresenterD0Ev>:
 800a836:	b510      	push	{r4, lr}
 800a838:	2110      	movs	r1, #16
 800a83a:	4604      	mov	r4, r0
 800a83c:	f022 fabd 	bl	802cdba <_ZdlPvj>
 800a840:	4620      	mov	r0, r4
 800a842:	bd10      	pop	{r4, pc}

0800a844 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800a844:	f1a0 0004 	sub.w	r0, r0, #4
 800a848:	e7f5      	b.n	800a836 <_ZN24Calibration_PadPresenterD0Ev>

0800a84a <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800a84a:	4770      	bx	lr

0800a84c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800a84c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800a84e:	2200      	movs	r2, #0
 800a850:	6082      	str	r2, [r0, #8]
    : view(v)
 800a852:	4a04      	ldr	r2, [pc, #16]	; (800a864 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800a854:	60c1      	str	r1, [r0, #12]
 800a856:	f102 0408 	add.w	r4, r2, #8
 800a85a:	3224      	adds	r2, #36	; 0x24
 800a85c:	6004      	str	r4, [r0, #0]
 800a85e:	6042      	str	r2, [r0, #4]
}
 800a860:	bd10      	pop	{r4, pc}
 800a862:	bf00      	nop
 800a864:	08031168 	.word	0x08031168

0800a868 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800a868:	4770      	bx	lr

0800a86a <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800a86a:	4770      	bx	lr

0800a86c <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800a86c:	b510      	push	{r4, lr}
 800a86e:	4b03      	ldr	r3, [pc, #12]	; (800a87c <_ZN19Calibration_PadViewD1Ev+0x10>)
 800a870:	6003      	str	r3, [r0, #0]
 800a872:	4604      	mov	r4, r0
 800a874:	f7f8 ff4c 	bl	8003710 <_ZN23Calibration_PadViewBaseD1Ev>
 800a878:	4620      	mov	r0, r4
 800a87a:	bd10      	pop	{r4, pc}
 800a87c:	080311a0 	.word	0x080311a0

0800a880 <_ZN19Calibration_PadViewD0Ev>:
 800a880:	b510      	push	{r4, lr}
 800a882:	4604      	mov	r4, r0
 800a884:	f7ff fff2 	bl	800a86c <_ZN19Calibration_PadViewD1Ev>
 800a888:	4620      	mov	r0, r4
 800a88a:	f641 5104 	movw	r1, #7428	; 0x1d04
 800a88e:	f022 fa94 	bl	802cdba <_ZdlPvj>
 800a892:	4620      	mov	r0, r4
 800a894:	bd10      	pop	{r4, pc}
	...

0800a898 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800a898:	b510      	push	{r4, lr}
 800a89a:	4604      	mov	r4, r0
 800a89c:	f7f9 fae0 	bl	8003e60 <_ZN23Calibration_PadViewBaseC1Ev>
 800a8a0:	4b01      	ldr	r3, [pc, #4]	; (800a8a8 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800a8a2:	6023      	str	r3, [r4, #0]
}
 800a8a4:	4620      	mov	r0, r4
 800a8a6:	bd10      	pop	{r4, pc}
 800a8a8:	080311a0 	.word	0x080311a0

0800a8ac <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 800a8ac:	b570      	push	{r4, r5, r6, lr}
 800a8ae:	4604      	mov	r4, r0
 800a8b0:	b0ca      	sub	sp, #296	; 0x128
 800a8b2:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 800a8b6:	4631      	mov	r1, r6
 800a8b8:	a80d      	add	r0, sp, #52	; 0x34
 800a8ba:	f7f9 f841 	bl	8003940 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a8be:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800a8c2:	9317      	str	r3, [sp, #92]	; 0x5c
 800a8c4:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800a8c8:	9318      	str	r3, [sp, #96]	; 0x60
 800a8ca:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800a8ce:	4a57      	ldr	r2, [pc, #348]	; (800aa2c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 800a8d0:	9319      	str	r3, [sp, #100]	; 0x64
 800a8d2:	f504 718c 	add.w	r1, r4, #280	; 0x118
 800a8d6:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800a8da:	920d      	str	r2, [sp, #52]	; 0x34
 800a8dc:	a81b      	add	r0, sp, #108	; 0x6c
 800a8de:	931a      	str	r3, [sp, #104]	; 0x68
 800a8e0:	f7f9 f82e 	bl	8003940 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a8e4:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800a8e8:	9325      	str	r3, [sp, #148]	; 0x94
 800a8ea:	4b51      	ldr	r3, [pc, #324]	; (800aa30 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 800a8ec:	931b      	str	r3, [sp, #108]	; 0x6c
 800a8ee:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 800a8f2:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 800a8f6:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 800a8fa:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 800a8fe:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 800a902:	a827      	add	r0, sp, #156	; 0x9c
 800a904:	f7f9 f81c 	bl	8003940 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a908:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 800a90c:	9331      	str	r3, [sp, #196]	; 0xc4
 800a90e:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 800a912:	4b48      	ldr	r3, [pc, #288]	; (800aa34 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 800a914:	9327      	str	r3, [sp, #156]	; 0x9c
 800a916:	a832      	add	r0, sp, #200	; 0xc8
 800a918:	f7f9 f812 	bl	8003940 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 800a91c:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 800a920:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 800a924:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 800a928:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 800a92c:	4b42      	ldr	r3, [pc, #264]	; (800aa38 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 800a92e:	9332      	str	r3, [sp, #200]	; 0xc8
 800a930:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 800a934:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 800a938:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 800a93c:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 800a940:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 800a944:	a83e      	add	r0, sp, #248	; 0xf8
 800a946:	f7f8 fffb 	bl	8003940 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a94a:	4b3c      	ldr	r3, [pc, #240]	; (800aa3c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 800a94c:	933e      	str	r3, [sp, #248]	; 0xf8
 800a94e:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a952:	4d3b      	ldr	r5, [pc, #236]	; (800aa40 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 800a954:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 800a958:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 800a95c:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 800a960:	a901      	add	r1, sp, #4
 800a962:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 800a966:	4837      	ldr	r0, [pc, #220]	; (800aa44 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 800a968:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 800a96c:	220c      	movs	r2, #12
 800a96e:	f7f6 faa5 	bl	8000ebc <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a972:	9b01      	ldr	r3, [sp, #4]
 800a974:	462a      	mov	r2, r5
 800a976:	210a      	movs	r1, #10
 800a978:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 800a97c:	f011 fa6e 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 800a980:	9b02      	ldr	r3, [sp, #8]
 800a982:	462a      	mov	r2, r5
 800a984:	210a      	movs	r1, #10
 800a986:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 800a98a:	f011 fa67 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 800a98e:	9b03      	ldr	r3, [sp, #12]
 800a990:	462a      	mov	r2, r5
 800a992:	210a      	movs	r1, #10
 800a994:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 800a998:	f011 fa60 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 800a99c:	9b04      	ldr	r3, [sp, #16]
 800a99e:	462a      	mov	r2, r5
 800a9a0:	210a      	movs	r1, #10
 800a9a2:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 800a9a6:	f011 fa59 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 800a9aa:	9b05      	ldr	r3, [sp, #20]
 800a9ac:	462a      	mov	r2, r5
 800a9ae:	210a      	movs	r1, #10
 800a9b0:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 800a9b4:	f011 fa52 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 800a9b8:	9b06      	ldr	r3, [sp, #24]
 800a9ba:	462a      	mov	r2, r5
 800a9bc:	210a      	movs	r1, #10
 800a9be:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 800a9c2:	f011 fa4b 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 800a9c6:	9b07      	ldr	r3, [sp, #28]
 800a9c8:	462a      	mov	r2, r5
 800a9ca:	210a      	movs	r1, #10
 800a9cc:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 800a9d0:	f011 fa44 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 800a9d4:	9b08      	ldr	r3, [sp, #32]
 800a9d6:	462a      	mov	r2, r5
 800a9d8:	210a      	movs	r1, #10
 800a9da:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 800a9de:	f011 fa3d 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 800a9e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a9e4:	462a      	mov	r2, r5
 800a9e6:	210a      	movs	r1, #10
 800a9e8:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 800a9ec:	f011 fa36 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 800a9f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a9f2:	462a      	mov	r2, r5
 800a9f4:	210a      	movs	r1, #10
 800a9f6:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 800a9fa:	f011 fa2f 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 800a9fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800aa00:	462a      	mov	r2, r5
 800aa02:	210a      	movs	r1, #10
 800aa04:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 800aa08:	f011 fa28 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 800aa0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800aa0e:	462a      	mov	r2, r5
 800aa10:	210a      	movs	r1, #10
 800aa12:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 800aa16:	f011 fa21 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 800aa1a:	4630      	mov	r0, r6
 800aa1c:	f00f f958 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>

#endif
}
 800aa20:	a80d      	add	r0, sp, #52	; 0x34
 800aa22:	f008 fa23 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
 800aa26:	b04a      	add	sp, #296	; 0x128
 800aa28:	bd70      	pop	{r4, r5, r6, pc}
 800aa2a:	bf00      	nop
 800aa2c:	08031820 	.word	0x08031820
 800aa30:	080318e4 	.word	0x080318e4
 800aa34:	0802f734 	.word	0x0802f734
 800aa38:	08031ce0 	.word	0x08031ce0
 800aa3c:	08031ec4 	.word	0x08031ec4
 800aa40:	0802f676 	.word	0x0802f676
 800aa44:	081e0000 	.word	0x081e0000

0800aa48 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800aa48:	f7f8 be22 	b.w	8003690 <_ZN23Calibration_PadViewBase11setupScreenEv>

0800aa4c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800aa4c:	4770      	bx	lr

0800aa4e <_ZN19FrontendApplicationD0Ev>:
 800aa4e:	b510      	push	{r4, lr}
 800aa50:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800aa54:	4604      	mov	r4, r0
 800aa56:	f022 f9b0 	bl	802cdba <_ZdlPvj>
 800aa5a:	4620      	mov	r0, r4
 800aa5c:	bd10      	pop	{r4, pc}

0800aa5e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800aa5e:	b510      	push	{r4, lr}
 800aa60:	4604      	mov	r4, r0
    {
        model.tick();
 800aa62:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800aa66:	f000 fae3 	bl	800b030 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800aa6a:	4620      	mov	r0, r4
    }
 800aa6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800aa70:	f00e b90a 	b.w	8018c88 <_ZN8touchgfx11Application15handleTickEventEv>

0800aa74 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800aa74:	b510      	push	{r4, lr}
 800aa76:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800aa78:	f7fa fde6 	bl	8005648 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800aa7c:	4b01      	ldr	r3, [pc, #4]	; (800aa84 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800aa7e:	6023      	str	r3, [r4, #0]
{

}
 800aa80:	4620      	mov	r0, r4
 800aa82:	bd10      	pop	{r4, pc}
 800aa84:	080311e0 	.word	0x080311e0

0800aa88 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800aa88:	4770      	bx	lr

0800aa8a <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800aa8a:	3804      	subs	r0, #4
 800aa8c:	4770      	bx	lr

0800aa8e <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800aa8e:	4770      	bx	lr

0800aa90 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800aa90:	68c0      	ldr	r0, [r0, #12]
 800aa92:	6803      	ldr	r3, [r0, #0]
 800aa94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa96:	4718      	bx	r3

0800aa98 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aa98:	f1a0 0004 	sub.w	r0, r0, #4
 800aa9c:	f7ff bff8 	b.w	800aa90 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800aaa0 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800aaa0:	b510      	push	{r4, lr}
 800aaa2:	2110      	movs	r1, #16
 800aaa4:	4604      	mov	r4, r0
 800aaa6:	f022 f988 	bl	802cdba <_ZdlPvj>
 800aaaa:	4620      	mov	r0, r4
 800aaac:	bd10      	pop	{r4, pc}

0800aaae <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800aaae:	f1a0 0004 	sub.w	r0, r0, #4
 800aab2:	e7f5      	b.n	800aaa0 <_ZN18Main_MenuPresenterD0Ev>

0800aab4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 800aab4:	b510      	push	{r4, lr}
 800aab6:	2200      	movs	r2, #0
 800aab8:	6082      	str	r2, [r0, #8]
    : view(v)
 800aaba:	4a04      	ldr	r2, [pc, #16]	; (800aacc <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 800aabc:	60c1      	str	r1, [r0, #12]
 800aabe:	f102 0408 	add.w	r4, r2, #8
 800aac2:	3224      	adds	r2, #36	; 0x24
 800aac4:	6004      	str	r4, [r0, #0]
 800aac6:	6042      	str	r2, [r0, #4]
}
 800aac8:	bd10      	pop	{r4, pc}
 800aaca:	bf00      	nop
 800aacc:	0803122c 	.word	0x0803122c

0800aad0 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800aad0:	4770      	bx	lr
	...

0800aad4 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 800aad4:	b510      	push	{r4, lr}
 800aad6:	4b03      	ldr	r3, [pc, #12]	; (800aae4 <_ZN13Main_MenuViewD1Ev+0x10>)
 800aad8:	6003      	str	r3, [r0, #0]
 800aada:	4604      	mov	r4, r0
 800aadc:	f7fb ff2e 	bl	800693c <_ZN17Main_MenuViewBaseD1Ev>
 800aae0:	4620      	mov	r0, r4
 800aae2:	bd10      	pop	{r4, pc}
 800aae4:	08031264 	.word	0x08031264

0800aae8 <_ZN13Main_MenuViewD0Ev>:
 800aae8:	b510      	push	{r4, lr}
 800aaea:	4604      	mov	r4, r0
 800aaec:	f7ff fff2 	bl	800aad4 <_ZN13Main_MenuViewD1Ev>
 800aaf0:	4620      	mov	r0, r4
 800aaf2:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800aaf6:	f022 f960 	bl	802cdba <_ZdlPvj>
 800aafa:	4620      	mov	r0, r4
 800aafc:	bd10      	pop	{r4, pc}
	...

0800ab00 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800ab00:	b510      	push	{r4, lr}
 800ab02:	4604      	mov	r4, r0
 800ab04:	f7fb ff64 	bl	80069d0 <_ZN17Main_MenuViewBaseC1Ev>
 800ab08:	4b01      	ldr	r3, [pc, #4]	; (800ab10 <_ZN13Main_MenuViewC1Ev+0x10>)
 800ab0a:	6023      	str	r3, [r4, #0]
}
 800ab0c:	4620      	mov	r0, r4
 800ab0e:	bd10      	pop	{r4, pc}
 800ab10:	08031264 	.word	0x08031264

0800ab14 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 800ab14:	f7fb beee 	b.w	80068f4 <_ZN17Main_MenuViewBase11setupScreenEv>

0800ab18 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800ab18:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab1a:	4a0a      	ldr	r2, [pc, #40]	; (800ab44 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 800ab1c:	4605      	mov	r5, r0
 800ab1e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab20:	460b      	mov	r3, r1
 800ab22:	f500 7076 	add.w	r0, r0, #984	; 0x3d8
 800ab26:	2104      	movs	r1, #4
 800ab28:	f011 f998 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ab2c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ab30:	f00f f8ce 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ab34:	b92c      	cbnz	r4, 800ab42 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800ab36:	f00d ffe3 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ab3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ab3e:	f7fa be83 	b.w	8005848 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ab42:	bd38      	pop	{r3, r4, r5, pc}
 800ab44:	0802f676 	.word	0x0802f676

0800ab48 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 800ab48:	4770      	bx	lr

0800ab4a <_ZThn4_N20MeasurementPresenterD1Ev>:
 800ab4a:	3804      	subs	r0, #4
 800ab4c:	4770      	bx	lr

0800ab4e <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800ab4e:	4770      	bx	lr

0800ab50 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800ab50:	68c0      	ldr	r0, [r0, #12]
 800ab52:	6803      	ldr	r3, [r0, #0]
 800ab54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ab56:	4718      	bx	r3

0800ab58 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800ab58:	f1a0 0004 	sub.w	r0, r0, #4
 800ab5c:	f7ff bff8 	b.w	800ab50 <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800ab60 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800ab60:	b510      	push	{r4, lr}
 800ab62:	2110      	movs	r1, #16
 800ab64:	4604      	mov	r4, r0
 800ab66:	f022 f928 	bl	802cdba <_ZdlPvj>
 800ab6a:	4620      	mov	r0, r4
 800ab6c:	bd10      	pop	{r4, pc}

0800ab6e <_ZThn4_N20MeasurementPresenterD0Ev>:
 800ab6e:	f1a0 0004 	sub.w	r0, r0, #4
 800ab72:	e7f5      	b.n	800ab60 <_ZN20MeasurementPresenterD0Ev>

0800ab74 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 800ab74:	b510      	push	{r4, lr}
 800ab76:	2200      	movs	r2, #0
 800ab78:	6082      	str	r2, [r0, #8]
    : view(v)
 800ab7a:	4a04      	ldr	r2, [pc, #16]	; (800ab8c <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800ab7c:	60c1      	str	r1, [r0, #12]
 800ab7e:	f102 0408 	add.w	r4, r2, #8
 800ab82:	3224      	adds	r2, #36	; 0x24
 800ab84:	6004      	str	r4, [r0, #0]
 800ab86:	6042      	str	r2, [r0, #4]
}
 800ab88:	bd10      	pop	{r4, pc}
 800ab8a:	bf00      	nop
 800ab8c:	08031294 	.word	0x08031294

0800ab90 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800ab90:	4770      	bx	lr
	...

0800ab94 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800ab94:	b510      	push	{r4, lr}
 800ab96:	4b03      	ldr	r3, [pc, #12]	; (800aba4 <_ZN15MeasurementViewD1Ev+0x10>)
 800ab98:	6003      	str	r3, [r0, #0]
 800ab9a:	4604      	mov	r4, r0
 800ab9c:	f7fc f9d6 	bl	8006f4c <_ZN19MeasurementViewBaseD1Ev>
 800aba0:	4620      	mov	r0, r4
 800aba2:	bd10      	pop	{r4, pc}
 800aba4:	080312cc 	.word	0x080312cc

0800aba8 <_ZN15MeasurementViewD0Ev>:
 800aba8:	b510      	push	{r4, lr}
 800abaa:	4604      	mov	r4, r0
 800abac:	f7ff fff2 	bl	800ab94 <_ZN15MeasurementViewD1Ev>
 800abb0:	4620      	mov	r0, r4
 800abb2:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800abb6:	f022 f900 	bl	802cdba <_ZdlPvj>
 800abba:	4620      	mov	r0, r4
 800abbc:	bd10      	pop	{r4, pc}
	...

0800abc0 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800abc0:	b510      	push	{r4, lr}
 800abc2:	4604      	mov	r4, r0
 800abc4:	f7fc f9fc 	bl	8006fc0 <_ZN19MeasurementViewBaseC1Ev>
 800abc8:	4b01      	ldr	r3, [pc, #4]	; (800abd0 <_ZN15MeasurementViewC1Ev+0x10>)
 800abca:	6023      	str	r3, [r4, #0]
}
 800abcc:	4620      	mov	r0, r4
 800abce:	bd10      	pop	{r4, pc}
 800abd0:	080312cc 	.word	0x080312cc

0800abd4 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 800abd4:	f7fc b996 	b.w	8006f04 <_ZN19MeasurementViewBase11setupScreenEv>

0800abd8 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800abd8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800abda:	4a0a      	ldr	r2, [pc, #40]	; (800ac04 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800abdc:	4605      	mov	r5, r0
 800abde:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800abe0:	460b      	mov	r3, r1
 800abe2:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800abe6:	2104      	movs	r1, #4
 800abe8:	f011 f938 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800abec:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800abf0:	f00f f86e 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800abf4:	b92c      	cbnz	r4, 800ac02 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800abf6:	f00d ff83 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800abfa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800abfe:	f7fa be23 	b.w	8005848 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ac02:	bd38      	pop	{r3, r4, r5, pc}
 800ac04:	0802f676 	.word	0x0802f676

0800ac08 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800ac08:	4770      	bx	lr

0800ac0a <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800ac0a:	3804      	subs	r0, #4
 800ac0c:	4770      	bx	lr

0800ac0e <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800ac0e:	4770      	bx	lr

0800ac10 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800ac10:	68c0      	ldr	r0, [r0, #12]
 800ac12:	6803      	ldr	r3, [r0, #0]
 800ac14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac16:	4718      	bx	r3

0800ac18 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800ac18:	f1a0 0004 	sub.w	r0, r0, #4
 800ac1c:	f7ff bff8 	b.w	800ac10 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800ac20 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800ac20:	b510      	push	{r4, lr}
 800ac22:	2110      	movs	r1, #16
 800ac24:	4604      	mov	r4, r0
 800ac26:	f022 f8c8 	bl	802cdba <_ZdlPvj>
 800ac2a:	4620      	mov	r0, r4
 800ac2c:	bd10      	pop	{r4, pc}

0800ac2e <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800ac2e:	f1a0 0004 	sub.w	r0, r0, #4
 800ac32:	e7f5      	b.n	800ac20 <_ZN29Measurement_AccuratePresenterD0Ev>

0800ac34 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 800ac34:	b510      	push	{r4, lr}
 800ac36:	2200      	movs	r2, #0
 800ac38:	6082      	str	r2, [r0, #8]
    : view(v)
 800ac3a:	4a04      	ldr	r2, [pc, #16]	; (800ac4c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 800ac3c:	60c1      	str	r1, [r0, #12]
 800ac3e:	f102 0408 	add.w	r4, r2, #8
 800ac42:	3224      	adds	r2, #36	; 0x24
 800ac44:	6004      	str	r4, [r0, #0]
 800ac46:	6042      	str	r2, [r0, #4]
}
 800ac48:	bd10      	pop	{r4, pc}
 800ac4a:	bf00      	nop
 800ac4c:	080312fc 	.word	0x080312fc

0800ac50 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800ac50:	4770      	bx	lr
	...

0800ac54 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 800ac54:	b510      	push	{r4, lr}
 800ac56:	4b03      	ldr	r3, [pc, #12]	; (800ac64 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 800ac58:	6003      	str	r3, [r0, #0]
 800ac5a:	4604      	mov	r4, r0
 800ac5c:	f7fc fc3e 	bl	80074dc <_ZN28Measurement_AccurateViewBaseD1Ev>
 800ac60:	4620      	mov	r0, r4
 800ac62:	bd10      	pop	{r4, pc}
 800ac64:	08031334 	.word	0x08031334

0800ac68 <_ZN24Measurement_AccurateViewD0Ev>:
 800ac68:	b510      	push	{r4, lr}
 800ac6a:	4604      	mov	r4, r0
 800ac6c:	f7ff fff2 	bl	800ac54 <_ZN24Measurement_AccurateViewD1Ev>
 800ac70:	4620      	mov	r0, r4
 800ac72:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800ac76:	f022 f8a0 	bl	802cdba <_ZdlPvj>
 800ac7a:	4620      	mov	r0, r4
 800ac7c:	bd10      	pop	{r4, pc}
	...

0800ac80 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 800ac80:	b510      	push	{r4, lr}
 800ac82:	4604      	mov	r4, r0
 800ac84:	f7fc fc64 	bl	8007550 <_ZN28Measurement_AccurateViewBaseC1Ev>
 800ac88:	4b01      	ldr	r3, [pc, #4]	; (800ac90 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800ac8a:	6023      	str	r3, [r4, #0]
}
 800ac8c:	4620      	mov	r0, r4
 800ac8e:	bd10      	pop	{r4, pc}
 800ac90:	08031334 	.word	0x08031334

0800ac94 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800ac94:	f7fc bbfe 	b.w	8007494 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

0800ac98 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 800ac98:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ac9a:	4a0a      	ldr	r2, [pc, #40]	; (800acc4 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800ac9c:	4605      	mov	r5, r0
 800ac9e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aca0:	460b      	mov	r3, r1
 800aca2:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800aca6:	2104      	movs	r1, #4
 800aca8:	f011 f8d8 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800acac:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800acb0:	f00f f80e 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800acb4:	b92c      	cbnz	r4, 800acc2 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800acb6:	f00d ff23 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800acba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800acbe:	f7fa bdc3 	b.w	8005848 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800acc2:	bd38      	pop	{r3, r4, r5, pc}
 800acc4:	0802f676 	.word	0x0802f676

0800acc8 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800acc8:	4770      	bx	lr

0800acca <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800acca:	3804      	subs	r0, #4
 800accc:	4770      	bx	lr

0800acce <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800acce:	4770      	bx	lr

0800acd0 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800acd0:	4770      	bx	lr

0800acd2 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800acd2:	b510      	push	{r4, lr}
 800acd4:	2110      	movs	r1, #16
 800acd6:	4604      	mov	r4, r0
 800acd8:	f022 f86f 	bl	802cdba <_ZdlPvj>
 800acdc:	4620      	mov	r0, r4
 800acde:	bd10      	pop	{r4, pc}

0800ace0 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800ace0:	f1a0 0004 	sub.w	r0, r0, #4
 800ace4:	e7f5      	b.n	800acd2 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800ace6 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800ace6:	4770      	bx	lr

0800ace8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800ace8:	b510      	push	{r4, lr}
 800acea:	2200      	movs	r2, #0
 800acec:	6082      	str	r2, [r0, #8]
    : view(v)
 800acee:	4a04      	ldr	r2, [pc, #16]	; (800ad00 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800acf0:	60c1      	str	r1, [r0, #12]
 800acf2:	f102 0408 	add.w	r4, r2, #8
 800acf6:	3224      	adds	r2, #36	; 0x24
 800acf8:	6004      	str	r4, [r0, #0]
 800acfa:	6042      	str	r2, [r0, #4]
}
 800acfc:	bd10      	pop	{r4, pc}
 800acfe:	bf00      	nop
 800ad00:	08031364 	.word	0x08031364

0800ad04 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800ad04:	4770      	bx	lr
	...

0800ad08 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800ad08:	b510      	push	{r4, lr}
 800ad0a:	4b03      	ldr	r3, [pc, #12]	; (800ad18 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 800ad0c:	6003      	str	r3, [r0, #0]
 800ad0e:	4604      	mov	r4, r0
 800ad10:	f7fc feac 	bl	8007a6c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800ad14:	4620      	mov	r0, r4
 800ad16:	bd10      	pop	{r4, pc}
 800ad18:	0803139c 	.word	0x0803139c

0800ad1c <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 800ad1c:	b510      	push	{r4, lr}
 800ad1e:	4604      	mov	r4, r0
 800ad20:	f7ff fff2 	bl	800ad08 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 800ad24:	4620      	mov	r0, r4
 800ad26:	f241 4178 	movw	r1, #5240	; 0x1478
 800ad2a:	f022 f846 	bl	802cdba <_ZdlPvj>
 800ad2e:	4620      	mov	r0, r4
 800ad30:	bd10      	pop	{r4, pc}
	...

0800ad34 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 800ad34:	b510      	push	{r4, lr}
 800ad36:	4604      	mov	r4, r0
 800ad38:	f7fc fec0 	bl	8007abc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 800ad3c:	4b01      	ldr	r3, [pc, #4]	; (800ad44 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800ad3e:	6023      	str	r3, [r4, #0]
}
 800ad40:	4620      	mov	r0, r4
 800ad42:	bd10      	pop	{r4, pc}
 800ad44:	0803139c 	.word	0x0803139c

0800ad48 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 800ad48:	f7fc be6c 	b.w	8007a24 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800ad4c <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800ad4c:	4770      	bx	lr

0800ad4e <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800ad4e:	3804      	subs	r0, #4
 800ad50:	4770      	bx	lr

0800ad52 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800ad52:	4770      	bx	lr

0800ad54 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 800ad54:	4770      	bx	lr

0800ad56 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800ad56:	b510      	push	{r4, lr}
 800ad58:	2110      	movs	r1, #16
 800ad5a:	4604      	mov	r4, r0
 800ad5c:	f022 f82d 	bl	802cdba <_ZdlPvj>
 800ad60:	4620      	mov	r0, r4
 800ad62:	bd10      	pop	{r4, pc}

0800ad64 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 800ad64:	f1a0 0004 	sub.w	r0, r0, #4
 800ad68:	e7f5      	b.n	800ad56 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800ad6a <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800ad6a:	4770      	bx	lr

0800ad6c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800ad6c:	b510      	push	{r4, lr}
 800ad6e:	2200      	movs	r2, #0
 800ad70:	6082      	str	r2, [r0, #8]
    : view(v)
 800ad72:	4a04      	ldr	r2, [pc, #16]	; (800ad84 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 800ad74:	60c1      	str	r1, [r0, #12]
 800ad76:	f102 0408 	add.w	r4, r2, #8
 800ad7a:	3224      	adds	r2, #36	; 0x24
 800ad7c:	6004      	str	r4, [r0, #0]
 800ad7e:	6042      	str	r2, [r0, #4]
}
 800ad80:	bd10      	pop	{r4, pc}
 800ad82:	bf00      	nop
 800ad84:	080313c8 	.word	0x080313c8

0800ad88 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 800ad88:	4770      	bx	lr
	...

0800ad8c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800ad8c:	b510      	push	{r4, lr}
 800ad8e:	4b03      	ldr	r3, [pc, #12]	; (800ad9c <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800ad90:	6003      	str	r3, [r0, #0]
 800ad92:	4604      	mov	r4, r0
 800ad94:	f7fd fa42 	bl	800821c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800ad98:	4620      	mov	r0, r4
 800ad9a:	bd10      	pop	{r4, pc}
 800ad9c:	08031400 	.word	0x08031400

0800ada0 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800ada0:	b510      	push	{r4, lr}
 800ada2:	4604      	mov	r4, r0
 800ada4:	f7ff fff2 	bl	800ad8c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 800ada8:	4620      	mov	r0, r4
 800adaa:	f241 4178 	movw	r1, #5240	; 0x1478
 800adae:	f022 f804 	bl	802cdba <_ZdlPvj>
 800adb2:	4620      	mov	r0, r4
 800adb4:	bd10      	pop	{r4, pc}
	...

0800adb8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 800adb8:	b510      	push	{r4, lr}
 800adba:	4604      	mov	r4, r0
 800adbc:	f7fd fa56 	bl	800826c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800adc0:	4b01      	ldr	r3, [pc, #4]	; (800adc8 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800adc2:	6023      	str	r3, [r4, #0]
}
 800adc4:	4620      	mov	r0, r4
 800adc6:	bd10      	pop	{r4, pc}
 800adc8:	08031400 	.word	0x08031400

0800adcc <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800adcc:	f7fd ba02 	b.w	80081d4 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800add0 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800add0:	4770      	bx	lr

0800add2 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800add2:	3804      	subs	r0, #4
 800add4:	4770      	bx	lr

0800add6 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800add6:	4770      	bx	lr

0800add8 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800add8:	68c0      	ldr	r0, [r0, #12]
 800adda:	6803      	ldr	r3, [r0, #0]
 800addc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800adde:	4718      	bx	r3

0800ade0 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800ade0:	f1a0 0004 	sub.w	r0, r0, #4
 800ade4:	f7ff bff8 	b.w	800add8 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800ade8 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800ade8:	b510      	push	{r4, lr}
 800adea:	2110      	movs	r1, #16
 800adec:	4604      	mov	r4, r0
 800adee:	f021 ffe4 	bl	802cdba <_ZdlPvj>
 800adf2:	4620      	mov	r0, r4
 800adf4:	bd10      	pop	{r4, pc}

0800adf6 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800adf6:	f1a0 0004 	sub.w	r0, r0, #4
 800adfa:	e7f5      	b.n	800ade8 <_ZN27Measurement_SinglePresenterD0Ev>

0800adfc <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 800adfc:	b510      	push	{r4, lr}
 800adfe:	2200      	movs	r2, #0
 800ae00:	6082      	str	r2, [r0, #8]
    : view(v)
 800ae02:	4a04      	ldr	r2, [pc, #16]	; (800ae14 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 800ae04:	60c1      	str	r1, [r0, #12]
 800ae06:	f102 0408 	add.w	r4, r2, #8
 800ae0a:	3224      	adds	r2, #36	; 0x24
 800ae0c:	6004      	str	r4, [r0, #0]
 800ae0e:	6042      	str	r2, [r0, #4]
}
 800ae10:	bd10      	pop	{r4, pc}
 800ae12:	bf00      	nop
 800ae14:	0803142c 	.word	0x0803142c

0800ae18 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800ae18:	4770      	bx	lr
	...

0800ae1c <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 800ae1c:	b510      	push	{r4, lr}
 800ae1e:	4b03      	ldr	r3, [pc, #12]	; (800ae2c <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800ae20:	6003      	str	r3, [r0, #0]
 800ae22:	4604      	mov	r4, r0
 800ae24:	f7fd fdd0 	bl	80089c8 <_ZN26Measurement_SingleViewBaseD1Ev>
 800ae28:	4620      	mov	r0, r4
 800ae2a:	bd10      	pop	{r4, pc}
 800ae2c:	08031464 	.word	0x08031464

0800ae30 <_ZN22Measurement_SingleViewD0Ev>:
 800ae30:	b510      	push	{r4, lr}
 800ae32:	4604      	mov	r4, r0
 800ae34:	f7ff fff2 	bl	800ae1c <_ZN22Measurement_SingleViewD1Ev>
 800ae38:	4620      	mov	r0, r4
 800ae3a:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800ae3e:	f021 ffbc 	bl	802cdba <_ZdlPvj>
 800ae42:	4620      	mov	r0, r4
 800ae44:	bd10      	pop	{r4, pc}
	...

0800ae48 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800ae48:	b510      	push	{r4, lr}
 800ae4a:	4604      	mov	r4, r0
 800ae4c:	f7fd fdf6 	bl	8008a3c <_ZN26Measurement_SingleViewBaseC1Ev>
 800ae50:	4b01      	ldr	r3, [pc, #4]	; (800ae58 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800ae52:	6023      	str	r3, [r4, #0]
}
 800ae54:	4620      	mov	r0, r4
 800ae56:	bd10      	pop	{r4, pc}
 800ae58:	08031464 	.word	0x08031464

0800ae5c <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800ae5c:	f7fd bd90 	b.w	8008980 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800ae60 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800ae60:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ae62:	4a0a      	ldr	r2, [pc, #40]	; (800ae8c <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 800ae64:	4605      	mov	r5, r0
 800ae66:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ae68:	460b      	mov	r3, r1
 800ae6a:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ae6e:	2104      	movs	r1, #4
 800ae70:	f010 fff4 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ae74:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ae78:	f00e ff2a 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ae7c:	b92c      	cbnz	r4, 800ae8a <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800ae7e:	f00d fe3f 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ae82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ae86:	f7fa bcdf 	b.w	8005848 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ae8a:	bd38      	pop	{r3, r4, r5, pc}
 800ae8c:	0802f676 	.word	0x0802f676

0800ae90 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800ae90:	4770      	bx	lr

0800ae92 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800ae92:	3804      	subs	r0, #4
 800ae94:	4770      	bx	lr

0800ae96 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800ae96:	4770      	bx	lr

0800ae98 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800ae98:	4770      	bx	lr

0800ae9a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800ae9a:	b510      	push	{r4, lr}
 800ae9c:	2110      	movs	r1, #16
 800ae9e:	4604      	mov	r4, r0
 800aea0:	f021 ff8b 	bl	802cdba <_ZdlPvj>
 800aea4:	4620      	mov	r0, r4
 800aea6:	bd10      	pop	{r4, pc}

0800aea8 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800aea8:	f1a0 0004 	sub.w	r0, r0, #4
 800aeac:	e7f5      	b.n	800ae9a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800aeae <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800aeae:	4770      	bx	lr

0800aeb0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 800aeb0:	b510      	push	{r4, lr}
 800aeb2:	2200      	movs	r2, #0
 800aeb4:	6082      	str	r2, [r0, #8]
    : view(v)
 800aeb6:	4a04      	ldr	r2, [pc, #16]	; (800aec8 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800aeb8:	60c1      	str	r1, [r0, #12]
 800aeba:	f102 0408 	add.w	r4, r2, #8
 800aebe:	3224      	adds	r2, #36	; 0x24
 800aec0:	6004      	str	r4, [r0, #0]
 800aec2:	6042      	str	r2, [r0, #4]
}
 800aec4:	bd10      	pop	{r4, pc}
 800aec6:	bf00      	nop
 800aec8:	08031494 	.word	0x08031494

0800aecc <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800aecc:	4770      	bx	lr
	...

0800aed0 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800aed0:	b510      	push	{r4, lr}
 800aed2:	4b03      	ldr	r3, [pc, #12]	; (800aee0 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800aed4:	6003      	str	r3, [r0, #0]
 800aed6:	4604      	mov	r4, r0
 800aed8:	f7fe f840 	bl	8008f5c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800aedc:	4620      	mov	r0, r4
 800aede:	bd10      	pop	{r4, pc}
 800aee0:	080314d4 	.word	0x080314d4

0800aee4 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800aee4:	b510      	push	{r4, lr}
 800aee6:	4604      	mov	r4, r0
 800aee8:	f7ff fff2 	bl	800aed0 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 800aeec:	4620      	mov	r0, r4
 800aeee:	f241 417c 	movw	r1, #5244	; 0x147c
 800aef2:	f021 ff62 	bl	802cdba <_ZdlPvj>
 800aef6:	4620      	mov	r0, r4
 800aef8:	bd10      	pop	{r4, pc}
	...

0800aefc <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 800aefc:	b510      	push	{r4, lr}
 800aefe:	4604      	mov	r4, r0
 800af00:	f7fe f864 	bl	8008fcc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800af04:	4b01      	ldr	r3, [pc, #4]	; (800af0c <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800af06:	6023      	str	r3, [r4, #0]
}
 800af08:	4620      	mov	r0, r4
 800af0a:	bd10      	pop	{r4, pc}
 800af0c:	080314d4 	.word	0x080314d4

0800af10 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800af10:	f7fd bfff 	b.w	8008f12 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800af14 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 800af14:	b510      	push	{r4, lr}
 800af16:	b088      	sub	sp, #32
 800af18:	4604      	mov	r4, r0
#ifndef SIMULATOR

	// Start measurement
	uint32_t* Samples = MEAS_start_measure();
 800af1a:	f7f7 f9c9 	bl	80022b0 <MEAS_start_measure>

	// calculate single measurement values
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800af1e:	f7f6 f96b 	bl	80011f8 <single_measurement>

	//update GUI values
	//set gauge angle
	SMD1_Gauge.setValue(single_meas.angle);
 800af22:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800af26:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 800af2a:	ee17 1a90 	vmov	r1, s15
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800af2e:	ed8d 0a04 	vstr	s0, [sp, #16]
 800af32:	ed8d 1a06 	vstr	s2, [sp, #24]
	SMD1_Gauge.setValue(single_meas.angle);
 800af36:	9001      	str	r0, [sp, #4]
 800af38:	f00a fe80 	bl	8015c3c <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_Gauge.invalidate();
 800af3c:	9801      	ldr	r0, [sp, #4]
 800af3e:	f00e fec7 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintfFloat(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%.2f", 420.69);
 800af42:	4b15      	ldr	r3, [pc, #84]	; (800af98 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800af44:	4a15      	ldr	r2, [pc, #84]	; (800af9c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800af46:	9303      	str	r3, [sp, #12]
 800af48:	210a      	movs	r1, #10
 800af4a:	ab03      	add	r3, sp, #12
 800af4c:	f204 601c 	addw	r0, r4, #1564	; 0x61c
 800af50:	f011 f970 	bl	801c234 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Current.invalidate();
 800af54:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 800af58:	f00e feba 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", single_meas.frequency);
 800af5c:	9b06      	ldr	r3, [sp, #24]
 800af5e:	4a0f      	ldr	r2, [pc, #60]	; (800af9c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800af60:	9303      	str	r3, [sp, #12]
 800af62:	210a      	movs	r1, #10
 800af64:	ab03      	add	r3, sp, #12
 800af66:	f504 60c6 	add.w	r0, r4, #1584	; 0x630
 800af6a:	f011 f963 	bl	801c234 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 800af6e:	f504 7001 	add.w	r0, r4, #516	; 0x204
 800af72:	f00e fead 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", single_meas.distance);
 800af76:	9b04      	ldr	r3, [sp, #16]
 800af78:	9303      	str	r3, [sp, #12]
 800af7a:	4a08      	ldr	r2, [pc, #32]	; (800af9c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800af7c:	ab03      	add	r3, sp, #12
 800af7e:	210a      	movs	r1, #10
 800af80:	f204 6044 	addw	r0, r4, #1604	; 0x644
 800af84:	f011 f956 	bl	801c234 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 800af88:	f504 7014 	add.w	r0, r4, #592	; 0x250

#endif
}
 800af8c:	b008      	add	sp, #32
 800af8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	SMD1_Distance.invalidate();
 800af92:	f00e be9d 	b.w	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>
 800af96:	bf00      	nop
 800af98:	43d25852 	.word	0x43d25852
 800af9c:	080314c4 	.word	0x080314c4

0800afa0 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800afa0:	4770      	bx	lr

0800afa2 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800afa2:	3804      	subs	r0, #4
 800afa4:	4770      	bx	lr

0800afa6 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800afa6:	4770      	bx	lr

0800afa8 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 800afa8:	4770      	bx	lr

0800afaa <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800afaa:	b510      	push	{r4, lr}
 800afac:	2110      	movs	r1, #16
 800afae:	4604      	mov	r4, r0
 800afb0:	f021 ff03 	bl	802cdba <_ZdlPvj>
 800afb4:	4620      	mov	r0, r4
 800afb6:	bd10      	pop	{r4, pc}

0800afb8 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800afb8:	f1a0 0004 	sub.w	r0, r0, #4
 800afbc:	e7f5      	b.n	800afaa <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800afbe <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800afbe:	4770      	bx	lr

0800afc0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800afc0:	b510      	push	{r4, lr}
 800afc2:	2200      	movs	r2, #0
 800afc4:	6082      	str	r2, [r0, #8]
    : view(v)
 800afc6:	4a04      	ldr	r2, [pc, #16]	; (800afd8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800afc8:	60c1      	str	r1, [r0, #12]
 800afca:	f102 0408 	add.w	r4, r2, #8
 800afce:	3224      	adds	r2, #36	; 0x24
 800afd0:	6004      	str	r4, [r0, #0]
 800afd2:	6042      	str	r2, [r0, #4]
}
 800afd4:	bd10      	pop	{r4, pc}
 800afd6:	bf00      	nop
 800afd8:	08031504 	.word	0x08031504

0800afdc <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800afdc:	4770      	bx	lr
	...

0800afe0 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800afe0:	b510      	push	{r4, lr}
 800afe2:	4b03      	ldr	r3, [pc, #12]	; (800aff0 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 800afe4:	6003      	str	r3, [r0, #0]
 800afe6:	4604      	mov	r4, r0
 800afe8:	f7fe fb9c 	bl	8009724 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800afec:	4620      	mov	r0, r4
 800afee:	bd10      	pop	{r4, pc}
 800aff0:	0803153c 	.word	0x0803153c

0800aff4 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 800aff4:	b510      	push	{r4, lr}
 800aff6:	4604      	mov	r4, r0
 800aff8:	f7ff fff2 	bl	800afe0 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800affc:	4620      	mov	r0, r4
 800affe:	f241 4178 	movw	r1, #5240	; 0x1478
 800b002:	f021 feda 	bl	802cdba <_ZdlPvj>
 800b006:	4620      	mov	r0, r4
 800b008:	bd10      	pop	{r4, pc}
	...

0800b00c <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800b00c:	b510      	push	{r4, lr}
 800b00e:	4604      	mov	r4, r0
 800b010:	f7fe fbb0 	bl	8009774 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 800b014:	4b01      	ldr	r3, [pc, #4]	; (800b01c <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800b016:	6023      	str	r3, [r4, #0]
}
 800b018:	4620      	mov	r0, r4
 800b01a:	bd10      	pop	{r4, pc}
 800b01c:	0803153c 	.word	0x0803153c

0800b020 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800b020:	f7fe bb5c 	b.w	80096dc <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

0800b024 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 800b024:	2100      	movs	r1, #0
 800b026:	223c      	movs	r2, #60	; 0x3c
 800b028:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800b02c:	4770      	bx	lr
	...

0800b030 <_ZN5Model4tickEv>:

void Model::tick()
{
 800b030:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800b032:	4d0a      	ldr	r5, [pc, #40]	; (800b05c <_ZN5Model4tickEv+0x2c>)
{
 800b034:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800b036:	6828      	ldr	r0, [r5, #0]
 800b038:	f004 fe80 	bl	800fd3c <osMessageQueueGetCount>
 800b03c:	b168      	cbz	r0, 800b05a <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800b03e:	2300      	movs	r3, #0
 800b040:	6828      	ldr	r0, [r5, #0]
 800b042:	461a      	mov	r2, r3
 800b044:	1d21      	adds	r1, r4, #4
 800b046:	f004 fe45 	bl	800fcd4 <osMessageQueueGet>
 800b04a:	b930      	cbnz	r0, 800b05a <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800b04c:	6820      	ldr	r0, [r4, #0]
 800b04e:	6861      	ldr	r1, [r4, #4]
 800b050:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800b052:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800b056:	689b      	ldr	r3, [r3, #8]
 800b058:	4718      	bx	r3
}
 800b05a:	bd70      	pop	{r4, r5, r6, pc}
 800b05c:	200001f0 	.word	0x200001f0

0800b060 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 800b060:	4770      	bx	lr

0800b062 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800b062:	3804      	subs	r0, #4
 800b064:	4770      	bx	lr

0800b066 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800b066:	4770      	bx	lr

0800b068 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800b068:	68c0      	ldr	r0, [r0, #12]
 800b06a:	6803      	ldr	r3, [r0, #0]
 800b06c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b06e:	4718      	bx	r3

0800b070 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800b070:	f1a0 0004 	sub.w	r0, r0, #4
 800b074:	f7ff bff8 	b.w	800b068 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

0800b078 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 800b078:	b510      	push	{r4, lr}
 800b07a:	2110      	movs	r1, #16
 800b07c:	4604      	mov	r4, r0
 800b07e:	f021 fe9c 	bl	802cdba <_ZdlPvj>
 800b082:	4620      	mov	r0, r4
 800b084:	bd10      	pop	{r4, pc}

0800b086 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800b086:	f1a0 0004 	sub.w	r0, r0, #4
 800b08a:	e7f5      	b.n	800b078 <_ZN21Project_InfoPresenterD0Ev>

0800b08c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800b08c:	b510      	push	{r4, lr}
 800b08e:	2200      	movs	r2, #0
 800b090:	6082      	str	r2, [r0, #8]
    : view(v)
 800b092:	4a04      	ldr	r2, [pc, #16]	; (800b0a4 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 800b094:	60c1      	str	r1, [r0, #12]
 800b096:	f102 0408 	add.w	r4, r2, #8
 800b09a:	3224      	adds	r2, #36	; 0x24
 800b09c:	6004      	str	r4, [r0, #0]
 800b09e:	6042      	str	r2, [r0, #4]
}
 800b0a0:	bd10      	pop	{r4, pc}
 800b0a2:	bf00      	nop
 800b0a4:	08031568 	.word	0x08031568

0800b0a8 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 800b0a8:	4770      	bx	lr
	...

0800b0ac <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800b0ac:	b510      	push	{r4, lr}
 800b0ae:	4b03      	ldr	r3, [pc, #12]	; (800b0bc <_ZN16Project_InfoViewD1Ev+0x10>)
 800b0b0:	6003      	str	r3, [r0, #0]
 800b0b2:	4604      	mov	r4, r0
 800b0b4:	f7fe ff06 	bl	8009ec4 <_ZN20Project_InfoViewBaseD1Ev>
 800b0b8:	4620      	mov	r0, r4
 800b0ba:	bd10      	pop	{r4, pc}
 800b0bc:	080315a0 	.word	0x080315a0

0800b0c0 <_ZN16Project_InfoViewD0Ev>:
 800b0c0:	b510      	push	{r4, lr}
 800b0c2:	4604      	mov	r4, r0
 800b0c4:	f7ff fff2 	bl	800b0ac <_ZN16Project_InfoViewD1Ev>
 800b0c8:	4620      	mov	r0, r4
 800b0ca:	f241 117c 	movw	r1, #4476	; 0x117c
 800b0ce:	f021 fe74 	bl	802cdba <_ZdlPvj>
 800b0d2:	4620      	mov	r0, r4
 800b0d4:	bd10      	pop	{r4, pc}
	...

0800b0d8 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800b0d8:	b510      	push	{r4, lr}
 800b0da:	4604      	mov	r4, r0
 800b0dc:	f7fe ff1a 	bl	8009f14 <_ZN20Project_InfoViewBaseC1Ev>
 800b0e0:	4b01      	ldr	r3, [pc, #4]	; (800b0e8 <_ZN16Project_InfoViewC1Ev+0x10>)
 800b0e2:	6023      	str	r3, [r4, #0]
}
 800b0e4:	4620      	mov	r0, r4
 800b0e6:	bd10      	pop	{r4, pc}
 800b0e8:	080315a0 	.word	0x080315a0

0800b0ec <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800b0ec:	f7fe bec6 	b.w	8009e7c <_ZN20Project_InfoViewBase11setupScreenEv>

0800b0f0 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800b0f0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800b0f2:	4a0a      	ldr	r2, [pc, #40]	; (800b11c <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 800b0f4:	4605      	mov	r5, r0
 800b0f6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800b0f8:	460b      	mov	r3, r1
 800b0fa:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800b0fe:	2104      	movs	r1, #4
 800b100:	f010 feac 	bl	801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800b104:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800b108:	f00e fde2 	bl	8019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800b10c:	b92c      	cbnz	r4, 800b11a <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800b10e:	f00d fcf7 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800b112:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800b116:	f7fa bb97 	b.w	8005848 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800b11a:	bd38      	pop	{r3, r4, r5, pc}
 800b11c:	0802f676 	.word	0x0802f676

0800b120 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800b120:	4770      	bx	lr

0800b122 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800b122:	3804      	subs	r0, #4
 800b124:	4770      	bx	lr

0800b126 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800b126:	4770      	bx	lr

0800b128 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800b128:	4770      	bx	lr

0800b12a <_ZN21Shutting_OffPresenterD0Ev>:
 800b12a:	b510      	push	{r4, lr}
 800b12c:	2110      	movs	r1, #16
 800b12e:	4604      	mov	r4, r0
 800b130:	f021 fe43 	bl	802cdba <_ZdlPvj>
 800b134:	4620      	mov	r0, r4
 800b136:	bd10      	pop	{r4, pc}

0800b138 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 800b138:	f1a0 0004 	sub.w	r0, r0, #4
 800b13c:	e7f5      	b.n	800b12a <_ZN21Shutting_OffPresenterD0Ev>

0800b13e <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800b13e:	4770      	bx	lr

0800b140 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800b140:	b510      	push	{r4, lr}
 800b142:	2200      	movs	r2, #0
 800b144:	6082      	str	r2, [r0, #8]
    : view(v)
 800b146:	4a04      	ldr	r2, [pc, #16]	; (800b158 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 800b148:	60c1      	str	r1, [r0, #12]
 800b14a:	f102 0408 	add.w	r4, r2, #8
 800b14e:	3224      	adds	r2, #36	; 0x24
 800b150:	6004      	str	r4, [r0, #0]
 800b152:	6042      	str	r2, [r0, #4]
}
 800b154:	bd10      	pop	{r4, pc}
 800b156:	bf00      	nop
 800b158:	080315d0 	.word	0x080315d0

0800b15c <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 800b15c:	4770      	bx	lr
	...

0800b160 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800b160:	b510      	push	{r4, lr}
 800b162:	4b03      	ldr	r3, [pc, #12]	; (800b170 <_ZN16Shutting_OffViewD1Ev+0x10>)
 800b164:	6003      	str	r3, [r0, #0]
 800b166:	4604      	mov	r4, r0
 800b168:	f7ff f91e 	bl	800a3a8 <_ZN20Shutting_OffViewBaseD1Ev>
 800b16c:	4620      	mov	r0, r4
 800b16e:	bd10      	pop	{r4, pc}
 800b170:	08031608 	.word	0x08031608

0800b174 <_ZN16Shutting_OffViewD0Ev>:
 800b174:	b510      	push	{r4, lr}
 800b176:	4604      	mov	r4, r0
 800b178:	f7ff fff2 	bl	800b160 <_ZN16Shutting_OffViewD1Ev>
 800b17c:	4620      	mov	r0, r4
 800b17e:	2198      	movs	r1, #152	; 0x98
 800b180:	f021 fe1b 	bl	802cdba <_ZdlPvj>
 800b184:	4620      	mov	r0, r4
 800b186:	bd10      	pop	{r4, pc}

0800b188 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 800b188:	b510      	push	{r4, lr}
 800b18a:	4604      	mov	r4, r0
 800b18c:	f7ff f916 	bl	800a3bc <_ZN20Shutting_OffViewBaseC1Ev>
 800b190:	4b01      	ldr	r3, [pc, #4]	; (800b198 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800b192:	6023      	str	r3, [r4, #0]
}
 800b194:	4620      	mov	r0, r4
 800b196:	bd10      	pop	{r4, pc}
 800b198:	08031608 	.word	0x08031608

0800b19c <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800b19c:	f7ff b905 	b.w	800a3aa <_ZN20Shutting_OffViewBase11setupScreenEv>

0800b1a0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800b1a0:	20f0      	movs	r0, #240	; 0xf0
 800b1a2:	4770      	bx	lr

0800b1a4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800b1a4:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800b1a8:	4770      	bx	lr
 800b1aa:	bf00      	nop

0800b1ac <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800b1ac:	2029      	movs	r0, #41	; 0x29
 800b1ae:	f7f6 bef7 	b.w	8001fa0 <LCD_IO_WriteReg>
 800b1b2:	bf00      	nop

0800b1b4 <ili9341_DisplayOff>:
 800b1b4:	2028      	movs	r0, #40	; 0x28
 800b1b6:	f7f6 bef3 	b.w	8001fa0 <LCD_IO_WriteReg>
 800b1ba:	bf00      	nop

0800b1bc <ili9341_Init>:
{
 800b1bc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b1be:	f7f6 feb5 	bl	8001f2c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800b1c2:	20ca      	movs	r0, #202	; 0xca
 800b1c4:	f7f6 feec 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1c8:	20c3      	movs	r0, #195	; 0xc3
 800b1ca:	f7f6 febf 	bl	8001f4c <LCD_IO_WriteData>
 800b1ce:	2008      	movs	r0, #8
 800b1d0:	f7f6 febc 	bl	8001f4c <LCD_IO_WriteData>
 800b1d4:	2050      	movs	r0, #80	; 0x50
 800b1d6:	f7f6 feb9 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1da:	20cf      	movs	r0, #207	; 0xcf
 800b1dc:	f7f6 fee0 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1e0:	2000      	movs	r0, #0
 800b1e2:	f7f6 feb3 	bl	8001f4c <LCD_IO_WriteData>
 800b1e6:	20c1      	movs	r0, #193	; 0xc1
 800b1e8:	f7f6 feb0 	bl	8001f4c <LCD_IO_WriteData>
 800b1ec:	2030      	movs	r0, #48	; 0x30
 800b1ee:	f7f6 fead 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1f2:	20ed      	movs	r0, #237	; 0xed
 800b1f4:	f7f6 fed4 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1f8:	2064      	movs	r0, #100	; 0x64
 800b1fa:	f7f6 fea7 	bl	8001f4c <LCD_IO_WriteData>
 800b1fe:	2003      	movs	r0, #3
 800b200:	f7f6 fea4 	bl	8001f4c <LCD_IO_WriteData>
 800b204:	2012      	movs	r0, #18
 800b206:	f7f6 fea1 	bl	8001f4c <LCD_IO_WriteData>
 800b20a:	2081      	movs	r0, #129	; 0x81
 800b20c:	f7f6 fe9e 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b210:	20e8      	movs	r0, #232	; 0xe8
 800b212:	f7f6 fec5 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b216:	2085      	movs	r0, #133	; 0x85
 800b218:	f7f6 fe98 	bl	8001f4c <LCD_IO_WriteData>
 800b21c:	2000      	movs	r0, #0
 800b21e:	f7f6 fe95 	bl	8001f4c <LCD_IO_WriteData>
 800b222:	2078      	movs	r0, #120	; 0x78
 800b224:	f7f6 fe92 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b228:	20cb      	movs	r0, #203	; 0xcb
 800b22a:	f7f6 feb9 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b22e:	2039      	movs	r0, #57	; 0x39
 800b230:	f7f6 fe8c 	bl	8001f4c <LCD_IO_WriteData>
 800b234:	202c      	movs	r0, #44	; 0x2c
 800b236:	f7f6 fe89 	bl	8001f4c <LCD_IO_WriteData>
 800b23a:	2000      	movs	r0, #0
 800b23c:	f7f6 fe86 	bl	8001f4c <LCD_IO_WriteData>
 800b240:	2034      	movs	r0, #52	; 0x34
 800b242:	f7f6 fe83 	bl	8001f4c <LCD_IO_WriteData>
 800b246:	2002      	movs	r0, #2
 800b248:	f7f6 fe80 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b24c:	20f7      	movs	r0, #247	; 0xf7
 800b24e:	f7f6 fea7 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b252:	2020      	movs	r0, #32
 800b254:	f7f6 fe7a 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b258:	20ea      	movs	r0, #234	; 0xea
 800b25a:	f7f6 fea1 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b25e:	2000      	movs	r0, #0
 800b260:	f7f6 fe74 	bl	8001f4c <LCD_IO_WriteData>
 800b264:	2000      	movs	r0, #0
 800b266:	f7f6 fe71 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b26a:	20b1      	movs	r0, #177	; 0xb1
 800b26c:	f7f6 fe98 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b270:	2000      	movs	r0, #0
 800b272:	f7f6 fe6b 	bl	8001f4c <LCD_IO_WriteData>
 800b276:	201b      	movs	r0, #27
 800b278:	f7f6 fe68 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b27c:	20b6      	movs	r0, #182	; 0xb6
 800b27e:	f7f6 fe8f 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b282:	200a      	movs	r0, #10
 800b284:	f7f6 fe62 	bl	8001f4c <LCD_IO_WriteData>
 800b288:	20a2      	movs	r0, #162	; 0xa2
 800b28a:	f7f6 fe5f 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b28e:	20c0      	movs	r0, #192	; 0xc0
 800b290:	f7f6 fe86 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b294:	2010      	movs	r0, #16
 800b296:	f7f6 fe59 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b29a:	20c1      	movs	r0, #193	; 0xc1
 800b29c:	f7f6 fe80 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2a0:	2010      	movs	r0, #16
 800b2a2:	f7f6 fe53 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2a6:	20c5      	movs	r0, #197	; 0xc5
 800b2a8:	f7f6 fe7a 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2ac:	2045      	movs	r0, #69	; 0x45
 800b2ae:	f7f6 fe4d 	bl	8001f4c <LCD_IO_WriteData>
 800b2b2:	2015      	movs	r0, #21
 800b2b4:	f7f6 fe4a 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2b8:	20c7      	movs	r0, #199	; 0xc7
 800b2ba:	f7f6 fe71 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2be:	2090      	movs	r0, #144	; 0x90
 800b2c0:	f7f6 fe44 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2c4:	2036      	movs	r0, #54	; 0x36
 800b2c6:	f7f6 fe6b 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2ca:	20c8      	movs	r0, #200	; 0xc8
 800b2cc:	f7f6 fe3e 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2d0:	20f2      	movs	r0, #242	; 0xf2
 800b2d2:	f7f6 fe65 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2d6:	2000      	movs	r0, #0
 800b2d8:	f7f6 fe38 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2dc:	20b0      	movs	r0, #176	; 0xb0
 800b2de:	f7f6 fe5f 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2e2:	20c2      	movs	r0, #194	; 0xc2
 800b2e4:	f7f6 fe32 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2e8:	20b6      	movs	r0, #182	; 0xb6
 800b2ea:	f7f6 fe59 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2ee:	200a      	movs	r0, #10
 800b2f0:	f7f6 fe2c 	bl	8001f4c <LCD_IO_WriteData>
 800b2f4:	20a7      	movs	r0, #167	; 0xa7
 800b2f6:	f7f6 fe29 	bl	8001f4c <LCD_IO_WriteData>
 800b2fa:	2027      	movs	r0, #39	; 0x27
 800b2fc:	f7f6 fe26 	bl	8001f4c <LCD_IO_WriteData>
 800b300:	2004      	movs	r0, #4
 800b302:	f7f6 fe23 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b306:	202a      	movs	r0, #42	; 0x2a
 800b308:	f7f6 fe4a 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b30c:	2000      	movs	r0, #0
 800b30e:	f7f6 fe1d 	bl	8001f4c <LCD_IO_WriteData>
 800b312:	2000      	movs	r0, #0
 800b314:	f7f6 fe1a 	bl	8001f4c <LCD_IO_WriteData>
 800b318:	2000      	movs	r0, #0
 800b31a:	f7f6 fe17 	bl	8001f4c <LCD_IO_WriteData>
 800b31e:	20ef      	movs	r0, #239	; 0xef
 800b320:	f7f6 fe14 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b324:	202b      	movs	r0, #43	; 0x2b
 800b326:	f7f6 fe3b 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b32a:	2000      	movs	r0, #0
 800b32c:	f7f6 fe0e 	bl	8001f4c <LCD_IO_WriteData>
 800b330:	2000      	movs	r0, #0
 800b332:	f7f6 fe0b 	bl	8001f4c <LCD_IO_WriteData>
 800b336:	2001      	movs	r0, #1
 800b338:	f7f6 fe08 	bl	8001f4c <LCD_IO_WriteData>
 800b33c:	203f      	movs	r0, #63	; 0x3f
 800b33e:	f7f6 fe05 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b342:	20f6      	movs	r0, #246	; 0xf6
 800b344:	f7f6 fe2c 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b348:	2001      	movs	r0, #1
 800b34a:	f7f6 fdff 	bl	8001f4c <LCD_IO_WriteData>
 800b34e:	2000      	movs	r0, #0
 800b350:	f7f6 fdfc 	bl	8001f4c <LCD_IO_WriteData>
 800b354:	2006      	movs	r0, #6
 800b356:	f7f6 fdf9 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b35a:	202c      	movs	r0, #44	; 0x2c
 800b35c:	f7f6 fe20 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b360:	20c8      	movs	r0, #200	; 0xc8
 800b362:	f7f6 fe85 	bl	8002070 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b366:	2026      	movs	r0, #38	; 0x26
 800b368:	f7f6 fe1a 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b36c:	2001      	movs	r0, #1
 800b36e:	f7f6 fded 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b372:	20e0      	movs	r0, #224	; 0xe0
 800b374:	f7f6 fe14 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b378:	200f      	movs	r0, #15
 800b37a:	f7f6 fde7 	bl	8001f4c <LCD_IO_WriteData>
 800b37e:	2029      	movs	r0, #41	; 0x29
 800b380:	f7f6 fde4 	bl	8001f4c <LCD_IO_WriteData>
 800b384:	2024      	movs	r0, #36	; 0x24
 800b386:	f7f6 fde1 	bl	8001f4c <LCD_IO_WriteData>
 800b38a:	200c      	movs	r0, #12
 800b38c:	f7f6 fdde 	bl	8001f4c <LCD_IO_WriteData>
 800b390:	200e      	movs	r0, #14
 800b392:	f7f6 fddb 	bl	8001f4c <LCD_IO_WriteData>
 800b396:	2009      	movs	r0, #9
 800b398:	f7f6 fdd8 	bl	8001f4c <LCD_IO_WriteData>
 800b39c:	204e      	movs	r0, #78	; 0x4e
 800b39e:	f7f6 fdd5 	bl	8001f4c <LCD_IO_WriteData>
 800b3a2:	2078      	movs	r0, #120	; 0x78
 800b3a4:	f7f6 fdd2 	bl	8001f4c <LCD_IO_WriteData>
 800b3a8:	203c      	movs	r0, #60	; 0x3c
 800b3aa:	f7f6 fdcf 	bl	8001f4c <LCD_IO_WriteData>
 800b3ae:	2009      	movs	r0, #9
 800b3b0:	f7f6 fdcc 	bl	8001f4c <LCD_IO_WriteData>
 800b3b4:	2013      	movs	r0, #19
 800b3b6:	f7f6 fdc9 	bl	8001f4c <LCD_IO_WriteData>
 800b3ba:	2005      	movs	r0, #5
 800b3bc:	f7f6 fdc6 	bl	8001f4c <LCD_IO_WriteData>
 800b3c0:	2017      	movs	r0, #23
 800b3c2:	f7f6 fdc3 	bl	8001f4c <LCD_IO_WriteData>
 800b3c6:	2011      	movs	r0, #17
 800b3c8:	f7f6 fdc0 	bl	8001f4c <LCD_IO_WriteData>
 800b3cc:	2000      	movs	r0, #0
 800b3ce:	f7f6 fdbd 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b3d2:	20e1      	movs	r0, #225	; 0xe1
 800b3d4:	f7f6 fde4 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b3d8:	2000      	movs	r0, #0
 800b3da:	f7f6 fdb7 	bl	8001f4c <LCD_IO_WriteData>
 800b3de:	2016      	movs	r0, #22
 800b3e0:	f7f6 fdb4 	bl	8001f4c <LCD_IO_WriteData>
 800b3e4:	201b      	movs	r0, #27
 800b3e6:	f7f6 fdb1 	bl	8001f4c <LCD_IO_WriteData>
 800b3ea:	2004      	movs	r0, #4
 800b3ec:	f7f6 fdae 	bl	8001f4c <LCD_IO_WriteData>
 800b3f0:	2011      	movs	r0, #17
 800b3f2:	f7f6 fdab 	bl	8001f4c <LCD_IO_WriteData>
 800b3f6:	2007      	movs	r0, #7
 800b3f8:	f7f6 fda8 	bl	8001f4c <LCD_IO_WriteData>
 800b3fc:	2031      	movs	r0, #49	; 0x31
 800b3fe:	f7f6 fda5 	bl	8001f4c <LCD_IO_WriteData>
 800b402:	2033      	movs	r0, #51	; 0x33
 800b404:	f7f6 fda2 	bl	8001f4c <LCD_IO_WriteData>
 800b408:	2042      	movs	r0, #66	; 0x42
 800b40a:	f7f6 fd9f 	bl	8001f4c <LCD_IO_WriteData>
 800b40e:	2005      	movs	r0, #5
 800b410:	f7f6 fd9c 	bl	8001f4c <LCD_IO_WriteData>
 800b414:	200c      	movs	r0, #12
 800b416:	f7f6 fd99 	bl	8001f4c <LCD_IO_WriteData>
 800b41a:	200a      	movs	r0, #10
 800b41c:	f7f6 fd96 	bl	8001f4c <LCD_IO_WriteData>
 800b420:	2028      	movs	r0, #40	; 0x28
 800b422:	f7f6 fd93 	bl	8001f4c <LCD_IO_WriteData>
 800b426:	202f      	movs	r0, #47	; 0x2f
 800b428:	f7f6 fd90 	bl	8001f4c <LCD_IO_WriteData>
 800b42c:	200f      	movs	r0, #15
 800b42e:	f7f6 fd8d 	bl	8001f4c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b432:	2011      	movs	r0, #17
 800b434:	f7f6 fdb4 	bl	8001fa0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b438:	20c8      	movs	r0, #200	; 0xc8
 800b43a:	f7f6 fe19 	bl	8002070 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b43e:	2029      	movs	r0, #41	; 0x29
 800b440:	f7f6 fdae 	bl	8001fa0 <LCD_IO_WriteReg>
}
 800b444:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800b448:	202c      	movs	r0, #44	; 0x2c
 800b44a:	f7f6 bda9 	b.w	8001fa0 <LCD_IO_WriteReg>
 800b44e:	bf00      	nop

0800b450 <ili9341_ReadID>:
{
 800b450:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b452:	f7f6 fd6b 	bl	8001f2c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800b456:	2103      	movs	r1, #3
 800b458:	20d3      	movs	r0, #211	; 0xd3
 800b45a:	f7f6 fdcb 	bl	8001ff4 <LCD_IO_ReadData>
}
 800b45e:	b280      	uxth	r0, r0
 800b460:	bd08      	pop	{r3, pc}
 800b462:	bf00      	nop

0800b464 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800b464:	221f      	movs	r2, #31
 800b466:	210b      	movs	r1, #11
 800b468:	b2c0      	uxtb	r0, r0
 800b46a:	f7f6 bd11 	b.w	8001e90 <IOE_Write>
 800b46e:	bf00      	nop

0800b470 <stmpe811_Reset>:
{
 800b470:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b472:	b2c4      	uxtb	r4, r0
 800b474:	2202      	movs	r2, #2
 800b476:	2103      	movs	r1, #3
 800b478:	4620      	mov	r0, r4
 800b47a:	f7f6 fd09 	bl	8001e90 <IOE_Write>
  IOE_Delay(10); 
 800b47e:	200a      	movs	r0, #10
 800b480:	f7f6 fd52 	bl	8001f28 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b484:	4620      	mov	r0, r4
 800b486:	2200      	movs	r2, #0
 800b488:	2103      	movs	r1, #3
 800b48a:	f7f6 fd01 	bl	8001e90 <IOE_Write>
}
 800b48e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b492:	2002      	movs	r0, #2
 800b494:	f7f6 bd48 	b.w	8001f28 <IOE_Delay>

0800b498 <stmpe811_ReadID>:
{
 800b498:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b49a:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 800b49c:	f7f6 fcf4 	bl	8001e88 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b4a0:	2100      	movs	r1, #0
 800b4a2:	4620      	mov	r0, r4
 800b4a4:	f7f6 fd0c 	bl	8001ec0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b4a8:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b4aa:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b4ac:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b4ae:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b4b0:	f7f6 fd06 	bl	8001ec0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b4b4:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 800b4b8:	b280      	uxth	r0, r0
 800b4ba:	bd10      	pop	{r4, pc}

0800b4bc <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800b4bc:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800b4be:	b2c4      	uxtb	r4, r0
 800b4c0:	2140      	movs	r1, #64	; 0x40
 800b4c2:	4620      	mov	r0, r4
 800b4c4:	f7f6 fcfc 	bl	8001ec0 <IOE_Read>
  
  if(state > 0)
 800b4c8:	0603      	lsls	r3, r0, #24
 800b4ca:	d40b      	bmi.n	800b4e4 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b4cc:	4620      	mov	r0, r4
 800b4ce:	2201      	movs	r2, #1
 800b4d0:	214b      	movs	r1, #75	; 0x4b
 800b4d2:	f7f6 fcdd 	bl	8001e90 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b4d6:	4620      	mov	r0, r4
 800b4d8:	2200      	movs	r2, #0
 800b4da:	214b      	movs	r1, #75	; 0x4b
 800b4dc:	f7f6 fcd8 	bl	8001e90 <IOE_Write>
  uint8_t ret = 0;
 800b4e0:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800b4e2:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800b4e4:	214c      	movs	r1, #76	; 0x4c
 800b4e6:	4620      	mov	r0, r4
 800b4e8:	f7f6 fcea 	bl	8001ec0 <IOE_Read>
      ret = 1;
 800b4ec:	3800      	subs	r0, #0
 800b4ee:	bf18      	it	ne
 800b4f0:	2001      	movne	r0, #1
}
 800b4f2:	bd10      	pop	{r4, pc}

0800b4f4 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800b4f4:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b4f6:	210b      	movs	r1, #11
 800b4f8:	b2c0      	uxtb	r0, r0
 800b4fa:	f7f6 fce1 	bl	8001ec0 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800b4fe:	f000 001f 	and.w	r0, r0, #31
 800b502:	bd08      	pop	{r3, pc}

0800b504 <stmpe811_TS_GetXY>:
{
 800b504:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b506:	2304      	movs	r3, #4
{
 800b508:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b50a:	b2c4      	uxtb	r4, r0
{
 800b50c:	4615      	mov	r5, r2
 800b50e:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b510:	eb0d 0203 	add.w	r2, sp, r3
 800b514:	21d7      	movs	r1, #215	; 0xd7
 800b516:	4620      	mov	r0, r4
 800b518:	f7f6 fcee 	bl	8001ef8 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800b51c:	9b01      	ldr	r3, [sp, #4]
 800b51e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b520:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b522:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b526:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b528:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b52a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b52c:	2201      	movs	r2, #1
 800b52e:	214b      	movs	r1, #75	; 0x4b
 800b530:	f7f6 fcae 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b534:	2200      	movs	r2, #0
 800b536:	214b      	movs	r1, #75	; 0x4b
 800b538:	4620      	mov	r0, r4
 800b53a:	f7f6 fca9 	bl	8001e90 <IOE_Write>
}
 800b53e:	b002      	add	sp, #8
 800b540:	bd70      	pop	{r4, r5, r6, pc}
 800b542:	bf00      	nop

0800b544 <stmpe811_TS_Start>:
{
 800b544:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b546:	b2c4      	uxtb	r4, r0
 800b548:	2104      	movs	r1, #4
 800b54a:	4620      	mov	r0, r4
 800b54c:	f7f6 fcb8 	bl	8001ec0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b550:	2104      	movs	r1, #4
 800b552:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b556:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b558:	4620      	mov	r0, r4
 800b55a:	f7f6 fc99 	bl	8001e90 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b55e:	2117      	movs	r1, #23
 800b560:	4620      	mov	r0, r4
 800b562:	f7f6 fcad 	bl	8001ec0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b566:	2117      	movs	r1, #23
 800b568:	f000 020f 	and.w	r2, r0, #15
 800b56c:	4620      	mov	r0, r4
 800b56e:	f7f6 fc8f 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b572:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800b576:	4620      	mov	r0, r4
 800b578:	2104      	movs	r1, #4
 800b57a:	f7f6 fc89 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800b57e:	2249      	movs	r2, #73	; 0x49
 800b580:	2120      	movs	r1, #32
 800b582:	4620      	mov	r0, r4
 800b584:	f7f6 fc84 	bl	8001e90 <IOE_Write>
  IOE_Delay(2); 
 800b588:	2002      	movs	r0, #2
 800b58a:	f7f6 fccd 	bl	8001f28 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800b58e:	4620      	mov	r0, r4
 800b590:	2201      	movs	r2, #1
 800b592:	2121      	movs	r1, #33	; 0x21
 800b594:	f7f6 fc7c 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800b598:	4620      	mov	r0, r4
 800b59a:	229a      	movs	r2, #154	; 0x9a
 800b59c:	2141      	movs	r1, #65	; 0x41
 800b59e:	f7f6 fc77 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800b5a2:	4620      	mov	r0, r4
 800b5a4:	2201      	movs	r2, #1
 800b5a6:	214a      	movs	r1, #74	; 0x4a
 800b5a8:	f7f6 fc72 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b5ac:	4620      	mov	r0, r4
 800b5ae:	2201      	movs	r2, #1
 800b5b0:	214b      	movs	r1, #75	; 0x4b
 800b5b2:	f7f6 fc6d 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b5b6:	4620      	mov	r0, r4
 800b5b8:	2200      	movs	r2, #0
 800b5ba:	214b      	movs	r1, #75	; 0x4b
 800b5bc:	f7f6 fc68 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800b5c0:	4620      	mov	r0, r4
 800b5c2:	2201      	movs	r2, #1
 800b5c4:	2156      	movs	r1, #86	; 0x56
 800b5c6:	f7f6 fc63 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800b5ca:	4620      	mov	r0, r4
 800b5cc:	2201      	movs	r2, #1
 800b5ce:	2158      	movs	r1, #88	; 0x58
 800b5d0:	f7f6 fc5e 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800b5d4:	4620      	mov	r0, r4
 800b5d6:	2201      	movs	r2, #1
 800b5d8:	2140      	movs	r1, #64	; 0x40
 800b5da:	f7f6 fc59 	bl	8001e90 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800b5de:	4620      	mov	r0, r4
 800b5e0:	22ff      	movs	r2, #255	; 0xff
 800b5e2:	210b      	movs	r1, #11
 800b5e4:	f7f6 fc54 	bl	8001e90 <IOE_Write>
}
 800b5e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800b5ec:	2002      	movs	r0, #2
 800b5ee:	f7f6 bc9b 	b.w	8001f28 <IOE_Delay>
 800b5f2:	bf00      	nop

0800b5f4 <stmpe811_TS_DisableIT>:
{
 800b5f4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b5f6:	b2c4      	uxtb	r4, r0
 800b5f8:	2109      	movs	r1, #9
 800b5fa:	4620      	mov	r0, r4
 800b5fc:	f7f6 fc60 	bl	8001ec0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b600:	2109      	movs	r1, #9
 800b602:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800b606:	4620      	mov	r0, r4
 800b608:	f7f6 fc42 	bl	8001e90 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b60c:	210a      	movs	r1, #10
 800b60e:	4620      	mov	r0, r4
 800b610:	f7f6 fc56 	bl	8001ec0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b614:	210a      	movs	r1, #10
 800b616:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800b61a:	4620      	mov	r0, r4
}
 800b61c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b620:	f7f6 bc36 	b.w	8001e90 <IOE_Write>

0800b624 <stmpe811_TS_EnableIT>:
{
 800b624:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b626:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800b628:	f7f6 fc30 	bl	8001e8c <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b62c:	210a      	movs	r1, #10
 800b62e:	4620      	mov	r0, r4
 800b630:	f7f6 fc46 	bl	8001ec0 <IOE_Read>
  tmp |= Source; 
 800b634:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b638:	b2c2      	uxtb	r2, r0
 800b63a:	210a      	movs	r1, #10
 800b63c:	4620      	mov	r0, r4
 800b63e:	f7f6 fc27 	bl	8001e90 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b642:	2109      	movs	r1, #9
 800b644:	4620      	mov	r0, r4
 800b646:	f7f6 fc3b 	bl	8001ec0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800b64a:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b64e:	b2c2      	uxtb	r2, r0
 800b650:	2109      	movs	r1, #9
 800b652:	4620      	mov	r0, r4
}
 800b654:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b658:	f7f6 bc1a 	b.w	8001e90 <IOE_Write>

0800b65c <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800b65c:	4a10      	ldr	r2, [pc, #64]	; (800b6a0 <stmpe811_Init+0x44>)
 800b65e:	7813      	ldrb	r3, [r2, #0]
 800b660:	4298      	cmp	r0, r3
 800b662:	d004      	beq.n	800b66e <stmpe811_Init+0x12>
 800b664:	7851      	ldrb	r1, [r2, #1]
 800b666:	4288      	cmp	r0, r1
 800b668:	d001      	beq.n	800b66e <stmpe811_Init+0x12>
 800b66a:	b113      	cbz	r3, 800b672 <stmpe811_Init+0x16>
 800b66c:	b101      	cbz	r1, 800b670 <stmpe811_Init+0x14>
 800b66e:	4770      	bx	lr
 800b670:	2301      	movs	r3, #1
{
 800b672:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800b674:	b2c4      	uxtb	r4, r0
 800b676:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800b678:	f7f6 fc06 	bl	8001e88 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b67c:	2202      	movs	r2, #2
 800b67e:	2103      	movs	r1, #3
 800b680:	4620      	mov	r0, r4
 800b682:	f7f6 fc05 	bl	8001e90 <IOE_Write>
  IOE_Delay(10); 
 800b686:	200a      	movs	r0, #10
 800b688:	f7f6 fc4e 	bl	8001f28 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b68c:	4620      	mov	r0, r4
 800b68e:	2200      	movs	r2, #0
 800b690:	2103      	movs	r1, #3
 800b692:	f7f6 fbfd 	bl	8001e90 <IOE_Write>
}
 800b696:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b69a:	2002      	movs	r0, #2
 800b69c:	f7f6 bc44 	b.w	8001f28 <IOE_Delay>
 800b6a0:	20002a34 	.word	0x20002a34

0800b6a4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b6a4:	4b05      	ldr	r3, [pc, #20]	; (800b6bc <SystemInit+0x18>)
 800b6a6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b6aa:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b6ae:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800b6b2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b6b6:	6099      	str	r1, [r3, #8]
#endif
}
 800b6b8:	4770      	bx	lr
 800b6ba:	bf00      	nop
 800b6bc:	e000ed00 	.word	0xe000ed00

0800b6c0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800b6c0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b6c2:	4b0b      	ldr	r3, [pc, #44]	; (800b6f0 <HAL_Init+0x30>)
 800b6c4:	681a      	ldr	r2, [r3, #0]
 800b6c6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b6ca:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800b6cc:	681a      	ldr	r2, [r3, #0]
 800b6ce:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b6d2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800b6d4:	681a      	ldr	r2, [r3, #0]
 800b6d6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b6da:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b6dc:	2003      	movs	r0, #3
 800b6de:	f000 f82d 	bl	800b73c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800b6e2:	2000      	movs	r0, #0
 800b6e4:	f7f7 f8f4 	bl	80028d0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800b6e8:	f7f6 fe16 	bl	8002318 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800b6ec:	2000      	movs	r0, #0
 800b6ee:	bd08      	pop	{r3, pc}
 800b6f0:	40023c00 	.word	0x40023c00

0800b6f4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800b6f4:	4a03      	ldr	r2, [pc, #12]	; (800b704 <HAL_IncTick+0x10>)
 800b6f6:	4b04      	ldr	r3, [pc, #16]	; (800b708 <HAL_IncTick+0x14>)
 800b6f8:	6811      	ldr	r1, [r2, #0]
 800b6fa:	781b      	ldrb	r3, [r3, #0]
 800b6fc:	440b      	add	r3, r1
 800b6fe:	6013      	str	r3, [r2, #0]
}
 800b700:	4770      	bx	lr
 800b702:	bf00      	nop
 800b704:	20002a38 	.word	0x20002a38
 800b708:	20000080 	.word	0x20000080

0800b70c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800b70c:	4b01      	ldr	r3, [pc, #4]	; (800b714 <HAL_GetTick+0x8>)
 800b70e:	6818      	ldr	r0, [r3, #0]
}
 800b710:	4770      	bx	lr
 800b712:	bf00      	nop
 800b714:	20002a38 	.word	0x20002a38

0800b718 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800b718:	b538      	push	{r3, r4, r5, lr}
 800b71a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b71c:	f7ff fff6 	bl	800b70c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800b720:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800b722:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800b724:	d002      	beq.n	800b72c <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800b726:	4b04      	ldr	r3, [pc, #16]	; (800b738 <HAL_Delay+0x20>)
 800b728:	781b      	ldrb	r3, [r3, #0]
 800b72a:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800b72c:	f7ff ffee 	bl	800b70c <HAL_GetTick>
 800b730:	1b43      	subs	r3, r0, r5
 800b732:	42a3      	cmp	r3, r4
 800b734:	d3fa      	bcc.n	800b72c <HAL_Delay+0x14>
  {
  }
}
 800b736:	bd38      	pop	{r3, r4, r5, pc}
 800b738:	20000080 	.word	0x20000080

0800b73c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800b73c:	4907      	ldr	r1, [pc, #28]	; (800b75c <HAL_NVIC_SetPriorityGrouping+0x20>)
 800b73e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b740:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b742:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b746:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b74a:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800b74c:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800b74e:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800b752:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800b756:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800b758:	4770      	bx	lr
 800b75a:	bf00      	nop
 800b75c:	e000ed00 	.word	0xe000ed00

0800b760 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800b760:	4b1c      	ldr	r3, [pc, #112]	; (800b7d4 <HAL_NVIC_SetPriority+0x74>)
 800b762:	68db      	ldr	r3, [r3, #12]
 800b764:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800b768:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b76a:	f1c3 0e07 	rsb	lr, r3, #7
 800b76e:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b772:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b776:	bf28      	it	cs
 800b778:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b77c:	f1bc 0f06 	cmp.w	ip, #6
 800b780:	d91b      	bls.n	800b7ba <HAL_NVIC_SetPriority+0x5a>
 800b782:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800b784:	f04f 3cff 	mov.w	ip, #4294967295
 800b788:	fa0c fc03 	lsl.w	ip, ip, r3
 800b78c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b790:	f04f 3cff 	mov.w	ip, #4294967295
 800b794:	fa0c fc0e 	lsl.w	ip, ip, lr
 800b798:	ea21 010c 	bic.w	r1, r1, ip
 800b79c:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800b79e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b7a0:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800b7a4:	db0c      	blt.n	800b7c0 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7a6:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800b7aa:	0109      	lsls	r1, r1, #4
 800b7ac:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800b7b0:	b2c9      	uxtb	r1, r1
 800b7b2:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800b7b6:	f85d fb04 	ldr.w	pc, [sp], #4
 800b7ba:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b7bc:	4613      	mov	r3, r2
 800b7be:	e7e7      	b.n	800b790 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7c0:	4b05      	ldr	r3, [pc, #20]	; (800b7d8 <HAL_NVIC_SetPriority+0x78>)
 800b7c2:	f000 000f 	and.w	r0, r0, #15
 800b7c6:	0109      	lsls	r1, r1, #4
 800b7c8:	4403      	add	r3, r0
 800b7ca:	b2c9      	uxtb	r1, r1
 800b7cc:	7619      	strb	r1, [r3, #24]
 800b7ce:	f85d fb04 	ldr.w	pc, [sp], #4
 800b7d2:	bf00      	nop
 800b7d4:	e000ed00 	.word	0xe000ed00
 800b7d8:	e000ecfc 	.word	0xe000ecfc

0800b7dc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800b7dc:	2800      	cmp	r0, #0
 800b7de:	db07      	blt.n	800b7f0 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b7e0:	0941      	lsrs	r1, r0, #5
 800b7e2:	4a04      	ldr	r2, [pc, #16]	; (800b7f4 <HAL_NVIC_EnableIRQ+0x18>)
 800b7e4:	f000 001f 	and.w	r0, r0, #31
 800b7e8:	2301      	movs	r3, #1
 800b7ea:	4083      	lsls	r3, r0
 800b7ec:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800b7f0:	4770      	bx	lr
 800b7f2:	bf00      	nop
 800b7f4:	e000e100 	.word	0xe000e100

0800b7f8 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800b7f8:	b180      	cbz	r0, 800b81c <HAL_CRC_Init+0x24>
{
 800b7fa:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800b7fc:	7943      	ldrb	r3, [r0, #5]
 800b7fe:	4604      	mov	r4, r0
 800b800:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b804:	b11b      	cbz	r3, 800b80e <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800b806:	2301      	movs	r3, #1
 800b808:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800b80a:	2000      	movs	r0, #0
}
 800b80c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800b80e:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800b810:	f7f6 fda2 	bl	8002358 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800b814:	2301      	movs	r3, #1
 800b816:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800b818:	2000      	movs	r0, #0
}
 800b81a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b81c:	2001      	movs	r0, #1
}
 800b81e:	4770      	bx	lr

0800b820 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800b820:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b824:	2b02      	cmp	r3, #2
 800b826:	d003      	beq.n	800b830 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800b828:	2380      	movs	r3, #128	; 0x80
 800b82a:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800b82c:	2001      	movs	r0, #1
 800b82e:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800b830:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800b832:	2305      	movs	r3, #5
 800b834:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800b838:	6813      	ldr	r3, [r2, #0]
 800b83a:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800b83e:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800b840:	6013      	str	r3, [r2, #0]
}
 800b842:	4770      	bx	lr

0800b844 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800b844:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800b848:	4770      	bx	lr
 800b84a:	bf00      	nop

0800b84c <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 800b84c:	4b21      	ldr	r3, [pc, #132]	; (800b8d4 <FLASH_SetErrorCode+0x88>)
 800b84e:	68da      	ldr	r2, [r3, #12]
 800b850:	06d0      	lsls	r0, r2, #27
 800b852:	d505      	bpl.n	800b860 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b854:	4920      	ldr	r1, [pc, #128]	; (800b8d8 <FLASH_SetErrorCode+0x8c>)
 800b856:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b858:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b85a:	4302      	orrs	r2, r0
 800b85c:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b85e:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 800b860:	4b1c      	ldr	r3, [pc, #112]	; (800b8d4 <FLASH_SetErrorCode+0x88>)
 800b862:	68da      	ldr	r2, [r3, #12]
 800b864:	0691      	lsls	r1, r2, #26
 800b866:	d506      	bpl.n	800b876 <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b868:	491b      	ldr	r1, [pc, #108]	; (800b8d8 <FLASH_SetErrorCode+0x8c>)
 800b86a:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b86c:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b86e:	f042 0208 	orr.w	r2, r2, #8
 800b872:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b874:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 800b876:	4b17      	ldr	r3, [pc, #92]	; (800b8d4 <FLASH_SetErrorCode+0x88>)
 800b878:	68da      	ldr	r2, [r3, #12]
 800b87a:	0652      	lsls	r2, r2, #25
 800b87c:	d506      	bpl.n	800b88c <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b87e:	4916      	ldr	r1, [pc, #88]	; (800b8d8 <FLASH_SetErrorCode+0x8c>)
 800b880:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b882:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b884:	f042 0204 	orr.w	r2, r2, #4
 800b888:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b88a:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 800b88c:	4b11      	ldr	r3, [pc, #68]	; (800b8d4 <FLASH_SetErrorCode+0x88>)
 800b88e:	68da      	ldr	r2, [r3, #12]
 800b890:	0610      	lsls	r0, r2, #24
 800b892:	d506      	bpl.n	800b8a2 <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b894:	4910      	ldr	r1, [pc, #64]	; (800b8d8 <FLASH_SetErrorCode+0x8c>)
 800b896:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b898:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b89a:	f042 0202 	orr.w	r2, r2, #2
 800b89e:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b8a0:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 800b8a2:	4b0c      	ldr	r3, [pc, #48]	; (800b8d4 <FLASH_SetErrorCode+0x88>)
 800b8a4:	68da      	ldr	r2, [r3, #12]
 800b8a6:	05d1      	lsls	r1, r2, #23
 800b8a8:	d507      	bpl.n	800b8ba <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b8aa:	490b      	ldr	r1, [pc, #44]	; (800b8d8 <FLASH_SetErrorCode+0x8c>)
 800b8ac:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b8ae:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b8b2:	f042 0201 	orr.w	r2, r2, #1
 800b8b6:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b8b8:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 800b8ba:	4b06      	ldr	r3, [pc, #24]	; (800b8d4 <FLASH_SetErrorCode+0x88>)
 800b8bc:	68da      	ldr	r2, [r3, #12]
 800b8be:	0792      	lsls	r2, r2, #30
 800b8c0:	d506      	bpl.n	800b8d0 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b8c2:	4905      	ldr	r1, [pc, #20]	; (800b8d8 <FLASH_SetErrorCode+0x8c>)
 800b8c4:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b8c6:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b8c8:	f042 0220 	orr.w	r2, r2, #32
 800b8cc:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b8ce:	60d8      	str	r0, [r3, #12]
  }
}
 800b8d0:	4770      	bx	lr
 800b8d2:	bf00      	nop
 800b8d4:	40023c00 	.word	0x40023c00
 800b8d8:	20002a3c 	.word	0x20002a3c

0800b8dc <HAL_FLASH_Program>:
{
 800b8dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 800b8e0:	4f4d      	ldr	r7, [pc, #308]	; (800ba18 <HAL_FLASH_Program+0x13c>)
{
 800b8e2:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 800b8e4:	7e3b      	ldrb	r3, [r7, #24]
 800b8e6:	2b01      	cmp	r3, #1
 800b8e8:	d060      	beq.n	800b9ac <HAL_FLASH_Program+0xd0>
 800b8ea:	2301      	movs	r3, #1
 800b8ec:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b8ee:	2300      	movs	r3, #0
 800b8f0:	4681      	mov	r9, r0
 800b8f2:	468a      	mov	sl, r1
 800b8f4:	4690      	mov	r8, r2
 800b8f6:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b8f8:	f7ff ff08 	bl	800b70c <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b8fc:	4d47      	ldr	r5, [pc, #284]	; (800ba1c <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b8fe:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b900:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b904:	e004      	b.n	800b910 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b906:	f7ff ff01 	bl	800b70c <HAL_GetTick>
 800b90a:	1b00      	subs	r0, r0, r4
 800b90c:	42b0      	cmp	r0, r6
 800b90e:	d848      	bhi.n	800b9a2 <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b910:	68eb      	ldr	r3, [r5, #12]
 800b912:	03d8      	lsls	r0, r3, #15
 800b914:	d4f7      	bmi.n	800b906 <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b916:	68eb      	ldr	r3, [r5, #12]
 800b918:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b91a:	bf44      	itt	mi
 800b91c:	2301      	movmi	r3, #1
 800b91e:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b920:	4b3e      	ldr	r3, [pc, #248]	; (800ba1c <HAL_FLASH_Program+0x140>)
 800b922:	68da      	ldr	r2, [r3, #12]
 800b924:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 800b928:	d154      	bne.n	800b9d4 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800b92a:	f1b9 0f00 	cmp.w	r9, #0
 800b92e:	d040      	beq.n	800b9b2 <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b930:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b934:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b936:	d051      	beq.n	800b9dc <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b938:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b93c:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b93e:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b942:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b944:	d05e      	beq.n	800ba04 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 800b946:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800b94a:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b94c:	691a      	ldr	r2, [r3, #16]
 800b94e:	f042 0201 	orr.w	r2, r2, #1
 800b952:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 800b954:	f8ca 8000 	str.w	r8, [sl]
 800b958:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 800b95c:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b960:	2300      	movs	r3, #0
 800b962:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b964:	f7ff fed2 	bl	800b70c <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b968:	4d2c      	ldr	r5, [pc, #176]	; (800ba1c <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b96a:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b96c:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b970:	e004      	b.n	800b97c <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b972:	f7ff fecb 	bl	800b70c <HAL_GetTick>
 800b976:	1b00      	subs	r0, r0, r4
 800b978:	42b0      	cmp	r0, r6
 800b97a:	d829      	bhi.n	800b9d0 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b97c:	68eb      	ldr	r3, [r5, #12]
 800b97e:	03da      	lsls	r2, r3, #15
 800b980:	d4f7      	bmi.n	800b972 <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b982:	68eb      	ldr	r3, [r5, #12]
 800b984:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b986:	bf44      	itt	mi
 800b988:	2301      	movmi	r3, #1
 800b98a:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b98c:	4b23      	ldr	r3, [pc, #140]	; (800ba1c <HAL_FLASH_Program+0x140>)
 800b98e:	68d8      	ldr	r0, [r3, #12]
 800b990:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b994:	d132      	bne.n	800b9fc <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 800b996:	4a21      	ldr	r2, [pc, #132]	; (800ba1c <HAL_FLASH_Program+0x140>)
 800b998:	6913      	ldr	r3, [r2, #16]
 800b99a:	f023 0301 	bic.w	r3, r3, #1
 800b99e:	6113      	str	r3, [r2, #16]
 800b9a0:	e000      	b.n	800b9a4 <HAL_FLASH_Program+0xc8>
 800b9a2:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 800b9a4:	2300      	movs	r3, #0
 800b9a6:	763b      	strb	r3, [r7, #24]
}
 800b9a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 800b9ac:	2002      	movs	r0, #2
}
 800b9ae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b9b2:	691a      	ldr	r2, [r3, #16]
 800b9b4:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b9b8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 800b9ba:	691a      	ldr	r2, [r3, #16]
 800b9bc:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b9be:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 800b9c0:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b9c4:	f042 0201 	orr.w	r2, r2, #1
 800b9c8:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 800b9ca:	f88a 8000 	strb.w	r8, [sl]
}
 800b9ce:	e7c7      	b.n	800b960 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 800b9d0:	2003      	movs	r0, #3
 800b9d2:	e7e0      	b.n	800b996 <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 800b9d4:	f7ff ff3a 	bl	800b84c <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b9d8:	2001      	movs	r0, #1
 800b9da:	e7e3      	b.n	800b9a4 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b9dc:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b9e0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 800b9e2:	691a      	ldr	r2, [r3, #16]
 800b9e4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b9e8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b9ea:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 800b9ec:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b9f0:	f042 0201 	orr.w	r2, r2, #1
 800b9f4:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 800b9f6:	f8aa 8000 	strh.w	r8, [sl]
}
 800b9fa:	e7b1      	b.n	800b960 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 800b9fc:	f7ff ff26 	bl	800b84c <FLASH_SetErrorCode>
    return HAL_ERROR;
 800ba00:	2001      	movs	r0, #1
 800ba02:	e7c8      	b.n	800b996 <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 800ba04:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ba08:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800ba0a:	691a      	ldr	r2, [r3, #16]
 800ba0c:	f042 0201 	orr.w	r2, r2, #1
 800ba10:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 800ba12:	f8ca 8000 	str.w	r8, [sl]
}
 800ba16:	e7a3      	b.n	800b960 <HAL_FLASH_Program+0x84>
 800ba18:	20002a3c 	.word	0x20002a3c
 800ba1c:	40023c00 	.word	0x40023c00

0800ba20 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800ba20:	4b06      	ldr	r3, [pc, #24]	; (800ba3c <HAL_FLASH_Unlock+0x1c>)
 800ba22:	691a      	ldr	r2, [r3, #16]
 800ba24:	2a00      	cmp	r2, #0
 800ba26:	db01      	blt.n	800ba2c <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 800ba28:	2000      	movs	r0, #0
}
 800ba2a:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800ba2c:	4904      	ldr	r1, [pc, #16]	; (800ba40 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800ba2e:	4a05      	ldr	r2, [pc, #20]	; (800ba44 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800ba30:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800ba32:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800ba34:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 800ba36:	0fc0      	lsrs	r0, r0, #31
 800ba38:	4770      	bx	lr
 800ba3a:	bf00      	nop
 800ba3c:	40023c00 	.word	0x40023c00
 800ba40:	45670123 	.word	0x45670123
 800ba44:	cdef89ab 	.word	0xcdef89ab

0800ba48 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 800ba48:	4a03      	ldr	r2, [pc, #12]	; (800ba58 <HAL_FLASH_Lock+0x10>)
 800ba4a:	6913      	ldr	r3, [r2, #16]
 800ba4c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 800ba50:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 800ba52:	6113      	str	r3, [r2, #16]
}
 800ba54:	4770      	bx	lr
 800ba56:	bf00      	nop
 800ba58:	40023c00 	.word	0x40023c00

0800ba5c <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800ba5c:	4b01      	ldr	r3, [pc, #4]	; (800ba64 <HAL_FLASH_GetError+0x8>)
 800ba5e:	69d8      	ldr	r0, [r3, #28]
}  
 800ba60:	4770      	bx	lr
 800ba62:	bf00      	nop
 800ba64:	20002a3c 	.word	0x20002a3c

0800ba68 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800ba68:	4b14      	ldr	r3, [pc, #80]	; (800babc <FLASH_WaitForLastOperation+0x54>)
{ 
 800ba6a:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800ba6c:	2200      	movs	r2, #0
{ 
 800ba6e:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800ba70:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 800ba72:	f7ff fe4b 	bl	800b70c <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800ba76:	4e12      	ldr	r6, [pc, #72]	; (800bac0 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 800ba78:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800ba7a:	1c63      	adds	r3, r4, #1
 800ba7c:	d10f      	bne.n	800ba9e <FLASH_WaitForLastOperation+0x36>
 800ba7e:	4a10      	ldr	r2, [pc, #64]	; (800bac0 <FLASH_WaitForLastOperation+0x58>)
 800ba80:	68d3      	ldr	r3, [r2, #12]
 800ba82:	03d8      	lsls	r0, r3, #15
 800ba84:	d4fc      	bmi.n	800ba80 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800ba86:	4b0e      	ldr	r3, [pc, #56]	; (800bac0 <FLASH_WaitForLastOperation+0x58>)
 800ba88:	68da      	ldr	r2, [r3, #12]
 800ba8a:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800ba8c:	bf44      	itt	mi
 800ba8e:	2201      	movmi	r2, #1
 800ba90:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800ba92:	4b0b      	ldr	r3, [pc, #44]	; (800bac0 <FLASH_WaitForLastOperation+0x58>)
 800ba94:	68d8      	ldr	r0, [r3, #12]
 800ba96:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800ba9a:	d10b      	bne.n	800bab4 <FLASH_WaitForLastOperation+0x4c>
}  
 800ba9c:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800ba9e:	68f3      	ldr	r3, [r6, #12]
 800baa0:	03d9      	lsls	r1, r3, #15
 800baa2:	d5f0      	bpl.n	800ba86 <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800baa4:	b124      	cbz	r4, 800bab0 <FLASH_WaitForLastOperation+0x48>
 800baa6:	f7ff fe31 	bl	800b70c <HAL_GetTick>
 800baaa:	1b40      	subs	r0, r0, r5
 800baac:	42a0      	cmp	r0, r4
 800baae:	d9e4      	bls.n	800ba7a <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 800bab0:	2003      	movs	r0, #3
}  
 800bab2:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 800bab4:	f7ff feca 	bl	800b84c <FLASH_SetErrorCode>
    return HAL_ERROR;
 800bab8:	2001      	movs	r0, #1
}  
 800baba:	bd70      	pop	{r4, r5, r6, pc}
 800babc:	20002a3c 	.word	0x20002a3c
 800bac0:	40023c00 	.word	0x40023c00

0800bac4 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 800bac4:	4b14      	ldr	r3, [pc, #80]	; (800bb18 <FLASH_FlushCaches+0x54>)
 800bac6:	681a      	ldr	r2, [r3, #0]
 800bac8:	0591      	lsls	r1, r2, #22
 800baca:	d50f      	bpl.n	800baec <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 800bacc:	681a      	ldr	r2, [r3, #0]
 800bace:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800bad2:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 800bad4:	681a      	ldr	r2, [r3, #0]
 800bad6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bada:	601a      	str	r2, [r3, #0]
 800badc:	681a      	ldr	r2, [r3, #0]
 800bade:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800bae2:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800bae4:	681a      	ldr	r2, [r3, #0]
 800bae6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800baea:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 800baec:	4b0a      	ldr	r3, [pc, #40]	; (800bb18 <FLASH_FlushCaches+0x54>)
 800baee:	681a      	ldr	r2, [r3, #0]
 800baf0:	0552      	lsls	r2, r2, #21
 800baf2:	d50f      	bpl.n	800bb14 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 800baf4:	681a      	ldr	r2, [r3, #0]
 800baf6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bafa:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 800bafc:	681a      	ldr	r2, [r3, #0]
 800bafe:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800bb02:	601a      	str	r2, [r3, #0]
 800bb04:	681a      	ldr	r2, [r3, #0]
 800bb06:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800bb0a:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 800bb0c:	681a      	ldr	r2, [r3, #0]
 800bb0e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bb12:	601a      	str	r2, [r3, #0]
  }
}
 800bb14:	4770      	bx	lr
 800bb16:	bf00      	nop
 800bb18:	40023c00 	.word	0x40023c00

0800bb1c <HAL_FLASHEx_Erase>:
{
 800bb1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 800bb20:	4f44      	ldr	r7, [pc, #272]	; (800bc34 <HAL_FLASHEx_Erase+0x118>)
 800bb22:	7e3b      	ldrb	r3, [r7, #24]
 800bb24:	2b01      	cmp	r3, #1
 800bb26:	d053      	beq.n	800bbd0 <HAL_FLASHEx_Erase+0xb4>
 800bb28:	2301      	movs	r3, #1
 800bb2a:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bb2c:	f24c 3050 	movw	r0, #50000	; 0xc350
 800bb30:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 800bb32:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bb34:	f7ff ff98 	bl	800ba68 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 800bb38:	4606      	mov	r6, r0
 800bb3a:	2800      	cmp	r0, #0
 800bb3c:	d143      	bne.n	800bbc6 <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 800bb3e:	f04f 33ff 	mov.w	r3, #4294967295
 800bb42:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800bb46:	f8d9 3000 	ldr.w	r3, [r9]
 800bb4a:	2b01      	cmp	r3, #1
 800bb4c:	d044      	beq.n	800bbd8 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800bb4e:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 800bb52:	442b      	add	r3, r5
 800bb54:	429d      	cmp	r5, r3
 800bb56:	d234      	bcs.n	800bbc2 <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800bb58:	4c37      	ldr	r4, [pc, #220]	; (800bc38 <HAL_FLASHEx_Erase+0x11c>)
 800bb5a:	e005      	b.n	800bb68 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800bb5c:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 800bb60:	3501      	adds	r5, #1
 800bb62:	4413      	add	r3, r2
 800bb64:	42ab      	cmp	r3, r5
 800bb66:	d92c      	bls.n	800bbc2 <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 800bb68:	f899 3010 	ldrb.w	r3, [r9, #16]
 800bb6c:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 800bb6e:	f44f 7140 	mov.w	r1, #768	; 0x300
 800bb72:	bf98      	it	ls
 800bb74:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800bb76:	6923      	ldr	r3, [r4, #16]
 800bb78:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800bb7c:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 800bb7e:	6923      	ldr	r3, [r4, #16]
 800bb80:	430b      	orrs	r3, r1
 800bb82:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 800bb84:	6923      	ldr	r3, [r4, #16]
 800bb86:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800bb8a:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800bb8c:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 800bb8e:	2d0b      	cmp	r5, #11
    Sector += 4U;
 800bb90:	bf8c      	ite	hi
 800bb92:	1d2a      	addhi	r2, r5, #4
 800bb94:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800bb96:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800bb9a:	f043 0302 	orr.w	r3, r3, #2
 800bb9e:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 800bba0:	6923      	ldr	r3, [r4, #16]
 800bba2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bba6:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bba8:	f24c 3050 	movw	r0, #50000	; 0xc350
 800bbac:	f7ff ff5c 	bl	800ba68 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 800bbb0:	6923      	ldr	r3, [r4, #16]
 800bbb2:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 800bbb6:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 800bbb8:	2800      	cmp	r0, #0
 800bbba:	d0cf      	beq.n	800bb5c <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 800bbbc:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bbc0:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 800bbc2:	f7ff ff7f 	bl	800bac4 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 800bbc6:	2300      	movs	r3, #0
 800bbc8:	763b      	strb	r3, [r7, #24]
}
 800bbca:	4630      	mov	r0, r6
 800bbcc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 800bbd0:	2602      	movs	r6, #2
}
 800bbd2:	4630      	mov	r0, r6
 800bbd4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800bbd8:	4a17      	ldr	r2, [pc, #92]	; (800bc38 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800bbda:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800bbde:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800bbe0:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800bbe4:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800bbe8:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800bbea:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 800bbec:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800bbee:	d01a      	beq.n	800bc26 <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 800bbf0:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 800bbf2:	bf0c      	ite	eq
 800bbf4:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 800bbf8:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 800bbfc:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 800bbfe:	4c0e      	ldr	r4, [pc, #56]	; (800bc38 <HAL_FLASHEx_Erase+0x11c>)
 800bc00:	021b      	lsls	r3, r3, #8
 800bc02:	6922      	ldr	r2, [r4, #16]
 800bc04:	b29b      	uxth	r3, r3
 800bc06:	4313      	orrs	r3, r2
 800bc08:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bc0c:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bc0e:	f24c 3050 	movw	r0, #50000	; 0xc350
 800bc12:	f7ff ff29 	bl	800ba68 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 800bc16:	6923      	ldr	r3, [r4, #16]
 800bc18:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800bc1c:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bc20:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 800bc22:	6123      	str	r3, [r4, #16]
 800bc24:	e7cd      	b.n	800bbc2 <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 800bc26:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800bc2a:	f041 0104 	orr.w	r1, r1, #4
 800bc2e:	6111      	str	r1, [r2, #16]
 800bc30:	e7e5      	b.n	800bbfe <HAL_FLASHEx_Erase+0xe2>
 800bc32:	bf00      	nop
 800bc34:	20002a3c 	.word	0x20002a3c
 800bc38:	40023c00 	.word	0x40023c00

0800bc3c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800bc3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800bc40:	2200      	movs	r2, #0
 800bc42:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bc44:	f8df a260 	ldr.w	sl, [pc, #608]	; 800bea8 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800bc48:	4e90      	ldr	r6, [pc, #576]	; (800be8c <HAL_GPIO_Init+0x250>)
{
 800bc4a:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc4c:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bc4e:	4689      	mov	r9, r1
 800bc50:	e005      	b.n	800bc5e <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc52:	3301      	adds	r3, #1
 800bc54:	2b10      	cmp	r3, #16
 800bc56:	f102 0202 	add.w	r2, r2, #2
 800bc5a:	f000 8095 	beq.w	800bd88 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800bc5e:	2101      	movs	r1, #1
 800bc60:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800bc62:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800bc66:	43a1      	bics	r1, r4
 800bc68:	d1f3      	bne.n	800bc52 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800bc6a:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800bc6e:	f00c 0103 	and.w	r1, ip, #3
 800bc72:	1e4d      	subs	r5, r1, #1
 800bc74:	2d01      	cmp	r5, #1
 800bc76:	f240 808a 	bls.w	800bd8e <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800bc7a:	2903      	cmp	r1, #3
 800bc7c:	f040 80ca 	bne.w	800be14 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc80:	4091      	lsls	r1, r2
 800bc82:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800bc84:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800bc86:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800bc88:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bc8a:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800bc8e:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bc90:	d0df      	beq.n	800bc52 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bc92:	2100      	movs	r1, #0
 800bc94:	9103      	str	r1, [sp, #12]
 800bc96:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bc9a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800bc9e:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800bca2:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bca6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800bcaa:	9103      	str	r1, [sp, #12]
 800bcac:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800bcae:	f023 0103 	bic.w	r1, r3, #3
 800bcb2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800bcb6:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bcba:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800bcbe:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bcc0:	00bf      	lsls	r7, r7, #2
 800bcc2:	f04f 0e0f 	mov.w	lr, #15
 800bcc6:	fa0e fe07 	lsl.w	lr, lr, r7
 800bcca:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bcce:	4d70      	ldr	r5, [pc, #448]	; (800be90 <HAL_GPIO_Init+0x254>)
 800bcd0:	42a8      	cmp	r0, r5
 800bcd2:	d02e      	beq.n	800bd32 <HAL_GPIO_Init+0xf6>
 800bcd4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800bcd8:	42a8      	cmp	r0, r5
 800bcda:	f000 809f 	beq.w	800be1c <HAL_GPIO_Init+0x1e0>
 800bcde:	4d6d      	ldr	r5, [pc, #436]	; (800be94 <HAL_GPIO_Init+0x258>)
 800bce0:	42a8      	cmp	r0, r5
 800bce2:	f000 80a2 	beq.w	800be2a <HAL_GPIO_Init+0x1ee>
 800bce6:	4d6c      	ldr	r5, [pc, #432]	; (800be98 <HAL_GPIO_Init+0x25c>)
 800bce8:	42a8      	cmp	r0, r5
 800bcea:	f000 80a5 	beq.w	800be38 <HAL_GPIO_Init+0x1fc>
 800bcee:	4d6b      	ldr	r5, [pc, #428]	; (800be9c <HAL_GPIO_Init+0x260>)
 800bcf0:	42a8      	cmp	r0, r5
 800bcf2:	f000 80a8 	beq.w	800be46 <HAL_GPIO_Init+0x20a>
 800bcf6:	4d6a      	ldr	r5, [pc, #424]	; (800bea0 <HAL_GPIO_Init+0x264>)
 800bcf8:	42a8      	cmp	r0, r5
 800bcfa:	f000 80b2 	beq.w	800be62 <HAL_GPIO_Init+0x226>
 800bcfe:	4d69      	ldr	r5, [pc, #420]	; (800bea4 <HAL_GPIO_Init+0x268>)
 800bd00:	42a8      	cmp	r0, r5
 800bd02:	f000 80b5 	beq.w	800be70 <HAL_GPIO_Init+0x234>
 800bd06:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800beac <HAL_GPIO_Init+0x270>
 800bd0a:	4570      	cmp	r0, lr
 800bd0c:	f000 80a2 	beq.w	800be54 <HAL_GPIO_Init+0x218>
 800bd10:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800beb0 <HAL_GPIO_Init+0x274>
 800bd14:	4570      	cmp	r0, lr
 800bd16:	f000 80b2 	beq.w	800be7e <HAL_GPIO_Init+0x242>
 800bd1a:	f8df e198 	ldr.w	lr, [pc, #408]	; 800beb4 <HAL_GPIO_Init+0x278>
 800bd1e:	4570      	cmp	r0, lr
 800bd20:	bf0c      	ite	eq
 800bd22:	f04f 0e09 	moveq.w	lr, #9
 800bd26:	f04f 0e0a 	movne.w	lr, #10
 800bd2a:	fa0e f707 	lsl.w	r7, lr, r7
 800bd2e:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800bd32:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800bd36:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800bd38:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800bd3c:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800bd40:	bf0c      	ite	eq
 800bd42:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bd44:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800bd48:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800bd4a:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800bd4c:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800bd50:	bf0c      	ite	eq
 800bd52:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bd54:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800bd58:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800bd5a:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800bd5c:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800bd60:	bf0c      	ite	eq
 800bd62:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bd64:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800bd68:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800bd6a:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800bd6c:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bd70:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800bd74:	bf0c      	ite	eq
 800bd76:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bd78:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bd7c:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800bd7e:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bd80:	f102 0202 	add.w	r2, r2, #2
 800bd84:	f47f af6b 	bne.w	800bc5e <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800bd88:	b005      	add	sp, #20
 800bd8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bd8e:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800bd92:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bd96:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bd9a:	2503      	movs	r5, #3
 800bd9c:	fa05 f802 	lsl.w	r8, r5, r2
 800bda0:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bda4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800bda8:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800bdaa:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800bdac:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800bdb0:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800bdb4:	409f      	lsls	r7, r3
 800bdb6:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bdba:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800bdbe:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800bdc0:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800bdc2:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800bdc6:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800bdca:	4097      	lsls	r7, r2
 800bdcc:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bdd0:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800bdd2:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bdd4:	fa01 f102 	lsl.w	r1, r1, r2
 800bdd8:	f47f af54 	bne.w	800bc84 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800bddc:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800bde0:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bde4:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800bde8:	f8de 7020 	ldr.w	r7, [lr, #32]
 800bdec:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bdee:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bdf2:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bdf6:	fa07 f708 	lsl.w	r7, r7, r8
 800bdfa:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bdfc:	270f      	movs	r7, #15
 800bdfe:	fa07 f808 	lsl.w	r8, r7, r8
 800be02:	9f00      	ldr	r7, [sp, #0]
 800be04:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800be08:	9f01      	ldr	r7, [sp, #4]
 800be0a:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800be0e:	f8ce 7020 	str.w	r7, [lr, #32]
 800be12:	e737      	b.n	800bc84 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800be14:	2503      	movs	r5, #3
 800be16:	4095      	lsls	r5, r2
 800be18:	43ed      	mvns	r5, r5
 800be1a:	e7d1      	b.n	800bdc0 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800be1c:	f04f 0e01 	mov.w	lr, #1
 800be20:	fa0e f707 	lsl.w	r7, lr, r7
 800be24:	ea48 0807 	orr.w	r8, r8, r7
 800be28:	e783      	b.n	800bd32 <HAL_GPIO_Init+0xf6>
 800be2a:	f04f 0e02 	mov.w	lr, #2
 800be2e:	fa0e f707 	lsl.w	r7, lr, r7
 800be32:	ea48 0807 	orr.w	r8, r8, r7
 800be36:	e77c      	b.n	800bd32 <HAL_GPIO_Init+0xf6>
 800be38:	f04f 0e03 	mov.w	lr, #3
 800be3c:	fa0e f707 	lsl.w	r7, lr, r7
 800be40:	ea48 0807 	orr.w	r8, r8, r7
 800be44:	e775      	b.n	800bd32 <HAL_GPIO_Init+0xf6>
 800be46:	f04f 0e04 	mov.w	lr, #4
 800be4a:	fa0e f707 	lsl.w	r7, lr, r7
 800be4e:	ea48 0807 	orr.w	r8, r8, r7
 800be52:	e76e      	b.n	800bd32 <HAL_GPIO_Init+0xf6>
 800be54:	f04f 0e07 	mov.w	lr, #7
 800be58:	fa0e f707 	lsl.w	r7, lr, r7
 800be5c:	ea48 0807 	orr.w	r8, r8, r7
 800be60:	e767      	b.n	800bd32 <HAL_GPIO_Init+0xf6>
 800be62:	f04f 0e05 	mov.w	lr, #5
 800be66:	fa0e f707 	lsl.w	r7, lr, r7
 800be6a:	ea48 0807 	orr.w	r8, r8, r7
 800be6e:	e760      	b.n	800bd32 <HAL_GPIO_Init+0xf6>
 800be70:	f04f 0e06 	mov.w	lr, #6
 800be74:	fa0e f707 	lsl.w	r7, lr, r7
 800be78:	ea48 0807 	orr.w	r8, r8, r7
 800be7c:	e759      	b.n	800bd32 <HAL_GPIO_Init+0xf6>
 800be7e:	f04f 0e08 	mov.w	lr, #8
 800be82:	fa0e f707 	lsl.w	r7, lr, r7
 800be86:	ea48 0807 	orr.w	r8, r8, r7
 800be8a:	e752      	b.n	800bd32 <HAL_GPIO_Init+0xf6>
 800be8c:	40013c00 	.word	0x40013c00
 800be90:	40020000 	.word	0x40020000
 800be94:	40020800 	.word	0x40020800
 800be98:	40020c00 	.word	0x40020c00
 800be9c:	40021000 	.word	0x40021000
 800bea0:	40021400 	.word	0x40021400
 800bea4:	40021800 	.word	0x40021800
 800bea8:	40023800 	.word	0x40023800
 800beac:	40021c00 	.word	0x40021c00
 800beb0:	40022000 	.word	0x40022000
 800beb4:	40022400 	.word	0x40022400

0800beb8 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800beb8:	6903      	ldr	r3, [r0, #16]
 800beba:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800bebc:	bf14      	ite	ne
 800bebe:	2001      	movne	r0, #1
 800bec0:	2000      	moveq	r0, #0
 800bec2:	4770      	bx	lr

0800bec4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800bec4:	b902      	cbnz	r2, 800bec8 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800bec6:	0409      	lsls	r1, r1, #16
 800bec8:	6181      	str	r1, [r0, #24]
  }
}
 800beca:	4770      	bx	lr

0800becc <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800becc:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800bece:	ea01 0203 	and.w	r2, r1, r3
 800bed2:	ea21 0103 	bic.w	r1, r1, r3
 800bed6:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800beda:	6181      	str	r1, [r0, #24]
}
 800bedc:	4770      	bx	lr
 800bede:	bf00      	nop

0800bee0 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800bee0:	4770      	bx	lr
 800bee2:	bf00      	nop

0800bee4 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800bee4:	4a04      	ldr	r2, [pc, #16]	; (800bef8 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800bee6:	6951      	ldr	r1, [r2, #20]
 800bee8:	4201      	tst	r1, r0
 800beea:	d100      	bne.n	800beee <HAL_GPIO_EXTI_IRQHandler+0xa>
 800beec:	4770      	bx	lr
{
 800beee:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800bef0:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800bef2:	f7ff fff5 	bl	800bee0 <HAL_GPIO_EXTI_Callback>
}
 800bef6:	bd08      	pop	{r3, pc}
 800bef8:	40013c00 	.word	0x40013c00

0800befc <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800befc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf00:	6804      	ldr	r4, [r0, #0]
{
 800bf02:	b083      	sub	sp, #12
 800bf04:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf06:	6823      	ldr	r3, [r4, #0]
{
 800bf08:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800bf0c:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf10:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bf14:	4606      	mov	r6, r0
 800bf16:	468a      	mov	sl, r1
 800bf18:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf1a:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800bf1c:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bf20:	d136      	bne.n	800bf90 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bf22:	6965      	ldr	r5, [r4, #20]
 800bf24:	07e8      	lsls	r0, r5, #31
 800bf26:	d5fc      	bpl.n	800bf22 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bf28:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800bf2c:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800bf2e:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bf32:	d003      	beq.n	800bf3c <I2C_RequestMemoryWrite+0x40>
 800bf34:	e04f      	b.n	800bfd6 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf36:	6961      	ldr	r1, [r4, #20]
 800bf38:	054d      	lsls	r5, r1, #21
 800bf3a:	d45d      	bmi.n	800bff8 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bf3c:	6961      	ldr	r1, [r4, #20]
 800bf3e:	078b      	lsls	r3, r1, #30
 800bf40:	d5f9      	bpl.n	800bf36 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bf42:	2300      	movs	r3, #0
 800bf44:	9301      	str	r3, [sp, #4]
 800bf46:	6963      	ldr	r3, [r4, #20]
 800bf48:	9301      	str	r3, [sp, #4]
 800bf4a:	69a3      	ldr	r3, [r4, #24]
 800bf4c:	9301      	str	r3, [sp, #4]
 800bf4e:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf50:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bf54:	f040 8088 	bne.w	800c068 <I2C_RequestMemoryWrite+0x16c>
 800bf58:	6963      	ldr	r3, [r4, #20]
 800bf5a:	061a      	lsls	r2, r3, #24
 800bf5c:	d464      	bmi.n	800c028 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf5e:	6963      	ldr	r3, [r4, #20]
 800bf60:	055b      	lsls	r3, r3, #21
 800bf62:	d5f9      	bpl.n	800bf58 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800bf64:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bf66:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800bf6a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bf6c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800bf6e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800bf70:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bf74:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bf78:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800bf7a:	f043 0304 	orr.w	r3, r3, #4
 800bf7e:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bf80:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800bf82:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bf84:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800bf86:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bf8a:	d066      	beq.n	800c05a <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800bf8c:	2001      	movs	r0, #1
 800bf8e:	e01f      	b.n	800bfd0 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bf90:	6963      	ldr	r3, [r4, #20]
 800bf92:	07d9      	lsls	r1, r3, #31
 800bf94:	d4c8      	bmi.n	800bf28 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bf96:	f7ff fbb9 	bl	800b70c <HAL_GetTick>
 800bf9a:	eba0 000b 	sub.w	r0, r0, fp
 800bf9e:	4581      	cmp	r9, r0
 800bfa0:	d304      	bcc.n	800bfac <I2C_RequestMemoryWrite+0xb0>
 800bfa2:	f1b9 0f00 	cmp.w	r9, #0
 800bfa6:	d001      	beq.n	800bfac <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bfa8:	6834      	ldr	r4, [r6, #0]
 800bfaa:	e7b7      	b.n	800bf1c <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bfac:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800bfae:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bfb0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800bfb2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800bfb6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bfba:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bfbc:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800bfbe:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bfc2:	f042 0220 	orr.w	r2, r2, #32
 800bfc6:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bfc8:	680b      	ldr	r3, [r1, #0]
 800bfca:	05dc      	lsls	r4, r3, #23
 800bfcc:	d435      	bmi.n	800c03a <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800bfce:	2003      	movs	r0, #3
}
 800bfd0:	b003      	add	sp, #12
 800bfd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bfd6:	6963      	ldr	r3, [r4, #20]
 800bfd8:	0798      	lsls	r0, r3, #30
 800bfda:	d4b2      	bmi.n	800bf42 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bfdc:	6963      	ldr	r3, [r4, #20]
 800bfde:	055a      	lsls	r2, r3, #21
 800bfe0:	d40a      	bmi.n	800bff8 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bfe2:	f7ff fb93 	bl	800b70c <HAL_GetTick>
 800bfe6:	eba0 000b 	sub.w	r0, r0, fp
 800bfea:	4581      	cmp	r9, r0
 800bfec:	d34e      	bcc.n	800c08c <I2C_RequestMemoryWrite+0x190>
 800bfee:	f1b9 0f00 	cmp.w	r9, #0
 800bff2:	d04b      	beq.n	800c08c <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bff4:	6834      	ldr	r4, [r6, #0]
 800bff6:	e79a      	b.n	800bf2e <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bff8:	6823      	ldr	r3, [r4, #0]
 800bffa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800bffe:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c000:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c002:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800c006:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c008:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c00a:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c00c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c010:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c014:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c016:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c01a:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800c01e:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c020:	6433      	str	r3, [r6, #64]	; 0x40
}
 800c022:	b003      	add	sp, #12
 800c024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c028:	f1b8 0f01 	cmp.w	r8, #1
 800c02c:	d109      	bne.n	800c042 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c02e:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800c030:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c032:	6127      	str	r7, [r4, #16]
}
 800c034:	b003      	add	sp, #12
 800c036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c03a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c03e:	6433      	str	r3, [r6, #64]	; 0x40
 800c040:	e7c5      	b.n	800bfce <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c042:	0a3b      	lsrs	r3, r7, #8
 800c044:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c046:	f1b9 3fff 	cmp.w	r9, #4294967295
 800c04a:	d12e      	bne.n	800c0aa <I2C_RequestMemoryWrite+0x1ae>
 800c04c:	6963      	ldr	r3, [r4, #20]
 800c04e:	0619      	lsls	r1, r3, #24
 800c050:	d4ed      	bmi.n	800c02e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c052:	6963      	ldr	r3, [r4, #20]
 800c054:	055a      	lsls	r2, r3, #21
 800c056:	d5f9      	bpl.n	800c04c <I2C_RequestMemoryWrite+0x150>
 800c058:	e784      	b.n	800bf64 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c05a:	6832      	ldr	r2, [r6, #0]
 800c05c:	6813      	ldr	r3, [r2, #0]
 800c05e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800c062:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c064:	6013      	str	r3, [r2, #0]
 800c066:	e7b3      	b.n	800bfd0 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c068:	6963      	ldr	r3, [r4, #20]
 800c06a:	061d      	lsls	r5, r3, #24
 800c06c:	d4dc      	bmi.n	800c028 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c06e:	6963      	ldr	r3, [r4, #20]
 800c070:	0559      	lsls	r1, r3, #21
 800c072:	f53f af77 	bmi.w	800bf64 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c076:	f7ff fb49 	bl	800b70c <HAL_GetTick>
 800c07a:	eba0 000b 	sub.w	r0, r0, fp
 800c07e:	4581      	cmp	r9, r0
 800c080:	d325      	bcc.n	800c0ce <I2C_RequestMemoryWrite+0x1d2>
 800c082:	f1b9 0f00 	cmp.w	r9, #0
 800c086:	d022      	beq.n	800c0ce <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c088:	6834      	ldr	r4, [r6, #0]
 800c08a:	e761      	b.n	800bf50 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c08c:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c08e:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c090:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c092:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c096:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c09a:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c09c:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c0a0:	f043 0320 	orr.w	r3, r3, #32
 800c0a4:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800c0a6:	2001      	movs	r0, #1
 800c0a8:	e792      	b.n	800bfd0 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0aa:	6963      	ldr	r3, [r4, #20]
 800c0ac:	061b      	lsls	r3, r3, #24
 800c0ae:	d4be      	bmi.n	800c02e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c0b0:	6963      	ldr	r3, [r4, #20]
 800c0b2:	0558      	lsls	r0, r3, #21
 800c0b4:	f53f af56 	bmi.w	800bf64 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c0b8:	f7ff fb28 	bl	800b70c <HAL_GetTick>
 800c0bc:	eba0 000b 	sub.w	r0, r0, fp
 800c0c0:	4581      	cmp	r9, r0
 800c0c2:	d304      	bcc.n	800c0ce <I2C_RequestMemoryWrite+0x1d2>
 800c0c4:	f1b9 0f00 	cmp.w	r9, #0
 800c0c8:	d001      	beq.n	800c0ce <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0ca:	6834      	ldr	r4, [r6, #0]
 800c0cc:	e7bb      	b.n	800c046 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c0ce:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c0d0:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c0d2:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c0d4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c0d8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c0dc:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c0de:	4313      	orrs	r3, r2
 800c0e0:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c0e2:	e74d      	b.n	800bf80 <I2C_RequestMemoryWrite+0x84>

0800c0e4 <I2C_RequestMemoryRead>:
{
 800c0e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c0e8:	6804      	ldr	r4, [r0, #0]
{
 800c0ea:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c0ec:	6823      	ldr	r3, [r4, #0]
 800c0ee:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800c0f2:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c0f4:	6823      	ldr	r3, [r4, #0]
{
 800c0f6:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c0f8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800c0fc:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800c100:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c104:	6023      	str	r3, [r4, #0]
{
 800c106:	4606      	mov	r6, r0
 800c108:	468b      	mov	fp, r1
 800c10a:	4617      	mov	r7, r2
 800c10c:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c110:	d13a      	bne.n	800c188 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c112:	6965      	ldr	r5, [r4, #20]
 800c114:	07eb      	lsls	r3, r5, #31
 800c116:	d5fc      	bpl.n	800c112 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800c118:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800c11c:	6123      	str	r3, [r4, #16]
 800c11e:	fa5f fb8b 	uxtb.w	fp, fp
 800c122:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c126:	d003      	beq.n	800c130 <I2C_RequestMemoryRead+0x4c>
 800c128:	e069      	b.n	800c1fe <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c12a:	6965      	ldr	r5, [r4, #20]
 800c12c:	056a      	lsls	r2, r5, #21
 800c12e:	d44e      	bmi.n	800c1ce <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c130:	6965      	ldr	r5, [r4, #20]
 800c132:	07a9      	lsls	r1, r5, #30
 800c134:	d5f9      	bpl.n	800c12a <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c136:	2300      	movs	r3, #0
 800c138:	9301      	str	r3, [sp, #4]
 800c13a:	6963      	ldr	r3, [r4, #20]
 800c13c:	9301      	str	r3, [sp, #4]
 800c13e:	69a3      	ldr	r3, [r4, #24]
 800c140:	9301      	str	r3, [sp, #4]
 800c142:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c144:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c148:	f040 80bd 	bne.w	800c2c6 <I2C_RequestMemoryRead+0x1e2>
 800c14c:	6963      	ldr	r3, [r4, #20]
 800c14e:	0618      	lsls	r0, r3, #24
 800c150:	d468      	bmi.n	800c224 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c152:	6963      	ldr	r3, [r4, #20]
 800c154:	0559      	lsls	r1, r3, #21
 800c156:	d5f9      	bpl.n	800c14c <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c158:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c15a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c15e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c160:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c162:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c164:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c168:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c16c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c16e:	f043 0304 	orr.w	r3, r3, #4
 800c172:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c174:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c176:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c178:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c17a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c17e:	d070      	beq.n	800c262 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800c180:	2001      	movs	r0, #1
}
 800c182:	b003      	add	sp, #12
 800c184:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c188:	6963      	ldr	r3, [r4, #20]
 800c18a:	07dd      	lsls	r5, r3, #31
 800c18c:	d4c4      	bmi.n	800c118 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c18e:	f7ff fabd 	bl	800b70c <HAL_GetTick>
 800c192:	eba0 0009 	sub.w	r0, r0, r9
 800c196:	4582      	cmp	sl, r0
 800c198:	d304      	bcc.n	800c1a4 <I2C_RequestMemoryRead+0xc0>
 800c19a:	f1ba 0f00 	cmp.w	sl, #0
 800c19e:	d001      	beq.n	800c1a4 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c1a0:	6834      	ldr	r4, [r6, #0]
 800c1a2:	e7b3      	b.n	800c10c <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c1a4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c1a6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c1a8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c1aa:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c1ae:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c1b2:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c1b4:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800c1b6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c1ba:	f042 0220 	orr.w	r2, r2, #32
 800c1be:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c1c0:	680b      	ldr	r3, [r1, #0]
 800c1c2:	05dc      	lsls	r4, r3, #23
 800c1c4:	d43d      	bmi.n	800c242 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800c1c6:	2003      	movs	r0, #3
}
 800c1c8:	b003      	add	sp, #12
 800c1ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c1ce:	6823      	ldr	r3, [r4, #0]
 800c1d0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c1d4:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c1d6:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c1d8:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800c1dc:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c1de:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c1e0:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c1e2:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c1e6:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c1ea:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c1ec:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c1f0:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800c1f4:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c1f6:	6433      	str	r3, [r6, #64]	; 0x40
}
 800c1f8:	b003      	add	sp, #12
 800c1fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c1fe:	6963      	ldr	r3, [r4, #20]
 800c200:	079b      	lsls	r3, r3, #30
 800c202:	d498      	bmi.n	800c136 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c204:	6963      	ldr	r3, [r4, #20]
 800c206:	0558      	lsls	r0, r3, #21
 800c208:	d4e1      	bmi.n	800c1ce <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c20a:	f7ff fa7f 	bl	800b70c <HAL_GetTick>
 800c20e:	eba0 0009 	sub.w	r0, r0, r9
 800c212:	4582      	cmp	sl, r0
 800c214:	f0c0 808f 	bcc.w	800c336 <I2C_RequestMemoryRead+0x252>
 800c218:	f1ba 0f00 	cmp.w	sl, #0
 800c21c:	f000 808b 	beq.w	800c336 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c220:	6834      	ldr	r4, [r6, #0]
 800c222:	e77e      	b.n	800c122 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c224:	f1b8 0f01 	cmp.w	r8, #1
 800c228:	d10f      	bne.n	800c24a <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c22a:	b2ff      	uxtb	r7, r7
 800c22c:	6127      	str	r7, [r4, #16]
 800c22e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c232:	d16e      	bne.n	800c312 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c234:	6963      	ldr	r3, [r4, #20]
 800c236:	061b      	lsls	r3, r3, #24
 800c238:	d41a      	bmi.n	800c270 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c23a:	6963      	ldr	r3, [r4, #20]
 800c23c:	055f      	lsls	r7, r3, #21
 800c23e:	d5f9      	bpl.n	800c234 <I2C_RequestMemoryRead+0x150>
 800c240:	e78a      	b.n	800c158 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c242:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c246:	6433      	str	r3, [r6, #64]	; 0x40
 800c248:	e7bd      	b.n	800c1c6 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c24a:	0a3b      	lsrs	r3, r7, #8
 800c24c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c24e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c252:	d17e      	bne.n	800c352 <I2C_RequestMemoryRead+0x26e>
 800c254:	6963      	ldr	r3, [r4, #20]
 800c256:	061d      	lsls	r5, r3, #24
 800c258:	d4e7      	bmi.n	800c22a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c25a:	6963      	ldr	r3, [r4, #20]
 800c25c:	0558      	lsls	r0, r3, #21
 800c25e:	d5f9      	bpl.n	800c254 <I2C_RequestMemoryRead+0x170>
 800c260:	e77a      	b.n	800c158 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c262:	6832      	ldr	r2, [r6, #0]
 800c264:	6813      	ldr	r3, [r2, #0]
 800c266:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800c26a:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c26c:	6013      	str	r3, [r2, #0]
 800c26e:	e7ab      	b.n	800c1c8 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c270:	6823      	ldr	r3, [r4, #0]
 800c272:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c276:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c278:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c27c:	d113      	bne.n	800c2a6 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c27e:	6963      	ldr	r3, [r4, #20]
 800c280:	07d8      	lsls	r0, r3, #31
 800c282:	d5fc      	bpl.n	800c27e <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800c284:	f04b 0301 	orr.w	r3, fp, #1
 800c288:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800c28a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c28e:	d003      	beq.n	800c298 <I2C_RequestMemoryRead+0x1b4>
 800c290:	e02b      	b.n	800c2ea <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c292:	6963      	ldr	r3, [r4, #20]
 800c294:	055b      	lsls	r3, r3, #21
 800c296:	d49a      	bmi.n	800c1ce <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c298:	6963      	ldr	r3, [r4, #20]
 800c29a:	43db      	mvns	r3, r3
 800c29c:	f013 0302 	ands.w	r3, r3, #2
 800c2a0:	d1f7      	bne.n	800c292 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800c2a2:	4618      	mov	r0, r3
 800c2a4:	e790      	b.n	800c1c8 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c2a6:	6963      	ldr	r3, [r4, #20]
 800c2a8:	07d9      	lsls	r1, r3, #31
 800c2aa:	d4eb      	bmi.n	800c284 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c2ac:	f7ff fa2e 	bl	800b70c <HAL_GetTick>
 800c2b0:	eba0 0009 	sub.w	r0, r0, r9
 800c2b4:	4582      	cmp	sl, r0
 800c2b6:	f4ff af75 	bcc.w	800c1a4 <I2C_RequestMemoryRead+0xc0>
 800c2ba:	f1ba 0f00 	cmp.w	sl, #0
 800c2be:	f43f af71 	beq.w	800c1a4 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c2c2:	6834      	ldr	r4, [r6, #0]
 800c2c4:	e7d8      	b.n	800c278 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c2c6:	6963      	ldr	r3, [r4, #20]
 800c2c8:	061a      	lsls	r2, r3, #24
 800c2ca:	d4ab      	bmi.n	800c224 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c2cc:	6963      	ldr	r3, [r4, #20]
 800c2ce:	055d      	lsls	r5, r3, #21
 800c2d0:	f53f af42 	bmi.w	800c158 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c2d4:	f7ff fa1a 	bl	800b70c <HAL_GetTick>
 800c2d8:	eba0 0009 	sub.w	r0, r0, r9
 800c2dc:	4582      	cmp	sl, r0
 800c2de:	d34b      	bcc.n	800c378 <I2C_RequestMemoryRead+0x294>
 800c2e0:	f1ba 0f00 	cmp.w	sl, #0
 800c2e4:	d048      	beq.n	800c378 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c2e6:	6834      	ldr	r4, [r6, #0]
 800c2e8:	e72c      	b.n	800c144 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c2ea:	6963      	ldr	r3, [r4, #20]
 800c2ec:	43db      	mvns	r3, r3
 800c2ee:	f013 0302 	ands.w	r3, r3, #2
 800c2f2:	d0d6      	beq.n	800c2a2 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c2f4:	6963      	ldr	r3, [r4, #20]
 800c2f6:	055a      	lsls	r2, r3, #21
 800c2f8:	f53f af69 	bmi.w	800c1ce <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c2fc:	f7ff fa06 	bl	800b70c <HAL_GetTick>
 800c300:	eba0 0009 	sub.w	r0, r0, r9
 800c304:	4582      	cmp	sl, r0
 800c306:	d316      	bcc.n	800c336 <I2C_RequestMemoryRead+0x252>
 800c308:	f1ba 0f00 	cmp.w	sl, #0
 800c30c:	d013      	beq.n	800c336 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c30e:	6834      	ldr	r4, [r6, #0]
 800c310:	e7bb      	b.n	800c28a <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c312:	6963      	ldr	r3, [r4, #20]
 800c314:	061d      	lsls	r5, r3, #24
 800c316:	d4ab      	bmi.n	800c270 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c318:	6963      	ldr	r3, [r4, #20]
 800c31a:	055a      	lsls	r2, r3, #21
 800c31c:	f53f af1c 	bmi.w	800c158 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c320:	f7ff f9f4 	bl	800b70c <HAL_GetTick>
 800c324:	eba0 0009 	sub.w	r0, r0, r9
 800c328:	4582      	cmp	sl, r0
 800c32a:	d325      	bcc.n	800c378 <I2C_RequestMemoryRead+0x294>
 800c32c:	f1ba 0f00 	cmp.w	sl, #0
 800c330:	d022      	beq.n	800c378 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c332:	6834      	ldr	r4, [r6, #0]
 800c334:	e77b      	b.n	800c22e <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c336:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c338:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c33a:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c33c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c340:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c344:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c346:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c34a:	f043 0320 	orr.w	r3, r3, #32
 800c34e:	6433      	str	r3, [r6, #64]	; 0x40
 800c350:	e716      	b.n	800c180 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c352:	6963      	ldr	r3, [r4, #20]
 800c354:	0619      	lsls	r1, r3, #24
 800c356:	f53f af68 	bmi.w	800c22a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c35a:	6963      	ldr	r3, [r4, #20]
 800c35c:	055b      	lsls	r3, r3, #21
 800c35e:	f53f aefb 	bmi.w	800c158 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c362:	f7ff f9d3 	bl	800b70c <HAL_GetTick>
 800c366:	eba0 0009 	sub.w	r0, r0, r9
 800c36a:	4582      	cmp	sl, r0
 800c36c:	d304      	bcc.n	800c378 <I2C_RequestMemoryRead+0x294>
 800c36e:	f1ba 0f00 	cmp.w	sl, #0
 800c372:	d001      	beq.n	800c378 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c374:	6834      	ldr	r4, [r6, #0]
 800c376:	e76a      	b.n	800c24e <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c378:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c37a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c37c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c37e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c382:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c386:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c388:	4313      	orrs	r3, r2
 800c38a:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c38c:	e6f2      	b.n	800c174 <I2C_RequestMemoryRead+0x90>
 800c38e:	bf00      	nop

0800c390 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800c390:	2800      	cmp	r0, #0
 800c392:	f000 80b9 	beq.w	800c508 <HAL_I2C_Init+0x178>
{
 800c396:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800c398:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c39c:	4604      	mov	r4, r0
 800c39e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c3a2:	2b00      	cmp	r3, #0
 800c3a4:	f000 8098 	beq.w	800c4d8 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800c3a8:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800c3aa:	2224      	movs	r2, #36	; 0x24
 800c3ac:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800c3b0:	681a      	ldr	r2, [r3, #0]
 800c3b2:	f022 0201 	bic.w	r2, r2, #1
 800c3b6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800c3b8:	681a      	ldr	r2, [r3, #0]
 800c3ba:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c3be:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800c3c0:	681a      	ldr	r2, [r3, #0]
 800c3c2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800c3c6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800c3c8:	f001 fe70 	bl	800e0ac <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c3cc:	6865      	ldr	r5, [r4, #4]
 800c3ce:	4b4f      	ldr	r3, [pc, #316]	; (800c50c <HAL_I2C_Init+0x17c>)
 800c3d0:	429d      	cmp	r5, r3
 800c3d2:	d84f      	bhi.n	800c474 <HAL_I2C_Init+0xe4>
 800c3d4:	4b4e      	ldr	r3, [pc, #312]	; (800c510 <HAL_I2C_Init+0x180>)
 800c3d6:	4298      	cmp	r0, r3
 800c3d8:	d97c      	bls.n	800c4d4 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800c3da:	4b4e      	ldr	r3, [pc, #312]	; (800c514 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c3dc:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800c3de:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c3e2:	1e43      	subs	r3, r0, #1
 800c3e4:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c3e8:	6822      	ldr	r2, [r4, #0]
 800c3ea:	6851      	ldr	r1, [r2, #4]
 800c3ec:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c3f0:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800c3f4:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c3f6:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800c3f8:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c3fc:	f10c 0c01 	add.w	ip, ip, #1
 800c400:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c404:	ea41 010c 	orr.w	r1, r1, ip
 800c408:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c40a:	69d1      	ldr	r1, [r2, #28]
 800c40c:	f640 70fc 	movw	r0, #4092	; 0xffc
 800c410:	3301      	adds	r3, #1
 800c412:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c416:	4203      	tst	r3, r0
 800c418:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c41c:	d161      	bne.n	800c4e2 <HAL_I2C_Init+0x152>
 800c41e:	2304      	movs	r3, #4
 800c420:	430b      	orrs	r3, r1
 800c422:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800c424:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800c428:	6811      	ldr	r1, [r2, #0]
 800c42a:	4303      	orrs	r3, r0
 800c42c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800c430:	430b      	orrs	r3, r1
 800c432:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800c434:	6891      	ldr	r1, [r2, #8]
 800c436:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800c43a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800c43e:	4303      	orrs	r3, r0
 800c440:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c444:	430b      	orrs	r3, r1
 800c446:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800c448:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800c44c:	68d1      	ldr	r1, [r2, #12]
 800c44e:	4303      	orrs	r3, r0
 800c450:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c454:	430b      	orrs	r3, r1
 800c456:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800c458:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c45a:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800c45c:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800c460:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800c462:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c464:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800c466:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800c46a:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800c46c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800c470:	4618      	mov	r0, r3
}
 800c472:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c474:	4b28      	ldr	r3, [pc, #160]	; (800c518 <HAL_I2C_Init+0x188>)
 800c476:	4298      	cmp	r0, r3
 800c478:	d92c      	bls.n	800c4d4 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c47a:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800c47c:	4b25      	ldr	r3, [pc, #148]	; (800c514 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c47e:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c480:	4e26      	ldr	r6, [pc, #152]	; (800c51c <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800c482:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c486:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c48a:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800c48e:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800c490:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c494:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800c498:	fb01 f303 	mul.w	r3, r1, r3
 800c49c:	fba6 6303 	umull	r6, r3, r6, r3
 800c4a0:	6a11      	ldr	r1, [r2, #32]
 800c4a2:	099b      	lsrs	r3, r3, #6
 800c4a4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c4a8:	3301      	adds	r3, #1
 800c4aa:	430b      	orrs	r3, r1
 800c4ac:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c4ae:	69d1      	ldr	r1, [r2, #28]
 800c4b0:	68a3      	ldr	r3, [r4, #8]
 800c4b2:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c4b6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c4ba:	b9ab      	cbnz	r3, 800c4e8 <HAL_I2C_Init+0x158>
 800c4bc:	1e43      	subs	r3, r0, #1
 800c4be:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c4c2:	fbb3 f3f5 	udiv	r3, r3, r5
 800c4c6:	3301      	adds	r3, #1
 800c4c8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c4cc:	b1d3      	cbz	r3, 800c504 <HAL_I2C_Init+0x174>
 800c4ce:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800c4d2:	e7a5      	b.n	800c420 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c4d4:	2001      	movs	r0, #1
}
 800c4d6:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800c4d8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800c4dc:	f7f5 ff56 	bl	800238c <HAL_I2C_MspInit>
 800c4e0:	e762      	b.n	800c3a8 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c4e2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c4e6:	e79b      	b.n	800c420 <HAL_I2C_Init+0x90>
 800c4e8:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c4ec:	1e43      	subs	r3, r0, #1
 800c4ee:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c4f2:	fbb3 f3f5 	udiv	r3, r3, r5
 800c4f6:	3301      	adds	r3, #1
 800c4f8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c4fc:	b113      	cbz	r3, 800c504 <HAL_I2C_Init+0x174>
 800c4fe:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800c502:	e78d      	b.n	800c420 <HAL_I2C_Init+0x90>
 800c504:	2301      	movs	r3, #1
 800c506:	e78b      	b.n	800c420 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c508:	2001      	movs	r0, #1
}
 800c50a:	4770      	bx	lr
 800c50c:	000186a0 	.word	0x000186a0
 800c510:	001e847f 	.word	0x001e847f
 800c514:	431bde83 	.word	0x431bde83
 800c518:	003d08ff 	.word	0x003d08ff
 800c51c:	10624dd3 	.word	0x10624dd3

0800c520 <HAL_I2C_Mem_Write>:
{
 800c520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c524:	4604      	mov	r4, r0
 800c526:	b083      	sub	sp, #12
 800c528:	4699      	mov	r9, r3
 800c52a:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800c52e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c530:	460f      	mov	r7, r1
 800c532:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c534:	f7ff f8ea 	bl	800b70c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c538:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c53c:	2b20      	cmp	r3, #32
 800c53e:	d004      	beq.n	800c54a <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800c540:	2702      	movs	r7, #2
}
 800c542:	4638      	mov	r0, r7
 800c544:	b003      	add	sp, #12
 800c546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c54a:	4605      	mov	r5, r0
 800c54c:	e005      	b.n	800c55a <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c54e:	f7ff f8dd 	bl	800b70c <HAL_GetTick>
 800c552:	1b40      	subs	r0, r0, r5
 800c554:	2819      	cmp	r0, #25
 800c556:	f200 80a8 	bhi.w	800c6aa <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c55a:	6820      	ldr	r0, [r4, #0]
 800c55c:	6983      	ldr	r3, [r0, #24]
 800c55e:	ea6f 0c03 	mvn.w	ip, r3
 800c562:	f01c 0b02 	ands.w	fp, ip, #2
 800c566:	d0f2      	beq.n	800c54e <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800c568:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c56c:	2b01      	cmp	r3, #1
 800c56e:	d0e7      	beq.n	800c540 <HAL_I2C_Mem_Write+0x20>
 800c570:	2301      	movs	r3, #1
 800c572:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c576:	6803      	ldr	r3, [r0, #0]
 800c578:	07db      	lsls	r3, r3, #31
 800c57a:	d572      	bpl.n	800c662 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c57c:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c57e:	6807      	ldr	r7, [r0, #0]
 800c580:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800c584:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800c586:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c588:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c58a:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c58c:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c590:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c594:	2040      	movs	r0, #64	; 0x40
 800c596:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c59a:	2000      	movs	r0, #0
 800c59c:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c59e:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c5a2:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c5a4:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c5a6:	4856      	ldr	r0, [pc, #344]	; (800c700 <HAL_I2C_Mem_Write+0x1e0>)
 800c5a8:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c5aa:	464b      	mov	r3, r9
 800c5ac:	4642      	mov	r2, r8
 800c5ae:	4620      	mov	r0, r4
 800c5b0:	f7ff fca4 	bl	800befc <I2C_RequestMemoryWrite>
 800c5b4:	4607      	mov	r7, r0
 800c5b6:	bb00      	cbnz	r0, 800c5fa <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800c5b8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c5ba:	2b00      	cmp	r3, #0
 800c5bc:	f000 809e 	beq.w	800c6fc <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c5c0:	6823      	ldr	r3, [r4, #0]
 800c5c2:	1c72      	adds	r2, r6, #1
 800c5c4:	d159      	bne.n	800c67a <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c5c6:	695a      	ldr	r2, [r3, #20]
 800c5c8:	0610      	lsls	r0, r2, #24
 800c5ca:	d41b      	bmi.n	800c604 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c5cc:	695a      	ldr	r2, [r3, #20]
 800c5ce:	0551      	lsls	r1, r2, #21
 800c5d0:	d5f9      	bpl.n	800c5c6 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c5d2:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c5d4:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c5d8:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c5da:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c5dc:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c5de:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c5e2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c5e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c5e8:	f043 0304 	orr.w	r3, r3, #4
 800c5ec:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c5ee:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c5f0:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c5f2:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c5f4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c5f8:	d038      	beq.n	800c66c <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800c5fa:	2701      	movs	r7, #1
}
 800c5fc:	4638      	mov	r0, r7
 800c5fe:	b003      	add	sp, #12
 800c600:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c604:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800c608:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c60c:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800c60e:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c612:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c616:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800c618:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c61a:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800c61c:	3a01      	subs	r2, #1
 800c61e:	b292      	uxth	r2, r2
 800c620:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800c622:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c624:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800c626:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c628:	0740      	lsls	r0, r0, #29
 800c62a:	d517      	bpl.n	800c65c <HAL_I2C_Mem_Write+0x13c>
 800c62c:	b942      	cbnz	r2, 800c640 <HAL_I2C_Mem_Write+0x120>
 800c62e:	1c72      	adds	r2, r6, #1
 800c630:	d156      	bne.n	800c6e0 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c632:	695a      	ldr	r2, [r3, #20]
 800c634:	0750      	lsls	r0, r2, #29
 800c636:	d446      	bmi.n	800c6c6 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c638:	695a      	ldr	r2, [r3, #20]
 800c63a:	0551      	lsls	r1, r2, #21
 800c63c:	d5f9      	bpl.n	800c632 <HAL_I2C_Mem_Write+0x112>
 800c63e:	e7c8      	b.n	800c5d2 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c640:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800c644:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800c646:	f10c 0102 	add.w	r1, ip, #2
 800c64a:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c64c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800c64e:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800c652:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800c654:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800c656:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800c658:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800c65a:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c65c:	2a00      	cmp	r2, #0
 800c65e:	d1b0      	bne.n	800c5c2 <HAL_I2C_Mem_Write+0xa2>
 800c660:	e7e5      	b.n	800c62e <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800c662:	6803      	ldr	r3, [r0, #0]
 800c664:	f043 0301 	orr.w	r3, r3, #1
 800c668:	6003      	str	r3, [r0, #0]
 800c66a:	e787      	b.n	800c57c <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c66c:	6822      	ldr	r2, [r4, #0]
 800c66e:	6813      	ldr	r3, [r2, #0]
 800c670:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800c674:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c676:	6013      	str	r3, [r2, #0]
 800c678:	e763      	b.n	800c542 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c67a:	695a      	ldr	r2, [r3, #20]
 800c67c:	0612      	lsls	r2, r2, #24
 800c67e:	d4c1      	bmi.n	800c604 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c680:	695a      	ldr	r2, [r3, #20]
 800c682:	0551      	lsls	r1, r2, #21
 800c684:	d4a5      	bmi.n	800c5d2 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c686:	f7ff f841 	bl	800b70c <HAL_GetTick>
 800c68a:	1b40      	subs	r0, r0, r5
 800c68c:	4286      	cmp	r6, r0
 800c68e:	d301      	bcc.n	800c694 <HAL_I2C_Mem_Write+0x174>
 800c690:	2e00      	cmp	r6, #0
 800c692:	d195      	bne.n	800c5c0 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c694:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c696:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c698:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c69a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c69e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c6a2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c6a4:	4313      	orrs	r3, r2
 800c6a6:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800c6a8:	e7a1      	b.n	800c5ee <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6aa:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c6ac:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6b0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c6b4:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c6b8:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c6ba:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c6be:	f043 0320 	orr.w	r3, r3, #32
 800c6c2:	6423      	str	r3, [r4, #64]	; 0x40
 800c6c4:	e73c      	b.n	800c540 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c6c6:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c6c8:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c6ca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800c6ce:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c6d0:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800c6d2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c6d6:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c6da:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800c6de:	e730      	b.n	800c542 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c6e0:	695a      	ldr	r2, [r3, #20]
 800c6e2:	0752      	lsls	r2, r2, #29
 800c6e4:	d4ef      	bmi.n	800c6c6 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c6e6:	695a      	ldr	r2, [r3, #20]
 800c6e8:	0551      	lsls	r1, r2, #21
 800c6ea:	f53f af72 	bmi.w	800c5d2 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c6ee:	f7ff f80d 	bl	800b70c <HAL_GetTick>
 800c6f2:	1b40      	subs	r0, r0, r5
 800c6f4:	4286      	cmp	r6, r0
 800c6f6:	d3cd      	bcc.n	800c694 <HAL_I2C_Mem_Write+0x174>
 800c6f8:	2e00      	cmp	r6, #0
 800c6fa:	d0cb      	beq.n	800c694 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c6fc:	6823      	ldr	r3, [r4, #0]
 800c6fe:	e796      	b.n	800c62e <HAL_I2C_Mem_Write+0x10e>
 800c700:	ffff0000 	.word	0xffff0000

0800c704 <HAL_I2C_Mem_Read>:
{
 800c704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c708:	4604      	mov	r4, r0
 800c70a:	b087      	sub	sp, #28
 800c70c:	4699      	mov	r9, r3
 800c70e:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800c712:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800c714:	460f      	mov	r7, r1
 800c716:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c718:	f7fe fff8 	bl	800b70c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c71c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c720:	2b20      	cmp	r3, #32
 800c722:	d004      	beq.n	800c72e <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800c724:	2702      	movs	r7, #2
}
 800c726:	4638      	mov	r0, r7
 800c728:	b007      	add	sp, #28
 800c72a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c72e:	4606      	mov	r6, r0
 800c730:	e005      	b.n	800c73e <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c732:	f7fe ffeb 	bl	800b70c <HAL_GetTick>
 800c736:	1b80      	subs	r0, r0, r6
 800c738:	2819      	cmp	r0, #25
 800c73a:	f200 80d2 	bhi.w	800c8e2 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c73e:	f8d4 c000 	ldr.w	ip, [r4]
 800c742:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800c746:	43c0      	mvns	r0, r0
 800c748:	f010 0b02 	ands.w	fp, r0, #2
 800c74c:	d0f1      	beq.n	800c732 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800c74e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c752:	2b01      	cmp	r3, #1
 800c754:	d0e6      	beq.n	800c724 <HAL_I2C_Mem_Read+0x20>
 800c756:	2301      	movs	r3, #1
 800c758:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c75c:	f8dc 3000 	ldr.w	r3, [ip]
 800c760:	07d9      	lsls	r1, r3, #31
 800c762:	d537      	bpl.n	800c7d4 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c764:	f8dc 0000 	ldr.w	r0, [ip]
 800c768:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800c76c:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800c770:	9810      	ldr	r0, [sp, #64]	; 0x40
 800c772:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c774:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c776:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c77a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c77e:	2040      	movs	r0, #64	; 0x40
 800c780:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c784:	2000      	movs	r0, #0
 800c786:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c788:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c78c:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c78e:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c790:	4893      	ldr	r0, [pc, #588]	; (800c9e0 <HAL_I2C_Mem_Read+0x2dc>)
 800c792:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c794:	4639      	mov	r1, r7
 800c796:	464b      	mov	r3, r9
 800c798:	4642      	mov	r2, r8
 800c79a:	4620      	mov	r0, r4
 800c79c:	f7ff fca2 	bl	800c0e4 <I2C_RequestMemoryRead>
 800c7a0:	4607      	mov	r7, r0
 800c7a2:	2800      	cmp	r0, #0
 800c7a4:	f040 80ab 	bne.w	800c8fe <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800c7a8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800c7aa:	b9d2      	cbnz	r2, 800c7e2 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c7ac:	6823      	ldr	r3, [r4, #0]
 800c7ae:	9002      	str	r0, [sp, #8]
 800c7b0:	695a      	ldr	r2, [r3, #20]
 800c7b2:	9202      	str	r2, [sp, #8]
 800c7b4:	699a      	ldr	r2, [r3, #24]
 800c7b6:	9202      	str	r2, [sp, #8]
 800c7b8:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c7ba:	681a      	ldr	r2, [r3, #0]
 800c7bc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c7c0:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c7c2:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800c7c4:	2220      	movs	r2, #32
 800c7c6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c7ca:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c7ce:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800c7d2:	e7a8      	b.n	800c726 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800c7d4:	f8dc 3000 	ldr.w	r3, [ip]
 800c7d8:	f043 0301 	orr.w	r3, r3, #1
 800c7dc:	f8cc 3000 	str.w	r3, [ip]
 800c7e0:	e7c0      	b.n	800c764 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800c7e2:	2a01      	cmp	r2, #1
 800c7e4:	f000 812c 	beq.w	800ca40 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800c7e8:	2a02      	cmp	r2, #2
 800c7ea:	f000 80bd 	beq.w	800c968 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c7ee:	6823      	ldr	r3, [r4, #0]
 800c7f0:	9005      	str	r0, [sp, #20]
 800c7f2:	6959      	ldr	r1, [r3, #20]
 800c7f4:	9105      	str	r1, [sp, #20]
 800c7f6:	6999      	ldr	r1, [r3, #24]
 800c7f8:	9105      	str	r1, [sp, #20]
 800c7fa:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800c7fc:	2a03      	cmp	r2, #3
 800c7fe:	d849      	bhi.n	800c894 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800c800:	2a01      	cmp	r2, #1
 800c802:	f000 80eb 	beq.w	800c9dc <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800c806:	2a02      	cmp	r2, #2
 800c808:	f000 8089 	beq.w	800c91e <HAL_I2C_Mem_Read+0x21a>
 800c80c:	1c69      	adds	r1, r5, #1
 800c80e:	f040 80bb 	bne.w	800c988 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c812:	695a      	ldr	r2, [r3, #20]
 800c814:	0752      	lsls	r2, r2, #29
 800c816:	d5fc      	bpl.n	800c812 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c818:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c81a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c81c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c820:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c822:	691b      	ldr	r3, [r3, #16]
 800c824:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c826:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c828:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c82a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c82c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c82e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c830:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c832:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c834:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c836:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c838:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c83a:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c83c:	6822      	ldr	r2, [r4, #0]
 800c83e:	f040 80af 	bne.w	800c9a0 <HAL_I2C_Mem_Read+0x29c>
 800c842:	6953      	ldr	r3, [r2, #20]
 800c844:	075b      	lsls	r3, r3, #29
 800c846:	d5fc      	bpl.n	800c842 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c848:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c84a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c84c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c850:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c852:	6913      	ldr	r3, [r2, #16]
 800c854:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c856:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c858:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c85a:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c85c:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800c85e:	3b01      	subs	r3, #1
 800c860:	b29b      	uxth	r3, r3
 800c862:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c864:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800c866:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800c868:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800c86c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c86e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c872:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800c874:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c876:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c878:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c87a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c87c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c87e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c880:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c882:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c884:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c886:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c888:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c88a:	2a00      	cmp	r2, #0
 800c88c:	d099      	beq.n	800c7c2 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800c88e:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c890:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800c892:	d9b5      	bls.n	800c800 <HAL_I2C_Mem_Read+0xfc>
 800c894:	b95d      	cbnz	r5, 800c8ae <HAL_I2C_Mem_Read+0x1aa>
 800c896:	e0c5      	b.n	800ca24 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c898:	695a      	ldr	r2, [r3, #20]
 800c89a:	06d0      	lsls	r0, r2, #27
 800c89c:	f100 80b2 	bmi.w	800ca04 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8a0:	f7fe ff34 	bl	800b70c <HAL_GetTick>
 800c8a4:	1b80      	subs	r0, r0, r6
 800c8a6:	4285      	cmp	r5, r0
 800c8a8:	f0c0 8086 	bcc.w	800c9b8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8ac:	6823      	ldr	r3, [r4, #0]
 800c8ae:	695a      	ldr	r2, [r3, #20]
 800c8b0:	0652      	lsls	r2, r2, #25
 800c8b2:	d5f1      	bpl.n	800c898 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c8b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c8b6:	691b      	ldr	r3, [r3, #16]
 800c8b8:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800c8ba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c8bc:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800c8be:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c8c0:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c8c2:	3b01      	subs	r3, #1
 800c8c4:	b29b      	uxth	r3, r3
 800c8c6:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c8c8:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800c8ca:	3a01      	subs	r2, #1
 800c8cc:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800c8ce:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c8d2:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800c8d4:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c8d6:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c8da:	d5d6      	bpl.n	800c88a <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c8dc:	6903      	ldr	r3, [r0, #16]
 800c8de:	704b      	strb	r3, [r1, #1]
 800c8e0:	e036      	b.n	800c950 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c8e2:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c8e4:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c8e8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c8ec:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c8f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c8f2:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c8f6:	f043 0320 	orr.w	r3, r3, #32
 800c8fa:	6423      	str	r3, [r4, #64]	; 0x40
 800c8fc:	e712      	b.n	800c724 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800c8fe:	2701      	movs	r7, #1
}
 800c900:	4638      	mov	r0, r7
 800c902:	b007      	add	sp, #28
 800c904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c908:	695a      	ldr	r2, [r3, #20]
 800c90a:	0750      	lsls	r0, r2, #29
 800c90c:	d40c      	bmi.n	800c928 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c90e:	f7fe fefd 	bl	800b70c <HAL_GetTick>
 800c912:	1b80      	subs	r0, r0, r6
 800c914:	4285      	cmp	r5, r0
 800c916:	d34f      	bcc.n	800c9b8 <HAL_I2C_Mem_Read+0x2b4>
 800c918:	2d00      	cmp	r5, #0
 800c91a:	d04d      	beq.n	800c9b8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c91c:	6823      	ldr	r3, [r4, #0]
 800c91e:	1c69      	adds	r1, r5, #1
 800c920:	d1f2      	bne.n	800c908 <HAL_I2C_Mem_Read+0x204>
 800c922:	695a      	ldr	r2, [r3, #20]
 800c924:	0752      	lsls	r2, r2, #29
 800c926:	d5fc      	bpl.n	800c922 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c928:	681a      	ldr	r2, [r3, #0]
 800c92a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c92e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c930:	691a      	ldr	r2, [r3, #16]
 800c932:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c934:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800c936:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c938:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c93a:	3b01      	subs	r3, #1
 800c93c:	b29b      	uxth	r3, r3
 800c93e:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c940:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c942:	3b01      	subs	r3, #1
 800c944:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c946:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800c948:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c94a:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800c94c:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c94e:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800c950:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c952:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c954:	3301      	adds	r3, #1
 800c956:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c958:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c95a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c95c:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800c95e:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c960:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800c962:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c964:	8563      	strh	r3, [r4, #42]	; 0x2a
 800c966:	e790      	b.n	800c88a <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c968:	6823      	ldr	r3, [r4, #0]
 800c96a:	6819      	ldr	r1, [r3, #0]
 800c96c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c970:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c972:	6819      	ldr	r1, [r3, #0]
 800c974:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800c978:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c97a:	9004      	str	r0, [sp, #16]
 800c97c:	6959      	ldr	r1, [r3, #20]
 800c97e:	9104      	str	r1, [sp, #16]
 800c980:	6999      	ldr	r1, [r3, #24]
 800c982:	9104      	str	r1, [sp, #16]
 800c984:	9904      	ldr	r1, [sp, #16]
 800c986:	e739      	b.n	800c7fc <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c988:	695a      	ldr	r2, [r3, #20]
 800c98a:	0750      	lsls	r0, r2, #29
 800c98c:	f53f af44 	bmi.w	800c818 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c990:	f7fe febc 	bl	800b70c <HAL_GetTick>
 800c994:	1b80      	subs	r0, r0, r6
 800c996:	4285      	cmp	r5, r0
 800c998:	d30e      	bcc.n	800c9b8 <HAL_I2C_Mem_Read+0x2b4>
 800c99a:	b16d      	cbz	r5, 800c9b8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c99c:	6823      	ldr	r3, [r4, #0]
 800c99e:	e735      	b.n	800c80c <HAL_I2C_Mem_Read+0x108>
 800c9a0:	6953      	ldr	r3, [r2, #20]
 800c9a2:	0758      	lsls	r0, r3, #29
 800c9a4:	f53f af50 	bmi.w	800c848 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c9a8:	f7fe feb0 	bl	800b70c <HAL_GetTick>
 800c9ac:	1b80      	subs	r0, r0, r6
 800c9ae:	4285      	cmp	r5, r0
 800c9b0:	d302      	bcc.n	800c9b8 <HAL_I2C_Mem_Read+0x2b4>
 800c9b2:	2d00      	cmp	r5, #0
 800c9b4:	f47f af41 	bne.w	800c83a <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c9b8:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c9ba:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c9bc:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c9be:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c9c2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c9c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c9c8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c9cc:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c9ce:	f043 0320 	orr.w	r3, r3, #32
}
 800c9d2:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c9d4:	6423      	str	r3, [r4, #64]	; 0x40
}
 800c9d6:	b007      	add	sp, #28
 800c9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9dc:	b95d      	cbnz	r5, 800c9f6 <HAL_I2C_Mem_Read+0x2f2>
 800c9de:	e02b      	b.n	800ca38 <HAL_I2C_Mem_Read+0x334>
 800c9e0:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c9e4:	695a      	ldr	r2, [r3, #20]
 800c9e6:	06d2      	lsls	r2, r2, #27
 800c9e8:	d40c      	bmi.n	800ca04 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c9ea:	f7fe fe8f 	bl	800b70c <HAL_GetTick>
 800c9ee:	1b80      	subs	r0, r0, r6
 800c9f0:	4285      	cmp	r5, r0
 800c9f2:	d3e1      	bcc.n	800c9b8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c9f4:	6823      	ldr	r3, [r4, #0]
 800c9f6:	695a      	ldr	r2, [r3, #20]
 800c9f8:	0651      	lsls	r1, r2, #25
 800c9fa:	d5f3      	bpl.n	800c9e4 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c9fc:	691a      	ldr	r2, [r3, #16]
 800c9fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ca00:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ca02:	e7a5      	b.n	800c950 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ca04:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ca06:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800ca0a:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ca0c:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ca0e:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ca10:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ca14:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800ca18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ca1a:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800ca1c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ca20:	2701      	movs	r7, #1
 800ca22:	e680      	b.n	800c726 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ca24:	695a      	ldr	r2, [r3, #20]
 800ca26:	0652      	lsls	r2, r2, #25
 800ca28:	f53f af44 	bmi.w	800c8b4 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ca2c:	695a      	ldr	r2, [r3, #20]
 800ca2e:	06d1      	lsls	r1, r2, #27
 800ca30:	d4e8      	bmi.n	800ca04 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ca32:	f7fe fe6b 	bl	800b70c <HAL_GetTick>
 800ca36:	e7bf      	b.n	800c9b8 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ca38:	695a      	ldr	r2, [r3, #20]
 800ca3a:	0650      	lsls	r0, r2, #25
 800ca3c:	d5f6      	bpl.n	800ca2c <HAL_I2C_Mem_Read+0x328>
 800ca3e:	e7dd      	b.n	800c9fc <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca40:	6823      	ldr	r3, [r4, #0]
 800ca42:	6819      	ldr	r1, [r3, #0]
 800ca44:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ca48:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ca4a:	9003      	str	r0, [sp, #12]
 800ca4c:	6959      	ldr	r1, [r3, #20]
 800ca4e:	9103      	str	r1, [sp, #12]
 800ca50:	6999      	ldr	r1, [r3, #24]
 800ca52:	9103      	str	r1, [sp, #12]
 800ca54:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ca56:	6819      	ldr	r1, [r3, #0]
 800ca58:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800ca5c:	6019      	str	r1, [r3, #0]
 800ca5e:	e6cd      	b.n	800c7fc <HAL_I2C_Mem_Read+0xf8>

0800ca60 <HAL_I2C_MasterTxCpltCallback>:
 800ca60:	4770      	bx	lr
 800ca62:	bf00      	nop

0800ca64 <HAL_I2C_MasterRxCpltCallback>:
 800ca64:	4770      	bx	lr
 800ca66:	bf00      	nop

0800ca68 <HAL_I2C_SlaveTxCpltCallback>:
 800ca68:	4770      	bx	lr
 800ca6a:	bf00      	nop

0800ca6c <HAL_I2C_SlaveRxCpltCallback>:
 800ca6c:	4770      	bx	lr
 800ca6e:	bf00      	nop

0800ca70 <HAL_I2C_AddrCallback>:
}
 800ca70:	4770      	bx	lr
 800ca72:	bf00      	nop

0800ca74 <HAL_I2C_ListenCpltCallback>:
 800ca74:	4770      	bx	lr
 800ca76:	bf00      	nop

0800ca78 <HAL_I2C_MemTxCpltCallback>:
 800ca78:	4770      	bx	lr
 800ca7a:	bf00      	nop

0800ca7c <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ca7c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800ca80:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800ca82:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800ca84:	b959      	cbnz	r1, 800ca9e <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800ca86:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ca88:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800ca8a:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ca8c:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800ca8e:	d00d      	beq.n	800caac <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800ca90:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800ca94:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800ca96:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ca98:	3201      	adds	r2, #1
 800ca9a:	6502      	str	r2, [r0, #80]	; 0x50
 800ca9c:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800ca9e:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800caa0:	2901      	cmp	r1, #1
 800caa2:	d009      	beq.n	800cab8 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800caa4:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800caa6:	2902      	cmp	r1, #2
 800caa8:	d00e      	beq.n	800cac8 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800caaa:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800caac:	b2d2      	uxtb	r2, r2
 800caae:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800cab0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800cab2:	3202      	adds	r2, #2
 800cab4:	6502      	str	r2, [r0, #80]	; 0x50
 800cab6:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800cab8:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800caba:	6801      	ldr	r1, [r0, #0]
 800cabc:	b2d2      	uxtb	r2, r2
 800cabe:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800cac0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800cac2:	3201      	adds	r2, #1
 800cac4:	6502      	str	r2, [r0, #80]	; 0x50
 800cac6:	4770      	bx	lr
 800cac8:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800caca:	2a22      	cmp	r2, #34	; 0x22
 800cacc:	d01f      	beq.n	800cb0e <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cace:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800cad0:	b289      	uxth	r1, r1
 800cad2:	b9c1      	cbnz	r1, 800cb06 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cad4:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800cad6:	b289      	uxth	r1, r1
 800cad8:	2900      	cmp	r1, #0
 800cada:	d1e6      	bne.n	800caaa <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800cadc:	2a21      	cmp	r2, #33	; 0x21
 800cade:	d1e4      	bne.n	800caaa <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800cae0:	6802      	ldr	r2, [r0, #0]
{
 800cae2:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800cae4:	6854      	ldr	r4, [r2, #4]
 800cae6:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800caea:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800caec:	6814      	ldr	r4, [r2, #0]
 800caee:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800caf2:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800caf4:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800caf6:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800caf8:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cafc:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800cb00:	f7ff ffba 	bl	800ca78 <HAL_I2C_MemTxCpltCallback>
}
 800cb04:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cb06:	2a21      	cmp	r2, #33	; 0x21
 800cb08:	d00a      	beq.n	800cb20 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cb0a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800cb0c:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800cb0e:	6801      	ldr	r1, [r0, #0]
 800cb10:	680a      	ldr	r2, [r1, #0]
 800cb12:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800cb16:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800cb18:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800cb1a:	3201      	adds	r2, #1
 800cb1c:	6502      	str	r2, [r0, #80]	; 0x50
 800cb1e:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cb20:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800cb22:	6802      	ldr	r2, [r0, #0]
 800cb24:	f811 0b01 	ldrb.w	r0, [r1], #1
 800cb28:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800cb2a:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800cb2c:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800cb2e:	3a01      	subs	r2, #1
 800cb30:	b292      	uxth	r2, r2
 800cb32:	855a      	strh	r2, [r3, #42]	; 0x2a
 800cb34:	4770      	bx	lr
 800cb36:	bf00      	nop

0800cb38 <HAL_I2C_MemRxCpltCallback>:
 800cb38:	4770      	bx	lr
 800cb3a:	bf00      	nop

0800cb3c <HAL_I2C_ErrorCallback>:
 800cb3c:	4770      	bx	lr
 800cb3e:	bf00      	nop

0800cb40 <HAL_I2C_AbortCpltCallback>:
 800cb40:	4770      	bx	lr
 800cb42:	bf00      	nop

0800cb44 <I2C_DMAAbort>:
{
 800cb44:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb46:	4b3a      	ldr	r3, [pc, #232]	; (800cc30 <I2C_DMAAbort+0xec>)
 800cb48:	4a3a      	ldr	r2, [pc, #232]	; (800cc34 <I2C_DMAAbort+0xf0>)
 800cb4a:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800cb4c:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800cb4e:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb50:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800cb52:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb54:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800cb58:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb5a:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cb5c:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800cb60:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb62:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800cb66:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cb6a:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb6c:	9301      	str	r3, [sp, #4]
 800cb6e:	e005      	b.n	800cb7c <I2C_DMAAbort+0x38>
    count--;
 800cb70:	9b01      	ldr	r3, [sp, #4]
 800cb72:	3b01      	subs	r3, #1
 800cb74:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800cb76:	6813      	ldr	r3, [r2, #0]
 800cb78:	059b      	lsls	r3, r3, #22
 800cb7a:	d506      	bpl.n	800cb8a <I2C_DMAAbort+0x46>
    if (count == 0U)
 800cb7c:	9b01      	ldr	r3, [sp, #4]
 800cb7e:	2b00      	cmp	r3, #0
 800cb80:	d1f6      	bne.n	800cb70 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800cb82:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800cb84:	f043 0320 	orr.w	r3, r3, #32
 800cb88:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800cb8a:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800cb8c:	b34c      	cbz	r4, 800cbe2 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800cb8e:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800cb90:	2500      	movs	r5, #0
 800cb92:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800cb94:	b1f3      	cbz	r3, 800cbd4 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cb96:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800cb98:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cb9a:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800cb9e:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800cba0:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800cba2:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800cba4:	2400      	movs	r4, #0
 800cba6:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800cba8:	6813      	ldr	r3, [r2, #0]
 800cbaa:	f023 0301 	bic.w	r3, r3, #1
 800cbae:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800cbb0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cbb4:	2b60      	cmp	r3, #96	; 0x60
 800cbb6:	d02a      	beq.n	800cc0e <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cbb8:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800cbbc:	2928      	cmp	r1, #40	; 0x28
 800cbbe:	d019      	beq.n	800cbf4 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800cbc0:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cbc2:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800cbc4:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cbc8:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800cbcc:	f7ff ffb6 	bl	800cb3c <HAL_I2C_ErrorCallback>
}
 800cbd0:	b002      	add	sp, #8
 800cbd2:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cbd4:	6815      	ldr	r5, [r2, #0]
 800cbd6:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800cbda:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800cbdc:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800cbde:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800cbe0:	e7e2      	b.n	800cba8 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800cbe2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800cbe4:	b1f3      	cbz	r3, 800cc24 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cbe6:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800cbe8:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cbea:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800cbee:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800cbf0:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800cbf2:	e7d7      	b.n	800cba4 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800cbf4:	6813      	ldr	r3, [r2, #0]
 800cbf6:	f043 0301 	orr.w	r3, r3, #1
 800cbfa:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cbfc:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800cbfe:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cc00:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800cc04:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800cc06:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cc08:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800cc0c:	e7de      	b.n	800cbcc <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cc0e:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800cc10:	2220      	movs	r2, #32
 800cc12:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cc16:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800cc1a:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800cc1c:	f7ff ff90 	bl	800cb40 <HAL_I2C_AbortCpltCallback>
}
 800cc20:	b002      	add	sp, #8
 800cc22:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cc24:	6814      	ldr	r4, [r2, #0]
 800cc26:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800cc2a:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800cc2c:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800cc2e:	e7bb      	b.n	800cba8 <I2C_DMAAbort+0x64>
 800cc30:	2000007c 	.word	0x2000007c
 800cc34:	14f8b589 	.word	0x14f8b589

0800cc38 <I2C_ITError>:
{
 800cc38:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc3a:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800cc3e:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cc42:	2b10      	cmp	r3, #16
{
 800cc44:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc46:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cc48:	d039      	beq.n	800ccbe <I2C_ITError+0x86>
 800cc4a:	b2d9      	uxtb	r1, r3
 800cc4c:	2940      	cmp	r1, #64	; 0x40
 800cc4e:	d036      	beq.n	800ccbe <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cc50:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800cc54:	2928      	cmp	r1, #40	; 0x28
 800cc56:	d03d      	beq.n	800ccd4 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cc58:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cc5a:	6859      	ldr	r1, [r3, #4]
 800cc5c:	0508      	lsls	r0, r1, #20
 800cc5e:	d407      	bmi.n	800cc70 <I2C_ITError+0x38>
 800cc60:	2a60      	cmp	r2, #96	; 0x60
 800cc62:	d005      	beq.n	800cc70 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800cc64:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cc66:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800cc68:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cc6c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800cc70:	2200      	movs	r2, #0
 800cc72:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cc74:	685a      	ldr	r2, [r3, #4]
 800cc76:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cc7a:	d134      	bne.n	800cce6 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800cc7c:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cc80:	2960      	cmp	r1, #96	; 0x60
 800cc82:	d075      	beq.n	800cd70 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cc84:	695a      	ldr	r2, [r3, #20]
 800cc86:	0650      	lsls	r0, r2, #25
 800cc88:	d505      	bpl.n	800cc96 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cc8a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cc8c:	691b      	ldr	r3, [r3, #16]
 800cc8e:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cc90:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cc92:	3301      	adds	r3, #1
 800cc94:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800cc96:	4620      	mov	r0, r4
 800cc98:	f7ff ff50 	bl	800cb3c <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800cc9c:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800cc9e:	0719      	lsls	r1, r3, #28
 800cca0:	d004      	beq.n	800ccac <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800cca2:	6822      	ldr	r2, [r4, #0]
 800cca4:	6853      	ldr	r3, [r2, #4]
 800cca6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800ccaa:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800ccac:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800ccb0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ccb2:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800ccb4:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800ccb6:	d501      	bpl.n	800ccbc <I2C_ITError+0x84>
 800ccb8:	2b28      	cmp	r3, #40	; 0x28
 800ccba:	d02f      	beq.n	800cd1c <I2C_ITError+0xe4>
}
 800ccbc:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ccbe:	2a22      	cmp	r2, #34	; 0x22
 800ccc0:	d1c6      	bne.n	800cc50 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800ccc2:	6823      	ldr	r3, [r4, #0]
 800ccc4:	681a      	ldr	r2, [r3, #0]
 800ccc6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ccca:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cccc:	685a      	ldr	r2, [r3, #4]
 800ccce:	0512      	lsls	r2, r2, #20
 800ccd0:	d5c8      	bpl.n	800cc64 <I2C_ITError+0x2c>
 800ccd2:	e7cd      	b.n	800cc70 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800ccd4:	2300      	movs	r3, #0
 800ccd6:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800ccd8:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800ccda:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ccde:	685a      	ldr	r2, [r3, #4]
 800cce0:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cce4:	d0ca      	beq.n	800cc7c <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800cce6:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cce8:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800ccea:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ccee:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800ccf0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800ccf4:	2b01      	cmp	r3, #1
 800ccf6:	d01e      	beq.n	800cd36 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800ccf8:	4b28      	ldr	r3, [pc, #160]	; (800cd9c <I2C_ITError+0x164>)
 800ccfa:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800ccfc:	f7fe fd90 	bl	800b820 <HAL_DMA_Abort_IT>
 800cd00:	2800      	cmp	r0, #0
 800cd02:	d0cb      	beq.n	800cc9c <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800cd04:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cd06:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800cd08:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cd0a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cd0c:	f023 0301 	bic.w	r3, r3, #1
 800cd10:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cd12:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cd16:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cd18:	4798      	blx	r3
 800cd1a:	e7bf      	b.n	800cc9c <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800cd1c:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800cd1e:	4920      	ldr	r1, [pc, #128]	; (800cda0 <I2C_ITError+0x168>)
 800cd20:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800cd22:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800cd24:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800cd26:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800cd28:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cd2c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800cd30:	f7ff fea0 	bl	800ca74 <HAL_I2C_ListenCpltCallback>
}
 800cd34:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800cd36:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800cd38:	4b18      	ldr	r3, [pc, #96]	; (800cd9c <I2C_ITError+0x164>)
 800cd3a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800cd3c:	f7fe fd70 	bl	800b820 <HAL_DMA_Abort_IT>
 800cd40:	2800      	cmp	r0, #0
 800cd42:	d0ab      	beq.n	800cc9c <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cd44:	6823      	ldr	r3, [r4, #0]
 800cd46:	695a      	ldr	r2, [r3, #20]
 800cd48:	0651      	lsls	r1, r2, #25
 800cd4a:	d506      	bpl.n	800cd5a <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd4c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd4e:	691b      	ldr	r3, [r3, #16]
 800cd50:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800cd52:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cd54:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800cd56:	3201      	adds	r2, #1
 800cd58:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cd5a:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cd5c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800cd5e:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800cd62:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cd64:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cd66:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cd6a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cd6c:	4798      	blx	r3
 800cd6e:	e795      	b.n	800cc9c <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800cd70:	2120      	movs	r1, #32
 800cd72:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cd76:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cd78:	695a      	ldr	r2, [r3, #20]
 800cd7a:	0652      	lsls	r2, r2, #25
 800cd7c:	d506      	bpl.n	800cd8c <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd7e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd80:	691b      	ldr	r3, [r3, #16]
 800cd82:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cd84:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cd86:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cd88:	3201      	adds	r2, #1
 800cd8a:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cd8c:	681a      	ldr	r2, [r3, #0]
 800cd8e:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800cd92:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800cd94:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800cd96:	f7ff fed3 	bl	800cb40 <HAL_I2C_AbortCpltCallback>
 800cd9a:	e77f      	b.n	800cc9c <I2C_ITError+0x64>
 800cd9c:	0800cb45 	.word	0x0800cb45
 800cda0:	ffff0000 	.word	0xffff0000

0800cda4 <HAL_I2C_EV_IRQHandler>:
{
 800cda4:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cda6:	6803      	ldr	r3, [r0, #0]
{
 800cda8:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cdaa:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cdac:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cdae:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cdb2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cdb6:	2910      	cmp	r1, #16
{
 800cdb8:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cdba:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cdbc:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cdc0:	d022      	beq.n	800ce08 <HAL_I2C_EV_IRQHandler+0x64>
 800cdc2:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800cdc6:	d01f      	beq.n	800ce08 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cdc8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800cdca:	2900      	cmp	r1, #0
 800cdcc:	f000 8094 	beq.w	800cef8 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cdd0:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800cdd2:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cdd4:	f011 0602 	ands.w	r6, r1, #2
 800cdd8:	d059      	beq.n	800ce8e <HAL_I2C_EV_IRQHandler+0xea>
 800cdda:	0586      	lsls	r6, r0, #22
 800cddc:	d559      	bpl.n	800ce92 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cdde:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cde0:	b102      	cbz	r2, 800cde4 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cde2:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cde4:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800cde8:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800cdec:	2a28      	cmp	r2, #40	; 0x28
 800cdee:	f000 821e 	beq.w	800d22e <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cdf2:	2200      	movs	r2, #0
 800cdf4:	920c      	str	r2, [sp, #48]	; 0x30
 800cdf6:	6959      	ldr	r1, [r3, #20]
 800cdf8:	910c      	str	r1, [sp, #48]	; 0x30
 800cdfa:	699b      	ldr	r3, [r3, #24]
 800cdfc:	930c      	str	r3, [sp, #48]	; 0x30
 800cdfe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800ce00:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800ce04:	b00e      	add	sp, #56	; 0x38
 800ce06:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ce08:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800ce0a:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800ce0c:	f011 0f01 	tst.w	r1, #1
 800ce10:	d11a      	bne.n	800ce48 <HAL_I2C_EV_IRQHandler+0xa4>
 800ce12:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800ce16:	d0f5      	beq.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800ce18:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800ce1c:	d0f2      	beq.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce1e:	070d      	lsls	r5, r1, #28
 800ce20:	d56d      	bpl.n	800cefe <HAL_I2C_EV_IRQHandler+0x15a>
 800ce22:	0585      	lsls	r5, r0, #22
 800ce24:	f140 8083 	bpl.w	800cf2e <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ce28:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ce2a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ce2c:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ce2e:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ce30:	2900      	cmp	r1, #0
 800ce32:	f000 81e3 	beq.w	800d1fc <HAL_I2C_EV_IRQHandler+0x458>
 800ce36:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800ce38:	2a00      	cmp	r2, #0
 800ce3a:	f000 81df 	beq.w	800d1fc <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ce3e:	685a      	ldr	r2, [r3, #4]
 800ce40:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ce44:	605a      	str	r2, [r3, #4]
 800ce46:	e7dd      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce48:	0585      	lsls	r5, r0, #22
 800ce4a:	d56e      	bpl.n	800cf2a <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800ce4c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ce4e:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800ce52:	f000 81e9 	beq.w	800d228 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800ce56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ce58:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800ce5c:	bf04      	itt	eq
 800ce5e:	2208      	moveq	r2, #8
 800ce60:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ce62:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800ce66:	2a40      	cmp	r2, #64	; 0x40
 800ce68:	f000 81d7 	beq.w	800d21a <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800ce6c:	6922      	ldr	r2, [r4, #16]
 800ce6e:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800ce72:	f000 81b2 	beq.w	800d1da <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800ce76:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ce78:	2a00      	cmp	r2, #0
 800ce7a:	f040 81ef 	bne.w	800d25c <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800ce7e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ce80:	11d2      	asrs	r2, r2, #7
 800ce82:	f002 0206 	and.w	r2, r2, #6
 800ce86:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800ce8a:	611a      	str	r2, [r3, #16]
 800ce8c:	e7ba      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce8e:	06cd      	lsls	r5, r1, #27
 800ce90:	d47c      	bmi.n	800cf8c <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800ce92:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800ce96:	2a21      	cmp	r2, #33	; 0x21
 800ce98:	f000 80f5 	beq.w	800d086 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ce9c:	064e      	lsls	r6, r1, #25
 800ce9e:	f140 8132 	bpl.w	800d106 <HAL_I2C_EV_IRQHandler+0x362>
 800cea2:	0545      	lsls	r5, r0, #21
 800cea4:	f140 812f 	bpl.w	800d106 <HAL_I2C_EV_IRQHandler+0x362>
 800cea8:	0749      	lsls	r1, r1, #29
 800ceaa:	f100 812f 	bmi.w	800d10c <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ceae:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800ceb2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ceb4:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ceb6:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800ceb8:	2a00      	cmp	r2, #0
 800ceba:	d0a3      	beq.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cebc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cebe:	691b      	ldr	r3, [r3, #16]
 800cec0:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800cec2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cec4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cec6:	3b01      	subs	r3, #1
 800cec8:	b29b      	uxth	r3, r3
 800ceca:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cecc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cece:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800ced0:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800ced2:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800ced4:	2b00      	cmp	r3, #0
 800ced6:	d195      	bne.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800ced8:	292a      	cmp	r1, #42	; 0x2a
 800ceda:	d193      	bne.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cedc:	6822      	ldr	r2, [r4, #0]
 800cede:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cee0:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cee2:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cee4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800cee8:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ceea:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800ceec:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ceee:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cef2:	f7ff fdbb 	bl	800ca6c <HAL_I2C_SlaveRxCpltCallback>
 800cef6:	e785      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cef8:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cefa:	6959      	ldr	r1, [r3, #20]
 800cefc:	e76a      	b.n	800cdd4 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cefe:	078d      	lsls	r5, r1, #30
 800cf00:	d515      	bpl.n	800cf2e <HAL_I2C_EV_IRQHandler+0x18a>
 800cf02:	0585      	lsls	r5, r0, #22
 800cf04:	d513      	bpl.n	800cf2e <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cf06:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800cf0a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800cf0c:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cf0e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cf12:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cf14:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cf16:	f000 81b3 	beq.w	800d280 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf1a:	2200      	movs	r2, #0
 800cf1c:	920a      	str	r2, [sp, #40]	; 0x28
 800cf1e:	695a      	ldr	r2, [r3, #20]
 800cf20:	920a      	str	r2, [sp, #40]	; 0x28
 800cf22:	699b      	ldr	r3, [r3, #24]
 800cf24:	930a      	str	r3, [sp, #40]	; 0x28
 800cf26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cf28:	e76c      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cf2a:	070d      	lsls	r5, r1, #28
 800cf2c:	d5e7      	bpl.n	800cefe <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800cf2e:	0776      	lsls	r6, r6, #29
 800cf30:	f140 80f5 	bpl.w	800d11e <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cf34:	685d      	ldr	r5, [r3, #4]
 800cf36:	052d      	lsls	r5, r5, #20
 800cf38:	f53f af64 	bmi.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cf3c:	060e      	lsls	r6, r1, #24
 800cf3e:	f140 8115 	bpl.w	800d16c <HAL_I2C_EV_IRQHandler+0x3c8>
 800cf42:	0545      	lsls	r5, r0, #21
 800cf44:	f140 8112 	bpl.w	800d16c <HAL_I2C_EV_IRQHandler+0x3c8>
 800cf48:	074e      	lsls	r6, r1, #29
 800cf4a:	f100 8112 	bmi.w	800d172 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf4e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cf52:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cf54:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cf58:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf5a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cf5c:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cf5e:	2800      	cmp	r0, #0
 800cf60:	f040 8235 	bne.w	800d3ce <HAL_I2C_EV_IRQHandler+0x62a>
 800cf64:	2a21      	cmp	r2, #33	; 0x21
 800cf66:	f000 8347 	beq.w	800d5f8 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800cf6a:	2940      	cmp	r1, #64	; 0x40
 800cf6c:	f47f af4a 	bne.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800cf70:	2a22      	cmp	r2, #34	; 0x22
 800cf72:	f47f af47 	bne.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800cf76:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cf78:	b292      	uxth	r2, r2
 800cf7a:	2a00      	cmp	r2, #0
 800cf7c:	f000 8268 	beq.w	800d450 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800cf80:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800cf84:	2a40      	cmp	r2, #64	; 0x40
 800cf86:	f040 80b4 	bne.w	800d0f2 <HAL_I2C_EV_IRQHandler+0x34e>
 800cf8a:	e0fc      	b.n	800d186 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cf8c:	0585      	lsls	r5, r0, #22
 800cf8e:	d580      	bpl.n	800ce92 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf90:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800cf94:	685a      	ldr	r2, [r3, #4]
 800cf96:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800cf9a:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800cf9c:	960d      	str	r6, [sp, #52]	; 0x34
 800cf9e:	695a      	ldr	r2, [r3, #20]
 800cfa0:	920d      	str	r2, [sp, #52]	; 0x34
 800cfa2:	681a      	ldr	r2, [r3, #0]
 800cfa4:	f042 0201 	orr.w	r2, r2, #1
 800cfa8:	601a      	str	r2, [r3, #0]
 800cfaa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cfac:	681a      	ldr	r2, [r3, #0]
 800cfae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800cfb2:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cfb4:	685a      	ldr	r2, [r3, #4]
 800cfb6:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cfb8:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cfba:	d521      	bpl.n	800d000 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cfbc:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800cfc0:	2a22      	cmp	r2, #34	; 0x22
 800cfc2:	f000 817a 	beq.w	800d2ba <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800cfc6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cfc8:	6802      	ldr	r2, [r0, #0]
 800cfca:	6852      	ldr	r2, [r2, #4]
 800cfcc:	b292      	uxth	r2, r2
 800cfce:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800cfd0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfd2:	b292      	uxth	r2, r2
 800cfd4:	b11a      	cbz	r2, 800cfde <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800cfd6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cfd8:	f042 0204 	orr.w	r2, r2, #4
 800cfdc:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800cfde:	685a      	ldr	r2, [r3, #4]
 800cfe0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cfe4:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800cfe6:	f7fe fc2d 	bl	800b844 <HAL_DMA_GetState>
 800cfea:	2801      	cmp	r0, #1
 800cfec:	d008      	beq.n	800d000 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800cfee:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cff0:	4b99      	ldr	r3, [pc, #612]	; (800d258 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800cff2:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800cff4:	f7fe fc14 	bl	800b820 <HAL_DMA_Abort_IT>
 800cff8:	b110      	cbz	r0, 800d000 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cffa:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cffc:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cffe:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800d000:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d002:	b29b      	uxth	r3, r3
 800d004:	b313      	cbz	r3, 800d04c <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800d006:	6823      	ldr	r3, [r4, #0]
 800d008:	695a      	ldr	r2, [r3, #20]
 800d00a:	0752      	lsls	r2, r2, #29
 800d00c:	d50a      	bpl.n	800d024 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d00e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d010:	691b      	ldr	r3, [r3, #16]
 800d012:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800d014:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800d016:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d018:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800d01a:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800d01c:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800d01e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800d020:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d022:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800d024:	695a      	ldr	r2, [r3, #20]
 800d026:	0656      	lsls	r6, r2, #25
 800d028:	d509      	bpl.n	800d03e <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d02a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d02c:	691b      	ldr	r3, [r3, #16]
 800d02e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800d030:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800d032:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d034:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800d036:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800d038:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800d03a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d03c:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800d03e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d040:	b29b      	uxth	r3, r3
 800d042:	b11b      	cbz	r3, 800d04c <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800d044:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d046:	f043 0304 	orr.w	r3, r3, #4
 800d04a:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800d04c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d04e:	2b00      	cmp	r3, #0
 800d050:	f040 80dd 	bne.w	800d20e <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800d054:	2d2a      	cmp	r5, #42	; 0x2a
 800d056:	f000 8151 	beq.w	800d2fc <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800d05a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800d05e:	2b28      	cmp	r3, #40	; 0x28
 800d060:	f000 8154 	beq.w	800d30c <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800d064:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d066:	2b22      	cmp	r3, #34	; 0x22
 800d068:	d002      	beq.n	800d070 <HAL_I2C_EV_IRQHandler+0x2cc>
 800d06a:	2d22      	cmp	r5, #34	; 0x22
 800d06c:	f47f aeca 	bne.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800d070:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800d072:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800d074:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d076:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800d078:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d07c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d080:	f7ff fcf4 	bl	800ca6c <HAL_I2C_SlaveRxCpltCallback>
 800d084:	e6be      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800d086:	060d      	lsls	r5, r1, #24
 800d088:	d528      	bpl.n	800d0dc <HAL_I2C_EV_IRQHandler+0x338>
 800d08a:	0546      	lsls	r6, r0, #21
 800d08c:	d526      	bpl.n	800d0dc <HAL_I2C_EV_IRQHandler+0x338>
 800d08e:	074d      	lsls	r5, r1, #29
 800d090:	d427      	bmi.n	800d0e2 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800d092:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800d096:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800d098:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800d09a:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800d09c:	2900      	cmp	r1, #0
 800d09e:	f43f aeb1 	beq.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800d0a2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d0a4:	f811 5b01 	ldrb.w	r5, [r1], #1
 800d0a8:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800d0aa:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d0ac:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800d0ae:	3901      	subs	r1, #1
 800d0b0:	b289      	uxth	r1, r1
 800d0b2:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800d0b4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800d0b6:	b289      	uxth	r1, r1
 800d0b8:	2900      	cmp	r1, #0
 800d0ba:	f47f aea3 	bne.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800d0be:	2829      	cmp	r0, #41	; 0x29
 800d0c0:	f47f aea0 	bne.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d0c4:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d0c6:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d0c8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d0cc:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800d0ce:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800d0d0:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d0d2:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800d0d6:	f7ff fcc7 	bl	800ca68 <HAL_I2C_SlaveTxCpltCallback>
 800d0da:	e693      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d0dc:	0749      	lsls	r1, r1, #29
 800d0de:	f57f ae91 	bpl.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800d0e2:	0582      	lsls	r2, r0, #22
 800d0e4:	f57f ae8e 	bpl.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800d0e8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d0ea:	b292      	uxth	r2, r2
 800d0ec:	2a00      	cmp	r2, #0
 800d0ee:	f43f ae89 	beq.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800d0f2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d0f4:	f812 1b01 	ldrb.w	r1, [r2], #1
 800d0f8:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800d0fa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d0fc:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d0fe:	3b01      	subs	r3, #1
 800d100:	b29b      	uxth	r3, r3
 800d102:	8563      	strh	r3, [r4, #42]	; 0x2a
 800d104:	e67e      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d106:	074a      	lsls	r2, r1, #29
 800d108:	f57f ae7c 	bpl.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800d10c:	0586      	lsls	r6, r0, #22
 800d10e:	f57f ae79 	bpl.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800d112:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d114:	b292      	uxth	r2, r2
 800d116:	2a00      	cmp	r2, #0
 800d118:	f43f ae74 	beq.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800d11c:	e01b      	b.n	800d156 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800d11e:	685a      	ldr	r2, [r3, #4]
 800d120:	0512      	lsls	r2, r2, #20
 800d122:	f53f ae6f 	bmi.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800d126:	064e      	lsls	r6, r1, #25
 800d128:	d433      	bmi.n	800d192 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d12a:	0749      	lsls	r1, r1, #29
 800d12c:	f57f ae6a 	bpl.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800d130:	0582      	lsls	r2, r0, #22
 800d132:	f57f ae67 	bpl.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800d136:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800d138:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d13a:	b292      	uxth	r2, r2
 800d13c:	2a04      	cmp	r2, #4
 800d13e:	f000 8113 	beq.w	800d368 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800d142:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d144:	b292      	uxth	r2, r2
 800d146:	2a03      	cmp	r2, #3
 800d148:	f000 8153 	beq.w	800d3f2 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800d14c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d14e:	b292      	uxth	r2, r2
 800d150:	2a02      	cmp	r2, #2
 800d152:	f000 8182 	beq.w	800d45a <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d156:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d158:	691b      	ldr	r3, [r3, #16]
 800d15a:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d15c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d15e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d160:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800d162:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800d164:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800d166:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d168:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800d16a:	e64b      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d16c:	074d      	lsls	r5, r1, #29
 800d16e:	f57f ae49 	bpl.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800d172:	0581      	lsls	r1, r0, #22
 800d174:	f57f ae46 	bpl.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800d178:	2a21      	cmp	r2, #33	; 0x21
 800d17a:	f000 80fd 	beq.w	800d378 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800d17e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800d182:	f47f ae3f 	bne.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d186:	4620      	mov	r0, r4
}
 800d188:	b00e      	add	sp, #56	; 0x38
 800d18a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d18e:	f7ff bc75 	b.w	800ca7c <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800d192:	0545      	lsls	r5, r0, #21
 800d194:	d5c9      	bpl.n	800d12a <HAL_I2C_EV_IRQHandler+0x386>
 800d196:	f011 0104 	ands.w	r1, r1, #4
 800d19a:	d1c9      	bne.n	800d130 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800d19c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d1a0:	2a22      	cmp	r2, #34	; 0x22
 800d1a2:	f47f ae2f 	bne.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800d1a6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d1a8:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800d1aa:	2a03      	cmp	r2, #3
 800d1ac:	f240 81ec 	bls.w	800d588 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d1b0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d1b2:	691b      	ldr	r3, [r3, #16]
 800d1b4:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800d1b6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800d1b8:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d1ba:	3b01      	subs	r3, #1
 800d1bc:	b29b      	uxth	r3, r3
 800d1be:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800d1c0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d1c2:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800d1c4:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800d1c6:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800d1c8:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800d1ca:	f47f ae1b 	bne.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d1ce:	6822      	ldr	r2, [r4, #0]
 800d1d0:	6853      	ldr	r3, [r2, #4]
 800d1d2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800d1d6:	6053      	str	r3, [r2, #4]
 800d1d8:	e614      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d1da:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d1de:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d1e0:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d1e2:	bf16      	itet	ne
 800d1e4:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d1e8:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d1ec:	b2d2      	uxtbne	r2, r2
 800d1ee:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800d1f0:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d1f2:	b11a      	cbz	r2, 800d1fc <HAL_I2C_EV_IRQHandler+0x458>
 800d1f4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d1f6:	2a00      	cmp	r2, #0
 800d1f8:	f47f ae21 	bne.w	800ce3e <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800d1fc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d1fe:	2a00      	cmp	r2, #0
 800d200:	f43f ae00 	beq.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800d204:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d206:	2a00      	cmp	r2, #0
 800d208:	f47f ae19 	bne.w	800ce3e <HAL_I2C_EV_IRQHandler+0x9a>
 800d20c:	e5fa      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800d20e:	4620      	mov	r0, r4
}
 800d210:	b00e      	add	sp, #56	; 0x38
 800d212:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800d216:	f7ff bd0f 	b.w	800cc38 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800d21a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d21c:	bb52      	cbnz	r2, 800d274 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d21e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d220:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800d224:	611a      	str	r2, [r3, #16]
 800d226:	e5ed      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800d228:	2201      	movs	r2, #1
 800d22a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800d22c:	e619      	b.n	800ce62 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800d22e:	685a      	ldr	r2, [r3, #4]
 800d230:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d234:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800d236:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800d238:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800d23c:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800d240:	bf54      	ite	pl
 800d242:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800d244:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800d246:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800d24a:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800d24e:	4620      	mov	r0, r4
 800d250:	f7ff fc0e 	bl	800ca70 <HAL_I2C_AddrCallback>
 800d254:	e5d6      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800d256:	bf00      	nop
 800d258:	0800cb45 	.word	0x0800cb45
      else if (hi2c->EventCount == 1U)
 800d25c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d25e:	2a01      	cmp	r2, #1
 800d260:	f47f add0 	bne.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800d264:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d266:	11d2      	asrs	r2, r2, #7
 800d268:	f002 0206 	and.w	r2, r2, #6
 800d26c:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800d270:	611a      	str	r2, [r3, #16]
 800d272:	e5c7      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d274:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d276:	f042 0201 	orr.w	r2, r2, #1
 800d27a:	b2d2      	uxtb	r2, r2
 800d27c:	611a      	str	r2, [r3, #16]
 800d27e:	e5c1      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800d280:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800d282:	b911      	cbnz	r1, 800d28a <HAL_I2C_EV_IRQHandler+0x4e6>
 800d284:	2a40      	cmp	r2, #64	; 0x40
 800d286:	f000 809b 	beq.w	800d3c0 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800d28a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d28c:	b922      	cbnz	r2, 800d298 <HAL_I2C_EV_IRQHandler+0x4f4>
 800d28e:	6921      	ldr	r1, [r4, #16]
 800d290:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800d294:	f000 809f 	beq.w	800d3d6 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800d298:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d29a:	b292      	uxth	r2, r2
 800d29c:	2a00      	cmp	r2, #0
 800d29e:	d142      	bne.n	800d326 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d2a0:	9203      	str	r2, [sp, #12]
 800d2a2:	695a      	ldr	r2, [r3, #20]
 800d2a4:	9203      	str	r2, [sp, #12]
 800d2a6:	699a      	ldr	r2, [r3, #24]
 800d2a8:	9203      	str	r2, [sp, #12]
 800d2aa:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d2ac:	681a      	ldr	r2, [r3, #0]
 800d2ae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d2b2:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800d2b4:	2300      	movs	r3, #0
 800d2b6:	6523      	str	r3, [r4, #80]	; 0x50
 800d2b8:	e5a4      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800d2ba:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d2bc:	6802      	ldr	r2, [r0, #0]
 800d2be:	6852      	ldr	r2, [r2, #4]
 800d2c0:	b292      	uxth	r2, r2
 800d2c2:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800d2c4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d2c6:	b292      	uxth	r2, r2
 800d2c8:	b11a      	cbz	r2, 800d2d2 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800d2ca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d2cc:	f042 0204 	orr.w	r2, r2, #4
 800d2d0:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800d2d2:	685a      	ldr	r2, [r3, #4]
 800d2d4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800d2d8:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800d2da:	f7fe fab3 	bl	800b844 <HAL_DMA_GetState>
 800d2de:	2801      	cmp	r0, #1
 800d2e0:	f43f ae8e 	beq.w	800d000 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800d2e4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d2e6:	4b98      	ldr	r3, [pc, #608]	; (800d548 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800d2e8:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800d2ea:	f7fe fa99 	bl	800b820 <HAL_DMA_Abort_IT>
 800d2ee:	2800      	cmp	r0, #0
 800d2f0:	f43f ae86 	beq.w	800d000 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800d2f4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d2f6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d2f8:	4798      	blx	r3
 800d2fa:	e681      	b.n	800d000 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d2fc:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800d2fe:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d300:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d302:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d306:	f7ff fbb1 	bl	800ca6c <HAL_I2C_SlaveRxCpltCallback>
 800d30a:	e6a6      	b.n	800d05a <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800d30c:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800d30e:	498f      	ldr	r1, [pc, #572]	; (800d54c <HAL_I2C_EV_IRQHandler+0x7a8>)
 800d310:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800d312:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800d314:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800d316:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d318:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d31c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800d320:	f7ff fba8 	bl	800ca74 <HAL_I2C_ListenCpltCallback>
 800d324:	e56e      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800d326:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d328:	b292      	uxth	r2, r2
 800d32a:	2a01      	cmp	r2, #1
 800d32c:	d070      	beq.n	800d410 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800d32e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d330:	b292      	uxth	r2, r2
 800d332:	2a02      	cmp	r2, #2
 800d334:	f000 80d6 	beq.w	800d4e4 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d338:	681a      	ldr	r2, [r3, #0]
 800d33a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d33e:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d340:	685a      	ldr	r2, [r3, #4]
 800d342:	0511      	lsls	r1, r2, #20
 800d344:	d508      	bpl.n	800d358 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d346:	2820      	cmp	r0, #32
 800d348:	f200 80f8 	bhi.w	800d53c <HAL_I2C_EV_IRQHandler+0x798>
 800d34c:	2807      	cmp	r0, #7
 800d34e:	f200 80ea 	bhi.w	800d526 <HAL_I2C_EV_IRQHandler+0x782>
 800d352:	2801      	cmp	r0, #1
 800d354:	f000 80ed 	beq.w	800d532 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d358:	2200      	movs	r2, #0
 800d35a:	9209      	str	r2, [sp, #36]	; 0x24
 800d35c:	695a      	ldr	r2, [r3, #20]
 800d35e:	9209      	str	r2, [sp, #36]	; 0x24
 800d360:	699b      	ldr	r3, [r3, #24]
 800d362:	9309      	str	r3, [sp, #36]	; 0x24
 800d364:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d366:	e7a5      	b.n	800d2b4 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d368:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d36a:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d36c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d370:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d372:	691b      	ldr	r3, [r3, #16]
 800d374:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800d376:	e6f1      	b.n	800d15c <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800d378:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d37a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d37e:	2a21      	cmp	r2, #33	; 0x21
 800d380:	f47f ad40 	bne.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800d384:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d386:	b292      	uxth	r2, r2
 800d388:	2a00      	cmp	r2, #0
 800d38a:	f47f aeb2 	bne.w	800d0f2 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d38e:	2908      	cmp	r1, #8
 800d390:	f000 80e2 	beq.w	800d558 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d394:	2920      	cmp	r1, #32
 800d396:	f000 80df 	beq.w	800d558 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d39a:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800d39e:	f000 80db 	beq.w	800d558 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d3a2:	6859      	ldr	r1, [r3, #4]
 800d3a4:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d3a8:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d3aa:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800d3ac:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d3ae:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d3b0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d3b4:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800d3b6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d3ba:	f7ff fb51 	bl	800ca60 <HAL_I2C_MasterTxCpltCallback>
 800d3be:	e521      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d3c0:	9101      	str	r1, [sp, #4]
 800d3c2:	695a      	ldr	r2, [r3, #20]
 800d3c4:	9201      	str	r2, [sp, #4]
 800d3c6:	699b      	ldr	r3, [r3, #24]
 800d3c8:	9301      	str	r3, [sp, #4]
 800d3ca:	9b01      	ldr	r3, [sp, #4]
 800d3cc:	e51a      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800d3ce:	2a21      	cmp	r2, #33	; 0x21
 800d3d0:	f43f add1 	beq.w	800cf76 <HAL_I2C_EV_IRQHandler+0x1d2>
 800d3d4:	e5c9      	b.n	800cf6a <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d3d6:	9202      	str	r2, [sp, #8]
 800d3d8:	695a      	ldr	r2, [r3, #20]
 800d3da:	9202      	str	r2, [sp, #8]
 800d3dc:	699a      	ldr	r2, [r3, #24]
 800d3de:	9202      	str	r2, [sp, #8]
 800d3e0:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d3e2:	681a      	ldr	r2, [r3, #0]
 800d3e4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800d3e8:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800d3ea:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800d3ec:	3301      	adds	r3, #1
 800d3ee:	6523      	str	r3, [r4, #80]	; 0x50
 800d3f0:	e508      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d3f2:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d3f4:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d3f6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d3fa:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d3fc:	f43f aeab 	beq.w	800d156 <HAL_I2C_EV_IRQHandler+0x3b2>
 800d400:	2902      	cmp	r1, #2
 800d402:	f43f aea8 	beq.w	800d156 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d406:	681a      	ldr	r2, [r3, #0]
 800d408:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d40c:	601a      	str	r2, [r3, #0]
 800d40e:	e6a2      	b.n	800d156 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800d410:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d414:	f000 811b 	beq.w	800d64e <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800d418:	2808      	cmp	r0, #8
 800d41a:	f000 8108 	beq.w	800d62e <HAL_I2C_EV_IRQHandler+0x88a>
 800d41e:	2820      	cmp	r0, #32
 800d420:	f000 8105 	beq.w	800d62e <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d424:	2d12      	cmp	r5, #18
 800d426:	f000 80ff 	beq.w	800d628 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d42a:	2810      	cmp	r0, #16
 800d42c:	d804      	bhi.n	800d438 <HAL_I2C_EV_IRQHandler+0x694>
 800d42e:	4a48      	ldr	r2, [pc, #288]	; (800d550 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d430:	40c2      	lsrs	r2, r0
 800d432:	07d1      	lsls	r1, r2, #31
 800d434:	f100 814c 	bmi.w	800d6d0 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d438:	681a      	ldr	r2, [r3, #0]
 800d43a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d43e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d440:	2200      	movs	r2, #0
 800d442:	9206      	str	r2, [sp, #24]
 800d444:	695a      	ldr	r2, [r3, #20]
 800d446:	9206      	str	r2, [sp, #24]
 800d448:	699b      	ldr	r3, [r3, #24]
 800d44a:	9306      	str	r3, [sp, #24]
 800d44c:	9b06      	ldr	r3, [sp, #24]
 800d44e:	e731      	b.n	800d2b4 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d450:	685a      	ldr	r2, [r3, #4]
 800d452:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d456:	605a      	str	r2, [r3, #4]
 800d458:	e4d4      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800d45a:	3901      	subs	r1, #1
 800d45c:	290f      	cmp	r1, #15
 800d45e:	d809      	bhi.n	800d474 <HAL_I2C_EV_IRQHandler+0x6d0>
 800d460:	e8df f001 	tbb	[pc, r1]
 800d464:	3608363b 	.word	0x3608363b
 800d468:	08080808 	.word	0x08080808
 800d46c:	08080808 	.word	0x08080808
 800d470:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d474:	681a      	ldr	r2, [r3, #0]
 800d476:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d47a:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d47c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d47e:	691b      	ldr	r3, [r3, #16]
 800d480:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d482:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d484:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d486:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800d488:	3b01      	subs	r3, #1
 800d48a:	b29b      	uxth	r3, r3
 800d48c:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d48e:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800d490:	1c51      	adds	r1, r2, #1
 800d492:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d494:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800d496:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d498:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800d49a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d49c:	3b01      	subs	r3, #1
 800d49e:	b29b      	uxth	r3, r3
 800d4a0:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d4a2:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800d4a4:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d4a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800d4aa:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800d4ac:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d4ae:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800d4b0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d4b4:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800d4b8:	2b40      	cmp	r3, #64	; 0x40
 800d4ba:	f000 80f5 	beq.w	800d6a8 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4be:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d4c0:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4c2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d4c6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d4c8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d4ca:	f7ff facb 	bl	800ca64 <HAL_I2C_MasterRxCpltCallback>
 800d4ce:	e499      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4d0:	681a      	ldr	r2, [r3, #0]
 800d4d2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d4d6:	601a      	str	r2, [r3, #0]
 800d4d8:	e7d0      	b.n	800d47c <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4da:	681a      	ldr	r2, [r3, #0]
 800d4dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d4e0:	601a      	str	r2, [r3, #0]
 800d4e2:	e7cb      	b.n	800d47c <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d4e4:	2810      	cmp	r0, #16
 800d4e6:	d804      	bhi.n	800d4f2 <HAL_I2C_EV_IRQHandler+0x74e>
 800d4e8:	4a19      	ldr	r2, [pc, #100]	; (800d550 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d4ea:	40c2      	lsrs	r2, r0
 800d4ec:	07d2      	lsls	r2, r2, #31
 800d4ee:	f100 80c2 	bmi.w	800d676 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4f2:	681a      	ldr	r2, [r3, #0]
 800d4f4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d4f8:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800d4fa:	681a      	ldr	r2, [r3, #0]
 800d4fc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d500:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d502:	685a      	ldr	r2, [r3, #4]
 800d504:	0516      	lsls	r6, r2, #20
 800d506:	d506      	bpl.n	800d516 <HAL_I2C_EV_IRQHandler+0x772>
 800d508:	2820      	cmp	r0, #32
 800d50a:	f240 80bc 	bls.w	800d686 <HAL_I2C_EV_IRQHandler+0x8e2>
 800d50e:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d512:	f000 80bd 	beq.w	800d690 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d516:	2200      	movs	r2, #0
 800d518:	9208      	str	r2, [sp, #32]
 800d51a:	695a      	ldr	r2, [r3, #20]
 800d51c:	9208      	str	r2, [sp, #32]
 800d51e:	699b      	ldr	r3, [r3, #24]
 800d520:	9308      	str	r3, [sp, #32]
 800d522:	9b08      	ldr	r3, [sp, #32]
 800d524:	e6c6      	b.n	800d2b4 <HAL_I2C_EV_IRQHandler+0x510>
 800d526:	4a0b      	ldr	r2, [pc, #44]	; (800d554 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800d528:	3808      	subs	r0, #8
 800d52a:	40c2      	lsrs	r2, r0
 800d52c:	07d2      	lsls	r2, r2, #31
 800d52e:	f57f af13 	bpl.w	800d358 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d532:	685a      	ldr	r2, [r3, #4]
 800d534:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d538:	605a      	str	r2, [r3, #4]
 800d53a:	e70d      	b.n	800d358 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d53c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d540:	f47f af0a 	bne.w	800d358 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d544:	e7f5      	b.n	800d532 <HAL_I2C_EV_IRQHandler+0x78e>
 800d546:	bf00      	nop
 800d548:	0800cb45 	.word	0x0800cb45
 800d54c:	ffff0000 	.word	0xffff0000
 800d550:	00010014 	.word	0x00010014
 800d554:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d558:	6859      	ldr	r1, [r3, #4]
 800d55a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d55e:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d560:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d562:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800d564:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d566:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800d56a:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d56c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800d56e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d572:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d576:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d57a:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d57c:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d57e:	f47f af1c 	bne.w	800d3ba <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d582:	f7ff fa79 	bl	800ca78 <HAL_I2C_MemTxCpltCallback>
 800d586:	e43d      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800d588:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800d58a:	2802      	cmp	r0, #2
 800d58c:	f43f af60 	beq.w	800d450 <HAL_I2C_EV_IRQHandler+0x6ac>
 800d590:	2a01      	cmp	r2, #1
 800d592:	f63f af5d 	bhi.w	800d450 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d596:	4a62      	ldr	r2, [pc, #392]	; (800d720 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800d598:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d59a:	6812      	ldr	r2, [r2, #0]
 800d59c:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800d5a0:	fbb2 f2f0 	udiv	r2, r2, r0
 800d5a4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800d5a8:	920b      	str	r2, [sp, #44]	; 0x2c
 800d5aa:	e004      	b.n	800d5b6 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800d5ac:	681a      	ldr	r2, [r3, #0]
 800d5ae:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800d5b2:	f000 8092 	beq.w	800d6da <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800d5b6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d5b8:	3a01      	subs	r2, #1
 800d5ba:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800d5bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d5be:	2900      	cmp	r1, #0
 800d5c0:	d1f4      	bne.n	800d5ac <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d5c2:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d5c4:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d5c6:	f042 0220 	orr.w	r2, r2, #32
 800d5ca:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d5cc:	685a      	ldr	r2, [r3, #4]
 800d5ce:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d5d2:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d5d4:	691b      	ldr	r3, [r3, #16]
 800d5d6:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d5d8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d5da:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800d5dc:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800d5de:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800d5e0:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800d5e2:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800d5e4:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d5e6:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800d5e8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800d5ec:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d5ee:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800d5f2:	f7ff faa3 	bl	800cb3c <HAL_I2C_ErrorCallback>
 800d5f6:	e405      	b.n	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d5f8:	2d08      	cmp	r5, #8
 800d5fa:	d0ad      	beq.n	800d558 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d5fc:	2d20      	cmp	r5, #32
 800d5fe:	d0ab      	beq.n	800d558 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d600:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800d604:	d0a8      	beq.n	800d558 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d606:	685a      	ldr	r2, [r3, #4]
 800d608:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d60c:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d60e:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d610:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800d612:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d614:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d616:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d61a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d61c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d620:	f7ff fa1e 	bl	800ca60 <HAL_I2C_MasterTxCpltCallback>
 800d624:	f7ff bbee 	b.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d628:	2801      	cmp	r0, #1
 800d62a:	f43f af05 	beq.w	800d438 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d62e:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d630:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d632:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d636:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d638:	9107      	str	r1, [sp, #28]
 800d63a:	695a      	ldr	r2, [r3, #20]
 800d63c:	9207      	str	r2, [sp, #28]
 800d63e:	699a      	ldr	r2, [r3, #24]
 800d640:	9207      	str	r2, [sp, #28]
 800d642:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d644:	681a      	ldr	r2, [r3, #0]
 800d646:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d64a:	601a      	str	r2, [r3, #0]
 800d64c:	e632      	b.n	800d2b4 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d64e:	681a      	ldr	r2, [r3, #0]
 800d650:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d654:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800d656:	685a      	ldr	r2, [r3, #4]
 800d658:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800d65c:	d02d      	beq.n	800d6ba <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d65e:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d660:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d662:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d666:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d668:	9104      	str	r1, [sp, #16]
 800d66a:	695a      	ldr	r2, [r3, #20]
 800d66c:	9204      	str	r2, [sp, #16]
 800d66e:	699b      	ldr	r3, [r3, #24]
 800d670:	9304      	str	r3, [sp, #16]
 800d672:	9b04      	ldr	r3, [sp, #16]
 800d674:	e61e      	b.n	800d2b4 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d676:	681a      	ldr	r2, [r3, #0]
 800d678:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d67c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d67e:	685a      	ldr	r2, [r3, #4]
 800d680:	0515      	lsls	r5, r2, #20
 800d682:	f57f af48 	bpl.w	800d516 <HAL_I2C_EV_IRQHandler+0x772>
 800d686:	2807      	cmp	r0, #7
 800d688:	d807      	bhi.n	800d69a <HAL_I2C_EV_IRQHandler+0x8f6>
 800d68a:	2801      	cmp	r0, #1
 800d68c:	f47f af43 	bne.w	800d516 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d690:	685a      	ldr	r2, [r3, #4]
 800d692:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d696:	605a      	str	r2, [r3, #4]
 800d698:	e73d      	b.n	800d516 <HAL_I2C_EV_IRQHandler+0x772>
 800d69a:	4a22      	ldr	r2, [pc, #136]	; (800d724 <HAL_I2C_EV_IRQHandler+0x980>)
 800d69c:	3808      	subs	r0, #8
 800d69e:	40c2      	lsrs	r2, r0
 800d6a0:	07d0      	lsls	r0, r2, #31
 800d6a2:	f57f af38 	bpl.w	800d516 <HAL_I2C_EV_IRQHandler+0x772>
 800d6a6:	e7f3      	b.n	800d690 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d6a8:	2300      	movs	r3, #0
 800d6aa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d6ae:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800d6b0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d6b2:	f7ff fa41 	bl	800cb38 <HAL_I2C_MemRxCpltCallback>
 800d6b6:	f7ff bba5 	b.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d6ba:	9205      	str	r2, [sp, #20]
 800d6bc:	695a      	ldr	r2, [r3, #20]
 800d6be:	9205      	str	r2, [sp, #20]
 800d6c0:	699a      	ldr	r2, [r3, #24]
 800d6c2:	9205      	str	r2, [sp, #20]
 800d6c4:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d6c6:	681a      	ldr	r2, [r3, #0]
 800d6c8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d6cc:	601a      	str	r2, [r3, #0]
 800d6ce:	e5f1      	b.n	800d2b4 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d6d0:	681a      	ldr	r2, [r3, #0]
 800d6d2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d6d6:	601a      	str	r2, [r3, #0]
 800d6d8:	e6b2      	b.n	800d440 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d6da:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d6dc:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d6de:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d6e2:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d6e4:	6859      	ldr	r1, [r3, #4]
 800d6e6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d6ea:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d6ec:	691b      	ldr	r3, [r3, #16]
 800d6ee:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d6f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d6f2:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800d6f4:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800d6f6:	b29b      	uxth	r3, r3
 800d6f8:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800d6fa:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800d6fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d700:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800d704:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d706:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800d708:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d70a:	f47f aed9 	bne.w	800d4c0 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d70e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d712:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800d714:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d716:	f7ff fa0f 	bl	800cb38 <HAL_I2C_MemRxCpltCallback>
 800d71a:	f7ff bb73 	b.w	800ce04 <HAL_I2C_EV_IRQHandler+0x60>
 800d71e:	bf00      	nop
 800d720:	2000007c 	.word	0x2000007c
 800d724:	01000101 	.word	0x01000101

0800d728 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d728:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d72c:	2a20      	cmp	r2, #32
{
 800d72e:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800d730:	fa5f fc82 	uxtb.w	ip, r2
 800d734:	d001      	beq.n	800d73a <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d736:	2002      	movs	r0, #2
  }
}
 800d738:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800d73a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d73c:	2024      	movs	r0, #36	; 0x24
 800d73e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d742:	6810      	ldr	r0, [r2, #0]
 800d744:	f020 0001 	bic.w	r0, r0, #1
 800d748:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800d74a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d74c:	f020 0010 	bic.w	r0, r0, #16
 800d750:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800d752:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d754:	4301      	orrs	r1, r0
 800d756:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d758:	6811      	ldr	r1, [r2, #0]
 800d75a:	f041 0101 	orr.w	r1, r1, #1
 800d75e:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800d760:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800d762:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d766:	4770      	bx	lr

0800d768 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d768:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d76c:	2a20      	cmp	r2, #32
 800d76e:	d001      	beq.n	800d774 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d770:	2002      	movs	r0, #2
  }
}
 800d772:	4770      	bx	lr
{
 800d774:	b410      	push	{r4}
 800d776:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800d77a:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d77c:	2224      	movs	r2, #36	; 0x24
 800d77e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d782:	6822      	ldr	r2, [r4, #0]
 800d784:	f022 0201 	bic.w	r2, r2, #1
 800d788:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800d78a:	4603      	mov	r3, r0
 800d78c:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800d78e:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800d792:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800d794:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800d796:	b289      	uxth	r1, r1
 800d798:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d79a:	6822      	ldr	r2, [r4, #0]
 800d79c:	f042 0201 	orr.w	r2, r2, #1
 800d7a0:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800d7a2:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d7a6:	2000      	movs	r0, #0
}
 800d7a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d7ac:	4770      	bx	lr
 800d7ae:	bf00      	nop

0800d7b0 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800d7b0:	2800      	cmp	r0, #0
 800d7b2:	d069      	beq.n	800d888 <HAL_LTDC_Init+0xd8>
{
 800d7b4:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800d7b6:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800d7ba:	4604      	mov	r4, r0
 800d7bc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d7c0:	2b00      	cmp	r3, #0
 800d7c2:	d05c      	beq.n	800d87e <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d7c4:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d7c6:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d7c8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d7cc:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d7d0:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d7d2:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d7d4:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d7d8:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800d7dc:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d7de:	6999      	ldr	r1, [r3, #24]
 800d7e0:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d7e2:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d7e4:	430a      	orrs	r2, r1
 800d7e6:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d7e8:	689a      	ldr	r2, [r3, #8]
 800d7ea:	4928      	ldr	r1, [pc, #160]	; (800d88c <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800d7ec:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d7ee:	400a      	ands	r2, r1
 800d7f0:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800d7f2:	689a      	ldr	r2, [r3, #8]
 800d7f4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d7f8:	69a0      	ldr	r0, [r4, #24]
 800d7fa:	4302      	orrs	r2, r0
 800d7fc:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d7fe:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800d800:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d802:	400a      	ands	r2, r1
 800d804:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800d806:	68da      	ldr	r2, [r3, #12]
 800d808:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d80c:	6a20      	ldr	r0, [r4, #32]
 800d80e:	4302      	orrs	r2, r0
 800d810:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d812:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800d814:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d816:	400a      	ands	r2, r1
 800d818:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800d81a:	691a      	ldr	r2, [r3, #16]
 800d81c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d820:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d822:	4302      	orrs	r2, r0
 800d824:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d826:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800d828:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d82a:	400a      	ands	r2, r1
 800d82c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d82e:	695a      	ldr	r2, [r3, #20]
 800d830:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d832:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d836:	430a      	orrs	r2, r1
 800d838:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d83a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800d83c:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800d840:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d844:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800d848:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800d84a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800d84c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800d850:	432a      	orrs	r2, r5
 800d852:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800d856:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800d85a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800d85c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d85e:	f042 0206 	orr.w	r2, r2, #6
 800d862:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800d864:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800d866:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d86a:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800d86c:	ea42 020c 	orr.w	r2, r2, ip
 800d870:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d872:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800d876:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800d87a:	4608      	mov	r0, r1
}
 800d87c:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800d87e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800d882:	f7f4 fdeb 	bl	800245c <HAL_LTDC_MspInit>
 800d886:	e79d      	b.n	800d7c4 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800d888:	2001      	movs	r0, #1
}
 800d88a:	4770      	bx	lr
 800d88c:	f000f800 	.word	0xf000f800

0800d890 <HAL_LTDC_ErrorCallback>:
 800d890:	4770      	bx	lr
 800d892:	bf00      	nop

0800d894 <HAL_LTDC_ReloadEventCallback>:
 800d894:	4770      	bx	lr
 800d896:	bf00      	nop

0800d898 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d898:	6803      	ldr	r3, [r0, #0]
{
 800d89a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d89c:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800d89e:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d8a0:	076a      	lsls	r2, r5, #29
{
 800d8a2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d8a4:	d501      	bpl.n	800d8aa <HAL_LTDC_IRQHandler+0x12>
 800d8a6:	0771      	lsls	r1, r6, #29
 800d8a8:	d41d      	bmi.n	800d8e6 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800d8aa:	07aa      	lsls	r2, r5, #30
 800d8ac:	d501      	bpl.n	800d8b2 <HAL_LTDC_IRQHandler+0x1a>
 800d8ae:	07b3      	lsls	r3, r6, #30
 800d8b0:	d42d      	bmi.n	800d90e <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d8b2:	07e8      	lsls	r0, r5, #31
 800d8b4:	d501      	bpl.n	800d8ba <HAL_LTDC_IRQHandler+0x22>
 800d8b6:	07f1      	lsls	r1, r6, #31
 800d8b8:	d440      	bmi.n	800d93c <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d8ba:	072a      	lsls	r2, r5, #28
 800d8bc:	d501      	bpl.n	800d8c2 <HAL_LTDC_IRQHandler+0x2a>
 800d8be:	0733      	lsls	r3, r6, #28
 800d8c0:	d400      	bmi.n	800d8c4 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800d8c2:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d8c4:	6823      	ldr	r3, [r4, #0]
 800d8c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d8c8:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d8ca:	f022 0208 	bic.w	r2, r2, #8
 800d8ce:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800d8d0:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d8d2:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d8d4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d8d6:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d8da:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d8de:	4620      	mov	r0, r4
 800d8e0:	f7ff ffd8 	bl	800d894 <HAL_LTDC_ReloadEventCallback>
}
 800d8e4:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800d8e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d8e8:	f022 0204 	bic.w	r2, r2, #4
 800d8ec:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800d8ee:	2204      	movs	r2, #4
 800d8f0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800d8f2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800d8f6:	f043 0301 	orr.w	r3, r3, #1
 800d8fa:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800d8fe:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d900:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d904:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d908:	f7ff ffc2 	bl	800d890 <HAL_LTDC_ErrorCallback>
 800d90c:	e7cd      	b.n	800d8aa <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800d90e:	6823      	ldr	r3, [r4, #0]
 800d910:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d912:	f022 0202 	bic.w	r2, r2, #2
 800d916:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d918:	2202      	movs	r2, #2
 800d91a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d91c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d920:	f043 0302 	orr.w	r3, r3, #2
 800d924:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d928:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800d92a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d92c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d930:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d934:	4620      	mov	r0, r4
 800d936:	f7ff ffab 	bl	800d890 <HAL_LTDC_ErrorCallback>
 800d93a:	e7ba      	b.n	800d8b2 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d93c:	6823      	ldr	r3, [r4, #0]
 800d93e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d940:	f022 0201 	bic.w	r2, r2, #1
 800d944:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d946:	2201      	movs	r2, #1
 800d948:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d94a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d94c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d950:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d954:	4620      	mov	r0, r4
 800d956:	f7f5 fddb 	bl	8003510 <HAL_LTDC_LineEventCallback>
 800d95a:	e7ae      	b.n	800d8ba <HAL_LTDC_IRQHandler+0x22>

0800d95c <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800d95c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d960:	2b01      	cmp	r3, #1
 800d962:	f000 80c2 	beq.w	800daea <HAL_LTDC_ConfigLayer+0x18e>
{
 800d966:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d96a:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d96e:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d972:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d976:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d978:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d97a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d97e:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800d982:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d986:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800d98a:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d98e:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800d992:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d994:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d998:	460c      	mov	r4, r1
 800d99a:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d99c:	9301      	str	r3, [sp, #4]
 800d99e:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d9a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d9a2:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800d9a6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d9aa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d9ac:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d9ae:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d9b2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d9b4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d9b8:	6823      	ldr	r3, [r4, #0]
 800d9ba:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d9be:	9b01      	ldr	r3, [sp, #4]
 800d9c0:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d9c4:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d9c8:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d9ca:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800d9cc:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d9d0:	1c51      	adds	r1, r2, #1
 800d9d2:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800d9d6:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d9d8:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d9da:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d9de:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d9e2:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800d9e6:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800d9ea:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800d9ee:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d9f2:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d9f6:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d9f8:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d9fa:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800d9fe:	3301      	adds	r3, #1
 800da00:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800da04:	4403      	add	r3, r0
 800da06:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800da0a:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800da0e:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800da12:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800da14:	f023 0307 	bic.w	r3, r3, #7
 800da18:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800da1c:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800da20:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800da24:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800da28:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800da2c:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800da30:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800da34:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800da38:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800da3c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800da40:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800da44:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800da48:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800da4c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800da50:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800da54:	696b      	ldr	r3, [r5, #20]
 800da56:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800da5a:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800da5e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800da62:	f023 0307 	bic.w	r3, r3, #7
 800da66:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800da6a:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800da6e:	4303      	orrs	r3, r0
 800da70:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800da74:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800da78:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800da7a:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800da7e:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800da82:	bb69      	cbnz	r1, 800dae0 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800da84:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800da86:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800da88:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800da8a:	fb03 f707 	mul.w	r7, r3, r7
 800da8e:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800da90:	fb02 f303 	mul.w	r3, r2, r3
 800da94:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800da98:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800da9c:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800da9e:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800daa2:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800daa6:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800daaa:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800daae:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800dab2:	f023 0307 	bic.w	r3, r3, #7
 800dab6:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800daba:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800dabe:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800dac2:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800dac4:	4313      	orrs	r3, r2
 800dac6:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800daca:	2300      	movs	r3, #0
  return HAL_OK;
 800dacc:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800dace:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800dad2:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800dad6:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800dada:	b003      	add	sp, #12
 800dadc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800dae0:	3901      	subs	r1, #1
 800dae2:	2906      	cmp	r1, #6
 800dae4:	d903      	bls.n	800daee <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800dae6:	2301      	movs	r3, #1
 800dae8:	e7cd      	b.n	800da86 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800daea:	2002      	movs	r0, #2
}
 800daec:	4770      	bx	lr
 800daee:	4b02      	ldr	r3, [pc, #8]	; (800daf8 <HAL_LTDC_ConfigLayer+0x19c>)
 800daf0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800daf4:	e7c7      	b.n	800da86 <HAL_LTDC_ConfigLayer+0x12a>
 800daf6:	bf00      	nop
 800daf8:	0803164c 	.word	0x0803164c

0800dafc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800dafc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800db00:	2b01      	cmp	r3, #1
 800db02:	d019      	beq.n	800db38 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800db04:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800db06:	2302      	movs	r3, #2
{
 800db08:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800db0a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800db0e:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800db10:	4c0a      	ldr	r4, [pc, #40]	; (800db3c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800db12:	f023 0301 	bic.w	r3, r3, #1
 800db16:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800db18:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800db1a:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800db1c:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800db1e:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800db22:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800db26:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800db28:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800db2c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800db30:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800db34:	4618      	mov	r0, r3
}
 800db36:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800db38:	2002      	movs	r0, #2
}
 800db3a:	4770      	bx	lr
 800db3c:	40016800 	.word	0x40016800

0800db40 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800db40:	2800      	cmp	r0, #0
 800db42:	f000 81a2 	beq.w	800de8a <HAL_RCC_OscConfig+0x34a>
{
 800db46:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800db4a:	6803      	ldr	r3, [r0, #0]
 800db4c:	07dd      	lsls	r5, r3, #31
{
 800db4e:	b082      	sub	sp, #8
 800db50:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800db52:	d52f      	bpl.n	800dbb4 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800db54:	499e      	ldr	r1, [pc, #632]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800db56:	688a      	ldr	r2, [r1, #8]
 800db58:	f002 020c 	and.w	r2, r2, #12
 800db5c:	2a04      	cmp	r2, #4
 800db5e:	f000 80ed 	beq.w	800dd3c <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800db62:	688a      	ldr	r2, [r1, #8]
 800db64:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800db68:	2a08      	cmp	r2, #8
 800db6a:	f000 80e3 	beq.w	800dd34 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800db6e:	6863      	ldr	r3, [r4, #4]
 800db70:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800db74:	f000 80ec 	beq.w	800dd50 <HAL_RCC_OscConfig+0x210>
 800db78:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800db7c:	f000 8175 	beq.w	800de6a <HAL_RCC_OscConfig+0x32a>
 800db80:	4d93      	ldr	r5, [pc, #588]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800db82:	682a      	ldr	r2, [r5, #0]
 800db84:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800db88:	602a      	str	r2, [r5, #0]
 800db8a:	682a      	ldr	r2, [r5, #0]
 800db8c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800db90:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800db92:	2b00      	cmp	r3, #0
 800db94:	f040 80e1 	bne.w	800dd5a <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800db98:	f7fd fdb8 	bl	800b70c <HAL_GetTick>
 800db9c:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800db9e:	e005      	b.n	800dbac <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800dba0:	f7fd fdb4 	bl	800b70c <HAL_GetTick>
 800dba4:	1b80      	subs	r0, r0, r6
 800dba6:	2864      	cmp	r0, #100	; 0x64
 800dba8:	f200 8101 	bhi.w	800ddae <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800dbac:	682b      	ldr	r3, [r5, #0]
 800dbae:	039b      	lsls	r3, r3, #14
 800dbb0:	d4f6      	bmi.n	800dba0 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800dbb2:	6823      	ldr	r3, [r4, #0]
 800dbb4:	079f      	lsls	r7, r3, #30
 800dbb6:	d528      	bpl.n	800dc0a <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800dbb8:	4a85      	ldr	r2, [pc, #532]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800dbba:	6891      	ldr	r1, [r2, #8]
 800dbbc:	f011 0f0c 	tst.w	r1, #12
 800dbc0:	f000 8090 	beq.w	800dce4 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800dbc4:	6891      	ldr	r1, [r2, #8]
 800dbc6:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800dbca:	2908      	cmp	r1, #8
 800dbcc:	f000 8086 	beq.w	800dcdc <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800dbd0:	68e3      	ldr	r3, [r4, #12]
 800dbd2:	2b00      	cmp	r3, #0
 800dbd4:	f000 810e 	beq.w	800ddf4 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800dbd8:	4b7e      	ldr	r3, [pc, #504]	; (800ddd4 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dbda:	4e7d      	ldr	r6, [pc, #500]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800dbdc:	2201      	movs	r2, #1
 800dbde:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800dbe0:	f7fd fd94 	bl	800b70c <HAL_GetTick>
 800dbe4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dbe6:	e005      	b.n	800dbf4 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800dbe8:	f7fd fd90 	bl	800b70c <HAL_GetTick>
 800dbec:	1b40      	subs	r0, r0, r5
 800dbee:	2802      	cmp	r0, #2
 800dbf0:	f200 80dd 	bhi.w	800ddae <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dbf4:	6833      	ldr	r3, [r6, #0]
 800dbf6:	0798      	lsls	r0, r3, #30
 800dbf8:	d5f6      	bpl.n	800dbe8 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800dbfa:	6833      	ldr	r3, [r6, #0]
 800dbfc:	6922      	ldr	r2, [r4, #16]
 800dbfe:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800dc02:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800dc06:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dc08:	6823      	ldr	r3, [r4, #0]
 800dc0a:	071a      	lsls	r2, r3, #28
 800dc0c:	d451      	bmi.n	800dcb2 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800dc0e:	0758      	lsls	r0, r3, #29
 800dc10:	d52f      	bpl.n	800dc72 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800dc12:	4a6f      	ldr	r2, [pc, #444]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800dc14:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dc16:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800dc1a:	d07f      	beq.n	800dd1c <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800dc1c:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dc1e:	4e6e      	ldr	r6, [pc, #440]	; (800ddd8 <HAL_RCC_OscConfig+0x298>)
 800dc20:	6833      	ldr	r3, [r6, #0]
 800dc22:	05d9      	lsls	r1, r3, #23
 800dc24:	f140 80b3 	bpl.w	800dd8e <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dc28:	68a3      	ldr	r3, [r4, #8]
 800dc2a:	2b01      	cmp	r3, #1
 800dc2c:	f000 80c3 	beq.w	800ddb6 <HAL_RCC_OscConfig+0x276>
 800dc30:	2b05      	cmp	r3, #5
 800dc32:	f000 812c 	beq.w	800de8e <HAL_RCC_OscConfig+0x34e>
 800dc36:	4e66      	ldr	r6, [pc, #408]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800dc38:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800dc3a:	f022 0201 	bic.w	r2, r2, #1
 800dc3e:	6732      	str	r2, [r6, #112]	; 0x70
 800dc40:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800dc42:	f022 0204 	bic.w	r2, r2, #4
 800dc46:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800dc48:	2b00      	cmp	r3, #0
 800dc4a:	f040 80b9 	bne.w	800ddc0 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800dc4e:	f7fd fd5d 	bl	800b70c <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc52:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800dc56:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800dc58:	e005      	b.n	800dc66 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc5a:	f7fd fd57 	bl	800b70c <HAL_GetTick>
 800dc5e:	1bc0      	subs	r0, r0, r7
 800dc60:	4540      	cmp	r0, r8
 800dc62:	f200 80a4 	bhi.w	800ddae <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800dc66:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800dc68:	0798      	lsls	r0, r3, #30
 800dc6a:	d4f6      	bmi.n	800dc5a <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800dc6c:	2d00      	cmp	r5, #0
 800dc6e:	f040 8106 	bne.w	800de7e <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800dc72:	69a0      	ldr	r0, [r4, #24]
 800dc74:	b1c8      	cbz	r0, 800dcaa <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800dc76:	4d56      	ldr	r5, [pc, #344]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800dc78:	68ab      	ldr	r3, [r5, #8]
 800dc7a:	f003 030c 	and.w	r3, r3, #12
 800dc7e:	2b08      	cmp	r3, #8
 800dc80:	f000 80c9 	beq.w	800de16 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800dc84:	4b53      	ldr	r3, [pc, #332]	; (800ddd4 <HAL_RCC_OscConfig+0x294>)
 800dc86:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800dc88:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800dc8a:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800dc8c:	f000 8109 	beq.w	800dea2 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800dc90:	f7fd fd3c 	bl	800b70c <HAL_GetTick>
 800dc94:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dc96:	e005      	b.n	800dca4 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dc98:	f7fd fd38 	bl	800b70c <HAL_GetTick>
 800dc9c:	1b00      	subs	r0, r0, r4
 800dc9e:	2802      	cmp	r0, #2
 800dca0:	f200 8085 	bhi.w	800ddae <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dca4:	682b      	ldr	r3, [r5, #0]
 800dca6:	019b      	lsls	r3, r3, #6
 800dca8:	d4f6      	bmi.n	800dc98 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800dcaa:	2000      	movs	r0, #0
}
 800dcac:	b002      	add	sp, #8
 800dcae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800dcb2:	6963      	ldr	r3, [r4, #20]
 800dcb4:	b30b      	cbz	r3, 800dcfa <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800dcb6:	4b47      	ldr	r3, [pc, #284]	; (800ddd4 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800dcb8:	4e45      	ldr	r6, [pc, #276]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800dcba:	2201      	movs	r2, #1
 800dcbc:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800dcc0:	f7fd fd24 	bl	800b70c <HAL_GetTick>
 800dcc4:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800dcc6:	e004      	b.n	800dcd2 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800dcc8:	f7fd fd20 	bl	800b70c <HAL_GetTick>
 800dccc:	1b40      	subs	r0, r0, r5
 800dcce:	2802      	cmp	r0, #2
 800dcd0:	d86d      	bhi.n	800ddae <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800dcd2:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800dcd4:	079b      	lsls	r3, r3, #30
 800dcd6:	d5f7      	bpl.n	800dcc8 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800dcd8:	6823      	ldr	r3, [r4, #0]
 800dcda:	e798      	b.n	800dc0e <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800dcdc:	6852      	ldr	r2, [r2, #4]
 800dcde:	0256      	lsls	r6, r2, #9
 800dce0:	f53f af76 	bmi.w	800dbd0 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800dce4:	4a3a      	ldr	r2, [pc, #232]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800dce6:	6812      	ldr	r2, [r2, #0]
 800dce8:	0795      	lsls	r5, r2, #30
 800dcea:	d544      	bpl.n	800dd76 <HAL_RCC_OscConfig+0x236>
 800dcec:	68e2      	ldr	r2, [r4, #12]
 800dcee:	2a01      	cmp	r2, #1
 800dcf0:	d041      	beq.n	800dd76 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800dcf2:	2001      	movs	r0, #1
}
 800dcf4:	b002      	add	sp, #8
 800dcf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800dcfa:	4a36      	ldr	r2, [pc, #216]	; (800ddd4 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dcfc:	4e34      	ldr	r6, [pc, #208]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800dcfe:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800dd02:	f7fd fd03 	bl	800b70c <HAL_GetTick>
 800dd06:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dd08:	e004      	b.n	800dd14 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800dd0a:	f7fd fcff 	bl	800b70c <HAL_GetTick>
 800dd0e:	1b40      	subs	r0, r0, r5
 800dd10:	2802      	cmp	r0, #2
 800dd12:	d84c      	bhi.n	800ddae <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dd14:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800dd16:	079f      	lsls	r7, r3, #30
 800dd18:	d4f7      	bmi.n	800dd0a <HAL_RCC_OscConfig+0x1ca>
 800dd1a:	e7dd      	b.n	800dcd8 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800dd1c:	9301      	str	r3, [sp, #4]
 800dd1e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dd20:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800dd24:	6413      	str	r3, [r2, #64]	; 0x40
 800dd26:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dd28:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800dd2c:	9301      	str	r3, [sp, #4]
 800dd2e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800dd30:	2501      	movs	r5, #1
 800dd32:	e774      	b.n	800dc1e <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800dd34:	684a      	ldr	r2, [r1, #4]
 800dd36:	0250      	lsls	r0, r2, #9
 800dd38:	f57f af19 	bpl.w	800db6e <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800dd3c:	4a24      	ldr	r2, [pc, #144]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800dd3e:	6812      	ldr	r2, [r2, #0]
 800dd40:	0391      	lsls	r1, r2, #14
 800dd42:	f57f af37 	bpl.w	800dbb4 <HAL_RCC_OscConfig+0x74>
 800dd46:	6862      	ldr	r2, [r4, #4]
 800dd48:	2a00      	cmp	r2, #0
 800dd4a:	f47f af33 	bne.w	800dbb4 <HAL_RCC_OscConfig+0x74>
 800dd4e:	e7d0      	b.n	800dcf2 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dd50:	4a1f      	ldr	r2, [pc, #124]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800dd52:	6813      	ldr	r3, [r2, #0]
 800dd54:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800dd58:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800dd5a:	f7fd fcd7 	bl	800b70c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dd5e:	4e1c      	ldr	r6, [pc, #112]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800dd60:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dd62:	e004      	b.n	800dd6e <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800dd64:	f7fd fcd2 	bl	800b70c <HAL_GetTick>
 800dd68:	1b40      	subs	r0, r0, r5
 800dd6a:	2864      	cmp	r0, #100	; 0x64
 800dd6c:	d81f      	bhi.n	800ddae <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dd6e:	6833      	ldr	r3, [r6, #0]
 800dd70:	039a      	lsls	r2, r3, #14
 800dd72:	d5f7      	bpl.n	800dd64 <HAL_RCC_OscConfig+0x224>
 800dd74:	e71d      	b.n	800dbb2 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800dd76:	4916      	ldr	r1, [pc, #88]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800dd78:	6920      	ldr	r0, [r4, #16]
 800dd7a:	680a      	ldr	r2, [r1, #0]
 800dd7c:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800dd80:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800dd84:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dd86:	071a      	lsls	r2, r3, #28
 800dd88:	f57f af41 	bpl.w	800dc0e <HAL_RCC_OscConfig+0xce>
 800dd8c:	e791      	b.n	800dcb2 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800dd8e:	6833      	ldr	r3, [r6, #0]
 800dd90:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dd94:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800dd96:	f7fd fcb9 	bl	800b70c <HAL_GetTick>
 800dd9a:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dd9c:	6833      	ldr	r3, [r6, #0]
 800dd9e:	05da      	lsls	r2, r3, #23
 800dda0:	f53f af42 	bmi.w	800dc28 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800dda4:	f7fd fcb2 	bl	800b70c <HAL_GetTick>
 800dda8:	1bc0      	subs	r0, r0, r7
 800ddaa:	2802      	cmp	r0, #2
 800ddac:	d9f6      	bls.n	800dd9c <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800ddae:	2003      	movs	r0, #3
}
 800ddb0:	b002      	add	sp, #8
 800ddb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800ddb6:	4a06      	ldr	r2, [pc, #24]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
 800ddb8:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800ddba:	f043 0301 	orr.w	r3, r3, #1
 800ddbe:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800ddc0:	f7fd fca4 	bl	800b70c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800ddc4:	4f02      	ldr	r7, [pc, #8]	; (800ddd0 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800ddc6:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800ddc8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800ddcc:	e00b      	b.n	800dde6 <HAL_RCC_OscConfig+0x2a6>
 800ddce:	bf00      	nop
 800ddd0:	40023800 	.word	0x40023800
 800ddd4:	42470000 	.word	0x42470000
 800ddd8:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dddc:	f7fd fc96 	bl	800b70c <HAL_GetTick>
 800dde0:	1b80      	subs	r0, r0, r6
 800dde2:	4540      	cmp	r0, r8
 800dde4:	d8e3      	bhi.n	800ddae <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dde6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800dde8:	079b      	lsls	r3, r3, #30
 800ddea:	d5f7      	bpl.n	800dddc <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800ddec:	2d00      	cmp	r5, #0
 800ddee:	f43f af40 	beq.w	800dc72 <HAL_RCC_OscConfig+0x132>
 800ddf2:	e044      	b.n	800de7e <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800ddf4:	4a42      	ldr	r2, [pc, #264]	; (800df00 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800ddf6:	4e43      	ldr	r6, [pc, #268]	; (800df04 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800ddf8:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800ddfa:	f7fd fc87 	bl	800b70c <HAL_GetTick>
 800ddfe:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800de00:	e004      	b.n	800de0c <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800de02:	f7fd fc83 	bl	800b70c <HAL_GetTick>
 800de06:	1b40      	subs	r0, r0, r5
 800de08:	2802      	cmp	r0, #2
 800de0a:	d8d0      	bhi.n	800ddae <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800de0c:	6833      	ldr	r3, [r6, #0]
 800de0e:	0799      	lsls	r1, r3, #30
 800de10:	d4f7      	bmi.n	800de02 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800de12:	6823      	ldr	r3, [r4, #0]
 800de14:	e6f9      	b.n	800dc0a <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800de16:	2801      	cmp	r0, #1
 800de18:	f43f af48 	beq.w	800dcac <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800de1c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800de1e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800de20:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800de24:	4291      	cmp	r1, r2
 800de26:	f47f af64 	bne.w	800dcf2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800de2a:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800de2c:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800de30:	4291      	cmp	r1, r2
 800de32:	f47f af5e 	bne.w	800dcf2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800de36:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800de38:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800de3c:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800de3e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800de42:	f47f af56 	bne.w	800dcf2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800de46:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800de48:	0852      	lsrs	r2, r2, #1
 800de4a:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800de4e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800de50:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800de54:	f47f af4d 	bne.w	800dcf2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800de58:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800de5a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800de5e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800de62:	bf14      	ite	ne
 800de64:	2001      	movne	r0, #1
 800de66:	2000      	moveq	r0, #0
 800de68:	e720      	b.n	800dcac <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800de6a:	4b26      	ldr	r3, [pc, #152]	; (800df04 <HAL_RCC_OscConfig+0x3c4>)
 800de6c:	681a      	ldr	r2, [r3, #0]
 800de6e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800de72:	601a      	str	r2, [r3, #0]
 800de74:	681a      	ldr	r2, [r3, #0]
 800de76:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800de7a:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800de7c:	e76d      	b.n	800dd5a <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800de7e:	4a21      	ldr	r2, [pc, #132]	; (800df04 <HAL_RCC_OscConfig+0x3c4>)
 800de80:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800de82:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800de86:	6413      	str	r3, [r2, #64]	; 0x40
 800de88:	e6f3      	b.n	800dc72 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800de8a:	2001      	movs	r0, #1
}
 800de8c:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800de8e:	4b1d      	ldr	r3, [pc, #116]	; (800df04 <HAL_RCC_OscConfig+0x3c4>)
 800de90:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800de92:	f042 0204 	orr.w	r2, r2, #4
 800de96:	671a      	str	r2, [r3, #112]	; 0x70
 800de98:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800de9a:	f042 0201 	orr.w	r2, r2, #1
 800de9e:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800dea0:	e78e      	b.n	800ddc0 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800dea2:	f7fd fc33 	bl	800b70c <HAL_GetTick>
 800dea6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dea8:	e005      	b.n	800deb6 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800deaa:	f7fd fc2f 	bl	800b70c <HAL_GetTick>
 800deae:	1b80      	subs	r0, r0, r6
 800deb0:	2802      	cmp	r0, #2
 800deb2:	f63f af7c 	bhi.w	800ddae <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800deb6:	682b      	ldr	r3, [r5, #0]
 800deb8:	0199      	lsls	r1, r3, #6
 800deba:	d4f6      	bmi.n	800deaa <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800debc:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800dec0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800dec2:	430b      	orrs	r3, r1
 800dec4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800dec8:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800decc:	0852      	lsrs	r2, r2, #1
 800dece:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800ded2:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800ded4:	490a      	ldr	r1, [pc, #40]	; (800df00 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800ded6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800deda:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dedc:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800dede:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800dee0:	f7fd fc14 	bl	800b70c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dee4:	4d07      	ldr	r5, [pc, #28]	; (800df04 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800dee6:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dee8:	e005      	b.n	800def6 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800deea:	f7fd fc0f 	bl	800b70c <HAL_GetTick>
 800deee:	1b00      	subs	r0, r0, r4
 800def0:	2802      	cmp	r0, #2
 800def2:	f63f af5c 	bhi.w	800ddae <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800def6:	682b      	ldr	r3, [r5, #0]
 800def8:	019a      	lsls	r2, r3, #6
 800defa:	d5f6      	bpl.n	800deea <HAL_RCC_OscConfig+0x3aa>
 800defc:	e6d5      	b.n	800dcaa <HAL_RCC_OscConfig+0x16a>
 800defe:	bf00      	nop
 800df00:	42470000 	.word	0x42470000
 800df04:	40023800 	.word	0x40023800

0800df08 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800df08:	4916      	ldr	r1, [pc, #88]	; (800df64 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800df0a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800df0c:	688b      	ldr	r3, [r1, #8]
 800df0e:	f003 030c 	and.w	r3, r3, #12
 800df12:	2b04      	cmp	r3, #4
 800df14:	d01b      	beq.n	800df4e <HAL_RCC_GetSysClockFreq+0x46>
 800df16:	2b08      	cmp	r3, #8
 800df18:	d117      	bne.n	800df4a <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800df1a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800df1c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800df1e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800df20:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800df24:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800df28:	d113      	bne.n	800df52 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800df2a:	480f      	ldr	r0, [pc, #60]	; (800df68 <HAL_RCC_GetSysClockFreq+0x60>)
 800df2c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800df30:	fba1 0100 	umull	r0, r1, r1, r0
 800df34:	f7f2 fd42 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800df38:	4b0a      	ldr	r3, [pc, #40]	; (800df64 <HAL_RCC_GetSysClockFreq+0x5c>)
 800df3a:	685b      	ldr	r3, [r3, #4]
 800df3c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800df40:	3301      	adds	r3, #1
 800df42:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800df44:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800df48:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800df4a:	4807      	ldr	r0, [pc, #28]	; (800df68 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800df4c:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800df4e:	4807      	ldr	r0, [pc, #28]	; (800df6c <HAL_RCC_GetSysClockFreq+0x64>)
}
 800df50:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800df52:	4806      	ldr	r0, [pc, #24]	; (800df6c <HAL_RCC_GetSysClockFreq+0x64>)
 800df54:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800df58:	2300      	movs	r3, #0
 800df5a:	fba1 0100 	umull	r0, r1, r1, r0
 800df5e:	f7f2 fd2d 	bl	80009bc <__aeabi_uldivmod>
 800df62:	e7e9      	b.n	800df38 <HAL_RCC_GetSysClockFreq+0x30>
 800df64:	40023800 	.word	0x40023800
 800df68:	00f42400 	.word	0x00f42400
 800df6c:	007a1200 	.word	0x007a1200

0800df70 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800df70:	2800      	cmp	r0, #0
 800df72:	f000 8087 	beq.w	800e084 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800df76:	4a48      	ldr	r2, [pc, #288]	; (800e098 <HAL_RCC_ClockConfig+0x128>)
 800df78:	6813      	ldr	r3, [r2, #0]
 800df7a:	f003 030f 	and.w	r3, r3, #15
 800df7e:	428b      	cmp	r3, r1
{
 800df80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df84:	460d      	mov	r5, r1
 800df86:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800df88:	d209      	bcs.n	800df9e <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800df8a:	b2cb      	uxtb	r3, r1
 800df8c:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800df8e:	6813      	ldr	r3, [r2, #0]
 800df90:	f003 030f 	and.w	r3, r3, #15
 800df94:	428b      	cmp	r3, r1
 800df96:	d002      	beq.n	800df9e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800df98:	2001      	movs	r0, #1
}
 800df9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800df9e:	6823      	ldr	r3, [r4, #0]
 800dfa0:	0798      	lsls	r0, r3, #30
 800dfa2:	d514      	bpl.n	800dfce <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800dfa4:	0759      	lsls	r1, r3, #29
 800dfa6:	d504      	bpl.n	800dfb2 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800dfa8:	493c      	ldr	r1, [pc, #240]	; (800e09c <HAL_RCC_ClockConfig+0x12c>)
 800dfaa:	688a      	ldr	r2, [r1, #8]
 800dfac:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800dfb0:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800dfb2:	071a      	lsls	r2, r3, #28
 800dfb4:	d504      	bpl.n	800dfc0 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800dfb6:	4939      	ldr	r1, [pc, #228]	; (800e09c <HAL_RCC_ClockConfig+0x12c>)
 800dfb8:	688a      	ldr	r2, [r1, #8]
 800dfba:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800dfbe:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800dfc0:	4936      	ldr	r1, [pc, #216]	; (800e09c <HAL_RCC_ClockConfig+0x12c>)
 800dfc2:	68a0      	ldr	r0, [r4, #8]
 800dfc4:	688a      	ldr	r2, [r1, #8]
 800dfc6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800dfca:	4302      	orrs	r2, r0
 800dfcc:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800dfce:	07df      	lsls	r7, r3, #31
 800dfd0:	d521      	bpl.n	800e016 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800dfd2:	6862      	ldr	r2, [r4, #4]
 800dfd4:	2a01      	cmp	r2, #1
 800dfd6:	d057      	beq.n	800e088 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800dfd8:	1e93      	subs	r3, r2, #2
 800dfda:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dfdc:	4b2f      	ldr	r3, [pc, #188]	; (800e09c <HAL_RCC_ClockConfig+0x12c>)
 800dfde:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800dfe0:	d94d      	bls.n	800e07e <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dfe2:	0799      	lsls	r1, r3, #30
 800dfe4:	d5d8      	bpl.n	800df98 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800dfe6:	4e2d      	ldr	r6, [pc, #180]	; (800e09c <HAL_RCC_ClockConfig+0x12c>)
 800dfe8:	68b3      	ldr	r3, [r6, #8]
 800dfea:	f023 0303 	bic.w	r3, r3, #3
 800dfee:	4313      	orrs	r3, r2
 800dff0:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800dff2:	f7fd fb8b 	bl	800b70c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800dff6:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800dffa:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800dffc:	e004      	b.n	800e008 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800dffe:	f7fd fb85 	bl	800b70c <HAL_GetTick>
 800e002:	1bc0      	subs	r0, r0, r7
 800e004:	4540      	cmp	r0, r8
 800e006:	d844      	bhi.n	800e092 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800e008:	68b3      	ldr	r3, [r6, #8]
 800e00a:	6862      	ldr	r2, [r4, #4]
 800e00c:	f003 030c 	and.w	r3, r3, #12
 800e010:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800e014:	d1f3      	bne.n	800dffe <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800e016:	4a20      	ldr	r2, [pc, #128]	; (800e098 <HAL_RCC_ClockConfig+0x128>)
 800e018:	6813      	ldr	r3, [r2, #0]
 800e01a:	f003 030f 	and.w	r3, r3, #15
 800e01e:	42ab      	cmp	r3, r5
 800e020:	d906      	bls.n	800e030 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800e022:	b2eb      	uxtb	r3, r5
 800e024:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800e026:	6813      	ldr	r3, [r2, #0]
 800e028:	f003 030f 	and.w	r3, r3, #15
 800e02c:	42ab      	cmp	r3, r5
 800e02e:	d1b3      	bne.n	800df98 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800e030:	6823      	ldr	r3, [r4, #0]
 800e032:	075a      	lsls	r2, r3, #29
 800e034:	d506      	bpl.n	800e044 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800e036:	4919      	ldr	r1, [pc, #100]	; (800e09c <HAL_RCC_ClockConfig+0x12c>)
 800e038:	68e0      	ldr	r0, [r4, #12]
 800e03a:	688a      	ldr	r2, [r1, #8]
 800e03c:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800e040:	4302      	orrs	r2, r0
 800e042:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800e044:	071b      	lsls	r3, r3, #28
 800e046:	d507      	bpl.n	800e058 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800e048:	4a14      	ldr	r2, [pc, #80]	; (800e09c <HAL_RCC_ClockConfig+0x12c>)
 800e04a:	6921      	ldr	r1, [r4, #16]
 800e04c:	6893      	ldr	r3, [r2, #8]
 800e04e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800e052:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800e056:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800e058:	f7ff ff56 	bl	800df08 <HAL_RCC_GetSysClockFreq>
 800e05c:	4a0f      	ldr	r2, [pc, #60]	; (800e09c <HAL_RCC_ClockConfig+0x12c>)
 800e05e:	4c10      	ldr	r4, [pc, #64]	; (800e0a0 <HAL_RCC_ClockConfig+0x130>)
 800e060:	6892      	ldr	r2, [r2, #8]
 800e062:	4910      	ldr	r1, [pc, #64]	; (800e0a4 <HAL_RCC_ClockConfig+0x134>)
 800e064:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800e068:	4603      	mov	r3, r0
 800e06a:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800e06c:	480e      	ldr	r0, [pc, #56]	; (800e0a8 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800e06e:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800e070:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800e072:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800e074:	f7f4 fc2c 	bl	80028d0 <HAL_InitTick>
  return HAL_OK;
 800e078:	2000      	movs	r0, #0
}
 800e07a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800e07e:	0198      	lsls	r0, r3, #6
 800e080:	d4b1      	bmi.n	800dfe6 <HAL_RCC_ClockConfig+0x76>
 800e082:	e789      	b.n	800df98 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800e084:	2001      	movs	r0, #1
}
 800e086:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800e088:	4b04      	ldr	r3, [pc, #16]	; (800e09c <HAL_RCC_ClockConfig+0x12c>)
 800e08a:	681b      	ldr	r3, [r3, #0]
 800e08c:	039e      	lsls	r6, r3, #14
 800e08e:	d4aa      	bmi.n	800dfe6 <HAL_RCC_ClockConfig+0x76>
 800e090:	e782      	b.n	800df98 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800e092:	2003      	movs	r0, #3
 800e094:	e781      	b.n	800df9a <HAL_RCC_ClockConfig+0x2a>
 800e096:	bf00      	nop
 800e098:	40023c00 	.word	0x40023c00
 800e09c:	40023800 	.word	0x40023800
 800e0a0:	08031634 	.word	0x08031634
 800e0a4:	2000007c 	.word	0x2000007c
 800e0a8:	20000084 	.word	0x20000084

0800e0ac <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800e0ac:	4b04      	ldr	r3, [pc, #16]	; (800e0c0 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800e0ae:	4905      	ldr	r1, [pc, #20]	; (800e0c4 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800e0b0:	689b      	ldr	r3, [r3, #8]
 800e0b2:	4a05      	ldr	r2, [pc, #20]	; (800e0c8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800e0b4:	6808      	ldr	r0, [r1, #0]
 800e0b6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800e0ba:	5cd3      	ldrb	r3, [r2, r3]
}
 800e0bc:	40d8      	lsrs	r0, r3
 800e0be:	4770      	bx	lr
 800e0c0:	40023800 	.word	0x40023800
 800e0c4:	2000007c 	.word	0x2000007c
 800e0c8:	08031644 	.word	0x08031644

0800e0cc <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800e0cc:	4b0e      	ldr	r3, [pc, #56]	; (800e108 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800e0ce:	220f      	movs	r2, #15
 800e0d0:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800e0d2:	689a      	ldr	r2, [r3, #8]
 800e0d4:	f002 0203 	and.w	r2, r2, #3
 800e0d8:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800e0da:	689a      	ldr	r2, [r3, #8]
 800e0dc:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800e0e0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800e0e2:	689a      	ldr	r2, [r3, #8]
 800e0e4:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800e0e8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800e0ea:	689b      	ldr	r3, [r3, #8]
 800e0ec:	08db      	lsrs	r3, r3, #3
{
 800e0ee:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800e0f0:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800e0f4:	4c05      	ldr	r4, [pc, #20]	; (800e10c <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800e0f6:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800e0f8:	6823      	ldr	r3, [r4, #0]
}
 800e0fa:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800e0fe:	f003 030f 	and.w	r3, r3, #15
 800e102:	600b      	str	r3, [r1, #0]
}
 800e104:	4770      	bx	lr
 800e106:	bf00      	nop
 800e108:	40023800 	.word	0x40023800
 800e10c:	40023c00 	.word	0x40023c00

0800e110 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800e110:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800e112:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800e114:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800e118:	b083      	sub	sp, #12
 800e11a:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800e11c:	d111      	bne.n	800e142 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800e11e:	f013 0f0c 	tst.w	r3, #12
 800e122:	d16f      	bne.n	800e204 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800e124:	0698      	lsls	r0, r3, #26
 800e126:	f100 80c2 	bmi.w	800e2ae <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800e12a:	f013 0310 	ands.w	r3, r3, #16
 800e12e:	f000 80bb 	beq.w	800e2a8 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800e132:	4b89      	ldr	r3, [pc, #548]	; (800e358 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800e134:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800e138:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800e13c:	2000      	movs	r0, #0
}
 800e13e:	b003      	add	sp, #12
 800e140:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800e142:	4b86      	ldr	r3, [pc, #536]	; (800e35c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e144:	4e86      	ldr	r6, [pc, #536]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800e146:	2200      	movs	r2, #0
 800e148:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800e14a:	f7fd fadf 	bl	800b70c <HAL_GetTick>
 800e14e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e150:	e004      	b.n	800e15c <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800e152:	f7fd fadb 	bl	800b70c <HAL_GetTick>
 800e156:	1b43      	subs	r3, r0, r5
 800e158:	2b02      	cmp	r3, #2
 800e15a:	d850      	bhi.n	800e1fe <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e15c:	6833      	ldr	r3, [r6, #0]
 800e15e:	0118      	lsls	r0, r3, #4
 800e160:	d4f7      	bmi.n	800e152 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800e162:	6823      	ldr	r3, [r4, #0]
 800e164:	07d9      	lsls	r1, r3, #31
 800e166:	d506      	bpl.n	800e176 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800e168:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e16c:	0712      	lsls	r2, r2, #28
 800e16e:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800e172:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800e176:	079a      	lsls	r2, r3, #30
 800e178:	d515      	bpl.n	800e1a6 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e17a:	4979      	ldr	r1, [pc, #484]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e17c:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e17e:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e182:	6865      	ldr	r5, [r4, #4]
 800e184:	0612      	lsls	r2, r2, #24
 800e186:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800e18a:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800e18e:	4302      	orrs	r2, r0
 800e190:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800e194:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800e198:	69e2      	ldr	r2, [r4, #28]
 800e19a:	f020 001f 	bic.w	r0, r0, #31
 800e19e:	3a01      	subs	r2, #1
 800e1a0:	4302      	orrs	r2, r0
 800e1a2:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800e1a6:	065b      	lsls	r3, r3, #25
 800e1a8:	d509      	bpl.n	800e1be <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800e1aa:	1d20      	adds	r0, r4, #4
 800e1ac:	c80b      	ldmia	r0, {r0, r1, r3}
 800e1ae:	061b      	lsls	r3, r3, #24
 800e1b0:	4a6b      	ldr	r2, [pc, #428]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1b2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e1b6:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800e1ba:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800e1be:	4b67      	ldr	r3, [pc, #412]	; (800e35c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e1c0:	4e67      	ldr	r6, [pc, #412]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800e1c2:	2201      	movs	r2, #1
 800e1c4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800e1c6:	f7fd faa1 	bl	800b70c <HAL_GetTick>
 800e1ca:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e1cc:	e004      	b.n	800e1d8 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800e1ce:	f7fd fa9d 	bl	800b70c <HAL_GetTick>
 800e1d2:	1b40      	subs	r0, r0, r5
 800e1d4:	2802      	cmp	r0, #2
 800e1d6:	d812      	bhi.n	800e1fe <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e1d8:	6833      	ldr	r3, [r6, #0]
 800e1da:	011f      	lsls	r7, r3, #4
 800e1dc:	d5f7      	bpl.n	800e1ce <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800e1de:	6823      	ldr	r3, [r4, #0]
 800e1e0:	e79d      	b.n	800e11e <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800e1e2:	f7fd fa93 	bl	800b70c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e1e6:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800e1ea:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800e1ec:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e1ee:	079b      	lsls	r3, r3, #30
 800e1f0:	f100 80a5 	bmi.w	800e33e <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e1f4:	f7fd fa8a 	bl	800b70c <HAL_GetTick>
 800e1f8:	1b80      	subs	r0, r0, r6
 800e1fa:	42b8      	cmp	r0, r7
 800e1fc:	d9f6      	bls.n	800e1ec <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800e1fe:	2003      	movs	r0, #3
}
 800e200:	b003      	add	sp, #12
 800e202:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800e204:	4b55      	ldr	r3, [pc, #340]	; (800e35c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e206:	4e56      	ldr	r6, [pc, #344]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800e208:	2200      	movs	r2, #0
 800e20a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e20c:	f7fd fa7e 	bl	800b70c <HAL_GetTick>
 800e210:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e212:	e004      	b.n	800e21e <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e214:	f7fd fa7a 	bl	800b70c <HAL_GetTick>
 800e218:	1b43      	subs	r3, r0, r5
 800e21a:	2b02      	cmp	r3, #2
 800e21c:	d8ef      	bhi.n	800e1fe <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e21e:	6833      	ldr	r3, [r6, #0]
 800e220:	0098      	lsls	r0, r3, #2
 800e222:	d4f7      	bmi.n	800e214 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800e224:	6822      	ldr	r2, [r4, #0]
 800e226:	0751      	lsls	r1, r2, #29
 800e228:	d515      	bpl.n	800e256 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e22a:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800e22c:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e230:	6920      	ldr	r0, [r4, #16]
 800e232:	061b      	lsls	r3, r3, #24
 800e234:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800e238:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e23c:	430b      	orrs	r3, r1
 800e23e:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800e242:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800e246:	6a21      	ldr	r1, [r4, #32]
 800e248:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800e24c:	3901      	subs	r1, #1
 800e24e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800e252:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800e256:	0713      	lsls	r3, r2, #28
 800e258:	d514      	bpl.n	800e284 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e25a:	4a41      	ldr	r2, [pc, #260]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e25c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e25e:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e262:	6920      	ldr	r0, [r4, #16]
 800e264:	071b      	lsls	r3, r3, #28
 800e266:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800e26a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e26e:	430b      	orrs	r3, r1
 800e270:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800e274:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800e278:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e27a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800e27e:	430b      	orrs	r3, r1
 800e280:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800e284:	4b35      	ldr	r3, [pc, #212]	; (800e35c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e286:	4e36      	ldr	r6, [pc, #216]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800e288:	2201      	movs	r2, #1
 800e28a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e28c:	f7fd fa3e 	bl	800b70c <HAL_GetTick>
 800e290:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e292:	e004      	b.n	800e29e <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e294:	f7fd fa3a 	bl	800b70c <HAL_GetTick>
 800e298:	1b40      	subs	r0, r0, r5
 800e29a:	2802      	cmp	r0, #2
 800e29c:	d8af      	bhi.n	800e1fe <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e29e:	6833      	ldr	r3, [r6, #0]
 800e2a0:	009f      	lsls	r7, r3, #2
 800e2a2:	d5f7      	bpl.n	800e294 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800e2a4:	6823      	ldr	r3, [r4, #0]
 800e2a6:	e73d      	b.n	800e124 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800e2a8:	4618      	mov	r0, r3
}
 800e2aa:	b003      	add	sp, #12
 800e2ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800e2ae:	4b2c      	ldr	r3, [pc, #176]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800e2b0:	4d2c      	ldr	r5, [pc, #176]	; (800e364 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800e2b2:	2200      	movs	r2, #0
 800e2b4:	9201      	str	r2, [sp, #4]
 800e2b6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800e2b8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800e2bc:	641a      	str	r2, [r3, #64]	; 0x40
 800e2be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e2c0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800e2c4:	9301      	str	r3, [sp, #4]
 800e2c6:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800e2c8:	682b      	ldr	r3, [r5, #0]
 800e2ca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e2ce:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800e2d0:	f7fd fa1c 	bl	800b70c <HAL_GetTick>
 800e2d4:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e2d6:	e004      	b.n	800e2e2 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800e2d8:	f7fd fa18 	bl	800b70c <HAL_GetTick>
 800e2dc:	1b83      	subs	r3, r0, r6
 800e2de:	2b02      	cmp	r3, #2
 800e2e0:	d88d      	bhi.n	800e1fe <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e2e2:	682b      	ldr	r3, [r5, #0]
 800e2e4:	05d9      	lsls	r1, r3, #23
 800e2e6:	d5f7      	bpl.n	800e2d8 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e2e8:	4d1d      	ldr	r5, [pc, #116]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e2ea:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e2ec:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e2ee:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800e2f2:	d111      	bne.n	800e318 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e2f4:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800e2f8:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800e2fc:	d021      	beq.n	800e342 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800e2fe:	4918      	ldr	r1, [pc, #96]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e300:	688a      	ldr	r2, [r1, #8]
 800e302:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e306:	608a      	str	r2, [r1, #8]
 800e308:	4a15      	ldr	r2, [pc, #84]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e30a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800e30c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800e310:	430b      	orrs	r3, r1
 800e312:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800e314:	6823      	ldr	r3, [r4, #0]
 800e316:	e708      	b.n	800e12a <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e318:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800e31c:	4291      	cmp	r1, r2
 800e31e:	d0eb      	beq.n	800e2f8 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e320:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800e322:	4a0e      	ldr	r2, [pc, #56]	; (800e35c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800e324:	2101      	movs	r1, #1
 800e326:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e32a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800e32e:	2100      	movs	r1, #0
 800e330:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800e334:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800e336:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e338:	07da      	lsls	r2, r3, #31
 800e33a:	f53f af52 	bmi.w	800e1e2 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e33e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e340:	e7d8      	b.n	800e2f4 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800e342:	4807      	ldr	r0, [pc, #28]	; (800e360 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e344:	6882      	ldr	r2, [r0, #8]
 800e346:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800e34a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800e34e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e352:	430a      	orrs	r2, r1
 800e354:	6082      	str	r2, [r0, #8]
 800e356:	e7d7      	b.n	800e308 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800e358:	42471000 	.word	0x42471000
 800e35c:	42470000 	.word	0x42470000
 800e360:	40023800 	.word	0x40023800
 800e364:	40007000 	.word	0x40007000

0800e368 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800e368:	b1f0      	cbz	r0, 800e3a8 <HAL_SDRAM_Init+0x40>
{
 800e36a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800e36c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e370:	460d      	mov	r5, r1
 800e372:	4604      	mov	r4, r0
 800e374:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e378:	b18b      	cbz	r3, 800e39e <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e37a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e37c:	2302      	movs	r3, #2
 800e37e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e382:	f851 0b04 	ldr.w	r0, [r1], #4
 800e386:	f001 fa2d 	bl	800f7e4 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800e38a:	e9d4 0200 	ldrd	r0, r2, [r4]
 800e38e:	4629      	mov	r1, r5
 800e390:	f001 fa66 	bl	800f860 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800e394:	2301      	movs	r3, #1
 800e396:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800e39a:	2000      	movs	r0, #0
}
 800e39c:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800e39e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800e3a2:	f7f4 fa2d 	bl	8002800 <HAL_SDRAM_MspInit>
 800e3a6:	e7e8      	b.n	800e37a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800e3a8:	2001      	movs	r0, #1
}
 800e3aa:	4770      	bx	lr

0800e3ac <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800e3ac:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e3ae:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800e3b2:	2b02      	cmp	r3, #2
{
 800e3b4:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e3b6:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800e3b8:	d004      	beq.n	800e3c4 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800e3ba:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800e3be:	2c01      	cmp	r4, #1
 800e3c0:	d001      	beq.n	800e3c6 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800e3c2:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e3c4:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e3c6:	460e      	mov	r6, r1
 800e3c8:	2302      	movs	r3, #2
 800e3ca:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800e3ce:	6828      	ldr	r0, [r5, #0]
 800e3d0:	f001 fa92 	bl	800f8f8 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800e3d4:	6833      	ldr	r3, [r6, #0]
 800e3d6:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800e3d8:	bf06      	itte	eq
 800e3da:	2305      	moveq	r3, #5
 800e3dc:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800e3e0:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800e3e4:	2000      	movs	r0, #0
}
 800e3e6:	bd70      	pop	{r4, r5, r6, pc}

0800e3e8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800e3e8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e3ea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e3ee:	2b02      	cmp	r3, #2
{
 800e3f0:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e3f2:	b2d8      	uxtb	r0, r3
 800e3f4:	d005      	beq.n	800e402 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800e3f6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e3fa:	2b01      	cmp	r3, #1
 800e3fc:	b2dd      	uxtb	r5, r3
 800e3fe:	d001      	beq.n	800e404 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800e400:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e402:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e404:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e406:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e408:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e40c:	f001 fa9e 	bl	800f94c <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800e410:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800e414:	2000      	movs	r0, #0
}
 800e416:	bd38      	pop	{r3, r4, r5, pc}

0800e418 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800e418:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e41c:	b082      	sub	sp, #8
 800e41e:	461d      	mov	r5, r3
 800e420:	4616      	mov	r6, r2
 800e422:	460c      	mov	r4, r1
 800e424:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800e426:	f7fd f971 	bl	800b70c <HAL_GetTick>
 800e42a:	4435      	add	r5, r6
 800e42c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800e42e:	f7fd f96d 	bl	800b70c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e432:	4b27      	ldr	r3, [pc, #156]	; (800e4d0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800e434:	681b      	ldr	r3, [r3, #0]
 800e436:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800e43a:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800e43e:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e440:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e442:	1c73      	adds	r3, r6, #1
 800e444:	6839      	ldr	r1, [r7, #0]
 800e446:	d107      	bne.n	800e458 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800e448:	688b      	ldr	r3, [r1, #8]
 800e44a:	ea34 0303 	bics.w	r3, r4, r3
 800e44e:	d0fb      	beq.n	800e448 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800e450:	2000      	movs	r0, #0
}
 800e452:	b002      	add	sp, #8
 800e454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e458:	688b      	ldr	r3, [r1, #8]
 800e45a:	ea34 0303 	bics.w	r3, r4, r3
 800e45e:	d1f7      	bne.n	800e450 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800e460:	f7fd f954 	bl	800b70c <HAL_GetTick>
 800e464:	eba0 0008 	sub.w	r0, r0, r8
 800e468:	42a8      	cmp	r0, r5
 800e46a:	d208      	bcs.n	800e47e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800e46c:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800e46e:	2b00      	cmp	r3, #0
      count--;
 800e470:	9b01      	ldr	r3, [sp, #4]
 800e472:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800e476:	bf08      	it	eq
 800e478:	2500      	moveq	r5, #0
      count--;
 800e47a:	9301      	str	r3, [sp, #4]
 800e47c:	e7e1      	b.n	800e442 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e47e:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e482:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e484:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e488:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800e48c:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e48e:	d013      	beq.n	800e4b8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800e490:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800e492:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800e496:	d107      	bne.n	800e4a8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800e498:	681a      	ldr	r2, [r3, #0]
 800e49a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800e49e:	601a      	str	r2, [r3, #0]
 800e4a0:	681a      	ldr	r2, [r3, #0]
 800e4a2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800e4a6:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800e4a8:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800e4aa:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800e4ac:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800e4b0:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800e4b4:	2003      	movs	r0, #3
 800e4b6:	e7cc      	b.n	800e452 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e4b8:	68ba      	ldr	r2, [r7, #8]
 800e4ba:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e4be:	d002      	beq.n	800e4c6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e4c0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e4c4:	d1e4      	bne.n	800e490 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800e4c6:	681a      	ldr	r2, [r3, #0]
 800e4c8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e4cc:	601a      	str	r2, [r3, #0]
 800e4ce:	e7df      	b.n	800e490 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800e4d0:	2000007c 	.word	0x2000007c

0800e4d4 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800e4d4:	b538      	push	{r3, r4, r5, lr}
 800e4d6:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e4d8:	6842      	ldr	r2, [r0, #4]
 800e4da:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800e4de:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e4e0:	d006      	beq.n	800e4f0 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e4e2:	460a      	mov	r2, r1
 800e4e4:	2101      	movs	r1, #1
 800e4e6:	f7ff ff97 	bl	800e418 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e4ea:	b978      	cbnz	r0, 800e50c <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800e4ec:	2000      	movs	r0, #0
}
 800e4ee:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e4f0:	6882      	ldr	r2, [r0, #8]
 800e4f2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e4f6:	d01c      	beq.n	800e532 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e4f8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e4fc:	d00c      	beq.n	800e518 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e4fe:	460a      	mov	r2, r1
 800e500:	4620      	mov	r0, r4
 800e502:	2180      	movs	r1, #128	; 0x80
 800e504:	f7ff ff88 	bl	800e418 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e508:	2800      	cmp	r0, #0
 800e50a:	d0ef      	beq.n	800e4ec <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e50c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e50e:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800e512:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e514:	6563      	str	r3, [r4, #84]	; 0x54
}
 800e516:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800e518:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e51a:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800e51c:	6829      	ldr	r1, [r5, #0]
 800e51e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800e522:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e524:	2101      	movs	r1, #1
 800e526:	f7ff ff77 	bl	800e418 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e52a:	2800      	cmp	r0, #0
 800e52c:	d1ee      	bne.n	800e50c <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800e52e:	2000      	movs	r0, #0
 800e530:	e7dd      	b.n	800e4ee <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800e532:	6800      	ldr	r0, [r0, #0]
 800e534:	6802      	ldr	r2, [r0, #0]
 800e536:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e53a:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e53c:	460a      	mov	r2, r1
 800e53e:	4620      	mov	r0, r4
 800e540:	2180      	movs	r1, #128	; 0x80
 800e542:	f7ff ff69 	bl	800e418 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e546:	2800      	cmp	r0, #0
 800e548:	d0d0      	beq.n	800e4ec <SPI_EndRxTransaction+0x18>
 800e54a:	e7df      	b.n	800e50c <SPI_EndRxTransaction+0x38>

0800e54c <HAL_SPI_Init>:
  if (hspi == NULL)
 800e54c:	2800      	cmp	r0, #0
 800e54e:	d05c      	beq.n	800e60a <HAL_SPI_Init+0xbe>
{
 800e550:	b570      	push	{r4, r5, r6, lr}
 800e552:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800e554:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e556:	2800      	cmp	r0, #0
 800e558:	d047      	beq.n	800e5ea <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800e55a:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800e55c:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e560:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800e564:	2200      	movs	r2, #0
 800e566:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e568:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800e56c:	2b00      	cmp	r3, #0
 800e56e:	d042      	beq.n	800e5f6 <HAL_SPI_Init+0xaa>
 800e570:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800e572:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e574:	68a5      	ldr	r5, [r4, #8]
 800e576:	69a2      	ldr	r2, [r4, #24]
 800e578:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800e57a:	2302      	movs	r3, #2
 800e57c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800e580:	680b      	ldr	r3, [r1, #0]
 800e582:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e586:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e588:	6863      	ldr	r3, [r4, #4]
 800e58a:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800e58e:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800e592:	432b      	orrs	r3, r5
 800e594:	68e5      	ldr	r5, [r4, #12]
 800e596:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800e59a:	432b      	orrs	r3, r5
 800e59c:	6925      	ldr	r5, [r4, #16]
 800e59e:	f005 0502 	and.w	r5, r5, #2
 800e5a2:	432b      	orrs	r3, r5
 800e5a4:	6965      	ldr	r5, [r4, #20]
 800e5a6:	f005 0501 	and.w	r5, r5, #1
 800e5aa:	432b      	orrs	r3, r5
 800e5ac:	69e5      	ldr	r5, [r4, #28]
 800e5ae:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800e5b2:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800e5b6:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800e5ba:	4333      	orrs	r3, r6
 800e5bc:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e5be:	0c12      	lsrs	r2, r2, #16
 800e5c0:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e5c4:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e5c8:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e5cc:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e5d0:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e5d2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e5d4:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e5d6:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e5d8:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e5da:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800e5de:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e5e0:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e5e2:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800e5e4:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800e5e8:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e5ea:	6863      	ldr	r3, [r4, #4]
 800e5ec:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e5f0:	d0b6      	beq.n	800e560 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800e5f2:	61e0      	str	r0, [r4, #28]
 800e5f4:	e7b4      	b.n	800e560 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800e5f6:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800e5f8:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800e5fc:	f7f4 f81c 	bl	8002638 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e600:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e604:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800e608:	e7b3      	b.n	800e572 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800e60a:	2001      	movs	r0, #1
}
 800e60c:	4770      	bx	lr
 800e60e:	bf00      	nop

0800e610 <HAL_SPI_Transmit>:
{
 800e610:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e614:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e616:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e61a:	2801      	cmp	r0, #1
{
 800e61c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e61e:	f000 8085 	beq.w	800e72c <HAL_SPI_Transmit+0x11c>
 800e622:	461d      	mov	r5, r3
 800e624:	2301      	movs	r3, #1
 800e626:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e62a:	4688      	mov	r8, r1
 800e62c:	4617      	mov	r7, r2
 800e62e:	f7fd f86d 	bl	800b70c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800e632:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800e636:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800e638:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800e63a:	b2d8      	uxtb	r0, r3
 800e63c:	d009      	beq.n	800e652 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800e63e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e640:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e642:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e644:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e648:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e64c:	b002      	add	sp, #8
 800e64e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800e652:	f1b8 0f00 	cmp.w	r8, #0
 800e656:	d0f3      	beq.n	800e640 <HAL_SPI_Transmit+0x30>
 800e658:	2f00      	cmp	r7, #0
 800e65a:	d0f1      	beq.n	800e640 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e65c:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800e65e:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800e660:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e664:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e666:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e668:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e66c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800e670:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e674:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800e676:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800e678:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800e67a:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800e67c:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800e67e:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e680:	f000 8085 	beq.w	800e78e <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e684:	6803      	ldr	r3, [r0, #0]
 800e686:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800e688:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e68a:	d403      	bmi.n	800e694 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800e68c:	6803      	ldr	r3, [r0, #0]
 800e68e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e692:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e694:	68e3      	ldr	r3, [r4, #12]
 800e696:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e69a:	d04b      	beq.n	800e734 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e69c:	6863      	ldr	r3, [r4, #4]
 800e69e:	2b00      	cmp	r3, #0
 800e6a0:	f000 8097 	beq.w	800e7d2 <HAL_SPI_Transmit+0x1c2>
 800e6a4:	2f01      	cmp	r7, #1
 800e6a6:	f000 8094 	beq.w	800e7d2 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800e6aa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e6ac:	b29b      	uxth	r3, r3
 800e6ae:	b1ab      	cbz	r3, 800e6dc <HAL_SPI_Transmit+0xcc>
 800e6b0:	1c68      	adds	r0, r5, #1
 800e6b2:	f040 8083 	bne.w	800e7bc <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e6b6:	6823      	ldr	r3, [r4, #0]
 800e6b8:	689a      	ldr	r2, [r3, #8]
 800e6ba:	0791      	lsls	r1, r2, #30
 800e6bc:	f140 8094 	bpl.w	800e7e8 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e6c0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e6c2:	7812      	ldrb	r2, [r2, #0]
 800e6c4:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e6c6:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e6c8:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e6ca:	3901      	subs	r1, #1
 800e6cc:	b289      	uxth	r1, r1
 800e6ce:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e6d0:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e6d2:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800e6d4:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e6d6:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800e6d8:	2900      	cmp	r1, #0
 800e6da:	d1ec      	bne.n	800e6b6 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e6dc:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e6de:	4b5b      	ldr	r3, [pc, #364]	; (800e84c <HAL_SPI_Transmit+0x23c>)
 800e6e0:	4a5b      	ldr	r2, [pc, #364]	; (800e850 <HAL_SPI_Transmit+0x240>)
 800e6e2:	681b      	ldr	r3, [r3, #0]
 800e6e4:	fba2 2303 	umull	r2, r3, r2, r3
 800e6e8:	0d5b      	lsrs	r3, r3, #21
 800e6ea:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800e6ee:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e6f2:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e6f6:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e6f8:	d107      	bne.n	800e70a <HAL_SPI_Transmit+0xfa>
 800e6fa:	e098      	b.n	800e82e <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800e6fc:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e6fe:	6822      	ldr	r2, [r4, #0]
      count--;
 800e700:	3b01      	subs	r3, #1
 800e702:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e704:	6893      	ldr	r3, [r2, #8]
 800e706:	061b      	lsls	r3, r3, #24
 800e708:	d502      	bpl.n	800e710 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800e70a:	9b01      	ldr	r3, [sp, #4]
 800e70c:	2b00      	cmp	r3, #0
 800e70e:	d1f5      	bne.n	800e6fc <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e710:	68a3      	ldr	r3, [r4, #8]
 800e712:	b933      	cbnz	r3, 800e722 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e714:	6822      	ldr	r2, [r4, #0]
 800e716:	9300      	str	r3, [sp, #0]
 800e718:	68d3      	ldr	r3, [r2, #12]
 800e71a:	9300      	str	r3, [sp, #0]
 800e71c:	6893      	ldr	r3, [r2, #8]
 800e71e:	9300      	str	r3, [sp, #0]
 800e720:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e722:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800e724:	3800      	subs	r0, #0
 800e726:	bf18      	it	ne
 800e728:	2001      	movne	r0, #1
error:
 800e72a:	e789      	b.n	800e640 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800e72c:	2002      	movs	r0, #2
}
 800e72e:	b002      	add	sp, #8
 800e730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e734:	6861      	ldr	r1, [r4, #4]
 800e736:	2900      	cmp	r1, #0
 800e738:	d176      	bne.n	800e828 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e73a:	4643      	mov	r3, r8
 800e73c:	f833 7b02 	ldrh.w	r7, [r3], #2
 800e740:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e742:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e744:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e746:	3b01      	subs	r3, #1
 800e748:	b29b      	uxth	r3, r3
 800e74a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e74c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e74e:	b29b      	uxth	r3, r3
 800e750:	2b00      	cmp	r3, #0
 800e752:	d0c4      	beq.n	800e6de <HAL_SPI_Transmit+0xce>
 800e754:	1c6b      	adds	r3, r5, #1
 800e756:	d15e      	bne.n	800e816 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e758:	6883      	ldr	r3, [r0, #8]
 800e75a:	079f      	lsls	r7, r3, #30
 800e75c:	d50f      	bpl.n	800e77e <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e75e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e760:	f832 3b02 	ldrh.w	r3, [r2], #2
 800e764:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800e766:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e768:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e76a:	3b01      	subs	r3, #1
 800e76c:	b29b      	uxth	r3, r3
 800e76e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e770:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e772:	b29b      	uxth	r3, r3
 800e774:	2b00      	cmp	r3, #0
 800e776:	d0b1      	beq.n	800e6dc <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e778:	6883      	ldr	r3, [r0, #8]
 800e77a:	079f      	lsls	r7, r3, #30
 800e77c:	d4ef      	bmi.n	800e75e <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e77e:	f7fc ffc5 	bl	800b70c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e782:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e784:	b29b      	uxth	r3, r3
 800e786:	2b00      	cmp	r3, #0
 800e788:	d0a8      	beq.n	800e6dc <HAL_SPI_Transmit+0xcc>
 800e78a:	6820      	ldr	r0, [r4, #0]
 800e78c:	e7e4      	b.n	800e758 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800e78e:	6803      	ldr	r3, [r0, #0]
 800e790:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e794:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800e796:	6803      	ldr	r3, [r0, #0]
 800e798:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800e79c:	6003      	str	r3, [r0, #0]
 800e79e:	e771      	b.n	800e684 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e7a0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e7a2:	7812      	ldrb	r2, [r2, #0]
 800e7a4:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e7a6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7a8:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e7aa:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7ac:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e7ae:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7b0:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e7b2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e7b4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e7b6:	b29b      	uxth	r3, r3
 800e7b8:	2b00      	cmp	r3, #0
 800e7ba:	d08f      	beq.n	800e6dc <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e7bc:	6823      	ldr	r3, [r4, #0]
 800e7be:	689a      	ldr	r2, [r3, #8]
 800e7c0:	0792      	lsls	r2, r2, #30
 800e7c2:	d4ed      	bmi.n	800e7a0 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e7c4:	f7fc ffa2 	bl	800b70c <HAL_GetTick>
 800e7c8:	1b80      	subs	r0, r0, r6
 800e7ca:	42a8      	cmp	r0, r5
 800e7cc:	d3f2      	bcc.n	800e7b4 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800e7ce:	2003      	movs	r0, #3
 800e7d0:	e736      	b.n	800e640 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e7d2:	f898 3000 	ldrb.w	r3, [r8]
 800e7d6:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800e7d8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7da:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e7dc:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7de:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e7e0:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7e2:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e7e4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e7e6:	e760      	b.n	800e6aa <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e7e8:	f7fc ff90 	bl	800b70c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e7ec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e7ee:	b29b      	uxth	r3, r3
 800e7f0:	2b00      	cmp	r3, #0
 800e7f2:	f47f af60 	bne.w	800e6b6 <HAL_SPI_Transmit+0xa6>
 800e7f6:	e771      	b.n	800e6dc <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e7f8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e7fa:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e7fe:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e800:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e802:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e804:	3b01      	subs	r3, #1
 800e806:	b29b      	uxth	r3, r3
 800e808:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e80a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e80c:	b29b      	uxth	r3, r3
 800e80e:	2b00      	cmp	r3, #0
 800e810:	f43f af64 	beq.w	800e6dc <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e814:	6822      	ldr	r2, [r4, #0]
 800e816:	6893      	ldr	r3, [r2, #8]
 800e818:	0799      	lsls	r1, r3, #30
 800e81a:	d4ed      	bmi.n	800e7f8 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e81c:	f7fc ff76 	bl	800b70c <HAL_GetTick>
 800e820:	1b80      	subs	r0, r0, r6
 800e822:	42a8      	cmp	r0, r5
 800e824:	d3f1      	bcc.n	800e80a <HAL_SPI_Transmit+0x1fa>
 800e826:	e7d2      	b.n	800e7ce <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e828:	2f01      	cmp	r7, #1
 800e82a:	d18f      	bne.n	800e74c <HAL_SPI_Transmit+0x13c>
 800e82c:	e785      	b.n	800e73a <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e82e:	4633      	mov	r3, r6
 800e830:	462a      	mov	r2, r5
 800e832:	2180      	movs	r1, #128	; 0x80
 800e834:	4620      	mov	r0, r4
 800e836:	f7ff fdef 	bl	800e418 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e83a:	2800      	cmp	r0, #0
 800e83c:	f43f af68 	beq.w	800e710 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e840:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e842:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e844:	4313      	orrs	r3, r2
 800e846:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e848:	6562      	str	r2, [r4, #84]	; 0x54
 800e84a:	e761      	b.n	800e710 <HAL_SPI_Transmit+0x100>
 800e84c:	2000007c 	.word	0x2000007c
 800e850:	165e9f81 	.word	0x165e9f81

0800e854 <HAL_SPI_TransmitReceive>:
{
 800e854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e858:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e85a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e85e:	2801      	cmp	r0, #1
{
 800e860:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e862:	f000 80ac 	beq.w	800e9be <HAL_SPI_TransmitReceive+0x16a>
 800e866:	461e      	mov	r6, r3
 800e868:	2301      	movs	r3, #1
 800e86a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e86e:	4690      	mov	r8, r2
 800e870:	460f      	mov	r7, r1
 800e872:	f7fc ff4b 	bl	800b70c <HAL_GetTick>
 800e876:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800e878:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800e87c:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e87e:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800e880:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e882:	d011      	beq.n	800e8a8 <HAL_SPI_TransmitReceive+0x54>
 800e884:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e888:	d009      	beq.n	800e89e <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800e88a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e88c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e88e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e890:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e894:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e898:	b002      	add	sp, #8
 800e89a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800e89e:	68a1      	ldr	r1, [r4, #8]
 800e8a0:	2900      	cmp	r1, #0
 800e8a2:	d1f2      	bne.n	800e88a <HAL_SPI_TransmitReceive+0x36>
 800e8a4:	2a04      	cmp	r2, #4
 800e8a6:	d1f0      	bne.n	800e88a <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800e8a8:	2f00      	cmp	r7, #0
 800e8aa:	f000 808c 	beq.w	800e9c6 <HAL_SPI_TransmitReceive+0x172>
 800e8ae:	f1b8 0f00 	cmp.w	r8, #0
 800e8b2:	f000 8088 	beq.w	800e9c6 <HAL_SPI_TransmitReceive+0x172>
 800e8b6:	2e00      	cmp	r6, #0
 800e8b8:	f000 8085 	beq.w	800e9c6 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e8bc:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800e8c0:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e8c4:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800e8c6:	bf1c      	itt	ne
 800e8c8:	2205      	movne	r2, #5
 800e8ca:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e8ce:	2200      	movs	r2, #0
 800e8d0:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800e8d2:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e8d6:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800e8d8:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800e8da:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e8dc:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800e8de:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e8e0:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800e8e2:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800e8e4:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e8e6:	d403      	bmi.n	800e8f0 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800e8e8:	6811      	ldr	r1, [r2, #0]
 800e8ea:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800e8ee:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e8f0:	68e1      	ldr	r1, [r4, #12]
 800e8f2:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800e8f6:	f000 809e 	beq.w	800ea36 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e8fa:	2b00      	cmp	r3, #0
 800e8fc:	f000 8091 	beq.w	800ea22 <HAL_SPI_TransmitReceive+0x1ce>
 800e900:	2e01      	cmp	r6, #1
 800e902:	f000 808e 	beq.w	800ea22 <HAL_SPI_TransmitReceive+0x1ce>
 800e906:	9b08      	ldr	r3, [sp, #32]
 800e908:	3301      	adds	r3, #1
        txallowed = 1U;
 800e90a:	f04f 0601 	mov.w	r6, #1
 800e90e:	d028      	beq.n	800e962 <HAL_SPI_TransmitReceive+0x10e>
 800e910:	e05b      	b.n	800e9ca <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e912:	6821      	ldr	r1, [r4, #0]
 800e914:	688b      	ldr	r3, [r1, #8]
 800e916:	0798      	lsls	r0, r3, #30
 800e918:	d50f      	bpl.n	800e93a <HAL_SPI_TransmitReceive+0xe6>
 800e91a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e91c:	b29b      	uxth	r3, r3
 800e91e:	b163      	cbz	r3, 800e93a <HAL_SPI_TransmitReceive+0xe6>
 800e920:	b15e      	cbz	r6, 800e93a <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e922:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e924:	781b      	ldrb	r3, [r3, #0]
 800e926:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800e928:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e92a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e92c:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800e92e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e930:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e932:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800e934:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e936:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e938:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e93a:	688a      	ldr	r2, [r1, #8]
 800e93c:	f012 0201 	ands.w	r2, r2, #1
 800e940:	d00d      	beq.n	800e95e <HAL_SPI_TransmitReceive+0x10a>
 800e942:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e944:	b29b      	uxth	r3, r3
 800e946:	b153      	cbz	r3, 800e95e <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e948:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e94a:	68c9      	ldr	r1, [r1, #12]
 800e94c:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800e94e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e950:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e952:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800e954:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e956:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800e958:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e95a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e95c:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e95e:	f7fc fed5 	bl	800b70c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e962:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e964:	b292      	uxth	r2, r2
 800e966:	2a00      	cmp	r2, #0
 800e968:	d1d3      	bne.n	800e912 <HAL_SPI_TransmitReceive+0xbe>
 800e96a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e96c:	b29b      	uxth	r3, r3
 800e96e:	2b00      	cmp	r3, #0
 800e970:	d1cf      	bne.n	800e912 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e972:	4b79      	ldr	r3, [pc, #484]	; (800eb58 <HAL_SPI_TransmitReceive+0x304>)
 800e974:	4a79      	ldr	r2, [pc, #484]	; (800eb5c <HAL_SPI_TransmitReceive+0x308>)
 800e976:	681b      	ldr	r3, [r3, #0]
 800e978:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e97c:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e97e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800e982:	0d5b      	lsrs	r3, r3, #21
 800e984:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e988:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e98c:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e98e:	d107      	bne.n	800e9a0 <HAL_SPI_TransmitReceive+0x14c>
 800e990:	e0d2      	b.n	800eb38 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800e992:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e994:	6822      	ldr	r2, [r4, #0]
      count--;
 800e996:	3b01      	subs	r3, #1
 800e998:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e99a:	6893      	ldr	r3, [r2, #8]
 800e99c:	061b      	lsls	r3, r3, #24
 800e99e:	d502      	bpl.n	800e9a6 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800e9a0:	9b01      	ldr	r3, [sp, #4]
 800e9a2:	2b00      	cmp	r3, #0
 800e9a4:	d1f5      	bne.n	800e992 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e9a6:	68a0      	ldr	r0, [r4, #8]
 800e9a8:	2800      	cmp	r0, #0
 800e9aa:	f040 8082 	bne.w	800eab2 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e9ae:	6823      	ldr	r3, [r4, #0]
 800e9b0:	9000      	str	r0, [sp, #0]
 800e9b2:	68da      	ldr	r2, [r3, #12]
 800e9b4:	9200      	str	r2, [sp, #0]
 800e9b6:	689b      	ldr	r3, [r3, #8]
 800e9b8:	9300      	str	r3, [sp, #0]
 800e9ba:	9b00      	ldr	r3, [sp, #0]
 800e9bc:	e766      	b.n	800e88c <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800e9be:	2002      	movs	r0, #2
}
 800e9c0:	b002      	add	sp, #8
 800e9c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800e9c6:	2001      	movs	r0, #1
 800e9c8:	e760      	b.n	800e88c <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e9ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e9cc:	b29b      	uxth	r3, r3
 800e9ce:	b91b      	cbnz	r3, 800e9d8 <HAL_SPI_TransmitReceive+0x184>
 800e9d0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e9d2:	b29b      	uxth	r3, r3
 800e9d4:	2b00      	cmp	r3, #0
 800e9d6:	d0cc      	beq.n	800e972 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e9d8:	6822      	ldr	r2, [r4, #0]
 800e9da:	6893      	ldr	r3, [r2, #8]
 800e9dc:	0799      	lsls	r1, r3, #30
 800e9de:	d50f      	bpl.n	800ea00 <HAL_SPI_TransmitReceive+0x1ac>
 800e9e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e9e2:	b29b      	uxth	r3, r3
 800e9e4:	b163      	cbz	r3, 800ea00 <HAL_SPI_TransmitReceive+0x1ac>
 800e9e6:	b15e      	cbz	r6, 800ea00 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e9e8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e9ea:	781b      	ldrb	r3, [r3, #0]
 800e9ec:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800e9ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e9f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e9f2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e9f4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e9f6:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800e9f8:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e9fa:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800e9fc:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e9fe:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ea00:	6893      	ldr	r3, [r2, #8]
 800ea02:	f013 0301 	ands.w	r3, r3, #1
 800ea06:	d004      	beq.n	800ea12 <HAL_SPI_TransmitReceive+0x1be>
 800ea08:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ea0a:	b289      	uxth	r1, r1
 800ea0c:	2900      	cmp	r1, #0
 800ea0e:	f040 8087 	bne.w	800eb20 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ea12:	f7fc fe7b 	bl	800b70c <HAL_GetTick>
 800ea16:	9b08      	ldr	r3, [sp, #32]
 800ea18:	1b40      	subs	r0, r0, r5
 800ea1a:	4298      	cmp	r0, r3
 800ea1c:	d3d5      	bcc.n	800e9ca <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800ea1e:	2003      	movs	r0, #3
 800ea20:	e734      	b.n	800e88c <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ea22:	783b      	ldrb	r3, [r7, #0]
 800ea24:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800ea26:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ea28:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ea2a:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ea2c:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ea2e:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ea30:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ea32:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ea34:	e767      	b.n	800e906 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ea36:	2b00      	cmp	r3, #0
 800ea38:	d13d      	bne.n	800eab6 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ea3a:	f837 3b02 	ldrh.w	r3, [r7], #2
 800ea3e:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800ea40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ea42:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ea44:	3b01      	subs	r3, #1
 800ea46:	b29b      	uxth	r3, r3
 800ea48:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ea4a:	9b08      	ldr	r3, [sp, #32]
 800ea4c:	3301      	adds	r3, #1
{
 800ea4e:	f04f 0601 	mov.w	r6, #1
 800ea52:	d025      	beq.n	800eaa0 <HAL_SPI_TransmitReceive+0x24c>
 800ea54:	e032      	b.n	800eabc <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ea56:	6823      	ldr	r3, [r4, #0]
 800ea58:	689a      	ldr	r2, [r3, #8]
 800ea5a:	0792      	lsls	r2, r2, #30
 800ea5c:	d50d      	bpl.n	800ea7a <HAL_SPI_TransmitReceive+0x226>
 800ea5e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ea60:	b292      	uxth	r2, r2
 800ea62:	b152      	cbz	r2, 800ea7a <HAL_SPI_TransmitReceive+0x226>
 800ea64:	b14e      	cbz	r6, 800ea7a <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ea66:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ea68:	f831 2b02 	ldrh.w	r2, [r1], #2
 800ea6c:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800ea6e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ea70:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ea72:	3a01      	subs	r2, #1
 800ea74:	b292      	uxth	r2, r2
        txallowed = 0U;
 800ea76:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ea78:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ea7a:	689a      	ldr	r2, [r3, #8]
 800ea7c:	f012 0201 	ands.w	r2, r2, #1
 800ea80:	d00c      	beq.n	800ea9c <HAL_SPI_TransmitReceive+0x248>
 800ea82:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ea84:	b289      	uxth	r1, r1
 800ea86:	b149      	cbz	r1, 800ea9c <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ea88:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ea8a:	68db      	ldr	r3, [r3, #12]
 800ea8c:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800ea90:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ea92:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ea94:	3b01      	subs	r3, #1
 800ea96:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800ea98:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800ea9a:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800ea9c:	f7fc fe36 	bl	800b70c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800eaa0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800eaa2:	b29b      	uxth	r3, r3
 800eaa4:	2b00      	cmp	r3, #0
 800eaa6:	d1d6      	bne.n	800ea56 <HAL_SPI_TransmitReceive+0x202>
 800eaa8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eaaa:	b29b      	uxth	r3, r3
 800eaac:	2b00      	cmp	r3, #0
 800eaae:	d1d2      	bne.n	800ea56 <HAL_SPI_TransmitReceive+0x202>
 800eab0:	e75f      	b.n	800e972 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800eab2:	2000      	movs	r0, #0
 800eab4:	e6ea      	b.n	800e88c <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800eab6:	2e01      	cmp	r6, #1
 800eab8:	d1c7      	bne.n	800ea4a <HAL_SPI_TransmitReceive+0x1f6>
 800eaba:	e7be      	b.n	800ea3a <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800eabc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800eabe:	b29b      	uxth	r3, r3
 800eac0:	b923      	cbnz	r3, 800eacc <HAL_SPI_TransmitReceive+0x278>
 800eac2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eac4:	b29b      	uxth	r3, r3
 800eac6:	2b00      	cmp	r3, #0
 800eac8:	f43f af53 	beq.w	800e972 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800eacc:	6822      	ldr	r2, [r4, #0]
 800eace:	6893      	ldr	r3, [r2, #8]
 800ead0:	079f      	lsls	r7, r3, #30
 800ead2:	d50d      	bpl.n	800eaf0 <HAL_SPI_TransmitReceive+0x29c>
 800ead4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ead6:	b29b      	uxth	r3, r3
 800ead8:	b153      	cbz	r3, 800eaf0 <HAL_SPI_TransmitReceive+0x29c>
 800eada:	b14e      	cbz	r6, 800eaf0 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800eadc:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800eade:	f831 3b02 	ldrh.w	r3, [r1], #2
 800eae2:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800eae4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800eae6:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800eae8:	3b01      	subs	r3, #1
 800eaea:	b29b      	uxth	r3, r3
 800eaec:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800eaee:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800eaf0:	6893      	ldr	r3, [r2, #8]
 800eaf2:	f013 0301 	ands.w	r3, r3, #1
 800eaf6:	d00c      	beq.n	800eb12 <HAL_SPI_TransmitReceive+0x2be>
 800eaf8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800eafa:	b289      	uxth	r1, r1
 800eafc:	b149      	cbz	r1, 800eb12 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800eafe:	68d1      	ldr	r1, [r2, #12]
 800eb00:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb02:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800eb06:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800eb08:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eb0a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb0c:	3b01      	subs	r3, #1
 800eb0e:	b29b      	uxth	r3, r3
 800eb10:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800eb12:	f7fc fdfb 	bl	800b70c <HAL_GetTick>
 800eb16:	9b08      	ldr	r3, [sp, #32]
 800eb18:	1b40      	subs	r0, r0, r5
 800eb1a:	4298      	cmp	r0, r3
 800eb1c:	d3ce      	bcc.n	800eabc <HAL_SPI_TransmitReceive+0x268>
 800eb1e:	e77e      	b.n	800ea1e <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800eb20:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800eb22:	68d2      	ldr	r2, [r2, #12]
 800eb24:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800eb26:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800eb28:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb2a:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800eb2c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800eb2e:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800eb30:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb32:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800eb34:	461e      	mov	r6, r3
 800eb36:	e76c      	b.n	800ea12 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800eb38:	9a08      	ldr	r2, [sp, #32]
 800eb3a:	462b      	mov	r3, r5
 800eb3c:	2180      	movs	r1, #128	; 0x80
 800eb3e:	4620      	mov	r0, r4
 800eb40:	f7ff fc6a 	bl	800e418 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800eb44:	2800      	cmp	r0, #0
 800eb46:	f43f af2e 	beq.w	800e9a6 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800eb4a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800eb4c:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800eb4e:	4313      	orrs	r3, r2
 800eb50:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800eb52:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800eb54:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800eb56:	e699      	b.n	800e88c <HAL_SPI_TransmitReceive+0x38>
 800eb58:	2000007c 	.word	0x2000007c
 800eb5c:	165e9f81 	.word	0x165e9f81

0800eb60 <HAL_SPI_Receive>:
{
 800eb60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800eb64:	6846      	ldr	r6, [r0, #4]
 800eb66:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800eb6a:	b082      	sub	sp, #8
 800eb6c:	4604      	mov	r4, r0
 800eb6e:	4690      	mov	r8, r2
 800eb70:	461d      	mov	r5, r3
 800eb72:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800eb74:	d06e      	beq.n	800ec54 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800eb76:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800eb7a:	2b01      	cmp	r3, #1
 800eb7c:	d076      	beq.n	800ec6c <HAL_SPI_Receive+0x10c>
 800eb7e:	2301      	movs	r3, #1
 800eb80:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800eb84:	f7fc fdc2 	bl	800b70c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800eb88:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800eb8c:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800eb90:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800eb92:	fa5f f08c 	uxtb.w	r0, ip
 800eb96:	d009      	beq.n	800ebac <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800eb98:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800eb9a:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800eb9c:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800eb9e:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800eba2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800eba6:	b002      	add	sp, #8
 800eba8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800ebac:	2f00      	cmp	r7, #0
 800ebae:	d0f4      	beq.n	800eb9a <HAL_SPI_Receive+0x3a>
 800ebb0:	f1b8 0f00 	cmp.w	r8, #0
 800ebb4:	d0f1      	beq.n	800eb9a <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ebb6:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ebb8:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ebba:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ebbe:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ebc0:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ebc4:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ebc8:	f04f 0104 	mov.w	r1, #4
 800ebcc:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ebd0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ebd4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ebd6:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ebd8:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ebda:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ebde:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ebe0:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ebe2:	d107      	bne.n	800ebf4 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ebe4:	6811      	ldr	r1, [r2, #0]
 800ebe6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ebea:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ebec:	6811      	ldr	r1, [r2, #0]
 800ebee:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ebf2:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ebf4:	6811      	ldr	r1, [r2, #0]
 800ebf6:	0648      	lsls	r0, r1, #25
 800ebf8:	d403      	bmi.n	800ec02 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800ebfa:	6811      	ldr	r1, [r2, #0]
 800ebfc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ec00:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ec02:	68e1      	ldr	r1, [r4, #12]
 800ec04:	2900      	cmp	r1, #0
 800ec06:	d054      	beq.n	800ecb2 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800ec08:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ec0a:	b289      	uxth	r1, r1
 800ec0c:	b1a9      	cbz	r1, 800ec3a <HAL_SPI_Receive+0xda>
 800ec0e:	1c69      	adds	r1, r5, #1
 800ec10:	d13e      	bne.n	800ec90 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ec12:	6893      	ldr	r3, [r2, #8]
 800ec14:	07db      	lsls	r3, r3, #31
 800ec16:	d544      	bpl.n	800eca2 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ec18:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ec1a:	68d1      	ldr	r1, [r2, #12]
 800ec1c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800ec20:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ec24:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ec26:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ec2a:	fa1f fc8c 	uxth.w	ip, ip
 800ec2e:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ec32:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ec34:	b29b      	uxth	r3, r3
 800ec36:	2b00      	cmp	r3, #0
 800ec38:	d1eb      	bne.n	800ec12 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ec3a:	4632      	mov	r2, r6
 800ec3c:	4629      	mov	r1, r5
 800ec3e:	4620      	mov	r0, r4
 800ec40:	f7ff fc48 	bl	800e4d4 <SPI_EndRxTransaction>
 800ec44:	b108      	cbz	r0, 800ec4a <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ec46:	2320      	movs	r3, #32
 800ec48:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ec4a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ec4c:	3800      	subs	r0, #0
 800ec4e:	bf18      	it	ne
 800ec50:	2001      	movne	r0, #1
error :
 800ec52:	e7a2      	b.n	800eb9a <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ec54:	6883      	ldr	r3, [r0, #8]
 800ec56:	2b00      	cmp	r3, #0
 800ec58:	d18d      	bne.n	800eb76 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ec5a:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ec5c:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ec5e:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ec60:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ec64:	460a      	mov	r2, r1
 800ec66:	f7ff fdf5 	bl	800e854 <HAL_SPI_TransmitReceive>
 800ec6a:	e79c      	b.n	800eba6 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800ec6c:	2002      	movs	r0, #2
}
 800ec6e:	b002      	add	sp, #8
 800ec70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ec74:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ec76:	68db      	ldr	r3, [r3, #12]
 800ec78:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800ec7c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ec7e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ec80:	3b01      	subs	r3, #1
 800ec82:	b29b      	uxth	r3, r3
 800ec84:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ec86:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ec88:	b29b      	uxth	r3, r3
 800ec8a:	2b00      	cmp	r3, #0
 800ec8c:	d0d5      	beq.n	800ec3a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ec8e:	6823      	ldr	r3, [r4, #0]
 800ec90:	689a      	ldr	r2, [r3, #8]
 800ec92:	07d2      	lsls	r2, r2, #31
 800ec94:	d4ee      	bmi.n	800ec74 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ec96:	f7fc fd39 	bl	800b70c <HAL_GetTick>
 800ec9a:	1b80      	subs	r0, r0, r6
 800ec9c:	42a8      	cmp	r0, r5
 800ec9e:	d243      	bcs.n	800ed28 <HAL_SPI_Receive+0x1c8>
 800eca0:	e7f1      	b.n	800ec86 <HAL_SPI_Receive+0x126>
 800eca2:	f7fc fd33 	bl	800b70c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800eca6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eca8:	b29b      	uxth	r3, r3
 800ecaa:	2b00      	cmp	r3, #0
 800ecac:	d0c5      	beq.n	800ec3a <HAL_SPI_Receive+0xda>
 800ecae:	6822      	ldr	r2, [r4, #0]
 800ecb0:	e7af      	b.n	800ec12 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800ecb2:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800ecb4:	b292      	uxth	r2, r2
 800ecb6:	2a00      	cmp	r2, #0
 800ecb8:	d0bf      	beq.n	800ec3a <HAL_SPI_Receive+0xda>
 800ecba:	1c6f      	adds	r7, r5, #1
 800ecbc:	d013      	beq.n	800ece6 <HAL_SPI_Receive+0x186>
 800ecbe:	e02b      	b.n	800ed18 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ecc0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ecc2:	7b1b      	ldrb	r3, [r3, #12]
 800ecc4:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800ecc6:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ecca:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eccc:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ecd0:	fa1f fc8c 	uxth.w	ip, ip
 800ecd4:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ecd8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ecda:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800ecdc:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ecde:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800ece0:	2b00      	cmp	r3, #0
 800ece2:	d0aa      	beq.n	800ec3a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ece4:	6823      	ldr	r3, [r4, #0]
 800ece6:	689a      	ldr	r2, [r3, #8]
 800ece8:	07d0      	lsls	r0, r2, #31
 800ecea:	d4e9      	bmi.n	800ecc0 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ecec:	f7fc fd0e 	bl	800b70c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800ecf0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ecf2:	b29b      	uxth	r3, r3
 800ecf4:	2b00      	cmp	r3, #0
 800ecf6:	d1f5      	bne.n	800ece4 <HAL_SPI_Receive+0x184>
 800ecf8:	e79f      	b.n	800ec3a <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ecfa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ecfc:	7b1b      	ldrb	r3, [r3, #12]
 800ecfe:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800ed00:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ed02:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ed04:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ed06:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800ed08:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ed0a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ed0c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ed0e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ed10:	b29b      	uxth	r3, r3
 800ed12:	2b00      	cmp	r3, #0
 800ed14:	d091      	beq.n	800ec3a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ed16:	6823      	ldr	r3, [r4, #0]
 800ed18:	689a      	ldr	r2, [r3, #8]
 800ed1a:	07d1      	lsls	r1, r2, #31
 800ed1c:	d4ed      	bmi.n	800ecfa <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ed1e:	f7fc fcf5 	bl	800b70c <HAL_GetTick>
 800ed22:	1b80      	subs	r0, r0, r6
 800ed24:	42a8      	cmp	r0, r5
 800ed26:	d3f2      	bcc.n	800ed0e <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800ed28:	2003      	movs	r0, #3
 800ed2a:	e736      	b.n	800eb9a <HAL_SPI_Receive+0x3a>

0800ed2c <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800ed2c:	2800      	cmp	r0, #0
 800ed2e:	f000 8087 	beq.w	800ee40 <HAL_TIM_Base_Init+0x114>
{
 800ed32:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800ed34:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ed38:	4604      	mov	r4, r0
 800ed3a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ed3e:	2b00      	cmp	r3, #0
 800ed40:	d079      	beq.n	800ee36 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ed42:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed44:	493f      	ldr	r1, [pc, #252]	; (800ee44 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ed46:	2302      	movs	r3, #2
 800ed48:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed4c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ed4e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed50:	d05d      	beq.n	800ee0e <HAL_TIM_Base_Init+0xe2>
 800ed52:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ed56:	d031      	beq.n	800edbc <HAL_TIM_Base_Init+0x90>
 800ed58:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ed5c:	428a      	cmp	r2, r1
 800ed5e:	d02d      	beq.n	800edbc <HAL_TIM_Base_Init+0x90>
 800ed60:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed64:	428a      	cmp	r2, r1
 800ed66:	d029      	beq.n	800edbc <HAL_TIM_Base_Init+0x90>
 800ed68:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed6c:	428a      	cmp	r2, r1
 800ed6e:	d025      	beq.n	800edbc <HAL_TIM_Base_Init+0x90>
 800ed70:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ed74:	428a      	cmp	r2, r1
 800ed76:	d04a      	beq.n	800ee0e <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ed78:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ed7c:	428a      	cmp	r2, r1
 800ed7e:	d021      	beq.n	800edc4 <HAL_TIM_Base_Init+0x98>
 800ed80:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed84:	428a      	cmp	r2, r1
 800ed86:	d01d      	beq.n	800edc4 <HAL_TIM_Base_Init+0x98>
 800ed88:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed8c:	428a      	cmp	r2, r1
 800ed8e:	d019      	beq.n	800edc4 <HAL_TIM_Base_Init+0x98>
 800ed90:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800ed94:	428a      	cmp	r2, r1
 800ed96:	d015      	beq.n	800edc4 <HAL_TIM_Base_Init+0x98>
 800ed98:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed9c:	428a      	cmp	r2, r1
 800ed9e:	d011      	beq.n	800edc4 <HAL_TIM_Base_Init+0x98>
 800eda0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eda4:	428a      	cmp	r2, r1
 800eda6:	d00d      	beq.n	800edc4 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800eda8:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edaa:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edac:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800edb0:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800edb2:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800edb4:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edb6:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800edb8:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800edba:	e010      	b.n	800edde <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800edbc:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800edbe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800edc2:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800edc4:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edc6:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800edc8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800edcc:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edce:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edd2:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edd4:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800edd6:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800edd8:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edda:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800eddc:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800edde:	2301      	movs	r3, #1
 800ede0:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ede2:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ede6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800edea:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800edee:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800edf2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800edf6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800edfa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800edfe:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ee02:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ee06:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ee0a:	2000      	movs	r0, #0
}
 800ee0c:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ee0e:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee10:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ee12:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ee16:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ee18:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee1c:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee1e:	69a1      	ldr	r1, [r4, #24]
 800ee20:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ee24:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ee26:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee28:	68e3      	ldr	r3, [r4, #12]
 800ee2a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee2c:	6863      	ldr	r3, [r4, #4]
 800ee2e:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ee30:	6963      	ldr	r3, [r4, #20]
 800ee32:	6313      	str	r3, [r2, #48]	; 0x30
 800ee34:	e7d3      	b.n	800edde <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ee36:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800ee3a:	f7f3 fc39 	bl	80026b0 <HAL_TIM_Base_MspInit>
 800ee3e:	e780      	b.n	800ed42 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800ee40:	2001      	movs	r0, #1
}
 800ee42:	4770      	bx	lr
 800ee44:	40010000 	.word	0x40010000

0800ee48 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800ee48:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ee4c:	2b01      	cmp	r3, #1
 800ee4e:	d12f      	bne.n	800eeb0 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ee50:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ee52:	4919      	ldr	r1, [pc, #100]	; (800eeb8 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ee54:	2202      	movs	r2, #2
 800ee56:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ee5a:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ee5c:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ee5e:	f042 0201 	orr.w	r2, r2, #1
 800ee62:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ee64:	d019      	beq.n	800ee9a <HAL_TIM_Base_Start_IT+0x52>
 800ee66:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ee6a:	d016      	beq.n	800ee9a <HAL_TIM_Base_Start_IT+0x52>
 800ee6c:	4a13      	ldr	r2, [pc, #76]	; (800eebc <HAL_TIM_Base_Start_IT+0x74>)
 800ee6e:	4293      	cmp	r3, r2
 800ee70:	d013      	beq.n	800ee9a <HAL_TIM_Base_Start_IT+0x52>
 800ee72:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ee76:	4293      	cmp	r3, r2
 800ee78:	d00f      	beq.n	800ee9a <HAL_TIM_Base_Start_IT+0x52>
 800ee7a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ee7e:	4293      	cmp	r3, r2
 800ee80:	d00b      	beq.n	800ee9a <HAL_TIM_Base_Start_IT+0x52>
 800ee82:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ee86:	4293      	cmp	r3, r2
 800ee88:	d007      	beq.n	800ee9a <HAL_TIM_Base_Start_IT+0x52>
 800ee8a:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ee8e:	4293      	cmp	r3, r2
 800ee90:	d003      	beq.n	800ee9a <HAL_TIM_Base_Start_IT+0x52>
 800ee92:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ee96:	4293      	cmp	r3, r2
 800ee98:	d104      	bne.n	800eea4 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ee9a:	689a      	ldr	r2, [r3, #8]
 800ee9c:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800eea0:	2a06      	cmp	r2, #6
 800eea2:	d007      	beq.n	800eeb4 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800eea4:	681a      	ldr	r2, [r3, #0]
 800eea6:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800eeaa:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800eeac:	601a      	str	r2, [r3, #0]
 800eeae:	4770      	bx	lr
    return HAL_ERROR;
 800eeb0:	2001      	movs	r0, #1
 800eeb2:	4770      	bx	lr
  return HAL_OK;
 800eeb4:	2000      	movs	r0, #0
}
 800eeb6:	4770      	bx	lr
 800eeb8:	40010000 	.word	0x40010000
 800eebc:	40000400 	.word	0x40000400

0800eec0 <HAL_TIM_PWM_MspInit>:
 800eec0:	4770      	bx	lr
 800eec2:	bf00      	nop

0800eec4 <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800eec4:	2800      	cmp	r0, #0
 800eec6:	f000 8087 	beq.w	800efd8 <HAL_TIM_PWM_Init+0x114>
{
 800eeca:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800eecc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800eed0:	4604      	mov	r4, r0
 800eed2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800eed6:	2b00      	cmp	r3, #0
 800eed8:	d079      	beq.n	800efce <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800eeda:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800eedc:	493f      	ldr	r1, [pc, #252]	; (800efdc <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800eede:	2302      	movs	r3, #2
 800eee0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800eee4:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800eee6:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800eee8:	d05d      	beq.n	800efa6 <HAL_TIM_PWM_Init+0xe2>
 800eeea:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800eeee:	d031      	beq.n	800ef54 <HAL_TIM_PWM_Init+0x90>
 800eef0:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800eef4:	428a      	cmp	r2, r1
 800eef6:	d02d      	beq.n	800ef54 <HAL_TIM_PWM_Init+0x90>
 800eef8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eefc:	428a      	cmp	r2, r1
 800eefe:	d029      	beq.n	800ef54 <HAL_TIM_PWM_Init+0x90>
 800ef00:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef04:	428a      	cmp	r2, r1
 800ef06:	d025      	beq.n	800ef54 <HAL_TIM_PWM_Init+0x90>
 800ef08:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ef0c:	428a      	cmp	r2, r1
 800ef0e:	d04a      	beq.n	800efa6 <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ef10:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ef14:	428a      	cmp	r2, r1
 800ef16:	d021      	beq.n	800ef5c <HAL_TIM_PWM_Init+0x98>
 800ef18:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef1c:	428a      	cmp	r2, r1
 800ef1e:	d01d      	beq.n	800ef5c <HAL_TIM_PWM_Init+0x98>
 800ef20:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef24:	428a      	cmp	r2, r1
 800ef26:	d019      	beq.n	800ef5c <HAL_TIM_PWM_Init+0x98>
 800ef28:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800ef2c:	428a      	cmp	r2, r1
 800ef2e:	d015      	beq.n	800ef5c <HAL_TIM_PWM_Init+0x98>
 800ef30:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef34:	428a      	cmp	r2, r1
 800ef36:	d011      	beq.n	800ef5c <HAL_TIM_PWM_Init+0x98>
 800ef38:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef3c:	428a      	cmp	r2, r1
 800ef3e:	d00d      	beq.n	800ef5c <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ef40:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ef42:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ef44:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ef48:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800ef4a:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800ef4c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ef4e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ef50:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ef52:	e010      	b.n	800ef76 <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800ef54:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ef56:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ef5a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ef5c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ef5e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ef60:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ef64:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ef66:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ef6a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ef6c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800ef6e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800ef70:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ef72:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ef74:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800ef76:	2301      	movs	r3, #1
 800ef78:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ef7a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ef7e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ef82:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ef86:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ef8a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ef8e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ef92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ef96:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ef9a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ef9e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800efa2:	2000      	movs	r0, #0
}
 800efa4:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800efa6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800efa8:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800efaa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800efae:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800efb0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800efb4:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800efb6:	69a1      	ldr	r1, [r4, #24]
 800efb8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800efbc:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800efbe:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800efc0:	68e3      	ldr	r3, [r4, #12]
 800efc2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800efc4:	6863      	ldr	r3, [r4, #4]
 800efc6:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800efc8:	6963      	ldr	r3, [r4, #20]
 800efca:	6313      	str	r3, [r2, #48]	; 0x30
 800efcc:	e7d3      	b.n	800ef76 <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800efce:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800efd2:	f7ff ff75 	bl	800eec0 <HAL_TIM_PWM_MspInit>
 800efd6:	e780      	b.n	800eeda <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800efd8:	2001      	movs	r0, #1
}
 800efda:	4770      	bx	lr
 800efdc:	40010000 	.word	0x40010000

0800efe0 <HAL_TIM_PWM_Start>:
 800efe0:	2900      	cmp	r1, #0
 800efe2:	d13c      	bne.n	800f05e <HAL_TIM_PWM_Start+0x7e>
 800efe4:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800efe8:	2b01      	cmp	r3, #1
 800efea:	d140      	bne.n	800f06e <HAL_TIM_PWM_Start+0x8e>
 800efec:	2302      	movs	r3, #2
 800efee:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800eff2:	6803      	ldr	r3, [r0, #0]
 800eff4:	f001 011f 	and.w	r1, r1, #31
 800eff8:	6a18      	ldr	r0, [r3, #32]
 800effa:	2201      	movs	r2, #1
 800effc:	408a      	lsls	r2, r1
 800effe:	ea20 0002 	bic.w	r0, r0, r2
 800f002:	6218      	str	r0, [r3, #32]
 800f004:	6a18      	ldr	r0, [r3, #32]
 800f006:	492c      	ldr	r1, [pc, #176]	; (800f0b8 <HAL_TIM_PWM_Start+0xd8>)
 800f008:	4302      	orrs	r2, r0
 800f00a:	428b      	cmp	r3, r1
 800f00c:	621a      	str	r2, [r3, #32]
 800f00e:	d038      	beq.n	800f082 <HAL_TIM_PWM_Start+0xa2>
 800f010:	4a2a      	ldr	r2, [pc, #168]	; (800f0bc <HAL_TIM_PWM_Start+0xdc>)
 800f012:	4293      	cmp	r3, r2
 800f014:	d035      	beq.n	800f082 <HAL_TIM_PWM_Start+0xa2>
 800f016:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f01a:	d015      	beq.n	800f048 <HAL_TIM_PWM_Start+0x68>
 800f01c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800f020:	428b      	cmp	r3, r1
 800f022:	d011      	beq.n	800f048 <HAL_TIM_PWM_Start+0x68>
 800f024:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800f028:	428b      	cmp	r3, r1
 800f02a:	d00d      	beq.n	800f048 <HAL_TIM_PWM_Start+0x68>
 800f02c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800f030:	428b      	cmp	r3, r1
 800f032:	d009      	beq.n	800f048 <HAL_TIM_PWM_Start+0x68>
 800f034:	4293      	cmp	r3, r2
 800f036:	d007      	beq.n	800f048 <HAL_TIM_PWM_Start+0x68>
 800f038:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800f03c:	4293      	cmp	r3, r2
 800f03e:	d003      	beq.n	800f048 <HAL_TIM_PWM_Start+0x68>
 800f040:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800f044:	4293      	cmp	r3, r2
 800f046:	d104      	bne.n	800f052 <HAL_TIM_PWM_Start+0x72>
 800f048:	689a      	ldr	r2, [r3, #8]
 800f04a:	f002 0207 	and.w	r2, r2, #7
 800f04e:	2a06      	cmp	r2, #6
 800f050:	d020      	beq.n	800f094 <HAL_TIM_PWM_Start+0xb4>
 800f052:	681a      	ldr	r2, [r3, #0]
 800f054:	f042 0201 	orr.w	r2, r2, #1
 800f058:	2000      	movs	r0, #0
 800f05a:	601a      	str	r2, [r3, #0]
 800f05c:	4770      	bx	lr
 800f05e:	2904      	cmp	r1, #4
 800f060:	d022      	beq.n	800f0a8 <HAL_TIM_PWM_Start+0xc8>
 800f062:	2908      	cmp	r1, #8
 800f064:	d018      	beq.n	800f098 <HAL_TIM_PWM_Start+0xb8>
 800f066:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800f06a:	2b01      	cmp	r3, #1
 800f06c:	d001      	beq.n	800f072 <HAL_TIM_PWM_Start+0x92>
 800f06e:	2001      	movs	r0, #1
 800f070:	4770      	bx	lr
 800f072:	2904      	cmp	r1, #4
 800f074:	d01c      	beq.n	800f0b0 <HAL_TIM_PWM_Start+0xd0>
 800f076:	2908      	cmp	r1, #8
 800f078:	d012      	beq.n	800f0a0 <HAL_TIM_PWM_Start+0xc0>
 800f07a:	2302      	movs	r3, #2
 800f07c:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800f080:	e7b7      	b.n	800eff2 <HAL_TIM_PWM_Start+0x12>
 800f082:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800f084:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800f088:	645a      	str	r2, [r3, #68]	; 0x44
 800f08a:	689a      	ldr	r2, [r3, #8]
 800f08c:	f002 0207 	and.w	r2, r2, #7
 800f090:	2a06      	cmp	r2, #6
 800f092:	d1de      	bne.n	800f052 <HAL_TIM_PWM_Start+0x72>
 800f094:	2000      	movs	r0, #0
 800f096:	4770      	bx	lr
 800f098:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800f09c:	2b01      	cmp	r3, #1
 800f09e:	d1e6      	bne.n	800f06e <HAL_TIM_PWM_Start+0x8e>
 800f0a0:	2302      	movs	r3, #2
 800f0a2:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800f0a6:	e7a4      	b.n	800eff2 <HAL_TIM_PWM_Start+0x12>
 800f0a8:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800f0ac:	2b01      	cmp	r3, #1
 800f0ae:	d1de      	bne.n	800f06e <HAL_TIM_PWM_Start+0x8e>
 800f0b0:	2302      	movs	r3, #2
 800f0b2:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800f0b6:	e79c      	b.n	800eff2 <HAL_TIM_PWM_Start+0x12>
 800f0b8:	40010000 	.word	0x40010000
 800f0bc:	40010400 	.word	0x40010400

0800f0c0 <HAL_TIM_PWM_Stop>:
 800f0c0:	6803      	ldr	r3, [r0, #0]
 800f0c2:	b410      	push	{r4}
 800f0c4:	6a1a      	ldr	r2, [r3, #32]
 800f0c6:	f001 041f 	and.w	r4, r1, #31
 800f0ca:	f04f 0c01 	mov.w	ip, #1
 800f0ce:	fa0c fc04 	lsl.w	ip, ip, r4
 800f0d2:	ea22 020c 	bic.w	r2, r2, ip
 800f0d6:	621a      	str	r2, [r3, #32]
 800f0d8:	4a20      	ldr	r2, [pc, #128]	; (800f15c <HAL_TIM_PWM_Stop+0x9c>)
 800f0da:	6a1c      	ldr	r4, [r3, #32]
 800f0dc:	621c      	str	r4, [r3, #32]
 800f0de:	4293      	cmp	r3, r2
 800f0e0:	d015      	beq.n	800f10e <HAL_TIM_PWM_Stop+0x4e>
 800f0e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f0e6:	4293      	cmp	r3, r2
 800f0e8:	d011      	beq.n	800f10e <HAL_TIM_PWM_Stop+0x4e>
 800f0ea:	6a1c      	ldr	r4, [r3, #32]
 800f0ec:	f241 1211 	movw	r2, #4369	; 0x1111
 800f0f0:	4214      	tst	r4, r2
 800f0f2:	d104      	bne.n	800f0fe <HAL_TIM_PWM_Stop+0x3e>
 800f0f4:	6a1c      	ldr	r4, [r3, #32]
 800f0f6:	f240 4244 	movw	r2, #1092	; 0x444
 800f0fa:	4214      	tst	r4, r2
 800f0fc:	d022      	beq.n	800f144 <HAL_TIM_PWM_Stop+0x84>
 800f0fe:	2301      	movs	r3, #1
 800f100:	b9a1      	cbnz	r1, 800f12c <HAL_TIM_PWM_Stop+0x6c>
 800f102:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800f106:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f10a:	2000      	movs	r0, #0
 800f10c:	4770      	bx	lr
 800f10e:	6a1c      	ldr	r4, [r3, #32]
 800f110:	f241 1211 	movw	r2, #4369	; 0x1111
 800f114:	4214      	tst	r4, r2
 800f116:	d1e8      	bne.n	800f0ea <HAL_TIM_PWM_Stop+0x2a>
 800f118:	6a1c      	ldr	r4, [r3, #32]
 800f11a:	f240 4244 	movw	r2, #1092	; 0x444
 800f11e:	4214      	tst	r4, r2
 800f120:	d1e3      	bne.n	800f0ea <HAL_TIM_PWM_Stop+0x2a>
 800f122:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800f124:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800f128:	645a      	str	r2, [r3, #68]	; 0x44
 800f12a:	e7de      	b.n	800f0ea <HAL_TIM_PWM_Stop+0x2a>
 800f12c:	2904      	cmp	r1, #4
 800f12e:	d00e      	beq.n	800f14e <HAL_TIM_PWM_Stop+0x8e>
 800f130:	2908      	cmp	r1, #8
 800f132:	bf0c      	ite	eq
 800f134:	f880 3040 	strbeq.w	r3, [r0, #64]	; 0x40
 800f138:	f880 3041 	strbne.w	r3, [r0, #65]	; 0x41
 800f13c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f140:	2000      	movs	r0, #0
 800f142:	4770      	bx	lr
 800f144:	681a      	ldr	r2, [r3, #0]
 800f146:	f022 0201 	bic.w	r2, r2, #1
 800f14a:	601a      	str	r2, [r3, #0]
 800f14c:	e7d7      	b.n	800f0fe <HAL_TIM_PWM_Stop+0x3e>
 800f14e:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800f152:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f156:	2000      	movs	r0, #0
 800f158:	4770      	bx	lr
 800f15a:	bf00      	nop
 800f15c:	40010000 	.word	0x40010000

0800f160 <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800f160:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f164:	2b01      	cmp	r3, #1
 800f166:	f000 80d2 	beq.w	800f30e <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800f16a:	2301      	movs	r3, #1
{
 800f16c:	b570      	push	{r4, r5, r6, lr}
 800f16e:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800f170:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800f174:	2a0c      	cmp	r2, #12
 800f176:	d808      	bhi.n	800f18a <HAL_TIM_PWM_ConfigChannel+0x2a>
 800f178:	e8df f002 	tbb	[pc, r2]
 800f17c:	0707073e 	.word	0x0707073e
 800f180:	0707076b 	.word	0x0707076b
 800f184:	0707079b 	.word	0x0707079b
 800f188:	0c          	.byte	0x0c
 800f189:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800f18a:	2300      	movs	r3, #0
 800f18c:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800f190:	2001      	movs	r0, #1
}
 800f192:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800f194:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f196:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800f198:	6a1a      	ldr	r2, [r3, #32]
 800f19a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800f19e:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f1a0:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f1a2:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f1a4:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800f1a6:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f1aa:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f1ae:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800f1b0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f1b4:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800f1b8:	4d70      	ldr	r5, [pc, #448]	; (800f37c <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f1ba:	42ab      	cmp	r3, r5
 800f1bc:	f000 80c8 	beq.w	800f350 <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800f1c0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f1c4:	42ab      	cmp	r3, r5
 800f1c6:	f000 80c3 	beq.w	800f350 <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800f1ca:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800f1cc:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800f1ce:	6848      	ldr	r0, [r1, #4]
 800f1d0:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800f1d2:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f1d4:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f1d6:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f1d8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f1dc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800f1de:	69da      	ldr	r2, [r3, #28]
 800f1e0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f1e4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f1e6:	69da      	ldr	r2, [r3, #28]
 800f1e8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f1ec:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f1ee:	2300      	movs	r3, #0
 800f1f0:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f1f4:	2000      	movs	r0, #0
}
 800f1f6:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800f1f8:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f1fa:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f1fc:	6a1a      	ldr	r2, [r3, #32]
 800f1fe:	f022 0201 	bic.w	r2, r2, #1
 800f202:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f204:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f206:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f208:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800f20a:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f20e:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800f210:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800f212:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800f216:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800f218:	4d58      	ldr	r5, [pc, #352]	; (800f37c <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f21a:	42ab      	cmp	r3, r5
 800f21c:	d079      	beq.n	800f312 <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800f21e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f222:	42ab      	cmp	r3, r5
 800f224:	d075      	beq.n	800f312 <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800f226:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f228:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800f22a:	6848      	ldr	r0, [r1, #4]
 800f22c:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800f22e:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f230:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f232:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f234:	f042 0208 	orr.w	r2, r2, #8
 800f238:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800f23a:	699a      	ldr	r2, [r3, #24]
 800f23c:	f022 0204 	bic.w	r2, r2, #4
 800f240:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f242:	699a      	ldr	r2, [r3, #24]
 800f244:	430a      	orrs	r2, r1
 800f246:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f248:	2300      	movs	r3, #0
 800f24a:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f24e:	2000      	movs	r0, #0
}
 800f250:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800f252:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f254:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f256:	6a1a      	ldr	r2, [r3, #32]
 800f258:	f022 0210 	bic.w	r2, r2, #16
 800f25c:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f25e:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f260:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f262:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800f264:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f268:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f26c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800f26e:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f272:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800f276:	4d41      	ldr	r5, [pc, #260]	; (800f37c <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f278:	42ab      	cmp	r3, r5
 800f27a:	d059      	beq.n	800f330 <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800f27c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f280:	42ab      	cmp	r3, r5
 800f282:	d055      	beq.n	800f330 <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800f284:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f286:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800f288:	6848      	ldr	r0, [r1, #4]
 800f28a:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800f28c:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f28e:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f290:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f292:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f296:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800f298:	699a      	ldr	r2, [r3, #24]
 800f29a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f29e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f2a0:	699a      	ldr	r2, [r3, #24]
 800f2a2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f2a6:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f2a8:	2300      	movs	r3, #0
 800f2aa:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f2ae:	2000      	movs	r0, #0
}
 800f2b0:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800f2b2:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f2b4:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800f2b6:	6a1a      	ldr	r2, [r3, #32]
 800f2b8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800f2bc:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f2be:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f2c0:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f2c2:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800f2c4:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f2c8:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f2ca:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800f2cc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f2d0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800f2d4:	4d29      	ldr	r5, [pc, #164]	; (800f37c <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f2d6:	42ab      	cmp	r3, r5
 800f2d8:	d040      	beq.n	800f35c <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800f2da:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f2de:	42ab      	cmp	r3, r5
 800f2e0:	d03c      	beq.n	800f35c <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800f2e2:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800f2e4:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800f2e6:	6848      	ldr	r0, [r1, #4]
 800f2e8:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800f2ea:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f2ec:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f2ee:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f2f0:	f042 0208 	orr.w	r2, r2, #8
 800f2f4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800f2f6:	69da      	ldr	r2, [r3, #28]
 800f2f8:	f022 0204 	bic.w	r2, r2, #4
 800f2fc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f2fe:	69da      	ldr	r2, [r3, #28]
 800f300:	430a      	orrs	r2, r1
 800f302:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f304:	2300      	movs	r3, #0
 800f306:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f30a:	2000      	movs	r0, #0
}
 800f30c:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800f30e:	2002      	movs	r0, #2
}
 800f310:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800f312:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800f314:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800f318:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800f31a:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800f31e:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800f322:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800f326:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800f32a:	ea4e 0404 	orr.w	r4, lr, r4
 800f32e:	e77a      	b.n	800f226 <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f330:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800f332:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f336:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f33a:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800f33e:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f342:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800f346:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f34a:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800f34e:	e799      	b.n	800f284 <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f350:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800f352:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f356:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800f35a:	e736      	b.n	800f1ca <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f35c:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800f35e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f362:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f366:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800f36a:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f36e:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800f372:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f376:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800f37a:	e7b2      	b.n	800f2e2 <HAL_TIM_PWM_ConfigChannel+0x182>
 800f37c:	40010000 	.word	0x40010000

0800f380 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800f380:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f384:	2b01      	cmp	r3, #1
 800f386:	d075      	beq.n	800f474 <HAL_TIM_ConfigClockSource+0xf4>
 800f388:	4602      	mov	r2, r0
{
 800f38a:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f38c:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800f38e:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f390:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f394:	2001      	movs	r0, #1
 800f396:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f39a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f39c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800f3a0:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800f3a4:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800f3a6:	680b      	ldr	r3, [r1, #0]
 800f3a8:	2b60      	cmp	r3, #96	; 0x60
 800f3aa:	d065      	beq.n	800f478 <HAL_TIM_ConfigClockSource+0xf8>
 800f3ac:	d824      	bhi.n	800f3f8 <HAL_TIM_ConfigClockSource+0x78>
 800f3ae:	2b40      	cmp	r3, #64	; 0x40
 800f3b0:	d07c      	beq.n	800f4ac <HAL_TIM_ConfigClockSource+0x12c>
 800f3b2:	d94b      	bls.n	800f44c <HAL_TIM_ConfigClockSource+0xcc>
 800f3b4:	2b50      	cmp	r3, #80	; 0x50
 800f3b6:	d117      	bne.n	800f3e8 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f3b8:	684b      	ldr	r3, [r1, #4]
 800f3ba:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800f3bc:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f3be:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f3c2:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f3c4:	6a23      	ldr	r3, [r4, #32]
 800f3c6:	f023 0301 	bic.w	r3, r3, #1
 800f3ca:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f3cc:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f3ce:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f3d2:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800f3d6:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f3d8:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800f3da:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800f3dc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f3e0:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800f3e4:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f3e6:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800f3e8:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800f3ea:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f3ec:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f3f0:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800f3f4:	bc30      	pop	{r4, r5}
 800f3f6:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800f3f8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800f3fc:	d038      	beq.n	800f470 <HAL_TIM_ConfigClockSource+0xf0>
 800f3fe:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f402:	d110      	bne.n	800f426 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f404:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f408:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f40a:	432b      	orrs	r3, r5
 800f40c:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f40e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f412:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f416:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f418:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f41a:	68a3      	ldr	r3, [r4, #8]
 800f41c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800f420:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f422:	60a3      	str	r3, [r4, #8]
      break;
 800f424:	e7e0      	b.n	800f3e8 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f426:	2b70      	cmp	r3, #112	; 0x70
 800f428:	d1de      	bne.n	800f3e8 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f42a:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f42e:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f430:	432b      	orrs	r3, r5
 800f432:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f434:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f438:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f43c:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800f43e:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800f440:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800f442:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800f446:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800f448:	60a3      	str	r3, [r4, #8]
      break;
 800f44a:	e7cd      	b.n	800f3e8 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f44c:	2b20      	cmp	r3, #32
 800f44e:	d002      	beq.n	800f456 <HAL_TIM_ConfigClockSource+0xd6>
 800f450:	d90a      	bls.n	800f468 <HAL_TIM_ConfigClockSource+0xe8>
 800f452:	2b30      	cmp	r3, #48	; 0x30
 800f454:	d1c8      	bne.n	800f3e8 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800f456:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f458:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f45c:	430b      	orrs	r3, r1
 800f45e:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800f462:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f464:	60a3      	str	r3, [r4, #8]
}
 800f466:	e7bf      	b.n	800f3e8 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f468:	f033 0110 	bics.w	r1, r3, #16
 800f46c:	d1bc      	bne.n	800f3e8 <HAL_TIM_ConfigClockSource+0x68>
 800f46e:	e7f2      	b.n	800f456 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800f470:	2000      	movs	r0, #0
 800f472:	e7b9      	b.n	800f3e8 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800f474:	2002      	movs	r0, #2
}
 800f476:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f478:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f47a:	6848      	ldr	r0, [r1, #4]
 800f47c:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f47e:	f023 0310 	bic.w	r3, r3, #16
 800f482:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f484:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f486:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f488:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f48c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800f490:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f494:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800f498:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f49a:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f49c:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f49e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f4a2:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800f4a6:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f4a8:	60a3      	str	r3, [r4, #8]
}
 800f4aa:	e79d      	b.n	800f3e8 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f4ac:	684b      	ldr	r3, [r1, #4]
 800f4ae:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800f4b0:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f4b2:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f4b6:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f4b8:	6a23      	ldr	r3, [r4, #32]
 800f4ba:	f023 0301 	bic.w	r3, r3, #1
 800f4be:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f4c0:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f4c2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f4c6:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f4ca:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f4cc:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f4ce:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f4d0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f4d4:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800f4d8:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f4da:	60a3      	str	r3, [r4, #8]
}
 800f4dc:	e784      	b.n	800f3e8 <HAL_TIM_ConfigClockSource+0x68>
 800f4de:	bf00      	nop

0800f4e0 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800f4e0:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800f4e4:	2a01      	cmp	r2, #1
 800f4e6:	d050      	beq.n	800f58a <HAL_TIM_SlaveConfigSynchro+0xaa>
 800f4e8:	4603      	mov	r3, r0
{
 800f4ea:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f4ec:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800f4ee:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f4f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f4f4:	2001      	movs	r0, #1
 800f4f6:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f4fa:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f4fc:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f4fe:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f500:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f504:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800f506:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f50a:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800f50c:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800f50e:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800f510:	d060      	beq.n	800f5d4 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800f512:	d90f      	bls.n	800f534 <HAL_TIM_SlaveConfigSynchro+0x54>
 800f514:	2860      	cmp	r0, #96	; 0x60
 800f516:	d03a      	beq.n	800f58e <HAL_TIM_SlaveConfigSynchro+0xae>
 800f518:	2870      	cmp	r0, #112	; 0x70
 800f51a:	d10e      	bne.n	800f53a <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f51c:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800f520:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f522:	432a      	orrs	r2, r5
 800f524:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f526:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f52a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800f52e:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800f530:	60a2      	str	r2, [r4, #8]
 800f532:	e00f      	b.n	800f554 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800f534:	2840      	cmp	r0, #64	; 0x40
 800f536:	d03d      	beq.n	800f5b4 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800f538:	d907      	bls.n	800f54a <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800f53a:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f53c:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f53e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f542:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800f546:	bc30      	pop	{r4, r5}
 800f548:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f54a:	2820      	cmp	r0, #32
 800f54c:	d002      	beq.n	800f554 <HAL_TIM_SlaveConfigSynchro+0x74>
 800f54e:	d912      	bls.n	800f576 <HAL_TIM_SlaveConfigSynchro+0x96>
 800f550:	2830      	cmp	r0, #48	; 0x30
 800f552:	d1f2      	bne.n	800f53a <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800f554:	68e2      	ldr	r2, [r4, #12]
 800f556:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800f55a:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f55c:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800f55e:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800f560:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f562:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800f566:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800f568:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f56c:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800f570:	4608      	mov	r0, r1
}
 800f572:	bc30      	pop	{r4, r5}
 800f574:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f576:	f030 0210 	bics.w	r2, r0, #16
 800f57a:	d0eb      	beq.n	800f554 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800f57c:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f57e:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f580:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f584:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800f588:	e7dd      	b.n	800f546 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800f58a:	2002      	movs	r0, #2
}
 800f58c:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f58e:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f590:	6888      	ldr	r0, [r1, #8]
 800f592:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f594:	f022 0210 	bic.w	r2, r2, #16
 800f598:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f59a:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f59c:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f59e:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f5a2:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f5a6:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800f5aa:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800f5ae:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f5b0:	6222      	str	r2, [r4, #32]
 800f5b2:	e7cf      	b.n	800f554 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800f5b4:	2d05      	cmp	r5, #5
 800f5b6:	d0c0      	beq.n	800f53a <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800f5b8:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f5ba:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f5bc:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f5be:	f022 0201 	bic.w	r2, r2, #1
 800f5c2:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800f5c4:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f5c6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f5ca:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800f5ce:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800f5d0:	6220      	str	r0, [r4, #32]
      break;
 800f5d2:	e7bf      	b.n	800f554 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f5d4:	688a      	ldr	r2, [r1, #8]
 800f5d6:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800f5d8:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f5da:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f5de:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f5e0:	6a22      	ldr	r2, [r4, #32]
 800f5e2:	f022 0201 	bic.w	r2, r2, #1
 800f5e6:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f5e8:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f5ea:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f5ee:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f5f2:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800f5f4:	6221      	str	r1, [r4, #32]
 800f5f6:	e7ad      	b.n	800f554 <HAL_TIM_SlaveConfigSynchro+0x74>

0800f5f8 <HAL_TIM_OC_DelayElapsedCallback>:
 800f5f8:	4770      	bx	lr
 800f5fa:	bf00      	nop

0800f5fc <HAL_TIM_IC_CaptureCallback>:
 800f5fc:	4770      	bx	lr
 800f5fe:	bf00      	nop

0800f600 <HAL_TIM_PWM_PulseFinishedCallback>:
 800f600:	4770      	bx	lr
 800f602:	bf00      	nop

0800f604 <HAL_TIM_TriggerCallback>:
 800f604:	4770      	bx	lr
 800f606:	bf00      	nop

0800f608 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f608:	6803      	ldr	r3, [r0, #0]
 800f60a:	691a      	ldr	r2, [r3, #16]
 800f60c:	0791      	lsls	r1, r2, #30
{
 800f60e:	b510      	push	{r4, lr}
 800f610:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f612:	d502      	bpl.n	800f61a <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800f614:	68da      	ldr	r2, [r3, #12]
 800f616:	0792      	lsls	r2, r2, #30
 800f618:	d45f      	bmi.n	800f6da <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f61a:	691a      	ldr	r2, [r3, #16]
 800f61c:	0750      	lsls	r0, r2, #29
 800f61e:	d502      	bpl.n	800f626 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800f620:	68da      	ldr	r2, [r3, #12]
 800f622:	0751      	lsls	r1, r2, #29
 800f624:	d446      	bmi.n	800f6b4 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f626:	691a      	ldr	r2, [r3, #16]
 800f628:	0712      	lsls	r2, r2, #28
 800f62a:	d502      	bpl.n	800f632 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800f62c:	68da      	ldr	r2, [r3, #12]
 800f62e:	0710      	lsls	r0, r2, #28
 800f630:	d42e      	bmi.n	800f690 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f632:	691a      	ldr	r2, [r3, #16]
 800f634:	06d2      	lsls	r2, r2, #27
 800f636:	d502      	bpl.n	800f63e <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800f638:	68da      	ldr	r2, [r3, #12]
 800f63a:	06d0      	lsls	r0, r2, #27
 800f63c:	d418      	bmi.n	800f670 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f63e:	691a      	ldr	r2, [r3, #16]
 800f640:	07d1      	lsls	r1, r2, #31
 800f642:	d502      	bpl.n	800f64a <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800f644:	68da      	ldr	r2, [r3, #12]
 800f646:	07d2      	lsls	r2, r2, #31
 800f648:	d45d      	bmi.n	800f706 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f64a:	691a      	ldr	r2, [r3, #16]
 800f64c:	0610      	lsls	r0, r2, #24
 800f64e:	d502      	bpl.n	800f656 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800f650:	68da      	ldr	r2, [r3, #12]
 800f652:	0611      	lsls	r1, r2, #24
 800f654:	d45f      	bmi.n	800f716 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f656:	691a      	ldr	r2, [r3, #16]
 800f658:	0652      	lsls	r2, r2, #25
 800f65a:	d502      	bpl.n	800f662 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800f65c:	68da      	ldr	r2, [r3, #12]
 800f65e:	0650      	lsls	r0, r2, #25
 800f660:	d461      	bmi.n	800f726 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f662:	691a      	ldr	r2, [r3, #16]
 800f664:	0691      	lsls	r1, r2, #26
 800f666:	d502      	bpl.n	800f66e <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800f668:	68da      	ldr	r2, [r3, #12]
 800f66a:	0692      	lsls	r2, r2, #26
 800f66c:	d443      	bmi.n	800f6f6 <HAL_TIM_IRQHandler+0xee>
}
 800f66e:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f670:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f674:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f676:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f678:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f67a:	69db      	ldr	r3, [r3, #28]
 800f67c:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f680:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f682:	d064      	beq.n	800f74e <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800f684:	f7ff ffba 	bl	800f5fc <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f688:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f68a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f68c:	7722      	strb	r2, [r4, #28]
 800f68e:	e7d6      	b.n	800f63e <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f690:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f694:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f696:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f698:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f69a:	69db      	ldr	r3, [r3, #28]
 800f69c:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800f69e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f6a0:	d152      	bne.n	800f748 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f6a2:	f7ff ffa9 	bl	800f5f8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f6a6:	4620      	mov	r0, r4
 800f6a8:	f7ff ffaa 	bl	800f600 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f6ac:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f6ae:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f6b0:	7722      	strb	r2, [r4, #28]
 800f6b2:	e7be      	b.n	800f632 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f6b4:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f6b8:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f6ba:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f6bc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f6be:	699b      	ldr	r3, [r3, #24]
 800f6c0:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f6c4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f6c6:	d13c      	bne.n	800f742 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f6c8:	f7ff ff96 	bl	800f5f8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f6cc:	4620      	mov	r0, r4
 800f6ce:	f7ff ff97 	bl	800f600 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f6d2:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f6d4:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f6d6:	7722      	strb	r2, [r4, #28]
 800f6d8:	e7a5      	b.n	800f626 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f6da:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f6de:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f6e0:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f6e2:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800f6e4:	699b      	ldr	r3, [r3, #24]
 800f6e6:	079b      	lsls	r3, r3, #30
 800f6e8:	d025      	beq.n	800f736 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800f6ea:	f7ff ff87 	bl	800f5fc <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f6ee:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f6f0:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f6f2:	7722      	strb	r2, [r4, #28]
 800f6f4:	e791      	b.n	800f61a <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f6f6:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800f6fa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f6fc:	611a      	str	r2, [r3, #16]
}
 800f6fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800f702:	f000 b86b 	b.w	800f7dc <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800f706:	f06f 0201 	mvn.w	r2, #1
 800f70a:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800f70c:	4620      	mov	r0, r4
 800f70e:	f7f2 fcb1 	bl	8002074 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f712:	6823      	ldr	r3, [r4, #0]
 800f714:	e799      	b.n	800f64a <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800f716:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800f71a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800f71c:	4620      	mov	r0, r4
 800f71e:	f000 f85f 	bl	800f7e0 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f722:	6823      	ldr	r3, [r4, #0]
 800f724:	e797      	b.n	800f656 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800f726:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800f72a:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800f72c:	4620      	mov	r0, r4
 800f72e:	f7ff ff69 	bl	800f604 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f732:	6823      	ldr	r3, [r4, #0]
 800f734:	e795      	b.n	800f662 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800f736:	f7ff ff5f 	bl	800f5f8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f73a:	4620      	mov	r0, r4
 800f73c:	f7ff ff60 	bl	800f600 <HAL_TIM_PWM_PulseFinishedCallback>
 800f740:	e7d5      	b.n	800f6ee <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800f742:	f7ff ff5b 	bl	800f5fc <HAL_TIM_IC_CaptureCallback>
 800f746:	e7c4      	b.n	800f6d2 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800f748:	f7ff ff58 	bl	800f5fc <HAL_TIM_IC_CaptureCallback>
 800f74c:	e7ae      	b.n	800f6ac <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f74e:	f7ff ff53 	bl	800f5f8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f752:	4620      	mov	r0, r4
 800f754:	f7ff ff54 	bl	800f600 <HAL_TIM_PWM_PulseFinishedCallback>
 800f758:	e796      	b.n	800f688 <HAL_TIM_IRQHandler+0x80>
 800f75a:	bf00      	nop

0800f75c <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800f75c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f760:	2b01      	cmp	r3, #1
 800f762:	d037      	beq.n	800f7d4 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800f764:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f766:	2202      	movs	r2, #2
{
 800f768:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f76a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800f76e:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f770:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800f772:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800f774:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f778:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800f77a:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800f77c:	4a16      	ldr	r2, [pc, #88]	; (800f7d8 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800f77e:	4293      	cmp	r3, r2
 800f780:	d01a      	beq.n	800f7b8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f782:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f786:	d017      	beq.n	800f7b8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f788:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800f78c:	4293      	cmp	r3, r2
 800f78e:	d013      	beq.n	800f7b8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f790:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f794:	4293      	cmp	r3, r2
 800f796:	d00f      	beq.n	800f7b8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f798:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f79c:	4293      	cmp	r3, r2
 800f79e:	d00b      	beq.n	800f7b8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f7a0:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800f7a4:	4293      	cmp	r3, r2
 800f7a6:	d007      	beq.n	800f7b8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f7a8:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800f7ac:	4293      	cmp	r3, r2
 800f7ae:	d003      	beq.n	800f7b8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f7b0:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800f7b4:	4293      	cmp	r3, r2
 800f7b6:	d104      	bne.n	800f7c2 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f7b8:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800f7ba:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f7be:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800f7c0:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800f7c2:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f7c4:	2201      	movs	r2, #1
 800f7c6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f7ca:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800f7ce:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800f7d0:	4618      	mov	r0, r3
}
 800f7d2:	4770      	bx	lr
  __HAL_LOCK(htim);
 800f7d4:	2002      	movs	r0, #2
}
 800f7d6:	4770      	bx	lr
 800f7d8:	40010000 	.word	0x40010000

0800f7dc <HAL_TIMEx_CommutCallback>:
 800f7dc:	4770      	bx	lr
 800f7de:	bf00      	nop

0800f7e0 <HAL_TIMEx_BreakCallback>:
 800f7e0:	4770      	bx	lr
 800f7e2:	bf00      	nop

0800f7e4 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f7e4:	680b      	ldr	r3, [r1, #0]
{
 800f7e6:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f7e8:	b9d3      	cbnz	r3, 800f820 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f7ea:	6803      	ldr	r3, [r0, #0]
 800f7ec:	684c      	ldr	r4, [r1, #4]
 800f7ee:	688a      	ldr	r2, [r1, #8]
 800f7f0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f7f4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f7f8:	4323      	orrs	r3, r4
 800f7fa:	4313      	orrs	r3, r2
 800f7fc:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800f800:	4323      	orrs	r3, r4
 800f802:	4313      	orrs	r3, r2
 800f804:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800f808:	4323      	orrs	r3, r4
 800f80a:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800f80e:	4313      	orrs	r3, r2
 800f810:	432b      	orrs	r3, r5
 800f812:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f814:	4323      	orrs	r3, r4
 800f816:	4313      	orrs	r3, r2
 800f818:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800f81a:	bc30      	pop	{r4, r5}
 800f81c:	2000      	movs	r0, #0
 800f81e:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f820:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800f824:	6803      	ldr	r3, [r0, #0]
 800f826:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800f82a:	4323      	orrs	r3, r4
 800f82c:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800f82e:	4313      	orrs	r3, r2
 800f830:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f832:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f834:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f836:	6843      	ldr	r3, [r0, #4]
 800f838:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f83c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f840:	4313      	orrs	r3, r2
 800f842:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f846:	4323      	orrs	r3, r4
 800f848:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f84c:	4313      	orrs	r3, r2
 800f84e:	432b      	orrs	r3, r5
 800f850:	698a      	ldr	r2, [r1, #24]
 800f852:	4323      	orrs	r3, r4
 800f854:	4313      	orrs	r3, r2
 800f856:	6043      	str	r3, [r0, #4]
}
 800f858:	bc30      	pop	{r4, r5}
 800f85a:	2000      	movs	r0, #0
 800f85c:	4770      	bx	lr
 800f85e:	bf00      	nop

0800f860 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800f860:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f862:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800f864:	bb02      	cbnz	r2, 800f8a8 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f866:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f86a:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f86e:	3c01      	subs	r4, #1
 800f870:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f874:	3a01      	subs	r2, #1
 800f876:	4313      	orrs	r3, r2
 800f878:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f87c:	3c01      	subs	r4, #1
 800f87e:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800f882:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f886:	3a01      	subs	r2, #1
 800f888:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800f88c:	698a      	ldr	r2, [r1, #24]
 800f88e:	1e69      	subs	r1, r5, #1
 800f890:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f894:	1e61      	subs	r1, r4, #1
 800f896:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800f89a:	3a01      	subs	r2, #1
 800f89c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f8a0:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800f8a2:	bc30      	pop	{r4, r5}
 800f8a4:	2000      	movs	r0, #0
 800f8a6:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f8a8:	68cc      	ldr	r4, [r1, #12]
 800f8aa:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f8ac:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f8ae:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800f8b2:	3c01      	subs	r4, #1
 800f8b4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800f8b8:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800f8bc:	3a01      	subs	r2, #1
 800f8be:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800f8c2:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f8c4:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f8c8:	68c3      	ldr	r3, [r0, #12]
 800f8ca:	3c01      	subs	r4, #1
 800f8cc:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f8d0:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f8d4:	3a01      	subs	r2, #1
 800f8d6:	690c      	ldr	r4, [r1, #16]
 800f8d8:	4313      	orrs	r3, r2
 800f8da:	698a      	ldr	r2, [r1, #24]
 800f8dc:	1e69      	subs	r1, r5, #1
 800f8de:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800f8e2:	1e61      	subs	r1, r4, #1
 800f8e4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f8e8:	3a01      	subs	r2, #1
 800f8ea:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f8ee:	60c3      	str	r3, [r0, #12]
}
 800f8f0:	bc30      	pop	{r4, r5}
 800f8f2:	2000      	movs	r0, #0
 800f8f4:	4770      	bx	lr
 800f8f6:	bf00      	nop

0800f8f8 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800f8f8:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f8fa:	680b      	ldr	r3, [r1, #0]
{
 800f8fc:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f8fe:	684a      	ldr	r2, [r1, #4]
{
 800f900:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f902:	4313      	orrs	r3, r2
 800f904:	6900      	ldr	r0, [r0, #16]
 800f906:	68ca      	ldr	r2, [r1, #12]
 800f908:	0d80      	lsrs	r0, r0, #22
 800f90a:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800f90e:	688a      	ldr	r2, [r1, #8]
 800f910:	0580      	lsls	r0, r0, #22
 800f912:	4303      	orrs	r3, r0
 800f914:	3a01      	subs	r2, #1
 800f916:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800f91a:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800f91c:	f7fb fef6 	bl	800b70c <HAL_GetTick>
 800f920:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f922:	1c6b      	adds	r3, r5, #1
 800f924:	d105      	bne.n	800f932 <FMC_SDRAM_SendCommand+0x3a>
 800f926:	69a3      	ldr	r3, [r4, #24]
 800f928:	f013 0320 	ands.w	r3, r3, #32
 800f92c:	d1fb      	bne.n	800f926 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800f92e:	4618      	mov	r0, r3
}
 800f930:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f932:	69a3      	ldr	r3, [r4, #24]
 800f934:	f013 0320 	ands.w	r3, r3, #32
 800f938:	d0f9      	beq.n	800f92e <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800f93a:	b125      	cbz	r5, 800f946 <FMC_SDRAM_SendCommand+0x4e>
 800f93c:	f7fb fee6 	bl	800b70c <HAL_GetTick>
 800f940:	1b80      	subs	r0, r0, r6
 800f942:	42a8      	cmp	r0, r5
 800f944:	d9ed      	bls.n	800f922 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800f946:	2003      	movs	r0, #3
}
 800f948:	bd70      	pop	{r4, r5, r6, pc}
 800f94a:	bf00      	nop

0800f94c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f94c:	6943      	ldr	r3, [r0, #20]
 800f94e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800f952:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f954:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800f958:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800f95c:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f95e:	6151      	str	r1, [r2, #20]
}
 800f960:	4770      	bx	lr
 800f962:	bf00      	nop

0800f964 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800f964:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800f966:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f96a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800f96c:	f002 fb02 	bl	8011f74 <xTaskGetSchedulerState>
 800f970:	2801      	cmp	r0, #1
 800f972:	d100      	bne.n	800f976 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800f974:	bd08      	pop	{r3, pc}
 800f976:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800f97a:	f000 bc43 	b.w	8010204 <xPortSysTickHandler>
 800f97e:	bf00      	nop

0800f980 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f980:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800f984:	b92b      	cbnz	r3, 800f992 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800f986:	4b06      	ldr	r3, [pc, #24]	; (800f9a0 <osKernelInitialize+0x20>)
 800f988:	6818      	ldr	r0, [r3, #0]
 800f98a:	b928      	cbnz	r0, 800f998 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800f98c:	2201      	movs	r2, #1
 800f98e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800f990:	4770      	bx	lr
    stat = osErrorISR;
 800f992:	f06f 0005 	mvn.w	r0, #5
 800f996:	4770      	bx	lr
    } else {
      stat = osError;
 800f998:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800f99c:	4770      	bx	lr
 800f99e:	bf00      	nop
 800f9a0:	20002d08 	.word	0x20002d08

0800f9a4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800f9a4:	b510      	push	{r4, lr}
 800f9a6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f9aa:	b974      	cbnz	r4, 800f9ca <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800f9ac:	4b08      	ldr	r3, [pc, #32]	; (800f9d0 <osKernelStart+0x2c>)
 800f9ae:	681a      	ldr	r2, [r3, #0]
 800f9b0:	2a01      	cmp	r2, #1
 800f9b2:	d107      	bne.n	800f9c4 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800f9b4:	4907      	ldr	r1, [pc, #28]	; (800f9d4 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800f9b6:	2202      	movs	r2, #2
 800f9b8:	77cc      	strb	r4, [r1, #31]
 800f9ba:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800f9bc:	f002 f8b4 	bl	8011b28 <vTaskStartScheduler>
      stat = osOK;
 800f9c0:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800f9c2:	bd10      	pop	{r4, pc}
      stat = osError;
 800f9c4:	f04f 30ff 	mov.w	r0, #4294967295
}
 800f9c8:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f9ca:	f06f 0005 	mvn.w	r0, #5
}
 800f9ce:	bd10      	pop	{r4, pc}
 800f9d0:	20002d08 	.word	0x20002d08
 800f9d4:	e000ed00 	.word	0xe000ed00

0800f9d8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f9d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f9da:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800f9dc:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f9de:	4615      	mov	r5, r2
  hTask = NULL;
 800f9e0:	9405      	str	r4, [sp, #20]
 800f9e2:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800f9e6:	b9ea      	cbnz	r2, 800fa24 <osThreadNew+0x4c>
 800f9e8:	b350      	cbz	r0, 800fa40 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800f9ea:	b1f5      	cbz	r5, 800fa2a <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800f9ec:	69ab      	ldr	r3, [r5, #24]
 800f9ee:	bb5b      	cbnz	r3, 800fa48 <osThreadNew+0x70>
 800f9f0:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f9f2:	686a      	ldr	r2, [r5, #4]
 800f9f4:	07d2      	lsls	r2, r2, #31
 800f9f6:	d423      	bmi.n	800fa40 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800f9f8:	696e      	ldr	r6, [r5, #20]
 800f9fa:	b34e      	cbz	r6, 800fa50 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800f9fc:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800fa00:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800fa02:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800fa04:	b34c      	cbz	r4, 800fa5a <osThreadNew+0x82>
 800fa06:	68ea      	ldr	r2, [r5, #12]
 800fa08:	2aab      	cmp	r2, #171	; 0xab
 800fa0a:	d919      	bls.n	800fa40 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800fa0c:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800fa0e:	b1bd      	cbz	r5, 800fa40 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800fa10:	b1b6      	cbz	r6, 800fa40 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800fa12:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800fa16:	9300      	str	r3, [sp, #0]
 800fa18:	4662      	mov	r2, ip
 800fa1a:	460b      	mov	r3, r1
 800fa1c:	4639      	mov	r1, r7
 800fa1e:	f001 ffc1 	bl	80119a4 <xTaskCreateStatic>
 800fa22:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800fa24:	4620      	mov	r0, r4
 800fa26:	b007      	add	sp, #28
 800fa28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fa2a:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800fa2c:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800fa2e:	ac05      	add	r4, sp, #20
 800fa30:	9300      	str	r3, [sp, #0]
 800fa32:	9401      	str	r4, [sp, #4]
 800fa34:	460b      	mov	r3, r1
 800fa36:	4629      	mov	r1, r5
 800fa38:	f001 ffee 	bl	8011a18 <xTaskCreate>
 800fa3c:	2801      	cmp	r0, #1
 800fa3e:	d00a      	beq.n	800fa56 <osThreadNew+0x7e>
        return (NULL);
 800fa40:	2400      	movs	r4, #0
}
 800fa42:	4620      	mov	r0, r4
 800fa44:	b007      	add	sp, #28
 800fa46:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800fa48:	1e5c      	subs	r4, r3, #1
 800fa4a:	2c37      	cmp	r4, #55	; 0x37
 800fa4c:	d9d1      	bls.n	800f9f2 <osThreadNew+0x1a>
 800fa4e:	e7f7      	b.n	800fa40 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800fa50:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800fa54:	e7d4      	b.n	800fa00 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800fa56:	9c05      	ldr	r4, [sp, #20]
 800fa58:	e7e4      	b.n	800fa24 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800fa5a:	68ee      	ldr	r6, [r5, #12]
 800fa5c:	2e00      	cmp	r6, #0
 800fa5e:	d1e1      	bne.n	800fa24 <osThreadNew+0x4c>
 800fa60:	692d      	ldr	r5, [r5, #16]
 800fa62:	2d00      	cmp	r5, #0
 800fa64:	d1de      	bne.n	800fa24 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800fa66:	fa1f f28c 	uxth.w	r2, ip
 800fa6a:	463d      	mov	r5, r7
 800fa6c:	e7df      	b.n	800fa2e <osThreadNew+0x56>
 800fa6e:	bf00      	nop

0800fa70 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800fa70:	b510      	push	{r4, lr}
 800fa72:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800fa76:	b92c      	cbnz	r4, 800fa84 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800fa78:	b900      	cbnz	r0, 800fa7c <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800fa7a:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800fa7c:	f001 fffe 	bl	8011a7c <vTaskDelay>
    stat = osOK;
 800fa80:	4620      	mov	r0, r4
}
 800fa82:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800fa84:	f06f 0005 	mvn.w	r0, #5
}
 800fa88:	bd10      	pop	{r4, pc}
 800fa8a:	bf00      	nop

0800fa8c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800fa8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa8e:	b083      	sub	sp, #12
 800fa90:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800fa94:	b9fe      	cbnz	r6, 800fad6 <osSemaphoreNew+0x4a>
 800fa96:	b1f0      	cbz	r0, 800fad6 <osSemaphoreNew+0x4a>
 800fa98:	4288      	cmp	r0, r1
 800fa9a:	460f      	mov	r7, r1
 800fa9c:	d31b      	bcc.n	800fad6 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800fa9e:	4615      	mov	r5, r2
 800faa0:	b192      	cbz	r2, 800fac8 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800faa2:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800faa6:	b1d2      	cbz	r2, 800fade <osSemaphoreNew+0x52>
 800faa8:	2b4f      	cmp	r3, #79	; 0x4f
 800faaa:	d914      	bls.n	800fad6 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800faac:	2801      	cmp	r0, #1
 800faae:	d038      	beq.n	800fb22 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800fab0:	f000 fd8e 	bl	80105d0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800fab4:	4604      	mov	r4, r0
 800fab6:	b170      	cbz	r0, 800fad6 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800fab8:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800faba:	4620      	mov	r0, r4
 800fabc:	4629      	mov	r1, r5
 800fabe:	f001 fc39 	bl	8011334 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800fac2:	4620      	mov	r0, r4
 800fac4:	b003      	add	sp, #12
 800fac6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800fac8:	2801      	cmp	r0, #1
 800faca:	d012      	beq.n	800faf2 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800facc:	f000 fde0 	bl	8010690 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800fad0:	4604      	mov	r4, r0
 800fad2:	2800      	cmp	r0, #0
 800fad4:	d1f1      	bne.n	800faba <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800fad6:	2400      	movs	r4, #0
}
 800fad8:	4620      	mov	r0, r4
 800fada:	b003      	add	sp, #12
 800fadc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800fade:	2b00      	cmp	r3, #0
 800fae0:	d1f9      	bne.n	800fad6 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800fae2:	2801      	cmp	r0, #1
 800fae4:	d005      	beq.n	800faf2 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800fae6:	f000 fdd3 	bl	8010690 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800faea:	4604      	mov	r4, r0
 800faec:	2800      	cmp	r0, #0
 800faee:	d1e3      	bne.n	800fab8 <osSemaphoreNew+0x2c>
 800faf0:	e7f1      	b.n	800fad6 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800faf2:	2203      	movs	r2, #3
 800faf4:	2100      	movs	r1, #0
 800faf6:	2001      	movs	r0, #1
 800faf8:	f000 fd28 	bl	801054c <xQueueGenericCreate>
 800fafc:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800fafe:	2c00      	cmp	r4, #0
 800fb00:	d0e9      	beq.n	800fad6 <osSemaphoreNew+0x4a>
 800fb02:	b917      	cbnz	r7, 800fb0a <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800fb04:	2d00      	cmp	r5, #0
 800fb06:	d1d7      	bne.n	800fab8 <osSemaphoreNew+0x2c>
 800fb08:	e7d7      	b.n	800faba <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800fb0a:	2300      	movs	r3, #0
 800fb0c:	461a      	mov	r2, r3
 800fb0e:	4619      	mov	r1, r3
 800fb10:	4620      	mov	r0, r4
 800fb12:	f000 fe03 	bl	801071c <xQueueGenericSend>
 800fb16:	2801      	cmp	r0, #1
 800fb18:	d0f4      	beq.n	800fb04 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800fb1a:	4620      	mov	r0, r4
 800fb1c:	f001 fbc4 	bl	80112a8 <vQueueDelete>
 800fb20:	e7d9      	b.n	800fad6 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800fb22:	4613      	mov	r3, r2
 800fb24:	2203      	movs	r2, #3
 800fb26:	9200      	str	r2, [sp, #0]
 800fb28:	4631      	mov	r1, r6
 800fb2a:	4632      	mov	r2, r6
 800fb2c:	f000 fca0 	bl	8010470 <xQueueGenericCreateStatic>
 800fb30:	4604      	mov	r4, r0
 800fb32:	e7e4      	b.n	800fafe <osSemaphoreNew+0x72>

0800fb34 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800fb34:	b370      	cbz	r0, 800fb94 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800fb36:	b510      	push	{r4, lr}
 800fb38:	460c      	mov	r4, r1
 800fb3a:	b082      	sub	sp, #8
 800fb3c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800fb40:	b1c3      	cbz	r3, 800fb74 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800fb42:	bb21      	cbnz	r1, 800fb8e <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800fb44:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fb46:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800fb48:	f001 fb2c 	bl	80111a4 <xQueueReceiveFromISR>
 800fb4c:	2801      	cmp	r0, #1
 800fb4e:	d11a      	bne.n	800fb86 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fb50:	9b01      	ldr	r3, [sp, #4]
 800fb52:	b913      	cbnz	r3, 800fb5a <osSemaphoreAcquire+0x26>
  stat = osOK;
 800fb54:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800fb56:	b002      	add	sp, #8
 800fb58:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800fb5a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fb5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fb62:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb66:	f3bf 8f4f 	dsb	sy
 800fb6a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fb6e:	4620      	mov	r0, r4
}
 800fb70:	b002      	add	sp, #8
 800fb72:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800fb74:	f001 f98c 	bl	8010e90 <xQueueSemaphoreTake>
 800fb78:	2801      	cmp	r0, #1
 800fb7a:	d0eb      	beq.n	800fb54 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800fb7c:	b11c      	cbz	r4, 800fb86 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800fb7e:	f06f 0001 	mvn.w	r0, #1
}
 800fb82:	b002      	add	sp, #8
 800fb84:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800fb86:	f06f 0002 	mvn.w	r0, #2
}
 800fb8a:	b002      	add	sp, #8
 800fb8c:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800fb8e:	f06f 0003 	mvn.w	r0, #3
 800fb92:	e7e0      	b.n	800fb56 <osSemaphoreAcquire+0x22>
 800fb94:	f06f 0003 	mvn.w	r0, #3
}
 800fb98:	4770      	bx	lr
 800fb9a:	bf00      	nop

0800fb9c <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800fb9c:	b330      	cbz	r0, 800fbec <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800fb9e:	b510      	push	{r4, lr}
 800fba0:	b082      	sub	sp, #8
 800fba2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800fba6:	b1ab      	cbz	r3, 800fbd4 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800fba8:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fbaa:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800fbac:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fbae:	f000 ff99 	bl	8010ae4 <xQueueGiveFromISR>
 800fbb2:	2801      	cmp	r0, #1
 800fbb4:	d117      	bne.n	800fbe6 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800fbb6:	9b01      	ldr	r3, [sp, #4]
 800fbb8:	b193      	cbz	r3, 800fbe0 <osSemaphoreRelease+0x44>
 800fbba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fbbe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fbc2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fbc6:	f3bf 8f4f 	dsb	sy
 800fbca:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fbce:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800fbd0:	b002      	add	sp, #8
 800fbd2:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800fbd4:	461a      	mov	r2, r3
 800fbd6:	4619      	mov	r1, r3
 800fbd8:	f000 fda0 	bl	801071c <xQueueGenericSend>
 800fbdc:	2801      	cmp	r0, #1
 800fbde:	d102      	bne.n	800fbe6 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800fbe0:	2000      	movs	r0, #0
}
 800fbe2:	b002      	add	sp, #8
 800fbe4:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800fbe6:	f06f 0002 	mvn.w	r0, #2
 800fbea:	e7fa      	b.n	800fbe2 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800fbec:	f06f 0003 	mvn.w	r0, #3
}
 800fbf0:	4770      	bx	lr
 800fbf2:	bf00      	nop

0800fbf4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800fbf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fbf6:	b085      	sub	sp, #20
 800fbf8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800fbfc:	b987      	cbnz	r7, 800fc20 <osMessageQueueNew+0x2c>
 800fbfe:	4605      	mov	r5, r0
 800fc00:	b170      	cbz	r0, 800fc20 <osMessageQueueNew+0x2c>
 800fc02:	b169      	cbz	r1, 800fc20 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800fc04:	4614      	mov	r4, r2
 800fc06:	b1ea      	cbz	r2, 800fc44 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fc08:	6893      	ldr	r3, [r2, #8]
 800fc0a:	b163      	cbz	r3, 800fc26 <osMessageQueueNew+0x32>
 800fc0c:	68d2      	ldr	r2, [r2, #12]
 800fc0e:	2a4f      	cmp	r2, #79	; 0x4f
 800fc10:	d906      	bls.n	800fc20 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800fc12:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fc14:	b122      	cbz	r2, 800fc20 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800fc16:	6966      	ldr	r6, [r4, #20]
 800fc18:	fb01 f505 	mul.w	r5, r1, r5
 800fc1c:	42ae      	cmp	r6, r5
 800fc1e:	d21c      	bcs.n	800fc5a <osMessageQueueNew+0x66>
  hQueue = NULL;
 800fc20:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800fc22:	b005      	add	sp, #20
 800fc24:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800fc26:	68d3      	ldr	r3, [r2, #12]
 800fc28:	2b00      	cmp	r3, #0
 800fc2a:	d1f9      	bne.n	800fc20 <osMessageQueueNew+0x2c>
 800fc2c:	6913      	ldr	r3, [r2, #16]
 800fc2e:	2b00      	cmp	r3, #0
 800fc30:	d1f6      	bne.n	800fc20 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800fc32:	6952      	ldr	r2, [r2, #20]
 800fc34:	2a00      	cmp	r2, #0
 800fc36:	d1f3      	bne.n	800fc20 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800fc38:	f000 fc88 	bl	801054c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fc3c:	2800      	cmp	r0, #0
 800fc3e:	d0ef      	beq.n	800fc20 <osMessageQueueNew+0x2c>
        name = attr->name;
 800fc40:	6824      	ldr	r4, [r4, #0]
 800fc42:	e003      	b.n	800fc4c <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800fc44:	f000 fc82 	bl	801054c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fc48:	2800      	cmp	r0, #0
 800fc4a:	d0e9      	beq.n	800fc20 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800fc4c:	4621      	mov	r1, r4
 800fc4e:	9003      	str	r0, [sp, #12]
 800fc50:	f001 fb70 	bl	8011334 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800fc54:	9803      	ldr	r0, [sp, #12]
}
 800fc56:	b005      	add	sp, #20
 800fc58:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800fc5a:	9700      	str	r7, [sp, #0]
 800fc5c:	f000 fc08 	bl	8010470 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800fc60:	2800      	cmp	r0, #0
 800fc62:	d1ed      	bne.n	800fc40 <osMessageQueueNew+0x4c>
 800fc64:	e7dc      	b.n	800fc20 <osMessageQueueNew+0x2c>
 800fc66:	bf00      	nop

0800fc68 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800fc68:	b570      	push	{r4, r5, r6, lr}
 800fc6a:	461c      	mov	r4, r3
 800fc6c:	b082      	sub	sp, #8
 800fc6e:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fc72:	b1be      	cbz	r6, 800fca4 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fc74:	b350      	cbz	r0, 800fccc <osMessageQueuePut+0x64>
 800fc76:	b349      	cbz	r1, 800fccc <osMessageQueuePut+0x64>
 800fc78:	bb43      	cbnz	r3, 800fccc <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fc7a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fc7c:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fc7e:	f000 fecb 	bl	8010a18 <xQueueGenericSendFromISR>
 800fc82:	2801      	cmp	r0, #1
 800fc84:	d11e      	bne.n	800fcc4 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fc86:	9b01      	ldr	r3, [sp, #4]
 800fc88:	b1cb      	cbz	r3, 800fcbe <osMessageQueuePut+0x56>
 800fc8a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fc8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fc92:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fc96:	f3bf 8f4f 	dsb	sy
 800fc9a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fc9e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fca0:	b002      	add	sp, #8
 800fca2:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fca4:	b190      	cbz	r0, 800fccc <osMessageQueuePut+0x64>
 800fca6:	b189      	cbz	r1, 800fccc <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fca8:	4633      	mov	r3, r6
 800fcaa:	4622      	mov	r2, r4
 800fcac:	f000 fd36 	bl	801071c <xQueueGenericSend>
 800fcb0:	2801      	cmp	r0, #1
 800fcb2:	d004      	beq.n	800fcbe <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800fcb4:	b134      	cbz	r4, 800fcc4 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800fcb6:	f06f 0001 	mvn.w	r0, #1
}
 800fcba:	b002      	add	sp, #8
 800fcbc:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800fcbe:	2000      	movs	r0, #0
}
 800fcc0:	b002      	add	sp, #8
 800fcc2:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800fcc4:	f06f 0002 	mvn.w	r0, #2
}
 800fcc8:	b002      	add	sp, #8
 800fcca:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800fccc:	f06f 0003 	mvn.w	r0, #3
 800fcd0:	e7e6      	b.n	800fca0 <osMessageQueuePut+0x38>
 800fcd2:	bf00      	nop

0800fcd4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800fcd4:	b530      	push	{r4, r5, lr}
 800fcd6:	461c      	mov	r4, r3
 800fcd8:	b083      	sub	sp, #12
 800fcda:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fcde:	b1bb      	cbz	r3, 800fd10 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fce0:	b348      	cbz	r0, 800fd36 <osMessageQueueGet+0x62>
 800fce2:	b341      	cbz	r1, 800fd36 <osMessageQueueGet+0x62>
 800fce4:	bb3c      	cbnz	r4, 800fd36 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fce6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fce8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fcea:	f001 fa5b 	bl	80111a4 <xQueueReceiveFromISR>
 800fcee:	2801      	cmp	r0, #1
 800fcf0:	d11d      	bne.n	800fd2e <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fcf2:	9b01      	ldr	r3, [sp, #4]
 800fcf4:	b1c3      	cbz	r3, 800fd28 <osMessageQueueGet+0x54>
 800fcf6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fcfa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fcfe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fd02:	f3bf 8f4f 	dsb	sy
 800fd06:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fd0a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fd0c:	b003      	add	sp, #12
 800fd0e:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fd10:	b188      	cbz	r0, 800fd36 <osMessageQueueGet+0x62>
 800fd12:	b181      	cbz	r1, 800fd36 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fd14:	4622      	mov	r2, r4
 800fd16:	f000 ff3d 	bl	8010b94 <xQueueReceive>
 800fd1a:	2801      	cmp	r0, #1
 800fd1c:	d004      	beq.n	800fd28 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800fd1e:	b134      	cbz	r4, 800fd2e <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800fd20:	f06f 0001 	mvn.w	r0, #1
}
 800fd24:	b003      	add	sp, #12
 800fd26:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800fd28:	2000      	movs	r0, #0
}
 800fd2a:	b003      	add	sp, #12
 800fd2c:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800fd2e:	f06f 0002 	mvn.w	r0, #2
}
 800fd32:	b003      	add	sp, #12
 800fd34:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800fd36:	f06f 0003 	mvn.w	r0, #3
 800fd3a:	e7e7      	b.n	800fd0c <osMessageQueueGet+0x38>

0800fd3c <osMessageQueueGetCount>:
 800fd3c:	b130      	cbz	r0, 800fd4c <osMessageQueueGetCount+0x10>
 800fd3e:	f3ef 8305 	mrs	r3, IPSR
 800fd42:	b10b      	cbz	r3, 800fd48 <osMessageQueueGetCount+0xc>
 800fd44:	f001 baa2 	b.w	801128c <uxQueueMessagesWaitingFromISR>
 800fd48:	f001 ba8a 	b.w	8011260 <uxQueueMessagesWaiting>
 800fd4c:	4770      	bx	lr
 800fd4e:	bf00      	nop

0800fd50 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800fd50:	4b04      	ldr	r3, [pc, #16]	; (800fd64 <vApplicationGetIdleTaskMemory+0x14>)
 800fd52:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800fd54:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fd56:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800fd58:	4c03      	ldr	r4, [pc, #12]	; (800fd68 <vApplicationGetIdleTaskMemory+0x18>)
 800fd5a:	600c      	str	r4, [r1, #0]
}
 800fd5c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fd60:	6013      	str	r3, [r2, #0]
}
 800fd62:	4770      	bx	lr
 800fd64:	20002c5c 	.word	0x20002c5c
 800fd68:	20002a5c 	.word	0x20002a5c

0800fd6c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800fd6c:	4b05      	ldr	r3, [pc, #20]	; (800fd84 <vApplicationGetTimerTaskMemory+0x18>)
 800fd6e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800fd70:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fd72:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800fd76:	4c04      	ldr	r4, [pc, #16]	; (800fd88 <vApplicationGetTimerTaskMemory+0x1c>)
 800fd78:	600c      	str	r4, [r1, #0]
}
 800fd7a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fd7e:	6013      	str	r3, [r2, #0]
}
 800fd80:	4770      	bx	lr
 800fd82:	bf00      	nop
 800fd84:	2000310c 	.word	0x2000310c
 800fd88:	20002d0c 	.word	0x20002d0c

0800fd8c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800fd8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd90:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800fd92:	f001 ff45 	bl	8011c20 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800fd96:	4a54      	ldr	r2, [pc, #336]	; (800fee8 <pvPortMalloc+0x15c>)
 800fd98:	6816      	ldr	r6, [r2, #0]
 800fd9a:	2e00      	cmp	r6, #0
 800fd9c:	d06e      	beq.n	800fe7c <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800fd9e:	4b53      	ldr	r3, [pc, #332]	; (800feec <pvPortMalloc+0x160>)
 800fda0:	681f      	ldr	r7, [r3, #0]
 800fda2:	423d      	tst	r5, r7
 800fda4:	d12e      	bne.n	800fe04 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800fda6:	b36d      	cbz	r5, 800fe04 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800fda8:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800fdac:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800fdae:	bf1c      	itt	ne
 800fdb0:	f024 0407 	bicne.w	r4, r4, #7
 800fdb4:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800fdb6:	b32c      	cbz	r4, 800fe04 <pvPortMalloc+0x78>
 800fdb8:	f8df c144 	ldr.w	ip, [pc, #324]	; 800ff00 <pvPortMalloc+0x174>
 800fdbc:	f8dc 5000 	ldr.w	r5, [ip]
 800fdc0:	42a5      	cmp	r5, r4
 800fdc2:	d31f      	bcc.n	800fe04 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800fdc4:	484a      	ldr	r0, [pc, #296]	; (800fef0 <pvPortMalloc+0x164>)
 800fdc6:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800fdc8:	e003      	b.n	800fdd2 <pvPortMalloc+0x46>
 800fdca:	681a      	ldr	r2, [r3, #0]
 800fdcc:	b122      	cbz	r2, 800fdd8 <pvPortMalloc+0x4c>
 800fdce:	4618      	mov	r0, r3
 800fdd0:	4613      	mov	r3, r2
 800fdd2:	6859      	ldr	r1, [r3, #4]
 800fdd4:	42a1      	cmp	r1, r4
 800fdd6:	d3f8      	bcc.n	800fdca <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800fdd8:	42b3      	cmp	r3, r6
 800fdda:	d013      	beq.n	800fe04 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800fddc:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fdde:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800fde0:	f858 eb08 	ldr.w	lr, [r8], #8
 800fde4:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fde8:	2a10      	cmp	r2, #16
 800fdea:	d929      	bls.n	800fe40 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800fdec:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800fdee:	0748      	lsls	r0, r1, #29
 800fdf0:	d00f      	beq.n	800fe12 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800fdf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdf6:	f383 8811 	msr	BASEPRI, r3
 800fdfa:	f3bf 8f6f 	isb	sy
 800fdfe:	f3bf 8f4f 	dsb	sy
 800fe02:	e7fe      	b.n	800fe02 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800fe04:	f001 ff14 	bl	8011c30 <xTaskResumeAll>
 800fe08:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800fe0c:	4640      	mov	r0, r8
 800fe0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800fe12:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fe14:	4a36      	ldr	r2, [pc, #216]	; (800fef0 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800fe16:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fe18:	4614      	mov	r4, r2
 800fe1a:	6812      	ldr	r2, [r2, #0]
 800fe1c:	4291      	cmp	r1, r2
 800fe1e:	d8fb      	bhi.n	800fe18 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fe20:	6860      	ldr	r0, [r4, #4]
 800fe22:	eb04 0e00 	add.w	lr, r4, r0
 800fe26:	4571      	cmp	r1, lr
 800fe28:	d04b      	beq.n	800fec2 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe2a:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe2e:	eb01 000e 	add.w	r0, r1, lr
 800fe32:	4282      	cmp	r2, r0
 800fe34:	d051      	beq.n	800feda <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800fe36:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe38:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fe3a:	bf18      	it	ne
 800fe3c:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fe3e:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fe40:	4a2c      	ldr	r2, [pc, #176]	; (800fef4 <pvPortMalloc+0x168>)
 800fe42:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fe44:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fe46:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800fe48:	bf38      	it	cc
 800fe4a:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800fe4c:	4a2a      	ldr	r2, [pc, #168]	; (800fef8 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fe4e:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800fe52:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800fe54:	2000      	movs	r0, #0
 800fe56:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800fe5a:	6813      	ldr	r3, [r2, #0]
 800fe5c:	3301      	adds	r3, #1
 800fe5e:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800fe60:	f001 fee6 	bl	8011c30 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800fe64:	f018 0f07 	tst.w	r8, #7
 800fe68:	d0d0      	beq.n	800fe0c <pvPortMalloc+0x80>
 800fe6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe6e:	f383 8811 	msr	BASEPRI, r3
 800fe72:	f3bf 8f6f 	isb	sy
 800fe76:	f3bf 8f4f 	dsb	sy
 800fe7a:	e7fe      	b.n	800fe7a <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800fe7c:	4b1f      	ldr	r3, [pc, #124]	; (800fefc <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800fe7e:	075e      	lsls	r6, r3, #29
 800fe80:	d118      	bne.n	800feb4 <pvPortMalloc+0x128>
 800fe82:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800fe86:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800fe88:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fe8a:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800fe8e:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fe90:	4a18      	ldr	r2, [pc, #96]	; (800fef4 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fe92:	4817      	ldr	r0, [pc, #92]	; (800fef0 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fe94:	4c15      	ldr	r4, [pc, #84]	; (800feec <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fe96:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800fe98:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fe9a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fe9c:	4a18      	ldr	r2, [pc, #96]	; (800ff00 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fe9e:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fea2:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800fea4:	2200      	movs	r2, #0
 800fea6:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fea8:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800feaa:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800feae:	e9c1 6300 	strd	r6, r3, [r1]
}
 800feb2:	e776      	b.n	800fda2 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800feb4:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800feb6:	f021 0107 	bic.w	r1, r1, #7
 800feba:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800febe:	460b      	mov	r3, r1
 800fec0:	e7e2      	b.n	800fe88 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fec2:	6849      	ldr	r1, [r1, #4]
 800fec4:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fec8:	eb04 010e 	add.w	r1, r4, lr
 800fecc:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fece:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fed2:	d001      	beq.n	800fed8 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fed4:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800fed6:	e7b2      	b.n	800fe3e <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fed8:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800feda:	42b2      	cmp	r2, r6
 800fedc:	d0ab      	beq.n	800fe36 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fede:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fee0:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fee2:	4470      	add	r0, lr
 800fee4:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fee6:	e7a6      	b.n	800fe36 <pvPortMalloc+0xaa>
 800fee8:	200031b8 	.word	0x200031b8
 800feec:	200131bc 	.word	0x200131bc
 800fef0:	200131d0 	.word	0x200131d0
 800fef4:	200131c4 	.word	0x200131c4
 800fef8:	200131c8 	.word	0x200131c8
 800fefc:	200031bc 	.word	0x200031bc
 800ff00:	200131c0 	.word	0x200131c0

0800ff04 <vPortFree>:
	if( pv != NULL )
 800ff04:	b1d0      	cbz	r0, 800ff3c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ff06:	4a2c      	ldr	r2, [pc, #176]	; (800ffb8 <vPortFree+0xb4>)
 800ff08:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800ff0c:	6812      	ldr	r2, [r2, #0]
 800ff0e:	4213      	tst	r3, r2
 800ff10:	d00b      	beq.n	800ff2a <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800ff12:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800ff16:	b191      	cbz	r1, 800ff3e <vPortFree+0x3a>
 800ff18:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff1c:	f383 8811 	msr	BASEPRI, r3
 800ff20:	f3bf 8f6f 	isb	sy
 800ff24:	f3bf 8f4f 	dsb	sy
 800ff28:	e7fe      	b.n	800ff28 <vPortFree+0x24>
 800ff2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff2e:	f383 8811 	msr	BASEPRI, r3
 800ff32:	f3bf 8f6f 	isb	sy
 800ff36:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ff3a:	e7fe      	b.n	800ff3a <vPortFree+0x36>
 800ff3c:	4770      	bx	lr
{
 800ff3e:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ff40:	ea23 0302 	bic.w	r3, r3, r2
{
 800ff44:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ff46:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ff4a:	4c1c      	ldr	r4, [pc, #112]	; (800ffbc <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ff4c:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800ff4e:	f001 fe67 	bl	8011c20 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ff52:	9801      	ldr	r0, [sp, #4]
 800ff54:	6822      	ldr	r2, [r4, #0]
 800ff56:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ff5a:	4b19      	ldr	r3, [pc, #100]	; (800ffc0 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ff5c:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800ff5e:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ff60:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ff62:	461a      	mov	r2, r3
 800ff64:	681b      	ldr	r3, [r3, #0]
 800ff66:	4298      	cmp	r0, r3
 800ff68:	d8fb      	bhi.n	800ff62 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800ff6a:	6854      	ldr	r4, [r2, #4]
 800ff6c:	eb02 0e04 	add.w	lr, r2, r4
 800ff70:	4570      	cmp	r0, lr
 800ff72:	d010      	beq.n	800ff96 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ff74:	eb00 0c01 	add.w	ip, r0, r1
 800ff78:	4563      	cmp	r3, ip
 800ff7a:	d014      	beq.n	800ffa6 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800ff7c:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ff7e:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800ff80:	bf18      	it	ne
 800ff82:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800ff84:	4a0f      	ldr	r2, [pc, #60]	; (800ffc4 <vPortFree+0xc0>)
 800ff86:	6813      	ldr	r3, [r2, #0]
 800ff88:	3301      	adds	r3, #1
 800ff8a:	6013      	str	r3, [r2, #0]
}
 800ff8c:	b002      	add	sp, #8
 800ff8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800ff92:	f001 be4d 	b.w	8011c30 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ff96:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ff98:	1850      	adds	r0, r2, r1
 800ff9a:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ff9c:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ff9e:	d001      	beq.n	800ffa4 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ffa0:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800ffa2:	e7ef      	b.n	800ff84 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ffa4:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800ffa6:	4c08      	ldr	r4, [pc, #32]	; (800ffc8 <vPortFree+0xc4>)
 800ffa8:	6824      	ldr	r4, [r4, #0]
 800ffaa:	42a3      	cmp	r3, r4
 800ffac:	d0e6      	beq.n	800ff7c <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ffae:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ffb2:	4421      	add	r1, r4
 800ffb4:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ffb6:	e7e1      	b.n	800ff7c <vPortFree+0x78>
 800ffb8:	200131bc 	.word	0x200131bc
 800ffbc:	200131c0 	.word	0x200131c0
 800ffc0:	200131d0 	.word	0x200131d0
 800ffc4:	200131cc 	.word	0x200131cc
 800ffc8:	200031b8 	.word	0x200031b8

0800ffcc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800ffcc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800ffd0:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800ffd4:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800ffd6:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800ffda:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800ffde:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800ffe0:	4770      	bx	lr
 800ffe2:	bf00      	nop

0800ffe4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800ffe4:	2300      	movs	r3, #0
 800ffe6:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800ffe8:	4770      	bx	lr
 800ffea:	bf00      	nop

0800ffec <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800ffec:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800ffee:	689a      	ldr	r2, [r3, #8]
 800fff0:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800fff2:	6802      	ldr	r2, [r0, #0]
{
 800fff4:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800fff6:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800fff8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800fffa:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800fffc:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800fffe:	6099      	str	r1, [r3, #8]
}
 8010000:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 8010004:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8010006:	6002      	str	r2, [r0, #0]
}
 8010008:	4770      	bx	lr
 801000a:	bf00      	nop

0801000c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 801000c:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 801000e:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8010010:	1c6b      	adds	r3, r5, #1
 8010012:	d010      	beq.n	8010036 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8010014:	f100 0308 	add.w	r3, r0, #8
 8010018:	461c      	mov	r4, r3
 801001a:	685b      	ldr	r3, [r3, #4]
 801001c:	681a      	ldr	r2, [r3, #0]
 801001e:	42aa      	cmp	r2, r5
 8010020:	d9fa      	bls.n	8010018 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8010022:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 8010024:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 8010026:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8010028:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 801002a:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 801002c:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 801002e:	6108      	str	r0, [r1, #16]
}
 8010030:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 8010032:	6002      	str	r2, [r0, #0]
}
 8010034:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 8010036:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 8010038:	6863      	ldr	r3, [r4, #4]
 801003a:	e7f2      	b.n	8010022 <vListInsert+0x16>

0801003c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 801003c:	6903      	ldr	r3, [r0, #16]
{
 801003e:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8010040:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8010044:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8010046:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 8010048:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 801004a:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 801004c:	bf08      	it	eq
 801004e:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 8010050:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 8010052:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 8010056:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 8010058:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 801005a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 801005c:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 801005e:	6818      	ldr	r0, [r3, #0]
}
 8010060:	4770      	bx	lr
 8010062:	bf00      	nop

08010064 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8010064:	4808      	ldr	r0, [pc, #32]	; (8010088 <prvPortStartFirstTask+0x24>)
 8010066:	6800      	ldr	r0, [r0, #0]
 8010068:	6800      	ldr	r0, [r0, #0]
 801006a:	f380 8808 	msr	MSP, r0
 801006e:	f04f 0000 	mov.w	r0, #0
 8010072:	f380 8814 	msr	CONTROL, r0
 8010076:	b662      	cpsie	i
 8010078:	b661      	cpsie	f
 801007a:	f3bf 8f4f 	dsb	sy
 801007e:	f3bf 8f6f 	isb	sy
 8010082:	df00      	svc	0
 8010084:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8010086:	0000      	.short	0x0000
 8010088:	e000ed08 	.word	0xe000ed08

0801008c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 801008c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 801009c <vPortEnableVFP+0x10>
 8010090:	6801      	ldr	r1, [r0, #0]
 8010092:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8010096:	6001      	str	r1, [r0, #0]
 8010098:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 801009a:	0000      	.short	0x0000
 801009c:	e000ed88 	.word	0xe000ed88

080100a0 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 80100a0:	4b0e      	ldr	r3, [pc, #56]	; (80100dc <prvTaskExitError+0x3c>)
 80100a2:	681b      	ldr	r3, [r3, #0]
{
 80100a4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80100a6:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 80100a8:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 80100aa:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80100ac:	d008      	beq.n	80100c0 <prvTaskExitError+0x20>
 80100ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100b2:	f383 8811 	msr	BASEPRI, r3
 80100b6:	f3bf 8f6f 	isb	sy
 80100ba:	f3bf 8f4f 	dsb	sy
 80100be:	e7fe      	b.n	80100be <prvTaskExitError+0x1e>
 80100c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100c4:	f383 8811 	msr	BASEPRI, r3
 80100c8:	f3bf 8f6f 	isb	sy
 80100cc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80100d0:	9b01      	ldr	r3, [sp, #4]
 80100d2:	2b00      	cmp	r3, #0
 80100d4:	d0fc      	beq.n	80100d0 <prvTaskExitError+0x30>
}
 80100d6:	b002      	add	sp, #8
 80100d8:	4770      	bx	lr
 80100da:	bf00      	nop
 80100dc:	20000088 	.word	0x20000088

080100e0 <pxPortInitialiseStack>:
{
 80100e0:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80100e2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80100e6:	4c07      	ldr	r4, [pc, #28]	; (8010104 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80100e8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80100ec:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80100f0:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80100f4:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80100f8:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 80100fc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010100:	3844      	subs	r0, #68	; 0x44
 8010102:	4770      	bx	lr
 8010104:	080100a1 	.word	0x080100a1
	...

08010110 <SVC_Handler>:
	__asm volatile (
 8010110:	4b07      	ldr	r3, [pc, #28]	; (8010130 <pxCurrentTCBConst2>)
 8010112:	6819      	ldr	r1, [r3, #0]
 8010114:	6808      	ldr	r0, [r1, #0]
 8010116:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801011a:	f380 8809 	msr	PSP, r0
 801011e:	f3bf 8f6f 	isb	sy
 8010122:	f04f 0000 	mov.w	r0, #0
 8010126:	f380 8811 	msr	BASEPRI, r0
 801012a:	4770      	bx	lr
 801012c:	f3af 8000 	nop.w

08010130 <pxCurrentTCBConst2>:
 8010130:	20013220 	.word	0x20013220

08010134 <vPortEnterCritical>:
 8010134:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010138:	f383 8811 	msr	BASEPRI, r3
 801013c:	f3bf 8f6f 	isb	sy
 8010140:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8010144:	4a0b      	ldr	r2, [pc, #44]	; (8010174 <vPortEnterCritical+0x40>)
 8010146:	6813      	ldr	r3, [r2, #0]
 8010148:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 801014a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 801014c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 801014e:	d000      	beq.n	8010152 <vPortEnterCritical+0x1e>
}
 8010150:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8010152:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010156:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 801015a:	b2db      	uxtb	r3, r3
 801015c:	2b00      	cmp	r3, #0
 801015e:	d0f7      	beq.n	8010150 <vPortEnterCritical+0x1c>
 8010160:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010164:	f383 8811 	msr	BASEPRI, r3
 8010168:	f3bf 8f6f 	isb	sy
 801016c:	f3bf 8f4f 	dsb	sy
 8010170:	e7fe      	b.n	8010170 <vPortEnterCritical+0x3c>
 8010172:	bf00      	nop
 8010174:	20000088 	.word	0x20000088

08010178 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8010178:	4a08      	ldr	r2, [pc, #32]	; (801019c <vPortExitCritical+0x24>)
 801017a:	6813      	ldr	r3, [r2, #0]
 801017c:	b943      	cbnz	r3, 8010190 <vPortExitCritical+0x18>
 801017e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010182:	f383 8811 	msr	BASEPRI, r3
 8010186:	f3bf 8f6f 	isb	sy
 801018a:	f3bf 8f4f 	dsb	sy
 801018e:	e7fe      	b.n	801018e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8010190:	3b01      	subs	r3, #1
 8010192:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8010194:	b90b      	cbnz	r3, 801019a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8010196:	f383 8811 	msr	BASEPRI, r3
}
 801019a:	4770      	bx	lr
 801019c:	20000088 	.word	0x20000088

080101a0 <PendSV_Handler>:
	__asm volatile
 80101a0:	f3ef 8009 	mrs	r0, PSP
 80101a4:	f3bf 8f6f 	isb	sy
 80101a8:	4b15      	ldr	r3, [pc, #84]	; (8010200 <pxCurrentTCBConst>)
 80101aa:	681a      	ldr	r2, [r3, #0]
 80101ac:	f01e 0f10 	tst.w	lr, #16
 80101b0:	bf08      	it	eq
 80101b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80101b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101ba:	6010      	str	r0, [r2, #0]
 80101bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80101c0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80101c4:	f380 8811 	msr	BASEPRI, r0
 80101c8:	f3bf 8f4f 	dsb	sy
 80101cc:	f3bf 8f6f 	isb	sy
 80101d0:	f001 fd54 	bl	8011c7c <vTaskSwitchContext>
 80101d4:	f04f 0000 	mov.w	r0, #0
 80101d8:	f380 8811 	msr	BASEPRI, r0
 80101dc:	bc09      	pop	{r0, r3}
 80101de:	6819      	ldr	r1, [r3, #0]
 80101e0:	6808      	ldr	r0, [r1, #0]
 80101e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101e6:	f01e 0f10 	tst.w	lr, #16
 80101ea:	bf08      	it	eq
 80101ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80101f0:	f380 8809 	msr	PSP, r0
 80101f4:	f3bf 8f6f 	isb	sy
 80101f8:	4770      	bx	lr
 80101fa:	bf00      	nop
 80101fc:	f3af 8000 	nop.w

08010200 <pxCurrentTCBConst>:
 8010200:	20013220 	.word	0x20013220

08010204 <xPortSysTickHandler>:
{
 8010204:	b508      	push	{r3, lr}
	__asm volatile
 8010206:	f04f 0350 	mov.w	r3, #80	; 0x50
 801020a:	f383 8811 	msr	BASEPRI, r3
 801020e:	f3bf 8f6f 	isb	sy
 8010212:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8010216:	f001 fd21 	bl	8011c5c <xTaskIncrementTick>
 801021a:	b128      	cbz	r0, 8010228 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 801021c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010220:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010224:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8010228:	2300      	movs	r3, #0
 801022a:	f383 8811 	msr	BASEPRI, r3
}
 801022e:	bd08      	pop	{r3, pc}

08010230 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8010230:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8010234:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8010236:	4906      	ldr	r1, [pc, #24]	; (8010250 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8010238:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 801023a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 801023c:	680b      	ldr	r3, [r1, #0]
 801023e:	4905      	ldr	r1, [pc, #20]	; (8010254 <vPortSetupTimerInterrupt+0x24>)
 8010240:	fba1 1303 	umull	r1, r3, r1, r3
 8010244:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8010246:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8010248:	3b01      	subs	r3, #1
 801024a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 801024c:	6110      	str	r0, [r2, #16]
}
 801024e:	4770      	bx	lr
 8010250:	2000007c 	.word	0x2000007c
 8010254:	10624dd3 	.word	0x10624dd3

08010258 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8010258:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801025c:	4a49      	ldr	r2, [pc, #292]	; (8010384 <xPortStartScheduler+0x12c>)
 801025e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8010262:	4291      	cmp	r1, r2
 8010264:	d043      	beq.n	80102ee <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8010266:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 801026a:	4b47      	ldr	r3, [pc, #284]	; (8010388 <xPortStartScheduler+0x130>)
 801026c:	429a      	cmp	r2, r3
 801026e:	d035      	beq.n	80102dc <xPortStartScheduler+0x84>
{
 8010270:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8010272:	4b46      	ldr	r3, [pc, #280]	; (801038c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010274:	4846      	ldr	r0, [pc, #280]	; (8010390 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8010276:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010278:	4c46      	ldr	r4, [pc, #280]	; (8010394 <xPortStartScheduler+0x13c>)
{
 801027a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 801027c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 801027e:	b2d2      	uxtb	r2, r2
 8010280:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8010282:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8010284:	781b      	ldrb	r3, [r3, #0]
 8010286:	b2db      	uxtb	r3, r3
 8010288:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801028c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010290:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010294:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010298:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801029a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 801029c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 801029e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80102a0:	bf48      	it	mi
 80102a2:	2206      	movmi	r2, #6
 80102a4:	d511      	bpl.n	80102ca <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80102a6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80102aa:	005b      	lsls	r3, r3, #1
 80102ac:	b2db      	uxtb	r3, r3
 80102ae:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80102b2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80102b6:	0609      	lsls	r1, r1, #24
 80102b8:	4610      	mov	r0, r2
 80102ba:	f102 32ff 	add.w	r2, r2, #4294967295
 80102be:	d4f2      	bmi.n	80102a6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80102c0:	2803      	cmp	r0, #3
 80102c2:	6020      	str	r0, [r4, #0]
 80102c4:	f88d 3007 	strb.w	r3, [sp, #7]
 80102c8:	d01a      	beq.n	8010300 <xPortStartScheduler+0xa8>
	__asm volatile
 80102ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102ce:	f383 8811 	msr	BASEPRI, r3
 80102d2:	f3bf 8f6f 	isb	sy
 80102d6:	f3bf 8f4f 	dsb	sy
 80102da:	e7fe      	b.n	80102da <xPortStartScheduler+0x82>
 80102dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102e0:	f383 8811 	msr	BASEPRI, r3
 80102e4:	f3bf 8f6f 	isb	sy
 80102e8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80102ec:	e7fe      	b.n	80102ec <xPortStartScheduler+0x94>
 80102ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102f2:	f383 8811 	msr	BASEPRI, r3
 80102f6:	f3bf 8f6f 	isb	sy
 80102fa:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80102fe:	e7fe      	b.n	80102fe <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8010300:	9b02      	ldr	r3, [sp, #8]
 8010302:	4a22      	ldr	r2, [pc, #136]	; (801038c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010304:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8010308:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 801030c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 801030e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8010310:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010312:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 8010316:	4c20      	ldr	r4, [pc, #128]	; (8010398 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010318:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801031c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8010320:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 8010324:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8010328:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 801032c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 801032e:	f7ff ff7f 	bl	8010230 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8010332:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 8010334:	f7ff feaa 	bl	801008c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8010338:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 801033c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8010340:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 8010344:	f7ff fe8e 	bl	8010064 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8010348:	f001 fc98 	bl	8011c7c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 801034c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 801034e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 8010350:	3301      	adds	r3, #1
 8010352:	d008      	beq.n	8010366 <xPortStartScheduler+0x10e>
 8010354:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010358:	f383 8811 	msr	BASEPRI, r3
 801035c:	f3bf 8f6f 	isb	sy
 8010360:	f3bf 8f4f 	dsb	sy
 8010364:	e7fe      	b.n	8010364 <xPortStartScheduler+0x10c>
 8010366:	f04f 0350 	mov.w	r3, #80	; 0x50
 801036a:	f383 8811 	msr	BASEPRI, r3
 801036e:	f3bf 8f6f 	isb	sy
 8010372:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8010376:	9b03      	ldr	r3, [sp, #12]
 8010378:	2b00      	cmp	r3, #0
 801037a:	d0fc      	beq.n	8010376 <xPortStartScheduler+0x11e>
}
 801037c:	2000      	movs	r0, #0
 801037e:	b004      	add	sp, #16
 8010380:	bd70      	pop	{r4, r5, r6, pc}
 8010382:	bf00      	nop
 8010384:	410fc271 	.word	0x410fc271
 8010388:	410fc270 	.word	0x410fc270
 801038c:	e000e400 	.word	0xe000e400
 8010390:	200131d8 	.word	0x200131d8
 8010394:	200131dc 	.word	0x200131dc
 8010398:	20000088 	.word	0x20000088

0801039c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 801039c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80103a0:	2b0f      	cmp	r3, #15
 80103a2:	d90e      	bls.n	80103c2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80103a4:	4911      	ldr	r1, [pc, #68]	; (80103ec <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80103a6:	4a12      	ldr	r2, [pc, #72]	; (80103f0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80103a8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80103aa:	7812      	ldrb	r2, [r2, #0]
 80103ac:	429a      	cmp	r2, r3
 80103ae:	d908      	bls.n	80103c2 <vPortValidateInterruptPriority+0x26>
 80103b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103b4:	f383 8811 	msr	BASEPRI, r3
 80103b8:	f3bf 8f6f 	isb	sy
 80103bc:	f3bf 8f4f 	dsb	sy
 80103c0:	e7fe      	b.n	80103c0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80103c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80103c6:	4a0b      	ldr	r2, [pc, #44]	; (80103f4 <vPortValidateInterruptPriority+0x58>)
 80103c8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80103cc:	6812      	ldr	r2, [r2, #0]
 80103ce:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80103d2:	4293      	cmp	r3, r2
 80103d4:	d908      	bls.n	80103e8 <vPortValidateInterruptPriority+0x4c>
 80103d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103da:	f383 8811 	msr	BASEPRI, r3
 80103de:	f3bf 8f6f 	isb	sy
 80103e2:	f3bf 8f4f 	dsb	sy
 80103e6:	e7fe      	b.n	80103e6 <vPortValidateInterruptPriority+0x4a>
	}
 80103e8:	4770      	bx	lr
 80103ea:	bf00      	nop
 80103ec:	e000e3f0 	.word	0xe000e3f0
 80103f0:	200131d8 	.word	0x200131d8
 80103f4:	200131dc 	.word	0x200131dc

080103f8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 80103f8:	b570      	push	{r4, r5, r6, lr}
 80103fa:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80103fc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80103fe:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8010400:	b920      	cbnz	r0, 801040c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010402:	6825      	ldr	r5, [r4, #0]
 8010404:	b34d      	cbz	r5, 801045a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010406:	3601      	adds	r6, #1
 8010408:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 801040a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 801040c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801040e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 8010410:	b97d      	cbnz	r5, 8010432 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010412:	6860      	ldr	r0, [r4, #4]
 8010414:	f01d fee3 	bl	802e1de <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010418:	6863      	ldr	r3, [r4, #4]
 801041a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801041c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 801041e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010420:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010422:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8010424:	bf24      	itt	cs
 8010426:	6823      	ldrcs	r3, [r4, #0]
 8010428:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 801042a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 801042c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 801042e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8010430:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8010432:	68e0      	ldr	r0, [r4, #12]
 8010434:	f01d fed3 	bl	802e1de <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8010438:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801043a:	68e3      	ldr	r3, [r4, #12]
 801043c:	4251      	negs	r1, r2
 801043e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010440:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8010442:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010444:	4293      	cmp	r3, r2
 8010446:	d202      	bcs.n	801044e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8010448:	68a3      	ldr	r3, [r4, #8]
 801044a:	440b      	add	r3, r1
 801044c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 801044e:	2d02      	cmp	r5, #2
 8010450:	d008      	beq.n	8010464 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010452:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 8010454:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010456:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8010458:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 801045a:	68a0      	ldr	r0, [r4, #8]
 801045c:	f001 fde0 	bl	8012020 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8010460:	60a5      	str	r5, [r4, #8]
 8010462:	e7d0      	b.n	8010406 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010464:	2e01      	cmp	r6, #1
 8010466:	bf38      	it	cc
 8010468:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 801046a:	2000      	movs	r0, #0
 801046c:	e7cc      	b.n	8010408 <prvCopyDataToQueue+0x10>
 801046e:	bf00      	nop

08010470 <xQueueGenericCreateStatic>:
	{
 8010470:	b530      	push	{r4, r5, lr}
 8010472:	b083      	sub	sp, #12
 8010474:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8010478:	b940      	cbnz	r0, 801048c <xQueueGenericCreateStatic+0x1c>
 801047a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801047e:	f383 8811 	msr	BASEPRI, r3
 8010482:	f3bf 8f6f 	isb	sy
 8010486:	f3bf 8f4f 	dsb	sy
 801048a:	e7fe      	b.n	801048a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 801048c:	461d      	mov	r5, r3
 801048e:	b17b      	cbz	r3, 80104b0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010490:	b302      	cbz	r2, 80104d4 <xQueueGenericCreateStatic+0x64>
 8010492:	b1b1      	cbz	r1, 80104c2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010494:	2350      	movs	r3, #80	; 0x50
 8010496:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010498:	9b01      	ldr	r3, [sp, #4]
 801049a:	2b50      	cmp	r3, #80	; 0x50
 801049c:	d023      	beq.n	80104e6 <xQueueGenericCreateStatic+0x76>
 801049e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104a2:	f383 8811 	msr	BASEPRI, r3
 80104a6:	f3bf 8f6f 	isb	sy
 80104aa:	f3bf 8f4f 	dsb	sy
 80104ae:	e7fe      	b.n	80104ae <xQueueGenericCreateStatic+0x3e>
 80104b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104b4:	f383 8811 	msr	BASEPRI, r3
 80104b8:	f3bf 8f6f 	isb	sy
 80104bc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 80104c0:	e7fe      	b.n	80104c0 <xQueueGenericCreateStatic+0x50>
 80104c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104c6:	f383 8811 	msr	BASEPRI, r3
 80104ca:	f3bf 8f6f 	isb	sy
 80104ce:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80104d2:	e7fe      	b.n	80104d2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80104d4:	bb89      	cbnz	r1, 801053a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80104d6:	2250      	movs	r2, #80	; 0x50
 80104d8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80104da:	9a01      	ldr	r2, [sp, #4]
 80104dc:	2a50      	cmp	r2, #80	; 0x50
 80104de:	d1de      	bne.n	801049e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80104e0:	9a01      	ldr	r2, [sp, #4]
 80104e2:	462a      	mov	r2, r5
 80104e4:	e000      	b.n	80104e8 <xQueueGenericCreateStatic+0x78>
 80104e6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 80104e8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80104ea:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80104ec:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80104f0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 80104f4:	f7ff fe1e 	bl	8010134 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104f8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 80104fc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80104fe:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010500:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010504:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010506:	4401      	add	r1, r0
 8010508:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801050a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801050c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801050e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010510:	21ff      	movs	r1, #255	; 0xff
 8010512:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010516:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 8010518:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801051c:	f105 0010 	add.w	r0, r5, #16
 8010520:	f7ff fd54 	bl	800ffcc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010524:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010528:	f7ff fd50 	bl	800ffcc <vListInitialise>
	taskEXIT_CRITICAL();
 801052c:	f7ff fe24 	bl	8010178 <vPortExitCritical>
	}
 8010530:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 8010532:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 8010536:	b003      	add	sp, #12
 8010538:	bd30      	pop	{r4, r5, pc}
 801053a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801053e:	f383 8811 	msr	BASEPRI, r3
 8010542:	f3bf 8f6f 	isb	sy
 8010546:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 801054a:	e7fe      	b.n	801054a <xQueueGenericCreateStatic+0xda>

0801054c <xQueueGenericCreate>:
	{
 801054c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 801054e:	b940      	cbnz	r0, 8010562 <xQueueGenericCreate+0x16>
 8010550:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010554:	f383 8811 	msr	BASEPRI, r3
 8010558:	f3bf 8f6f 	isb	sy
 801055c:	f3bf 8f4f 	dsb	sy
 8010560:	e7fe      	b.n	8010560 <xQueueGenericCreate+0x14>
 8010562:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010564:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010568:	3050      	adds	r0, #80	; 0x50
 801056a:	460e      	mov	r6, r1
 801056c:	4617      	mov	r7, r2
 801056e:	f7ff fc0d 	bl	800fd8c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010572:	4604      	mov	r4, r0
 8010574:	b340      	cbz	r0, 80105c8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010576:	2300      	movs	r3, #0
 8010578:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 801057c:	b336      	cbz	r6, 80105cc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801057e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 8010582:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8010584:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 8010588:	f7ff fdd4 	bl	8010134 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801058c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8010590:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010592:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010594:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010598:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801059a:	440a      	add	r2, r1
 801059c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801059e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105a0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80105a2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80105a4:	22ff      	movs	r2, #255	; 0xff
 80105a6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105aa:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 80105ac:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80105b0:	f104 0010 	add.w	r0, r4, #16
 80105b4:	f7ff fd0a 	bl	800ffcc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80105b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80105bc:	f7ff fd06 	bl	800ffcc <vListInitialise>
	taskEXIT_CRITICAL();
 80105c0:	f7ff fdda 	bl	8010178 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 80105c4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 80105c8:	4620      	mov	r0, r4
 80105ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80105cc:	4603      	mov	r3, r0
 80105ce:	e7d8      	b.n	8010582 <xQueueGenericCreate+0x36>

080105d0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 80105d0:	b940      	cbnz	r0, 80105e4 <xQueueCreateCountingSemaphoreStatic+0x14>
 80105d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80105d6:	f383 8811 	msr	BASEPRI, r3
 80105da:	f3bf 8f6f 	isb	sy
 80105de:	f3bf 8f4f 	dsb	sy
 80105e2:	e7fe      	b.n	80105e2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 80105e4:	4288      	cmp	r0, r1
 80105e6:	d208      	bcs.n	80105fa <xQueueCreateCountingSemaphoreStatic+0x2a>
 80105e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80105ec:	f383 8811 	msr	BASEPRI, r3
 80105f0:	f3bf 8f6f 	isb	sy
 80105f4:	f3bf 8f4f 	dsb	sy
 80105f8:	e7fe      	b.n	80105f8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 80105fa:	b530      	push	{r4, r5, lr}
 80105fc:	4615      	mov	r5, r2
 80105fe:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 8010600:	2a00      	cmp	r2, #0
 8010602:	d03c      	beq.n	801067e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010604:	2350      	movs	r3, #80	; 0x50
 8010606:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010608:	9b03      	ldr	r3, [sp, #12]
 801060a:	2b50      	cmp	r3, #80	; 0x50
 801060c:	d008      	beq.n	8010620 <xQueueCreateCountingSemaphoreStatic+0x50>
 801060e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010612:	f383 8811 	msr	BASEPRI, r3
 8010616:	f3bf 8f6f 	isb	sy
 801061a:	f3bf 8f4f 	dsb	sy
 801061e:	e7fe      	b.n	801061e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 8010620:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010622:	2301      	movs	r3, #1
 8010624:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010628:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 801062a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 801062e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8010630:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 8010632:	f7ff fd7f 	bl	8010134 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010636:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 801063a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801063c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801063e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010642:	1ac3      	subs	r3, r0, r3
 8010644:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010646:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 8010648:	f04f 0eff 	mov.w	lr, #255	; 0xff
 801064c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010650:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010652:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 8010654:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010658:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801065a:	f105 0010 	add.w	r0, r5, #16
 801065e:	f7ff fcb5 	bl	800ffcc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010662:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010666:	f7ff fcb1 	bl	800ffcc <vListInitialise>
	taskEXIT_CRITICAL();
 801066a:	f7ff fd85 	bl	8010178 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 801066e:	9901      	ldr	r1, [sp, #4]
 8010670:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 8010672:	2302      	movs	r3, #2
	}
 8010674:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 8010676:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 801067a:	b005      	add	sp, #20
 801067c:	bd30      	pop	{r4, r5, pc}
 801067e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010682:	f383 8811 	msr	BASEPRI, r3
 8010686:	f3bf 8f6f 	isb	sy
 801068a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 801068e:	e7fe      	b.n	801068e <xQueueCreateCountingSemaphoreStatic+0xbe>

08010690 <xQueueCreateCountingSemaphore>:
	{
 8010690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 8010692:	b940      	cbnz	r0, 80106a6 <xQueueCreateCountingSemaphore+0x16>
 8010694:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010698:	f383 8811 	msr	BASEPRI, r3
 801069c:	f3bf 8f6f 	isb	sy
 80106a0:	f3bf 8f4f 	dsb	sy
 80106a4:	e7fe      	b.n	80106a4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 80106a6:	4288      	cmp	r0, r1
 80106a8:	460e      	mov	r6, r1
 80106aa:	4604      	mov	r4, r0
 80106ac:	d208      	bcs.n	80106c0 <xQueueCreateCountingSemaphore+0x30>
 80106ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80106b2:	f383 8811 	msr	BASEPRI, r3
 80106b6:	f3bf 8f6f 	isb	sy
 80106ba:	f3bf 8f4f 	dsb	sy
 80106be:	e7fe      	b.n	80106be <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80106c0:	2050      	movs	r0, #80	; 0x50
 80106c2:	f7ff fb63 	bl	800fd8c <pvPortMalloc>
		if( pxNewQueue != NULL )
 80106c6:	4605      	mov	r5, r0
 80106c8:	b330      	cbz	r0, 8010718 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80106ca:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 80106cc:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80106d0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80106d4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 80106d6:	f7ff fd2d 	bl	8010134 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80106da:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 80106de:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80106e0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80106e2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80106e6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80106e8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80106ea:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80106ec:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 80106ee:	22ff      	movs	r2, #255	; 0xff
 80106f0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80106f4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80106f6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 80106f8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80106fc:	f105 0010 	add.w	r0, r5, #16
 8010700:	f7ff fc64 	bl	800ffcc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010704:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010708:	f7ff fc60 	bl	800ffcc <vListInitialise>
	taskEXIT_CRITICAL();
 801070c:	f7ff fd34 	bl	8010178 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010710:	2302      	movs	r3, #2
 8010712:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8010716:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 8010718:	4628      	mov	r0, r5
 801071a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801071c <xQueueGenericSend>:
{
 801071c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010720:	b085      	sub	sp, #20
 8010722:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 8010724:	2800      	cmp	r0, #0
 8010726:	f000 80a4 	beq.w	8010872 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801072a:	4688      	mov	r8, r1
 801072c:	461f      	mov	r7, r3
 801072e:	4604      	mov	r4, r0
 8010730:	2900      	cmp	r1, #0
 8010732:	f000 8091 	beq.w	8010858 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8010736:	2f02      	cmp	r7, #2
 8010738:	d10b      	bne.n	8010752 <xQueueGenericSend+0x36>
 801073a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801073c:	2b01      	cmp	r3, #1
 801073e:	d008      	beq.n	8010752 <xQueueGenericSend+0x36>
 8010740:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010744:	f383 8811 	msr	BASEPRI, r3
 8010748:	f3bf 8f6f 	isb	sy
 801074c:	f3bf 8f4f 	dsb	sy
 8010750:	e7fe      	b.n	8010750 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010752:	f001 fc0f 	bl	8011f74 <xTaskGetSchedulerState>
 8010756:	4605      	mov	r5, r0
 8010758:	2800      	cmp	r0, #0
 801075a:	f000 8093 	beq.w	8010884 <xQueueGenericSend+0x168>
 801075e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010760:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010764:	f7ff fce6 	bl	8010134 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010768:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801076a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801076c:	429a      	cmp	r2, r3
 801076e:	f0c0 80ef 	bcc.w	8010950 <xQueueGenericSend+0x234>
 8010772:	2f02      	cmp	r7, #2
 8010774:	f000 80ec 	beq.w	8010950 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010778:	9801      	ldr	r0, [sp, #4]
 801077a:	2800      	cmp	r0, #0
 801077c:	f000 8101 	beq.w	8010982 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 8010780:	2d00      	cmp	r5, #0
 8010782:	f000 80e1 	beq.w	8010948 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 8010786:	f7ff fcf7 	bl	8010178 <vPortExitCritical>
		vTaskSuspendAll();
 801078a:	f001 fa49 	bl	8011c20 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 801078e:	f7ff fcd1 	bl	8010134 <vPortEnterCritical>
 8010792:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010796:	2bff      	cmp	r3, #255	; 0xff
 8010798:	bf04      	itt	eq
 801079a:	2300      	moveq	r3, #0
 801079c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80107a0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80107a4:	2bff      	cmp	r3, #255	; 0xff
 80107a6:	bf04      	itt	eq
 80107a8:	2300      	moveq	r3, #0
 80107aa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80107ae:	f7ff fce3 	bl	8010178 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80107b2:	a901      	add	r1, sp, #4
 80107b4:	a802      	add	r0, sp, #8
 80107b6:	f001 fb8f 	bl	8011ed8 <xTaskCheckForTimeOut>
 80107ba:	2800      	cmp	r0, #0
 80107bc:	f040 80e6 	bne.w	801098c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80107c0:	f7ff fcb8 	bl	8010134 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80107c4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80107c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80107c8:	429a      	cmp	r2, r3
 80107ca:	d068      	beq.n	801089e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80107cc:	f7ff fcd4 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 80107d0:	f7ff fcb0 	bl	8010134 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80107d4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 80107d8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80107da:	2d00      	cmp	r5, #0
 80107dc:	dc04      	bgt.n	80107e8 <xQueueGenericSend+0xcc>
 80107de:	e011      	b.n	8010804 <xQueueGenericSend+0xe8>
			--cTxLock;
 80107e0:	1e6a      	subs	r2, r5, #1
 80107e2:	b2d3      	uxtb	r3, r2
 80107e4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80107e6:	b16b      	cbz	r3, 8010804 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80107e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80107ea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80107ec:	b153      	cbz	r3, 8010804 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80107ee:	f001 fb1f 	bl	8011e30 <xTaskRemoveFromEventList>
 80107f2:	2800      	cmp	r0, #0
 80107f4:	d0f4      	beq.n	80107e0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 80107f6:	f001 fbb7 	bl	8011f68 <vTaskMissedYield>
			--cTxLock;
 80107fa:	1e6a      	subs	r2, r5, #1
 80107fc:	b2d3      	uxtb	r3, r2
 80107fe:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010800:	2b00      	cmp	r3, #0
 8010802:	d1f1      	bne.n	80107e8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 8010804:	23ff      	movs	r3, #255	; 0xff
 8010806:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 801080a:	f7ff fcb5 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 801080e:	f7ff fc91 	bl	8010134 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010812:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8010816:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010818:	2d00      	cmp	r5, #0
 801081a:	dd14      	ble.n	8010846 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801081c:	f104 0910 	add.w	r9, r4, #16
 8010820:	e003      	b.n	801082a <xQueueGenericSend+0x10e>
				--cRxLock;
 8010822:	1e6a      	subs	r2, r5, #1
 8010824:	b2d3      	uxtb	r3, r2
 8010826:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010828:	b16b      	cbz	r3, 8010846 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801082a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801082c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801082e:	b153      	cbz	r3, 8010846 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010830:	f001 fafe 	bl	8011e30 <xTaskRemoveFromEventList>
 8010834:	2800      	cmp	r0, #0
 8010836:	d0f4      	beq.n	8010822 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 8010838:	f001 fb96 	bl	8011f68 <vTaskMissedYield>
				--cRxLock;
 801083c:	1e6a      	subs	r2, r5, #1
 801083e:	b2d3      	uxtb	r3, r2
 8010840:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010842:	2b00      	cmp	r3, #0
 8010844:	d1f1      	bne.n	801082a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 8010846:	23ff      	movs	r3, #255	; 0xff
 8010848:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 801084c:	f7ff fc94 	bl	8010178 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010850:	f001 f9ee 	bl	8011c30 <xTaskResumeAll>
 8010854:	2501      	movs	r5, #1
 8010856:	e785      	b.n	8010764 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010858:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801085a:	2b00      	cmp	r3, #0
 801085c:	f43f af6b 	beq.w	8010736 <xQueueGenericSend+0x1a>
 8010860:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010864:	f383 8811 	msr	BASEPRI, r3
 8010868:	f3bf 8f6f 	isb	sy
 801086c:	f3bf 8f4f 	dsb	sy
 8010870:	e7fe      	b.n	8010870 <xQueueGenericSend+0x154>
 8010872:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010876:	f383 8811 	msr	BASEPRI, r3
 801087a:	f3bf 8f6f 	isb	sy
 801087e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010882:	e7fe      	b.n	8010882 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010884:	9b01      	ldr	r3, [sp, #4]
 8010886:	2b00      	cmp	r3, #0
 8010888:	f43f af6a 	beq.w	8010760 <xQueueGenericSend+0x44>
 801088c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010890:	f383 8811 	msr	BASEPRI, r3
 8010894:	f3bf 8f6f 	isb	sy
 8010898:	f3bf 8f4f 	dsb	sy
 801089c:	e7fe      	b.n	801089c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 801089e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 80108a2:	f7ff fc69 	bl	8010178 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80108a6:	9901      	ldr	r1, [sp, #4]
 80108a8:	4648      	mov	r0, r9
 80108aa:	f001 fa33 	bl	8011d14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 80108ae:	f7ff fc41 	bl	8010134 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80108b2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80108b6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80108b8:	2d00      	cmp	r5, #0
 80108ba:	dc04      	bgt.n	80108c6 <xQueueGenericSend+0x1aa>
 80108bc:	e011      	b.n	80108e2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 80108be:	1e6b      	subs	r3, r5, #1
 80108c0:	b2da      	uxtb	r2, r3
 80108c2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80108c4:	b16a      	cbz	r2, 80108e2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80108c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80108c8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80108ca:	b153      	cbz	r3, 80108e2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80108cc:	f001 fab0 	bl	8011e30 <xTaskRemoveFromEventList>
 80108d0:	2800      	cmp	r0, #0
 80108d2:	d0f4      	beq.n	80108be <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 80108d4:	f001 fb48 	bl	8011f68 <vTaskMissedYield>
			--cTxLock;
 80108d8:	1e6b      	subs	r3, r5, #1
 80108da:	b2da      	uxtb	r2, r3
 80108dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80108de:	2a00      	cmp	r2, #0
 80108e0:	d1f1      	bne.n	80108c6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 80108e2:	23ff      	movs	r3, #255	; 0xff
 80108e4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80108e8:	f7ff fc46 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 80108ec:	f7ff fc22 	bl	8010134 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80108f0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80108f4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80108f6:	2d00      	cmp	r5, #0
 80108f8:	dc04      	bgt.n	8010904 <xQueueGenericSend+0x1e8>
 80108fa:	e011      	b.n	8010920 <xQueueGenericSend+0x204>
				--cRxLock;
 80108fc:	1e6b      	subs	r3, r5, #1
 80108fe:	b2da      	uxtb	r2, r3
 8010900:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010902:	b16a      	cbz	r2, 8010920 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010904:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010906:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010908:	b153      	cbz	r3, 8010920 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801090a:	f001 fa91 	bl	8011e30 <xTaskRemoveFromEventList>
 801090e:	2800      	cmp	r0, #0
 8010910:	d0f4      	beq.n	80108fc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 8010912:	f001 fb29 	bl	8011f68 <vTaskMissedYield>
				--cRxLock;
 8010916:	1e6b      	subs	r3, r5, #1
 8010918:	b2da      	uxtb	r2, r3
 801091a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801091c:	2a00      	cmp	r2, #0
 801091e:	d1f1      	bne.n	8010904 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 8010920:	23ff      	movs	r3, #255	; 0xff
 8010922:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010926:	f7ff fc27 	bl	8010178 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 801092a:	f001 f981 	bl	8011c30 <xTaskResumeAll>
 801092e:	2800      	cmp	r0, #0
 8010930:	d190      	bne.n	8010854 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 8010932:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010936:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801093a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801093e:	f3bf 8f4f 	dsb	sy
 8010942:	f3bf 8f6f 	isb	sy
 8010946:	e785      	b.n	8010854 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010948:	a802      	add	r0, sp, #8
 801094a:	f001 fab9 	bl	8011ec0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 801094e:	e71a      	b.n	8010786 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010950:	463a      	mov	r2, r7
 8010952:	4641      	mov	r1, r8
 8010954:	4620      	mov	r0, r4
 8010956:	f7ff fd4f 	bl	80103f8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801095a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801095c:	2b00      	cmp	r3, #0
 801095e:	d153      	bne.n	8010a08 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 8010960:	b148      	cbz	r0, 8010976 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 8010962:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010966:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801096a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801096e:	f3bf 8f4f 	dsb	sy
 8010972:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8010976:	f7ff fbff 	bl	8010178 <vPortExitCritical>
				return pdPASS;
 801097a:	2001      	movs	r0, #1
}
 801097c:	b005      	add	sp, #20
 801097e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010982:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 8010984:	f7ff fbf8 	bl	8010178 <vPortExitCritical>
					return errQUEUE_FULL;
 8010988:	9800      	ldr	r0, [sp, #0]
 801098a:	e7f7      	b.n	801097c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 801098c:	f7ff fbd2 	bl	8010134 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010990:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010994:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010996:	2d00      	cmp	r5, #0
 8010998:	dd10      	ble.n	80109bc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801099a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 801099e:	e003      	b.n	80109a8 <xQueueGenericSend+0x28c>
			--cTxLock;
 80109a0:	1e6b      	subs	r3, r5, #1
 80109a2:	b2da      	uxtb	r2, r3
 80109a4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80109a6:	b14a      	cbz	r2, 80109bc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80109a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80109aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80109ac:	b133      	cbz	r3, 80109bc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80109ae:	f001 fa3f 	bl	8011e30 <xTaskRemoveFromEventList>
 80109b2:	2800      	cmp	r0, #0
 80109b4:	d0f4      	beq.n	80109a0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 80109b6:	f001 fad7 	bl	8011f68 <vTaskMissedYield>
 80109ba:	e7f1      	b.n	80109a0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 80109bc:	23ff      	movs	r3, #255	; 0xff
 80109be:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80109c2:	f7ff fbd9 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 80109c6:	f7ff fbb5 	bl	8010134 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80109ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80109ce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80109d0:	2d00      	cmp	r5, #0
 80109d2:	dd10      	ble.n	80109f6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80109d4:	f104 0610 	add.w	r6, r4, #16
 80109d8:	e003      	b.n	80109e2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 80109da:	1e6b      	subs	r3, r5, #1
 80109dc:	b2da      	uxtb	r2, r3
 80109de:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80109e0:	b14a      	cbz	r2, 80109f6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80109e2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80109e4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80109e6:	b133      	cbz	r3, 80109f6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80109e8:	f001 fa22 	bl	8011e30 <xTaskRemoveFromEventList>
 80109ec:	2800      	cmp	r0, #0
 80109ee:	d0f4      	beq.n	80109da <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 80109f0:	f001 faba 	bl	8011f68 <vTaskMissedYield>
 80109f4:	e7f1      	b.n	80109da <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 80109f6:	23ff      	movs	r3, #255	; 0xff
 80109f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80109fc:	f7ff fbbc 	bl	8010178 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010a00:	f001 f916 	bl	8011c30 <xTaskResumeAll>
			return errQUEUE_FULL;
 8010a04:	2000      	movs	r0, #0
 8010a06:	e7b9      	b.n	801097c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a08:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010a0c:	f001 fa10 	bl	8011e30 <xTaskRemoveFromEventList>
 8010a10:	2800      	cmp	r0, #0
 8010a12:	d0b0      	beq.n	8010976 <xQueueGenericSend+0x25a>
 8010a14:	e7a5      	b.n	8010962 <xQueueGenericSend+0x246>
 8010a16:	bf00      	nop

08010a18 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 8010a18:	2800      	cmp	r0, #0
 8010a1a:	d04b      	beq.n	8010ab4 <xQueueGenericSendFromISR+0x9c>
{
 8010a1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a20:	460e      	mov	r6, r1
 8010a22:	4617      	mov	r7, r2
 8010a24:	461d      	mov	r5, r3
 8010a26:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010a28:	b321      	cbz	r1, 8010a74 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8010a2a:	2d02      	cmp	r5, #2
 8010a2c:	d10b      	bne.n	8010a46 <xQueueGenericSendFromISR+0x2e>
 8010a2e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010a30:	2b01      	cmp	r3, #1
 8010a32:	d008      	beq.n	8010a46 <xQueueGenericSendFromISR+0x2e>
 8010a34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a38:	f383 8811 	msr	BASEPRI, r3
 8010a3c:	f3bf 8f6f 	isb	sy
 8010a40:	f3bf 8f4f 	dsb	sy
 8010a44:	e7fe      	b.n	8010a44 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010a46:	f7ff fca9 	bl	801039c <vPortValidateInterruptPriority>
	__asm volatile
 8010a4a:	f3ef 8811 	mrs	r8, BASEPRI
 8010a4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a52:	f383 8811 	msr	BASEPRI, r3
 8010a56:	f3bf 8f6f 	isb	sy
 8010a5a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010a5e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010a60:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010a62:	429a      	cmp	r2, r3
 8010a64:	d312      	bcc.n	8010a8c <xQueueGenericSendFromISR+0x74>
 8010a66:	2d02      	cmp	r5, #2
 8010a68:	d010      	beq.n	8010a8c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 8010a6a:	2000      	movs	r0, #0
	__asm volatile
 8010a6c:	f388 8811 	msr	BASEPRI, r8
}
 8010a70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010a74:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010a76:	2b00      	cmp	r3, #0
 8010a78:	d0d7      	beq.n	8010a2a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 8010a7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a7e:	f383 8811 	msr	BASEPRI, r3
 8010a82:	f3bf 8f6f 	isb	sy
 8010a86:	f3bf 8f4f 	dsb	sy
 8010a8a:	e7fe      	b.n	8010a8a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010a8c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 8010a8e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010a92:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010a94:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 8010a96:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010a98:	4620      	mov	r0, r4
 8010a9a:	f7ff fcad 	bl	80103f8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8010a9e:	1c6b      	adds	r3, r5, #1
 8010aa0:	d011      	beq.n	8010ac6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010aa2:	1c6b      	adds	r3, r5, #1
 8010aa4:	b25b      	sxtb	r3, r3
 8010aa6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 8010aaa:	2001      	movs	r0, #1
	__asm volatile
 8010aac:	f388 8811 	msr	BASEPRI, r8
}
 8010ab0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 8010ab4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ab8:	f383 8811 	msr	BASEPRI, r3
 8010abc:	f3bf 8f6f 	isb	sy
 8010ac0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010ac4:	e7fe      	b.n	8010ac4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ac6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010ac8:	2b00      	cmp	r3, #0
 8010aca:	d0ee      	beq.n	8010aaa <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010acc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010ad0:	f001 f9ae 	bl	8011e30 <xTaskRemoveFromEventList>
 8010ad4:	2800      	cmp	r0, #0
 8010ad6:	d0e8      	beq.n	8010aaa <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8010ad8:	2f00      	cmp	r7, #0
 8010ada:	d0e6      	beq.n	8010aaa <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010adc:	2001      	movs	r0, #1
 8010ade:	6038      	str	r0, [r7, #0]
 8010ae0:	e7c4      	b.n	8010a6c <xQueueGenericSendFromISR+0x54>
 8010ae2:	bf00      	nop

08010ae4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 8010ae4:	b370      	cbz	r0, 8010b44 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010ae6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 8010ae8:	b570      	push	{r4, r5, r6, lr}
 8010aea:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 8010aec:	b143      	cbz	r3, 8010b00 <xQueueGiveFromISR+0x1c>
 8010aee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010af2:	f383 8811 	msr	BASEPRI, r3
 8010af6:	f3bf 8f6f 	isb	sy
 8010afa:	f3bf 8f4f 	dsb	sy
 8010afe:	e7fe      	b.n	8010afe <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010b00:	6803      	ldr	r3, [r0, #0]
 8010b02:	460c      	mov	r4, r1
 8010b04:	b33b      	cbz	r3, 8010b56 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010b06:	f7ff fc49 	bl	801039c <vPortValidateInterruptPriority>
	__asm volatile
 8010b0a:	f3ef 8511 	mrs	r5, BASEPRI
 8010b0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b12:	f383 8811 	msr	BASEPRI, r3
 8010b16:	f3bf 8f6f 	isb	sy
 8010b1a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010b1e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8010b20:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 8010b22:	429a      	cmp	r2, r3
 8010b24:	d923      	bls.n	8010b6e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 8010b26:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010b2a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 8010b2c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010b2e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8010b30:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 8010b32:	d020      	beq.n	8010b76 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010b34:	3301      	adds	r3, #1
 8010b36:	b25b      	sxtb	r3, r3
 8010b38:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 8010b3c:	2001      	movs	r0, #1
	__asm volatile
 8010b3e:	f385 8811 	msr	BASEPRI, r5
}
 8010b42:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 8010b44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b48:	f383 8811 	msr	BASEPRI, r3
 8010b4c:	f3bf 8f6f 	isb	sy
 8010b50:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010b54:	e7fe      	b.n	8010b54 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010b56:	6883      	ldr	r3, [r0, #8]
 8010b58:	2b00      	cmp	r3, #0
 8010b5a:	d0d4      	beq.n	8010b06 <xQueueGiveFromISR+0x22>
 8010b5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b60:	f383 8811 	msr	BASEPRI, r3
 8010b64:	f3bf 8f6f 	isb	sy
 8010b68:	f3bf 8f4f 	dsb	sy
 8010b6c:	e7fe      	b.n	8010b6c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 8010b6e:	2000      	movs	r0, #0
	__asm volatile
 8010b70:	f385 8811 	msr	BASEPRI, r5
}
 8010b74:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010b76:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8010b78:	2b00      	cmp	r3, #0
 8010b7a:	d0df      	beq.n	8010b3c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b7c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 8010b80:	f001 f956 	bl	8011e30 <xTaskRemoveFromEventList>
 8010b84:	2800      	cmp	r0, #0
 8010b86:	d0d9      	beq.n	8010b3c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 8010b88:	2c00      	cmp	r4, #0
 8010b8a:	d0d7      	beq.n	8010b3c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010b8c:	2001      	movs	r0, #1
 8010b8e:	6020      	str	r0, [r4, #0]
 8010b90:	e7ee      	b.n	8010b70 <xQueueGiveFromISR+0x8c>
 8010b92:	bf00      	nop

08010b94 <xQueueReceive>:
{
 8010b94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b98:	b085      	sub	sp, #20
 8010b9a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010b9c:	2800      	cmp	r0, #0
 8010b9e:	f000 815c 	beq.w	8010e5a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010ba2:	460f      	mov	r7, r1
 8010ba4:	4604      	mov	r4, r0
 8010ba6:	2900      	cmp	r1, #0
 8010ba8:	d079      	beq.n	8010c9e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010baa:	f001 f9e3 	bl	8011f74 <xTaskGetSchedulerState>
 8010bae:	2800      	cmp	r0, #0
 8010bb0:	f000 8081 	beq.w	8010cb6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 8010bb4:	f7ff fabe 	bl	8010134 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010bb8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010bba:	2d00      	cmp	r5, #0
 8010bbc:	f040 8138 	bne.w	8010e30 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010bc0:	9b01      	ldr	r3, [sp, #4]
 8010bc2:	2b00      	cmp	r3, #0
 8010bc4:	f000 80d5 	beq.w	8010d72 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010bc8:	a802      	add	r0, sp, #8
 8010bca:	f001 f979 	bl	8011ec0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 8010bce:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010bd0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 8010bd4:	f7ff fad0 	bl	8010178 <vPortExitCritical>
		vTaskSuspendAll();
 8010bd8:	f001 f822 	bl	8011c20 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010bdc:	f7ff faaa 	bl	8010134 <vPortEnterCritical>
 8010be0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010be4:	2bff      	cmp	r3, #255	; 0xff
 8010be6:	bf08      	it	eq
 8010be8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8010bec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010bf0:	2bff      	cmp	r3, #255	; 0xff
 8010bf2:	bf08      	it	eq
 8010bf4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8010bf8:	f7ff fabe 	bl	8010178 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010bfc:	a901      	add	r1, sp, #4
 8010bfe:	a802      	add	r0, sp, #8
 8010c00:	f001 f96a 	bl	8011ed8 <xTaskCheckForTimeOut>
 8010c04:	2800      	cmp	r0, #0
 8010c06:	d163      	bne.n	8010cd0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 8010c08:	f7ff fa94 	bl	8010134 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010c0c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010c0e:	2b00      	cmp	r3, #0
 8010c10:	f000 80b5 	beq.w	8010d7e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 8010c14:	f7ff fab0 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010c18:	f7ff fa8c 	bl	8010134 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010c1c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010c20:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c22:	2d00      	cmp	r5, #0
 8010c24:	dc04      	bgt.n	8010c30 <xQueueReceive+0x9c>
 8010c26:	e011      	b.n	8010c4c <xQueueReceive+0xb8>
			--cTxLock;
 8010c28:	1e6b      	subs	r3, r5, #1
 8010c2a:	b2da      	uxtb	r2, r3
 8010c2c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c2e:	b16a      	cbz	r2, 8010c4c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c30:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c32:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c34:	b153      	cbz	r3, 8010c4c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c36:	f001 f8fb 	bl	8011e30 <xTaskRemoveFromEventList>
 8010c3a:	2800      	cmp	r0, #0
 8010c3c:	d0f4      	beq.n	8010c28 <xQueueReceive+0x94>
						vTaskMissedYield();
 8010c3e:	f001 f993 	bl	8011f68 <vTaskMissedYield>
			--cTxLock;
 8010c42:	1e6b      	subs	r3, r5, #1
 8010c44:	b2da      	uxtb	r2, r3
 8010c46:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c48:	2a00      	cmp	r2, #0
 8010c4a:	d1f1      	bne.n	8010c30 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 8010c4c:	23ff      	movs	r3, #255	; 0xff
 8010c4e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010c52:	f7ff fa91 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010c56:	f7ff fa6d 	bl	8010134 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010c5a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010c5e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c60:	2d00      	cmp	r5, #0
 8010c62:	dd14      	ble.n	8010c8e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c64:	f104 0910 	add.w	r9, r4, #16
 8010c68:	e003      	b.n	8010c72 <xQueueReceive+0xde>
				--cRxLock;
 8010c6a:	1e6b      	subs	r3, r5, #1
 8010c6c:	b2da      	uxtb	r2, r3
 8010c6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c70:	b16a      	cbz	r2, 8010c8e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c72:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c74:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c76:	b153      	cbz	r3, 8010c8e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c78:	f001 f8da 	bl	8011e30 <xTaskRemoveFromEventList>
 8010c7c:	2800      	cmp	r0, #0
 8010c7e:	d0f4      	beq.n	8010c6a <xQueueReceive+0xd6>
					vTaskMissedYield();
 8010c80:	f001 f972 	bl	8011f68 <vTaskMissedYield>
				--cRxLock;
 8010c84:	1e6b      	subs	r3, r5, #1
 8010c86:	b2da      	uxtb	r2, r3
 8010c88:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c8a:	2a00      	cmp	r2, #0
 8010c8c:	d1f1      	bne.n	8010c72 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 8010c8e:	23ff      	movs	r3, #255	; 0xff
 8010c90:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010c94:	f7ff fa70 	bl	8010178 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010c98:	f000 ffca 	bl	8011c30 <xTaskResumeAll>
		taskENTER_CRITICAL();
 8010c9c:	e060      	b.n	8010d60 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010c9e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010ca0:	2b00      	cmp	r3, #0
 8010ca2:	d082      	beq.n	8010baa <xQueueReceive+0x16>
	__asm volatile
 8010ca4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ca8:	f383 8811 	msr	BASEPRI, r3
 8010cac:	f3bf 8f6f 	isb	sy
 8010cb0:	f3bf 8f4f 	dsb	sy
 8010cb4:	e7fe      	b.n	8010cb4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010cb6:	9b01      	ldr	r3, [sp, #4]
 8010cb8:	2b00      	cmp	r3, #0
 8010cba:	f43f af7b 	beq.w	8010bb4 <xQueueReceive+0x20>
 8010cbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010cc2:	f383 8811 	msr	BASEPRI, r3
 8010cc6:	f3bf 8f6f 	isb	sy
 8010cca:	f3bf 8f4f 	dsb	sy
 8010cce:	e7fe      	b.n	8010cce <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 8010cd0:	f7ff fa30 	bl	8010134 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010cd4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010cd8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010cda:	2d00      	cmp	r5, #0
 8010cdc:	dc04      	bgt.n	8010ce8 <xQueueReceive+0x154>
 8010cde:	e011      	b.n	8010d04 <xQueueReceive+0x170>
			--cTxLock;
 8010ce0:	1e6b      	subs	r3, r5, #1
 8010ce2:	b2da      	uxtb	r2, r3
 8010ce4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ce6:	b16a      	cbz	r2, 8010d04 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ce8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010cea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010cec:	b153      	cbz	r3, 8010d04 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010cee:	f001 f89f 	bl	8011e30 <xTaskRemoveFromEventList>
 8010cf2:	2800      	cmp	r0, #0
 8010cf4:	d0f4      	beq.n	8010ce0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 8010cf6:	f001 f937 	bl	8011f68 <vTaskMissedYield>
			--cTxLock;
 8010cfa:	1e6b      	subs	r3, r5, #1
 8010cfc:	b2da      	uxtb	r2, r3
 8010cfe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010d00:	2a00      	cmp	r2, #0
 8010d02:	d1f1      	bne.n	8010ce8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 8010d04:	23ff      	movs	r3, #255	; 0xff
 8010d06:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010d0a:	f7ff fa35 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010d0e:	f7ff fa11 	bl	8010134 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010d12:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010d16:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d18:	2d00      	cmp	r5, #0
 8010d1a:	dd14      	ble.n	8010d46 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d1c:	f104 0910 	add.w	r9, r4, #16
 8010d20:	e003      	b.n	8010d2a <xQueueReceive+0x196>
				--cRxLock;
 8010d22:	1e6b      	subs	r3, r5, #1
 8010d24:	b2da      	uxtb	r2, r3
 8010d26:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d28:	b16a      	cbz	r2, 8010d46 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010d2a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d2c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010d2e:	b153      	cbz	r3, 8010d46 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d30:	f001 f87e 	bl	8011e30 <xTaskRemoveFromEventList>
 8010d34:	2800      	cmp	r0, #0
 8010d36:	d0f4      	beq.n	8010d22 <xQueueReceive+0x18e>
					vTaskMissedYield();
 8010d38:	f001 f916 	bl	8011f68 <vTaskMissedYield>
				--cRxLock;
 8010d3c:	1e6b      	subs	r3, r5, #1
 8010d3e:	b2da      	uxtb	r2, r3
 8010d40:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d42:	2a00      	cmp	r2, #0
 8010d44:	d1f1      	bne.n	8010d2a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 8010d46:	23ff      	movs	r3, #255	; 0xff
 8010d48:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010d4c:	f7ff fa14 	bl	8010178 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010d50:	f000 ff6e 	bl	8011c30 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010d54:	f7ff f9ee 	bl	8010134 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010d58:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010d5a:	b153      	cbz	r3, 8010d72 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 8010d5c:	f7ff fa0c 	bl	8010178 <vPortExitCritical>
		taskENTER_CRITICAL();
 8010d60:	f7ff f9e8 	bl	8010134 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010d64:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010d66:	2d00      	cmp	r5, #0
 8010d68:	d162      	bne.n	8010e30 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010d6a:	9b01      	ldr	r3, [sp, #4]
 8010d6c:	2b00      	cmp	r3, #0
 8010d6e:	f47f af31 	bne.w	8010bd4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 8010d72:	f7ff fa01 	bl	8010178 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010d76:	2000      	movs	r0, #0
}
 8010d78:	b005      	add	sp, #20
 8010d7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8010d7e:	f7ff f9fb 	bl	8010178 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010d82:	9901      	ldr	r1, [sp, #4]
 8010d84:	4630      	mov	r0, r6
 8010d86:	f000 ffc5 	bl	8011d14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010d8a:	f7ff f9d3 	bl	8010134 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010d8e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010d92:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010d94:	2d00      	cmp	r5, #0
 8010d96:	dc04      	bgt.n	8010da2 <xQueueReceive+0x20e>
 8010d98:	e011      	b.n	8010dbe <xQueueReceive+0x22a>
			--cTxLock;
 8010d9a:	1e6b      	subs	r3, r5, #1
 8010d9c:	b2da      	uxtb	r2, r3
 8010d9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010da0:	b16a      	cbz	r2, 8010dbe <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010da2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010da4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010da6:	b153      	cbz	r3, 8010dbe <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010da8:	f001 f842 	bl	8011e30 <xTaskRemoveFromEventList>
 8010dac:	2800      	cmp	r0, #0
 8010dae:	d0f4      	beq.n	8010d9a <xQueueReceive+0x206>
						vTaskMissedYield();
 8010db0:	f001 f8da 	bl	8011f68 <vTaskMissedYield>
			--cTxLock;
 8010db4:	1e6b      	subs	r3, r5, #1
 8010db6:	b2da      	uxtb	r2, r3
 8010db8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010dba:	2a00      	cmp	r2, #0
 8010dbc:	d1f1      	bne.n	8010da2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010dbe:	23ff      	movs	r3, #255	; 0xff
 8010dc0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010dc4:	f7ff f9d8 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010dc8:	f7ff f9b4 	bl	8010134 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010dcc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010dd0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010dd2:	2d00      	cmp	r5, #0
 8010dd4:	dd14      	ble.n	8010e00 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010dd6:	f104 0910 	add.w	r9, r4, #16
 8010dda:	e003      	b.n	8010de4 <xQueueReceive+0x250>
				--cRxLock;
 8010ddc:	1e6b      	subs	r3, r5, #1
 8010dde:	b2da      	uxtb	r2, r3
 8010de0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010de2:	b16a      	cbz	r2, 8010e00 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010de4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010de6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010de8:	b153      	cbz	r3, 8010e00 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010dea:	f001 f821 	bl	8011e30 <xTaskRemoveFromEventList>
 8010dee:	2800      	cmp	r0, #0
 8010df0:	d0f4      	beq.n	8010ddc <xQueueReceive+0x248>
					vTaskMissedYield();
 8010df2:	f001 f8b9 	bl	8011f68 <vTaskMissedYield>
				--cRxLock;
 8010df6:	1e6b      	subs	r3, r5, #1
 8010df8:	b2da      	uxtb	r2, r3
 8010dfa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010dfc:	2a00      	cmp	r2, #0
 8010dfe:	d1f1      	bne.n	8010de4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 8010e00:	23ff      	movs	r3, #255	; 0xff
 8010e02:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010e06:	f7ff f9b7 	bl	8010178 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010e0a:	f000 ff11 	bl	8011c30 <xTaskResumeAll>
 8010e0e:	2800      	cmp	r0, #0
 8010e10:	d1a6      	bne.n	8010d60 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 8010e12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010e16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010e1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010e1e:	f3bf 8f4f 	dsb	sy
 8010e22:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 8010e26:	f7ff f985 	bl	8010134 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010e2a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010e2c:	2d00      	cmp	r5, #0
 8010e2e:	d09c      	beq.n	8010d6a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010e30:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8010e32:	b152      	cbz	r2, 8010e4a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010e34:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010e36:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010e38:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010e3a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010e3c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010e3e:	bf24      	itt	cs
 8010e40:	6821      	ldrcs	r1, [r4, #0]
 8010e42:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010e44:	4638      	mov	r0, r7
 8010e46:	f01d f9ca 	bl	802e1de <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010e4a:	3d01      	subs	r5, #1
 8010e4c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010e4e:	6923      	ldr	r3, [r4, #16]
 8010e50:	b963      	cbnz	r3, 8010e6c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 8010e52:	f7ff f991 	bl	8010178 <vPortExitCritical>
				return pdPASS;
 8010e56:	2001      	movs	r0, #1
 8010e58:	e78e      	b.n	8010d78 <xQueueReceive+0x1e4>
 8010e5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010e5e:	f383 8811 	msr	BASEPRI, r3
 8010e62:	f3bf 8f6f 	isb	sy
 8010e66:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010e6a:	e7fe      	b.n	8010e6a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e6c:	f104 0010 	add.w	r0, r4, #16
 8010e70:	f000 ffde 	bl	8011e30 <xTaskRemoveFromEventList>
 8010e74:	2800      	cmp	r0, #0
 8010e76:	d0ec      	beq.n	8010e52 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 8010e78:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010e7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010e80:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010e84:	f3bf 8f4f 	dsb	sy
 8010e88:	f3bf 8f6f 	isb	sy
 8010e8c:	e7e1      	b.n	8010e52 <xQueueReceive+0x2be>
 8010e8e:	bf00      	nop

08010e90 <xQueueSemaphoreTake>:
{
 8010e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e94:	b084      	sub	sp, #16
 8010e96:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010e98:	2800      	cmp	r0, #0
 8010e9a:	d05c      	beq.n	8010f56 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010e9c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 8010e9e:	4604      	mov	r4, r0
 8010ea0:	b147      	cbz	r7, 8010eb4 <xQueueSemaphoreTake+0x24>
 8010ea2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ea6:	f383 8811 	msr	BASEPRI, r3
 8010eaa:	f3bf 8f6f 	isb	sy
 8010eae:	f3bf 8f4f 	dsb	sy
 8010eb2:	e7fe      	b.n	8010eb2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010eb4:	f001 f85e 	bl	8011f74 <xTaskGetSchedulerState>
 8010eb8:	4605      	mov	r5, r0
 8010eba:	2800      	cmp	r0, #0
 8010ebc:	d054      	beq.n	8010f68 <xQueueSemaphoreTake+0xd8>
 8010ebe:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ec0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010ec4:	f7ff f936 	bl	8010134 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8010ec8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8010eca:	2b00      	cmp	r3, #0
 8010ecc:	f040 8148 	bne.w	8011160 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010ed0:	9b01      	ldr	r3, [sp, #4]
 8010ed2:	2b00      	cmp	r3, #0
 8010ed4:	f000 813a 	beq.w	801114c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 8010ed8:	2d00      	cmp	r5, #0
 8010eda:	f000 809d 	beq.w	8011018 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 8010ede:	f7ff f94b 	bl	8010178 <vPortExitCritical>
		vTaskSuspendAll();
 8010ee2:	f000 fe9d 	bl	8011c20 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010ee6:	f7ff f925 	bl	8010134 <vPortEnterCritical>
 8010eea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010eee:	2bff      	cmp	r3, #255	; 0xff
 8010ef0:	bf04      	itt	eq
 8010ef2:	2300      	moveq	r3, #0
 8010ef4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010ef8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010efc:	2bff      	cmp	r3, #255	; 0xff
 8010efe:	bf04      	itt	eq
 8010f00:	2300      	moveq	r3, #0
 8010f02:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8010f06:	f7ff f937 	bl	8010178 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010f0a:	a901      	add	r1, sp, #4
 8010f0c:	a802      	add	r0, sp, #8
 8010f0e:	f000 ffe3 	bl	8011ed8 <xTaskCheckForTimeOut>
 8010f12:	2800      	cmp	r0, #0
 8010f14:	d135      	bne.n	8010f82 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 8010f16:	f7ff f90d 	bl	8010134 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010f1a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010f1c:	2b00      	cmp	r3, #0
 8010f1e:	f000 80a4 	beq.w	801106a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 8010f22:	f7ff f929 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010f26:	f7ff f905 	bl	8010134 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010f2a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010f2e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f30:	2d00      	cmp	r5, #0
 8010f32:	dc05      	bgt.n	8010f40 <xQueueSemaphoreTake+0xb0>
 8010f34:	e074      	b.n	8011020 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 8010f36:	1e6b      	subs	r3, r5, #1
 8010f38:	b2da      	uxtb	r2, r3
 8010f3a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f3c:	2a00      	cmp	r2, #0
 8010f3e:	d06f      	beq.n	8011020 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f40:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f42:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f44:	2b00      	cmp	r3, #0
 8010f46:	d06b      	beq.n	8011020 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f48:	f000 ff72 	bl	8011e30 <xTaskRemoveFromEventList>
 8010f4c:	2800      	cmp	r0, #0
 8010f4e:	d0f2      	beq.n	8010f36 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 8010f50:	f001 f80a 	bl	8011f68 <vTaskMissedYield>
 8010f54:	e7ef      	b.n	8010f36 <xQueueSemaphoreTake+0xa6>
 8010f56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f5a:	f383 8811 	msr	BASEPRI, r3
 8010f5e:	f3bf 8f6f 	isb	sy
 8010f62:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010f66:	e7fe      	b.n	8010f66 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010f68:	9b01      	ldr	r3, [sp, #4]
 8010f6a:	2b00      	cmp	r3, #0
 8010f6c:	f000 80d4 	beq.w	8011118 <xQueueSemaphoreTake+0x288>
 8010f70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f74:	f383 8811 	msr	BASEPRI, r3
 8010f78:	f3bf 8f6f 	isb	sy
 8010f7c:	f3bf 8f4f 	dsb	sy
 8010f80:	e7fe      	b.n	8010f80 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 8010f82:	f7ff f8d7 	bl	8010134 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010f86:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010f8a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f8c:	2d00      	cmp	r5, #0
 8010f8e:	dc04      	bgt.n	8010f9a <xQueueSemaphoreTake+0x10a>
 8010f90:	e011      	b.n	8010fb6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 8010f92:	1e6b      	subs	r3, r5, #1
 8010f94:	b2da      	uxtb	r2, r3
 8010f96:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f98:	b16a      	cbz	r2, 8010fb6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f9c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f9e:	b153      	cbz	r3, 8010fb6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010fa0:	f000 ff46 	bl	8011e30 <xTaskRemoveFromEventList>
 8010fa4:	2800      	cmp	r0, #0
 8010fa6:	d0f4      	beq.n	8010f92 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 8010fa8:	f000 ffde 	bl	8011f68 <vTaskMissedYield>
			--cTxLock;
 8010fac:	1e6b      	subs	r3, r5, #1
 8010fae:	b2da      	uxtb	r2, r3
 8010fb0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010fb2:	2a00      	cmp	r2, #0
 8010fb4:	d1f1      	bne.n	8010f9a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 8010fb6:	23ff      	movs	r3, #255	; 0xff
 8010fb8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010fbc:	f7ff f8dc 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010fc0:	f7ff f8b8 	bl	8010134 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010fc4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010fc8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010fca:	2d00      	cmp	r5, #0
 8010fcc:	dd14      	ble.n	8010ff8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010fce:	f104 0810 	add.w	r8, r4, #16
 8010fd2:	e003      	b.n	8010fdc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 8010fd4:	1e6b      	subs	r3, r5, #1
 8010fd6:	b2da      	uxtb	r2, r3
 8010fd8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010fda:	b16a      	cbz	r2, 8010ff8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010fdc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010fde:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010fe0:	b153      	cbz	r3, 8010ff8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010fe2:	f000 ff25 	bl	8011e30 <xTaskRemoveFromEventList>
 8010fe6:	2800      	cmp	r0, #0
 8010fe8:	d0f4      	beq.n	8010fd4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 8010fea:	f000 ffbd 	bl	8011f68 <vTaskMissedYield>
				--cRxLock;
 8010fee:	1e6b      	subs	r3, r5, #1
 8010ff0:	b2da      	uxtb	r2, r3
 8010ff2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ff4:	2a00      	cmp	r2, #0
 8010ff6:	d1f1      	bne.n	8010fdc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 8010ff8:	23ff      	movs	r3, #255	; 0xff
 8010ffa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010ffe:	f7ff f8bb 	bl	8010178 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8011002:	f000 fe15 	bl	8011c30 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8011006:	f7ff f895 	bl	8010134 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 801100a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801100c:	2b00      	cmp	r3, #0
 801100e:	d07c      	beq.n	801110a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 8011010:	f7ff f8b2 	bl	8010178 <vPortExitCritical>
	return xReturn;
 8011014:	2501      	movs	r5, #1
 8011016:	e755      	b.n	8010ec4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8011018:	a802      	add	r0, sp, #8
 801101a:	f000 ff51 	bl	8011ec0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 801101e:	e75e      	b.n	8010ede <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 8011020:	23ff      	movs	r3, #255	; 0xff
 8011022:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8011026:	f7ff f8a7 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 801102a:	f7ff f883 	bl	8010134 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801102e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8011032:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011034:	2d00      	cmp	r5, #0
 8011036:	dd10      	ble.n	801105a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011038:	f104 0810 	add.w	r8, r4, #16
 801103c:	e003      	b.n	8011046 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 801103e:	1e6b      	subs	r3, r5, #1
 8011040:	b2da      	uxtb	r2, r3
 8011042:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011044:	b14a      	cbz	r2, 801105a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011046:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011048:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801104a:	b133      	cbz	r3, 801105a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801104c:	f000 fef0 	bl	8011e30 <xTaskRemoveFromEventList>
 8011050:	2800      	cmp	r0, #0
 8011052:	d0f4      	beq.n	801103e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 8011054:	f000 ff88 	bl	8011f68 <vTaskMissedYield>
 8011058:	e7f1      	b.n	801103e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 801105a:	23ff      	movs	r3, #255	; 0xff
 801105c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8011060:	f7ff f88a 	bl	8010178 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8011064:	f000 fde4 	bl	8011c30 <xTaskResumeAll>
 8011068:	e7d4      	b.n	8011014 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 801106a:	f7ff f885 	bl	8010178 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 801106e:	6823      	ldr	r3, [r4, #0]
 8011070:	2b00      	cmp	r3, #0
 8011072:	d062      	beq.n	801113a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8011074:	9901      	ldr	r1, [sp, #4]
 8011076:	4630      	mov	r0, r6
 8011078:	f000 fe4c 	bl	8011d14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 801107c:	f7ff f85a 	bl	8010134 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8011080:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8011084:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011086:	2d00      	cmp	r5, #0
 8011088:	dc04      	bgt.n	8011094 <xQueueSemaphoreTake+0x204>
 801108a:	e00d      	b.n	80110a8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 801108c:	1e6b      	subs	r3, r5, #1
 801108e:	b2da      	uxtb	r2, r3
 8011090:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011092:	b14a      	cbz	r2, 80110a8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011094:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011096:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011098:	b133      	cbz	r3, 80110a8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801109a:	f000 fec9 	bl	8011e30 <xTaskRemoveFromEventList>
 801109e:	2800      	cmp	r0, #0
 80110a0:	d0f4      	beq.n	801108c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 80110a2:	f000 ff61 	bl	8011f68 <vTaskMissedYield>
 80110a6:	e7f1      	b.n	801108c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 80110a8:	23ff      	movs	r3, #255	; 0xff
 80110aa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80110ae:	f7ff f863 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 80110b2:	f7ff f83f 	bl	8010134 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80110b6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80110ba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80110bc:	2d00      	cmp	r5, #0
 80110be:	dd10      	ble.n	80110e2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80110c0:	f104 0810 	add.w	r8, r4, #16
 80110c4:	e003      	b.n	80110ce <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 80110c6:	1e6b      	subs	r3, r5, #1
 80110c8:	b2da      	uxtb	r2, r3
 80110ca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80110cc:	b14a      	cbz	r2, 80110e2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80110ce:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80110d0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80110d2:	b133      	cbz	r3, 80110e2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80110d4:	f000 feac 	bl	8011e30 <xTaskRemoveFromEventList>
 80110d8:	2800      	cmp	r0, #0
 80110da:	d0f4      	beq.n	80110c6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 80110dc:	f000 ff44 	bl	8011f68 <vTaskMissedYield>
 80110e0:	e7f1      	b.n	80110c6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 80110e2:	23ff      	movs	r3, #255	; 0xff
 80110e4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80110e8:	f7ff f846 	bl	8010178 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 80110ec:	f000 fda0 	bl	8011c30 <xTaskResumeAll>
 80110f0:	2800      	cmp	r0, #0
 80110f2:	d18f      	bne.n	8011014 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 80110f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80110f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80110fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011100:	f3bf 8f4f 	dsb	sy
 8011104:	f3bf 8f6f 	isb	sy
 8011108:	e784      	b.n	8011014 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 801110a:	f7ff f835 	bl	8010178 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 801110e:	b92f      	cbnz	r7, 801111c <xQueueSemaphoreTake+0x28c>
}
 8011110:	4638      	mov	r0, r7
 8011112:	b004      	add	sp, #16
 8011114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011118:	4607      	mov	r7, r0
 801111a:	e6d1      	b.n	8010ec0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 801111c:	f7ff f80a 	bl	8010134 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8011120:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8011122:	b119      	cbz	r1, 801112c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8011124:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011126:	6819      	ldr	r1, [r3, #0]
 8011128:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 801112c:	68a0      	ldr	r0, [r4, #8]
 801112e:	f000 ffbd 	bl	80120ac <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8011132:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 8011134:	f7ff f820 	bl	8010178 <vPortExitCritical>
 8011138:	e7ea      	b.n	8011110 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 801113a:	f7fe fffb 	bl	8010134 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 801113e:	68a0      	ldr	r0, [r4, #8]
 8011140:	f000 ff28 	bl	8011f94 <xTaskPriorityInherit>
 8011144:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 8011146:	f7ff f817 	bl	8010178 <vPortExitCritical>
 801114a:	e793      	b.n	8011074 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 801114c:	b197      	cbz	r7, 8011174 <xQueueSemaphoreTake+0x2e4>
 801114e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011152:	f383 8811 	msr	BASEPRI, r3
 8011156:	f3bf 8f6f 	isb	sy
 801115a:	f3bf 8f4f 	dsb	sy
 801115e:	e7fe      	b.n	801115e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011160:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8011162:	3b01      	subs	r3, #1
 8011164:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011166:	b1ca      	cbz	r2, 801119c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011168:	6923      	ldr	r3, [r4, #16]
 801116a:	b933      	cbnz	r3, 801117a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 801116c:	f7ff f804 	bl	8010178 <vPortExitCritical>
				return pdPASS;
 8011170:	2701      	movs	r7, #1
 8011172:	e7cd      	b.n	8011110 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 8011174:	f7ff f800 	bl	8010178 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8011178:	e7ca      	b.n	8011110 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801117a:	f104 0010 	add.w	r0, r4, #16
 801117e:	f000 fe57 	bl	8011e30 <xTaskRemoveFromEventList>
 8011182:	2800      	cmp	r0, #0
 8011184:	d0f2      	beq.n	801116c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 8011186:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801118a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801118e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011192:	f3bf 8f4f 	dsb	sy
 8011196:	f3bf 8f6f 	isb	sy
 801119a:	e7e7      	b.n	801116c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 801119c:	f000 ffda 	bl	8012154 <pvTaskIncrementMutexHeldCount>
 80111a0:	60a0      	str	r0, [r4, #8]
 80111a2:	e7e1      	b.n	8011168 <xQueueSemaphoreTake+0x2d8>

080111a4 <xQueueReceiveFromISR>:
{
 80111a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 80111a8:	b310      	cbz	r0, 80111f0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80111aa:	460e      	mov	r6, r1
 80111ac:	4617      	mov	r7, r2
 80111ae:	4604      	mov	r4, r0
 80111b0:	b191      	cbz	r1, 80111d8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80111b2:	f7ff f8f3 	bl	801039c <vPortValidateInterruptPriority>
	__asm volatile
 80111b6:	f3ef 8911 	mrs	r9, BASEPRI
 80111ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80111be:	f383 8811 	msr	BASEPRI, r3
 80111c2:	f3bf 8f6f 	isb	sy
 80111c6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80111ca:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80111cc:	b9cd      	cbnz	r5, 8011202 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 80111ce:	4628      	mov	r0, r5
	__asm volatile
 80111d0:	f389 8811 	msr	BASEPRI, r9
}
 80111d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80111d8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80111da:	2b00      	cmp	r3, #0
 80111dc:	d0e9      	beq.n	80111b2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 80111de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80111e2:	f383 8811 	msr	BASEPRI, r3
 80111e6:	f3bf 8f6f 	isb	sy
 80111ea:	f3bf 8f4f 	dsb	sy
 80111ee:	e7fe      	b.n	80111ee <xQueueReceiveFromISR+0x4a>
 80111f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80111f4:	f383 8811 	msr	BASEPRI, r3
 80111f8:	f3bf 8f6f 	isb	sy
 80111fc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011200:	e7fe      	b.n	8011200 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 8011202:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8011206:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 8011208:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 801120c:	b152      	cbz	r2, 8011224 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 801120e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8011210:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8011212:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8011214:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8011216:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8011218:	bf24      	itt	cs
 801121a:	6821      	ldrcs	r1, [r4, #0]
 801121c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801121e:	4630      	mov	r0, r6
 8011220:	f01c ffdd 	bl	802e1de <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8011224:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8011226:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 801122a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 801122c:	d009      	beq.n	8011242 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 801122e:	f108 0301 	add.w	r3, r8, #1
 8011232:	b25b      	sxtb	r3, r3
 8011234:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 8011238:	2001      	movs	r0, #1
	__asm volatile
 801123a:	f389 8811 	msr	BASEPRI, r9
}
 801123e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011242:	6923      	ldr	r3, [r4, #16]
 8011244:	2b00      	cmp	r3, #0
 8011246:	d0f7      	beq.n	8011238 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011248:	f104 0010 	add.w	r0, r4, #16
 801124c:	f000 fdf0 	bl	8011e30 <xTaskRemoveFromEventList>
 8011250:	2800      	cmp	r0, #0
 8011252:	d0f1      	beq.n	8011238 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 8011254:	2f00      	cmp	r7, #0
 8011256:	d0ef      	beq.n	8011238 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8011258:	2001      	movs	r0, #1
 801125a:	6038      	str	r0, [r7, #0]
 801125c:	e7b8      	b.n	80111d0 <xQueueReceiveFromISR+0x2c>
 801125e:	bf00      	nop

08011260 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 8011260:	b158      	cbz	r0, 801127a <uxQueueMessagesWaiting+0x1a>
{
 8011262:	b510      	push	{r4, lr}
 8011264:	4604      	mov	r4, r0
 8011266:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 8011268:	f7fe ff64 	bl	8010134 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 801126c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 801126e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011270:	f7fe ff82 	bl	8010178 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8011274:	9801      	ldr	r0, [sp, #4]
 8011276:	b002      	add	sp, #8
 8011278:	bd10      	pop	{r4, pc}
	__asm volatile
 801127a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801127e:	f383 8811 	msr	BASEPRI, r3
 8011282:	f3bf 8f6f 	isb	sy
 8011286:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 801128a:	e7fe      	b.n	801128a <uxQueueMessagesWaiting+0x2a>

0801128c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 801128c:	b108      	cbz	r0, 8011292 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 801128e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8011290:	4770      	bx	lr
 8011292:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011296:	f383 8811 	msr	BASEPRI, r3
 801129a:	f3bf 8f6f 	isb	sy
 801129e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80112a2:	e7fe      	b.n	80112a2 <uxQueueMessagesWaitingFromISR+0x16>
 80112a4:	0000      	movs	r0, r0
	...

080112a8 <vQueueDelete>:
	configASSERT( pxQueue );
 80112a8:	b1f0      	cbz	r0, 80112e8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80112aa:	4b21      	ldr	r3, [pc, #132]	; (8011330 <vQueueDelete+0x88>)
 80112ac:	685a      	ldr	r2, [r3, #4]
 80112ae:	4290      	cmp	r0, r2
 80112b0:	d025      	beq.n	80112fe <vQueueDelete+0x56>
 80112b2:	68da      	ldr	r2, [r3, #12]
 80112b4:	4290      	cmp	r0, r2
 80112b6:	d02c      	beq.n	8011312 <vQueueDelete+0x6a>
 80112b8:	695a      	ldr	r2, [r3, #20]
 80112ba:	4290      	cmp	r0, r2
 80112bc:	d02b      	beq.n	8011316 <vQueueDelete+0x6e>
 80112be:	69da      	ldr	r2, [r3, #28]
 80112c0:	4290      	cmp	r0, r2
 80112c2:	d02a      	beq.n	801131a <vQueueDelete+0x72>
 80112c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80112c6:	4290      	cmp	r0, r2
 80112c8:	d029      	beq.n	801131e <vQueueDelete+0x76>
 80112ca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80112cc:	4290      	cmp	r0, r2
 80112ce:	d01e      	beq.n	801130e <vQueueDelete+0x66>
 80112d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80112d2:	4290      	cmp	r0, r2
 80112d4:	d025      	beq.n	8011322 <vQueueDelete+0x7a>
 80112d6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80112d8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80112da:	bf08      	it	eq
 80112dc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80112de:	d00f      	beq.n	8011300 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80112e0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 80112e4:	b14b      	cbz	r3, 80112fa <vQueueDelete+0x52>
}
 80112e6:	4770      	bx	lr
 80112e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80112ec:	f383 8811 	msr	BASEPRI, r3
 80112f0:	f3bf 8f6f 	isb	sy
 80112f4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80112f8:	e7fe      	b.n	80112f8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 80112fa:	f7fe be03 	b.w	800ff04 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80112fe:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8011300:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8011328 <vQueueDelete+0x80>
 8011304:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8011308:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 801130c:	e7e8      	b.n	80112e0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801130e:	2205      	movs	r2, #5
 8011310:	e7f6      	b.n	8011300 <vQueueDelete+0x58>
 8011312:	2201      	movs	r2, #1
 8011314:	e7f4      	b.n	8011300 <vQueueDelete+0x58>
 8011316:	2202      	movs	r2, #2
 8011318:	e7f2      	b.n	8011300 <vQueueDelete+0x58>
 801131a:	2203      	movs	r2, #3
 801131c:	e7f0      	b.n	8011300 <vQueueDelete+0x58>
 801131e:	2204      	movs	r2, #4
 8011320:	e7ee      	b.n	8011300 <vQueueDelete+0x58>
 8011322:	2206      	movs	r2, #6
 8011324:	e7ec      	b.n	8011300 <vQueueDelete+0x58>
 8011326:	bf00      	nop
	...
 8011330:	200131e0 	.word	0x200131e0

08011334 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8011334:	4b12      	ldr	r3, [pc, #72]	; (8011380 <vQueueAddToRegistry+0x4c>)
 8011336:	681a      	ldr	r2, [r3, #0]
 8011338:	b17a      	cbz	r2, 801135a <vQueueAddToRegistry+0x26>
 801133a:	689a      	ldr	r2, [r3, #8]
 801133c:	b162      	cbz	r2, 8011358 <vQueueAddToRegistry+0x24>
 801133e:	691a      	ldr	r2, [r3, #16]
 8011340:	b192      	cbz	r2, 8011368 <vQueueAddToRegistry+0x34>
 8011342:	699a      	ldr	r2, [r3, #24]
 8011344:	b192      	cbz	r2, 801136c <vQueueAddToRegistry+0x38>
 8011346:	6a1a      	ldr	r2, [r3, #32]
 8011348:	b192      	cbz	r2, 8011370 <vQueueAddToRegistry+0x3c>
 801134a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 801134c:	b192      	cbz	r2, 8011374 <vQueueAddToRegistry+0x40>
 801134e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8011350:	b192      	cbz	r2, 8011378 <vQueueAddToRegistry+0x44>
 8011352:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8011354:	b192      	cbz	r2, 801137c <vQueueAddToRegistry+0x48>
	}
 8011356:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011358:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 801135a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 801135e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8011362:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 8011366:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011368:	2202      	movs	r2, #2
 801136a:	e7f6      	b.n	801135a <vQueueAddToRegistry+0x26>
 801136c:	2203      	movs	r2, #3
 801136e:	e7f4      	b.n	801135a <vQueueAddToRegistry+0x26>
 8011370:	2204      	movs	r2, #4
 8011372:	e7f2      	b.n	801135a <vQueueAddToRegistry+0x26>
 8011374:	2205      	movs	r2, #5
 8011376:	e7f0      	b.n	801135a <vQueueAddToRegistry+0x26>
 8011378:	2206      	movs	r2, #6
 801137a:	e7ee      	b.n	801135a <vQueueAddToRegistry+0x26>
 801137c:	2207      	movs	r2, #7
 801137e:	e7ec      	b.n	801135a <vQueueAddToRegistry+0x26>
 8011380:	200131e0 	.word	0x200131e0

08011384 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8011384:	b570      	push	{r4, r5, r6, lr}
 8011386:	4605      	mov	r5, r0
 8011388:	460e      	mov	r6, r1
 801138a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 801138c:	f7fe fed2 	bl	8010134 <vPortEnterCritical>
 8011390:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8011394:	2bff      	cmp	r3, #255	; 0xff
 8011396:	bf04      	itt	eq
 8011398:	2300      	moveq	r3, #0
 801139a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 801139e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 80113a2:	2bff      	cmp	r3, #255	; 0xff
 80113a4:	bf04      	itt	eq
 80113a6:	2300      	moveq	r3, #0
 80113a8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 80113ac:	f7fe fee4 	bl	8010178 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80113b0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80113b2:	2b00      	cmp	r3, #0
 80113b4:	d043      	beq.n	801143e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 80113b6:	f7fe febd 	bl	8010134 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80113ba:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 80113be:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80113c0:	2c00      	cmp	r4, #0
 80113c2:	dd14      	ble.n	80113ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80113c4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 80113c8:	e003      	b.n	80113d2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 80113ca:	1e63      	subs	r3, r4, #1
 80113cc:	b2da      	uxtb	r2, r3
 80113ce:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80113d0:	b16a      	cbz	r2, 80113ee <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80113d2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80113d4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80113d6:	b153      	cbz	r3, 80113ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80113d8:	f000 fd2a 	bl	8011e30 <xTaskRemoveFromEventList>
 80113dc:	2800      	cmp	r0, #0
 80113de:	d0f4      	beq.n	80113ca <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 80113e0:	f000 fdc2 	bl	8011f68 <vTaskMissedYield>
			--cTxLock;
 80113e4:	1e63      	subs	r3, r4, #1
 80113e6:	b2da      	uxtb	r2, r3
 80113e8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80113ea:	2a00      	cmp	r2, #0
 80113ec:	d1f1      	bne.n	80113d2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 80113ee:	23ff      	movs	r3, #255	; 0xff
 80113f0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 80113f4:	f7fe fec0 	bl	8010178 <vPortExitCritical>
	taskENTER_CRITICAL();
 80113f8:	f7fe fe9c 	bl	8010134 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80113fc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8011400:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011402:	2c00      	cmp	r4, #0
 8011404:	dd14      	ble.n	8011430 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011406:	f105 0610 	add.w	r6, r5, #16
 801140a:	e003      	b.n	8011414 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 801140c:	1e63      	subs	r3, r4, #1
 801140e:	b2da      	uxtb	r2, r3
 8011410:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011412:	b16a      	cbz	r2, 8011430 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011414:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011416:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011418:	b153      	cbz	r3, 8011430 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801141a:	f000 fd09 	bl	8011e30 <xTaskRemoveFromEventList>
 801141e:	2800      	cmp	r0, #0
 8011420:	d0f4      	beq.n	801140c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 8011422:	f000 fda1 	bl	8011f68 <vTaskMissedYield>
				--cRxLock;
 8011426:	1e63      	subs	r3, r4, #1
 8011428:	b2da      	uxtb	r2, r3
 801142a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801142c:	2a00      	cmp	r2, #0
 801142e:	d1f1      	bne.n	8011414 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 8011430:	23ff      	movs	r3, #255	; 0xff
 8011432:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 8011436:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 801143a:	f7fe be9d 	b.w	8010178 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 801143e:	4622      	mov	r2, r4
 8011440:	4631      	mov	r1, r6
 8011442:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8011446:	f000 fca9 	bl	8011d9c <vTaskPlaceOnEventListRestricted>
 801144a:	e7b4      	b.n	80113b6 <vQueueWaitForMessageRestricted+0x32>

0801144c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 801144c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011450:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8011452:	f7fe fe6f 	bl	8010134 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8011456:	4a34      	ldr	r2, [pc, #208]	; (8011528 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 8011458:	4e34      	ldr	r6, [pc, #208]	; (801152c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 801145a:	6813      	ldr	r3, [r2, #0]
 801145c:	3301      	adds	r3, #1
 801145e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 8011460:	6833      	ldr	r3, [r6, #0]
 8011462:	2b00      	cmp	r3, #0
 8011464:	d032      	beq.n	80114cc <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 8011466:	4c32      	ldr	r4, [pc, #200]	; (8011530 <prvAddNewTaskToReadyList+0xe4>)
 8011468:	6823      	ldr	r3, [r4, #0]
 801146a:	b33b      	cbz	r3, 80114bc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801146c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 801146e:	4f31      	ldr	r7, [pc, #196]	; (8011534 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 8011470:	4a31      	ldr	r2, [pc, #196]	; (8011538 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 8011472:	4932      	ldr	r1, [pc, #200]	; (801153c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 8011474:	6813      	ldr	r3, [r2, #0]
 8011476:	3301      	adds	r3, #1
 8011478:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 801147a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 801147c:	680b      	ldr	r3, [r1, #0]
 801147e:	4283      	cmp	r3, r0
 8011480:	bf38      	it	cc
 8011482:	6008      	strcc	r0, [r1, #0]
 8011484:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011488:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 801148c:	1d29      	adds	r1, r5, #4
 801148e:	f7fe fdad 	bl	800ffec <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 8011492:	f7fe fe71 	bl	8010178 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 8011496:	6823      	ldr	r3, [r4, #0]
 8011498:	b173      	cbz	r3, 80114b8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 801149a:	6832      	ldr	r2, [r6, #0]
 801149c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 801149e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80114a0:	429a      	cmp	r2, r3
 80114a2:	d209      	bcs.n	80114b8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 80114a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80114a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80114ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80114b0:	f3bf 8f4f 	dsb	sy
 80114b4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80114b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80114bc:	6833      	ldr	r3, [r6, #0]
 80114be:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 80114c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80114c2:	4f1c      	ldr	r7, [pc, #112]	; (8011534 <prvAddNewTaskToReadyList+0xe8>)
 80114c4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 80114c6:	bf98      	it	ls
 80114c8:	6035      	strls	r5, [r6, #0]
 80114ca:	e7d1      	b.n	8011470 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 80114cc:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80114ce:	6813      	ldr	r3, [r2, #0]
 80114d0:	2b01      	cmp	r3, #1
 80114d2:	d003      	beq.n	80114dc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80114d4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 80114d6:	4f17      	ldr	r7, [pc, #92]	; (8011534 <prvAddNewTaskToReadyList+0xe8>)
 80114d8:	4c15      	ldr	r4, [pc, #84]	; (8011530 <prvAddNewTaskToReadyList+0xe4>)
 80114da:	e7c9      	b.n	8011470 <prvAddNewTaskToReadyList+0x24>
 80114dc:	4f15      	ldr	r7, [pc, #84]	; (8011534 <prvAddNewTaskToReadyList+0xe8>)
 80114de:	463c      	mov	r4, r7
 80114e0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80114e4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80114e6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80114e8:	f7fe fd70 	bl	800ffcc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80114ec:	45a0      	cmp	r8, r4
 80114ee:	d1f9      	bne.n	80114e4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 80114f0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8011554 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 80114f4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8011558 <prvAddNewTaskToReadyList+0x10c>
 80114f8:	4c0d      	ldr	r4, [pc, #52]	; (8011530 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 80114fa:	4648      	mov	r0, r9
 80114fc:	f7fe fd66 	bl	800ffcc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8011500:	4640      	mov	r0, r8
 8011502:	f7fe fd63 	bl	800ffcc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8011506:	480e      	ldr	r0, [pc, #56]	; (8011540 <prvAddNewTaskToReadyList+0xf4>)
 8011508:	f7fe fd60 	bl	800ffcc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 801150c:	480d      	ldr	r0, [pc, #52]	; (8011544 <prvAddNewTaskToReadyList+0xf8>)
 801150e:	f7fe fd5d 	bl	800ffcc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8011512:	480d      	ldr	r0, [pc, #52]	; (8011548 <prvAddNewTaskToReadyList+0xfc>)
 8011514:	f7fe fd5a 	bl	800ffcc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8011518:	4b0c      	ldr	r3, [pc, #48]	; (801154c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 801151a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 801151c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8011520:	4b0b      	ldr	r3, [pc, #44]	; (8011550 <prvAddNewTaskToReadyList+0x104>)
 8011522:	f8c3 8000 	str.w	r8, [r3]
}
 8011526:	e7a3      	b.n	8011470 <prvAddNewTaskToReadyList+0x24>
 8011528:	2001368c 	.word	0x2001368c
 801152c:	20013220 	.word	0x20013220
 8011530:	200136e8 	.word	0x200136e8
 8011534:	2001322c 	.word	0x2001322c
 8011538:	20013698 	.word	0x20013698
 801153c:	2001369c 	.word	0x2001369c
 8011540:	200136d4 	.word	0x200136d4
 8011544:	20013700 	.word	0x20013700
 8011548:	200136ec 	.word	0x200136ec
 801154c:	20013224 	.word	0x20013224
 8011550:	20013228 	.word	0x20013228
 8011554:	200136a0 	.word	0x200136a0
 8011558:	200136b4 	.word	0x200136b4

0801155c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801155c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011560:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011562:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011566:	ea4f 0982 	mov.w	r9, r2, lsl #2
 801156a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801156c:	4606      	mov	r6, r0
 801156e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011570:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011572:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8011574:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011576:	f01c fd0c 	bl	802df92 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 801157a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801157c:	f1a9 0904 	sub.w	r9, r9, #4
 8011580:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8011582:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 8011586:	2d00      	cmp	r5, #0
 8011588:	d079      	beq.n	801167e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801158a:	782b      	ldrb	r3, [r5, #0]
 801158c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 8011590:	2b00      	cmp	r3, #0
 8011592:	d03b      	beq.n	801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011594:	786b      	ldrb	r3, [r5, #1]
 8011596:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 801159a:	2b00      	cmp	r3, #0
 801159c:	d036      	beq.n	801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801159e:	78ab      	ldrb	r3, [r5, #2]
 80115a0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 80115a4:	b393      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115a6:	78eb      	ldrb	r3, [r5, #3]
 80115a8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 80115ac:	b373      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115ae:	792b      	ldrb	r3, [r5, #4]
 80115b0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 80115b4:	b353      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115b6:	796b      	ldrb	r3, [r5, #5]
 80115b8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 80115bc:	b333      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115be:	79ab      	ldrb	r3, [r5, #6]
 80115c0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 80115c4:	b313      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115c6:	79eb      	ldrb	r3, [r5, #7]
 80115c8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 80115cc:	b1f3      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115ce:	7a2b      	ldrb	r3, [r5, #8]
 80115d0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 80115d4:	b1d3      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115d6:	7a6b      	ldrb	r3, [r5, #9]
 80115d8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 80115dc:	b1b3      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115de:	7aab      	ldrb	r3, [r5, #10]
 80115e0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 80115e4:	b193      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115e6:	7aeb      	ldrb	r3, [r5, #11]
 80115e8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 80115ec:	b173      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115ee:	7b2b      	ldrb	r3, [r5, #12]
 80115f0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 80115f4:	b153      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115f6:	7b6b      	ldrb	r3, [r5, #13]
 80115f8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 80115fc:	b133      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115fe:	7bab      	ldrb	r3, [r5, #14]
 8011600:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 8011604:	b113      	cbz	r3, 801160c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011606:	7beb      	ldrb	r3, [r5, #15]
 8011608:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 801160c:	2300      	movs	r3, #0
 801160e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8011612:	9d08      	ldr	r5, [sp, #32]
 8011614:	2d37      	cmp	r5, #55	; 0x37
 8011616:	bf28      	it	cs
 8011618:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 801161a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 801161e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8011620:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8011622:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8011624:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8011628:	f7fe fcdc 	bl	800ffe4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801162c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8011630:	f104 0018 	add.w	r0, r4, #24
 8011634:	f7fe fcd6 	bl	800ffe4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011638:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 801163a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 801163e:	4651      	mov	r1, sl
 8011640:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8011642:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8011644:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8011646:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 801164a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 801164e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011652:	f01c fc9e 	bl	802df92 <memset>
 8011656:	4b0b      	ldr	r3, [pc, #44]	; (8011684 <prvInitialiseNewTask.constprop.0+0x128>)
 8011658:	65e3      	str	r3, [r4, #92]	; 0x5c
 801165a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 801165e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8011660:	463a      	mov	r2, r7
 8011662:	4631      	mov	r1, r6
 8011664:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8011666:	6625      	str	r5, [r4, #96]	; 0x60
 8011668:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 801166a:	f7fe fd39 	bl	80100e0 <pxPortInitialiseStack>
 801166e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8011670:	f1b8 0f00 	cmp.w	r8, #0
 8011674:	d001      	beq.n	801167a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8011676:	f8c8 4000 	str.w	r4, [r8]
}
 801167a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 801167e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8011682:	e7c6      	b.n	8011612 <prvInitialiseNewTask.constprop.0+0xb6>
 8011684:	200141b0 	.word	0x200141b0

08011688 <prvIdleTask>:
{
 8011688:	b580      	push	{r7, lr}
 801168a:	4d23      	ldr	r5, [pc, #140]	; (8011718 <prvIdleTask+0x90>)
 801168c:	4f23      	ldr	r7, [pc, #140]	; (801171c <prvIdleTask+0x94>)
 801168e:	4e24      	ldr	r6, [pc, #144]	; (8011720 <prvIdleTask+0x98>)
 8011690:	f8df 8090 	ldr.w	r8, [pc, #144]	; 8011724 <prvIdleTask+0x9c>
				taskYIELD();
 8011694:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 8011698:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 801169c:	682b      	ldr	r3, [r5, #0]
 801169e:	b35b      	cbz	r3, 80116f8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 80116a0:	f7fe fd48 	bl	8010134 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116a4:	68fb      	ldr	r3, [r7, #12]
 80116a6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80116a8:	1d20      	adds	r0, r4, #4
 80116aa:	f7fe fcc7 	bl	801003c <uxListRemove>
				--uxCurrentNumberOfTasks;
 80116ae:	6833      	ldr	r3, [r6, #0]
 80116b0:	3b01      	subs	r3, #1
 80116b2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 80116b4:	682b      	ldr	r3, [r5, #0]
 80116b6:	3b01      	subs	r3, #1
 80116b8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 80116ba:	f7fe fd5d 	bl	8010178 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 80116be:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80116c2:	f01c fcaf 	bl	802e024 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80116c6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 80116ca:	b163      	cbz	r3, 80116e6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80116cc:	2b01      	cmp	r3, #1
 80116ce:	d01e      	beq.n	801170e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80116d0:	2b02      	cmp	r3, #2
 80116d2:	d0e3      	beq.n	801169c <prvIdleTask+0x14>
 80116d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80116d8:	f383 8811 	msr	BASEPRI, r3
 80116dc:	f3bf 8f6f 	isb	sy
 80116e0:	f3bf 8f4f 	dsb	sy
 80116e4:	e7fe      	b.n	80116e4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 80116e6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80116e8:	f7fe fc0c 	bl	800ff04 <vPortFree>
				vPortFree( pxTCB );
 80116ec:	4620      	mov	r0, r4
 80116ee:	f7fe fc09 	bl	800ff04 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80116f2:	682b      	ldr	r3, [r5, #0]
 80116f4:	2b00      	cmp	r3, #0
 80116f6:	d1d3      	bne.n	80116a0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80116f8:	f8d8 3000 	ldr.w	r3, [r8]
 80116fc:	2b01      	cmp	r3, #1
 80116fe:	d9cd      	bls.n	801169c <prvIdleTask+0x14>
				taskYIELD();
 8011700:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 8011704:	f3bf 8f4f 	dsb	sy
 8011708:	f3bf 8f6f 	isb	sy
 801170c:	e7c6      	b.n	801169c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 801170e:	4620      	mov	r0, r4
 8011710:	f7fe fbf8 	bl	800ff04 <vPortFree>
 8011714:	e7c2      	b.n	801169c <prvIdleTask+0x14>
 8011716:	bf00      	nop
 8011718:	20013690 	.word	0x20013690
 801171c:	20013700 	.word	0x20013700
 8011720:	2001368c 	.word	0x2001368c
 8011724:	2001322c 	.word	0x2001322c

08011728 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 8011728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 801172c:	4b47      	ldr	r3, [pc, #284]	; (801184c <xTaskIncrementTick.part.0+0x124>)
 801172e:	681e      	ldr	r6, [r3, #0]
 8011730:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 8011732:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 8011734:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8011736:	2e00      	cmp	r6, #0
 8011738:	d040      	beq.n	80117bc <xTaskIncrementTick.part.0+0x94>
 801173a:	f8df b124 	ldr.w	fp, [pc, #292]	; 8011860 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 801173e:	f8db 3000 	ldr.w	r3, [fp]
 8011742:	429e      	cmp	r6, r3
 8011744:	d347      	bcc.n	80117d6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011746:	4f42      	ldr	r7, [pc, #264]	; (8011850 <xTaskIncrementTick.part.0+0x128>)
 8011748:	f8df 9118 	ldr.w	r9, [pc, #280]	; 8011864 <xTaskIncrementTick.part.0+0x13c>
 801174c:	683b      	ldr	r3, [r7, #0]
 801174e:	f8df a118 	ldr.w	sl, [pc, #280]	; 8011868 <xTaskIncrementTick.part.0+0x140>
 8011752:	681d      	ldr	r5, [r3, #0]
 8011754:	2d00      	cmp	r5, #0
 8011756:	d073      	beq.n	8011840 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 8011758:	f8df 8110 	ldr.w	r8, [pc, #272]	; 801186c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 801175c:	2500      	movs	r5, #0
 801175e:	e022      	b.n	80117a6 <xTaskIncrementTick.part.0+0x7e>
 8011760:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011762:	f7fe fc6b 	bl	801003c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8011766:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8011768:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801176a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 801176e:	b113      	cbz	r3, 8011776 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8011770:	f7fe fc64 	bl	801003c <uxListRemove>
 8011774:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8011776:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011778:	f8d8 2000 	ldr.w	r2, [r8]
 801177c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011780:	4293      	cmp	r3, r2
 8011782:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 8011786:	bf88      	it	hi
 8011788:	f8c8 3000 	strhi.w	r3, [r8]
 801178c:	f7fe fc2e 	bl	800ffec <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011790:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011794:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011796:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011798:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801179a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 801179c:	4291      	cmp	r1, r2
 801179e:	bf28      	it	cs
 80117a0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80117a2:	2b00      	cmp	r3, #0
 80117a4:	d04c      	beq.n	8011840 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80117a6:	683b      	ldr	r3, [r7, #0]
 80117a8:	68db      	ldr	r3, [r3, #12]
 80117aa:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80117ac:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80117ae:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 80117b0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80117b2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 80117b4:	d2d4      	bcs.n	8011760 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 80117b6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80117ba:	e011      	b.n	80117e0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 80117bc:	4b24      	ldr	r3, [pc, #144]	; (8011850 <xTaskIncrementTick.part.0+0x128>)
 80117be:	681a      	ldr	r2, [r3, #0]
 80117c0:	6812      	ldr	r2, [r2, #0]
 80117c2:	b30a      	cbz	r2, 8011808 <xTaskIncrementTick.part.0+0xe0>
 80117c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80117c8:	f383 8811 	msr	BASEPRI, r3
 80117cc:	f3bf 8f6f 	isb	sy
 80117d0:	f3bf 8f4f 	dsb	sy
 80117d4:	e7fe      	b.n	80117d4 <xTaskIncrementTick.part.0+0xac>
 80117d6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8011864 <xTaskIncrementTick.part.0+0x13c>
 80117da:	f8df a08c 	ldr.w	sl, [pc, #140]	; 8011868 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 80117de:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80117e0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 80117e4:	491b      	ldr	r1, [pc, #108]	; (8011854 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80117e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80117e8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80117ec:	009b      	lsls	r3, r3, #2
 80117ee:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 80117f2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 80117f4:	2a02      	cmp	r2, #2
 80117f6:	bf28      	it	cs
 80117f8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 80117fa:	2b00      	cmp	r3, #0
}
 80117fc:	bf0c      	ite	eq
 80117fe:	4628      	moveq	r0, r5
 8011800:	2001      	movne	r0, #1
 8011802:	b003      	add	sp, #12
 8011804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 8011808:	4a13      	ldr	r2, [pc, #76]	; (8011858 <xTaskIncrementTick.part.0+0x130>)
 801180a:	6818      	ldr	r0, [r3, #0]
 801180c:	6811      	ldr	r1, [r2, #0]
 801180e:	6019      	str	r1, [r3, #0]
 8011810:	4912      	ldr	r1, [pc, #72]	; (801185c <xTaskIncrementTick.part.0+0x134>)
 8011812:	6010      	str	r0, [r2, #0]
 8011814:	680a      	ldr	r2, [r1, #0]
 8011816:	3201      	adds	r2, #1
 8011818:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801181a:	681a      	ldr	r2, [r3, #0]
 801181c:	6812      	ldr	r2, [r2, #0]
 801181e:	b932      	cbnz	r2, 801182e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8011820:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8011860 <xTaskIncrementTick.part.0+0x138>
 8011824:	f04f 33ff 	mov.w	r3, #4294967295
 8011828:	f8cb 3000 	str.w	r3, [fp]
 801182c:	e787      	b.n	801173e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801182e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011830:	f8df b02c 	ldr.w	fp, [pc, #44]	; 8011860 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011834:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011836:	68db      	ldr	r3, [r3, #12]
 8011838:	685b      	ldr	r3, [r3, #4]
 801183a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 801183e:	e77e      	b.n	801173e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011840:	f04f 33ff 	mov.w	r3, #4294967295
 8011844:	f8cb 3000 	str.w	r3, [fp]
					break;
 8011848:	e7ca      	b.n	80117e0 <xTaskIncrementTick.part.0+0xb8>
 801184a:	bf00      	nop
 801184c:	20013714 	.word	0x20013714
 8011850:	20013224 	.word	0x20013224
 8011854:	20013718 	.word	0x20013718
 8011858:	20013228 	.word	0x20013228
 801185c:	200136cc 	.word	0x200136cc
 8011860:	200136c8 	.word	0x200136c8
 8011864:	2001322c 	.word	0x2001322c
 8011868:	20013220 	.word	0x20013220
 801186c:	2001369c 	.word	0x2001369c

08011870 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 8011870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 8011874:	4d41      	ldr	r5, [pc, #260]	; (801197c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 8011876:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 8011878:	f7fe fc5c 	bl	8010134 <vPortEnterCritical>
		--uxSchedulerSuspended;
 801187c:	682b      	ldr	r3, [r5, #0]
 801187e:	3b01      	subs	r3, #1
 8011880:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011882:	682b      	ldr	r3, [r5, #0]
 8011884:	2b00      	cmp	r3, #0
 8011886:	d161      	bne.n	801194c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8011888:	4b3d      	ldr	r3, [pc, #244]	; (8011980 <xTaskResumeAll.part.0+0x110>)
 801188a:	681b      	ldr	r3, [r3, #0]
 801188c:	2b00      	cmp	r3, #0
 801188e:	d05d      	beq.n	801194c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011890:	4e3c      	ldr	r6, [pc, #240]	; (8011984 <xTaskResumeAll.part.0+0x114>)
 8011892:	6833      	ldr	r3, [r6, #0]
 8011894:	2b00      	cmp	r3, #0
 8011896:	d06e      	beq.n	8011976 <xTaskResumeAll.part.0+0x106>
 8011898:	4f3b      	ldr	r7, [pc, #236]	; (8011988 <xTaskResumeAll.part.0+0x118>)
 801189a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 8011998 <xTaskResumeAll.part.0+0x128>
 801189e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 801199c <xTaskResumeAll.part.0+0x12c>
 80118a2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 80119a0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80118a6:	68f3      	ldr	r3, [r6, #12]
 80118a8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80118aa:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80118ae:	f104 0018 	add.w	r0, r4, #24
 80118b2:	f7fe fbc3 	bl	801003c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80118b6:	4658      	mov	r0, fp
 80118b8:	f7fe fbc0 	bl	801003c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80118bc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80118be:	683a      	ldr	r2, [r7, #0]
 80118c0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 80118c4:	4293      	cmp	r3, r2
 80118c6:	4659      	mov	r1, fp
 80118c8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 80118cc:	bf88      	it	hi
 80118ce:	603b      	strhi	r3, [r7, #0]
 80118d0:	f7fe fb8c 	bl	800ffec <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80118d4:	f8d8 3000 	ldr.w	r3, [r8]
 80118d8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80118da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80118dc:	429a      	cmp	r2, r3
 80118de:	d33d      	bcc.n	801195c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 80118e0:	2301      	movs	r3, #1
 80118e2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80118e6:	6833      	ldr	r3, [r6, #0]
 80118e8:	2b00      	cmp	r3, #0
 80118ea:	d1dc      	bne.n	80118a6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80118ec:	4b27      	ldr	r3, [pc, #156]	; (801198c <xTaskResumeAll.part.0+0x11c>)
 80118ee:	681a      	ldr	r2, [r3, #0]
 80118f0:	6812      	ldr	r2, [r2, #0]
 80118f2:	2a00      	cmp	r2, #0
 80118f4:	d03a      	beq.n	801196c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80118f6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80118f8:	4b25      	ldr	r3, [pc, #148]	; (8011990 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80118fa:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80118fc:	68d2      	ldr	r2, [r2, #12]
 80118fe:	6852      	ldr	r2, [r2, #4]
 8011900:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8011902:	4e24      	ldr	r6, [pc, #144]	; (8011994 <xTaskResumeAll.part.0+0x124>)
 8011904:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8011906:	b194      	cbz	r4, 801192e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 8011908:	2701      	movs	r7, #1
 801190a:	e006      	b.n	801191a <xTaskResumeAll.part.0+0xaa>
 801190c:	f7ff ff0c 	bl	8011728 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 8011910:	b108      	cbz	r0, 8011916 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 8011912:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011916:	3c01      	subs	r4, #1
 8011918:	d008      	beq.n	801192c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 801191a:	682b      	ldr	r3, [r5, #0]
 801191c:	2b00      	cmp	r3, #0
 801191e:	d0f5      	beq.n	801190c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 8011920:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011922:	3c01      	subs	r4, #1
		++xPendedTicks;
 8011924:	f103 0301 	add.w	r3, r3, #1
 8011928:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 801192a:	d1f6      	bne.n	801191a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 801192c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 801192e:	f8da 3000 	ldr.w	r3, [sl]
 8011932:	b15b      	cbz	r3, 801194c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 8011934:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011938:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801193c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011940:	f3bf 8f4f 	dsb	sy
 8011944:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8011948:	2001      	movs	r0, #1
 801194a:	e000      	b.n	801194e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 801194c:	2000      	movs	r0, #0
 801194e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011950:	f7fe fc12 	bl	8010178 <vPortExitCritical>
}
 8011954:	9801      	ldr	r0, [sp, #4]
 8011956:	b003      	add	sp, #12
 8011958:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 801195c:	6833      	ldr	r3, [r6, #0]
 801195e:	2b00      	cmp	r3, #0
 8011960:	d1a1      	bne.n	80118a6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011962:	4b0a      	ldr	r3, [pc, #40]	; (801198c <xTaskResumeAll.part.0+0x11c>)
 8011964:	681a      	ldr	r2, [r3, #0]
 8011966:	6812      	ldr	r2, [r2, #0]
 8011968:	2a00      	cmp	r2, #0
 801196a:	d1c4      	bne.n	80118f6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 801196c:	4b08      	ldr	r3, [pc, #32]	; (8011990 <xTaskResumeAll.part.0+0x120>)
 801196e:	f04f 32ff 	mov.w	r2, #4294967295
 8011972:	601a      	str	r2, [r3, #0]
 8011974:	e7c5      	b.n	8011902 <xTaskResumeAll.part.0+0x92>
 8011976:	f8df a028 	ldr.w	sl, [pc, #40]	; 80119a0 <xTaskResumeAll.part.0+0x130>
 801197a:	e7c2      	b.n	8011902 <xTaskResumeAll.part.0+0x92>
 801197c:	20013694 	.word	0x20013694
 8011980:	2001368c 	.word	0x2001368c
 8011984:	200136d4 	.word	0x200136d4
 8011988:	2001369c 	.word	0x2001369c
 801198c:	20013224 	.word	0x20013224
 8011990:	200136c8 	.word	0x200136c8
 8011994:	200136d0 	.word	0x200136d0
 8011998:	2001322c 	.word	0x2001322c
 801199c:	20013220 	.word	0x20013220
 80119a0:	20013718 	.word	0x20013718

080119a4 <xTaskCreateStatic>:
	{
 80119a4:	b530      	push	{r4, r5, lr}
 80119a6:	b087      	sub	sp, #28
 80119a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80119aa:	b1c4      	cbz	r4, 80119de <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 80119ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80119ae:	b16d      	cbz	r5, 80119cc <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 80119b0:	25ac      	movs	r5, #172	; 0xac
 80119b2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80119b4:	9d05      	ldr	r5, [sp, #20]
 80119b6:	2dac      	cmp	r5, #172	; 0xac
 80119b8:	d01a      	beq.n	80119f0 <xTaskCreateStatic+0x4c>
 80119ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80119be:	f383 8811 	msr	BASEPRI, r3
 80119c2:	f3bf 8f6f 	isb	sy
 80119c6:	f3bf 8f4f 	dsb	sy
 80119ca:	e7fe      	b.n	80119ca <xTaskCreateStatic+0x26>
 80119cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80119d0:	f383 8811 	msr	BASEPRI, r3
 80119d4:	f3bf 8f6f 	isb	sy
 80119d8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 80119dc:	e7fe      	b.n	80119dc <xTaskCreateStatic+0x38>
 80119de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80119e2:	f383 8811 	msr	BASEPRI, r3
 80119e6:	f3bf 8f6f 	isb	sy
 80119ea:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 80119ee:	e7fe      	b.n	80119ee <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80119f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80119f2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80119f4:	2402      	movs	r4, #2
 80119f6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80119fa:	ac04      	add	r4, sp, #16
 80119fc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 8011a00:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011a02:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011a04:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a06:	f7ff fda9 	bl	801155c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011a0a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011a0c:	f7ff fd1e 	bl	801144c <prvAddNewTaskToReadyList>
	}
 8011a10:	9804      	ldr	r0, [sp, #16]
 8011a12:	b007      	add	sp, #28
 8011a14:	bd30      	pop	{r4, r5, pc}
 8011a16:	bf00      	nop

08011a18 <xTaskCreate>:
	{
 8011a18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011a1c:	4607      	mov	r7, r0
 8011a1e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8011a20:	0090      	lsls	r0, r2, #2
	{
 8011a22:	4615      	mov	r5, r2
 8011a24:	4688      	mov	r8, r1
 8011a26:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8011a28:	f7fe f9b0 	bl	800fd8c <pvPortMalloc>
			if( pxStack != NULL )
 8011a2c:	b1d8      	cbz	r0, 8011a66 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8011a2e:	4604      	mov	r4, r0
 8011a30:	20ac      	movs	r0, #172	; 0xac
 8011a32:	f7fe f9ab 	bl	800fd8c <pvPortMalloc>
				if( pxNewTCB != NULL )
 8011a36:	4606      	mov	r6, r0
 8011a38:	b1d0      	cbz	r0, 8011a70 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 8011a3a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8011a3c:	2400      	movs	r4, #0
 8011a3e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8011a42:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8011a44:	9401      	str	r4, [sp, #4]
 8011a46:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011a48:	9602      	str	r6, [sp, #8]
 8011a4a:	464b      	mov	r3, r9
 8011a4c:	462a      	mov	r2, r5
 8011a4e:	4641      	mov	r1, r8
 8011a50:	4638      	mov	r0, r7
 8011a52:	9400      	str	r4, [sp, #0]
 8011a54:	f7ff fd82 	bl	801155c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011a58:	4630      	mov	r0, r6
 8011a5a:	f7ff fcf7 	bl	801144c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8011a5e:	2001      	movs	r0, #1
	}
 8011a60:	b005      	add	sp, #20
 8011a62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011a66:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8011a6a:	b005      	add	sp, #20
 8011a6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8011a70:	4620      	mov	r0, r4
 8011a72:	f7fe fa47 	bl	800ff04 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011a76:	f04f 30ff 	mov.w	r0, #4294967295
 8011a7a:	e7f1      	b.n	8011a60 <xTaskCreate+0x48>

08011a7c <vTaskDelay>:
	{
 8011a7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8011a7e:	b950      	cbnz	r0, 8011a96 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8011a80:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011a84:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8011a88:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011a8c:	f3bf 8f4f 	dsb	sy
 8011a90:	f3bf 8f6f 	isb	sy
	}
 8011a94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8011a96:	4d1e      	ldr	r5, [pc, #120]	; (8011b10 <vTaskDelay+0x94>)
 8011a98:	682b      	ldr	r3, [r5, #0]
 8011a9a:	b143      	cbz	r3, 8011aae <vTaskDelay+0x32>
 8011a9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011aa0:	f383 8811 	msr	BASEPRI, r3
 8011aa4:	f3bf 8f6f 	isb	sy
 8011aa8:	f3bf 8f4f 	dsb	sy
 8011aac:	e7fe      	b.n	8011aac <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 8011aae:	682b      	ldr	r3, [r5, #0]
 8011ab0:	3301      	adds	r3, #1
 8011ab2:	4604      	mov	r4, r0
 8011ab4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8011ab6:	4b17      	ldr	r3, [pc, #92]	; (8011b14 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011ab8:	4e17      	ldr	r6, [pc, #92]	; (8011b18 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 8011aba:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011abc:	6830      	ldr	r0, [r6, #0]
 8011abe:	3004      	adds	r0, #4
 8011ac0:	f7fe fabc 	bl	801003c <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011ac4:	6833      	ldr	r3, [r6, #0]
 8011ac6:	19e4      	adds	r4, r4, r7
 8011ac8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 8011aca:	d310      	bcc.n	8011aee <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011acc:	4b13      	ldr	r3, [pc, #76]	; (8011b1c <vTaskDelay+0xa0>)
 8011ace:	6818      	ldr	r0, [r3, #0]
 8011ad0:	6831      	ldr	r1, [r6, #0]
 8011ad2:	3104      	adds	r1, #4
 8011ad4:	f7fe fa9a 	bl	801000c <vListInsert>
	configASSERT( uxSchedulerSuspended );
 8011ad8:	682b      	ldr	r3, [r5, #0]
 8011ada:	b9a3      	cbnz	r3, 8011b06 <vTaskDelay+0x8a>
 8011adc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ae0:	f383 8811 	msr	BASEPRI, r3
 8011ae4:	f3bf 8f6f 	isb	sy
 8011ae8:	f3bf 8f4f 	dsb	sy
 8011aec:	e7fe      	b.n	8011aec <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011aee:	4b0c      	ldr	r3, [pc, #48]	; (8011b20 <vTaskDelay+0xa4>)
 8011af0:	6818      	ldr	r0, [r3, #0]
 8011af2:	6831      	ldr	r1, [r6, #0]
 8011af4:	3104      	adds	r1, #4
 8011af6:	f7fe fa89 	bl	801000c <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 8011afa:	4b0a      	ldr	r3, [pc, #40]	; (8011b24 <vTaskDelay+0xa8>)
 8011afc:	681a      	ldr	r2, [r3, #0]
 8011afe:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 8011b00:	bf38      	it	cc
 8011b02:	601c      	strcc	r4, [r3, #0]
 8011b04:	e7e8      	b.n	8011ad8 <vTaskDelay+0x5c>
 8011b06:	f7ff feb3 	bl	8011870 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 8011b0a:	2800      	cmp	r0, #0
 8011b0c:	d0b8      	beq.n	8011a80 <vTaskDelay+0x4>
	}
 8011b0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011b10:	20013694 	.word	0x20013694
 8011b14:	20013714 	.word	0x20013714
 8011b18:	20013220 	.word	0x20013220
 8011b1c:	20013228 	.word	0x20013228
 8011b20:	20013224 	.word	0x20013224
 8011b24:	200136c8 	.word	0x200136c8

08011b28 <vTaskStartScheduler>:
{
 8011b28:	b530      	push	{r4, r5, lr}
 8011b2a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011b2c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8011b2e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011b30:	a906      	add	r1, sp, #24
 8011b32:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8011b34:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011b38:	f7fe f90a 	bl	800fd50 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8011b3c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011b40:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 8011b42:	b1bb      	cbz	r3, 8011b74 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 8011b44:	b16d      	cbz	r5, 8011b62 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011b46:	21ac      	movs	r1, #172	; 0xac
 8011b48:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 8011b4a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8011b4c:	29ac      	cmp	r1, #172	; 0xac
 8011b4e:	d01a      	beq.n	8011b86 <vTaskStartScheduler+0x5e>
 8011b50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b54:	f383 8811 	msr	BASEPRI, r3
 8011b58:	f3bf 8f6f 	isb	sy
 8011b5c:	f3bf 8f4f 	dsb	sy
 8011b60:	e7fe      	b.n	8011b60 <vTaskStartScheduler+0x38>
 8011b62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b66:	f383 8811 	msr	BASEPRI, r3
 8011b6a:	f3bf 8f6f 	isb	sy
 8011b6e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 8011b72:	e7fe      	b.n	8011b72 <vTaskStartScheduler+0x4a>
 8011b74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b78:	f383 8811 	msr	BASEPRI, r3
 8011b7c:	f3bf 8f6f 	isb	sy
 8011b80:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 8011b84:	e7fe      	b.n	8011b84 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011b86:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011b88:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011b8a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011b8c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011b90:	4623      	mov	r3, r4
 8011b92:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8011b96:	491b      	ldr	r1, [pc, #108]	; (8011c04 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011b98:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011b9a:	9400      	str	r4, [sp, #0]
 8011b9c:	481a      	ldr	r0, [pc, #104]	; (8011c08 <vTaskStartScheduler+0xe0>)
 8011b9e:	f7ff fcdd 	bl	801155c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011ba2:	4628      	mov	r0, r5
 8011ba4:	f7ff fc52 	bl	801144c <prvAddNewTaskToReadyList>
		return xReturn;
 8011ba8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 8011baa:	b1eb      	cbz	r3, 8011be8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 8011bac:	f000 fc6e 	bl	801248c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8011bb0:	2801      	cmp	r0, #1
 8011bb2:	d11b      	bne.n	8011bec <vTaskStartScheduler+0xc4>
 8011bb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011bb8:	f383 8811 	msr	BASEPRI, r3
 8011bbc:	f3bf 8f6f 	isb	sy
 8011bc0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011bc4:	4b11      	ldr	r3, [pc, #68]	; (8011c0c <vTaskStartScheduler+0xe4>)
 8011bc6:	4a12      	ldr	r2, [pc, #72]	; (8011c10 <vTaskStartScheduler+0xe8>)
 8011bc8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8011bca:	4912      	ldr	r1, [pc, #72]	; (8011c14 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011bcc:	3358      	adds	r3, #88	; 0x58
 8011bce:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 8011bd0:	4a11      	ldr	r2, [pc, #68]	; (8011c18 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011bd2:	4b12      	ldr	r3, [pc, #72]	; (8011c1c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 8011bd4:	f04f 35ff 	mov.w	r5, #4294967295
 8011bd8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 8011bda:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011bdc:	601c      	str	r4, [r3, #0]
}
 8011bde:	b00b      	add	sp, #44	; 0x2c
 8011be0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 8011be4:	f7fe bb38 	b.w	8010258 <xPortStartScheduler>
}
 8011be8:	b00b      	add	sp, #44	; 0x2c
 8011bea:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8011bec:	3001      	adds	r0, #1
 8011bee:	d1fb      	bne.n	8011be8 <vTaskStartScheduler+0xc0>
 8011bf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011bf4:	f383 8811 	msr	BASEPRI, r3
 8011bf8:	f3bf 8f6f 	isb	sy
 8011bfc:	f3bf 8f4f 	dsb	sy
 8011c00:	e7fe      	b.n	8011c00 <vTaskStartScheduler+0xd8>
 8011c02:	bf00      	nop
 8011c04:	08031668 	.word	0x08031668
 8011c08:	08011689 	.word	0x08011689
 8011c0c:	20013220 	.word	0x20013220
 8011c10:	20000164 	.word	0x20000164
 8011c14:	200136c8 	.word	0x200136c8
 8011c18:	200136e8 	.word	0x200136e8
 8011c1c:	20013714 	.word	0x20013714

08011c20 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8011c20:	4a02      	ldr	r2, [pc, #8]	; (8011c2c <vTaskSuspendAll+0xc>)
 8011c22:	6813      	ldr	r3, [r2, #0]
 8011c24:	3301      	adds	r3, #1
 8011c26:	6013      	str	r3, [r2, #0]
}
 8011c28:	4770      	bx	lr
 8011c2a:	bf00      	nop
 8011c2c:	20013694 	.word	0x20013694

08011c30 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 8011c30:	4b06      	ldr	r3, [pc, #24]	; (8011c4c <xTaskResumeAll+0x1c>)
 8011c32:	681b      	ldr	r3, [r3, #0]
 8011c34:	b943      	cbnz	r3, 8011c48 <xTaskResumeAll+0x18>
 8011c36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c3a:	f383 8811 	msr	BASEPRI, r3
 8011c3e:	f3bf 8f6f 	isb	sy
 8011c42:	f3bf 8f4f 	dsb	sy
 8011c46:	e7fe      	b.n	8011c46 <xTaskResumeAll+0x16>
 8011c48:	f7ff be12 	b.w	8011870 <xTaskResumeAll.part.0>
 8011c4c:	20013694 	.word	0x20013694

08011c50 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8011c50:	4b01      	ldr	r3, [pc, #4]	; (8011c58 <xTaskGetTickCount+0x8>)
 8011c52:	6818      	ldr	r0, [r3, #0]
}
 8011c54:	4770      	bx	lr
 8011c56:	bf00      	nop
 8011c58:	20013714 	.word	0x20013714

08011c5c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011c5c:	4b05      	ldr	r3, [pc, #20]	; (8011c74 <xTaskIncrementTick+0x18>)
 8011c5e:	681b      	ldr	r3, [r3, #0]
 8011c60:	b90b      	cbnz	r3, 8011c66 <xTaskIncrementTick+0xa>
 8011c62:	f7ff bd61 	b.w	8011728 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 8011c66:	4a04      	ldr	r2, [pc, #16]	; (8011c78 <xTaskIncrementTick+0x1c>)
 8011c68:	6813      	ldr	r3, [r2, #0]
 8011c6a:	3301      	adds	r3, #1
}
 8011c6c:	2000      	movs	r0, #0
		++xPendedTicks;
 8011c6e:	6013      	str	r3, [r2, #0]
}
 8011c70:	4770      	bx	lr
 8011c72:	bf00      	nop
 8011c74:	20013694 	.word	0x20013694
 8011c78:	200136d0 	.word	0x200136d0

08011c7c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8011c7c:	4b1f      	ldr	r3, [pc, #124]	; (8011cfc <vTaskSwitchContext+0x80>)
 8011c7e:	681b      	ldr	r3, [r3, #0]
 8011c80:	b11b      	cbz	r3, 8011c8a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 8011c82:	4b1f      	ldr	r3, [pc, #124]	; (8011d00 <vTaskSwitchContext+0x84>)
 8011c84:	2201      	movs	r2, #1
 8011c86:	601a      	str	r2, [r3, #0]
 8011c88:	4770      	bx	lr
		xYieldPending = pdFALSE;
 8011c8a:	4a1d      	ldr	r2, [pc, #116]	; (8011d00 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011c8c:	491d      	ldr	r1, [pc, #116]	; (8011d04 <vTaskSwitchContext+0x88>)
{
 8011c8e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011c90:	4c1d      	ldr	r4, [pc, #116]	; (8011d08 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 8011c92:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011c94:	6823      	ldr	r3, [r4, #0]
 8011c96:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011c9a:	0092      	lsls	r2, r2, #2
 8011c9c:	0098      	lsls	r0, r3, #2
 8011c9e:	588a      	ldr	r2, [r1, r2]
 8011ca0:	b942      	cbnz	r2, 8011cb4 <vTaskSwitchContext+0x38>
 8011ca2:	b313      	cbz	r3, 8011cea <vTaskSwitchContext+0x6e>
 8011ca4:	3b01      	subs	r3, #1
 8011ca6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011caa:	0098      	lsls	r0, r3, #2
 8011cac:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8011cb0:	2a00      	cmp	r2, #0
 8011cb2:	d0f6      	beq.n	8011ca2 <vTaskSwitchContext+0x26>
 8011cb4:	4418      	add	r0, r3
 8011cb6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 8011cba:	4662      	mov	r2, ip
 8011cbc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8011cc0:	6849      	ldr	r1, [r1, #4]
 8011cc2:	f8cc 1004 	str.w	r1, [ip, #4]
 8011cc6:	3208      	adds	r2, #8
 8011cc8:	4291      	cmp	r1, r2
 8011cca:	bf08      	it	eq
 8011ccc:	6849      	ldreq	r1, [r1, #4]
 8011cce:	4a0f      	ldr	r2, [pc, #60]	; (8011d0c <vTaskSwitchContext+0x90>)
 8011cd0:	bf08      	it	eq
 8011cd2:	f8cc 1004 	streq.w	r1, [ip, #4]
 8011cd6:	68c9      	ldr	r1, [r1, #12]
 8011cd8:	6011      	str	r1, [r2, #0]
 8011cda:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011cdc:	6813      	ldr	r3, [r2, #0]
 8011cde:	4a0c      	ldr	r2, [pc, #48]	; (8011d10 <vTaskSwitchContext+0x94>)
}
 8011ce0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011ce4:	3358      	adds	r3, #88	; 0x58
 8011ce6:	6013      	str	r3, [r2, #0]
}
 8011ce8:	4770      	bx	lr
 8011cea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011cee:	f383 8811 	msr	BASEPRI, r3
 8011cf2:	f3bf 8f6f 	isb	sy
 8011cf6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011cfa:	e7fe      	b.n	8011cfa <vTaskSwitchContext+0x7e>
 8011cfc:	20013694 	.word	0x20013694
 8011d00:	20013718 	.word	0x20013718
 8011d04:	2001322c 	.word	0x2001322c
 8011d08:	2001369c 	.word	0x2001369c
 8011d0c:	20013220 	.word	0x20013220
 8011d10:	20000164 	.word	0x20000164

08011d14 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 8011d14:	b1d0      	cbz	r0, 8011d4c <vTaskPlaceOnEventList+0x38>
{
 8011d16:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011d18:	4d1a      	ldr	r5, [pc, #104]	; (8011d84 <vTaskPlaceOnEventList+0x70>)
 8011d1a:	460c      	mov	r4, r1
 8011d1c:	6829      	ldr	r1, [r5, #0]
 8011d1e:	3118      	adds	r1, #24
 8011d20:	f7fe f974 	bl	801000c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011d24:	4b18      	ldr	r3, [pc, #96]	; (8011d88 <vTaskPlaceOnEventList+0x74>)
 8011d26:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011d28:	6828      	ldr	r0, [r5, #0]
 8011d2a:	3004      	adds	r0, #4
 8011d2c:	f7fe f986 	bl	801003c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8011d30:	1c63      	adds	r3, r4, #1
 8011d32:	d014      	beq.n	8011d5e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011d34:	682b      	ldr	r3, [r5, #0]
 8011d36:	19a4      	adds	r4, r4, r6
 8011d38:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011d3a:	d317      	bcc.n	8011d6c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011d3c:	4b13      	ldr	r3, [pc, #76]	; (8011d8c <vTaskPlaceOnEventList+0x78>)
 8011d3e:	6818      	ldr	r0, [r3, #0]
 8011d40:	6829      	ldr	r1, [r5, #0]
}
 8011d42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011d46:	3104      	adds	r1, #4
 8011d48:	f7fe b960 	b.w	801000c <vListInsert>
 8011d4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d50:	f383 8811 	msr	BASEPRI, r3
 8011d54:	f3bf 8f6f 	isb	sy
 8011d58:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 8011d5c:	e7fe      	b.n	8011d5c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011d5e:	6829      	ldr	r1, [r5, #0]
 8011d60:	480b      	ldr	r0, [pc, #44]	; (8011d90 <vTaskPlaceOnEventList+0x7c>)
}
 8011d62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011d66:	3104      	adds	r1, #4
 8011d68:	f7fe b940 	b.w	800ffec <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011d6c:	4b09      	ldr	r3, [pc, #36]	; (8011d94 <vTaskPlaceOnEventList+0x80>)
 8011d6e:	6818      	ldr	r0, [r3, #0]
 8011d70:	6829      	ldr	r1, [r5, #0]
 8011d72:	3104      	adds	r1, #4
 8011d74:	f7fe f94a 	bl	801000c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011d78:	4b07      	ldr	r3, [pc, #28]	; (8011d98 <vTaskPlaceOnEventList+0x84>)
 8011d7a:	681a      	ldr	r2, [r3, #0]
 8011d7c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011d7e:	bf38      	it	cc
 8011d80:	601c      	strcc	r4, [r3, #0]
}
 8011d82:	bd70      	pop	{r4, r5, r6, pc}
 8011d84:	20013220 	.word	0x20013220
 8011d88:	20013714 	.word	0x20013714
 8011d8c:	20013228 	.word	0x20013228
 8011d90:	200136ec 	.word	0x200136ec
 8011d94:	20013224 	.word	0x20013224
 8011d98:	200136c8 	.word	0x200136c8

08011d9c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 8011d9c:	b330      	cbz	r0, 8011dec <vTaskPlaceOnEventListRestricted+0x50>
	{
 8011d9e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011da0:	4e1d      	ldr	r6, [pc, #116]	; (8011e18 <vTaskPlaceOnEventListRestricted+0x7c>)
 8011da2:	460c      	mov	r4, r1
 8011da4:	6831      	ldr	r1, [r6, #0]
 8011da6:	4615      	mov	r5, r2
 8011da8:	3118      	adds	r1, #24
 8011daa:	f7fe f91f 	bl	800ffec <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 8011dae:	4b1b      	ldr	r3, [pc, #108]	; (8011e1c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 8011db0:	b985      	cbnz	r5, 8011dd4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 8011db2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011db4:	6830      	ldr	r0, [r6, #0]
 8011db6:	3004      	adds	r0, #4
 8011db8:	f7fe f940 	bl	801003c <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011dbc:	6833      	ldr	r3, [r6, #0]
 8011dbe:	1964      	adds	r4, r4, r5
 8011dc0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011dc2:	d31c      	bcc.n	8011dfe <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011dc4:	4b16      	ldr	r3, [pc, #88]	; (8011e20 <vTaskPlaceOnEventListRestricted+0x84>)
 8011dc6:	6818      	ldr	r0, [r3, #0]
 8011dc8:	6831      	ldr	r1, [r6, #0]
	}
 8011dca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011dce:	3104      	adds	r1, #4
 8011dd0:	f7fe b91c 	b.w	801000c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011dd4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011dd6:	6830      	ldr	r0, [r6, #0]
 8011dd8:	3004      	adds	r0, #4
 8011dda:	f7fe f92f 	bl	801003c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011dde:	6831      	ldr	r1, [r6, #0]
 8011de0:	4810      	ldr	r0, [pc, #64]	; (8011e24 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 8011de2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011de6:	3104      	adds	r1, #4
 8011de8:	f7fe b900 	b.w	800ffec <vListInsertEnd>
 8011dec:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011df0:	f383 8811 	msr	BASEPRI, r3
 8011df4:	f3bf 8f6f 	isb	sy
 8011df8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 8011dfc:	e7fe      	b.n	8011dfc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011dfe:	4b0a      	ldr	r3, [pc, #40]	; (8011e28 <vTaskPlaceOnEventListRestricted+0x8c>)
 8011e00:	6818      	ldr	r0, [r3, #0]
 8011e02:	6831      	ldr	r1, [r6, #0]
 8011e04:	3104      	adds	r1, #4
 8011e06:	f7fe f901 	bl	801000c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011e0a:	4b08      	ldr	r3, [pc, #32]	; (8011e2c <vTaskPlaceOnEventListRestricted+0x90>)
 8011e0c:	681a      	ldr	r2, [r3, #0]
 8011e0e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011e10:	bf38      	it	cc
 8011e12:	601c      	strcc	r4, [r3, #0]
	}
 8011e14:	bd70      	pop	{r4, r5, r6, pc}
 8011e16:	bf00      	nop
 8011e18:	20013220 	.word	0x20013220
 8011e1c:	20013714 	.word	0x20013714
 8011e20:	20013228 	.word	0x20013228
 8011e24:	200136ec 	.word	0x200136ec
 8011e28:	20013224 	.word	0x20013224
 8011e2c:	200136c8 	.word	0x200136c8

08011e30 <xTaskRemoveFromEventList>:
{
 8011e30:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011e32:	68c3      	ldr	r3, [r0, #12]
 8011e34:	68dc      	ldr	r4, [r3, #12]
{
 8011e36:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 8011e38:	2c00      	cmp	r4, #0
 8011e3a:	d02b      	beq.n	8011e94 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8011e3c:	f104 0518 	add.w	r5, r4, #24
 8011e40:	4628      	mov	r0, r5
 8011e42:	f7fe f8fb 	bl	801003c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011e46:	4b18      	ldr	r3, [pc, #96]	; (8011ea8 <xTaskRemoveFromEventList+0x78>)
 8011e48:	681b      	ldr	r3, [r3, #0]
 8011e4a:	b17b      	cbz	r3, 8011e6c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8011e4c:	4817      	ldr	r0, [pc, #92]	; (8011eac <xTaskRemoveFromEventList+0x7c>)
 8011e4e:	4629      	mov	r1, r5
 8011e50:	f7fe f8cc 	bl	800ffec <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8011e54:	4b16      	ldr	r3, [pc, #88]	; (8011eb0 <xTaskRemoveFromEventList+0x80>)
 8011e56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011e58:	681b      	ldr	r3, [r3, #0]
 8011e5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e5c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8011e5e:	bf85      	ittet	hi
 8011e60:	4b14      	ldrhi	r3, [pc, #80]	; (8011eb4 <xTaskRemoveFromEventList+0x84>)
 8011e62:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8011e64:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8011e66:	6018      	strhi	r0, [r3, #0]
}
 8011e68:	b003      	add	sp, #12
 8011e6a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8011e6c:	1d21      	adds	r1, r4, #4
 8011e6e:	4608      	mov	r0, r1
 8011e70:	9101      	str	r1, [sp, #4]
 8011e72:	f7fe f8e3 	bl	801003c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8011e76:	4a10      	ldr	r2, [pc, #64]	; (8011eb8 <xTaskRemoveFromEventList+0x88>)
 8011e78:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011e7a:	6810      	ldr	r0, [r2, #0]
 8011e7c:	9901      	ldr	r1, [sp, #4]
 8011e7e:	4283      	cmp	r3, r0
 8011e80:	480e      	ldr	r0, [pc, #56]	; (8011ebc <xTaskRemoveFromEventList+0x8c>)
 8011e82:	bf88      	it	hi
 8011e84:	6013      	strhi	r3, [r2, #0]
 8011e86:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011e8a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011e8e:	f7fe f8ad 	bl	800ffec <vListInsertEnd>
 8011e92:	e7df      	b.n	8011e54 <xTaskRemoveFromEventList+0x24>
 8011e94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011e98:	f383 8811 	msr	BASEPRI, r3
 8011e9c:	f3bf 8f6f 	isb	sy
 8011ea0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8011ea4:	e7fe      	b.n	8011ea4 <xTaskRemoveFromEventList+0x74>
 8011ea6:	bf00      	nop
 8011ea8:	20013694 	.word	0x20013694
 8011eac:	200136d4 	.word	0x200136d4
 8011eb0:	20013220 	.word	0x20013220
 8011eb4:	20013718 	.word	0x20013718
 8011eb8:	2001369c 	.word	0x2001369c
 8011ebc:	2001322c 	.word	0x2001322c

08011ec0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011ec0:	4a03      	ldr	r2, [pc, #12]	; (8011ed0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011ec2:	4b04      	ldr	r3, [pc, #16]	; (8011ed4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011ec4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011ec6:	681b      	ldr	r3, [r3, #0]
 8011ec8:	e9c0 2300 	strd	r2, r3, [r0]
}
 8011ecc:	4770      	bx	lr
 8011ece:	bf00      	nop
 8011ed0:	200136cc 	.word	0x200136cc
 8011ed4:	20013714 	.word	0x20013714

08011ed8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8011ed8:	b328      	cbz	r0, 8011f26 <xTaskCheckForTimeOut+0x4e>
{
 8011eda:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011edc:	460d      	mov	r5, r1
 8011ede:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 8011ee0:	b1c1      	cbz	r1, 8011f14 <xTaskCheckForTimeOut+0x3c>
 8011ee2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8011ee4:	f7fe f926 	bl	8010134 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 8011ee8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 8011eea:	4a1d      	ldr	r2, [pc, #116]	; (8011f60 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 8011eec:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 8011eee:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8011ef0:	d030      	beq.n	8011f54 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8011ef2:	f8df c070 	ldr.w	ip, [pc, #112]	; 8011f64 <xTaskCheckForTimeOut+0x8c>
 8011ef6:	e9d4 6000 	ldrd	r6, r0, [r4]
 8011efa:	f8dc 7000 	ldr.w	r7, [ip]
 8011efe:	42be      	cmp	r6, r7
 8011f00:	d01a      	beq.n	8011f38 <xTaskCheckForTimeOut+0x60>
 8011f02:	4288      	cmp	r0, r1
 8011f04:	d818      	bhi.n	8011f38 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 8011f06:	2001      	movs	r0, #1
 8011f08:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011f0a:	f7fe f935 	bl	8010178 <vPortExitCritical>
}
 8011f0e:	9801      	ldr	r0, [sp, #4]
 8011f10:	b003      	add	sp, #12
 8011f12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f18:	f383 8811 	msr	BASEPRI, r3
 8011f1c:	f3bf 8f6f 	isb	sy
 8011f20:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 8011f24:	e7fe      	b.n	8011f24 <xTaskCheckForTimeOut+0x4c>
 8011f26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f2a:	f383 8811 	msr	BASEPRI, r3
 8011f2e:	f3bf 8f6f 	isb	sy
 8011f32:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 8011f36:	e7fe      	b.n	8011f36 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8011f38:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8011f3c:	4573      	cmp	r3, lr
 8011f3e:	d90b      	bls.n	8011f58 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8011f40:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011f42:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011f46:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8011f48:	4403      	add	r3, r0
 8011f4a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 8011f4c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011f4e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8011f52:	e7d9      	b.n	8011f08 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8011f54:	2000      	movs	r0, #0
 8011f56:	e7d7      	b.n	8011f08 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8011f58:	2300      	movs	r3, #0
 8011f5a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 8011f5c:	2001      	movs	r0, #1
 8011f5e:	e7d3      	b.n	8011f08 <xTaskCheckForTimeOut+0x30>
 8011f60:	20013714 	.word	0x20013714
 8011f64:	200136cc 	.word	0x200136cc

08011f68 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8011f68:	4b01      	ldr	r3, [pc, #4]	; (8011f70 <vTaskMissedYield+0x8>)
 8011f6a:	2201      	movs	r2, #1
 8011f6c:	601a      	str	r2, [r3, #0]
}
 8011f6e:	4770      	bx	lr
 8011f70:	20013718 	.word	0x20013718

08011f74 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8011f74:	4b05      	ldr	r3, [pc, #20]	; (8011f8c <xTaskGetSchedulerState+0x18>)
 8011f76:	681b      	ldr	r3, [r3, #0]
 8011f78:	b133      	cbz	r3, 8011f88 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011f7a:	4b05      	ldr	r3, [pc, #20]	; (8011f90 <xTaskGetSchedulerState+0x1c>)
 8011f7c:	6818      	ldr	r0, [r3, #0]
 8011f7e:	fab0 f080 	clz	r0, r0
 8011f82:	0940      	lsrs	r0, r0, #5
 8011f84:	0040      	lsls	r0, r0, #1
 8011f86:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8011f88:	2001      	movs	r0, #1
	}
 8011f8a:	4770      	bx	lr
 8011f8c:	200136e8 	.word	0x200136e8
 8011f90:	20013694 	.word	0x20013694

08011f94 <xTaskPriorityInherit>:
	{
 8011f94:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8011f96:	4604      	mov	r4, r0
	{
 8011f98:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 8011f9a:	b1c8      	cbz	r0, 8011fd0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8011f9c:	4d1d      	ldr	r5, [pc, #116]	; (8012014 <xTaskPriorityInherit+0x80>)
 8011f9e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011fa0:	682a      	ldr	r2, [r5, #0]
 8011fa2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011fa4:	4293      	cmp	r3, r2
 8011fa6:	d215      	bcs.n	8011fd4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011fa8:	6982      	ldr	r2, [r0, #24]
 8011faa:	2a00      	cmp	r2, #0
 8011fac:	db04      	blt.n	8011fb8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011fae:	682a      	ldr	r2, [r5, #0]
 8011fb0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011fb2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8011fb6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8011fb8:	4e17      	ldr	r6, [pc, #92]	; (8012018 <xTaskPriorityInherit+0x84>)
 8011fba:	6962      	ldr	r2, [r4, #20]
 8011fbc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011fc0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8011fc4:	429a      	cmp	r2, r3
 8011fc6:	d00e      	beq.n	8011fe6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011fc8:	682b      	ldr	r3, [r5, #0]
 8011fca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fcc:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 8011fce:	2001      	movs	r0, #1
	}
 8011fd0:	b002      	add	sp, #8
 8011fd2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8011fd4:	682b      	ldr	r3, [r5, #0]
 8011fd6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011fd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fda:	4298      	cmp	r0, r3
 8011fdc:	bf2c      	ite	cs
 8011fde:	2000      	movcs	r0, #0
 8011fe0:	2001      	movcc	r0, #1
	}
 8011fe2:	b002      	add	sp, #8
 8011fe4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011fe6:	1d21      	adds	r1, r4, #4
 8011fe8:	4608      	mov	r0, r1
 8011fea:	9101      	str	r1, [sp, #4]
 8011fec:	f7fe f826 	bl	801003c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011ff0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011ff2:	4b0a      	ldr	r3, [pc, #40]	; (801201c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011ff4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011ff6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011ff8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011ffa:	4290      	cmp	r0, r2
 8011ffc:	bf88      	it	hi
 8011ffe:	6018      	strhi	r0, [r3, #0]
 8012000:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8012004:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8012008:	9901      	ldr	r1, [sp, #4]
 801200a:	f7fd ffef 	bl	800ffec <vListInsertEnd>
				xReturn = pdTRUE;
 801200e:	2001      	movs	r0, #1
 8012010:	e7de      	b.n	8011fd0 <xTaskPriorityInherit+0x3c>
 8012012:	bf00      	nop
 8012014:	20013220 	.word	0x20013220
 8012018:	2001322c 	.word	0x2001322c
 801201c:	2001369c 	.word	0x2001369c

08012020 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 8012020:	b318      	cbz	r0, 801206a <xTaskPriorityDisinherit+0x4a>
	{
 8012022:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 8012024:	4b1e      	ldr	r3, [pc, #120]	; (80120a0 <xTaskPriorityDisinherit+0x80>)
 8012026:	681c      	ldr	r4, [r3, #0]
 8012028:	4284      	cmp	r4, r0
	{
 801202a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 801202c:	d008      	beq.n	8012040 <xTaskPriorityDisinherit+0x20>
 801202e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8012032:	f383 8811 	msr	BASEPRI, r3
 8012036:	f3bf 8f6f 	isb	sy
 801203a:	f3bf 8f4f 	dsb	sy
 801203e:	e7fe      	b.n	801203e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8012040:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8012042:	b14b      	cbz	r3, 8012058 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8012044:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012046:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8012048:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 801204a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 801204c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 801204e:	d000      	beq.n	8012052 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8012050:	b16b      	cbz	r3, 801206e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8012052:	2000      	movs	r0, #0
	}
 8012054:	b002      	add	sp, #8
 8012056:	bd10      	pop	{r4, pc}
 8012058:	f04f 0350 	mov.w	r3, #80	; 0x50
 801205c:	f383 8811 	msr	BASEPRI, r3
 8012060:	f3bf 8f6f 	isb	sy
 8012064:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8012068:	e7fe      	b.n	8012068 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 801206a:	2000      	movs	r0, #0
	}
 801206c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801206e:	1d21      	adds	r1, r4, #4
 8012070:	4608      	mov	r0, r1
 8012072:	9101      	str	r1, [sp, #4]
 8012074:	f7fd ffe2 	bl	801003c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8012078:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 801207a:	4a0a      	ldr	r2, [pc, #40]	; (80120a4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 801207c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801207e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8012082:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8012084:	6810      	ldr	r0, [r2, #0]
 8012086:	9901      	ldr	r1, [sp, #4]
 8012088:	4283      	cmp	r3, r0
 801208a:	4807      	ldr	r0, [pc, #28]	; (80120a8 <xTaskPriorityDisinherit+0x88>)
 801208c:	bf88      	it	hi
 801208e:	6013      	strhi	r3, [r2, #0]
 8012090:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8012094:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8012098:	f7fd ffa8 	bl	800ffec <vListInsertEnd>
					xReturn = pdTRUE;
 801209c:	2001      	movs	r0, #1
		return xReturn;
 801209e:	e7d9      	b.n	8012054 <xTaskPriorityDisinherit+0x34>
 80120a0:	20013220 	.word	0x20013220
 80120a4:	2001369c 	.word	0x2001369c
 80120a8:	2001322c 	.word	0x2001322c

080120ac <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 80120ac:	2800      	cmp	r0, #0
 80120ae:	d041      	beq.n	8012134 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 80120b0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 80120b2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 80120b4:	b083      	sub	sp, #12
 80120b6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 80120b8:	b153      	cbz	r3, 80120d0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 80120ba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 80120bc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80120be:	4281      	cmp	r1, r0
 80120c0:	bf38      	it	cc
 80120c2:	4601      	movcc	r1, r0
 80120c4:	428a      	cmp	r2, r1
 80120c6:	d001      	beq.n	80120cc <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 80120c8:	2b01      	cmp	r3, #1
 80120ca:	d00a      	beq.n	80120e2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 80120cc:	b003      	add	sp, #12
 80120ce:	bd30      	pop	{r4, r5, pc}
 80120d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80120d4:	f383 8811 	msr	BASEPRI, r3
 80120d8:	f3bf 8f6f 	isb	sy
 80120dc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 80120e0:	e7fe      	b.n	80120e0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 80120e2:	4b19      	ldr	r3, [pc, #100]	; (8012148 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 80120e4:	681b      	ldr	r3, [r3, #0]
 80120e6:	42a3      	cmp	r3, r4
 80120e8:	d025      	beq.n	8012136 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80120ea:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 80120ec:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80120ee:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80120f0:	bfa8      	it	ge
 80120f2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80120f6:	4d15      	ldr	r5, [pc, #84]	; (801214c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80120f8:	bfa8      	it	ge
 80120fa:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80120fc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8012100:	6961      	ldr	r1, [r4, #20]
 8012102:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 8012106:	4299      	cmp	r1, r3
 8012108:	d1e0      	bne.n	80120cc <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801210a:	1d21      	adds	r1, r4, #4
 801210c:	4608      	mov	r0, r1
 801210e:	9101      	str	r1, [sp, #4]
 8012110:	f7fd ff94 	bl	801003c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8012114:	4b0e      	ldr	r3, [pc, #56]	; (8012150 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 8012116:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012118:	681a      	ldr	r2, [r3, #0]
 801211a:	9901      	ldr	r1, [sp, #4]
 801211c:	4290      	cmp	r0, r2
 801211e:	bf88      	it	hi
 8012120:	6018      	strhi	r0, [r3, #0]
 8012122:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8012126:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 801212a:	b003      	add	sp, #12
 801212c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8012130:	f7fd bf5c 	b.w	800ffec <vListInsertEnd>
 8012134:	4770      	bx	lr
 8012136:	f04f 0350 	mov.w	r3, #80	; 0x50
 801213a:	f383 8811 	msr	BASEPRI, r3
 801213e:	f3bf 8f6f 	isb	sy
 8012142:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8012146:	e7fe      	b.n	8012146 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8012148:	20013220 	.word	0x20013220
 801214c:	2001322c 	.word	0x2001322c
 8012150:	2001369c 	.word	0x2001369c

08012154 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8012154:	4b04      	ldr	r3, [pc, #16]	; (8012168 <pvTaskIncrementMutexHeldCount+0x14>)
 8012156:	681a      	ldr	r2, [r3, #0]
 8012158:	b11a      	cbz	r2, 8012162 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 801215a:	6819      	ldr	r1, [r3, #0]
 801215c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 801215e:	3201      	adds	r2, #1
 8012160:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8012162:	6818      	ldr	r0, [r3, #0]
	}
 8012164:	4770      	bx	lr
 8012166:	bf00      	nop
 8012168:	20013220 	.word	0x20013220

0801216c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 801216c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012170:	4e22      	ldr	r6, [pc, #136]	; (80121fc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8012172:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8012204 <prvSwitchTimerLists+0x98>
{
 8012176:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8012178:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801217c:	e00d      	b.n	801219a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801217e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012180:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8012182:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8012184:	1d25      	adds	r5, r4, #4
 8012186:	4628      	mov	r0, r5
 8012188:	f7fd ff58 	bl	801003c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801218c:	6a23      	ldr	r3, [r4, #32]
 801218e:	4620      	mov	r0, r4
 8012190:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012192:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8012196:	075b      	lsls	r3, r3, #29
 8012198:	d40a      	bmi.n	80121b0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801219a:	6833      	ldr	r3, [r6, #0]
 801219c:	681a      	ldr	r2, [r3, #0]
 801219e:	2a00      	cmp	r2, #0
 80121a0:	d1ed      	bne.n	801217e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 80121a2:	4a17      	ldr	r2, [pc, #92]	; (8012200 <prvSwitchTimerLists+0x94>)
 80121a4:	6811      	ldr	r1, [r2, #0]
 80121a6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 80121a8:	6013      	str	r3, [r2, #0]
}
 80121aa:	b005      	add	sp, #20
 80121ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80121b0:	69a3      	ldr	r3, [r4, #24]
 80121b2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 80121b4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80121b6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 80121b8:	d205      	bcs.n	80121c6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80121ba:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80121bc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80121be:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80121c0:	f7fd ff24 	bl	801000c <vListInsert>
 80121c4:	e7e9      	b.n	801219a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 80121c6:	f8d9 3000 	ldr.w	r3, [r9]
 80121ca:	b16b      	cbz	r3, 80121e8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80121cc:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80121d0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80121d2:	f7ff fecf 	bl	8011f74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80121d6:	2300      	movs	r3, #0
 80121d8:	f8d9 0000 	ldr.w	r0, [r9]
 80121dc:	461a      	mov	r2, r3
 80121de:	4669      	mov	r1, sp
 80121e0:	f7fe fa9c 	bl	801071c <xQueueGenericSend>
				configASSERT( xResult );
 80121e4:	2800      	cmp	r0, #0
 80121e6:	d1d8      	bne.n	801219a <prvSwitchTimerLists+0x2e>
 80121e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80121ec:	f383 8811 	msr	BASEPRI, r3
 80121f0:	f3bf 8f6f 	isb	sy
 80121f4:	f3bf 8f4f 	dsb	sy
 80121f8:	e7fe      	b.n	80121f8 <prvSwitchTimerLists+0x8c>
 80121fa:	bf00      	nop
 80121fc:	2001371c 	.word	0x2001371c
 8012200:	20013720 	.word	0x20013720
 8012204:	20013840 	.word	0x20013840

08012208 <prvTimerTask>:
{
 8012208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801220c:	4e9b      	ldr	r6, [pc, #620]	; (801247c <prvTimerTask+0x274>)
 801220e:	4d9c      	ldr	r5, [pc, #624]	; (8012480 <prvTimerTask+0x278>)
 8012210:	4c9c      	ldr	r4, [pc, #624]	; (8012484 <prvTimerTask+0x27c>)
 8012212:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 8012214:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 8012218:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801221c:	6833      	ldr	r3, [r6, #0]
 801221e:	681f      	ldr	r7, [r3, #0]
 8012220:	2f00      	cmp	r7, #0
 8012222:	f000 80a8 	beq.w	8012376 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8012226:	68db      	ldr	r3, [r3, #12]
 8012228:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 801222a:	f7ff fcf9 	bl	8011c20 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801222e:	f7ff fd0f 	bl	8011c50 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8012232:	682a      	ldr	r2, [r5, #0]
 8012234:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 8012236:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8012238:	f0c0 80ae 	bcc.w	8012398 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 801223c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 801223e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8012240:	f240 80b4 	bls.w	80123ac <prvTimerTask+0x1a4>
 8012244:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8012246:	6820      	ldr	r0, [r4, #0]
 8012248:	eba7 010a 	sub.w	r1, r7, sl
 801224c:	f7ff f89a 	bl	8011384 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8012250:	f7ff fcee 	bl	8011c30 <xTaskResumeAll>
 8012254:	b928      	cbnz	r0, 8012262 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 8012256:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 801225a:	f3bf 8f4f 	dsb	sy
 801225e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8012262:	6820      	ldr	r0, [r4, #0]
 8012264:	2200      	movs	r2, #0
 8012266:	a902      	add	r1, sp, #8
 8012268:	f7fe fc94 	bl	8010b94 <xQueueReceive>
 801226c:	2800      	cmp	r0, #0
 801226e:	d0d5      	beq.n	801221c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8012270:	9b02      	ldr	r3, [sp, #8]
 8012272:	2b00      	cmp	r3, #0
 8012274:	db76      	blt.n	8012364 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8012276:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8012278:	697b      	ldr	r3, [r7, #20]
 801227a:	b113      	cbz	r3, 8012282 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801227c:	1d38      	adds	r0, r7, #4
 801227e:	f7fd fedd 	bl	801003c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8012282:	f7ff fce5 	bl	8011c50 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8012286:	682b      	ldr	r3, [r5, #0]
 8012288:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801228a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801228c:	f0c0 808b 	bcc.w	80123a6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8012290:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8012292:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8012296:	2b09      	cmp	r3, #9
 8012298:	d8e3      	bhi.n	8012262 <prvTimerTask+0x5a>
 801229a:	e8df f003 	tbb	[pc, r3]
 801229e:	0505      	.short	0x0505
 80122a0:	5a3d5305 	.word	0x5a3d5305
 80122a4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80122a8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80122ac:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80122ae:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80122b0:	f043 0301 	orr.w	r3, r3, #1
 80122b4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80122b8:	9b03      	ldr	r3, [sp, #12]
 80122ba:	1899      	adds	r1, r3, r2
 80122bc:	bf2c      	ite	cs
 80122be:	2001      	movcs	r0, #1
 80122c0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 80122c2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80122c4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 80122c6:	f200 808c 	bhi.w	80123e2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80122ca:	ebaa 0303 	sub.w	r3, sl, r3
 80122ce:	429a      	cmp	r2, r3
 80122d0:	d832      	bhi.n	8012338 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80122d2:	6a3b      	ldr	r3, [r7, #32]
 80122d4:	4638      	mov	r0, r7
 80122d6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80122d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80122dc:	075b      	lsls	r3, r3, #29
 80122de:	d5c0      	bpl.n	8012262 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 80122e0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80122e2:	9903      	ldr	r1, [sp, #12]
 80122e4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 80122e6:	b172      	cbz	r2, 8012306 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80122e8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80122ea:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 80122ee:	2300      	movs	r3, #0
 80122f0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80122f2:	f7ff fe3f 	bl	8011f74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80122f6:	2300      	movs	r3, #0
 80122f8:	6820      	ldr	r0, [r4, #0]
 80122fa:	461a      	mov	r2, r3
 80122fc:	a906      	add	r1, sp, #24
 80122fe:	f7fe fa0d 	bl	801071c <xQueueGenericSend>
							configASSERT( xResult );
 8012302:	2800      	cmp	r0, #0
 8012304:	d1ad      	bne.n	8012262 <prvTimerTask+0x5a>
 8012306:	f04f 0350 	mov.w	r3, #80	; 0x50
 801230a:	f383 8811 	msr	BASEPRI, r3
 801230e:	f3bf 8f6f 	isb	sy
 8012312:	f3bf 8f4f 	dsb	sy
 8012316:	e7fe      	b.n	8012316 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012318:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801231c:	f043 0301 	orr.w	r3, r3, #1
 8012320:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8012324:	9b03      	ldr	r3, [sp, #12]
 8012326:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8012328:	2b00      	cmp	r3, #0
 801232a:	f000 809d 	beq.w	8012468 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801232e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 8012330:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012332:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8012334:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 8012336:	d85e      	bhi.n	80123f6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8012338:	4b53      	ldr	r3, [pc, #332]	; (8012488 <prvTimerTask+0x280>)
 801233a:	1d39      	adds	r1, r7, #4
 801233c:	6818      	ldr	r0, [r3, #0]
 801233e:	f7fd fe65 	bl	801000c <vListInsert>
	return xProcessTimerNow;
 8012342:	e78e      	b.n	8012262 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8012344:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8012348:	f023 0301 	bic.w	r3, r3, #1
 801234c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8012350:	e787      	b.n	8012262 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8012352:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8012356:	079a      	lsls	r2, r3, #30
 8012358:	d552      	bpl.n	8012400 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801235a:	f023 0301 	bic.w	r3, r3, #1
 801235e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8012362:	e77e      	b.n	8012262 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8012364:	9b03      	ldr	r3, [sp, #12]
 8012366:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801236a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801236c:	9b02      	ldr	r3, [sp, #8]
 801236e:	2b00      	cmp	r3, #0
 8012370:	f6ff af77 	blt.w	8012262 <prvTimerTask+0x5a>
 8012374:	e77f      	b.n	8012276 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8012376:	f7ff fc53 	bl	8011c20 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801237a:	f7ff fc69 	bl	8011c50 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801237e:	682a      	ldr	r2, [r5, #0]
 8012380:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8012382:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8012384:	d808      	bhi.n	8012398 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8012386:	4b40      	ldr	r3, [pc, #256]	; (8012488 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8012388:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801238c:	681a      	ldr	r2, [r3, #0]
 801238e:	6812      	ldr	r2, [r2, #0]
 8012390:	fab2 f282 	clz	r2, r2
 8012394:	0952      	lsrs	r2, r2, #5
 8012396:	e756      	b.n	8012246 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8012398:	f7ff fee8 	bl	801216c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801239c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 80123a0:	f7ff fc46 	bl	8011c30 <xTaskResumeAll>
 80123a4:	e75d      	b.n	8012262 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 80123a6:	f7ff fee1 	bl	801216c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 80123aa:	e771      	b.n	8012290 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 80123ac:	f7ff fc40 	bl	8011c30 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80123b0:	6832      	ldr	r2, [r6, #0]
 80123b2:	68d2      	ldr	r2, [r2, #12]
 80123b4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80123b8:	f10b 0104 	add.w	r1, fp, #4
 80123bc:	4608      	mov	r0, r1
 80123be:	9101      	str	r1, [sp, #4]
 80123c0:	f7fd fe3c 	bl	801003c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80123c4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 80123c8:	9901      	ldr	r1, [sp, #4]
 80123ca:	f010 0f04 	tst.w	r0, #4
 80123ce:	d11b      	bne.n	8012408 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80123d0:	f020 0001 	bic.w	r0, r0, #1
 80123d4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80123d8:	f8db 3020 	ldr.w	r3, [fp, #32]
 80123dc:	4658      	mov	r0, fp
 80123de:	4798      	blx	r3
}
 80123e0:	e73f      	b.n	8012262 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80123e2:	4553      	cmp	r3, sl
 80123e4:	d902      	bls.n	80123ec <prvTimerTask+0x1e4>
 80123e6:	2800      	cmp	r0, #0
 80123e8:	f43f af73 	beq.w	80122d2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80123ec:	6830      	ldr	r0, [r6, #0]
 80123ee:	1d39      	adds	r1, r7, #4
 80123f0:	f7fd fe0c 	bl	801000c <vListInsert>
	return xProcessTimerNow;
 80123f4:	e735      	b.n	8012262 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80123f6:	6830      	ldr	r0, [r6, #0]
 80123f8:	1d39      	adds	r1, r7, #4
 80123fa:	f7fd fe07 	bl	801000c <vListInsert>
 80123fe:	e730      	b.n	8012262 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8012400:	4638      	mov	r0, r7
 8012402:	f7fd fd7f 	bl	800ff04 <vPortFree>
 8012406:	e72c      	b.n	8012262 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8012408:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801240c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8012410:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 8012412:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012414:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012418:	d903      	bls.n	8012422 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801241a:	6830      	ldr	r0, [r6, #0]
 801241c:	f7fd fdf6 	bl	801000c <vListInsert>
	return xProcessTimerNow;
 8012420:	e7da      	b.n	80123d8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8012422:	ebaa 0307 	sub.w	r3, sl, r7
 8012426:	429a      	cmp	r2, r3
 8012428:	d819      	bhi.n	801245e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 801242a:	6823      	ldr	r3, [r4, #0]
 801242c:	b173      	cbz	r3, 801244c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 801242e:	2300      	movs	r3, #0
 8012430:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8012432:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8012434:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012438:	f7ff fd9c 	bl	8011f74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801243c:	2300      	movs	r3, #0
 801243e:	6820      	ldr	r0, [r4, #0]
 8012440:	461a      	mov	r2, r3
 8012442:	a906      	add	r1, sp, #24
 8012444:	f7fe f96a 	bl	801071c <xQueueGenericSend>
			configASSERT( xResult );
 8012448:	2800      	cmp	r0, #0
 801244a:	d1c5      	bne.n	80123d8 <prvTimerTask+0x1d0>
 801244c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8012450:	f383 8811 	msr	BASEPRI, r3
 8012454:	f3bf 8f6f 	isb	sy
 8012458:	f3bf 8f4f 	dsb	sy
 801245c:	e7fe      	b.n	801245c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801245e:	4b0a      	ldr	r3, [pc, #40]	; (8012488 <prvTimerTask+0x280>)
 8012460:	6818      	ldr	r0, [r3, #0]
 8012462:	f7fd fdd3 	bl	801000c <vListInsert>
	return xProcessTimerNow;
 8012466:	e7b7      	b.n	80123d8 <prvTimerTask+0x1d0>
 8012468:	f04f 0350 	mov.w	r3, #80	; 0x50
 801246c:	f383 8811 	msr	BASEPRI, r3
 8012470:	f3bf 8f6f 	isb	sy
 8012474:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8012478:	e7fe      	b.n	8012478 <prvTimerTask+0x270>
 801247a:	bf00      	nop
 801247c:	2001371c 	.word	0x2001371c
 8012480:	200137ec 	.word	0x200137ec
 8012484:	20013840 	.word	0x20013840
 8012488:	20013720 	.word	0x20013720

0801248c <xTimerCreateTimerTask>:
{
 801248c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801248e:	4c23      	ldr	r4, [pc, #140]	; (801251c <xTimerCreateTimerTask+0x90>)
{
 8012490:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8012492:	f7fd fe4f 	bl	8010134 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8012496:	6825      	ldr	r5, [r4, #0]
 8012498:	b335      	cbz	r5, 80124e8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801249a:	f7fd fe6d 	bl	8010178 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801249e:	6823      	ldr	r3, [r4, #0]
 80124a0:	b1cb      	cbz	r3, 80124d6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80124a2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80124a4:	aa07      	add	r2, sp, #28
 80124a6:	a906      	add	r1, sp, #24
 80124a8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80124aa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80124ae:	f7fd fc5d 	bl	800fd6c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80124b2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 80124b6:	2302      	movs	r3, #2
 80124b8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80124bc:	9300      	str	r3, [sp, #0]
 80124be:	9a07      	ldr	r2, [sp, #28]
 80124c0:	4917      	ldr	r1, [pc, #92]	; (8012520 <xTimerCreateTimerTask+0x94>)
 80124c2:	4818      	ldr	r0, [pc, #96]	; (8012524 <xTimerCreateTimerTask+0x98>)
 80124c4:	4623      	mov	r3, r4
 80124c6:	f7ff fa6d 	bl	80119a4 <xTaskCreateStatic>
 80124ca:	4b17      	ldr	r3, [pc, #92]	; (8012528 <xTimerCreateTimerTask+0x9c>)
 80124cc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80124ce:	b110      	cbz	r0, 80124d6 <xTimerCreateTimerTask+0x4a>
}
 80124d0:	2001      	movs	r0, #1
 80124d2:	b009      	add	sp, #36	; 0x24
 80124d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80124d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80124da:	f383 8811 	msr	BASEPRI, r3
 80124de:	f3bf 8f6f 	isb	sy
 80124e2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80124e6:	e7fe      	b.n	80124e6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 80124e8:	4f10      	ldr	r7, [pc, #64]	; (801252c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 80124ea:	4e11      	ldr	r6, [pc, #68]	; (8012530 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 80124ec:	4638      	mov	r0, r7
 80124ee:	f7fd fd6d 	bl	800ffcc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80124f2:	4630      	mov	r0, r6
 80124f4:	f7fd fd6a 	bl	800ffcc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80124f8:	4a0e      	ldr	r2, [pc, #56]	; (8012534 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80124fa:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 80124fc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80124fe:	4a0e      	ldr	r2, [pc, #56]	; (8012538 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8012500:	4b0e      	ldr	r3, [pc, #56]	; (801253c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8012502:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8012504:	2110      	movs	r1, #16
 8012506:	4a0e      	ldr	r2, [pc, #56]	; (8012540 <xTimerCreateTimerTask+0xb4>)
 8012508:	200a      	movs	r0, #10
 801250a:	f7fd ffb1 	bl	8010470 <xQueueGenericCreateStatic>
 801250e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8012510:	2800      	cmp	r0, #0
 8012512:	d0c2      	beq.n	801249a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8012514:	490b      	ldr	r1, [pc, #44]	; (8012544 <xTimerCreateTimerTask+0xb8>)
 8012516:	f7fe ff0d 	bl	8011334 <vQueueAddToRegistry>
 801251a:	e7be      	b.n	801249a <xTimerCreateTimerTask+0xe>
 801251c:	20013840 	.word	0x20013840
 8012520:	08031678 	.word	0x08031678
 8012524:	08012209 	.word	0x08012209
 8012528:	20013844 	.word	0x20013844
 801252c:	200137c4 	.word	0x200137c4
 8012530:	200137d8 	.word	0x200137d8
 8012534:	2001371c 	.word	0x2001371c
 8012538:	20013720 	.word	0x20013720
 801253c:	200137f0 	.word	0x200137f0
 8012540:	20013724 	.word	0x20013724
 8012544:	08031670 	.word	0x08031670

08012548 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8012548:	8880      	ldrh	r0, [r0, #4]
 801254a:	4770      	bx	lr

0801254c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801254c:	b570      	push	{r4, r5, r6, lr}
 801254e:	6803      	ldr	r3, [r0, #0]
 8012550:	4605      	mov	r5, r0
 8012552:	460c      	mov	r4, r1
 8012554:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012556:	2100      	movs	r1, #0
 8012558:	4798      	blx	r3
 801255a:	682b      	ldr	r3, [r5, #0]
 801255c:	4606      	mov	r6, r0
 801255e:	6a1b      	ldr	r3, [r3, #32]
 8012560:	4628      	mov	r0, r5
 8012562:	4798      	blx	r3
 8012564:	1ba4      	subs	r4, r4, r6
 8012566:	b2a4      	uxth	r4, r4
 8012568:	fbb4 f0f0 	udiv	r0, r4, r0
 801256c:	bd70      	pop	{r4, r5, r6, pc}

0801256e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801256e:	2300      	movs	r3, #0
 8012570:	8083      	strh	r3, [r0, #4]
 8012572:	4770      	bx	lr

08012574 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8012574:	b510      	push	{r4, lr}
 8012576:	6803      	ldr	r3, [r0, #0]
 8012578:	8881      	ldrh	r1, [r0, #4]
 801257a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801257c:	4604      	mov	r4, r0
 801257e:	4798      	blx	r3
 8012580:	88a3      	ldrh	r3, [r4, #4]
 8012582:	3301      	adds	r3, #1
 8012584:	80a3      	strh	r3, [r4, #4]
 8012586:	bd10      	pop	{r4, pc}

08012588 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8012588:	6803      	ldr	r3, [r0, #0]
 801258a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801258c:	4718      	bx	r3

0801258e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801258e:	4770      	bx	lr

08012590 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8012590:	4a02      	ldr	r2, [pc, #8]	; (801259c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8012592:	6002      	str	r2, [r0, #0]
 8012594:	2200      	movs	r2, #0
 8012596:	8082      	strh	r2, [r0, #4]
 8012598:	4770      	bx	lr
 801259a:	bf00      	nop
 801259c:	08031688 	.word	0x08031688

080125a0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 80125a0:	b510      	push	{r4, lr}
 80125a2:	6803      	ldr	r3, [r0, #0]
 80125a4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80125a8:	4604      	mov	r4, r0
 80125aa:	4798      	blx	r3
 80125ac:	b110      	cbz	r0, 80125b4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 80125ae:	4620      	mov	r0, r4
 80125b0:	f7f0 ff26 	bl	8003400 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80125b4:	bd10      	pop	{r4, pc}

080125b6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80125b6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 80125ba:	4770      	bx	lr

080125bc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 80125bc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 80125c0:	4770      	bx	lr

080125c2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 80125c2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 80125c6:	4770      	bx	lr

080125c8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 80125c8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 80125cc:	4770      	bx	lr

080125ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 80125ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80125d0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 80125d4:	461e      	mov	r6, r3
 80125d6:	6803      	ldr	r3, [r0, #0]
 80125d8:	460f      	mov	r7, r1
 80125da:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80125de:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 80125e2:	4604      	mov	r4, r0
 80125e4:	4615      	mov	r5, r2
 80125e6:	4798      	blx	r3
 80125e8:	b93e      	cbnz	r6, 80125fa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80125ea:	1bed      	subs	r5, r5, r7
 80125ec:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80125f0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80125f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80125f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80125fa:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80125fe:	e7f7      	b.n	80125f0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08012600 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8012600:	b510      	push	{r4, lr}
 8012602:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8012606:	600c      	str	r4, [r1, #0]
 8012608:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801260c:	6011      	str	r1, [r2, #0]
 801260e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8012612:	801a      	strh	r2, [r3, #0]
 8012614:	9b02      	ldr	r3, [sp, #8]
 8012616:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801261a:	801a      	strh	r2, [r3, #0]
 801261c:	bd10      	pop	{r4, pc}

0801261e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 801261e:	b510      	push	{r4, lr}
 8012620:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8012624:	600c      	str	r4, [r1, #0]
 8012626:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801262a:	6011      	str	r1, [r2, #0]
 801262c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8012630:	801a      	strh	r2, [r3, #0]
 8012632:	bd10      	pop	{r4, pc}

08012634 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8012634:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8012638:	600b      	str	r3, [r1, #0]
 801263a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 801263e:	6013      	str	r3, [r2, #0]
 8012640:	4770      	bx	lr

08012642 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8012642:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8012646:	4770      	bx	lr

08012648 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8012648:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801264c:	4770      	bx	lr

0801264e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801264e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8012652:	4770      	bx	lr

08012654 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8012654:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8012658:	4770      	bx	lr

0801265a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801265a:	4770      	bx	lr

0801265c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801265c:	b510      	push	{r4, lr}
 801265e:	21b4      	movs	r1, #180	; 0xb4
 8012660:	4604      	mov	r4, r0
 8012662:	f01a fbaa 	bl	802cdba <_ZdlPvj>
 8012666:	4620      	mov	r0, r4
 8012668:	bd10      	pop	{r4, pc}

0801266a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801266a:	b570      	push	{r4, r5, r6, lr}
 801266c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8012670:	428d      	cmp	r5, r1
 8012672:	bfb8      	it	lt
 8012674:	460d      	movlt	r5, r1
 8012676:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801267a:	428d      	cmp	r5, r1
 801267c:	4604      	mov	r4, r0
 801267e:	bfa8      	it	ge
 8012680:	460d      	movge	r5, r1
 8012682:	4616      	mov	r6, r2
 8012684:	b99a      	cbnz	r2, 80126ae <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8012686:	6803      	ldr	r3, [r0, #0]
 8012688:	4629      	mov	r1, r5
 801268a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801268e:	4798      	blx	r3
 8012690:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012694:	b368      	cbz	r0, 80126f2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012696:	6803      	ldr	r3, [r0, #0]
 8012698:	68db      	ldr	r3, [r3, #12]
 801269a:	4798      	blx	r3
 801269c:	b348      	cbz	r0, 80126f2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801269e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80126a2:	6803      	ldr	r3, [r0, #0]
 80126a4:	4621      	mov	r1, r4
 80126a6:	689b      	ldr	r3, [r3, #8]
 80126a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126ac:	4718      	bx	r3
 80126ae:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80126b2:	2b00      	cmp	r3, #0
 80126b4:	dd08      	ble.n	80126c8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 80126b6:	f006 fa23 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 80126ba:	4621      	mov	r1, r4
 80126bc:	3004      	adds	r0, #4
 80126be:	f006 fa6c 	bl	8018b9a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80126c2:	2300      	movs	r3, #0
 80126c4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80126c8:	6823      	ldr	r3, [r4, #0]
 80126ca:	4620      	mov	r0, r4
 80126cc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80126d0:	4798      	blx	r3
 80126d2:	2300      	movs	r3, #0
 80126d4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80126d8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 80126dc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 80126e0:	f006 fa0e 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 80126e4:	4621      	mov	r1, r4
 80126e6:	3004      	adds	r0, #4
 80126e8:	f006 fb00 	bl	8018cec <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80126ec:	2301      	movs	r3, #1
 80126ee:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80126f2:	bd70      	pop	{r4, r5, r6, pc}

080126f4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80126f4:	b510      	push	{r4, lr}
 80126f6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80126fa:	4299      	cmp	r1, r3
 80126fc:	bfb8      	it	lt
 80126fe:	4619      	movlt	r1, r3
 8012700:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012704:	4299      	cmp	r1, r3
 8012706:	bfa8      	it	ge
 8012708:	4619      	movge	r1, r3
 801270a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801270e:	428b      	cmp	r3, r1
 8012710:	4604      	mov	r4, r0
 8012712:	d010      	beq.n	8012736 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012714:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8012718:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801271c:	b158      	cbz	r0, 8012736 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801271e:	6803      	ldr	r3, [r0, #0]
 8012720:	68db      	ldr	r3, [r3, #12]
 8012722:	4798      	blx	r3
 8012724:	b138      	cbz	r0, 8012736 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012726:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 801272a:	6803      	ldr	r3, [r0, #0]
 801272c:	4621      	mov	r1, r4
 801272e:	689b      	ldr	r3, [r3, #8]
 8012730:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012734:	4718      	bx	r3
 8012736:	bd10      	pop	{r4, pc}

08012738 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8012738:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801273a:	4604      	mov	r4, r0
 801273c:	460d      	mov	r5, r1
 801273e:	b1a9      	cbz	r1, 801276c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8012740:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8012744:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8012748:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801274c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8012750:	ab01      	add	r3, sp, #4
 8012752:	1a12      	subs	r2, r2, r0
 8012754:	1b89      	subs	r1, r1, r6
 8012756:	1a38      	subs	r0, r7, r0
 8012758:	f007 fc88 	bl	801a06c <_ZN8touchgfx6muldivElllRl>
 801275c:	4629      	mov	r1, r5
 801275e:	ab01      	add	r3, sp, #4
 8012760:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8012764:	4430      	add	r0, r6
 8012766:	f007 fc81 	bl	801a06c <_ZN8touchgfx6muldivElllRl>
 801276a:	b285      	uxth	r5, r0
 801276c:	4628      	mov	r0, r5
 801276e:	b003      	add	sp, #12
 8012770:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012772 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8012772:	b570      	push	{r4, r5, r6, lr}
 8012774:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8012778:	4604      	mov	r4, r0
 801277a:	2b00      	cmp	r3, #0
 801277c:	d035      	beq.n	80127ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801277e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8012782:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8012786:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801278a:	3001      	adds	r0, #1
 801278c:	1ad2      	subs	r2, r2, r3
 801278e:	b212      	sxth	r2, r2
 8012790:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8012794:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8012798:	2100      	movs	r1, #0
 801279a:	b280      	uxth	r0, r0
 801279c:	47a8      	blx	r5
 801279e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 80127a2:	6823      	ldr	r3, [r4, #0]
 80127a4:	4401      	add	r1, r0
 80127a6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80127aa:	4620      	mov	r0, r4
 80127ac:	4798      	blx	r3
 80127ae:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80127b2:	429a      	cmp	r2, r3
 80127b4:	db19      	blt.n	80127ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80127b6:	2500      	movs	r5, #0
 80127b8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80127bc:	f006 f9a0 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 80127c0:	4621      	mov	r1, r4
 80127c2:	3004      	adds	r0, #4
 80127c4:	f006 f9e9 	bl	8018b9a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80127c8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80127cc:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80127d0:	b158      	cbz	r0, 80127ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80127d2:	6803      	ldr	r3, [r0, #0]
 80127d4:	68db      	ldr	r3, [r3, #12]
 80127d6:	4798      	blx	r3
 80127d8:	b138      	cbz	r0, 80127ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80127da:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80127de:	6803      	ldr	r3, [r0, #0]
 80127e0:	4621      	mov	r1, r4
 80127e2:	689b      	ldr	r3, [r3, #8]
 80127e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80127e8:	4718      	bx	r3
 80127ea:	bd70      	pop	{r4, r5, r6, pc}

080127ec <_ZN8touchgfx8DrawableC1Ev>:
 80127ec:	4a0a      	ldr	r2, [pc, #40]	; (8012818 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 80127ee:	6002      	str	r2, [r0, #0]
 80127f0:	2200      	movs	r2, #0
 80127f2:	8082      	strh	r2, [r0, #4]
 80127f4:	80c2      	strh	r2, [r0, #6]
 80127f6:	8102      	strh	r2, [r0, #8]
 80127f8:	8142      	strh	r2, [r0, #10]
 80127fa:	8182      	strh	r2, [r0, #12]
 80127fc:	81c2      	strh	r2, [r0, #14]
 80127fe:	8202      	strh	r2, [r0, #16]
 8012800:	8242      	strh	r2, [r0, #18]
 8012802:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012806:	61c2      	str	r2, [r0, #28]
 8012808:	8402      	strh	r2, [r0, #32]
 801280a:	8442      	strh	r2, [r0, #34]	; 0x22
 801280c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012810:	2201      	movs	r2, #1
 8012812:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8012816:	4770      	bx	lr
 8012818:	08032008 	.word	0x08032008

0801281c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801281c:	b570      	push	{r4, r5, r6, lr}
 801281e:	6803      	ldr	r3, [r0, #0]
 8012820:	4604      	mov	r4, r0
 8012822:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012824:	4615      	mov	r5, r2
 8012826:	4798      	blx	r3
 8012828:	6823      	ldr	r3, [r4, #0]
 801282a:	4629      	mov	r1, r5
 801282c:	4620      	mov	r0, r4
 801282e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012830:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012834:	4718      	bx	r3

08012836 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8012836:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801283a:	4604      	mov	r4, r0
 801283c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8012840:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8012844:	460e      	mov	r6, r1
 8012846:	4615      	mov	r5, r2
 8012848:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801284c:	4619      	mov	r1, r3
 801284e:	463a      	mov	r2, r7
 8012850:	3058      	adds	r0, #88	; 0x58
 8012852:	4698      	mov	r8, r3
 8012854:	f7ff ffe2 	bl	801281c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012858:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801285c:	4446      	add	r6, r8
 801285e:	42b3      	cmp	r3, r6
 8012860:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012864:	bfb8      	it	lt
 8012866:	8126      	strhlt	r6, [r4, #8]
 8012868:	443d      	add	r5, r7
 801286a:	42ab      	cmp	r3, r5
 801286c:	bfb8      	it	lt
 801286e:	8165      	strhlt	r5, [r4, #10]
 8012870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012874 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8012874:	b510      	push	{r4, lr}
 8012876:	4604      	mov	r4, r0
 8012878:	302c      	adds	r0, #44	; 0x2c
 801287a:	f003 fc42 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801287e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8012882:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012886:	4620      	mov	r0, r4
 8012888:	f7ff ffc8 	bl	801281c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801288c:	bd10      	pop	{r4, pc}
	...

08012890 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8012890:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012892:	4604      	mov	r4, r0
 8012894:	4626      	mov	r6, r4
 8012896:	2500      	movs	r5, #0
 8012898:	f7ff ffa8 	bl	80127ec <_ZN8touchgfx8DrawableC1Ev>
 801289c:	4b23      	ldr	r3, [pc, #140]	; (801292c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801289e:	62a5      	str	r5, [r4, #40]	; 0x28
 80128a0:	f846 3b2c 	str.w	r3, [r6], #44
 80128a4:	2226      	movs	r2, #38	; 0x26
 80128a6:	4629      	mov	r1, r5
 80128a8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80128ac:	4630      	mov	r0, r6
 80128ae:	f8ad 7004 	strh.w	r7, [sp, #4]
 80128b2:	f01b fb6e 	bl	802df92 <memset>
 80128b6:	4630      	mov	r0, r6
 80128b8:	f7ff ff98 	bl	80127ec <_ZN8touchgfx8DrawableC1Ev>
 80128bc:	a902      	add	r1, sp, #8
 80128be:	4b1c      	ldr	r3, [pc, #112]	; (8012930 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 80128c0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80128c2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 80128c6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 80128ca:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 80128ce:	4630      	mov	r0, r6
 80128d0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 80128d4:	f003 fc15 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80128d8:	4638      	mov	r0, r7
 80128da:	f7ff ff87 	bl	80127ec <_ZN8touchgfx8DrawableC1Ev>
 80128de:	4b15      	ldr	r3, [pc, #84]	; (8012934 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 80128e0:	65a3      	str	r3, [r4, #88]	; 0x58
 80128e2:	2364      	movs	r3, #100	; 0x64
 80128e4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 80128e8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80128ec:	4b12      	ldr	r3, [pc, #72]	; (8012938 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 80128ee:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80128f2:	4629      	mov	r1, r5
 80128f4:	4630      	mov	r0, r6
 80128f6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80128fa:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80128fe:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8012902:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8012906:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801290a:	f7f0 fcd5 	bl	80032b8 <_ZN8touchgfx8Drawable4setXEs>
 801290e:	4629      	mov	r1, r5
 8012910:	4630      	mov	r0, r6
 8012912:	f7f0 fcd3 	bl	80032bc <_ZN8touchgfx8Drawable4setYEs>
 8012916:	4631      	mov	r1, r6
 8012918:	4620      	mov	r0, r4
 801291a:	f000 f819 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801291e:	4620      	mov	r0, r4
 8012920:	4639      	mov	r1, r7
 8012922:	f000 f815 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012926:	4620      	mov	r0, r4
 8012928:	b003      	add	sp, #12
 801292a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801292c:	080316bc 	.word	0x080316bc
 8012930:	08031ec4 	.word	0x08031ec4
 8012934:	08031790 	.word	0x08031790
 8012938:	0801a847 	.word	0x0801a847

0801293c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801293c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801293e:	2000      	movs	r0, #0
 8012940:	b12b      	cbz	r3, 801294e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012942:	b920      	cbnz	r0, 801294e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012944:	1a5a      	subs	r2, r3, r1
 8012946:	4250      	negs	r0, r2
 8012948:	4150      	adcs	r0, r2
 801294a:	699b      	ldr	r3, [r3, #24]
 801294c:	e7f8      	b.n	8012940 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801294e:	4770      	bx	lr

08012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8012950:	2300      	movs	r3, #0
 8012952:	6148      	str	r0, [r1, #20]
 8012954:	618b      	str	r3, [r1, #24]
 8012956:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012958:	b913      	cbnz	r3, 8012960 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801295a:	6281      	str	r1, [r0, #40]	; 0x28
 801295c:	4770      	bx	lr
 801295e:	4613      	mov	r3, r2
 8012960:	699a      	ldr	r2, [r3, #24]
 8012962:	2a00      	cmp	r2, #0
 8012964:	d1fb      	bne.n	801295e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8012966:	6199      	str	r1, [r3, #24]
 8012968:	4770      	bx	lr

0801296a <_ZN8touchgfx9Container9removeAllEv>:
 801296a:	2200      	movs	r2, #0
 801296c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801296e:	b123      	cbz	r3, 801297a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012970:	6999      	ldr	r1, [r3, #24]
 8012972:	6281      	str	r1, [r0, #40]	; 0x28
 8012974:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8012978:	e7f8      	b.n	801296c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801297a:	4770      	bx	lr

0801297c <_ZN8touchgfx9Container6unlinkEv>:
 801297c:	2300      	movs	r3, #0
 801297e:	6283      	str	r3, [r0, #40]	; 0x28
 8012980:	4770      	bx	lr

08012982 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8012982:	2200      	movs	r2, #0
 8012984:	8002      	strh	r2, [r0, #0]
 8012986:	8042      	strh	r2, [r0, #2]
 8012988:	8082      	strh	r2, [r0, #4]
 801298a:	80c2      	strh	r2, [r0, #6]
 801298c:	4770      	bx	lr

0801298e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801298e:	b570      	push	{r4, r5, r6, lr}
 8012990:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012992:	460d      	mov	r5, r1
 8012994:	4616      	mov	r6, r2
 8012996:	b13c      	cbz	r4, 80129a8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8012998:	6823      	ldr	r3, [r4, #0]
 801299a:	4620      	mov	r0, r4
 801299c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801299e:	4632      	mov	r2, r6
 80129a0:	4629      	mov	r1, r5
 80129a2:	4798      	blx	r3
 80129a4:	69a4      	ldr	r4, [r4, #24]
 80129a6:	e7f6      	b.n	8012996 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80129a8:	bd70      	pop	{r4, r5, r6, pc}

080129aa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80129aa:	b538      	push	{r3, r4, r5, lr}
 80129ac:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80129ae:	460d      	mov	r5, r1
 80129b0:	b134      	cbz	r4, 80129c0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80129b2:	682b      	ldr	r3, [r5, #0]
 80129b4:	4621      	mov	r1, r4
 80129b6:	689b      	ldr	r3, [r3, #8]
 80129b8:	4628      	mov	r0, r5
 80129ba:	4798      	blx	r3
 80129bc:	69a4      	ldr	r4, [r4, #24]
 80129be:	e7f7      	b.n	80129b0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80129c0:	bd38      	pop	{r3, r4, r5, pc}

080129c2 <_ZN8touchgfx9ContainerD1Ev>:
 80129c2:	4770      	bx	lr

080129c4 <_ZN8touchgfx9ContainerD0Ev>:
 80129c4:	b510      	push	{r4, lr}
 80129c6:	212c      	movs	r1, #44	; 0x2c
 80129c8:	4604      	mov	r4, r0
 80129ca:	f01a f9f6 	bl	802cdba <_ZdlPvj>
 80129ce:	4620      	mov	r0, r4
 80129d0:	bd10      	pop	{r4, pc}

080129d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80129d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80129d4:	b19b      	cbz	r3, 80129fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80129d6:	428b      	cmp	r3, r1
 80129d8:	d109      	bne.n	80129ee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80129da:	699a      	ldr	r2, [r3, #24]
 80129dc:	2100      	movs	r1, #0
 80129de:	6159      	str	r1, [r3, #20]
 80129e0:	6282      	str	r2, [r0, #40]	; 0x28
 80129e2:	b902      	cbnz	r2, 80129e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80129e4:	4770      	bx	lr
 80129e6:	6199      	str	r1, [r3, #24]
 80129e8:	4770      	bx	lr
 80129ea:	4613      	mov	r3, r2
 80129ec:	b13a      	cbz	r2, 80129fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80129ee:	699a      	ldr	r2, [r3, #24]
 80129f0:	428a      	cmp	r2, r1
 80129f2:	d1fa      	bne.n	80129ea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80129f4:	698a      	ldr	r2, [r1, #24]
 80129f6:	619a      	str	r2, [r3, #24]
 80129f8:	2300      	movs	r3, #0
 80129fa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80129fe:	4770      	bx	lr

08012a00 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8012a00:	b410      	push	{r4}
 8012a02:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012a04:	4604      	mov	r4, r0
 8012a06:	b92b      	cbnz	r3, 8012a14 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8012a08:	6803      	ldr	r3, [r0, #0]
 8012a0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012a0e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8012a10:	4611      	mov	r1, r2
 8012a12:	4718      	bx	r3
 8012a14:	b941      	cbnz	r1, 8012a28 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8012a16:	6193      	str	r3, [r2, #24]
 8012a18:	6282      	str	r2, [r0, #40]	; 0x28
 8012a1a:	6154      	str	r4, [r2, #20]
 8012a1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012a20:	4770      	bx	lr
 8012a22:	4603      	mov	r3, r0
 8012a24:	2800      	cmp	r0, #0
 8012a26:	d0f9      	beq.n	8012a1c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8012a28:	4299      	cmp	r1, r3
 8012a2a:	6998      	ldr	r0, [r3, #24]
 8012a2c:	d1f9      	bne.n	8012a22 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8012a2e:	6190      	str	r0, [r2, #24]
 8012a30:	618a      	str	r2, [r1, #24]
 8012a32:	e7f2      	b.n	8012a1a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08012a34 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8012a34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012a38:	461f      	mov	r7, r3
 8012a3a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8012a3e:	460d      	mov	r5, r1
 8012a40:	4616      	mov	r6, r2
 8012a42:	b103      	cbz	r3, 8012a46 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8012a44:	6038      	str	r0, [r7, #0]
 8012a46:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012a48:	b314      	cbz	r4, 8012a90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8012a4a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012a4e:	b1eb      	cbz	r3, 8012a8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012a50:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012a54:	428d      	cmp	r5, r1
 8012a56:	db19      	blt.n	8012a8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012a58:	8923      	ldrh	r3, [r4, #8]
 8012a5a:	b289      	uxth	r1, r1
 8012a5c:	440b      	add	r3, r1
 8012a5e:	b21b      	sxth	r3, r3
 8012a60:	429d      	cmp	r5, r3
 8012a62:	da13      	bge.n	8012a8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012a64:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012a68:	4296      	cmp	r6, r2
 8012a6a:	db0f      	blt.n	8012a8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012a6c:	8963      	ldrh	r3, [r4, #10]
 8012a6e:	b292      	uxth	r2, r2
 8012a70:	4413      	add	r3, r2
 8012a72:	b21b      	sxth	r3, r3
 8012a74:	429e      	cmp	r6, r3
 8012a76:	da09      	bge.n	8012a8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012a78:	6823      	ldr	r3, [r4, #0]
 8012a7a:	1ab2      	subs	r2, r6, r2
 8012a7c:	1a69      	subs	r1, r5, r1
 8012a7e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8012a82:	b212      	sxth	r2, r2
 8012a84:	463b      	mov	r3, r7
 8012a86:	b209      	sxth	r1, r1
 8012a88:	4620      	mov	r0, r4
 8012a8a:	47c0      	blx	r8
 8012a8c:	69a4      	ldr	r4, [r4, #24]
 8012a8e:	e7db      	b.n	8012a48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012a90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012a94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a98:	4c6e      	ldr	r4, [pc, #440]	; (8012c54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8012a9a:	b0a1      	sub	sp, #132	; 0x84
 8012a9c:	6824      	ldr	r4, [r4, #0]
 8012a9e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8012aa0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8012aa4:	9303      	str	r3, [sp, #12]
 8012aa6:	2400      	movs	r4, #0
 8012aa8:	802c      	strh	r4, [r5, #0]
 8012aaa:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8012aac:	802c      	strh	r4, [r5, #0]
 8012aae:	601c      	str	r4, [r3, #0]
 8012ab0:	4606      	mov	r6, r0
 8012ab2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8012ab6:	f7ff ffbd 	bl	8012a34 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012aba:	f1b9 0f03 	cmp.w	r9, #3
 8012abe:	f340 80c2 	ble.w	8012c46 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8012ac2:	4631      	mov	r1, r6
 8012ac4:	a80c      	add	r0, sp, #48	; 0x30
 8012ac6:	f007 f99f 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012aca:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8012ace:	9306      	str	r3, [sp, #24]
 8012ad0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012ad4:	9307      	str	r3, [sp, #28]
 8012ad6:	9b03      	ldr	r3, [sp, #12]
 8012ad8:	f8d3 a000 	ldr.w	sl, [r3]
 8012adc:	f1ba 0f00 	cmp.w	sl, #0
 8012ae0:	f000 80b4 	beq.w	8012c4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8012ae4:	4651      	mov	r1, sl
 8012ae6:	a810      	add	r0, sp, #64	; 0x40
 8012ae8:	f007 f98e 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012aec:	9b01      	ldr	r3, [sp, #4]
 8012aee:	9a06      	ldr	r2, [sp, #24]
 8012af0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8012af4:	189d      	adds	r5, r3, r2
 8012af6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8012afa:	9a07      	ldr	r2, [sp, #28]
 8012afc:	2002      	movs	r0, #2
 8012afe:	fb91 f1f0 	sdiv	r1, r1, r0
 8012b02:	4419      	add	r1, r3
 8012b04:	1a6d      	subs	r5, r5, r1
 8012b06:	9b02      	ldr	r3, [sp, #8]
 8012b08:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012b0c:	4413      	add	r3, r2
 8012b0e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8012b12:	fb92 f2f0 	sdiv	r2, r2, r0
 8012b16:	440a      	add	r2, r1
 8012b18:	1a9b      	subs	r3, r3, r2
 8012b1a:	435b      	muls	r3, r3
 8012b1c:	fb05 3505 	mla	r5, r5, r5, r3
 8012b20:	4f4d      	ldr	r7, [pc, #308]	; (8012c58 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8012b22:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012b24:	ac10      	add	r4, sp, #64	; 0x40
 8012b26:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012b28:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012b2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012b2c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012b2e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012b30:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8012b34:	f1b9 0f0c 	cmp.w	r9, #12
 8012b38:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8012b3c:	f04f 0303 	mov.w	r3, #3
 8012b40:	bfc8      	it	gt
 8012b42:	4698      	movgt	r8, r3
 8012b44:	f8cd 9000 	str.w	r9, [sp]
 8012b48:	f04f 0400 	mov.w	r4, #0
 8012b4c:	bfdc      	itt	le
 8012b4e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8012b52:	fb92 f8f3 	sdivle	r8, r2, r3
 8012b56:	1c63      	adds	r3, r4, #1
 8012b58:	aa10      	add	r2, sp, #64	; 0x40
 8012b5a:	f004 0401 	and.w	r4, r4, #1
 8012b5e:	9308      	str	r3, [sp, #32]
 8012b60:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8012b64:	9b00      	ldr	r3, [sp, #0]
 8012b66:	fb93 f3f8 	sdiv	r3, r3, r8
 8012b6a:	b29b      	uxth	r3, r3
 8012b6c:	3404      	adds	r4, #4
 8012b6e:	f04f 0b00 	mov.w	fp, #0
 8012b72:	9304      	str	r3, [sp, #16]
 8012b74:	9a04      	ldr	r2, [sp, #16]
 8012b76:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012b7a:	fb13 f302 	smulbb	r3, r3, r2
 8012b7e:	9a01      	ldr	r2, [sp, #4]
 8012b80:	b29b      	uxth	r3, r3
 8012b82:	1899      	adds	r1, r3, r2
 8012b84:	9305      	str	r3, [sp, #20]
 8012b86:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012b8a:	b209      	sxth	r1, r1
 8012b8c:	4299      	cmp	r1, r3
 8012b8e:	db4d      	blt.n	8012c2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b90:	8932      	ldrh	r2, [r6, #8]
 8012b92:	4413      	add	r3, r2
 8012b94:	b21b      	sxth	r3, r3
 8012b96:	4299      	cmp	r1, r3
 8012b98:	da48      	bge.n	8012c2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b9a:	9b04      	ldr	r3, [sp, #16]
 8012b9c:	6827      	ldr	r7, [r4, #0]
 8012b9e:	fb17 f703 	smulbb	r7, r7, r3
 8012ba2:	9b02      	ldr	r3, [sp, #8]
 8012ba4:	b2bf      	uxth	r7, r7
 8012ba6:	18fa      	adds	r2, r7, r3
 8012ba8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012bac:	b212      	sxth	r2, r2
 8012bae:	429a      	cmp	r2, r3
 8012bb0:	db3c      	blt.n	8012c2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012bb2:	8970      	ldrh	r0, [r6, #10]
 8012bb4:	4403      	add	r3, r0
 8012bb6:	b21b      	sxth	r3, r3
 8012bb8:	429a      	cmp	r2, r3
 8012bba:	da37      	bge.n	8012c2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012bbc:	2300      	movs	r3, #0
 8012bbe:	930b      	str	r3, [sp, #44]	; 0x2c
 8012bc0:	4630      	mov	r0, r6
 8012bc2:	ab0b      	add	r3, sp, #44	; 0x2c
 8012bc4:	f7ff ff36 	bl	8012a34 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012bc8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012bca:	b37a      	cbz	r2, 8012c2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012bcc:	4552      	cmp	r2, sl
 8012bce:	d02d      	beq.n	8012c2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012bd0:	4611      	mov	r1, r2
 8012bd2:	a80e      	add	r0, sp, #56	; 0x38
 8012bd4:	9209      	str	r2, [sp, #36]	; 0x24
 8012bd6:	f007 f917 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012bda:	9a06      	ldr	r2, [sp, #24]
 8012bdc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012be0:	9b01      	ldr	r3, [sp, #4]
 8012be2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8012be6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8012bea:	4413      	add	r3, r2
 8012bec:	f04f 0e02 	mov.w	lr, #2
 8012bf0:	fb91 f1fe 	sdiv	r1, r1, lr
 8012bf4:	4401      	add	r1, r0
 8012bf6:	1a58      	subs	r0, r3, r1
 8012bf8:	9a07      	ldr	r2, [sp, #28]
 8012bfa:	9b02      	ldr	r3, [sp, #8]
 8012bfc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012c00:	fb9c fcfe 	sdiv	ip, ip, lr
 8012c04:	4413      	add	r3, r2
 8012c06:	448c      	add	ip, r1
 8012c08:	eba3 030c 	sub.w	r3, r3, ip
 8012c0c:	435b      	muls	r3, r3
 8012c0e:	fb00 3300 	mla	r3, r0, r0, r3
 8012c12:	42ab      	cmp	r3, r5
 8012c14:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012c16:	d208      	bcs.n	8012c2a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012c18:	9803      	ldr	r0, [sp, #12]
 8012c1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012c1c:	6001      	str	r1, [r0, #0]
 8012c1e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012c20:	9805      	ldr	r0, [sp, #20]
 8012c22:	8008      	strh	r0, [r1, #0]
 8012c24:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012c26:	461d      	mov	r5, r3
 8012c28:	800f      	strh	r7, [r1, #0]
 8012c2a:	4692      	mov	sl, r2
 8012c2c:	f10b 0b01 	add.w	fp, fp, #1
 8012c30:	f1bb 0f04 	cmp.w	fp, #4
 8012c34:	f104 0408 	add.w	r4, r4, #8
 8012c38:	d19c      	bne.n	8012b74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8012c3a:	9b00      	ldr	r3, [sp, #0]
 8012c3c:	9c08      	ldr	r4, [sp, #32]
 8012c3e:	444b      	add	r3, r9
 8012c40:	4544      	cmp	r4, r8
 8012c42:	9300      	str	r3, [sp, #0]
 8012c44:	d187      	bne.n	8012b56 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012c46:	b021      	add	sp, #132	; 0x84
 8012c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c4c:	f04f 35ff 	mov.w	r5, #4294967295
 8012c50:	e766      	b.n	8012b20 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012c52:	bf00      	nop
 8012c54:	20013854 	.word	0x20013854
 8012c58:	0802ecac 	.word	0x0802ecac

08012c5c <_ZN8touchgfx4RectaNERKS0_>:
 8012c5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012c60:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012c64:	888c      	ldrh	r4, [r1, #4]
 8012c66:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012c6a:	443c      	add	r4, r7
 8012c6c:	b2a4      	uxth	r4, r4
 8012c6e:	fa0f f884 	sxth.w	r8, r4
 8012c72:	45c1      	cmp	r9, r8
 8012c74:	da2f      	bge.n	8012cd6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012c76:	8882      	ldrh	r2, [r0, #4]
 8012c78:	444a      	add	r2, r9
 8012c7a:	b292      	uxth	r2, r2
 8012c7c:	fa0f fe82 	sxth.w	lr, r2
 8012c80:	4577      	cmp	r7, lr
 8012c82:	da28      	bge.n	8012cd6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012c84:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012c88:	88cb      	ldrh	r3, [r1, #6]
 8012c8a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012c8e:	442b      	add	r3, r5
 8012c90:	b21b      	sxth	r3, r3
 8012c92:	429e      	cmp	r6, r3
 8012c94:	da1f      	bge.n	8012cd6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012c96:	88c3      	ldrh	r3, [r0, #6]
 8012c98:	4433      	add	r3, r6
 8012c9a:	b29b      	uxth	r3, r3
 8012c9c:	fa0f fc83 	sxth.w	ip, r3
 8012ca0:	4565      	cmp	r5, ip
 8012ca2:	da18      	bge.n	8012cd6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012ca4:	454f      	cmp	r7, r9
 8012ca6:	bfb8      	it	lt
 8012ca8:	464f      	movlt	r7, r9
 8012caa:	42b5      	cmp	r5, r6
 8012cac:	bfb8      	it	lt
 8012cae:	4635      	movlt	r5, r6
 8012cb0:	45f0      	cmp	r8, lr
 8012cb2:	bfd8      	it	le
 8012cb4:	4622      	movle	r2, r4
 8012cb6:	1bd2      	subs	r2, r2, r7
 8012cb8:	8082      	strh	r2, [r0, #4]
 8012cba:	884a      	ldrh	r2, [r1, #2]
 8012cbc:	88c9      	ldrh	r1, [r1, #6]
 8012cbe:	8007      	strh	r7, [r0, #0]
 8012cc0:	440a      	add	r2, r1
 8012cc2:	b292      	uxth	r2, r2
 8012cc4:	b211      	sxth	r1, r2
 8012cc6:	458c      	cmp	ip, r1
 8012cc8:	bfa8      	it	ge
 8012cca:	4613      	movge	r3, r2
 8012ccc:	1b5b      	subs	r3, r3, r5
 8012cce:	80c3      	strh	r3, [r0, #6]
 8012cd0:	8045      	strh	r5, [r0, #2]
 8012cd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012cd6:	2300      	movs	r3, #0
 8012cd8:	8003      	strh	r3, [r0, #0]
 8012cda:	8043      	strh	r3, [r0, #2]
 8012cdc:	8083      	strh	r3, [r0, #4]
 8012cde:	80c3      	strh	r3, [r0, #6]
 8012ce0:	e7f7      	b.n	8012cd2 <_ZN8touchgfx4RectaNERKS0_+0x76>

08012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8012ce2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012ce6:	2b00      	cmp	r3, #0
 8012ce8:	dd06      	ble.n	8012cf8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012cea:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012cee:	2800      	cmp	r0, #0
 8012cf0:	bfcc      	ite	gt
 8012cf2:	2000      	movgt	r0, #0
 8012cf4:	2001      	movle	r0, #1
 8012cf6:	4770      	bx	lr
 8012cf8:	2001      	movs	r0, #1
 8012cfa:	4770      	bx	lr

08012cfc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012cfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012d00:	2300      	movs	r3, #0
 8012d02:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012d04:	8003      	strh	r3, [r0, #0]
 8012d06:	4604      	mov	r4, r0
 8012d08:	8043      	strh	r3, [r0, #2]
 8012d0a:	8083      	strh	r3, [r0, #4]
 8012d0c:	80c3      	strh	r3, [r0, #6]
 8012d0e:	2d00      	cmp	r5, #0
 8012d10:	d040      	beq.n	8012d94 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8012d12:	1d28      	adds	r0, r5, #4
 8012d14:	f7ff ffe5 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012d18:	b988      	cbnz	r0, 8012d3e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012d1a:	4620      	mov	r0, r4
 8012d1c:	f7ff ffe1 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012d20:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012d24:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012d28:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8012d2c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012d30:	b138      	cbz	r0, 8012d42 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012d32:	8022      	strh	r2, [r4, #0]
 8012d34:	8063      	strh	r3, [r4, #2]
 8012d36:	f8a4 e004 	strh.w	lr, [r4, #4]
 8012d3a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012d3e:	69ad      	ldr	r5, [r5, #24]
 8012d40:	e7e5      	b.n	8012d0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012d42:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012d46:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012d4a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012d4e:	4290      	cmp	r0, r2
 8012d50:	4607      	mov	r7, r0
 8012d52:	bfa8      	it	ge
 8012d54:	4617      	movge	r7, r2
 8012d56:	4472      	add	r2, lr
 8012d58:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012d5c:	8027      	strh	r7, [r4, #0]
 8012d5e:	4299      	cmp	r1, r3
 8012d60:	460e      	mov	r6, r1
 8012d62:	4440      	add	r0, r8
 8012d64:	bfa8      	it	ge
 8012d66:	461e      	movge	r6, r3
 8012d68:	4471      	add	r1, lr
 8012d6a:	4463      	add	r3, ip
 8012d6c:	b200      	sxth	r0, r0
 8012d6e:	b212      	sxth	r2, r2
 8012d70:	b209      	sxth	r1, r1
 8012d72:	b21b      	sxth	r3, r3
 8012d74:	4290      	cmp	r0, r2
 8012d76:	bfac      	ite	ge
 8012d78:	ebc7 0200 	rsbge	r2, r7, r0
 8012d7c:	ebc7 0202 	rsblt	r2, r7, r2
 8012d80:	4299      	cmp	r1, r3
 8012d82:	bfac      	ite	ge
 8012d84:	ebc6 0301 	rsbge	r3, r6, r1
 8012d88:	ebc6 0303 	rsblt	r3, r6, r3
 8012d8c:	8066      	strh	r6, [r4, #2]
 8012d8e:	80a2      	strh	r2, [r4, #4]
 8012d90:	80e3      	strh	r3, [r4, #6]
 8012d92:	e7d4      	b.n	8012d3e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012d94:	4620      	mov	r0, r4
 8012d96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012d9a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012d9a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012d9e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012da2:	b383      	cbz	r3, 8012e06 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012da4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012da6:	b374      	cbz	r4, 8012e06 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012da8:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012dac:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012db0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012db4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012db8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012dbc:	b303      	cbz	r3, 8012e00 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012dbe:	4668      	mov	r0, sp
 8012dc0:	1d21      	adds	r1, r4, #4
 8012dc2:	f8ad 5000 	strh.w	r5, [sp]
 8012dc6:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012dca:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012dce:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012dd2:	f7ff ff43 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 8012dd6:	4668      	mov	r0, sp
 8012dd8:	f7ff ff83 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012ddc:	b980      	cbnz	r0, 8012e00 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012dde:	f8bd 3000 	ldrh.w	r3, [sp]
 8012de2:	88a2      	ldrh	r2, [r4, #4]
 8012de4:	1a9b      	subs	r3, r3, r2
 8012de6:	f8ad 3000 	strh.w	r3, [sp]
 8012dea:	88e2      	ldrh	r2, [r4, #6]
 8012dec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012df0:	1a9b      	subs	r3, r3, r2
 8012df2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012df6:	6823      	ldr	r3, [r4, #0]
 8012df8:	4669      	mov	r1, sp
 8012dfa:	689b      	ldr	r3, [r3, #8]
 8012dfc:	4620      	mov	r0, r4
 8012dfe:	4798      	blx	r3
 8012e00:	69a4      	ldr	r4, [r4, #24]
 8012e02:	2c00      	cmp	r4, #0
 8012e04:	d1d8      	bne.n	8012db8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012e06:	b002      	add	sp, #8
 8012e08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012e0c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012e0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012e0e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012e12:	460d      	mov	r5, r1
 8012e14:	4616      	mov	r6, r2
 8012e16:	b323      	cbz	r3, 8012e62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012e18:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012e1a:	b314      	cbz	r4, 8012e62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012e1c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012e20:	b1eb      	cbz	r3, 8012e5e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012e22:	6828      	ldr	r0, [r5, #0]
 8012e24:	6869      	ldr	r1, [r5, #4]
 8012e26:	466b      	mov	r3, sp
 8012e28:	c303      	stmia	r3!, {r0, r1}
 8012e2a:	4668      	mov	r0, sp
 8012e2c:	1d21      	adds	r1, r4, #4
 8012e2e:	f7ff ff15 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 8012e32:	4668      	mov	r0, sp
 8012e34:	f7ff ff55 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012e38:	b988      	cbnz	r0, 8012e5e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012e3a:	f8bd 3000 	ldrh.w	r3, [sp]
 8012e3e:	88a2      	ldrh	r2, [r4, #4]
 8012e40:	1a9b      	subs	r3, r3, r2
 8012e42:	f8ad 3000 	strh.w	r3, [sp]
 8012e46:	88e2      	ldrh	r2, [r4, #6]
 8012e48:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012e4c:	1a9b      	subs	r3, r3, r2
 8012e4e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012e52:	6823      	ldr	r3, [r4, #0]
 8012e54:	4632      	mov	r2, r6
 8012e56:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012e58:	4669      	mov	r1, sp
 8012e5a:	4620      	mov	r0, r4
 8012e5c:	4798      	blx	r3
 8012e5e:	69a4      	ldr	r4, [r4, #24]
 8012e60:	e7db      	b.n	8012e1a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012e62:	b002      	add	sp, #8
 8012e64:	bd70      	pop	{r4, r5, r6, pc}

08012e66 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8012e66:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012e68:	4770      	bx	lr
	...

08012e6c <_ZN8touchgfx14SwipeContainerD1Ev>:
 8012e6c:	4b05      	ldr	r3, [pc, #20]	; (8012e84 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 8012e6e:	b510      	push	{r4, lr}
 8012e70:	6003      	str	r3, [r0, #0]
 8012e72:	4604      	mov	r4, r0
 8012e74:	f005 fe44 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 8012e78:	4621      	mov	r1, r4
 8012e7a:	3004      	adds	r0, #4
 8012e7c:	f005 fe8d 	bl	8018b9a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012e80:	4620      	mov	r0, r4
 8012e82:	bd10      	pop	{r4, pc}
 8012e84:	08031820 	.word	0x08031820

08012e88 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8012e88:	b510      	push	{r4, lr}
 8012e8a:	4604      	mov	r4, r0
 8012e8c:	f7ff ffee 	bl	8012e6c <_ZN8touchgfx14SwipeContainerD1Ev>
 8012e90:	4620      	mov	r0, r4
 8012e92:	21f4      	movs	r1, #244	; 0xf4
 8012e94:	f019 ff91 	bl	802cdba <_ZdlPvj>
 8012e98:	4620      	mov	r0, r4
 8012e9a:	bd10      	pop	{r4, pc}

08012e9c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 8012e9c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012ea0:	2b04      	cmp	r3, #4
 8012ea2:	d117      	bne.n	8012ed4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012ea4:	790b      	ldrb	r3, [r1, #4]
 8012ea6:	2b01      	cmp	r3, #1
 8012ea8:	d114      	bne.n	8012ed4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012eaa:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8012eae:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8012eb0:	8643      	strh	r3, [r0, #50]	; 0x32
 8012eb2:	2b00      	cmp	r3, #0
 8012eb4:	8682      	strh	r2, [r0, #52]	; 0x34
 8012eb6:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012eba:	da0e      	bge.n	8012eda <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 8012ebc:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012ec0:	3a01      	subs	r2, #1
 8012ec2:	4291      	cmp	r1, r2
 8012ec4:	d007      	beq.n	8012ed6 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012ec6:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012ec8:	4252      	negs	r2, r2
 8012eca:	4293      	cmp	r3, r2
 8012ecc:	dc03      	bgt.n	8012ed6 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012ece:	2302      	movs	r3, #2
 8012ed0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012ed4:	4770      	bx	lr
 8012ed6:	2300      	movs	r3, #0
 8012ed8:	e7fa      	b.n	8012ed0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012eda:	d0fb      	beq.n	8012ed4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012edc:	b111      	cbz	r1, 8012ee4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 8012ede:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012ee0:	4293      	cmp	r3, r2
 8012ee2:	da01      	bge.n	8012ee8 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8012ee4:	2301      	movs	r3, #1
 8012ee6:	e7f3      	b.n	8012ed0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012ee8:	2303      	movs	r3, #3
 8012eea:	e7f1      	b.n	8012ed0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

08012eec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 8012eec:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012ef0:	2b04      	cmp	r3, #4
 8012ef2:	d113      	bne.n	8012f1c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012ef4:	790b      	ldrb	r3, [r1, #4]
 8012ef6:	b98b      	cbnz	r3, 8012f1c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012ef8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012efa:	8643      	strh	r3, [r0, #50]	; 0x32
 8012efc:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8012efe:	8683      	strh	r3, [r0, #52]	; 0x34
 8012f00:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012f04:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8012f08:	2b00      	cmp	r3, #0
 8012f0a:	da08      	bge.n	8012f1e <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 8012f0c:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8012f10:	3b01      	subs	r3, #1
 8012f12:	429a      	cmp	r2, r3
 8012f14:	da02      	bge.n	8012f1c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012f16:	2302      	movs	r3, #2
 8012f18:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012f1c:	4770      	bx	lr
 8012f1e:	d0fd      	beq.n	8012f1c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012f20:	2a00      	cmp	r2, #0
 8012f22:	d0fb      	beq.n	8012f1c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012f24:	2303      	movs	r3, #3
 8012f26:	e7f7      	b.n	8012f18 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08012f28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8012f28:	b538      	push	{r3, r4, r5, lr}
 8012f2a:	2226      	movs	r2, #38	; 0x26
 8012f2c:	4604      	mov	r4, r0
 8012f2e:	460d      	mov	r5, r1
 8012f30:	2100      	movs	r1, #0
 8012f32:	f01b f82e 	bl	802df92 <memset>
 8012f36:	4620      	mov	r0, r4
 8012f38:	f7ff fc58 	bl	80127ec <_ZN8touchgfx8DrawableC1Ev>
 8012f3c:	4b06      	ldr	r3, [pc, #24]	; (8012f58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8012f3e:	6023      	str	r3, [r4, #0]
 8012f40:	882b      	ldrh	r3, [r5, #0]
 8012f42:	84e3      	strh	r3, [r4, #38]	; 0x26
 8012f44:	23ff      	movs	r3, #255	; 0xff
 8012f46:	4620      	mov	r0, r4
 8012f48:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8012f4c:	4629      	mov	r1, r5
 8012f4e:	f003 f8d8 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012f52:	4620      	mov	r0, r4
 8012f54:	bd38      	pop	{r3, r4, r5, pc}
 8012f56:	bf00      	nop
 8012f58:	08031ec4 	.word	0x08031ec4

08012f5c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8012f5c:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012f5e:	4770      	bx	lr

08012f60 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8012f60:	b508      	push	{r3, lr}
 8012f62:	3068      	adds	r0, #104	; 0x68
 8012f64:	f7f0 fc2a 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8012f68:	bd08      	pop	{r3, pc}

08012f6a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8012f6a:	b508      	push	{r3, lr}
 8012f6c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8012f6e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012f72:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012f76:	fb03 2111 	mls	r1, r3, r1, r2
 8012f7a:	b209      	sxth	r1, r1
 8012f7c:	2200      	movs	r2, #0
 8012f7e:	3038      	adds	r0, #56	; 0x38
 8012f80:	f7f0 f9a7 	bl	80032d2 <_ZN8touchgfx8Drawable6moveToEss>
 8012f84:	bd08      	pop	{r3, pc}

08012f86 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8012f86:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012f8a:	2b04      	cmp	r3, #4
 8012f8c:	d119      	bne.n	8012fc2 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8012f8e:	88ca      	ldrh	r2, [r1, #6]
 8012f90:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012f92:	1a9b      	subs	r3, r3, r2
 8012f94:	894a      	ldrh	r2, [r1, #10]
 8012f96:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012f9a:	4413      	add	r3, r2
 8012f9c:	b21b      	sxth	r3, r3
 8012f9e:	8603      	strh	r3, [r0, #48]	; 0x30
 8012fa0:	b921      	cbnz	r1, 8012fac <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012fa2:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012fa4:	4293      	cmp	r3, r2
 8012fa6:	dd01      	ble.n	8012fac <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012fa8:	8602      	strh	r2, [r0, #48]	; 0x30
 8012faa:	e008      	b.n	8012fbe <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012fac:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012fb0:	3a01      	subs	r2, #1
 8012fb2:	4291      	cmp	r1, r2
 8012fb4:	d103      	bne.n	8012fbe <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012fb6:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012fb8:	4252      	negs	r2, r2
 8012fba:	4293      	cmp	r3, r2
 8012fbc:	dbf4      	blt.n	8012fa8 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8012fbe:	f7ff bfd4 	b.w	8012f6a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012fc2:	4770      	bx	lr

08012fc4 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8012fc4:	b538      	push	{r3, r4, r5, lr}
 8012fc6:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012fca:	2d0e      	cmp	r5, #14
 8012fcc:	4604      	mov	r4, r0
 8012fce:	d813      	bhi.n	8012ff8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8012fd0:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8012fd2:	4252      	negs	r2, r2
 8012fd4:	230e      	movs	r3, #14
 8012fd6:	b212      	sxth	r2, r2
 8012fd8:	2100      	movs	r1, #0
 8012fda:	4628      	mov	r0, r5
 8012fdc:	f007 fbc2 	bl	801a764 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012fe0:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012fe2:	4418      	add	r0, r3
 8012fe4:	8620      	strh	r0, [r4, #48]	; 0x30
 8012fe6:	4620      	mov	r0, r4
 8012fe8:	f7ff ffbf 	bl	8012f6a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012fec:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012ff0:	3301      	adds	r3, #1
 8012ff2:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012ff6:	bd38      	pop	{r3, r4, r5, pc}
 8012ff8:	2304      	movs	r3, #4
 8012ffa:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012ffe:	2300      	movs	r3, #0
 8013000:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8013004:	8603      	strh	r3, [r0, #48]	; 0x30
 8013006:	e7ef      	b.n	8012fe8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08013008 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8013008:	b538      	push	{r3, r4, r5, lr}
 801300a:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801300e:	2d0e      	cmp	r5, #14
 8013010:	4604      	mov	r4, r0
 8013012:	d812      	bhi.n	801303a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8013014:	230e      	movs	r3, #14
 8013016:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 801301a:	2100      	movs	r1, #0
 801301c:	4628      	mov	r0, r5
 801301e:	f007 fba1 	bl	801a764 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8013022:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013024:	1a18      	subs	r0, r3, r0
 8013026:	8620      	strh	r0, [r4, #48]	; 0x30
 8013028:	4620      	mov	r0, r4
 801302a:	f7ff ff9e 	bl	8012f6a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801302e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8013032:	3301      	adds	r3, #1
 8013034:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013038:	bd38      	pop	{r3, r4, r5, pc}
 801303a:	2304      	movs	r3, #4
 801303c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8013040:	2300      	movs	r3, #0
 8013042:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8013046:	8603      	strh	r3, [r0, #48]	; 0x30
 8013048:	e7ef      	b.n	801302a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

0801304c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 801304c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8013050:	4604      	mov	r4, r0
 8013052:	4626      	mov	r6, r4
 8013054:	af02      	add	r7, sp, #8
 8013056:	f7ff fbc9 	bl	80127ec <_ZN8touchgfx8DrawableC1Ev>
 801305a:	2500      	movs	r5, #0
 801305c:	4b18      	ldr	r3, [pc, #96]	; (80130c0 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 801305e:	62a5      	str	r5, [r4, #40]	; 0x28
 8013060:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8013064:	f846 3b2c 	str.w	r3, [r6], #44
 8013068:	f827 9d04 	strh.w	r9, [r7, #-4]!
 801306c:	4630      	mov	r0, r6
 801306e:	4639      	mov	r1, r7
 8013070:	f7ff ff5a 	bl	8012f28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8013074:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8013078:	4b12      	ldr	r3, [pc, #72]	; (80130c4 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 801307a:	62e3      	str	r3, [r4, #44]	; 0x2c
 801307c:	4639      	mov	r1, r7
 801307e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8013082:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8013086:	4640      	mov	r0, r8
 8013088:	f8ad 9004 	strh.w	r9, [sp, #4]
 801308c:	f7ff ff4c 	bl	8012f28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8013090:	462a      	mov	r2, r5
 8013092:	4629      	mov	r1, r5
 8013094:	4630      	mov	r0, r6
 8013096:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 801309a:	f7f0 fb8f 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 801309e:	462a      	mov	r2, r5
 80130a0:	4629      	mov	r1, r5
 80130a2:	4640      	mov	r0, r8
 80130a4:	f7f0 fb8a 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80130a8:	4631      	mov	r1, r6
 80130aa:	4620      	mov	r0, r4
 80130ac:	f7ff fc50 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80130b0:	4620      	mov	r0, r4
 80130b2:	4641      	mov	r1, r8
 80130b4:	f7ff fc4c 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80130b8:	4620      	mov	r0, r4
 80130ba:	b003      	add	sp, #12
 80130bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80130c0:	0802f734 	.word	0x0802f734
 80130c4:	08031ce0 	.word	0x08031ce0

080130c8 <_ZN8touchgfx14SwipeContainerC1Ev>:
 80130c8:	b570      	push	{r4, r5, r6, lr}
 80130ca:	4604      	mov	r4, r0
 80130cc:	f7ff fb8e 	bl	80127ec <_ZN8touchgfx8DrawableC1Ev>
 80130d0:	4b1a      	ldr	r3, [pc, #104]	; (801313c <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 80130d2:	6023      	str	r3, [r4, #0]
 80130d4:	2304      	movs	r3, #4
 80130d6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80130da:	2350      	movs	r3, #80	; 0x50
 80130dc:	2500      	movs	r5, #0
 80130de:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80130e0:	f104 0638 	add.w	r6, r4, #56	; 0x38
 80130e4:	231e      	movs	r3, #30
 80130e6:	62a5      	str	r5, [r4, #40]	; 0x28
 80130e8:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 80130ec:	8625      	strh	r5, [r4, #48]	; 0x30
 80130ee:	8665      	strh	r5, [r4, #50]	; 0x32
 80130f0:	86a5      	strh	r5, [r4, #52]	; 0x34
 80130f2:	86e3      	strh	r3, [r4, #54]	; 0x36
 80130f4:	4630      	mov	r0, r6
 80130f6:	f7ff fb79 	bl	80127ec <_ZN8touchgfx8DrawableC1Ev>
 80130fa:	4b11      	ldr	r3, [pc, #68]	; (8013140 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 80130fc:	6625      	str	r5, [r4, #96]	; 0x60
 80130fe:	63a3      	str	r3, [r4, #56]	; 0x38
 8013100:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8013104:	2302      	movs	r3, #2
 8013106:	f104 0568 	add.w	r5, r4, #104	; 0x68
 801310a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 801310e:	4628      	mov	r0, r5
 8013110:	f7ff ff9c 	bl	801304c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8013114:	f005 fcf4 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 8013118:	4621      	mov	r1, r4
 801311a:	3004      	adds	r0, #4
 801311c:	f005 fde6 	bl	8018cec <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8013120:	2301      	movs	r3, #1
 8013122:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8013126:	4631      	mov	r1, r6
 8013128:	4620      	mov	r0, r4
 801312a:	f7ff fc11 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801312e:	4620      	mov	r0, r4
 8013130:	4629      	mov	r1, r5
 8013132:	f7ff fc0d 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013136:	4620      	mov	r0, r4
 8013138:	bd70      	pop	{r4, r5, r6, pc}
 801313a:	bf00      	nop
 801313c:	08031820 	.word	0x08031820
 8013140:	080318e4 	.word	0x080318e4

08013144 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8013144:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013146:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 801314a:	428b      	cmp	r3, r1
 801314c:	4604      	mov	r4, r0
 801314e:	460d      	mov	r5, r1
 8013150:	d915      	bls.n	801317e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8013152:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8013156:	428b      	cmp	r3, r1
 8013158:	d011      	beq.n	801317e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 801315a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 801315e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8013162:	a802      	add	r0, sp, #8
 8013164:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8013168:	f009 f91a 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801316c:	fb15 f100 	smulbb	r1, r5, r0
 8013170:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8013174:	b209      	sxth	r1, r1
 8013176:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801317a:	f7f0 f8aa 	bl	80032d2 <_ZN8touchgfx8Drawable6moveToEss>
 801317e:	b003      	add	sp, #12
 8013180:	bd30      	pop	{r4, r5, pc}

08013182 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8013182:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013184:	4604      	mov	r4, r0
 8013186:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801318a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 801318e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8013192:	4293      	cmp	r3, r2
 8013194:	460d      	mov	r5, r1
 8013196:	d01e      	beq.n	80131d6 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8013198:	a802      	add	r0, sp, #8
 801319a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 801319e:	f009 f8ff 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80131a2:	6823      	ldr	r3, [r4, #0]
 80131a4:	fb15 f000 	smulbb	r0, r5, r0
 80131a8:	86a0      	strh	r0, [r4, #52]	; 0x34
 80131aa:	695b      	ldr	r3, [r3, #20]
 80131ac:	4620      	mov	r0, r4
 80131ae:	4798      	blx	r3
 80131b0:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80131b4:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80131b8:	4620      	mov	r0, r4
 80131ba:	f7ff fb2f 	bl	801281c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80131be:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 80131c2:	42a9      	cmp	r1, r5
 80131c4:	4620      	mov	r0, r4
 80131c6:	bf28      	it	cs
 80131c8:	4629      	movcs	r1, r5
 80131ca:	f7ff ffbb 	bl	8013144 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 80131ce:	6823      	ldr	r3, [r4, #0]
 80131d0:	4620      	mov	r0, r4
 80131d2:	695b      	ldr	r3, [r3, #20]
 80131d4:	4798      	blx	r3
 80131d6:	b003      	add	sp, #12
 80131d8:	bd30      	pop	{r4, r5, pc}

080131da <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 80131da:	b538      	push	{r3, r4, r5, lr}
 80131dc:	4604      	mov	r4, r0
 80131de:	460d      	mov	r5, r1
 80131e0:	305c      	adds	r0, #92	; 0x5c
 80131e2:	4611      	mov	r1, r2
 80131e4:	f002 ff8d 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80131e8:	4629      	mov	r1, r5
 80131ea:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80131ee:	f002 fa53 	bl	8015698 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 80131f2:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 80131f6:	b121      	cbz	r1, 8013202 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 80131f8:	4620      	mov	r0, r4
 80131fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80131fe:	f7ff bfc0 	b.w	8013182 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8013202:	bd38      	pop	{r3, r4, r5, pc}

08013204 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8013204:	3068      	adds	r0, #104	; 0x68
 8013206:	f7ff bfe8 	b.w	80131da <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

0801320a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 801320a:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 801320e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8013212:	3101      	adds	r1, #1
 8013214:	fb91 f3f2 	sdiv	r3, r1, r2
 8013218:	fb02 1113 	mls	r1, r2, r3, r1
 801321c:	b2c9      	uxtb	r1, r1
 801321e:	f7ff bf91 	b.w	8013144 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08013222 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 8013222:	b510      	push	{r4, lr}
 8013224:	4604      	mov	r4, r0
 8013226:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 801322a:	280a      	cmp	r0, #10
 801322c:	d813      	bhi.n	8013256 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 801322e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013230:	8922      	ldrh	r2, [r4, #8]
 8013232:	441a      	add	r2, r3
 8013234:	b212      	sxth	r2, r2
 8013236:	230a      	movs	r3, #10
 8013238:	2100      	movs	r1, #0
 801323a:	f007 fad1 	bl	801a7e0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 801323e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013240:	1a18      	subs	r0, r3, r0
 8013242:	8620      	strh	r0, [r4, #48]	; 0x30
 8013244:	4620      	mov	r0, r4
 8013246:	f7ff fe90 	bl	8012f6a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801324a:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 801324e:	3301      	adds	r3, #1
 8013250:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013254:	bd10      	pop	{r4, pc}
 8013256:	2304      	movs	r3, #4
 8013258:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801325c:	2300      	movs	r3, #0
 801325e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013262:	8623      	strh	r3, [r4, #48]	; 0x30
 8013264:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8013268:	f7ff ffcf 	bl	801320a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 801326c:	e7ea      	b.n	8013244 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

0801326e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 801326e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8013272:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8013276:	4411      	add	r1, r2
 8013278:	3901      	subs	r1, #1
 801327a:	fb91 f3f2 	sdiv	r3, r1, r2
 801327e:	fb02 1113 	mls	r1, r2, r3, r1
 8013282:	b2c9      	uxtb	r1, r1
 8013284:	f7ff bf5e 	b.w	8013144 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08013288 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8013288:	b510      	push	{r4, lr}
 801328a:	4604      	mov	r4, r0
 801328c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8013290:	280a      	cmp	r0, #10
 8013292:	d813      	bhi.n	80132bc <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8013294:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013296:	8922      	ldrh	r2, [r4, #8]
 8013298:	1ad2      	subs	r2, r2, r3
 801329a:	b212      	sxth	r2, r2
 801329c:	230a      	movs	r3, #10
 801329e:	2100      	movs	r1, #0
 80132a0:	f007 fa9e 	bl	801a7e0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80132a4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80132a6:	4418      	add	r0, r3
 80132a8:	8620      	strh	r0, [r4, #48]	; 0x30
 80132aa:	4620      	mov	r0, r4
 80132ac:	f7ff fe5d 	bl	8012f6a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80132b0:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80132b4:	3301      	adds	r3, #1
 80132b6:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80132ba:	bd10      	pop	{r4, pc}
 80132bc:	2304      	movs	r3, #4
 80132be:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80132c2:	2300      	movs	r3, #0
 80132c4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80132c8:	8623      	strh	r3, [r4, #48]	; 0x30
 80132ca:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80132ce:	f7ff ffce 	bl	801326e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 80132d2:	e7ea      	b.n	80132aa <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

080132d4 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 80132d4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80132d8:	b90b      	cbnz	r3, 80132de <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 80132da:	f7ff be73 	b.w	8012fc4 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 80132de:	2b01      	cmp	r3, #1
 80132e0:	d101      	bne.n	80132e6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 80132e2:	f7ff be91 	b.w	8013008 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 80132e6:	2b02      	cmp	r3, #2
 80132e8:	d101      	bne.n	80132ee <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 80132ea:	f7ff bf9a 	b.w	8013222 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 80132ee:	2b03      	cmp	r3, #3
 80132f0:	d101      	bne.n	80132f6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 80132f2:	f7ff bfc9 	b.w	8013288 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 80132f6:	4770      	bx	lr

080132f8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 80132f8:	b510      	push	{r4, lr}
 80132fa:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80132fe:	428b      	cmp	r3, r1
 8013300:	4604      	mov	r4, r0
 8013302:	d907      	bls.n	8013314 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8013304:	3068      	adds	r0, #104	; 0x68
 8013306:	f7ff ff1d 	bl	8013144 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801330a:	4620      	mov	r0, r4
 801330c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013310:	f7ff be2b 	b.w	8012f6a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8013314:	bd10      	pop	{r4, pc}

08013316 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 8013316:	b538      	push	{r3, r4, r5, lr}
 8013318:	4604      	mov	r4, r0
 801331a:	3038      	adds	r0, #56	; 0x38
 801331c:	460d      	mov	r5, r1
 801331e:	f000 f963 	bl	80135e8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8013322:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8013326:	3101      	adds	r1, #1
 8013328:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801332c:	b2c9      	uxtb	r1, r1
 801332e:	f7ff ff28 	bl	8013182 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8013332:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8013336:	4620      	mov	r0, r4
 8013338:	f7ff ffde 	bl	80132f8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801333c:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8013340:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8013344:	4620      	mov	r0, r4
 8013346:	f7ff fa69 	bl	801281c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801334a:	bd38      	pop	{r3, r4, r5, pc}

0801334c <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 801334c:	b538      	push	{r3, r4, r5, lr}
 801334e:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8013352:	4604      	mov	r4, r0
 8013354:	b1e3      	cbz	r3, 8013390 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8013356:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8013358:	b1d3      	cbz	r3, 8013390 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 801335a:	428b      	cmp	r3, r1
 801335c:	d125      	bne.n	80133aa <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 801335e:	4619      	mov	r1, r3
 8013360:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8013364:	f000 f9c0 	bl	80136e8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8013368:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801336c:	3901      	subs	r1, #1
 801336e:	b2c9      	uxtb	r1, r1
 8013370:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8013374:	f7ff ff05 	bl	8013182 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8013378:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801337c:	b94d      	cbnz	r5, 8013392 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801337e:	6823      	ldr	r3, [r4, #0]
 8013380:	4620      	mov	r0, r4
 8013382:	695b      	ldr	r3, [r3, #20]
 8013384:	4798      	blx	r3
 8013386:	462a      	mov	r2, r5
 8013388:	4629      	mov	r1, r5
 801338a:	4620      	mov	r0, r4
 801338c:	f7ff fa46 	bl	801281c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013390:	bd38      	pop	{r3, r4, r5, pc}
 8013392:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8013396:	3d01      	subs	r5, #1
 8013398:	42a9      	cmp	r1, r5
 801339a:	bfa8      	it	ge
 801339c:	4629      	movge	r1, r5
 801339e:	4620      	mov	r0, r4
 80133a0:	b2c9      	uxtb	r1, r1
 80133a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80133a6:	f7ff bfa7 	b.w	80132f8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80133aa:	699b      	ldr	r3, [r3, #24]
 80133ac:	e7d4      	b.n	8013358 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

080133ae <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 80133ae:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80133b2:	4770      	bx	lr

080133b4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 80133b4:	b538      	push	{r3, r4, r5, lr}
 80133b6:	7882      	ldrb	r2, [r0, #2]
 80133b8:	6843      	ldr	r3, [r0, #4]
 80133ba:	4604      	mov	r4, r0
 80133bc:	460d      	mov	r5, r1
 80133be:	b98a      	cbnz	r2, 80133e4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 80133c0:	4299      	cmp	r1, r3
 80133c2:	d101      	bne.n	80133c8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80133c4:	2301      	movs	r3, #1
 80133c6:	7083      	strb	r3, [r0, #2]
 80133c8:	6863      	ldr	r3, [r4, #4]
 80133ca:	42ab      	cmp	r3, r5
 80133cc:	d009      	beq.n	80133e2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80133ce:	7a23      	ldrb	r3, [r4, #8]
 80133d0:	2b01      	cmp	r3, #1
 80133d2:	d11b      	bne.n	801340c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 80133d4:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 80133d8:	f9b4 2000 	ldrsh.w	r2, [r4]
 80133dc:	429a      	cmp	r2, r3
 80133de:	bfb8      	it	lt
 80133e0:	8023      	strhlt	r3, [r4, #0]
 80133e2:	bd38      	pop	{r3, r4, r5, pc}
 80133e4:	7a02      	ldrb	r2, [r0, #8]
 80133e6:	2a01      	cmp	r2, #1
 80133e8:	d108      	bne.n	80133fc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 80133ea:	895b      	ldrh	r3, [r3, #10]
 80133ec:	88c9      	ldrh	r1, [r1, #6]
 80133ee:	1ac9      	subs	r1, r1, r3
 80133f0:	682b      	ldr	r3, [r5, #0]
 80133f2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80133f4:	b209      	sxth	r1, r1
 80133f6:	4628      	mov	r0, r5
 80133f8:	4798      	blx	r3
 80133fa:	e7e5      	b.n	80133c8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80133fc:	2a02      	cmp	r2, #2
 80133fe:	d1e3      	bne.n	80133c8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013400:	891b      	ldrh	r3, [r3, #8]
 8013402:	8889      	ldrh	r1, [r1, #4]
 8013404:	1ac9      	subs	r1, r1, r3
 8013406:	682b      	ldr	r3, [r5, #0]
 8013408:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801340a:	e7f3      	b.n	80133f4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 801340c:	2b02      	cmp	r3, #2
 801340e:	d1e8      	bne.n	80133e2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8013410:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013414:	e7e0      	b.n	80133d8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

08013416 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 8013416:	4770      	bx	lr

08013418 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 8013418:	4770      	bx	lr

0801341a <_ZN8touchgfx10ListLayoutD1Ev>:
 801341a:	4770      	bx	lr

0801341c <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 801341c:	b430      	push	{r4, r5}
 801341e:	68c5      	ldr	r5, [r0, #12]
 8013420:	6844      	ldr	r4, [r0, #4]
 8013422:	106a      	asrs	r2, r5, #1
 8013424:	4603      	mov	r3, r0
 8013426:	07ed      	lsls	r5, r5, #31
 8013428:	eb04 0002 	add.w	r0, r4, r2
 801342c:	689b      	ldr	r3, [r3, #8]
 801342e:	bf48      	it	mi
 8013430:	58a2      	ldrmi	r2, [r4, r2]
 8013432:	bc30      	pop	{r4, r5}
 8013434:	bf48      	it	mi
 8013436:	58d3      	ldrmi	r3, [r2, r3]
 8013438:	4718      	bx	r3

0801343a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 801343a:	6843      	ldr	r3, [r0, #4]
 801343c:	b12b      	cbz	r3, 801344a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 801343e:	6883      	ldr	r3, [r0, #8]
 8013440:	b92b      	cbnz	r3, 801344e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8013442:	68c0      	ldr	r0, [r0, #12]
 8013444:	f000 0001 	and.w	r0, r0, #1
 8013448:	4770      	bx	lr
 801344a:	4618      	mov	r0, r3
 801344c:	4770      	bx	lr
 801344e:	2001      	movs	r0, #1
 8013450:	4770      	bx	lr

08013452 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8013452:	b430      	push	{r4, r5}
 8013454:	68c5      	ldr	r5, [r0, #12]
 8013456:	6844      	ldr	r4, [r0, #4]
 8013458:	106a      	asrs	r2, r5, #1
 801345a:	4603      	mov	r3, r0
 801345c:	07ed      	lsls	r5, r5, #31
 801345e:	eb04 0002 	add.w	r0, r4, r2
 8013462:	689b      	ldr	r3, [r3, #8]
 8013464:	bf48      	it	mi
 8013466:	58a2      	ldrmi	r2, [r4, r2]
 8013468:	bc30      	pop	{r4, r5}
 801346a:	bf48      	it	mi
 801346c:	58d3      	ldrmi	r3, [r2, r3]
 801346e:	4718      	bx	r3

08013470 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8013470:	6843      	ldr	r3, [r0, #4]
 8013472:	b12b      	cbz	r3, 8013480 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8013474:	6883      	ldr	r3, [r0, #8]
 8013476:	b92b      	cbnz	r3, 8013484 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8013478:	68c0      	ldr	r0, [r0, #12]
 801347a:	f000 0001 	and.w	r0, r0, #1
 801347e:	4770      	bx	lr
 8013480:	4618      	mov	r0, r3
 8013482:	4770      	bx	lr
 8013484:	2001      	movs	r0, #1
 8013486:	4770      	bx	lr

08013488 <_ZN8touchgfx10ListLayoutD0Ev>:
 8013488:	b510      	push	{r4, lr}
 801348a:	2130      	movs	r1, #48	; 0x30
 801348c:	4604      	mov	r4, r0
 801348e:	f019 fc94 	bl	802cdba <_ZdlPvj>
 8013492:	4620      	mov	r0, r4
 8013494:	bd10      	pop	{r4, pc}

08013496 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8013496:	b510      	push	{r4, lr}
 8013498:	2110      	movs	r1, #16
 801349a:	4604      	mov	r4, r0
 801349c:	f019 fc8d 	bl	802cdba <_ZdlPvj>
 80134a0:	4620      	mov	r0, r4
 80134a2:	bd10      	pop	{r4, pc}

080134a4 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 80134a4:	b510      	push	{r4, lr}
 80134a6:	2110      	movs	r1, #16
 80134a8:	4604      	mov	r4, r0
 80134aa:	f019 fc86 	bl	802cdba <_ZdlPvj>
 80134ae:	4620      	mov	r0, r4
 80134b0:	bd10      	pop	{r4, pc}

080134b2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 80134b2:	4603      	mov	r3, r0
 80134b4:	4608      	mov	r0, r1
 80134b6:	789a      	ldrb	r2, [r3, #2]
 80134b8:	b992      	cbnz	r2, 80134e0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 80134ba:	685a      	ldr	r2, [r3, #4]
 80134bc:	428a      	cmp	r2, r1
 80134be:	d102      	bne.n	80134c6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 80134c0:	2201      	movs	r2, #1
 80134c2:	709a      	strb	r2, [r3, #2]
 80134c4:	4770      	bx	lr
 80134c6:	7a1a      	ldrb	r2, [r3, #8]
 80134c8:	2a01      	cmp	r2, #1
 80134ca:	d104      	bne.n	80134d6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 80134cc:	88ca      	ldrh	r2, [r1, #6]
 80134ce:	8949      	ldrh	r1, [r1, #10]
 80134d0:	440a      	add	r2, r1
 80134d2:	801a      	strh	r2, [r3, #0]
 80134d4:	4770      	bx	lr
 80134d6:	2a02      	cmp	r2, #2
 80134d8:	d116      	bne.n	8013508 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80134da:	888a      	ldrh	r2, [r1, #4]
 80134dc:	8909      	ldrh	r1, [r1, #8]
 80134de:	e7f7      	b.n	80134d0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 80134e0:	7a1a      	ldrb	r2, [r3, #8]
 80134e2:	2a01      	cmp	r2, #1
 80134e4:	d107      	bne.n	80134f6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 80134e6:	685b      	ldr	r3, [r3, #4]
 80134e8:	8959      	ldrh	r1, [r3, #10]
 80134ea:	88c3      	ldrh	r3, [r0, #6]
 80134ec:	4419      	add	r1, r3
 80134ee:	6803      	ldr	r3, [r0, #0]
 80134f0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80134f2:	b209      	sxth	r1, r1
 80134f4:	4718      	bx	r3
 80134f6:	2a02      	cmp	r2, #2
 80134f8:	d106      	bne.n	8013508 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80134fa:	685b      	ldr	r3, [r3, #4]
 80134fc:	8919      	ldrh	r1, [r3, #8]
 80134fe:	8883      	ldrh	r3, [r0, #4]
 8013500:	4419      	add	r1, r3
 8013502:	6803      	ldr	r3, [r0, #0]
 8013504:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013506:	e7f4      	b.n	80134f2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8013508:	4770      	bx	lr

0801350a <_ZN8touchgfx10ListLayout9removeAllEv>:
 801350a:	2200      	movs	r2, #0
 801350c:	b510      	push	{r4, lr}
 801350e:	4611      	mov	r1, r2
 8013510:	4604      	mov	r4, r0
 8013512:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8013514:	f7ff f982 	bl	801281c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013518:	4620      	mov	r0, r4
 801351a:	f7ff fa26 	bl	801296a <_ZN8touchgfx9Container9removeAllEv>
 801351e:	6960      	ldr	r0, [r4, #20]
 8013520:	b120      	cbz	r0, 801352c <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8013522:	6803      	ldr	r3, [r0, #0]
 8013524:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013528:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801352a:	4718      	bx	r3
 801352c:	bd10      	pop	{r4, pc}
	...

08013530 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8013530:	b530      	push	{r4, r5, lr}
 8013532:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013536:	428b      	cmp	r3, r1
 8013538:	b085      	sub	sp, #20
 801353a:	4604      	mov	r4, r0
 801353c:	d017      	beq.n	801356e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 801353e:	2500      	movs	r5, #0
 8013540:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8013544:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8013546:	462a      	mov	r2, r5
 8013548:	4629      	mov	r1, r5
 801354a:	f7ff f967 	bl	801281c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801354e:	4b09      	ldr	r3, [pc, #36]	; (8013574 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8013550:	e9cd 3400 	strd	r3, r4, [sp]
 8013554:	4b08      	ldr	r3, [pc, #32]	; (8013578 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8013556:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801355a:	6823      	ldr	r3, [r4, #0]
 801355c:	4620      	mov	r0, r4
 801355e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013560:	4669      	mov	r1, sp
 8013562:	4798      	blx	r3
 8013564:	6960      	ldr	r0, [r4, #20]
 8013566:	b110      	cbz	r0, 801356e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8013568:	6803      	ldr	r3, [r0, #0]
 801356a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801356c:	4798      	blx	r3
 801356e:	b005      	add	sp, #20
 8013570:	bd30      	pop	{r4, r5, pc}
 8013572:	bf00      	nop
 8013574:	080318b4 	.word	0x080318b4
 8013578:	080135e1 	.word	0x080135e1

0801357c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801357c:	b538      	push	{r3, r4, r5, lr}
 801357e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013582:	2b01      	cmp	r3, #1
 8013584:	460d      	mov	r5, r1
 8013586:	4604      	mov	r4, r0
 8013588:	4611      	mov	r1, r2
 801358a:	d002      	beq.n	8013592 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801358c:	2b02      	cmp	r3, #2
 801358e:	d015      	beq.n	80135bc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8013590:	bd38      	pop	{r3, r4, r5, pc}
 8013592:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013596:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801359a:	429a      	cmp	r2, r3
 801359c:	bfb8      	it	lt
 801359e:	8103      	strhlt	r3, [r0, #8]
 80135a0:	896a      	ldrh	r2, [r5, #10]
 80135a2:	8943      	ldrh	r3, [r0, #10]
 80135a4:	4413      	add	r3, r2
 80135a6:	8143      	strh	r3, [r0, #10]
 80135a8:	460a      	mov	r2, r1
 80135aa:	4628      	mov	r0, r5
 80135ac:	2100      	movs	r1, #0
 80135ae:	f7f0 f905 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80135b2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80135b4:	896a      	ldrh	r2, [r5, #10]
 80135b6:	4413      	add	r3, r2
 80135b8:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80135ba:	e7e9      	b.n	8013590 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 80135bc:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80135c0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80135c4:	429a      	cmp	r2, r3
 80135c6:	bfb8      	it	lt
 80135c8:	8143      	strhlt	r3, [r0, #10]
 80135ca:	892a      	ldrh	r2, [r5, #8]
 80135cc:	8903      	ldrh	r3, [r0, #8]
 80135ce:	4413      	add	r3, r2
 80135d0:	8103      	strh	r3, [r0, #8]
 80135d2:	2200      	movs	r2, #0
 80135d4:	4628      	mov	r0, r5
 80135d6:	f7f0 f8f1 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 80135da:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80135dc:	892a      	ldrh	r2, [r5, #8]
 80135de:	e7ea      	b.n	80135b6 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

080135e0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 80135e0:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 80135e4:	f7ff bfca 	b.w	801357c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

080135e8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 80135e8:	b570      	push	{r4, r5, r6, lr}
 80135ea:	4604      	mov	r4, r0
 80135ec:	460d      	mov	r5, r1
 80135ee:	f7ff fff7 	bl	80135e0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 80135f2:	4620      	mov	r0, r4
 80135f4:	4629      	mov	r1, r5
 80135f6:	f7ff f9ab 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80135fa:	6960      	ldr	r0, [r4, #20]
 80135fc:	b120      	cbz	r0, 8013608 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 80135fe:	6803      	ldr	r3, [r0, #0]
 8013600:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013604:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013606:	4718      	bx	r3
 8013608:	bd70      	pop	{r4, r5, r6, pc}
	...

0801360c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 801360c:	b530      	push	{r4, r5, lr}
 801360e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8013610:	b089      	sub	sp, #36	; 0x24
 8013612:	4604      	mov	r4, r0
 8013614:	4615      	mov	r5, r2
 8013616:	b92b      	cbnz	r3, 8013624 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8013618:	6803      	ldr	r3, [r0, #0]
 801361a:	4611      	mov	r1, r2
 801361c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801361e:	4798      	blx	r3
 8013620:	b009      	add	sp, #36	; 0x24
 8013622:	bd30      	pop	{r4, r5, pc}
 8013624:	f7ff f9ec 	bl	8012a00 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 8013628:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 801362c:	f88d 200c 	strb.w	r2, [sp, #12]
 8013630:	4a0f      	ldr	r2, [pc, #60]	; (8013670 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8013632:	9204      	str	r2, [sp, #16]
 8013634:	aa01      	add	r2, sp, #4
 8013636:	9205      	str	r2, [sp, #20]
 8013638:	4a0e      	ldr	r2, [pc, #56]	; (8013674 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 801363a:	9502      	str	r5, [sp, #8]
 801363c:	2300      	movs	r3, #0
 801363e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8013642:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013646:	f88d 3006 	strb.w	r3, [sp, #6]
 801364a:	6823      	ldr	r3, [r4, #0]
 801364c:	a904      	add	r1, sp, #16
 801364e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013650:	4620      	mov	r0, r4
 8013652:	4798      	blx	r3
 8013654:	4620      	mov	r0, r4
 8013656:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801365a:	4629      	mov	r1, r5
 801365c:	f7ff ff8e 	bl	801357c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8013660:	6960      	ldr	r0, [r4, #20]
 8013662:	2800      	cmp	r0, #0
 8013664:	d0dc      	beq.n	8013620 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8013666:	6803      	ldr	r3, [r0, #0]
 8013668:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801366a:	4798      	blx	r3
 801366c:	e7d8      	b.n	8013620 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801366e:	bf00      	nop
 8013670:	080318cc 	.word	0x080318cc
 8013674:	080134b3 	.word	0x080134b3

08013678 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8013678:	b538      	push	{r3, r4, r5, lr}
 801367a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801367e:	2b01      	cmp	r3, #1
 8013680:	4604      	mov	r4, r0
 8013682:	460d      	mov	r5, r1
 8013684:	d002      	beq.n	801368c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8013686:	2b02      	cmp	r3, #2
 8013688:	d018      	beq.n	80136bc <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801368a:	bd38      	pop	{r3, r4, r5, pc}
 801368c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013690:	4293      	cmp	r3, r2
 8013692:	bfc8      	it	gt
 8013694:	8102      	strhgt	r2, [r0, #8]
 8013696:	894a      	ldrh	r2, [r1, #10]
 8013698:	8943      	ldrh	r3, [r0, #10]
 801369a:	1a9b      	subs	r3, r3, r2
 801369c:	8143      	strh	r3, [r0, #10]
 801369e:	680b      	ldr	r3, [r1, #0]
 80136a0:	4628      	mov	r0, r5
 80136a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80136a4:	2100      	movs	r1, #0
 80136a6:	4798      	blx	r3
 80136a8:	682b      	ldr	r3, [r5, #0]
 80136aa:	2100      	movs	r1, #0
 80136ac:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80136ae:	4628      	mov	r0, r5
 80136b0:	4798      	blx	r3
 80136b2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80136b4:	896a      	ldrh	r2, [r5, #10]
 80136b6:	1a9b      	subs	r3, r3, r2
 80136b8:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80136ba:	e7e6      	b.n	801368a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 80136bc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80136c0:	4293      	cmp	r3, r2
 80136c2:	bfc8      	it	gt
 80136c4:	8142      	strhgt	r2, [r0, #10]
 80136c6:	890a      	ldrh	r2, [r1, #8]
 80136c8:	8903      	ldrh	r3, [r0, #8]
 80136ca:	1a9b      	subs	r3, r3, r2
 80136cc:	8103      	strh	r3, [r0, #8]
 80136ce:	680b      	ldr	r3, [r1, #0]
 80136d0:	4628      	mov	r0, r5
 80136d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80136d4:	2100      	movs	r1, #0
 80136d6:	4798      	blx	r3
 80136d8:	682b      	ldr	r3, [r5, #0]
 80136da:	2100      	movs	r1, #0
 80136dc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80136de:	4628      	mov	r0, r5
 80136e0:	4798      	blx	r3
 80136e2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80136e4:	892a      	ldrh	r2, [r5, #8]
 80136e6:	e7e6      	b.n	80136b6 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

080136e8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 80136e8:	b530      	push	{r4, r5, lr}
 80136ea:	b089      	sub	sp, #36	; 0x24
 80136ec:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80136f0:	f88d 200c 	strb.w	r2, [sp, #12]
 80136f4:	4a13      	ldr	r2, [pc, #76]	; (8013744 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 80136f6:	9204      	str	r2, [sp, #16]
 80136f8:	aa01      	add	r2, sp, #4
 80136fa:	9205      	str	r2, [sp, #20]
 80136fc:	4a12      	ldr	r2, [pc, #72]	; (8013748 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 80136fe:	9102      	str	r1, [sp, #8]
 8013700:	2300      	movs	r3, #0
 8013702:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013706:	f88d 3006 	strb.w	r3, [sp, #6]
 801370a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801370e:	6803      	ldr	r3, [r0, #0]
 8013710:	460d      	mov	r5, r1
 8013712:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013714:	a904      	add	r1, sp, #16
 8013716:	4604      	mov	r4, r0
 8013718:	4798      	blx	r3
 801371a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 801371e:	b14b      	cbz	r3, 8013734 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 8013720:	4629      	mov	r1, r5
 8013722:	4620      	mov	r0, r4
 8013724:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8013728:	f7ff ffa6 	bl	8013678 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 801372c:	4629      	mov	r1, r5
 801372e:	4620      	mov	r0, r4
 8013730:	f7ff f94f 	bl	80129d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8013734:	6960      	ldr	r0, [r4, #20]
 8013736:	b110      	cbz	r0, 801373e <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8013738:	6803      	ldr	r3, [r0, #0]
 801373a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801373c:	4798      	blx	r3
 801373e:	b009      	add	sp, #36	; 0x24
 8013740:	bd30      	pop	{r4, r5, pc}
 8013742:	bf00      	nop
 8013744:	080318cc 	.word	0x080318cc
 8013748:	080133b5 	.word	0x080133b5

0801374c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801374c:	b513      	push	{r0, r1, r4, lr}
 801374e:	6803      	ldr	r3, [r0, #0]
 8013750:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8013754:	2300      	movs	r3, #0
 8013756:	e9cd 3300 	strd	r3, r3, [sp]
 801375a:	466b      	mov	r3, sp
 801375c:	47a0      	blx	r4
 801375e:	b002      	add	sp, #8
 8013760:	bd10      	pop	{r4, pc}

08013762 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8013762:	2301      	movs	r3, #1
 8013764:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013768:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801376c:	4770      	bx	lr

0801376e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801376e:	2301      	movs	r3, #1
 8013770:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013774:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8013778:	4770      	bx	lr

0801377a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801377a:	6843      	ldr	r3, [r0, #4]
 801377c:	2201      	movs	r2, #1
 801377e:	725a      	strb	r2, [r3, #9]
 8013780:	6840      	ldr	r0, [r0, #4]
 8013782:	6803      	ldr	r3, [r0, #0]
 8013784:	691b      	ldr	r3, [r3, #16]
 8013786:	4718      	bx	r3

08013788 <_ZN8touchgfx3HAL8flushDMAEv>:
 8013788:	6840      	ldr	r0, [r0, #4]
 801378a:	6803      	ldr	r3, [r0, #0]
 801378c:	689b      	ldr	r3, [r3, #8]
 801378e:	4718      	bx	r3

08013790 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8013790:	b530      	push	{r4, r5, lr}
 8013792:	b08b      	sub	sp, #44	; 0x2c
 8013794:	6804      	ldr	r4, [r0, #0]
 8013796:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801379a:	9509      	str	r5, [sp, #36]	; 0x24
 801379c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80137a0:	9508      	str	r5, [sp, #32]
 80137a2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80137a6:	9507      	str	r5, [sp, #28]
 80137a8:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80137ac:	9506      	str	r5, [sp, #24]
 80137ae:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80137b2:	9505      	str	r5, [sp, #20]
 80137b4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80137b8:	9504      	str	r5, [sp, #16]
 80137ba:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 80137be:	9503      	str	r5, [sp, #12]
 80137c0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80137c4:	9502      	str	r5, [sp, #8]
 80137c6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80137ca:	e9cd 3500 	strd	r3, r5, [sp]
 80137ce:	4613      	mov	r3, r2
 80137d0:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80137d2:	2200      	movs	r2, #0
 80137d4:	47a0      	blx	r4
 80137d6:	b00b      	add	sp, #44	; 0x2c
 80137d8:	bd30      	pop	{r4, r5, pc}
	...

080137dc <_ZN8touchgfx3HAL10beginFrameEv>:
 80137dc:	4b04      	ldr	r3, [pc, #16]	; (80137f0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80137de:	781b      	ldrb	r3, [r3, #0]
 80137e0:	b123      	cbz	r3, 80137ec <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80137e2:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80137e6:	f080 0001 	eor.w	r0, r0, #1
 80137ea:	4770      	bx	lr
 80137ec:	2001      	movs	r0, #1
 80137ee:	4770      	bx	lr
 80137f0:	20013852 	.word	0x20013852

080137f4 <_ZN8touchgfx3HAL8endFrameEv>:
 80137f4:	b510      	push	{r4, lr}
 80137f6:	4604      	mov	r4, r0
 80137f8:	6840      	ldr	r0, [r0, #4]
 80137fa:	6803      	ldr	r3, [r0, #0]
 80137fc:	689b      	ldr	r3, [r3, #8]
 80137fe:	4798      	blx	r3
 8013800:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8013804:	b113      	cbz	r3, 801380c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8013806:	2301      	movs	r3, #1
 8013808:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801380c:	bd10      	pop	{r4, pc}

0801380e <_ZN8touchgfx3HAL10initializeEv>:
 801380e:	b510      	push	{r4, lr}
 8013810:	4604      	mov	r4, r0
 8013812:	f7ef fb3b 	bl	8002e8c <_ZN8touchgfx10OSWrappers10initializeEv>
 8013816:	f7ef fa47 	bl	8002ca8 <_ZN8touchgfx4GPIO4initEv>
 801381a:	6860      	ldr	r0, [r4, #4]
 801381c:	6803      	ldr	r3, [r0, #0]
 801381e:	68db      	ldr	r3, [r3, #12]
 8013820:	4798      	blx	r3
 8013822:	68e0      	ldr	r0, [r4, #12]
 8013824:	6803      	ldr	r3, [r0, #0]
 8013826:	689b      	ldr	r3, [r3, #8]
 8013828:	4798      	blx	r3
 801382a:	6823      	ldr	r3, [r4, #0]
 801382c:	4620      	mov	r0, r4
 801382e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013834:	4718      	bx	r3
	...

08013838 <_ZN8touchgfx3HAL4tickEv>:
 8013838:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801383a:	6803      	ldr	r3, [r0, #0]
 801383c:	4d5b      	ldr	r5, [pc, #364]	; (80139ac <_ZN8touchgfx3HAL4tickEv+0x174>)
 801383e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8013842:	4604      	mov	r4, r0
 8013844:	4798      	blx	r3
 8013846:	2800      	cmp	r0, #0
 8013848:	f000 8095 	beq.w	8013976 <_ZN8touchgfx3HAL4tickEv+0x13e>
 801384c:	2001      	movs	r0, #1
 801384e:	f7ef f9dd 	bl	8002c0c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8013852:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8013856:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801385a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 801385e:	2600      	movs	r6, #0
 8013860:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8013864:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8013868:	b133      	cbz	r3, 8013878 <_ZN8touchgfx3HAL4tickEv+0x40>
 801386a:	6823      	ldr	r3, [r4, #0]
 801386c:	4620      	mov	r0, r4
 801386e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8013872:	4798      	blx	r3
 8013874:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8013878:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801387c:	6862      	ldr	r2, [r4, #4]
 801387e:	f083 0301 	eor.w	r3, r3, #1
 8013882:	7253      	strb	r3, [r2, #9]
 8013884:	2601      	movs	r6, #1
 8013886:	702e      	strb	r6, [r5, #0]
 8013888:	f005 f93a 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 801388c:	6803      	ldr	r3, [r0, #0]
 801388e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013890:	4798      	blx	r3
 8013892:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013896:	b90b      	cbnz	r3, 801389c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013898:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801389c:	f005 f930 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 80138a0:	6803      	ldr	r3, [r0, #0]
 80138a2:	695b      	ldr	r3, [r3, #20]
 80138a4:	4798      	blx	r3
 80138a6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80138a8:	6803      	ldr	r3, [r0, #0]
 80138aa:	691b      	ldr	r3, [r3, #16]
 80138ac:	4798      	blx	r3
 80138ae:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80138b2:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 80138b6:	3b01      	subs	r3, #1
 80138b8:	b2db      	uxtb	r3, r3
 80138ba:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80138be:	b10a      	cbz	r2, 80138c4 <_ZN8touchgfx3HAL4tickEv+0x8c>
 80138c0:	2b00      	cmp	r3, #0
 80138c2:	d1eb      	bne.n	801389c <_ZN8touchgfx3HAL4tickEv+0x64>
 80138c4:	4a3a      	ldr	r2, [pc, #232]	; (80139b0 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80138c6:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 80138ca:	7813      	ldrb	r3, [r2, #0]
 80138cc:	3301      	adds	r3, #1
 80138ce:	b25b      	sxtb	r3, r3
 80138d0:	4299      	cmp	r1, r3
 80138d2:	7013      	strb	r3, [r2, #0]
 80138d4:	dc10      	bgt.n	80138f8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80138d6:	68e0      	ldr	r0, [r4, #12]
 80138d8:	2300      	movs	r3, #0
 80138da:	7013      	strb	r3, [r2, #0]
 80138dc:	6803      	ldr	r3, [r0, #0]
 80138de:	aa03      	add	r2, sp, #12
 80138e0:	68db      	ldr	r3, [r3, #12]
 80138e2:	a902      	add	r1, sp, #8
 80138e4:	4798      	blx	r3
 80138e6:	6823      	ldr	r3, [r4, #0]
 80138e8:	2800      	cmp	r0, #0
 80138ea:	d050      	beq.n	801398e <_ZN8touchgfx3HAL4tickEv+0x156>
 80138ec:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80138f0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80138f4:	4620      	mov	r0, r4
 80138f6:	4798      	blx	r3
 80138f8:	6960      	ldr	r0, [r4, #20]
 80138fa:	2300      	movs	r3, #0
 80138fc:	f88d 3007 	strb.w	r3, [sp, #7]
 8013900:	b158      	cbz	r0, 801391a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8013902:	6803      	ldr	r3, [r0, #0]
 8013904:	f10d 0107 	add.w	r1, sp, #7
 8013908:	68db      	ldr	r3, [r3, #12]
 801390a:	4798      	blx	r3
 801390c:	b128      	cbz	r0, 801391a <_ZN8touchgfx3HAL4tickEv+0xe2>
 801390e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013910:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8013914:	6803      	ldr	r3, [r0, #0]
 8013916:	68db      	ldr	r3, [r3, #12]
 8013918:	4798      	blx	r3
 801391a:	f104 001c 	add.w	r0, r4, #28
 801391e:	f016 f8c3 	bl	8029aa8 <_ZN8touchgfx8Gestures4tickEv>
 8013922:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8013926:	b30b      	cbz	r3, 801396c <_ZN8touchgfx3HAL4tickEv+0x134>
 8013928:	6920      	ldr	r0, [r4, #16]
 801392a:	6803      	ldr	r3, [r0, #0]
 801392c:	691b      	ldr	r3, [r3, #16]
 801392e:	4798      	blx	r3
 8013930:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8013932:	4606      	mov	r6, r0
 8013934:	b903      	cbnz	r3, 8013938 <_ZN8touchgfx3HAL4tickEv+0x100>
 8013936:	6760      	str	r0, [r4, #116]	; 0x74
 8013938:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801393a:	4a1e      	ldr	r2, [pc, #120]	; (80139b4 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 801393c:	1af3      	subs	r3, r6, r3
 801393e:	4293      	cmp	r3, r2
 8013940:	d914      	bls.n	801396c <_ZN8touchgfx3HAL4tickEv+0x134>
 8013942:	6920      	ldr	r0, [r4, #16]
 8013944:	6803      	ldr	r3, [r0, #0]
 8013946:	699b      	ldr	r3, [r3, #24]
 8013948:	4798      	blx	r3
 801394a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801394c:	2264      	movs	r2, #100	; 0x64
 801394e:	1af3      	subs	r3, r6, r3
 8013950:	fbb3 f3f2 	udiv	r3, r3, r2
 8013954:	fbb0 f0f3 	udiv	r0, r0, r3
 8013958:	2800      	cmp	r0, #0
 801395a:	dc1d      	bgt.n	8013998 <_ZN8touchgfx3HAL4tickEv+0x160>
 801395c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8013960:	6920      	ldr	r0, [r4, #16]
 8013962:	6803      	ldr	r3, [r0, #0]
 8013964:	2100      	movs	r1, #0
 8013966:	69db      	ldr	r3, [r3, #28]
 8013968:	4798      	blx	r3
 801396a:	6766      	str	r6, [r4, #116]	; 0x74
 801396c:	f005 f8c8 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 8013970:	6803      	ldr	r3, [r0, #0]
 8013972:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013974:	4798      	blx	r3
 8013976:	6823      	ldr	r3, [r4, #0]
 8013978:	4620      	mov	r0, r4
 801397a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801397e:	4798      	blx	r3
 8013980:	2001      	movs	r0, #1
 8013982:	f7ef f95b 	bl	8002c3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8013986:	2300      	movs	r3, #0
 8013988:	702b      	strb	r3, [r5, #0]
 801398a:	b004      	add	sp, #16
 801398c:	bd70      	pop	{r4, r5, r6, pc}
 801398e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8013992:	4620      	mov	r0, r4
 8013994:	4798      	blx	r3
 8013996:	e7af      	b.n	80138f8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013998:	2863      	cmp	r0, #99	; 0x63
 801399a:	bfcb      	itete	gt
 801399c:	2300      	movgt	r3, #0
 801399e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80139a2:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80139a6:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80139aa:	e7d9      	b.n	8013960 <_ZN8touchgfx3HAL4tickEv+0x128>
 80139ac:	20013858 	.word	0x20013858
 80139b0:	20013859 	.word	0x20013859
 80139b4:	05f5e100 	.word	0x05f5e100

080139b8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80139b8:	b510      	push	{r4, lr}
 80139ba:	4604      	mov	r4, r0
 80139bc:	f7ef fa96 	bl	8002eec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80139c0:	6863      	ldr	r3, [r4, #4]
 80139c2:	2200      	movs	r2, #0
 80139c4:	729a      	strb	r2, [r3, #10]
 80139c6:	bd10      	pop	{r4, pc}

080139c8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80139c8:	65c1      	str	r1, [r0, #92]	; 0x5c
 80139ca:	301c      	adds	r0, #28
 80139cc:	f016 b86a 	b.w	8029aa4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080139d0 <_ZN8touchgfx3HAL5touchEll>:
 80139d0:	b530      	push	{r4, r5, lr}
 80139d2:	b087      	sub	sp, #28
 80139d4:	4604      	mov	r4, r0
 80139d6:	a804      	add	r0, sp, #16
 80139d8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80139dc:	f004 fe5c 	bl	8018698 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80139e0:	9b04      	ldr	r3, [sp, #16]
 80139e2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80139e6:	a906      	add	r1, sp, #24
 80139e8:	9b05      	ldr	r3, [sp, #20]
 80139ea:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80139ee:	a803      	add	r0, sp, #12
 80139f0:	f004 fea4 	bl	801873c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80139f4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80139f8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80139fc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8013a00:	f104 001c 	add.w	r0, r4, #28
 8013a04:	b189      	cbz	r1, 8013a2a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8013a06:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8013a0a:	9300      	str	r3, [sp, #0]
 8013a0c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8013a10:	4613      	mov	r3, r2
 8013a12:	462a      	mov	r2, r5
 8013a14:	f016 f856 	bl	8029ac4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8013a18:	b128      	cbz	r0, 8013a26 <_ZN8touchgfx3HAL5touchEll+0x56>
 8013a1a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013a1e:	6623      	str	r3, [r4, #96]	; 0x60
 8013a20:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013a24:	6663      	str	r3, [r4, #100]	; 0x64
 8013a26:	b007      	add	sp, #28
 8013a28:	bd30      	pop	{r4, r5, pc}
 8013a2a:	f016 f88b 	bl	8029b44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013a2e:	2301      	movs	r3, #1
 8013a30:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8013a34:	e7f1      	b.n	8013a1a <_ZN8touchgfx3HAL5touchEll+0x4a>

08013a36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8013a36:	b510      	push	{r4, lr}
 8013a38:	2b00      	cmp	r3, #0
 8013a3a:	d046      	beq.n	8013aca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013a3c:	ea81 0002 	eor.w	r0, r1, r2
 8013a40:	07c4      	lsls	r4, r0, #31
 8013a42:	d508      	bpl.n	8013a56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8013a44:	440b      	add	r3, r1
 8013a46:	3a01      	subs	r2, #1
 8013a48:	428b      	cmp	r3, r1
 8013a4a:	d93e      	bls.n	8013aca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013a4c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013a50:	f801 0b01 	strb.w	r0, [r1], #1
 8013a54:	e7f8      	b.n	8013a48 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8013a56:	07d0      	lsls	r0, r2, #31
 8013a58:	bf42      	ittt	mi
 8013a5a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8013a5e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8013a62:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8013a66:	2b01      	cmp	r3, #1
 8013a68:	d911      	bls.n	8013a8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8013a6a:	ea81 0402 	eor.w	r4, r1, r2
 8013a6e:	07a4      	lsls	r4, r4, #30
 8013a70:	4610      	mov	r0, r2
 8013a72:	d022      	beq.n	8013aba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8013a74:	f023 0401 	bic.w	r4, r3, #1
 8013a78:	440c      	add	r4, r1
 8013a7a:	428c      	cmp	r4, r1
 8013a7c:	4602      	mov	r2, r0
 8013a7e:	d904      	bls.n	8013a8a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8013a80:	8812      	ldrh	r2, [r2, #0]
 8013a82:	f821 2b02 	strh.w	r2, [r1], #2
 8013a86:	3002      	adds	r0, #2
 8013a88:	e7f7      	b.n	8013a7a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8013a8a:	f003 0301 	and.w	r3, r3, #1
 8013a8e:	f023 0003 	bic.w	r0, r3, #3
 8013a92:	4408      	add	r0, r1
 8013a94:	4288      	cmp	r0, r1
 8013a96:	4614      	mov	r4, r2
 8013a98:	d904      	bls.n	8013aa4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8013a9a:	6824      	ldr	r4, [r4, #0]
 8013a9c:	f841 4b04 	str.w	r4, [r1], #4
 8013aa0:	3204      	adds	r2, #4
 8013aa2:	e7f7      	b.n	8013a94 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8013aa4:	f003 0303 	and.w	r3, r3, #3
 8013aa8:	440b      	add	r3, r1
 8013aaa:	3a01      	subs	r2, #1
 8013aac:	428b      	cmp	r3, r1
 8013aae:	d90c      	bls.n	8013aca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013ab0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013ab4:	f801 0b01 	strb.w	r0, [r1], #1
 8013ab8:	e7f8      	b.n	8013aac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8013aba:	0790      	lsls	r0, r2, #30
 8013abc:	d0e7      	beq.n	8013a8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8013abe:	f832 0b02 	ldrh.w	r0, [r2], #2
 8013ac2:	f821 0b02 	strh.w	r0, [r1], #2
 8013ac6:	3b02      	subs	r3, #2
 8013ac8:	e7e1      	b.n	8013a8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8013aca:	2001      	movs	r0, #1
 8013acc:	bd10      	pop	{r4, pc}

08013ace <_ZN8touchgfx3HAL7noTouchEv>:
 8013ace:	b510      	push	{r4, lr}
 8013ad0:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8013ad4:	4604      	mov	r4, r0
 8013ad6:	b153      	cbz	r3, 8013aee <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8013ad8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8013adc:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8013ae0:	2101      	movs	r1, #1
 8013ae2:	301c      	adds	r0, #28
 8013ae4:	f016 f82e 	bl	8029b44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013ae8:	2300      	movs	r3, #0
 8013aea:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8013aee:	bd10      	pop	{r4, pc}

08013af0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8013af0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013af4:	b085      	sub	sp, #20
 8013af6:	ad04      	add	r5, sp, #16
 8013af8:	4604      	mov	r4, r0
 8013afa:	2000      	movs	r0, #0
 8013afc:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013b00:	69a0      	ldr	r0, [r4, #24]
 8013b02:	6806      	ldr	r6, [r0, #0]
 8013b04:	9501      	str	r5, [sp, #4]
 8013b06:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8013b0a:	9500      	str	r5, [sp, #0]
 8013b0c:	6835      	ldr	r5, [r6, #0]
 8013b0e:	4699      	mov	r9, r3
 8013b10:	460f      	mov	r7, r1
 8013b12:	4690      	mov	r8, r2
 8013b14:	47a8      	blx	r5
 8013b16:	4d10      	ldr	r5, [pc, #64]	; (8013b58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8013b18:	4606      	mov	r6, r0
 8013b1a:	f8a5 9000 	strh.w	r9, [r5]
 8013b1e:	f7f1 fd87 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8013b22:	6803      	ldr	r3, [r0, #0]
 8013b24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b26:	4798      	blx	r3
 8013b28:	b128      	cbz	r0, 8013b36 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8013b2a:	2801      	cmp	r0, #1
 8013b2c:	d00b      	beq.n	8013b46 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8013b2e:	4630      	mov	r0, r6
 8013b30:	b005      	add	sp, #20
 8013b32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013b36:	882b      	ldrh	r3, [r5, #0]
 8013b38:	fb08 7203 	mla	r2, r8, r3, r7
 8013b3c:	9b03      	ldr	r3, [sp, #12]
 8013b3e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8013b42:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013b44:	e7f3      	b.n	8013b2e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013b46:	882a      	ldrh	r2, [r5, #0]
 8013b48:	9b03      	ldr	r3, [sp, #12]
 8013b4a:	fb08 7202 	mla	r2, r8, r2, r7
 8013b4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013b52:	1a9a      	subs	r2, r3, r2
 8013b54:	63e2      	str	r2, [r4, #60]	; 0x3c
 8013b56:	e7ea      	b.n	8013b2e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013b58:	2001384e 	.word	0x2001384e

08013b5c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8013b5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013b5e:	b08b      	sub	sp, #44	; 0x2c
 8013b60:	4617      	mov	r7, r2
 8013b62:	4604      	mov	r4, r0
 8013b64:	460e      	mov	r6, r1
 8013b66:	461d      	mov	r5, r3
 8013b68:	f7f1 fd62 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8013b6c:	6803      	ldr	r3, [r0, #0]
 8013b6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b70:	4798      	blx	r3
 8013b72:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013b76:	9007      	str	r0, [sp, #28]
 8013b78:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013b7c:	4b0d      	ldr	r3, [pc, #52]	; (8013bb4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8013b7e:	6822      	ldr	r2, [r4, #0]
 8013b80:	881b      	ldrh	r3, [r3, #0]
 8013b82:	9306      	str	r3, [sp, #24]
 8013b84:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013b88:	9305      	str	r3, [sp, #20]
 8013b8a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8013b8e:	9304      	str	r3, [sp, #16]
 8013b90:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013b94:	9303      	str	r3, [sp, #12]
 8013b96:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013b9a:	9302      	str	r3, [sp, #8]
 8013b9c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013ba0:	e9cd 5300 	strd	r5, r3, [sp]
 8013ba4:	4631      	mov	r1, r6
 8013ba6:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8013ba8:	463b      	mov	r3, r7
 8013baa:	2200      	movs	r2, #0
 8013bac:	4620      	mov	r0, r4
 8013bae:	47a8      	blx	r5
 8013bb0:	b00b      	add	sp, #44	; 0x2c
 8013bb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013bb4:	2001384e 	.word	0x2001384e

08013bb8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8013bb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013bbc:	4698      	mov	r8, r3
 8013bbe:	6803      	ldr	r3, [r0, #0]
 8013bc0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8013bc2:	4b15      	ldr	r3, [pc, #84]	; (8013c18 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8013bc4:	b08b      	sub	sp, #44	; 0x2c
 8013bc6:	4617      	mov	r7, r2
 8013bc8:	f8b3 9000 	ldrh.w	r9, [r3]
 8013bcc:	460e      	mov	r6, r1
 8013bce:	4604      	mov	r4, r0
 8013bd0:	f7f1 fd2e 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8013bd4:	6803      	ldr	r3, [r0, #0]
 8013bd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013bd8:	4798      	blx	r3
 8013bda:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013bde:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013be2:	2302      	movs	r3, #2
 8013be4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8013be8:	2301      	movs	r3, #1
 8013bea:	9305      	str	r3, [sp, #20]
 8013bec:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013bf0:	9304      	str	r3, [sp, #16]
 8013bf2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013bf6:	9303      	str	r3, [sp, #12]
 8013bf8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013bfc:	9302      	str	r3, [sp, #8]
 8013bfe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013c02:	2200      	movs	r2, #0
 8013c04:	e9cd 8300 	strd	r8, r3, [sp]
 8013c08:	4631      	mov	r1, r6
 8013c0a:	463b      	mov	r3, r7
 8013c0c:	4620      	mov	r0, r4
 8013c0e:	47a8      	blx	r5
 8013c10:	b00b      	add	sp, #44	; 0x2c
 8013c12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013c16:	bf00      	nop
 8013c18:	2001384e 	.word	0x2001384e

08013c1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8013c1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013c20:	4698      	mov	r8, r3
 8013c22:	6803      	ldr	r3, [r0, #0]
 8013c24:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8013c26:	4b11      	ldr	r3, [pc, #68]	; (8013c6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8013c28:	b087      	sub	sp, #28
 8013c2a:	f8b3 9000 	ldrh.w	r9, [r3]
 8013c2e:	460e      	mov	r6, r1
 8013c30:	4617      	mov	r7, r2
 8013c32:	4604      	mov	r4, r0
 8013c34:	f7f1 fcfc 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8013c38:	6803      	ldr	r3, [r0, #0]
 8013c3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c3c:	4798      	blx	r3
 8013c3e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8013c42:	f8cd 900c 	str.w	r9, [sp, #12]
 8013c46:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8013c4a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8013c4e:	9302      	str	r3, [sp, #8]
 8013c50:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8013c54:	9301      	str	r3, [sp, #4]
 8013c56:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013c5a:	9300      	str	r3, [sp, #0]
 8013c5c:	463a      	mov	r2, r7
 8013c5e:	4643      	mov	r3, r8
 8013c60:	4631      	mov	r1, r6
 8013c62:	4620      	mov	r0, r4
 8013c64:	47a8      	blx	r5
 8013c66:	b007      	add	sp, #28
 8013c68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013c6c:	2001384e 	.word	0x2001384e

08013c70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8013c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c74:	4604      	mov	r4, r0
 8013c76:	b08f      	sub	sp, #60	; 0x3c
 8013c78:	4610      	mov	r0, r2
 8013c7a:	460d      	mov	r5, r1
 8013c7c:	4691      	mov	r9, r2
 8013c7e:	461e      	mov	r6, r3
 8013c80:	f008 fafa 	bl	801c278 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013c84:	2800      	cmp	r0, #0
 8013c86:	f000 809d 	beq.w	8013dc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8013c8a:	6823      	ldr	r3, [r4, #0]
 8013c8c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013e28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8013c90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013c92:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013e2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013c96:	4f61      	ldr	r7, [pc, #388]	; (8013e1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013c98:	4620      	mov	r0, r4
 8013c9a:	4798      	blx	r3
 8013c9c:	6823      	ldr	r3, [r4, #0]
 8013c9e:	4620      	mov	r0, r4
 8013ca0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ca2:	4798      	blx	r3
 8013ca4:	f8bb 3000 	ldrh.w	r3, [fp]
 8013ca8:	9301      	str	r3, [sp, #4]
 8013caa:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8013cae:	f8ba 3000 	ldrh.w	r3, [sl]
 8013cb2:	9302      	str	r3, [sp, #8]
 8013cb4:	883b      	ldrh	r3, [r7, #0]
 8013cb6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8013cba:	9303      	str	r3, [sp, #12]
 8013cbc:	4b58      	ldr	r3, [pc, #352]	; (8013e20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013cbe:	9305      	str	r3, [sp, #20]
 8013cc0:	881a      	ldrh	r2, [r3, #0]
 8013cc2:	9204      	str	r2, [sp, #16]
 8013cc4:	4640      	mov	r0, r8
 8013cc6:	f008 fb6b 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013cca:	8038      	strh	r0, [r7, #0]
 8013ccc:	4640      	mov	r0, r8
 8013cce:	f008 fb9b 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013cd2:	9b05      	ldr	r3, [sp, #20]
 8013cd4:	b280      	uxth	r0, r0
 8013cd6:	8018      	strh	r0, [r3, #0]
 8013cd8:	4b52      	ldr	r3, [pc, #328]	; (8013e24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8013cda:	781b      	ldrb	r3, [r3, #0]
 8013cdc:	2b00      	cmp	r3, #0
 8013cde:	d174      	bne.n	8013dca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013ce0:	883b      	ldrh	r3, [r7, #0]
 8013ce2:	f8ab 3000 	strh.w	r3, [fp]
 8013ce6:	f8aa 0000 	strh.w	r0, [sl]
 8013cea:	4648      	mov	r0, r9
 8013cec:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8013cf0:	f008 fac2 	bl	801c278 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013cf4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013cf8:	2200      	movs	r2, #0
 8013cfa:	4611      	mov	r1, r2
 8013cfc:	4628      	mov	r0, r5
 8013cfe:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8013d02:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8013d06:	f7ef fd59 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8013d0a:	2301      	movs	r3, #1
 8013d0c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8013d10:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8013d14:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013d18:	2b00      	cmp	r3, #0
 8013d1a:	dd5c      	ble.n	8013dd6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013d1c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013d20:	2b00      	cmp	r3, #0
 8013d22:	dd58      	ble.n	8013dd6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013d24:	462a      	mov	r2, r5
 8013d26:	ab0a      	add	r3, sp, #40	; 0x28
 8013d28:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013d2c:	6851      	ldr	r1, [r2, #4]
 8013d2e:	c303      	stmia	r3!, {r0, r1}
 8013d30:	4631      	mov	r1, r6
 8013d32:	a80a      	add	r0, sp, #40	; 0x28
 8013d34:	f7fe ff92 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 8013d38:	4b38      	ldr	r3, [pc, #224]	; (8013e1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013d3a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d3e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013d42:	2100      	movs	r1, #0
 8013d44:	aa0a      	add	r2, sp, #40	; 0x28
 8013d46:	4b36      	ldr	r3, [pc, #216]	; (8013e20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013d48:	910c      	str	r1, [sp, #48]	; 0x30
 8013d4a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013d4e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013d52:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013d56:	ab08      	add	r3, sp, #32
 8013d58:	e883 0003 	stmia.w	r3, {r0, r1}
 8013d5c:	4618      	mov	r0, r3
 8013d5e:	a90c      	add	r1, sp, #48	; 0x30
 8013d60:	f7fe ff7c 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 8013d64:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8013d66:	2b00      	cmp	r3, #0
 8013d68:	d13c      	bne.n	8013de4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8013d6a:	2000      	movs	r0, #0
 8013d6c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8013d70:	2600      	movs	r6, #0
 8013d72:	682a      	ldr	r2, [r5, #0]
 8013d74:	696b      	ldr	r3, [r5, #20]
 8013d76:	616e      	str	r6, [r5, #20]
 8013d78:	9305      	str	r3, [sp, #20]
 8013d7a:	6892      	ldr	r2, [r2, #8]
 8013d7c:	a908      	add	r1, sp, #32
 8013d7e:	4628      	mov	r0, r5
 8013d80:	4790      	blx	r2
 8013d82:	9b05      	ldr	r3, [sp, #20]
 8013d84:	616b      	str	r3, [r5, #20]
 8013d86:	4652      	mov	r2, sl
 8013d88:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8013d8c:	4649      	mov	r1, r9
 8013d8e:	4628      	mov	r0, r5
 8013d90:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013d94:	f7ef fd12 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8013d98:	4b23      	ldr	r3, [pc, #140]	; (8013e28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8013d9a:	9a01      	ldr	r2, [sp, #4]
 8013d9c:	801a      	strh	r2, [r3, #0]
 8013d9e:	4b23      	ldr	r3, [pc, #140]	; (8013e2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013da0:	9a02      	ldr	r2, [sp, #8]
 8013da2:	801a      	strh	r2, [r3, #0]
 8013da4:	4b1d      	ldr	r3, [pc, #116]	; (8013e1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013da6:	9a03      	ldr	r2, [sp, #12]
 8013da8:	801a      	strh	r2, [r3, #0]
 8013daa:	4b1d      	ldr	r3, [pc, #116]	; (8013e20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013dac:	9a04      	ldr	r2, [sp, #16]
 8013dae:	801a      	strh	r2, [r3, #0]
 8013db0:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013db4:	6823      	ldr	r3, [r4, #0]
 8013db6:	4620      	mov	r0, r4
 8013db8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013dba:	4798      	blx	r3
 8013dbc:	6823      	ldr	r3, [r4, #0]
 8013dbe:	4620      	mov	r0, r4
 8013dc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013dc2:	4798      	blx	r3
 8013dc4:	b00f      	add	sp, #60	; 0x3c
 8013dc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013dca:	883b      	ldrh	r3, [r7, #0]
 8013dcc:	f8ab 0000 	strh.w	r0, [fp]
 8013dd0:	f8aa 3000 	strh.w	r3, [sl]
 8013dd4:	e789      	b.n	8013cea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013dd6:	462a      	mov	r2, r5
 8013dd8:	ab0a      	add	r3, sp, #40	; 0x28
 8013dda:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013dde:	6851      	ldr	r1, [r2, #4]
 8013de0:	c303      	stmia	r3!, {r0, r1}
 8013de2:	e7a9      	b.n	8013d38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013de4:	a807      	add	r0, sp, #28
 8013de6:	f008 fc4b 	bl	801c680 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013dea:	4606      	mov	r6, r0
 8013dec:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8013dee:	6803      	ldr	r3, [r0, #0]
 8013df0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013df2:	4798      	blx	r3
 8013df4:	4286      	cmp	r6, r0
 8013df6:	d1b8      	bne.n	8013d6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013df8:	f7f1 fc1a 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8013dfc:	6803      	ldr	r3, [r0, #0]
 8013dfe:	4606      	mov	r6, r0
 8013e00:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013e02:	9305      	str	r3, [sp, #20]
 8013e04:	a807      	add	r0, sp, #28
 8013e06:	f008 fc3b 	bl	801c680 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013e0a:	9b05      	ldr	r3, [sp, #20]
 8013e0c:	4601      	mov	r1, r0
 8013e0e:	4630      	mov	r0, r6
 8013e10:	4798      	blx	r3
 8013e12:	f080 0001 	eor.w	r0, r0, #1
 8013e16:	b2c0      	uxtb	r0, r0
 8013e18:	e7a8      	b.n	8013d6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013e1a:	bf00      	nop
 8013e1c:	20013848 	.word	0x20013848
 8013e20:	2001384a 	.word	0x2001384a
 8013e24:	2001384c 	.word	0x2001384c
 8013e28:	2001384e 	.word	0x2001384e
 8013e2c:	20013850 	.word	0x20013850

08013e30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013e30:	b510      	push	{r4, lr}
 8013e32:	4b07      	ldr	r3, [pc, #28]	; (8013e50 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8013e34:	781b      	ldrb	r3, [r3, #0]
 8013e36:	4604      	mov	r4, r0
 8013e38:	b13b      	cbz	r3, 8013e4a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013e3a:	6803      	ldr	r3, [r0, #0]
 8013e3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013e3e:	4798      	blx	r3
 8013e40:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013e42:	4283      	cmp	r3, r0
 8013e44:	d101      	bne.n	8013e4a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013e46:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013e48:	bd10      	pop	{r4, pc}
 8013e4a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013e4c:	e7fc      	b.n	8013e48 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8013e4e:	bf00      	nop
 8013e50:	20013852 	.word	0x20013852

08013e54 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013e54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e58:	b08a      	sub	sp, #40	; 0x28
 8013e5a:	461d      	mov	r5, r3
 8013e5c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013e60:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013e64:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013e68:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013e6c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013e70:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013e74:	2400      	movs	r4, #0
 8013e76:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013e7a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8013e7e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013e82:	4690      	mov	r8, r2
 8013e84:	4607      	mov	r7, r0
 8013e86:	9404      	str	r4, [sp, #16]
 8013e88:	f88d 4020 	strb.w	r4, [sp, #32]
 8013e8c:	f7ff ffd0 	bl	8013e30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013e90:	fb06 8505 	mla	r5, r6, r5, r8
 8013e94:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013e98:	6878      	ldr	r0, [r7, #4]
 8013e9a:	9505      	str	r5, [sp, #20]
 8013e9c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013ea0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013ea4:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013ea8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013eac:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013eb0:	6803      	ldr	r3, [r0, #0]
 8013eb2:	a901      	add	r1, sp, #4
 8013eb4:	685b      	ldr	r3, [r3, #4]
 8013eb6:	4798      	blx	r3
 8013eb8:	b00a      	add	sp, #40	; 0x28
 8013eba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013ebe <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8013ebe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ec2:	b08b      	sub	sp, #44	; 0x2c
 8013ec4:	2400      	movs	r4, #0
 8013ec6:	461d      	mov	r5, r3
 8013ec8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013ecc:	4688      	mov	r8, r1
 8013ece:	4691      	mov	r9, r2
 8013ed0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8013ed4:	9404      	str	r4, [sp, #16]
 8013ed6:	4607      	mov	r7, r0
 8013ed8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013edc:	f7ff ffa8 	bl	8013e30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013ee0:	fb06 9505 	mla	r5, r6, r5, r9
 8013ee4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013ee8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013eec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013ef0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013ef4:	6878      	ldr	r0, [r7, #4]
 8013ef6:	9505      	str	r5, [sp, #20]
 8013ef8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013efc:	f8ad 401c 	strh.w	r4, [sp, #28]
 8013f00:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013f04:	f8cd 8010 	str.w	r8, [sp, #16]
 8013f08:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013f0c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013f10:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013f14:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013f18:	6803      	ldr	r3, [r0, #0]
 8013f1a:	a901      	add	r1, sp, #4
 8013f1c:	685b      	ldr	r3, [r3, #4]
 8013f1e:	4798      	blx	r3
 8013f20:	b00b      	add	sp, #44	; 0x2c
 8013f22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013f28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013f28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f2c:	b08a      	sub	sp, #40	; 0x28
 8013f2e:	4698      	mov	r8, r3
 8013f30:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013f34:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013f38:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013f3c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013f40:	2300      	movs	r3, #0
 8013f42:	2d0b      	cmp	r5, #11
 8013f44:	4606      	mov	r6, r0
 8013f46:	9304      	str	r3, [sp, #16]
 8013f48:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013f4c:	d138      	bne.n	8013fc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013f4e:	2380      	movs	r3, #128	; 0x80
 8013f50:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013f54:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013f58:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013f5c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013f60:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013f64:	f88d 0020 	strb.w	r0, [sp, #32]
 8013f68:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013f6c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013f70:	4630      	mov	r0, r6
 8013f72:	9203      	str	r2, [sp, #12]
 8013f74:	f7ff ff5c 	bl	8013e30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013f78:	2c0b      	cmp	r4, #11
 8013f7a:	bf98      	it	ls
 8013f7c:	4b1b      	ldrls	r3, [pc, #108]	; (8013fec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013f7e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013f82:	bf98      	it	ls
 8013f84:	5d19      	ldrbls	r1, [r3, r4]
 8013f86:	f8ad 701e 	strh.w	r7, [sp, #30]
 8013f8a:	bf88      	it	hi
 8013f8c:	2100      	movhi	r1, #0
 8013f8e:	fb02 8307 	mla	r3, r2, r7, r8
 8013f92:	10c9      	asrs	r1, r1, #3
 8013f94:	fb01 0003 	mla	r0, r1, r3, r0
 8013f98:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013f9c:	9005      	str	r0, [sp, #20]
 8013f9e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013fa2:	6870      	ldr	r0, [r6, #4]
 8013fa4:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013fa8:	2300      	movs	r3, #0
 8013faa:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013fae:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013fb2:	6803      	ldr	r3, [r0, #0]
 8013fb4:	a901      	add	r1, sp, #4
 8013fb6:	685b      	ldr	r3, [r3, #4]
 8013fb8:	4798      	blx	r3
 8013fba:	b00a      	add	sp, #40	; 0x28
 8013fbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013fc0:	2d02      	cmp	r5, #2
 8013fc2:	d109      	bne.n	8013fd8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013fc4:	28ff      	cmp	r0, #255	; 0xff
 8013fc6:	d105      	bne.n	8013fd4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013fc8:	f1bc 0f00 	cmp.w	ip, #0
 8013fcc:	bf14      	ite	ne
 8013fce:	2340      	movne	r3, #64	; 0x40
 8013fd0:	2320      	moveq	r3, #32
 8013fd2:	e7bd      	b.n	8013f50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013fd4:	2340      	movs	r3, #64	; 0x40
 8013fd6:	e7bb      	b.n	8013f50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013fd8:	28ff      	cmp	r0, #255	; 0xff
 8013fda:	d105      	bne.n	8013fe8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013fdc:	f1bc 0f00 	cmp.w	ip, #0
 8013fe0:	bf14      	ite	ne
 8013fe2:	2304      	movne	r3, #4
 8013fe4:	2301      	moveq	r3, #1
 8013fe6:	e7b3      	b.n	8013f50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013fe8:	2304      	movs	r3, #4
 8013fea:	e7b1      	b.n	8013f50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013fec:	08031974 	.word	0x08031974

08013ff0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ff4:	b08b      	sub	sp, #44	; 0x2c
 8013ff6:	461d      	mov	r5, r3
 8013ff8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013ffc:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8014000:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8014004:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014008:	bf14      	ite	ne
 801400a:	2308      	movne	r3, #8
 801400c:	2302      	moveq	r3, #2
 801400e:	2400      	movs	r4, #0
 8014010:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8014014:	4688      	mov	r8, r1
 8014016:	4693      	mov	fp, r2
 8014018:	9404      	str	r4, [sp, #16]
 801401a:	4607      	mov	r7, r0
 801401c:	f7ff ff08 	bl	8013e30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014020:	2e0b      	cmp	r6, #11
 8014022:	bf98      	it	ls
 8014024:	4b15      	ldrls	r3, [pc, #84]	; (801407c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8014026:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801402a:	bf98      	it	ls
 801402c:	5d9c      	ldrbls	r4, [r3, r6]
 801402e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8014032:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014036:	fb05 b50a 	mla	r5, r5, sl, fp
 801403a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801403e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8014042:	10e4      	asrs	r4, r4, #3
 8014044:	fb04 0405 	mla	r4, r4, r5, r0
 8014048:	2300      	movs	r3, #0
 801404a:	6878      	ldr	r0, [r7, #4]
 801404c:	9405      	str	r4, [sp, #20]
 801404e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014052:	f8ad a01e 	strh.w	sl, [sp, #30]
 8014056:	f8cd 8010 	str.w	r8, [sp, #16]
 801405a:	f88d 9020 	strb.w	r9, [sp, #32]
 801405e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8014062:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8014066:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801406a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 801406e:	6803      	ldr	r3, [r0, #0]
 8014070:	a901      	add	r1, sp, #4
 8014072:	685b      	ldr	r3, [r3, #4]
 8014074:	4798      	blx	r3
 8014076:	b00b      	add	sp, #44	; 0x2c
 8014078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801407c:	08031974 	.word	0x08031974

08014080 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8014080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014084:	461e      	mov	r6, r3
 8014086:	4b0a      	ldr	r3, [pc, #40]	; (80140b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8014088:	460f      	mov	r7, r1
 801408a:	881d      	ldrh	r5, [r3, #0]
 801408c:	4690      	mov	r8, r2
 801408e:	f7f1 facf 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8014092:	6803      	ldr	r3, [r0, #0]
 8014094:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014096:	4798      	blx	r3
 8014098:	280b      	cmp	r0, #11
 801409a:	bf9a      	itte	ls
 801409c:	4b05      	ldrls	r3, [pc, #20]	; (80140b4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801409e:	5c1c      	ldrbls	r4, [r3, r0]
 80140a0:	2400      	movhi	r4, #0
 80140a2:	fb08 7005 	mla	r0, r8, r5, r7
 80140a6:	10e4      	asrs	r4, r4, #3
 80140a8:	fb04 6000 	mla	r0, r4, r0, r6
 80140ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80140b0:	2001384e 	.word	0x2001384e
 80140b4:	08031974 	.word	0x08031974

080140b8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80140b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80140ba:	b08b      	sub	sp, #44	; 0x2c
 80140bc:	461f      	mov	r7, r3
 80140be:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80140c2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80140c6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80140ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 80140ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80140d2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80140d6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80140da:	f8ad 301c 	strh.w	r3, [sp, #28]
 80140de:	2500      	movs	r5, #0
 80140e0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80140e4:	f88d 3020 	strb.w	r3, [sp, #32]
 80140e8:	4604      	mov	r4, r0
 80140ea:	4616      	mov	r6, r2
 80140ec:	9504      	str	r5, [sp, #16]
 80140ee:	f7ff fe9f 	bl	8013e30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80140f2:	463a      	mov	r2, r7
 80140f4:	4631      	mov	r1, r6
 80140f6:	4603      	mov	r3, r0
 80140f8:	4620      	mov	r0, r4
 80140fa:	f7ff ffc1 	bl	8014080 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80140fe:	4b0e      	ldr	r3, [pc, #56]	; (8014138 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8014100:	9005      	str	r0, [sp, #20]
 8014102:	881b      	ldrh	r3, [r3, #0]
 8014104:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014108:	f7f1 fa92 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 801410c:	6803      	ldr	r3, [r0, #0]
 801410e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014110:	4798      	blx	r3
 8014112:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014114:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8014118:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801411c:	9304      	str	r3, [sp, #16]
 801411e:	6860      	ldr	r0, [r4, #4]
 8014120:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8014124:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8014128:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 801412c:	6803      	ldr	r3, [r0, #0]
 801412e:	a901      	add	r1, sp, #4
 8014130:	685b      	ldr	r3, [r3, #4]
 8014132:	4798      	blx	r3
 8014134:	b00b      	add	sp, #44	; 0x2c
 8014136:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014138:	2001384e 	.word	0x2001384e

0801413c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801413c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801413e:	b08d      	sub	sp, #52	; 0x34
 8014140:	466b      	mov	r3, sp
 8014142:	e883 0006 	stmia.w	r3, {r1, r2}
 8014146:	2300      	movs	r3, #0
 8014148:	9306      	str	r3, [sp, #24]
 801414a:	6803      	ldr	r3, [r0, #0]
 801414c:	f8bd 6000 	ldrh.w	r6, [sp]
 8014150:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014152:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8014156:	2501      	movs	r5, #1
 8014158:	9503      	str	r5, [sp, #12]
 801415a:	4604      	mov	r4, r0
 801415c:	4798      	blx	r3
 801415e:	463a      	mov	r2, r7
 8014160:	4631      	mov	r1, r6
 8014162:	4603      	mov	r3, r0
 8014164:	4620      	mov	r0, r4
 8014166:	f7ff ff8b 	bl	8014080 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801416a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801416c:	9307      	str	r3, [sp, #28]
 801416e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014172:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014176:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801417a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801417e:	4b0f      	ldr	r3, [pc, #60]	; (80141bc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8014180:	9004      	str	r0, [sp, #16]
 8014182:	881b      	ldrh	r3, [r3, #0]
 8014184:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8014188:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801418c:	f7f1 fa50 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8014190:	6803      	ldr	r3, [r0, #0]
 8014192:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014194:	4798      	blx	r3
 8014196:	23ff      	movs	r3, #255	; 0xff
 8014198:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801419c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80141a0:	6860      	ldr	r0, [r4, #4]
 80141a2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80141a6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80141aa:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80141ae:	6803      	ldr	r3, [r0, #0]
 80141b0:	a903      	add	r1, sp, #12
 80141b2:	685b      	ldr	r3, [r3, #4]
 80141b4:	4798      	blx	r3
 80141b6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80141b8:	b00d      	add	sp, #52	; 0x34
 80141ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80141bc:	2001384e 	.word	0x2001384e

080141c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80141c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80141c4:	b08c      	sub	sp, #48	; 0x30
 80141c6:	461e      	mov	r6, r3
 80141c8:	466d      	mov	r5, sp
 80141ca:	2300      	movs	r3, #0
 80141cc:	e885 0006 	stmia.w	r5, {r1, r2}
 80141d0:	9306      	str	r3, [sp, #24]
 80141d2:	6803      	ldr	r3, [r0, #0]
 80141d4:	f8bd 7000 	ldrh.w	r7, [sp]
 80141d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80141da:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80141de:	2501      	movs	r5, #1
 80141e0:	9503      	str	r5, [sp, #12]
 80141e2:	4604      	mov	r4, r0
 80141e4:	4798      	blx	r3
 80141e6:	4642      	mov	r2, r8
 80141e8:	4639      	mov	r1, r7
 80141ea:	4603      	mov	r3, r0
 80141ec:	4620      	mov	r0, r4
 80141ee:	f7ff ff47 	bl	8014080 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80141f2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80141f6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80141fa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80141fe:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014202:	4b11      	ldr	r3, [pc, #68]	; (8014248 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8014204:	9004      	str	r0, [sp, #16]
 8014206:	881b      	ldrh	r3, [r3, #0]
 8014208:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801420c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801420e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8014212:	9607      	str	r6, [sp, #28]
 8014214:	f7f1 fa0c 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8014218:	6803      	ldr	r3, [r0, #0]
 801421a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801421c:	4798      	blx	r3
 801421e:	23ff      	movs	r3, #255	; 0xff
 8014220:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8014224:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8014228:	6860      	ldr	r0, [r4, #4]
 801422a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801422e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8014232:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8014236:	6803      	ldr	r3, [r0, #0]
 8014238:	a903      	add	r1, sp, #12
 801423a:	685b      	ldr	r3, [r3, #4]
 801423c:	4798      	blx	r3
 801423e:	4630      	mov	r0, r6
 8014240:	b00c      	add	sp, #48	; 0x30
 8014242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014246:	bf00      	nop
 8014248:	2001384e 	.word	0x2001384e

0801424c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 801424c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801424e:	b085      	sub	sp, #20
 8014250:	ac02      	add	r4, sp, #8
 8014252:	e884 0006 	stmia.w	r4, {r1, r2}
 8014256:	4605      	mov	r5, r0
 8014258:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801425c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8014260:	f7ff fde6 	bl	8013e30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014264:	463a      	mov	r2, r7
 8014266:	4603      	mov	r3, r0
 8014268:	4631      	mov	r1, r6
 801426a:	4628      	mov	r0, r5
 801426c:	f7ff ff08 	bl	8014080 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8014270:	4a05      	ldr	r2, [pc, #20]	; (8014288 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8014272:	682b      	ldr	r3, [r5, #0]
 8014274:	8812      	ldrh	r2, [r2, #0]
 8014276:	9200      	str	r2, [sp, #0]
 8014278:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801427a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801427e:	4603      	mov	r3, r0
 8014280:	4628      	mov	r0, r5
 8014282:	47b0      	blx	r6
 8014284:	b005      	add	sp, #20
 8014286:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014288:	2001384e 	.word	0x2001384e

0801428c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801428c:	b570      	push	{r4, r5, r6, lr}
 801428e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8014292:	4604      	mov	r4, r0
 8014294:	b19b      	cbz	r3, 80142be <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8014296:	2002      	movs	r0, #2
 8014298:	f7ee fce8 	bl	8002c6c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801429c:	2300      	movs	r3, #0
 801429e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80142a2:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80142a6:	6823      	ldr	r3, [r4, #0]
 80142a8:	4620      	mov	r0, r4
 80142aa:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80142ae:	f7ff fdbf 	bl	8013e30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80142b2:	462b      	mov	r3, r5
 80142b4:	4601      	mov	r1, r0
 80142b6:	4620      	mov	r0, r4
 80142b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142bc:	4718      	bx	r3
 80142be:	bd70      	pop	{r4, r5, r6, pc}

080142c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80142c0:	b538      	push	{r3, r4, r5, lr}
 80142c2:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80142c6:	428b      	cmp	r3, r1
 80142c8:	4604      	mov	r4, r0
 80142ca:	460d      	mov	r5, r1
 80142cc:	d006      	beq.n	80142dc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80142ce:	6803      	ldr	r3, [r0, #0]
 80142d0:	b929      	cbnz	r1, 80142de <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80142d2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80142d6:	4798      	blx	r3
 80142d8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 80142dc:	bd38      	pop	{r3, r4, r5, pc}
 80142de:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80142e2:	e7f8      	b.n	80142d6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080142e4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80142e4:	b510      	push	{r4, lr}
 80142e6:	4b0d      	ldr	r3, [pc, #52]	; (801431c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80142e8:	781b      	ldrb	r3, [r3, #0]
 80142ea:	4604      	mov	r4, r0
 80142ec:	b95b      	cbnz	r3, 8014306 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80142ee:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80142f2:	2b02      	cmp	r3, #2
 80142f4:	d007      	beq.n	8014306 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80142f6:	6840      	ldr	r0, [r0, #4]
 80142f8:	f000 f92c 	bl	8014554 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80142fc:	b118      	cbz	r0, 8014306 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80142fe:	6862      	ldr	r2, [r4, #4]
 8014300:	7a53      	ldrb	r3, [r2, #9]
 8014302:	2b00      	cmp	r3, #0
 8014304:	d0fc      	beq.n	8014300 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8014306:	f7ee fde9 	bl	8002edc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801430a:	4620      	mov	r0, r4
 801430c:	2100      	movs	r1, #0
 801430e:	f7ff ffd7 	bl	80142c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8014312:	4620      	mov	r0, r4
 8014314:	f7ff fd8c 	bl	8013e30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014318:	bd10      	pop	{r4, pc}
 801431a:	bf00      	nop
 801431c:	20013852 	.word	0x20013852

08014320 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8014320:	b570      	push	{r4, r5, r6, lr}
 8014322:	4604      	mov	r4, r0
 8014324:	6803      	ldr	r3, [r0, #0]
 8014326:	b919      	cbnz	r1, 8014330 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8014328:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801432a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801432e:	4718      	bx	r3
 8014330:	2200      	movs	r2, #0
 8014332:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8014336:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 801433a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801433c:	4798      	blx	r3
 801433e:	6863      	ldr	r3, [r4, #4]
 8014340:	2101      	movs	r1, #1
 8014342:	4605      	mov	r5, r0
 8014344:	7299      	strb	r1, [r3, #10]
 8014346:	4620      	mov	r0, r4
 8014348:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 801434c:	f7ff ffb8 	bl	80142c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8014350:	4628      	mov	r0, r5
 8014352:	bd70      	pop	{r4, r5, r6, pc}

08014354 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8014354:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8014358:	1a13      	subs	r3, r2, r0
 801435a:	4258      	negs	r0, r3
 801435c:	4158      	adcs	r0, r3
 801435e:	4770      	bx	lr

08014360 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8014360:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8014364:	1a9b      	subs	r3, r3, r2
 8014366:	2b00      	cmp	r3, #0
 8014368:	bfdc      	itt	le
 801436a:	6882      	ldrle	r2, [r0, #8]
 801436c:	189b      	addle	r3, r3, r2
 801436e:	2b01      	cmp	r3, #1
 8014370:	bfcc      	ite	gt
 8014372:	2000      	movgt	r0, #0
 8014374:	2001      	movle	r0, #1
 8014376:	4770      	bx	lr

08014378 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8014378:	6902      	ldr	r2, [r0, #16]
 801437a:	6843      	ldr	r3, [r0, #4]
 801437c:	2024      	movs	r0, #36	; 0x24
 801437e:	fb00 3002 	mla	r0, r0, r2, r3
 8014382:	4770      	bx	lr

08014384 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8014384:	6803      	ldr	r3, [r0, #0]
 8014386:	691b      	ldr	r3, [r3, #16]
 8014388:	4718      	bx	r3

0801438a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801438a:	b570      	push	{r4, r5, r6, lr}
 801438c:	2301      	movs	r3, #1
 801438e:	7203      	strb	r3, [r0, #8]
 8014390:	4604      	mov	r4, r0
 8014392:	6840      	ldr	r0, [r0, #4]
 8014394:	6803      	ldr	r3, [r0, #0]
 8014396:	699b      	ldr	r3, [r3, #24]
 8014398:	4798      	blx	r3
 801439a:	6803      	ldr	r3, [r0, #0]
 801439c:	2b40      	cmp	r3, #64	; 0x40
 801439e:	4605      	mov	r5, r0
 80143a0:	d00c      	beq.n	80143bc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80143a2:	d810      	bhi.n	80143c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80143a4:	2b04      	cmp	r3, #4
 80143a6:	d01d      	beq.n	80143e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80143a8:	d804      	bhi.n	80143b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80143aa:	2b01      	cmp	r3, #1
 80143ac:	d006      	beq.n	80143bc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80143ae:	2b02      	cmp	r3, #2
 80143b0:	d02c      	beq.n	801440c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80143b2:	bd70      	pop	{r4, r5, r6, pc}
 80143b4:	2b08      	cmp	r3, #8
 80143b6:	d01d      	beq.n	80143f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80143b8:	2b20      	cmp	r3, #32
 80143ba:	d1fa      	bne.n	80143b2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80143bc:	6823      	ldr	r3, [r4, #0]
 80143be:	4620      	mov	r0, r4
 80143c0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80143c2:	4798      	blx	r3
 80143c4:	e013      	b.n	80143ee <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80143c6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80143ca:	d0f7      	beq.n	80143bc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80143cc:	d804      	bhi.n	80143d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80143ce:	2b80      	cmp	r3, #128	; 0x80
 80143d0:	d0f4      	beq.n	80143bc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80143d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80143d6:	e7f0      	b.n	80143ba <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80143d8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80143dc:	d0ee      	beq.n	80143bc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80143de:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80143e2:	e7e5      	b.n	80143b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80143e4:	6823      	ldr	r3, [r4, #0]
 80143e6:	7f01      	ldrb	r1, [r0, #28]
 80143e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80143ea:	4620      	mov	r0, r4
 80143ec:	4798      	blx	r3
 80143ee:	6823      	ldr	r3, [r4, #0]
 80143f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80143f2:	e006      	b.n	8014402 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80143f4:	6823      	ldr	r3, [r4, #0]
 80143f6:	7f01      	ldrb	r1, [r0, #28]
 80143f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80143fa:	4620      	mov	r0, r4
 80143fc:	4798      	blx	r3
 80143fe:	6823      	ldr	r3, [r4, #0]
 8014400:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014402:	4629      	mov	r1, r5
 8014404:	4620      	mov	r0, r4
 8014406:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801440a:	4718      	bx	r3
 801440c:	6823      	ldr	r3, [r4, #0]
 801440e:	4620      	mov	r0, r4
 8014410:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014412:	4798      	blx	r3
 8014414:	e7f3      	b.n	80143fe <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08014416 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8014416:	4770      	bx	lr

08014418 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8014418:	4770      	bx	lr

0801441a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801441a:	4770      	bx	lr

0801441c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801441c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8014420:	1ad2      	subs	r2, r2, r3
 8014422:	2a00      	cmp	r2, #0
 8014424:	b510      	push	{r4, lr}
 8014426:	bfdc      	itt	le
 8014428:	6884      	ldrle	r4, [r0, #8]
 801442a:	1912      	addle	r2, r2, r4
 801442c:	2a01      	cmp	r2, #1
 801442e:	dd16      	ble.n	801445e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8014430:	6842      	ldr	r2, [r0, #4]
 8014432:	2424      	movs	r4, #36	; 0x24
 8014434:	fb04 2303 	mla	r3, r4, r3, r2
 8014438:	f101 0220 	add.w	r2, r1, #32
 801443c:	f851 4b04 	ldr.w	r4, [r1], #4
 8014440:	f843 4b04 	str.w	r4, [r3], #4
 8014444:	4291      	cmp	r1, r2
 8014446:	d1f9      	bne.n	801443c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8014448:	780a      	ldrb	r2, [r1, #0]
 801444a:	701a      	strb	r2, [r3, #0]
 801444c:	68c3      	ldr	r3, [r0, #12]
 801444e:	6882      	ldr	r2, [r0, #8]
 8014450:	f3bf 8f5b 	dmb	ish
 8014454:	3301      	adds	r3, #1
 8014456:	429a      	cmp	r2, r3
 8014458:	bfd8      	it	le
 801445a:	1a9b      	suble	r3, r3, r2
 801445c:	60c3      	str	r3, [r0, #12]
 801445e:	bd10      	pop	{r4, pc}

08014460 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8014460:	6903      	ldr	r3, [r0, #16]
 8014462:	6882      	ldr	r2, [r0, #8]
 8014464:	f3bf 8f5b 	dmb	ish
 8014468:	3301      	adds	r3, #1
 801446a:	429a      	cmp	r2, r3
 801446c:	bfd8      	it	le
 801446e:	1a9b      	suble	r3, r3, r2
 8014470:	6103      	str	r3, [r0, #16]
 8014472:	4770      	bx	lr

08014474 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8014474:	b570      	push	{r4, r5, r6, lr}
 8014476:	4604      	mov	r4, r0
 8014478:	460e      	mov	r6, r1
 801447a:	6860      	ldr	r0, [r4, #4]
 801447c:	6803      	ldr	r3, [r0, #0]
 801447e:	685b      	ldr	r3, [r3, #4]
 8014480:	4798      	blx	r3
 8014482:	2800      	cmp	r0, #0
 8014484:	d1f9      	bne.n	801447a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8014486:	4d0d      	ldr	r5, [pc, #52]	; (80144bc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8014488:	6828      	ldr	r0, [r5, #0]
 801448a:	6803      	ldr	r3, [r0, #0]
 801448c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801448e:	4798      	blx	r3
 8014490:	f7ee fd32 	bl	8002ef8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8014494:	6828      	ldr	r0, [r5, #0]
 8014496:	2101      	movs	r1, #1
 8014498:	f7ff ff12 	bl	80142c0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801449c:	6860      	ldr	r0, [r4, #4]
 801449e:	6803      	ldr	r3, [r0, #0]
 80144a0:	4631      	mov	r1, r6
 80144a2:	689b      	ldr	r3, [r3, #8]
 80144a4:	4798      	blx	r3
 80144a6:	6823      	ldr	r3, [r4, #0]
 80144a8:	4620      	mov	r0, r4
 80144aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80144ac:	4798      	blx	r3
 80144ae:	6828      	ldr	r0, [r5, #0]
 80144b0:	6803      	ldr	r3, [r0, #0]
 80144b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80144b6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80144b8:	4718      	bx	r3
 80144ba:	bf00      	nop
 80144bc:	20013854 	.word	0x20013854

080144c0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80144c0:	b508      	push	{r3, lr}
 80144c2:	f7ee fd0b 	bl	8002edc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80144c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80144ca:	f7ee bd0f 	b.w	8002eec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080144ce <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80144ce:	b510      	push	{r4, lr}
 80144d0:	2114      	movs	r1, #20
 80144d2:	4604      	mov	r4, r0
 80144d4:	f018 fc71 	bl	802cdba <_ZdlPvj>
 80144d8:	4620      	mov	r0, r4
 80144da:	bd10      	pop	{r4, pc}

080144dc <_ZN8touchgfx13DMA_Interface5startEv>:
 80144dc:	b510      	push	{r4, lr}
 80144de:	4604      	mov	r4, r0
 80144e0:	6840      	ldr	r0, [r0, #4]
 80144e2:	6803      	ldr	r3, [r0, #0]
 80144e4:	681b      	ldr	r3, [r3, #0]
 80144e6:	4798      	blx	r3
 80144e8:	b948      	cbnz	r0, 80144fe <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80144ea:	7a63      	ldrb	r3, [r4, #9]
 80144ec:	b13b      	cbz	r3, 80144fe <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80144ee:	7a23      	ldrb	r3, [r4, #8]
 80144f0:	b92b      	cbnz	r3, 80144fe <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80144f2:	6823      	ldr	r3, [r4, #0]
 80144f4:	4620      	mov	r0, r4
 80144f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80144f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80144fc:	4718      	bx	r3
 80144fe:	bd10      	pop	{r4, pc}

08014500 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8014500:	b570      	push	{r4, r5, r6, lr}
 8014502:	4604      	mov	r4, r0
 8014504:	6840      	ldr	r0, [r0, #4]
 8014506:	6803      	ldr	r3, [r0, #0]
 8014508:	681b      	ldr	r3, [r3, #0]
 801450a:	4798      	blx	r3
 801450c:	4605      	mov	r5, r0
 801450e:	b930      	cbnz	r0, 801451e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014510:	7a23      	ldrb	r3, [r4, #8]
 8014512:	b123      	cbz	r3, 801451e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014514:	6860      	ldr	r0, [r4, #4]
 8014516:	6803      	ldr	r3, [r0, #0]
 8014518:	695b      	ldr	r3, [r3, #20]
 801451a:	4798      	blx	r3
 801451c:	7225      	strb	r5, [r4, #8]
 801451e:	6860      	ldr	r0, [r4, #4]
 8014520:	6803      	ldr	r3, [r0, #0]
 8014522:	681b      	ldr	r3, [r3, #0]
 8014524:	4798      	blx	r3
 8014526:	b928      	cbnz	r0, 8014534 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8014528:	6823      	ldr	r3, [r4, #0]
 801452a:	4620      	mov	r0, r4
 801452c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801452e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014532:	4718      	bx	r3
 8014534:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014538:	f7ee bce6 	b.w	8002f08 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0801453c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801453c:	b510      	push	{r4, lr}
 801453e:	4c04      	ldr	r4, [pc, #16]	; (8014550 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8014540:	6082      	str	r2, [r0, #8]
 8014542:	2200      	movs	r2, #0
 8014544:	e9c0 4100 	strd	r4, r1, [r0]
 8014548:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801454c:	bd10      	pop	{r4, pc}
 801454e:	bf00      	nop
 8014550:	08031988 	.word	0x08031988

08014554 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8014554:	6840      	ldr	r0, [r0, #4]
 8014556:	6803      	ldr	r3, [r0, #0]
 8014558:	681b      	ldr	r3, [r3, #0]
 801455a:	4718      	bx	r3

0801455c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801455c:	4b06      	ldr	r3, [pc, #24]	; (8014578 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801455e:	60c1      	str	r1, [r0, #12]
 8014560:	094a      	lsrs	r2, r1, #5
 8014562:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8014566:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801456a:	4313      	orrs	r3, r2
 801456c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8014570:	4319      	orrs	r1, r3
 8014572:	8201      	strh	r1, [r0, #16]
 8014574:	4770      	bx	lr
 8014576:	bf00      	nop
 8014578:	fffff800 	.word	0xfffff800

0801457c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801457c:	f1a0 0008 	sub.w	r0, r0, #8
 8014580:	e7ec      	b.n	801455c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8014582:	bf00      	nop

08014584 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8014584:	b508      	push	{r3, lr}
 8014586:	4b05      	ldr	r3, [pc, #20]	; (801459c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8014588:	6818      	ldr	r0, [r3, #0]
 801458a:	6803      	ldr	r3, [r0, #0]
 801458c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8014590:	4798      	blx	r3
 8014592:	1e43      	subs	r3, r0, #1
 8014594:	4258      	negs	r0, r3
 8014596:	4158      	adcs	r0, r3
 8014598:	bd08      	pop	{r3, pc}
 801459a:	bf00      	nop
 801459c:	20013854 	.word	0x20013854

080145a0 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80145a0:	4770      	bx	lr

080145a2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80145a2:	3808      	subs	r0, #8
 80145a4:	4770      	bx	lr

080145a6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80145a6:	b430      	push	{r4, r5}
 80145a8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80145ac:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80145b0:	8a02      	ldrh	r2, [r0, #16]
 80145b2:	9202      	str	r2, [sp, #8]
 80145b4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80145b8:	68c2      	ldr	r2, [r0, #12]
 80145ba:	4629      	mov	r1, r5
 80145bc:	4620      	mov	r0, r4
 80145be:	bc30      	pop	{r4, r5}
 80145c0:	f7ee bf66 	b.w	8003490 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080145c4 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80145c4:	f7ee bf62 	b.w	800348c <_ZN8touchgfx5paint8tearDownEv>

080145c8 <_ZN8touchgfx13PainterRGB565D0Ev>:
 80145c8:	b510      	push	{r4, lr}
 80145ca:	2114      	movs	r1, #20
 80145cc:	4604      	mov	r4, r0
 80145ce:	f018 fbf4 	bl	802cdba <_ZdlPvj>
 80145d2:	4620      	mov	r0, r4
 80145d4:	bd10      	pop	{r4, pc}

080145d6 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80145d6:	f1a0 0008 	sub.w	r0, r0, #8
 80145da:	e7f5      	b.n	80145c8 <_ZN8touchgfx13PainterRGB565D0Ev>

080145dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80145dc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80145de:	6803      	ldr	r3, [r0, #0]
 80145e0:	460d      	mov	r5, r1
 80145e2:	4604      	mov	r4, r0
 80145e4:	4601      	mov	r1, r0
 80145e6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80145e8:	a802      	add	r0, sp, #8
 80145ea:	4798      	blx	r3
 80145ec:	6828      	ldr	r0, [r5, #0]
 80145ee:	6869      	ldr	r1, [r5, #4]
 80145f0:	466b      	mov	r3, sp
 80145f2:	c303      	stmia	r3!, {r0, r1}
 80145f4:	4668      	mov	r0, sp
 80145f6:	4619      	mov	r1, r3
 80145f8:	f7fe fb30 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 80145fc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80145fe:	b188      	cbz	r0, 8014624 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014600:	6803      	ldr	r3, [r0, #0]
 8014602:	1d21      	adds	r1, r4, #4
 8014604:	68db      	ldr	r3, [r3, #12]
 8014606:	4798      	blx	r3
 8014608:	b160      	cbz	r0, 8014624 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801460a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801460e:	2b00      	cmp	r3, #0
 8014610:	dd08      	ble.n	8014624 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014612:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8014616:	2d00      	cmp	r5, #0
 8014618:	dd04      	ble.n	8014624 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801461a:	4a2b      	ldr	r2, [pc, #172]	; (80146c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 801461c:	7812      	ldrb	r2, [r2, #0]
 801461e:	b11a      	cbz	r2, 8014628 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8014620:	2a01      	cmp	r2, #1
 8014622:	d029      	beq.n	8014678 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8014624:	b004      	add	sp, #16
 8014626:	bd70      	pop	{r4, r5, r6, pc}
 8014628:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801462c:	441d      	add	r5, r3
 801462e:	b2ad      	uxth	r5, r5
 8014630:	b22e      	sxth	r6, r5
 8014632:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8014636:	42b3      	cmp	r3, r6
 8014638:	daf4      	bge.n	8014624 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801463a:	6823      	ldr	r3, [r4, #0]
 801463c:	4669      	mov	r1, sp
 801463e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014640:	4620      	mov	r0, r4
 8014642:	4798      	blx	r3
 8014644:	b940      	cbnz	r0, 8014658 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8014646:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801464a:	2b01      	cmp	r3, #1
 801464c:	d004      	beq.n	8014658 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801464e:	3301      	adds	r3, #1
 8014650:	105b      	asrs	r3, r3, #1
 8014652:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014656:	e7f0      	b.n	801463a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8014658:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801465c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014660:	4413      	add	r3, r2
 8014662:	b29b      	uxth	r3, r3
 8014664:	441a      	add	r2, r3
 8014666:	b212      	sxth	r2, r2
 8014668:	4296      	cmp	r6, r2
 801466a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801466e:	dae0      	bge.n	8014632 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014670:	1aeb      	subs	r3, r5, r3
 8014672:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014676:	e7dc      	b.n	8014632 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014678:	f8bd 5000 	ldrh.w	r5, [sp]
 801467c:	441d      	add	r5, r3
 801467e:	b2ad      	uxth	r5, r5
 8014680:	b22e      	sxth	r6, r5
 8014682:	f9bd 3000 	ldrsh.w	r3, [sp]
 8014686:	42b3      	cmp	r3, r6
 8014688:	dacc      	bge.n	8014624 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801468a:	6823      	ldr	r3, [r4, #0]
 801468c:	4669      	mov	r1, sp
 801468e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014690:	4620      	mov	r0, r4
 8014692:	4798      	blx	r3
 8014694:	b940      	cbnz	r0, 80146a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014696:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801469a:	2b01      	cmp	r3, #1
 801469c:	d004      	beq.n	80146a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801469e:	3301      	adds	r3, #1
 80146a0:	105b      	asrs	r3, r3, #1
 80146a2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80146a6:	e7f0      	b.n	801468a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80146a8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80146ac:	f8bd 3000 	ldrh.w	r3, [sp]
 80146b0:	4413      	add	r3, r2
 80146b2:	b29b      	uxth	r3, r3
 80146b4:	441a      	add	r2, r3
 80146b6:	b212      	sxth	r2, r2
 80146b8:	4296      	cmp	r6, r2
 80146ba:	f8ad 3000 	strh.w	r3, [sp]
 80146be:	dae0      	bge.n	8014682 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80146c0:	1aeb      	subs	r3, r5, r3
 80146c2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80146c6:	e7dc      	b.n	8014682 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80146c8:	2001384c 	.word	0x2001384c

080146cc <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80146cc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80146ce:	6803      	ldr	r3, [r0, #0]
 80146d0:	4604      	mov	r4, r0
 80146d2:	4601      	mov	r1, r0
 80146d4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80146d6:	4668      	mov	r0, sp
 80146d8:	4798      	blx	r3
 80146da:	2100      	movs	r1, #0
 80146dc:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80146e0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80146e4:	9102      	str	r1, [sp, #8]
 80146e6:	4668      	mov	r0, sp
 80146e8:	a902      	add	r1, sp, #8
 80146ea:	f8ad 200c 	strh.w	r2, [sp, #12]
 80146ee:	f8ad 300e 	strh.w	r3, [sp, #14]
 80146f2:	f7fe fab3 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 80146f6:	6823      	ldr	r3, [r4, #0]
 80146f8:	4669      	mov	r1, sp
 80146fa:	691b      	ldr	r3, [r3, #16]
 80146fc:	4620      	mov	r0, r4
 80146fe:	4798      	blx	r3
 8014700:	b004      	add	sp, #16
 8014702:	bd10      	pop	{r4, pc}

08014704 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8014704:	2101      	movs	r1, #1
 8014706:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801470a:	490b      	ldr	r1, [pc, #44]	; (8014738 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 801470c:	6001      	str	r1, [r0, #0]
 801470e:	2200      	movs	r2, #0
 8014710:	21ff      	movs	r1, #255	; 0xff
 8014712:	8082      	strh	r2, [r0, #4]
 8014714:	80c2      	strh	r2, [r0, #6]
 8014716:	8102      	strh	r2, [r0, #8]
 8014718:	8142      	strh	r2, [r0, #10]
 801471a:	8182      	strh	r2, [r0, #12]
 801471c:	81c2      	strh	r2, [r0, #14]
 801471e:	8202      	strh	r2, [r0, #16]
 8014720:	8242      	strh	r2, [r0, #18]
 8014722:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014726:	61c2      	str	r2, [r0, #28]
 8014728:	8402      	strh	r2, [r0, #32]
 801472a:	8442      	strh	r2, [r0, #34]	; 0x22
 801472c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8014730:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8014734:	6282      	str	r2, [r0, #40]	; 0x28
 8014736:	4770      	bx	lr
 8014738:	080319e4 	.word	0x080319e4

0801473c <_ZNK8touchgfx4Line14getMinimalRectEv>:
 801473c:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8014740:	4602      	mov	r2, r0
 8014742:	cb03      	ldmia	r3!, {r0, r1}
 8014744:	6010      	str	r0, [r2, #0]
 8014746:	6051      	str	r1, [r2, #4]
 8014748:	4610      	mov	r0, r2
 801474a:	4770      	bx	lr

0801474c <_ZN8touchgfx4LineD1Ev>:
 801474c:	4770      	bx	lr

0801474e <_ZN8touchgfx4LineD0Ev>:
 801474e:	b510      	push	{r4, lr}
 8014750:	2170      	movs	r1, #112	; 0x70
 8014752:	4604      	mov	r4, r0
 8014754:	f018 fb31 	bl	802cdba <_ZdlPvj>
 8014758:	4620      	mov	r0, r4
 801475a:	bd10      	pop	{r4, pc}

0801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 801475c:	b507      	push	{r0, r1, r2, lr}
 801475e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8014762:	ab01      	add	r3, sp, #4
 8014764:	6809      	ldr	r1, [r1, #0]
 8014766:	6800      	ldr	r0, [r0, #0]
 8014768:	f005 fc80 	bl	801a06c <_ZN8touchgfx6muldivElllRl>
 801476c:	b003      	add	sp, #12
 801476e:	f85d fb04 	ldr.w	pc, [sp], #4

08014772 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8014772:	6800      	ldr	r0, [r0, #0]
 8014774:	2800      	cmp	r0, #0
 8014776:	bfb9      	ittee	lt
 8014778:	2320      	movlt	r3, #32
 801477a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801477e:	301f      	addge	r0, #31
 8014780:	1140      	asrge	r0, r0, #5
 8014782:	4770      	bx	lr

08014784 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8014784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014788:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801478c:	b089      	sub	sp, #36	; 0x24
 801478e:	4604      	mov	r4, r0
 8014790:	b353      	cbz	r3, 80147e8 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8014792:	6803      	ldr	r3, [r0, #0]
 8014794:	4601      	mov	r1, r0
 8014796:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014798:	a802      	add	r0, sp, #8
 801479a:	4798      	blx	r3
 801479c:	2220      	movs	r2, #32
 801479e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 80147a2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80147a4:	fb9a f0f2 	sdiv	r0, sl, r2
 80147a8:	fb91 f5f2 	sdiv	r5, r1, r2
 80147ac:	1b40      	subs	r0, r0, r5
 80147ae:	2800      	cmp	r0, #0
 80147b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80147b2:	fb93 f6f2 	sdiv	r6, r3, r2
 80147b6:	bfb8      	it	lt
 80147b8:	4240      	neglt	r0, r0
 80147ba:	0076      	lsls	r6, r6, #1
 80147bc:	4286      	cmp	r6, r0
 80147be:	f8d4 b000 	ldr.w	fp, [r4]
 80147c2:	dc0c      	bgt.n	80147de <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 80147c4:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80147c6:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 80147ca:	fb95 f0f2 	sdiv	r0, r5, r2
 80147ce:	fb98 f7f2 	sdiv	r7, r8, r2
 80147d2:	1bc0      	subs	r0, r0, r7
 80147d4:	2800      	cmp	r0, #0
 80147d6:	bfb8      	it	lt
 80147d8:	4240      	neglt	r0, r0
 80147da:	4286      	cmp	r6, r0
 80147dc:	dd07      	ble.n	80147ee <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 80147de:	f8db 3010 	ldr.w	r3, [fp, #16]
 80147e2:	a902      	add	r1, sp, #8
 80147e4:	4620      	mov	r0, r4
 80147e6:	4798      	blx	r3
 80147e8:	b009      	add	sp, #36	; 0x24
 80147ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147ee:	3301      	adds	r3, #1
 80147f0:	2002      	movs	r0, #2
 80147f2:	f10d 0920 	add.w	r9, sp, #32
 80147f6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80147fa:	4103      	asrs	r3, r0
 80147fc:	f849 3d08 	str.w	r3, [r9, #-8]!
 8014800:	eb01 060a 	add.w	r6, r1, sl
 8014804:	eb08 0705 	add.w	r7, r8, r5
 8014808:	fb96 f6f0 	sdiv	r6, r6, r0
 801480c:	fb97 f7f0 	sdiv	r7, r7, r0
 8014810:	4648      	mov	r0, r9
 8014812:	9101      	str	r1, [sp, #4]
 8014814:	b236      	sxth	r6, r6
 8014816:	b23f      	sxth	r7, r7
 8014818:	fb96 f6f2 	sdiv	r6, r6, r2
 801481c:	fb97 f7f2 	sdiv	r7, r7, r2
 8014820:	f7ff ffa7 	bl	8014772 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014824:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014828:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 801482c:	9901      	ldr	r1, [sp, #4]
 801482e:	4293      	cmp	r3, r2
 8014830:	fa1f fe87 	uxth.w	lr, r7
 8014834:	fa1f fc86 	uxth.w	ip, r6
 8014838:	eba1 0a0a 	sub.w	sl, r1, sl
 801483c:	b280      	uxth	r0, r0
 801483e:	da54      	bge.n	80148ea <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8014840:	ebac 0100 	sub.w	r1, ip, r0
 8014844:	b289      	uxth	r1, r1
 8014846:	4460      	add	r0, ip
 8014848:	f1ba 0f00 	cmp.w	sl, #0
 801484c:	b20e      	sxth	r6, r1
 801484e:	b280      	uxth	r0, r0
 8014850:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8014854:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8014858:	da29      	bge.n	80148ae <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 801485a:	eba8 0505 	sub.w	r5, r8, r5
 801485e:	2d00      	cmp	r5, #0
 8014860:	da2a      	bge.n	80148b8 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014862:	fa1f f88a 	uxth.w	r8, sl
 8014866:	eba0 0008 	sub.w	r0, r0, r8
 801486a:	fa1f f58c 	uxth.w	r5, ip
 801486e:	4443      	add	r3, r8
 8014870:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014874:	1a59      	subs	r1, r3, r1
 8014876:	ebae 0005 	sub.w	r0, lr, r5
 801487a:	f8ad a010 	strh.w	sl, [sp, #16]
 801487e:	f8ad c012 	strh.w	ip, [sp, #18]
 8014882:	f8ad 0016 	strh.w	r0, [sp, #22]
 8014886:	f8ad 6018 	strh.w	r6, [sp, #24]
 801488a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801488e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014892:	442a      	add	r2, r5
 8014894:	eba2 0e0e 	sub.w	lr, r2, lr
 8014898:	f8ad e01e 	strh.w	lr, [sp, #30]
 801489c:	f8db 3010 	ldr.w	r3, [fp, #16]
 80148a0:	a904      	add	r1, sp, #16
 80148a2:	4620      	mov	r0, r4
 80148a4:	4798      	blx	r3
 80148a6:	6823      	ldr	r3, [r4, #0]
 80148a8:	4649      	mov	r1, r9
 80148aa:	691b      	ldr	r3, [r3, #16]
 80148ac:	e79a      	b.n	80147e4 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 80148ae:	d003      	beq.n	80148b8 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80148b0:	eba8 0505 	sub.w	r5, r8, r5
 80148b4:	2d00      	cmp	r5, #0
 80148b6:	dcd4      	bgt.n	8014862 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 80148b8:	fa1f f88a 	uxth.w	r8, sl
 80148bc:	4443      	add	r3, r8
 80148be:	fa1f f58c 	uxth.w	r5, ip
 80148c2:	1a59      	subs	r1, r3, r1
 80148c4:	eba0 0008 	sub.w	r0, r0, r8
 80148c8:	ebae 0305 	sub.w	r3, lr, r5
 80148cc:	f8ad 6010 	strh.w	r6, [sp, #16]
 80148d0:	f8ad c012 	strh.w	ip, [sp, #18]
 80148d4:	f8ad 1014 	strh.w	r1, [sp, #20]
 80148d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80148dc:	f8ad a018 	strh.w	sl, [sp, #24]
 80148e0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80148e4:	f8ad 001c 	strh.w	r0, [sp, #28]
 80148e8:	e7d3      	b.n	8014892 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 80148ea:	ebae 0100 	sub.w	r1, lr, r0
 80148ee:	b289      	uxth	r1, r1
 80148f0:	4470      	add	r0, lr
 80148f2:	f1ba 0f00 	cmp.w	sl, #0
 80148f6:	b20f      	sxth	r7, r1
 80148f8:	b280      	uxth	r0, r0
 80148fa:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 80148fe:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8014902:	da20      	bge.n	8014946 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8014904:	eba8 0505 	sub.w	r5, r8, r5
 8014908:	2d00      	cmp	r5, #0
 801490a:	da21      	bge.n	8014950 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 801490c:	fa1f f88e 	uxth.w	r8, lr
 8014910:	fa1f f58a 	uxth.w	r5, sl
 8014914:	4443      	add	r3, r8
 8014916:	442a      	add	r2, r5
 8014918:	f8ad e010 	strh.w	lr, [sp, #16]
 801491c:	1b40      	subs	r0, r0, r5
 801491e:	ebac 0e08 	sub.w	lr, ip, r8
 8014922:	1a51      	subs	r1, r2, r1
 8014924:	eba3 0c0c 	sub.w	ip, r3, ip
 8014928:	f8ad a012 	strh.w	sl, [sp, #18]
 801492c:	f8ad e014 	strh.w	lr, [sp, #20]
 8014930:	f8ad 0016 	strh.w	r0, [sp, #22]
 8014934:	f8ad 6018 	strh.w	r6, [sp, #24]
 8014938:	f8ad 701a 	strh.w	r7, [sp, #26]
 801493c:	f8ad c01c 	strh.w	ip, [sp, #28]
 8014940:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014944:	e7aa      	b.n	801489c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8014946:	d003      	beq.n	8014950 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8014948:	eba8 0505 	sub.w	r5, r8, r5
 801494c:	2d00      	cmp	r5, #0
 801494e:	dcdd      	bgt.n	801490c <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8014950:	fa1f f58e 	uxth.w	r5, lr
 8014954:	fa1f f88a 	uxth.w	r8, sl
 8014958:	4442      	add	r2, r8
 801495a:	442b      	add	r3, r5
 801495c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8014960:	1a51      	subs	r1, r2, r1
 8014962:	ebac 0705 	sub.w	r7, ip, r5
 8014966:	eba0 0008 	sub.w	r0, r0, r8
 801496a:	eba3 0c0c 	sub.w	ip, r3, ip
 801496e:	f8ad e010 	strh.w	lr, [sp, #16]
 8014972:	f8ad 7014 	strh.w	r7, [sp, #20]
 8014976:	f8ad 1016 	strh.w	r1, [sp, #22]
 801497a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801497e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8014982:	f8ad c01c 	strh.w	ip, [sp, #28]
 8014986:	f8ad 001e 	strh.w	r0, [sp, #30]
 801498a:	e787      	b.n	801489c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801498c <_ZN8touchgfx7CWRUtil4sineEi>:
 801498c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8014990:	fb90 f2f3 	sdiv	r2, r0, r3
 8014994:	fb02 0013 	mls	r0, r2, r3, r0
 8014998:	2800      	cmp	r0, #0
 801499a:	bfb8      	it	lt
 801499c:	18c0      	addlt	r0, r0, r3
 801499e:	285a      	cmp	r0, #90	; 0x5a
 80149a0:	4b09      	ldr	r3, [pc, #36]	; (80149c8 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80149a2:	dc02      	bgt.n	80149aa <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80149a4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80149a8:	4770      	bx	lr
 80149aa:	28b4      	cmp	r0, #180	; 0xb4
 80149ac:	dc02      	bgt.n	80149b4 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 80149ae:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 80149b2:	e7f7      	b.n	80149a4 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 80149b4:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 80149b8:	bfd4      	ite	le
 80149ba:	38b4      	suble	r0, #180	; 0xb4
 80149bc:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 80149c0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80149c4:	4240      	negs	r0, r0
 80149c6:	4770      	bx	lr
 80149c8:	08031ab0 	.word	0x08031ab0

080149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80149cc:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80149d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80149d2:	fb90 f2f3 	sdiv	r2, r0, r3
 80149d6:	fb02 0013 	mls	r0, r2, r3, r0
 80149da:	2800      	cmp	r0, #0
 80149dc:	bfb8      	it	lt
 80149de:	18c0      	addlt	r0, r0, r3
 80149e0:	1144      	asrs	r4, r0, #5
 80149e2:	f000 061f 	and.w	r6, r0, #31
 80149e6:	4620      	mov	r0, r4
 80149e8:	f7ff ffd0 	bl	801498c <_ZN8touchgfx7CWRUtil4sineEi>
 80149ec:	4605      	mov	r5, r0
 80149ee:	b90e      	cbnz	r6, 80149f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80149f0:	b002      	add	sp, #8
 80149f2:	bd70      	pop	{r4, r5, r6, pc}
 80149f4:	1c60      	adds	r0, r4, #1
 80149f6:	f7ff ffc9 	bl	801498c <_ZN8touchgfx7CWRUtil4sineEi>
 80149fa:	ab01      	add	r3, sp, #4
 80149fc:	2220      	movs	r2, #32
 80149fe:	4631      	mov	r1, r6
 8014a00:	1b40      	subs	r0, r0, r5
 8014a02:	f005 fb33 	bl	801a06c <_ZN8touchgfx6muldivElllRl>
 8014a06:	4428      	add	r0, r5
 8014a08:	e7f2      	b.n	80149f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08014a0a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8014a0a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8014a0e:	bf2c      	ite	cs
 8014a10:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8014a14:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8014a18:	2300      	movs	r3, #0
 8014a1a:	1899      	adds	r1, r3, r2
 8014a1c:	4288      	cmp	r0, r1
 8014a1e:	bf24      	itt	cs
 8014a20:	1853      	addcs	r3, r2, r1
 8014a22:	1a40      	subcs	r0, r0, r1
 8014a24:	0892      	lsrs	r2, r2, #2
 8014a26:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8014a2a:	d1f6      	bne.n	8014a1a <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8014a2c:	4618      	mov	r0, r3
 8014a2e:	4770      	bx	lr

08014a30 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8014a30:	b510      	push	{r4, lr}
 8014a32:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8014a36:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8014a3a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8014a3e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8014a42:	13a4      	asrs	r4, r4, #14
 8014a44:	139b      	asrs	r3, r3, #14
 8014a46:	429c      	cmp	r4, r3
 8014a48:	bfb8      	it	lt
 8014a4a:	461c      	movlt	r4, r3
 8014a4c:	2c01      	cmp	r4, #1
 8014a4e:	dd07      	ble.n	8014a60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8014a50:	fb91 f1f4 	sdiv	r1, r1, r4
 8014a54:	fb90 f0f4 	sdiv	r0, r0, r4
 8014a58:	f7ff ffea 	bl	8014a30 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014a5c:	4360      	muls	r0, r4
 8014a5e:	bd10      	pop	{r4, pc}
 8014a60:	4340      	muls	r0, r0
 8014a62:	fb01 0001 	mla	r0, r1, r1, r0
 8014a66:	f7ff ffd0 	bl	8014a0a <_ZN8touchgfx7CWRUtil5isqrtEm>
 8014a6a:	e7f8      	b.n	8014a5e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08014a6c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8014a6c:	2800      	cmp	r0, #0
 8014a6e:	b508      	push	{r3, lr}
 8014a70:	da05      	bge.n	8014a7e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8014a72:	4240      	negs	r0, r0
 8014a74:	f7ff fffa 	bl	8014a6c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014a78:	4240      	negs	r0, r0
 8014a7a:	b240      	sxtb	r0, r0
 8014a7c:	bd08      	pop	{r3, pc}
 8014a7e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8014a82:	dc11      	bgt.n	8014aa8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8014a84:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8014a88:	dd09      	ble.n	8014a9e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8014a8a:	4340      	muls	r0, r0
 8014a8c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8014a90:	f7ff ffbb 	bl	8014a0a <_ZN8touchgfx7CWRUtil5isqrtEm>
 8014a94:	f7ff ffea 	bl	8014a6c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014a98:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8014a9c:	e7ed      	b.n	8014a7a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8014a9e:	3003      	adds	r0, #3
 8014aa0:	10c0      	asrs	r0, r0, #3
 8014aa2:	4b02      	ldr	r3, [pc, #8]	; (8014aac <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8014aa4:	5618      	ldrsb	r0, [r3, r0]
 8014aa6:	e7e9      	b.n	8014a7c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8014aa8:	2000      	movs	r0, #0
 8014aaa:	e7e7      	b.n	8014a7c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8014aac:	08031a54 	.word	0x08031a54

08014ab0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8014ab0:	4281      	cmp	r1, r0
 8014ab2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014ab4:	460c      	mov	r4, r1
 8014ab6:	4615      	mov	r5, r2
 8014ab8:	dd07      	ble.n	8014aca <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8014aba:	4601      	mov	r1, r0
 8014abc:	4620      	mov	r0, r4
 8014abe:	f7ff fff7 	bl	8014ab0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014ac2:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8014ac6:	b003      	add	sp, #12
 8014ac8:	bd30      	pop	{r4, r5, pc}
 8014aca:	f7ff ffb1 	bl	8014a30 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014ace:	6028      	str	r0, [r5, #0]
 8014ad0:	2800      	cmp	r0, #0
 8014ad2:	d0f8      	beq.n	8014ac6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8014ad4:	4602      	mov	r2, r0
 8014ad6:	ab01      	add	r3, sp, #4
 8014ad8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8014adc:	4620      	mov	r0, r4
 8014ade:	f005 fac5 	bl	801a06c <_ZN8touchgfx6muldivElllRl>
 8014ae2:	f7ff ffc3 	bl	8014a6c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014ae6:	e7ee      	b.n	8014ac6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08014ae8 <_ZN8touchgfx4LineC1Ev>:
 8014ae8:	b510      	push	{r4, lr}
 8014aea:	4604      	mov	r4, r0
 8014aec:	f7ff fe0a 	bl	8014704 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8014af0:	4b0c      	ldr	r3, [pc, #48]	; (8014b24 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8014af2:	6023      	str	r3, [r4, #0]
 8014af4:	2220      	movs	r2, #32
 8014af6:	2300      	movs	r3, #0
 8014af8:	63e2      	str	r2, [r4, #60]	; 0x3c
 8014afa:	2212      	movs	r2, #18
 8014afc:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8014b00:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8014b04:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8014b08:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8014b0c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8014b10:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8014b14:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8014b18:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8014b1c:	66e2      	str	r2, [r4, #108]	; 0x6c
 8014b1e:	60a3      	str	r3, [r4, #8]
 8014b20:	4620      	mov	r0, r4
 8014b22:	bd10      	pop	{r4, pc}
 8014b24:	08031b70 	.word	0x08031b70

08014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8014b28:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8014b2c:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8014b2e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014b30:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8014b32:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8014b34:	1aff      	subs	r7, r7, r3
 8014b36:	4604      	mov	r4, r0
 8014b38:	eba5 0502 	sub.w	r5, r5, r2
 8014b3c:	d142      	bne.n	8014bc4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8014b3e:	b955      	cbnz	r5, 8014b56 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8014b40:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8014b44:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8014b48:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8014b4c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8014b50:	b002      	add	sp, #8
 8014b52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014b56:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8014b5a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8014b5e:	4629      	mov	r1, r5
 8014b60:	4642      	mov	r2, r8
 8014b62:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014b64:	f005 faa1 	bl	801a0aa <_ZN8touchgfx6muldivElll>
 8014b68:	2502      	movs	r5, #2
 8014b6a:	4642      	mov	r2, r8
 8014b6c:	fb90 f6f5 	sdiv	r6, r0, r5
 8014b70:	4639      	mov	r1, r7
 8014b72:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014b74:	f005 fa99 	bl	801a0aa <_ZN8touchgfx6muldivElll>
 8014b78:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8014b7c:	fb90 f5f5 	sdiv	r5, r0, r5
 8014b80:	f1b9 0f00 	cmp.w	r9, #0
 8014b84:	d067      	beq.n	8014c56 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8014b86:	f1b9 0f02 	cmp.w	r9, #2
 8014b8a:	d878      	bhi.n	8014c7e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8014b8c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014b8e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014b90:	1b93      	subs	r3, r2, r6
 8014b92:	1b5b      	subs	r3, r3, r5
 8014b94:	6463      	str	r3, [r4, #68]	; 0x44
 8014b96:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014b98:	18e9      	adds	r1, r5, r3
 8014b9a:	1b89      	subs	r1, r1, r6
 8014b9c:	6561      	str	r1, [r4, #84]	; 0x54
 8014b9e:	1b81      	subs	r1, r0, r6
 8014ba0:	4429      	add	r1, r5
 8014ba2:	64a1      	str	r1, [r4, #72]	; 0x48
 8014ba4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014ba6:	4430      	add	r0, r6
 8014ba8:	186f      	adds	r7, r5, r1
 8014baa:	4432      	add	r2, r6
 8014bac:	1b49      	subs	r1, r1, r5
 8014bae:	4437      	add	r7, r6
 8014bb0:	4428      	add	r0, r5
 8014bb2:	4431      	add	r1, r6
 8014bb4:	1b52      	subs	r2, r2, r5
 8014bb6:	1b5b      	subs	r3, r3, r5
 8014bb8:	65a7      	str	r7, [r4, #88]	; 0x58
 8014bba:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014bbc:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014bbe:	6522      	str	r2, [r4, #80]	; 0x50
 8014bc0:	1b9b      	subs	r3, r3, r6
 8014bc2:	e05b      	b.n	8014c7c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8014bc4:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8014bc8:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8014bcc:	2d00      	cmp	r5, #0
 8014bce:	d0c6      	beq.n	8014b5e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014bd0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8014bd4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8014bd8:	fb93 f2f8 	sdiv	r2, r3, r8
 8014bdc:	fb08 3312 	mls	r3, r8, r2, r3
 8014be0:	b353      	cbz	r3, 8014c38 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8014be2:	fb98 f2f3 	sdiv	r2, r8, r3
 8014be6:	fb03 8812 	mls	r8, r3, r2, r8
 8014bea:	f1b8 0f00 	cmp.w	r8, #0
 8014bee:	d1f3      	bne.n	8014bd8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8014bf0:	2b01      	cmp	r3, #1
 8014bf2:	bf1c      	itt	ne
 8014bf4:	fb95 f5f3 	sdivne	r5, r5, r3
 8014bf8:	fb97 f7f3 	sdivne	r7, r7, r3
 8014bfc:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8014c00:	f24b 5104 	movw	r1, #46340	; 0xb504
 8014c04:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8014c08:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8014c0c:	428b      	cmp	r3, r1
 8014c0e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8014c12:	4608      	mov	r0, r1
 8014c14:	dd01      	ble.n	8014c1a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8014c16:	428a      	cmp	r2, r1
 8014c18:	dc10      	bgt.n	8014c3c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8014c1a:	fb90 f3f3 	sdiv	r3, r0, r3
 8014c1e:	fb90 f2f2 	sdiv	r2, r0, r2
 8014c22:	4293      	cmp	r3, r2
 8014c24:	bfa8      	it	ge
 8014c26:	4613      	movge	r3, r2
 8014c28:	435f      	muls	r7, r3
 8014c2a:	435d      	muls	r5, r3
 8014c2c:	4629      	mov	r1, r5
 8014c2e:	4638      	mov	r0, r7
 8014c30:	f7ff fefe 	bl	8014a30 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014c34:	4680      	mov	r8, r0
 8014c36:	e792      	b.n	8014b5e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014c38:	4643      	mov	r3, r8
 8014c3a:	e7d9      	b.n	8014bf0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8014c3c:	fb93 f3f1 	sdiv	r3, r3, r1
 8014c40:	fb92 f2f1 	sdiv	r2, r2, r1
 8014c44:	4293      	cmp	r3, r2
 8014c46:	bfcc      	ite	gt
 8014c48:	3301      	addgt	r3, #1
 8014c4a:	1c53      	addle	r3, r2, #1
 8014c4c:	fb97 f7f3 	sdiv	r7, r7, r3
 8014c50:	fb95 f5f3 	sdiv	r5, r5, r3
 8014c54:	e7ea      	b.n	8014c2c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8014c56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014c58:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014c5a:	1b93      	subs	r3, r2, r6
 8014c5c:	6463      	str	r3, [r4, #68]	; 0x44
 8014c5e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014c60:	18e9      	adds	r1, r5, r3
 8014c62:	6561      	str	r1, [r4, #84]	; 0x54
 8014c64:	1b81      	subs	r1, r0, r6
 8014c66:	64a1      	str	r1, [r4, #72]	; 0x48
 8014c68:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014c6a:	4430      	add	r0, r6
 8014c6c:	186f      	adds	r7, r5, r1
 8014c6e:	4432      	add	r2, r6
 8014c70:	1b49      	subs	r1, r1, r5
 8014c72:	65a7      	str	r7, [r4, #88]	; 0x58
 8014c74:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014c76:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014c78:	6522      	str	r2, [r4, #80]	; 0x50
 8014c7a:	1b5b      	subs	r3, r3, r5
 8014c7c:	6623      	str	r3, [r4, #96]	; 0x60
 8014c7e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8014c80:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8014c82:	9200      	str	r2, [sp, #0]
 8014c84:	9301      	str	r3, [sp, #4]
 8014c86:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8014c8a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8014c8e:	680f      	ldr	r7, [r1, #0]
 8014c90:	9800      	ldr	r0, [sp, #0]
 8014c92:	42ba      	cmp	r2, r7
 8014c94:	bfa8      	it	ge
 8014c96:	463a      	movge	r2, r7
 8014c98:	4287      	cmp	r7, r0
 8014c9a:	bfc8      	it	gt
 8014c9c:	9700      	strgt	r7, [sp, #0]
 8014c9e:	690f      	ldr	r7, [r1, #16]
 8014ca0:	9801      	ldr	r0, [sp, #4]
 8014ca2:	42bb      	cmp	r3, r7
 8014ca4:	bfa8      	it	ge
 8014ca6:	463b      	movge	r3, r7
 8014ca8:	3104      	adds	r1, #4
 8014caa:	4287      	cmp	r7, r0
 8014cac:	bfc8      	it	gt
 8014cae:	9701      	strgt	r7, [sp, #4]
 8014cb0:	458c      	cmp	ip, r1
 8014cb2:	d1ec      	bne.n	8014c8e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8014cb4:	4668      	mov	r0, sp
 8014cb6:	2720      	movs	r7, #32
 8014cb8:	fb92 f8f7 	sdiv	r8, r2, r7
 8014cbc:	fb93 f7f7 	sdiv	r7, r3, r7
 8014cc0:	f7ff fd57 	bl	8014772 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014cc4:	4682      	mov	sl, r0
 8014cc6:	a801      	add	r0, sp, #4
 8014cc8:	f7ff fd53 	bl	8014772 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014ccc:	ebaa 0208 	sub.w	r2, sl, r8
 8014cd0:	1bc0      	subs	r0, r0, r7
 8014cd2:	f1b9 0f01 	cmp.w	r9, #1
 8014cd6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8014cda:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8014cde:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8014ce2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8014ce6:	f47f af33 	bne.w	8014b50 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8014cea:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8014cec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014cee:	1b83      	subs	r3, r0, r6
 8014cf0:	6463      	str	r3, [r4, #68]	; 0x44
 8014cf2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014cf4:	18ea      	adds	r2, r5, r3
 8014cf6:	6562      	str	r2, [r4, #84]	; 0x54
 8014cf8:	1b8a      	subs	r2, r1, r6
 8014cfa:	64a2      	str	r2, [r4, #72]	; 0x48
 8014cfc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014cfe:	4431      	add	r1, r6
 8014d00:	18af      	adds	r7, r5, r2
 8014d02:	4406      	add	r6, r0
 8014d04:	1b52      	subs	r2, r2, r5
 8014d06:	1b5d      	subs	r5, r3, r5
 8014d08:	65a7      	str	r7, [r4, #88]	; 0x58
 8014d0a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8014d0c:	65e2      	str	r2, [r4, #92]	; 0x5c
 8014d0e:	6526      	str	r6, [r4, #80]	; 0x50
 8014d10:	6625      	str	r5, [r4, #96]	; 0x60
 8014d12:	e71d      	b.n	8014b50 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08014d14 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8014d14:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014d16:	428b      	cmp	r3, r1
 8014d18:	d102      	bne.n	8014d20 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8014d1a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8014d1c:	4293      	cmp	r3, r2
 8014d1e:	d003      	beq.n	8014d28 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8014d20:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8014d24:	f7ff bf00 	b.w	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014d28:	4770      	bx	lr

08014d2a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8014d2a:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8014d2c:	428b      	cmp	r3, r1
 8014d2e:	d102      	bne.n	8014d36 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8014d30:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014d32:	4293      	cmp	r3, r2
 8014d34:	d003      	beq.n	8014d3e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8014d36:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8014d3a:	f7ff bef5 	b.w	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014d3e:	4770      	bx	lr

08014d40 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8014d40:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8014d44:	f7ff bef0 	b.w	8014b28 <_ZN8touchgfx4Line17updateCachedShapeEv>

08014d48 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8014d48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d4c:	b0a0      	sub	sp, #128	; 0x80
 8014d4e:	4604      	mov	r4, r0
 8014d50:	460a      	mov	r2, r1
 8014d52:	4601      	mov	r1, r0
 8014d54:	a804      	add	r0, sp, #16
 8014d56:	f015 f845 	bl	8029de4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014d5a:	2300      	movs	r3, #0
 8014d5c:	9301      	str	r3, [sp, #4]
 8014d5e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8014d62:	2b01      	cmp	r3, #1
 8014d64:	d17c      	bne.n	8014e60 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8014d66:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014d68:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014d6a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8014d6c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014d6e:	1ac0      	subs	r0, r0, r3
 8014d70:	eba1 0102 	sub.w	r1, r1, r2
 8014d74:	d437      	bmi.n	8014de6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8014d76:	2900      	cmp	r1, #0
 8014d78:	aa01      	add	r2, sp, #4
 8014d7a:	db2e      	blt.n	8014dda <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8014d7c:	f7ff fe98 	bl	8014ab0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014d80:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8014d84:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014d86:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014d88:	a804      	add	r0, sp, #16
 8014d8a:	f015 f9ab 	bl	802a0e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014d8e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014d90:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014d92:	a804      	add	r0, sp, #16
 8014d94:	f015 f9f3 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d98:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014d9a:	2db3      	cmp	r5, #179	; 0xb3
 8014d9c:	dc33      	bgt.n	8014e06 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8014d9e:	eba6 0805 	sub.w	r8, r6, r5
 8014da2:	4640      	mov	r0, r8
 8014da4:	f7ff fdf2 	bl	801498c <_ZN8touchgfx7CWRUtil4sineEi>
 8014da8:	a902      	add	r1, sp, #8
 8014daa:	9002      	str	r0, [sp, #8]
 8014dac:	a801      	add	r0, sp, #4
 8014dae:	f7ff fcd5 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014db2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014db4:	1847      	adds	r7, r0, r1
 8014db6:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014dba:	f7ff fde7 	bl	801498c <_ZN8touchgfx7CWRUtil4sineEi>
 8014dbe:	a903      	add	r1, sp, #12
 8014dc0:	9003      	str	r0, [sp, #12]
 8014dc2:	a801      	add	r0, sp, #4
 8014dc4:	f7ff fcca 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014dc8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014dca:	4639      	mov	r1, r7
 8014dcc:	1a12      	subs	r2, r2, r0
 8014dce:	a804      	add	r0, sp, #16
 8014dd0:	f015 f9d5 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014dd4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014dd6:	441d      	add	r5, r3
 8014dd8:	e7df      	b.n	8014d9a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8014dda:	4249      	negs	r1, r1
 8014ddc:	f7ff fe68 	bl	8014ab0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014de0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8014de4:	e7ce      	b.n	8014d84 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014de6:	2900      	cmp	r1, #0
 8014de8:	f1c0 0000 	rsb	r0, r0, #0
 8014dec:	aa01      	add	r2, sp, #4
 8014dee:	db04      	blt.n	8014dfa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8014df0:	f7ff fe5e 	bl	8014ab0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014df4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8014df8:	e7c4      	b.n	8014d84 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014dfa:	4249      	negs	r1, r1
 8014dfc:	f7ff fe58 	bl	8014ab0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014e00:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8014e04:	e7be      	b.n	8014d84 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014e06:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014e08:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014e0a:	a804      	add	r0, sp, #16
 8014e0c:	f015 f9b7 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014e10:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014e12:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014e14:	a804      	add	r0, sp, #16
 8014e16:	f015 f9b2 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014e1a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014e1c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8014e20:	2d00      	cmp	r5, #0
 8014e22:	dd31      	ble.n	8014e88 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8014e24:	eb05 0806 	add.w	r8, r5, r6
 8014e28:	4640      	mov	r0, r8
 8014e2a:	f7ff fdaf 	bl	801498c <_ZN8touchgfx7CWRUtil4sineEi>
 8014e2e:	a902      	add	r1, sp, #8
 8014e30:	9002      	str	r0, [sp, #8]
 8014e32:	a801      	add	r0, sp, #4
 8014e34:	f7ff fc92 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014e38:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014e3a:	1847      	adds	r7, r0, r1
 8014e3c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014e40:	f7ff fda4 	bl	801498c <_ZN8touchgfx7CWRUtil4sineEi>
 8014e44:	a903      	add	r1, sp, #12
 8014e46:	9003      	str	r0, [sp, #12]
 8014e48:	a801      	add	r0, sp, #4
 8014e4a:	f7ff fc87 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014e4e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014e50:	4639      	mov	r1, r7
 8014e52:	1a12      	subs	r2, r2, r0
 8014e54:	a804      	add	r0, sp, #16
 8014e56:	f015 f992 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014e5a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014e5c:	1aed      	subs	r5, r5, r3
 8014e5e:	e7df      	b.n	8014e20 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8014e60:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014e62:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014e64:	a804      	add	r0, sp, #16
 8014e66:	f015 f93d 	bl	802a0e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014e6a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014e6c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014e6e:	a804      	add	r0, sp, #16
 8014e70:	f015 f985 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014e74:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014e76:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014e78:	a804      	add	r0, sp, #16
 8014e7a:	f015 f980 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014e7e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014e80:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014e82:	a804      	add	r0, sp, #16
 8014e84:	f015 f97b 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014e88:	21ff      	movs	r1, #255	; 0xff
 8014e8a:	a804      	add	r0, sp, #16
 8014e8c:	f015 f866 	bl	8029f5c <_ZN8touchgfx6Canvas6renderEh>
 8014e90:	4b04      	ldr	r3, [pc, #16]	; (8014ea4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8014e92:	9304      	str	r3, [sp, #16]
 8014e94:	4604      	mov	r4, r0
 8014e96:	a80c      	add	r0, sp, #48	; 0x30
 8014e98:	f001 fa98 	bl	80163cc <_ZN8touchgfx7OutlineD1Ev>
 8014e9c:	4620      	mov	r0, r4
 8014e9e:	b020      	add	sp, #128	; 0x80
 8014ea0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014ea4:	0803241c 	.word	0x0803241c

08014ea8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8014ea8:	2000      	movs	r0, #0
 8014eaa:	4770      	bx	lr

08014eac <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014eac:	4b07      	ldr	r3, [pc, #28]	; (8014ecc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8014eae:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014eb0:	881b      	ldrh	r3, [r3, #0]
 8014eb2:	4293      	cmp	r3, r2
 8014eb4:	bf81      	itttt	hi
 8014eb6:	4b06      	ldrhi	r3, [pc, #24]	; (8014ed0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8014eb8:	681b      	ldrhi	r3, [r3, #0]
 8014eba:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8014ebe:	7858      	ldrbhi	r0, [r3, #1]
 8014ec0:	bf8c      	ite	hi
 8014ec2:	f000 0003 	andhi.w	r0, r0, #3
 8014ec6:	2000      	movls	r0, #0
 8014ec8:	4770      	bx	lr
 8014eca:	bf00      	nop
 8014ecc:	200138b0 	.word	0x200138b0
 8014ed0:	200138ac 	.word	0x200138ac

08014ed4 <_ZN8touchgfx8TextAreaD1Ev>:
 8014ed4:	4770      	bx	lr
	...

08014ed8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8014ed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014edc:	4b10      	ldr	r3, [pc, #64]	; (8014f20 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8014ede:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014ee0:	881b      	ldrh	r3, [r3, #0]
 8014ee2:	428b      	cmp	r3, r1
 8014ee4:	4604      	mov	r4, r0
 8014ee6:	d918      	bls.n	8014f1a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8014ee8:	6803      	ldr	r3, [r0, #0]
 8014eea:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8014eec:	4b0d      	ldr	r3, [pc, #52]	; (8014f24 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8014eee:	6818      	ldr	r0, [r3, #0]
 8014ef0:	f7f5 fc76 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8014ef4:	6823      	ldr	r3, [r4, #0]
 8014ef6:	4606      	mov	r6, r0
 8014ef8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014efa:	4620      	mov	r0, r4
 8014efc:	4798      	blx	r3
 8014efe:	6823      	ldr	r3, [r4, #0]
 8014f00:	4607      	mov	r7, r0
 8014f02:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f06:	4620      	mov	r0, r4
 8014f08:	4798      	blx	r3
 8014f0a:	463a      	mov	r2, r7
 8014f0c:	4603      	mov	r3, r0
 8014f0e:	4631      	mov	r1, r6
 8014f10:	4620      	mov	r0, r4
 8014f12:	46ac      	mov	ip, r5
 8014f14:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014f18:	4760      	bx	ip
 8014f1a:	2000      	movs	r0, #0
 8014f1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014f20:	200138b0 	.word	0x200138b0
 8014f24:	200138b8 	.word	0x200138b8

08014f28 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8014f28:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014f2c:	4b17      	ldr	r3, [pc, #92]	; (8014f8c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8014f2e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014f30:	881b      	ldrh	r3, [r3, #0]
 8014f32:	428b      	cmp	r3, r1
 8014f34:	4604      	mov	r4, r0
 8014f36:	d926      	bls.n	8014f86 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8014f38:	4b15      	ldr	r3, [pc, #84]	; (8014f90 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8014f3a:	681b      	ldr	r3, [r3, #0]
 8014f3c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8014f40:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8014f44:	4b13      	ldr	r3, [pc, #76]	; (8014f94 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8014f46:	7855      	ldrb	r5, [r2, #1]
 8014f48:	681b      	ldr	r3, [r3, #0]
 8014f4a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8014f4e:	6833      	ldr	r3, [r6, #0]
 8014f50:	69df      	ldr	r7, [r3, #28]
 8014f52:	4b11      	ldr	r3, [pc, #68]	; (8014f98 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8014f54:	6818      	ldr	r0, [r3, #0]
 8014f56:	f7f5 fc43 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8014f5a:	6823      	ldr	r3, [r4, #0]
 8014f5c:	4680      	mov	r8, r0
 8014f5e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014f60:	4620      	mov	r0, r4
 8014f62:	4798      	blx	r3
 8014f64:	6823      	ldr	r3, [r4, #0]
 8014f66:	4681      	mov	r9, r0
 8014f68:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f6c:	4620      	mov	r0, r4
 8014f6e:	4798      	blx	r3
 8014f70:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8014f74:	9000      	str	r0, [sp, #0]
 8014f76:	464b      	mov	r3, r9
 8014f78:	4642      	mov	r2, r8
 8014f7a:	4629      	mov	r1, r5
 8014f7c:	4630      	mov	r0, r6
 8014f7e:	47b8      	blx	r7
 8014f80:	b003      	add	sp, #12
 8014f82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014f86:	2000      	movs	r0, #0
 8014f88:	e7fa      	b.n	8014f80 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8014f8a:	bf00      	nop
 8014f8c:	200138b0 	.word	0x200138b0
 8014f90:	200138ac 	.word	0x200138ac
 8014f94:	200138b4 	.word	0x200138b4
 8014f98:	200138b8 	.word	0x200138b8

08014f9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014f9c:	b40e      	push	{r1, r2, r3}
 8014f9e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014fa2:	4b2f      	ldr	r3, [pc, #188]	; (8015060 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8014fa4:	881a      	ldrh	r2, [r3, #0]
 8014fa6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014fa8:	429a      	cmp	r2, r3
 8014faa:	b09d      	sub	sp, #116	; 0x74
 8014fac:	4604      	mov	r4, r0
 8014fae:	d954      	bls.n	801505a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8014fb0:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8015064 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8014fb4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8015068 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8014fb8:	aa26      	add	r2, sp, #152	; 0x98
 8014fba:	9202      	str	r2, [sp, #8]
 8014fbc:	f8d9 2000 	ldr.w	r2, [r9]
 8014fc0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014fc4:	f8d8 3000 	ldr.w	r3, [r8]
 8014fc8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014fcc:	682b      	ldr	r3, [r5, #0]
 8014fce:	4628      	mov	r0, r5
 8014fd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014fd2:	4798      	blx	r3
 8014fd4:	b207      	sxth	r7, r0
 8014fd6:	4606      	mov	r6, r0
 8014fd8:	a803      	add	r0, sp, #12
 8014fda:	f005 fc61 	bl	801a8a0 <_ZN8touchgfx12TextProviderC1Ev>
 8014fde:	682b      	ldr	r3, [r5, #0]
 8014fe0:	4628      	mov	r0, r5
 8014fe2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014fe4:	4798      	blx	r3
 8014fe6:	682b      	ldr	r3, [r5, #0]
 8014fe8:	4682      	mov	sl, r0
 8014fea:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014fec:	4628      	mov	r0, r5
 8014fee:	4798      	blx	r3
 8014ff0:	4653      	mov	r3, sl
 8014ff2:	9000      	str	r0, [sp, #0]
 8014ff4:	9a02      	ldr	r2, [sp, #8]
 8014ff6:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014ff8:	a803      	add	r0, sp, #12
 8014ffa:	f005 fcac 	bl	801a956 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014ffe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015000:	f8d9 3000 	ldr.w	r3, [r9]
 8015004:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8015008:	8925      	ldrh	r5, [r4, #8]
 801500a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801500e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8015012:	eba5 050c 	sub.w	r5, r5, ip
 8015016:	784a      	ldrb	r2, [r1, #1]
 8015018:	f8d8 3000 	ldr.w	r3, [r8]
 801501c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8015020:	b22d      	sxth	r5, r5
 8015022:	9500      	str	r5, [sp, #0]
 8015024:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8015028:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801502c:	a803      	add	r0, sp, #12
 801502e:	f003 f8b9 	bl	80181a4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8015032:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8015036:	18b9      	adds	r1, r7, r2
 8015038:	2900      	cmp	r1, #0
 801503a:	b203      	sxth	r3, r0
 801503c:	dd0b      	ble.n	8015056 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801503e:	3b01      	subs	r3, #1
 8015040:	fb13 f302 	smulbb	r3, r3, r2
 8015044:	fb16 3300 	smlabb	r3, r6, r0, r3
 8015048:	b21f      	sxth	r7, r3
 801504a:	4638      	mov	r0, r7
 801504c:	b01d      	add	sp, #116	; 0x74
 801504e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015052:	b003      	add	sp, #12
 8015054:	4770      	bx	lr
 8015056:	2b00      	cmp	r3, #0
 8015058:	dcf7      	bgt.n	801504a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801505a:	2700      	movs	r7, #0
 801505c:	e7f5      	b.n	801504a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801505e:	bf00      	nop
 8015060:	200138b0 	.word	0x200138b0
 8015064:	200138ac 	.word	0x200138ac
 8015068:	200138b4 	.word	0x200138b4

0801506c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801506c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015070:	4bbc      	ldr	r3, [pc, #752]	; (8015364 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8015072:	460c      	mov	r4, r1
 8015074:	881b      	ldrh	r3, [r3, #0]
 8015076:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8015078:	428b      	cmp	r3, r1
 801507a:	b0a9      	sub	sp, #164	; 0xa4
 801507c:	4680      	mov	r8, r0
 801507e:	d809      	bhi.n	8015094 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8015080:	2300      	movs	r3, #0
 8015082:	f04f 32ff 	mov.w	r2, #4294967295
 8015086:	e9c0 3200 	strd	r3, r2, [r0]
 801508a:	6083      	str	r3, [r0, #8]
 801508c:	4640      	mov	r0, r8
 801508e:	b029      	add	sp, #164	; 0xa4
 8015090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015094:	4eb4      	ldr	r6, [pc, #720]	; (8015368 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8015096:	6833      	ldr	r3, [r6, #0]
 8015098:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801509c:	4bb3      	ldr	r3, [pc, #716]	; (801536c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801509e:	681b      	ldr	r3, [r3, #0]
 80150a0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80150a4:	4bb2      	ldr	r3, [pc, #712]	; (8015370 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80150a6:	6818      	ldr	r0, [r3, #0]
 80150a8:	f7f5 fb9a 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 80150ac:	682b      	ldr	r3, [r5, #0]
 80150ae:	4681      	mov	r9, r0
 80150b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80150b2:	4628      	mov	r0, r5
 80150b4:	4798      	blx	r3
 80150b6:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80150b8:	b203      	sxth	r3, r0
 80150ba:	4407      	add	r7, r0
 80150bc:	9304      	str	r3, [sp, #16]
 80150be:	b2bb      	uxth	r3, r7
 80150c0:	9303      	str	r3, [sp, #12]
 80150c2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80150c6:	4682      	mov	sl, r0
 80150c8:	a80f      	add	r0, sp, #60	; 0x3c
 80150ca:	2b00      	cmp	r3, #0
 80150cc:	f040 80a6 	bne.w	801521c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80150d0:	f005 fbe6 	bl	801a8a0 <_ZN8touchgfx12TextProviderC1Ev>
 80150d4:	682b      	ldr	r3, [r5, #0]
 80150d6:	4628      	mov	r0, r5
 80150d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80150da:	4798      	blx	r3
 80150dc:	682b      	ldr	r3, [r5, #0]
 80150de:	4606      	mov	r6, r0
 80150e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80150e2:	4628      	mov	r0, r5
 80150e4:	4798      	blx	r3
 80150e6:	6823      	ldr	r3, [r4, #0]
 80150e8:	4607      	mov	r7, r0
 80150ea:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80150ec:	4620      	mov	r0, r4
 80150ee:	4798      	blx	r3
 80150f0:	6823      	ldr	r3, [r4, #0]
 80150f2:	4683      	mov	fp, r0
 80150f4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80150f8:	4620      	mov	r0, r4
 80150fa:	4798      	blx	r3
 80150fc:	463b      	mov	r3, r7
 80150fe:	e9cd b000 	strd	fp, r0, [sp]
 8015102:	4649      	mov	r1, r9
 8015104:	4632      	mov	r2, r6
 8015106:	a80f      	add	r0, sp, #60	; 0x3c
 8015108:	f005 fc3a 	bl	801a980 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801510c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015110:	f8df b254 	ldr.w	fp, [pc, #596]	; 8015368 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8015114:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015118:	f04f 0600 	mov.w	r6, #0
 801511c:	bf0c      	ite	eq
 801511e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8015122:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8015126:	4637      	mov	r7, r6
 8015128:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801512a:	f8db 3000 	ldr.w	r3, [fp]
 801512e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8015132:	4629      	mov	r1, r5
 8015134:	785b      	ldrb	r3, [r3, #1]
 8015136:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801513a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801513e:	a80f      	add	r0, sp, #60	; 0x3c
 8015140:	f002 fd4b 	bl	8017bda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015144:	9b03      	ldr	r3, [sp, #12]
 8015146:	4286      	cmp	r6, r0
 8015148:	bfb8      	it	lt
 801514a:	4606      	movlt	r6, r0
 801514c:	3701      	adds	r7, #1
 801514e:	eba9 0903 	sub.w	r9, r9, r3
 8015152:	a80f      	add	r0, sp, #60	; 0x3c
 8015154:	b236      	sxth	r6, r6
 8015156:	b2bf      	uxth	r7, r7
 8015158:	fa0f f989 	sxth.w	r9, r9
 801515c:	f005 fbc7 	bl	801a8ee <_ZN8touchgfx12TextProvider11endOfStringEv>
 8015160:	b918      	cbnz	r0, 801516a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015162:	7a2b      	ldrb	r3, [r5, #8]
 8015164:	444b      	add	r3, r9
 8015166:	2b00      	cmp	r3, #0
 8015168:	dcde      	bgt.n	8015128 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801516a:	9b03      	ldr	r3, [sp, #12]
 801516c:	9a04      	ldr	r2, [sp, #16]
 801516e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8015172:	fb13 f707 	smulbb	r7, r3, r7
 8015176:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015178:	1aff      	subs	r7, r7, r3
 801517a:	b2bf      	uxth	r7, r7
 801517c:	b23b      	sxth	r3, r7
 801517e:	429a      	cmp	r2, r3
 8015180:	bfa8      	it	ge
 8015182:	4657      	movge	r7, sl
 8015184:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015188:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801518c:	6823      	ldr	r3, [r4, #0]
 801518e:	bf08      	it	eq
 8015190:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8015194:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015196:	bf18      	it	ne
 8015198:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801519c:	4620      	mov	r0, r4
 801519e:	4798      	blx	r3
 80151a0:	444f      	add	r7, r9
 80151a2:	fa1f f987 	uxth.w	r9, r7
 80151a6:	2801      	cmp	r0, #1
 80151a8:	fa0f f789 	sxth.w	r7, r9
 80151ac:	b2b3      	uxth	r3, r6
 80151ae:	f000 80e1 	beq.w	8015374 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80151b2:	2802      	cmp	r0, #2
 80151b4:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80151b8:	f000 80e2 	beq.w	8015380 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80151bc:	7aea      	ldrb	r2, [r5, #11]
 80151be:	7b2d      	ldrb	r5, [r5, #12]
 80151c0:	b236      	sxth	r6, r6
 80151c2:	1ab6      	subs	r6, r6, r2
 80151c4:	442a      	add	r2, r5
 80151c6:	4413      	add	r3, r2
 80151c8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80151cc:	fa1f fa86 	uxth.w	sl, r6
 80151d0:	b29b      	uxth	r3, r3
 80151d2:	2a02      	cmp	r2, #2
 80151d4:	fa0f fb8a 	sxth.w	fp, sl
 80151d8:	b21e      	sxth	r6, r3
 80151da:	f000 80d5 	beq.w	8015388 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80151de:	2a03      	cmp	r2, #3
 80151e0:	f000 80dd 	beq.w	801539e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80151e4:	2a01      	cmp	r2, #1
 80151e6:	f040 80e5 	bne.w	80153b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80151ea:	8925      	ldrh	r5, [r4, #8]
 80151ec:	4633      	mov	r3, r6
 80151ee:	eba5 0909 	sub.w	r9, r5, r9
 80151f2:	463e      	mov	r6, r7
 80151f4:	465d      	mov	r5, fp
 80151f6:	461f      	mov	r7, r3
 80151f8:	fa0f fb89 	sxth.w	fp, r9
 80151fc:	4b5c      	ldr	r3, [pc, #368]	; (8015370 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80151fe:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015200:	6818      	ldr	r0, [r3, #0]
 8015202:	f7f5 faed 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8015206:	f8a8 b000 	strh.w	fp, [r8]
 801520a:	f8a8 5002 	strh.w	r5, [r8, #2]
 801520e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8015212:	f8a8 7006 	strh.w	r7, [r8, #6]
 8015216:	f8c8 0008 	str.w	r0, [r8, #8]
 801521a:	e737      	b.n	801508c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801521c:	f005 fb40 	bl	801a8a0 <_ZN8touchgfx12TextProviderC1Ev>
 8015220:	682b      	ldr	r3, [r5, #0]
 8015222:	4628      	mov	r0, r5
 8015224:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015226:	4798      	blx	r3
 8015228:	682b      	ldr	r3, [r5, #0]
 801522a:	4607      	mov	r7, r0
 801522c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801522e:	4628      	mov	r0, r5
 8015230:	4798      	blx	r3
 8015232:	6823      	ldr	r3, [r4, #0]
 8015234:	4683      	mov	fp, r0
 8015236:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015238:	4620      	mov	r0, r4
 801523a:	4798      	blx	r3
 801523c:	6822      	ldr	r2, [r4, #0]
 801523e:	9005      	str	r0, [sp, #20]
 8015240:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8015244:	4620      	mov	r0, r4
 8015246:	4790      	blx	r2
 8015248:	9b05      	ldr	r3, [sp, #20]
 801524a:	9001      	str	r0, [sp, #4]
 801524c:	463a      	mov	r2, r7
 801524e:	4649      	mov	r1, r9
 8015250:	9300      	str	r3, [sp, #0]
 8015252:	a80f      	add	r0, sp, #60	; 0x3c
 8015254:	465b      	mov	r3, fp
 8015256:	f005 fb93 	bl	801a980 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801525a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801525e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8015262:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015264:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8015268:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801526c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015270:	bf0a      	itet	eq
 8015272:	464a      	moveq	r2, r9
 8015274:	461a      	movne	r2, r3
 8015276:	4699      	moveq	r9, r3
 8015278:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801527c:	1ad2      	subs	r2, r2, r3
 801527e:	6833      	ldr	r3, [r6, #0]
 8015280:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8015284:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8015288:	af0f      	add	r7, sp, #60	; 0x3c
 801528a:	7859      	ldrb	r1, [r3, #1]
 801528c:	9707      	str	r7, [sp, #28]
 801528e:	2300      	movs	r3, #0
 8015290:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8015294:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015298:	f88d 1020 	strb.w	r1, [sp, #32]
 801529c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80152a0:	9509      	str	r5, [sp, #36]	; 0x24
 80152a2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80152a6:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80152aa:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80152ae:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80152b2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80152b6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80152ba:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80152be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80152c2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80152c6:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80152ca:	b350      	cbz	r0, 8015322 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80152cc:	682b      	ldr	r3, [r5, #0]
 80152ce:	4628      	mov	r0, r5
 80152d0:	695b      	ldr	r3, [r3, #20]
 80152d2:	4798      	blx	r3
 80152d4:	4607      	mov	r7, r0
 80152d6:	b320      	cbz	r0, 8015322 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80152d8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80152da:	6803      	ldr	r3, [r0, #0]
 80152dc:	4639      	mov	r1, r7
 80152de:	68db      	ldr	r3, [r3, #12]
 80152e0:	4798      	blx	r3
 80152e2:	4606      	mov	r6, r0
 80152e4:	b1e8      	cbz	r0, 8015322 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80152e6:	7b43      	ldrb	r3, [r0, #13]
 80152e8:	7a82      	ldrb	r2, [r0, #10]
 80152ea:	005b      	lsls	r3, r3, #1
 80152ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80152f0:	4313      	orrs	r3, r2
 80152f2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80152f6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80152fa:	2b06      	cmp	r3, #6
 80152fc:	d111      	bne.n	8015322 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80152fe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015300:	6803      	ldr	r3, [r0, #0]
 8015302:	4632      	mov	r2, r6
 8015304:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015306:	4639      	mov	r1, r7
 8015308:	4798      	blx	r3
 801530a:	7b73      	ldrb	r3, [r6, #13]
 801530c:	005b      	lsls	r3, r3, #1
 801530e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015312:	7ab3      	ldrb	r3, [r6, #10]
 8015314:	4313      	orrs	r3, r2
 8015316:	4418      	add	r0, r3
 8015318:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801531c:	4418      	add	r0, r3
 801531e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8015322:	2600      	movs	r6, #0
 8015324:	4637      	mov	r7, r6
 8015326:	a806      	add	r0, sp, #24
 8015328:	f002 fe38 	bl	8017f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801532c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8015330:	9b03      	ldr	r3, [sp, #12]
 8015332:	4286      	cmp	r6, r0
 8015334:	eba9 0903 	sub.w	r9, r9, r3
 8015338:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801533c:	bfb8      	it	lt
 801533e:	4606      	movlt	r6, r0
 8015340:	3701      	adds	r7, #1
 8015342:	b236      	sxth	r6, r6
 8015344:	b2bf      	uxth	r7, r7
 8015346:	fa0f f989 	sxth.w	r9, r9
 801534a:	2b00      	cmp	r3, #0
 801534c:	f43f af0d 	beq.w	801516a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015350:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8015354:	2b00      	cmp	r3, #0
 8015356:	f47f af08 	bne.w	801516a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801535a:	7a2b      	ldrb	r3, [r5, #8]
 801535c:	444b      	add	r3, r9
 801535e:	2b00      	cmp	r3, #0
 8015360:	dce1      	bgt.n	8015326 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8015362:	e702      	b.n	801516a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015364:	200138b0 	.word	0x200138b0
 8015368:	200138ac 	.word	0x200138ac
 801536c:	200138b4 	.word	0x200138b4
 8015370:	200138b8 	.word	0x200138b8
 8015374:	ebaa 0606 	sub.w	r6, sl, r6
 8015378:	2002      	movs	r0, #2
 801537a:	fb96 f6f0 	sdiv	r6, r6, r0
 801537e:	e71d      	b.n	80151bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015380:	441e      	add	r6, r3
 8015382:	ebaa 0606 	sub.w	r6, sl, r6
 8015386:	e719      	b.n	80151bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015388:	8925      	ldrh	r5, [r4, #8]
 801538a:	1aed      	subs	r5, r5, r3
 801538c:	eba5 050a 	sub.w	r5, r5, sl
 8015390:	fa0f fb85 	sxth.w	fp, r5
 8015394:	8965      	ldrh	r5, [r4, #10]
 8015396:	eba5 0509 	sub.w	r5, r5, r9
 801539a:	b22d      	sxth	r5, r5
 801539c:	e72e      	b.n	80151fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801539e:	8965      	ldrh	r5, [r4, #10]
 80153a0:	1aed      	subs	r5, r5, r3
 80153a2:	eba5 050a 	sub.w	r5, r5, sl
 80153a6:	4633      	mov	r3, r6
 80153a8:	b22d      	sxth	r5, r5
 80153aa:	463e      	mov	r6, r7
 80153ac:	f04f 0b00 	mov.w	fp, #0
 80153b0:	461f      	mov	r7, r3
 80153b2:	e723      	b.n	80151fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80153b4:	2500      	movs	r5, #0
 80153b6:	e721      	b.n	80151fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080153b8 <_ZN8touchgfx8TextAreaD0Ev>:
 80153b8:	b510      	push	{r4, lr}
 80153ba:	2148      	movs	r1, #72	; 0x48
 80153bc:	4604      	mov	r4, r0
 80153be:	f017 fcfc 	bl	802cdba <_ZdlPvj>
 80153c2:	4620      	mov	r0, r4
 80153c4:	bd10      	pop	{r4, pc}
	...

080153c8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80153c8:	b513      	push	{r0, r1, r4, lr}
 80153ca:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80153ce:	4604      	mov	r4, r0
 80153d0:	b1fb      	cbz	r3, 8015412 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80153d2:	4b16      	ldr	r3, [pc, #88]	; (801542c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80153d4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80153d6:	881b      	ldrh	r3, [r3, #0]
 80153d8:	428b      	cmp	r3, r1
 80153da:	d91a      	bls.n	8015412 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80153dc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80153e0:	2b00      	cmp	r3, #0
 80153e2:	dd16      	ble.n	8015412 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80153e4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80153e8:	2b00      	cmp	r3, #0
 80153ea:	dd12      	ble.n	8015412 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80153ec:	4b10      	ldr	r3, [pc, #64]	; (8015430 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80153ee:	6818      	ldr	r0, [r3, #0]
 80153f0:	f7f5 f9f6 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 80153f4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80153f8:	6822      	ldr	r2, [r4, #0]
 80153fa:	2b00      	cmp	r3, #0
 80153fc:	db06      	blt.n	801540c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80153fe:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015402:	2b00      	cmp	r3, #0
 8015404:	db02      	blt.n	801540c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8015406:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8015408:	4298      	cmp	r0, r3
 801540a:	d004      	beq.n	8015416 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801540c:	6953      	ldr	r3, [r2, #20]
 801540e:	4620      	mov	r0, r4
 8015410:	4798      	blx	r3
 8015412:	b002      	add	sp, #8
 8015414:	bd10      	pop	{r4, pc}
 8015416:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801541a:	c903      	ldmia	r1, {r0, r1}
 801541c:	466b      	mov	r3, sp
 801541e:	e883 0003 	stmia.w	r3, {r0, r1}
 8015422:	6912      	ldr	r2, [r2, #16]
 8015424:	4619      	mov	r1, r3
 8015426:	4620      	mov	r0, r4
 8015428:	4790      	blx	r2
 801542a:	e7f2      	b.n	8015412 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801542c:	200138b0 	.word	0x200138b0
 8015430:	200138b8 	.word	0x200138b8

08015434 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8015434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015438:	4b44      	ldr	r3, [pc, #272]	; (801554c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801543a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801543c:	881b      	ldrh	r3, [r3, #0]
 801543e:	4293      	cmp	r3, r2
 8015440:	b08e      	sub	sp, #56	; 0x38
 8015442:	4604      	mov	r4, r0
 8015444:	d97e      	bls.n	8015544 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015446:	6808      	ldr	r0, [r1, #0]
 8015448:	4d41      	ldr	r5, [pc, #260]	; (8015550 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801544a:	6849      	ldr	r1, [r1, #4]
 801544c:	ab05      	add	r3, sp, #20
 801544e:	c303      	stmia	r3!, {r0, r1}
 8015450:	4611      	mov	r1, r2
 8015452:	6828      	ldr	r0, [r5, #0]
 8015454:	f7f5 f9c4 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8015458:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801545c:	2b00      	cmp	r3, #0
 801545e:	db11      	blt.n	8015484 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015460:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015464:	2b00      	cmp	r3, #0
 8015466:	db0d      	blt.n	8015484 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015468:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801546a:	4298      	cmp	r0, r3
 801546c:	d10a      	bne.n	8015484 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801546e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8015472:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015476:	ab09      	add	r3, sp, #36	; 0x24
 8015478:	e883 0003 	stmia.w	r3, {r0, r1}
 801547c:	4619      	mov	r1, r3
 801547e:	a805      	add	r0, sp, #20
 8015480:	f7fd fbec 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 8015484:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015488:	2b00      	cmp	r3, #0
 801548a:	dd5b      	ble.n	8015544 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801548c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8015490:	2b00      	cmp	r3, #0
 8015492:	dd57      	ble.n	8015544 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015494:	4f2f      	ldr	r7, [pc, #188]	; (8015554 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8015496:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015498:	683b      	ldr	r3, [r7, #0]
 801549a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801549e:	4b2e      	ldr	r3, [pc, #184]	; (8015558 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80154a0:	681b      	ldr	r3, [r3, #0]
 80154a2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80154a6:	2e00      	cmp	r6, #0
 80154a8:	d04c      	beq.n	8015544 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80154aa:	6823      	ldr	r3, [r4, #0]
 80154ac:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80154b0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80154b2:	4620      	mov	r0, r4
 80154b4:	4798      	blx	r3
 80154b6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80154b8:	683b      	ldr	r3, [r7, #0]
 80154ba:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80154be:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80154c2:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80154c6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80154c8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80154cc:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80154d0:	785b      	ldrb	r3, [r3, #1]
 80154d2:	9609      	str	r6, [sp, #36]	; 0x24
 80154d4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80154d8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80154dc:	4b1f      	ldr	r3, [pc, #124]	; (801555c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80154de:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80154e2:	681b      	ldr	r3, [r3, #0]
 80154e4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80154e8:	910b      	str	r1, [sp, #44]	; 0x2c
 80154ea:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80154ee:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80154f2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80154f6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80154fa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80154fe:	b10a      	cbz	r2, 8015504 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8015500:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8015502:	b906      	cbnz	r6, 8015506 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8015504:	689e      	ldr	r6, [r3, #8]
 8015506:	af07      	add	r7, sp, #28
 8015508:	4621      	mov	r1, r4
 801550a:	4638      	mov	r0, r7
 801550c:	f004 fc7c 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015510:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015512:	6828      	ldr	r0, [r5, #0]
 8015514:	f7f5 f964 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8015518:	6823      	ldr	r3, [r4, #0]
 801551a:	4605      	mov	r5, r0
 801551c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801551e:	4620      	mov	r0, r4
 8015520:	4798      	blx	r3
 8015522:	6823      	ldr	r3, [r4, #0]
 8015524:	4680      	mov	r8, r0
 8015526:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801552a:	4620      	mov	r0, r4
 801552c:	4798      	blx	r3
 801552e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8015532:	ab09      	add	r3, sp, #36	; 0x24
 8015534:	9300      	str	r3, [sp, #0]
 8015536:	9501      	str	r5, [sp, #4]
 8015538:	ab05      	add	r3, sp, #20
 801553a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801553e:	4630      	mov	r0, r6
 8015540:	f7f5 f900 	bl	800a744 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015544:	b00e      	add	sp, #56	; 0x38
 8015546:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801554a:	bf00      	nop
 801554c:	200138b0 	.word	0x200138b0
 8015550:	200138b8 	.word	0x200138b8
 8015554:	200138ac 	.word	0x200138ac
 8015558:	200138b4 	.word	0x200138b4
 801555c:	20013854 	.word	0x20013854

08015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8015560:	b538      	push	{r3, r4, r5, lr}
 8015562:	4b0e      	ldr	r3, [pc, #56]	; (801559c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8015564:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015566:	881b      	ldrh	r3, [r3, #0]
 8015568:	429a      	cmp	r2, r3
 801556a:	4604      	mov	r4, r0
 801556c:	d214      	bcs.n	8015598 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801556e:	6803      	ldr	r3, [r0, #0]
 8015570:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015572:	4798      	blx	r3
 8015574:	6823      	ldr	r3, [r4, #0]
 8015576:	4605      	mov	r5, r0
 8015578:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801557a:	4620      	mov	r0, r4
 801557c:	4798      	blx	r3
 801557e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015582:	b22d      	sxth	r5, r5
 8015584:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015588:	4601      	mov	r1, r0
 801558a:	bf06      	itte	eq
 801558c:	4602      	moveq	r2, r0
 801558e:	4629      	moveq	r1, r5
 8015590:	462a      	movne	r2, r5
 8015592:	4620      	mov	r0, r4
 8015594:	f7fd f942 	bl	801281c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8015598:	bd38      	pop	{r3, r4, r5, pc}
 801559a:	bf00      	nop
 801559c:	200138b0 	.word	0x200138b0

080155a0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80155a0:	b530      	push	{r4, r5, lr}
 80155a2:	888b      	ldrh	r3, [r1, #4]
 80155a4:	8583      	strh	r3, [r0, #44]	; 0x2c
 80155a6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80155aa:	b085      	sub	sp, #20
 80155ac:	4604      	mov	r4, r0
 80155ae:	b923      	cbnz	r3, 80155ba <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80155b0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80155b4:	b90b      	cbnz	r3, 80155ba <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80155b6:	f7ff ffd3 	bl	8015560 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80155ba:	6823      	ldr	r3, [r4, #0]
 80155bc:	466d      	mov	r5, sp
 80155be:	4621      	mov	r1, r4
 80155c0:	4628      	mov	r0, r5
 80155c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80155c6:	4798      	blx	r3
 80155c8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80155cc:	343c      	adds	r4, #60	; 0x3c
 80155ce:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80155d2:	b005      	add	sp, #20
 80155d4:	bd30      	pop	{r4, r5, pc}

080155d6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 80155d6:	2300      	movs	r3, #0
 80155d8:	8083      	strh	r3, [r0, #4]
 80155da:	80c3      	strh	r3, [r0, #6]
 80155dc:	8003      	strh	r3, [r0, #0]
 80155de:	8043      	strh	r3, [r0, #2]
 80155e0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80155e4:	2bff      	cmp	r3, #255	; 0xff
 80155e6:	bf01      	itttt	eq
 80155e8:	890b      	ldrheq	r3, [r1, #8]
 80155ea:	8083      	strheq	r3, [r0, #4]
 80155ec:	894b      	ldrheq	r3, [r1, #10]
 80155ee:	80c3      	strheq	r3, [r0, #6]
 80155f0:	4770      	bx	lr
	...

080155f4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80155f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80155f6:	4604      	mov	r4, r0
 80155f8:	6808      	ldr	r0, [r1, #0]
 80155fa:	6849      	ldr	r1, [r1, #4]
 80155fc:	466b      	mov	r3, sp
 80155fe:	c303      	stmia	r3!, {r0, r1}
 8015600:	6823      	ldr	r3, [r4, #0]
 8015602:	4669      	mov	r1, sp
 8015604:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015606:	4620      	mov	r0, r4
 8015608:	4798      	blx	r3
 801560a:	4b08      	ldr	r3, [pc, #32]	; (801562c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 801560c:	681b      	ldr	r3, [r3, #0]
 801560e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015612:	b10a      	cbz	r2, 8015618 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8015614:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015616:	b900      	cbnz	r0, 801561a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8015618:	6898      	ldr	r0, [r3, #8]
 801561a:	6803      	ldr	r3, [r0, #0]
 801561c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801561e:	6a1d      	ldr	r5, [r3, #32]
 8015620:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8015624:	4669      	mov	r1, sp
 8015626:	47a8      	blx	r5
 8015628:	b003      	add	sp, #12
 801562a:	bd30      	pop	{r4, r5, pc}
 801562c:	20013854 	.word	0x20013854

08015630 <_ZN8touchgfx3BoxD1Ev>:
 8015630:	4770      	bx	lr

08015632 <_ZN8touchgfx3BoxD0Ev>:
 8015632:	b510      	push	{r4, lr}
 8015634:	212c      	movs	r1, #44	; 0x2c
 8015636:	4604      	mov	r4, r0
 8015638:	f017 fbbf 	bl	802cdba <_ZdlPvj>
 801563c:	4620      	mov	r0, r4
 801563e:	bd10      	pop	{r4, pc}

08015640 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8015640:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8015644:	b12a      	cbz	r2, 8015652 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8015646:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801564a:	b112      	cbz	r2, 8015652 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801564c:	6803      	ldr	r3, [r0, #0]
 801564e:	695b      	ldr	r3, [r3, #20]
 8015650:	4718      	bx	r3
 8015652:	4770      	bx	lr

08015654 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8015654:	b570      	push	{r4, r5, r6, lr}
 8015656:	6803      	ldr	r3, [r0, #0]
 8015658:	4604      	mov	r4, r0
 801565a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801565c:	4615      	mov	r5, r2
 801565e:	4798      	blx	r3
 8015660:	6823      	ldr	r3, [r4, #0]
 8015662:	4629      	mov	r1, r5
 8015664:	4620      	mov	r0, r4
 8015666:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015668:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801566c:	4718      	bx	r3

0801566e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801566e:	b570      	push	{r4, r5, r6, lr}
 8015670:	6803      	ldr	r3, [r0, #0]
 8015672:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015674:	4604      	mov	r4, r0
 8015676:	460e      	mov	r6, r1
 8015678:	4615      	mov	r5, r2
 801567a:	4798      	blx	r3
 801567c:	8030      	strh	r0, [r6, #0]
 801567e:	6823      	ldr	r3, [r4, #0]
 8015680:	4620      	mov	r0, r4
 8015682:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8015684:	4798      	blx	r3
 8015686:	8028      	strh	r0, [r5, #0]
 8015688:	bd70      	pop	{r4, r5, r6, pc}

0801568a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801568a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801568e:	4770      	bx	lr

08015690 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8015690:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8015694:	4770      	bx	lr

08015696 <_ZN8touchgfx10TiledImageD1Ev>:
 8015696:	4770      	bx	lr

08015698 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8015698:	b510      	push	{r4, lr}
 801569a:	4604      	mov	r4, r0
 801569c:	f000 fd31 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80156a0:	6823      	ldr	r3, [r4, #0]
 80156a2:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80156a6:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 80156aa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80156ac:	4620      	mov	r0, r4
 80156ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80156b2:	4718      	bx	r3

080156b4 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 80156b4:	b538      	push	{r3, r4, r5, lr}
 80156b6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80156ba:	4604      	mov	r4, r0
 80156bc:	8541      	strh	r1, [r0, #42]	; 0x2a
 80156be:	4628      	mov	r0, r5
 80156c0:	f006 fe6e 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80156c4:	b188      	cbz	r0, 80156ea <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 80156c6:	4628      	mov	r0, r5
 80156c8:	f006 fe6a 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80156cc:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 80156d0:	fb92 f3f0 	sdiv	r3, r2, r0
 80156d4:	fb03 2010 	mls	r0, r3, r0, r2
 80156d8:	2800      	cmp	r0, #0
 80156da:	8560      	strh	r0, [r4, #42]	; 0x2a
 80156dc:	da05      	bge.n	80156ea <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 80156de:	4628      	mov	r0, r5
 80156e0:	f006 fe5e 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80156e4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80156e6:	4418      	add	r0, r3
 80156e8:	8560      	strh	r0, [r4, #42]	; 0x2a
 80156ea:	bd38      	pop	{r3, r4, r5, pc}

080156ec <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 80156ec:	b538      	push	{r3, r4, r5, lr}
 80156ee:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80156f2:	4604      	mov	r4, r0
 80156f4:	8581      	strh	r1, [r0, #44]	; 0x2c
 80156f6:	4628      	mov	r0, r5
 80156f8:	f006 fe86 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80156fc:	b188      	cbz	r0, 8015722 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80156fe:	4628      	mov	r0, r5
 8015700:	f006 fe82 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015704:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8015708:	fb92 f3f0 	sdiv	r3, r2, r0
 801570c:	fb03 2010 	mls	r0, r3, r0, r2
 8015710:	2800      	cmp	r0, #0
 8015712:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8015714:	da05      	bge.n	8015722 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 8015716:	4628      	mov	r0, r5
 8015718:	f006 fe76 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801571c:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 801571e:	4418      	add	r0, r3
 8015720:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8015722:	bd38      	pop	{r3, r4, r5, pc}

08015724 <_ZN8touchgfx10TiledImageD0Ev>:
 8015724:	b510      	push	{r4, lr}
 8015726:	2130      	movs	r1, #48	; 0x30
 8015728:	4604      	mov	r4, r0
 801572a:	f017 fb46 	bl	802cdba <_ZdlPvj>
 801572e:	4620      	mov	r0, r4
 8015730:	bd10      	pop	{r4, pc}
	...

08015734 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 8015734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015738:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 801573c:	b093      	sub	sp, #76	; 0x4c
 801573e:	4607      	mov	r7, r0
 8015740:	4658      	mov	r0, fp
 8015742:	460e      	mov	r6, r1
 8015744:	f006 fe2c 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015748:	4681      	mov	r9, r0
 801574a:	4658      	mov	r0, fp
 801574c:	f006 fe5c 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015750:	4605      	mov	r5, r0
 8015752:	f1b9 0f00 	cmp.w	r9, #0
 8015756:	f000 80c4 	beq.w	80158e2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 801575a:	2800      	cmp	r0, #0
 801575c:	f000 80c1 	beq.w	80158e2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8015760:	2300      	movs	r3, #0
 8015762:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8015766:	683b      	ldr	r3, [r7, #0]
 8015768:	a90e      	add	r1, sp, #56	; 0x38
 801576a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801576c:	4638      	mov	r0, r7
 801576e:	4798      	blx	r3
 8015770:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8015774:	f9b6 3000 	ldrsh.w	r3, [r6]
 8015778:	88b1      	ldrh	r1, [r6, #4]
 801577a:	fa1f f889 	uxth.w	r8, r9
 801577e:	189c      	adds	r4, r3, r2
 8015780:	440b      	add	r3, r1
 8015782:	fa02 f383 	sxtah	r3, r2, r3
 8015786:	fb94 f4f9 	sdiv	r4, r4, r9
 801578a:	fb14 f408 	smulbb	r4, r4, r8
 801578e:	1aa4      	subs	r4, r4, r2
 8015790:	3b01      	subs	r3, #1
 8015792:	b2aa      	uxth	r2, r5
 8015794:	fb93 f3f9 	sdiv	r3, r3, r9
 8015798:	fb13 f308 	smulbb	r3, r3, r8
 801579c:	b21b      	sxth	r3, r3
 801579e:	9205      	str	r2, [sp, #20]
 80157a0:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 80157a4:	9805      	ldr	r0, [sp, #20]
 80157a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80157a8:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80157ac:	185a      	adds	r2, r3, r1
 80157ae:	fb92 f2f5 	sdiv	r2, r2, r5
 80157b2:	fb12 f200 	smulbb	r2, r2, r0
 80157b6:	1a52      	subs	r2, r2, r1
 80157b8:	b212      	sxth	r2, r2
 80157ba:	920c      	str	r2, [sp, #48]	; 0x30
 80157bc:	88f2      	ldrh	r2, [r6, #6]
 80157be:	4413      	add	r3, r2
 80157c0:	fa01 f383 	sxtah	r3, r1, r3
 80157c4:	3b01      	subs	r3, #1
 80157c6:	fb93 f3f5 	sdiv	r3, r3, r5
 80157ca:	fb13 f300 	smulbb	r3, r3, r0
 80157ce:	b2a4      	uxth	r4, r4
 80157d0:	b21b      	sxth	r3, r3
 80157d2:	930d      	str	r3, [sp, #52]	; 0x34
 80157d4:	eb08 0504 	add.w	r5, r8, r4
 80157d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80157da:	b223      	sxth	r3, r4
 80157dc:	4293      	cmp	r3, r2
 80157de:	b2ad      	uxth	r5, r5
 80157e0:	9306      	str	r3, [sp, #24]
 80157e2:	dc7e      	bgt.n	80158e2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80157e4:	b22b      	sxth	r3, r5
 80157e6:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80157ea:	930a      	str	r3, [sp, #40]	; 0x28
 80157ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80157ee:	4599      	cmp	r9, r3
 80157f0:	dd03      	ble.n	80157fa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 80157f2:	4444      	add	r4, r8
 80157f4:	b2a4      	uxth	r4, r4
 80157f6:	4445      	add	r5, r8
 80157f8:	e7ee      	b.n	80157d8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 80157fa:	f9b6 c000 	ldrsh.w	ip, [r6]
 80157fe:	88b2      	ldrh	r2, [r6, #4]
 8015800:	9806      	ldr	r0, [sp, #24]
 8015802:	9905      	ldr	r1, [sp, #20]
 8015804:	4462      	add	r2, ip
 8015806:	b292      	uxth	r2, r2
 8015808:	b213      	sxth	r3, r2
 801580a:	9308      	str	r3, [sp, #32]
 801580c:	fa1f f389 	uxth.w	r3, r9
 8015810:	4419      	add	r1, r3
 8015812:	9307      	str	r3, [sp, #28]
 8015814:	4603      	mov	r3, r0
 8015816:	9808      	ldr	r0, [sp, #32]
 8015818:	b289      	uxth	r1, r1
 801581a:	4283      	cmp	r3, r0
 801581c:	fa0f fa81 	sxth.w	sl, r1
 8015820:	da5b      	bge.n	80158da <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015822:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015824:	4584      	cmp	ip, r0
 8015826:	da58      	bge.n	80158da <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015828:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 801582c:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 8015830:	4486      	add	lr, r0
 8015832:	fa1f fe8e 	uxth.w	lr, lr
 8015836:	fa0f f38e 	sxth.w	r3, lr
 801583a:	4599      	cmp	r9, r3
 801583c:	9309      	str	r3, [sp, #36]	; 0x24
 801583e:	da4c      	bge.n	80158da <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015840:	4550      	cmp	r0, sl
 8015842:	da4a      	bge.n	80158da <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015844:	9b06      	ldr	r3, [sp, #24]
 8015846:	459c      	cmp	ip, r3
 8015848:	bfb8      	it	lt
 801584a:	469c      	movlt	ip, r3
 801584c:	9b08      	ldr	r3, [sp, #32]
 801584e:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8015852:	4548      	cmp	r0, r9
 8015854:	bfb8      	it	lt
 8015856:	4648      	movlt	r0, r9
 8015858:	4699      	mov	r9, r3
 801585a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801585c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8015860:	4599      	cmp	r9, r3
 8015862:	bfc8      	it	gt
 8015864:	462a      	movgt	r2, r5
 8015866:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015868:	4553      	cmp	r3, sl
 801586a:	bfd8      	it	le
 801586c:	4671      	movle	r1, lr
 801586e:	eba2 020c 	sub.w	r2, r2, ip
 8015872:	1a09      	subs	r1, r1, r0
 8015874:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8015878:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 801587c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8015880:	9b07      	ldr	r3, [sp, #28]
 8015882:	1b12      	subs	r2, r2, r4
 8015884:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8015888:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801588c:	1ad2      	subs	r2, r2, r3
 801588e:	4b16      	ldr	r3, [pc, #88]	; (80158e8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8015890:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8015894:	681a      	ldr	r2, [r3, #0]
 8015896:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 801589a:	b109      	cbz	r1, 80158a0 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 801589c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 801589e:	b900      	cbnz	r0, 80158a2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 80158a0:	6890      	ldr	r0, [r2, #8]
 80158a2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80158a6:	9b07      	ldr	r3, [sp, #28]
 80158a8:	6801      	ldr	r1, [r0, #0]
 80158aa:	f04f 0c01 	mov.w	ip, #1
 80158ae:	f8cd c008 	str.w	ip, [sp, #8]
 80158b2:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 80158b6:	f8cd c004 	str.w	ip, [sp, #4]
 80158ba:	4413      	add	r3, r2
 80158bc:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 80158c0:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 80158c4:	f8cd c000 	str.w	ip, [sp]
 80158c8:	4422      	add	r2, r4
 80158ca:	f8d1 9008 	ldr.w	r9, [r1, #8]
 80158ce:	b21b      	sxth	r3, r3
 80158d0:	b212      	sxth	r2, r2
 80158d2:	4659      	mov	r1, fp
 80158d4:	47c8      	blx	r9
 80158d6:	46d1      	mov	r9, sl
 80158d8:	e788      	b.n	80157ec <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 80158da:	2300      	movs	r3, #0
 80158dc:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 80158e0:	e7cc      	b.n	801587c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 80158e2:	b013      	add	sp, #76	; 0x4c
 80158e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158e8:	20013854 	.word	0x20013854

080158ec <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 80158ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158f0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80158f4:	2bff      	cmp	r3, #255	; 0xff
 80158f6:	4606      	mov	r6, r0
 80158f8:	4689      	mov	r9, r1
 80158fa:	d008      	beq.n	801590e <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 80158fc:	2300      	movs	r3, #0
 80158fe:	8003      	strh	r3, [r0, #0]
 8015900:	8043      	strh	r3, [r0, #2]
 8015902:	8083      	strh	r3, [r0, #4]
 8015904:	4630      	mov	r0, r6
 8015906:	80f3      	strh	r3, [r6, #6]
 8015908:	b003      	add	sp, #12
 801590a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801590e:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8015912:	4659      	mov	r1, fp
 8015914:	4668      	mov	r0, sp
 8015916:	f006 fdab 	bl	801c470 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801591a:	4658      	mov	r0, fp
 801591c:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8015920:	f9bd 7000 	ldrsh.w	r7, [sp]
 8015924:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8015928:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 801592c:	f006 fd38 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015930:	4284      	cmp	r4, r0
 8015932:	d10d      	bne.n	8015950 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8015934:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8015938:	4658      	mov	r0, fp
 801593a:	f006 fd65 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801593e:	4580      	cmp	r8, r0
 8015940:	d129      	bne.n	8015996 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8015942:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8015946:	8037      	strh	r7, [r6, #0]
 8015948:	f8a6 a002 	strh.w	sl, [r6, #2]
 801594c:	80b5      	strh	r5, [r6, #4]
 801594e:	e7d9      	b.n	8015904 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8015950:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8015954:	4658      	mov	r0, fp
 8015956:	f006 fd23 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801595a:	1b7f      	subs	r7, r7, r5
 801595c:	b2bd      	uxth	r5, r7
 801595e:	b22f      	sxth	r7, r5
 8015960:	4428      	add	r0, r5
 8015962:	2f00      	cmp	r7, #0
 8015964:	b2a3      	uxth	r3, r4
 8015966:	b280      	uxth	r0, r0
 8015968:	bfb8      	it	lt
 801596a:	18ed      	addlt	r5, r5, r3
 801596c:	4403      	add	r3, r0
 801596e:	b29b      	uxth	r3, r3
 8015970:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8015974:	bfb8      	it	lt
 8015976:	b22d      	sxthlt	r5, r5
 8015978:	b219      	sxth	r1, r3
 801597a:	bfae      	itee	ge
 801597c:	4625      	movge	r5, r4
 801597e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8015982:	2700      	movlt	r7, #0
 8015984:	4291      	cmp	r1, r2
 8015986:	bfc4      	itt	gt
 8015988:	1a9c      	subgt	r4, r3, r2
 801598a:	b224      	sxthgt	r4, r4
 801598c:	42ac      	cmp	r4, r5
 801598e:	bfc4      	itt	gt
 8015990:	b207      	sxthgt	r7, r0
 8015992:	4625      	movgt	r5, r4
 8015994:	e7d0      	b.n	8015938 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8015996:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 801599a:	4658      	mov	r0, fp
 801599c:	f006 fd34 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80159a0:	ebaa 0404 	sub.w	r4, sl, r4
 80159a4:	b2a4      	uxth	r4, r4
 80159a6:	fa0f fa84 	sxth.w	sl, r4
 80159aa:	4420      	add	r0, r4
 80159ac:	f1ba 0f00 	cmp.w	sl, #0
 80159b0:	fa1f f288 	uxth.w	r2, r8
 80159b4:	b280      	uxth	r0, r0
 80159b6:	bfb8      	it	lt
 80159b8:	18a3      	addlt	r3, r4, r2
 80159ba:	4402      	add	r2, r0
 80159bc:	b292      	uxth	r2, r2
 80159be:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 80159c2:	bfb8      	it	lt
 80159c4:	b21b      	sxthlt	r3, r3
 80159c6:	b214      	sxth	r4, r2
 80159c8:	bfae      	itee	ge
 80159ca:	4643      	movge	r3, r8
 80159cc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80159d0:	f04f 0a00 	movlt.w	sl, #0
 80159d4:	428c      	cmp	r4, r1
 80159d6:	bfc4      	itt	gt
 80159d8:	eba2 0801 	subgt.w	r8, r2, r1
 80159dc:	fa0f f888 	sxthgt.w	r8, r8
 80159e0:	4598      	cmp	r8, r3
 80159e2:	bfc4      	itt	gt
 80159e4:	fa0f fa80 	sxthgt.w	sl, r0
 80159e8:	4643      	movgt	r3, r8
 80159ea:	e7ac      	b.n	8015946 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

080159ec <_ZNK8touchgfx5Image17invalidateContentEv>:
 80159ec:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80159f0:	b12a      	cbz	r2, 80159fe <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80159f2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80159f6:	b112      	cbz	r2, 80159fe <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80159f8:	6803      	ldr	r3, [r0, #0]
 80159fa:	695b      	ldr	r3, [r3, #20]
 80159fc:	4718      	bx	r3
 80159fe:	4770      	bx	lr

08015a00 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8015a00:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8015a04:	600b      	str	r3, [r1, #0]
 8015a06:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8015a0a:	6013      	str	r3, [r2, #0]
 8015a0c:	4770      	bx	lr

08015a0e <_ZN8touchgfx5Gauge8setWidthEs>:
 8015a0e:	8101      	strh	r1, [r0, #8]
 8015a10:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8015a14:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8015a18:	4770      	bx	lr

08015a1a <_ZN8touchgfx5Gauge9setHeightEs>:
 8015a1a:	8141      	strh	r1, [r0, #10]
 8015a1c:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8015a20:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8015a24:	4770      	bx	lr

08015a26 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8015a26:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8015a2a:	4770      	bx	lr

08015a2c <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8015a2c:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8015a30:	4770      	bx	lr

08015a32 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8015a32:	4770      	bx	lr

08015a34 <_ZN8touchgfx5GaugeD1Ev>:
 8015a34:	4770      	bx	lr

08015a36 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8015a36:	b538      	push	{r3, r4, r5, lr}
 8015a38:	4604      	mov	r4, r0
 8015a3a:	460d      	mov	r5, r1
 8015a3c:	f7fc fe07 	bl	801264e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8015a40:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8015a44:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8015a48:	bd38      	pop	{r3, r4, r5, pc}

08015a4a <_ZN8touchgfx5GaugeD0Ev>:
 8015a4a:	b510      	push	{r4, lr}
 8015a4c:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8015a50:	4604      	mov	r4, r0
 8015a52:	f017 f9b2 	bl	802cdba <_ZdlPvj>
 8015a56:	4620      	mov	r0, r4
 8015a58:	bd10      	pop	{r4, pc}

08015a5a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8015a5a:	b510      	push	{r4, lr}
 8015a5c:	6803      	ldr	r3, [r0, #0]
 8015a5e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015a62:	4604      	mov	r4, r0
 8015a64:	4798      	blx	r3
 8015a66:	b170      	cbz	r0, 8015a86 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015a68:	6823      	ldr	r3, [r4, #0]
 8015a6a:	4620      	mov	r0, r4
 8015a6c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015a70:	4798      	blx	r3
 8015a72:	b140      	cbz	r0, 8015a86 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015a74:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8015a78:	b12b      	cbz	r3, 8015a86 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015a7a:	6823      	ldr	r3, [r4, #0]
 8015a7c:	4620      	mov	r0, r4
 8015a7e:	695b      	ldr	r3, [r3, #20]
 8015a80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015a84:	4718      	bx	r3
 8015a86:	bd10      	pop	{r4, pc}

08015a88 <_ZN8touchgfx5GaugeC1Ev>:
 8015a88:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015a8a:	4604      	mov	r4, r0
 8015a8c:	4626      	mov	r6, r4
 8015a8e:	f7fc feff 	bl	8012890 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8015a92:	4b18      	ldr	r3, [pc, #96]	; (8015af4 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8015a94:	f846 3bb4 	str.w	r3, [r6], #180
 8015a98:	a902      	add	r1, sp, #8
 8015a9a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015a9e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8015aa2:	4630      	mov	r0, r6
 8015aa4:	f015 f9a4 	bl	802adf0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8015aa8:	2500      	movs	r5, #0
 8015aaa:	2301      	movs	r3, #1
 8015aac:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8015ab0:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8015ab4:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8015ab8:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8015abc:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8015ac0:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8015ac4:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8015ac8:	4638      	mov	r0, r7
 8015aca:	f014 fbd5 	bl	802a278 <_ZN8touchgfx6CircleC1Ev>
 8015ace:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8015ad2:	4620      	mov	r0, r4
 8015ad4:	f7fc ff7d 	bl	80129d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8015ad8:	4639      	mov	r1, r7
 8015ada:	4620      	mov	r0, r4
 8015adc:	f7fc ff38 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015ae0:	4620      	mov	r0, r4
 8015ae2:	4631      	mov	r1, r6
 8015ae4:	f7fc ff34 	bl	8012950 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015ae8:	4620      	mov	r0, r4
 8015aea:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8015aee:	b003      	add	sp, #12
 8015af0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015af2:	bf00      	nop
 8015af4:	08031d64 	.word	0x08031d64

08015af8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8015af8:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8015afc:	4770      	bx	lr

08015afe <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8015afe:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8015b02:	4770      	bx	lr

08015b04 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8015b04:	b538      	push	{r3, r4, r5, lr}
 8015b06:	8902      	ldrh	r2, [r0, #8]
 8015b08:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015b0c:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8015b10:	4604      	mov	r4, r0
 8015b12:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8015b16:	2200      	movs	r2, #0
 8015b18:	4611      	mov	r1, r2
 8015b1a:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8015b1e:	4628      	mov	r0, r5
 8015b20:	f7ed fe4c 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8015b24:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8015b28:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8015b2c:	1a9b      	subs	r3, r3, r2
 8015b2e:	ee07 3a90 	vmov	s15, r3
 8015b32:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8015b36:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8015b3a:	1a9b      	subs	r3, r3, r2
 8015b3c:	ee07 3a10 	vmov	s14, r3
 8015b40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b44:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015b48:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8015b4c:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8015b50:	4628      	mov	r0, r5
 8015b52:	f015 f999 	bl	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015b56:	4b16      	ldr	r3, [pc, #88]	; (8015bb0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8015b58:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8015b5c:	4628      	mov	r0, r5
 8015b5e:	f015 f993 	bl	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015b62:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8015b66:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8015b6a:	ee07 3a90 	vmov	s15, r3
 8015b6e:	ee07 2a10 	vmov	s14, r2
 8015b72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b76:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015b7a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8015b7e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8015b82:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8015b86:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8015b8a:	4628      	mov	r0, r5
 8015b8c:	f015 f97c 	bl	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015b90:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8015b94:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8015b98:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8015b9c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8015ba0:	4628      	mov	r0, r5
 8015ba2:	f015 f971 	bl	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015ba6:	2301      	movs	r3, #1
 8015ba8:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015bac:	bd38      	pop	{r3, r4, r5, pc}
 8015bae:	bf00      	nop
 8015bb0:	43960000 	.word	0x43960000

08015bb4 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8015bb4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015bb6:	4604      	mov	r4, r0
 8015bb8:	a802      	add	r0, sp, #8
 8015bba:	4616      	mov	r6, r2
 8015bbc:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8015bc0:	461d      	mov	r5, r3
 8015bc2:	4601      	mov	r1, r0
 8015bc4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015bc8:	f015 fab4 	bl	802b134 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8015bcc:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8015bd0:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8015bd4:	4620      	mov	r0, r4
 8015bd6:	f7ff ff95 	bl	8015b04 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015bda:	b002      	add	sp, #8
 8015bdc:	bd70      	pop	{r4, r5, r6, pc}

08015bde <_ZN8touchgfx5Gauge9setCenterEii>:
 8015bde:	b570      	push	{r4, r5, r6, lr}
 8015be0:	4606      	mov	r6, r0
 8015be2:	460d      	mov	r5, r1
 8015be4:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8015be8:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8015bec:	4614      	mov	r4, r2
 8015bee:	f7ff ff89 	bl	8015b04 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015bf2:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8015bf6:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8015bfa:	1aa4      	subs	r4, r4, r2
 8015bfc:	1a6d      	subs	r5, r5, r1
 8015bfe:	0164      	lsls	r4, r4, #5
 8015c00:	016d      	lsls	r5, r5, #5
 8015c02:	3410      	adds	r4, #16
 8015c04:	3510      	adds	r5, #16
 8015c06:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8015c0a:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8015c0e:	bd70      	pop	{r4, r5, r6, pc}

08015c10 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8015c10:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015c12:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8015c14:	0149      	lsls	r1, r1, #5
 8015c16:	4299      	cmp	r1, r3
 8015c18:	4604      	mov	r4, r0
 8015c1a:	9101      	str	r1, [sp, #4]
 8015c1c:	d00b      	beq.n	8015c36 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8015c1e:	4601      	mov	r1, r0
 8015c20:	aa01      	add	r2, sp, #4
 8015c22:	a802      	add	r0, sp, #8
 8015c24:	f014 fd26 	bl	802a674 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8015c28:	9b01      	ldr	r3, [sp, #4]
 8015c2a:	63e3      	str	r3, [r4, #60]	; 0x3c
 8015c2c:	6823      	ldr	r3, [r4, #0]
 8015c2e:	a902      	add	r1, sp, #8
 8015c30:	691b      	ldr	r3, [r3, #16]
 8015c32:	4620      	mov	r0, r4
 8015c34:	4798      	blx	r3
 8015c36:	b004      	add	sp, #16
 8015c38:	bd10      	pop	{r4, pc}
	...

08015c3c <_ZN8touchgfx5Gauge8setValueEi>:
 8015c3c:	b570      	push	{r4, r5, r6, lr}
 8015c3e:	4604      	mov	r4, r0
 8015c40:	f7fc fd58 	bl	80126f4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8015c44:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8015c48:	429a      	cmp	r2, r3
 8015c4a:	bfac      	ite	ge
 8015c4c:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8015c50:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8015c54:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015c58:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8015c5c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015c60:	1ac9      	subs	r1, r1, r3
 8015c62:	2900      	cmp	r1, #0
 8015c64:	bfb8      	it	lt
 8015c66:	4249      	neglt	r1, r1
 8015c68:	b289      	uxth	r1, r1
 8015c6a:	4620      	mov	r0, r4
 8015c6c:	f7fc fd64 	bl	8012738 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8015c70:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015c74:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8015c78:	eddf 6a19 	vldr	s13, [pc, #100]	; 8015ce0 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8015c7c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8015ce4 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8015c80:	429a      	cmp	r2, r3
 8015c82:	4605      	mov	r5, r0
 8015c84:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8015c88:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015c8c:	da15      	bge.n	8015cba <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8015c8e:	1b5b      	subs	r3, r3, r5
 8015c90:	ee07 3a90 	vmov	s15, r3
 8015c94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015c98:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015c9c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015ca0:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015ca4:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015ca8:	f015 f85d 	bl	802ad66 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015cac:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015cb0:	1b49      	subs	r1, r1, r5
 8015cb2:	4630      	mov	r0, r6
 8015cb4:	f7ff ffac 	bl	8015c10 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8015cb8:	bd70      	pop	{r4, r5, r6, pc}
 8015cba:	442b      	add	r3, r5
 8015cbc:	ee07 3a90 	vmov	s15, r3
 8015cc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015cc4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015cc8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015ccc:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015cd0:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015cd4:	f015 f847 	bl	802ad66 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015cd8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015cdc:	4429      	add	r1, r5
 8015cde:	e7e8      	b.n	8015cb2 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8015ce0:	43340000 	.word	0x43340000
 8015ce4:	40490fdb 	.word	0x40490fdb

08015ce8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8015ce8:	b510      	push	{r4, lr}
 8015cea:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8015cee:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8015cf2:	0149      	lsls	r1, r1, #5
 8015cf4:	0152      	lsls	r2, r2, #5
 8015cf6:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8015cfa:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8015cfe:	4604      	mov	r4, r0
 8015d00:	f7fc fca2 	bl	8012648 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8015d04:	4601      	mov	r1, r0
 8015d06:	4620      	mov	r0, r4
 8015d08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015d0c:	f7ff bf96 	b.w	8015c3c <_ZN8touchgfx5Gauge8setValueEi>

08015d10 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8015d10:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8015d14:	4770      	bx	lr

08015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8015d16:	b570      	push	{r4, r5, r6, lr}
 8015d18:	880b      	ldrh	r3, [r1, #0]
 8015d1a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8015d1c:	4605      	mov	r5, r0
 8015d1e:	8813      	ldrh	r3, [r2, #0]
 8015d20:	f825 3f30 	strh.w	r3, [r5, #48]!
 8015d24:	4604      	mov	r4, r0
 8015d26:	4628      	mov	r0, r5
 8015d28:	f006 fb3a 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015d2c:	4606      	mov	r6, r0
 8015d2e:	4628      	mov	r0, r5
 8015d30:	f006 fb6a 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015d34:	6823      	ldr	r3, [r4, #0]
 8015d36:	4605      	mov	r5, r0
 8015d38:	4631      	mov	r1, r6
 8015d3a:	4620      	mov	r0, r4
 8015d3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015d3e:	4798      	blx	r3
 8015d40:	6823      	ldr	r3, [r4, #0]
 8015d42:	4629      	mov	r1, r5
 8015d44:	4620      	mov	r0, r4
 8015d46:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015d48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d4c:	4718      	bx	r3

08015d4e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8015d4e:	b510      	push	{r4, lr}
 8015d50:	4604      	mov	r4, r0
 8015d52:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8015d54:	b150      	cbz	r0, 8015d6c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015d56:	6803      	ldr	r3, [r0, #0]
 8015d58:	68db      	ldr	r3, [r3, #12]
 8015d5a:	4798      	blx	r3
 8015d5c:	b130      	cbz	r0, 8015d6c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015d5e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8015d60:	6803      	ldr	r3, [r0, #0]
 8015d62:	4621      	mov	r1, r4
 8015d64:	689b      	ldr	r3, [r3, #8]
 8015d66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015d6a:	4718      	bx	r3
 8015d6c:	bd10      	pop	{r4, pc}

08015d6e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8015d6e:	b510      	push	{r4, lr}
 8015d70:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8015d74:	2bff      	cmp	r3, #255	; 0xff
 8015d76:	4604      	mov	r4, r0
 8015d78:	d006      	beq.n	8015d88 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8015d7a:	2300      	movs	r3, #0
 8015d7c:	8003      	strh	r3, [r0, #0]
 8015d7e:	8043      	strh	r3, [r0, #2]
 8015d80:	8083      	strh	r3, [r0, #4]
 8015d82:	80c3      	strh	r3, [r0, #6]
 8015d84:	4620      	mov	r0, r4
 8015d86:	bd10      	pop	{r4, pc}
 8015d88:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8015d8c:	b11b      	cbz	r3, 8015d96 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8015d8e:	3130      	adds	r1, #48	; 0x30
 8015d90:	f006 fb6e 	bl	801c470 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015d94:	e7f6      	b.n	8015d84 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8015d96:	312e      	adds	r1, #46	; 0x2e
 8015d98:	e7fa      	b.n	8015d90 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08015d9c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8015d9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015da0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8015da4:	b08a      	sub	sp, #40	; 0x28
 8015da6:	4604      	mov	r4, r0
 8015da8:	4688      	mov	r8, r1
 8015daa:	2b00      	cmp	r3, #0
 8015dac:	d066      	beq.n	8015e7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8015dae:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8015db0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015db4:	a805      	add	r0, sp, #20
 8015db6:	f006 faf3 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015dba:	4607      	mov	r7, r0
 8015dbc:	a805      	add	r0, sp, #20
 8015dbe:	f006 fb23 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015dc2:	f9b8 6000 	ldrsh.w	r6, [r8]
 8015dc6:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8015dca:	4432      	add	r2, r6
 8015dcc:	b292      	uxth	r2, r2
 8015dce:	2300      	movs	r3, #0
 8015dd0:	fa0f fc82 	sxth.w	ip, r2
 8015dd4:	459c      	cmp	ip, r3
 8015dd6:	9306      	str	r3, [sp, #24]
 8015dd8:	dd52      	ble.n	8015e80 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015dda:	42b7      	cmp	r7, r6
 8015ddc:	dd50      	ble.n	8015e80 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015dde:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8015de2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015de6:	442b      	add	r3, r5
 8015de8:	b29b      	uxth	r3, r3
 8015dea:	b219      	sxth	r1, r3
 8015dec:	2900      	cmp	r1, #0
 8015dee:	dd47      	ble.n	8015e80 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015df0:	42a8      	cmp	r0, r5
 8015df2:	dd45      	ble.n	8015e80 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015df4:	4567      	cmp	r7, ip
 8015df6:	bfb8      	it	lt
 8015df8:	b2ba      	uxthlt	r2, r7
 8015dfa:	4288      	cmp	r0, r1
 8015dfc:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8015e00:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8015e04:	bfb8      	it	lt
 8015e06:	b283      	uxthlt	r3, r0
 8015e08:	1b92      	subs	r2, r2, r6
 8015e0a:	1b5b      	subs	r3, r3, r5
 8015e0c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015e10:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015e14:	f8ad 6018 	strh.w	r6, [sp, #24]
 8015e18:	f8ad 501a 	strh.w	r5, [sp, #26]
 8015e1c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015e20:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015e24:	429a      	cmp	r2, r3
 8015e26:	d026      	beq.n	8015e76 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015e28:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015e2c:	2b00      	cmp	r3, #0
 8015e2e:	dd22      	ble.n	8015e76 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015e30:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8015e34:	2b00      	cmp	r3, #0
 8015e36:	dd1e      	ble.n	8015e76 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015e38:	2300      	movs	r3, #0
 8015e3a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8015e3e:	6823      	ldr	r3, [r4, #0]
 8015e40:	a908      	add	r1, sp, #32
 8015e42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015e44:	4620      	mov	r0, r4
 8015e46:	4798      	blx	r3
 8015e48:	4b0f      	ldr	r3, [pc, #60]	; (8015e88 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8015e4a:	681b      	ldr	r3, [r3, #0]
 8015e4c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015e50:	b10a      	cbz	r2, 8015e56 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8015e52:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015e54:	b900      	cbnz	r0, 8015e58 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8015e56:	6898      	ldr	r0, [r3, #8]
 8015e58:	6801      	ldr	r1, [r0, #0]
 8015e5a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015e5e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015e62:	2501      	movs	r5, #1
 8015e64:	9502      	str	r5, [sp, #8]
 8015e66:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015e6a:	9401      	str	r4, [sp, #4]
 8015e6c:	ac06      	add	r4, sp, #24
 8015e6e:	9400      	str	r4, [sp, #0]
 8015e70:	688c      	ldr	r4, [r1, #8]
 8015e72:	a905      	add	r1, sp, #20
 8015e74:	47a0      	blx	r4
 8015e76:	b00a      	add	sp, #40	; 0x28
 8015e78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015e7c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8015e7e:	e797      	b.n	8015db0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8015e80:	2300      	movs	r3, #0
 8015e82:	9307      	str	r3, [sp, #28]
 8015e84:	e7ca      	b.n	8015e1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8015e86:	bf00      	nop
 8015e88:	20013854 	.word	0x20013854

08015e8c <_ZNK8touchgfx6Button17invalidateContentEv>:
 8015e8c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8015e90:	b12a      	cbz	r2, 8015e9e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015e92:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015e96:	b112      	cbz	r2, 8015e9e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015e98:	6803      	ldr	r3, [r0, #0]
 8015e9a:	695b      	ldr	r3, [r3, #20]
 8015e9c:	4718      	bx	r3
 8015e9e:	4770      	bx	lr

08015ea0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8015ea0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015ea4:	4b2f      	ldr	r3, [pc, #188]	; (8015f64 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8015ea6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015ea8:	881b      	ldrh	r3, [r3, #0]
 8015eaa:	4293      	cmp	r3, r2
 8015eac:	b08d      	sub	sp, #52	; 0x34
 8015eae:	4604      	mov	r4, r0
 8015eb0:	460f      	mov	r7, r1
 8015eb2:	d954      	bls.n	8015f5e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015eb4:	4b2c      	ldr	r3, [pc, #176]	; (8015f68 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8015eb6:	6819      	ldr	r1, [r3, #0]
 8015eb8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8015ebc:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8015ec0:	4a2a      	ldr	r2, [pc, #168]	; (8015f6c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8015ec2:	6812      	ldr	r2, [r2, #0]
 8015ec4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8015ec8:	2900      	cmp	r1, #0
 8015eca:	d048      	beq.n	8015f5e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015ecc:	785a      	ldrb	r2, [r3, #1]
 8015ece:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8015ed2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8015ed6:	4b26      	ldr	r3, [pc, #152]	; (8015f70 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8015ed8:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8015edc:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8015ee0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8015ee4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8015ee6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8015eea:	9107      	str	r1, [sp, #28]
 8015eec:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8015ef0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8015ef4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8015ef8:	681a      	ldr	r2, [r3, #0]
 8015efa:	f88d 8020 	strb.w	r8, [sp, #32]
 8015efe:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8015f02:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8015f06:	9609      	str	r6, [sp, #36]	; 0x24
 8015f08:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8015f0c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8015f10:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8015f14:	b10b      	cbz	r3, 8015f1a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8015f16:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8015f18:	b905      	cbnz	r5, 8015f1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8015f1a:	6895      	ldr	r5, [r2, #8]
 8015f1c:	ae05      	add	r6, sp, #20
 8015f1e:	4621      	mov	r1, r4
 8015f20:	4630      	mov	r0, r6
 8015f22:	f003 ff71 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015f26:	4b13      	ldr	r3, [pc, #76]	; (8015f74 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8015f28:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015f2a:	6818      	ldr	r0, [r3, #0]
 8015f2c:	f7f4 fc58 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8015f30:	6823      	ldr	r3, [r4, #0]
 8015f32:	4680      	mov	r8, r0
 8015f34:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015f36:	4620      	mov	r0, r4
 8015f38:	4798      	blx	r3
 8015f3a:	6823      	ldr	r3, [r4, #0]
 8015f3c:	4681      	mov	r9, r0
 8015f3e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015f42:	4620      	mov	r0, r4
 8015f44:	4798      	blx	r3
 8015f46:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8015f4a:	ab07      	add	r3, sp, #28
 8015f4c:	9300      	str	r3, [sp, #0]
 8015f4e:	f8cd 8004 	str.w	r8, [sp, #4]
 8015f52:	463b      	mov	r3, r7
 8015f54:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015f58:	4628      	mov	r0, r5
 8015f5a:	f7f4 fbf3 	bl	800a744 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015f5e:	b00d      	add	sp, #52	; 0x34
 8015f60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015f64:	200138b0 	.word	0x200138b0
 8015f68:	200138ac 	.word	0x200138ac
 8015f6c:	200138b4 	.word	0x200138b4
 8015f70:	20013854 	.word	0x20013854
 8015f74:	200138b8 	.word	0x200138b8

08015f78 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8015f78:	4770      	bx	lr

08015f7a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8015f7a:	4770      	bx	lr

08015f7c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8015f7c:	b510      	push	{r4, lr}
 8015f7e:	213c      	movs	r1, #60	; 0x3c
 8015f80:	4604      	mov	r4, r0
 8015f82:	f016 ff1a 	bl	802cdba <_ZdlPvj>
 8015f86:	4620      	mov	r0, r4
 8015f88:	bd10      	pop	{r4, pc}

08015f8a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8015f8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015f8e:	461c      	mov	r4, r3
 8015f90:	4606      	mov	r6, r0
 8015f92:	9f06      	ldr	r7, [sp, #24]
 8015f94:	f7ff febf 	bl	8015d16 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8015f98:	8823      	ldrh	r3, [r4, #0]
 8015f9a:	86b3      	strh	r3, [r6, #52]	; 0x34
 8015f9c:	883b      	ldrh	r3, [r7, #0]
 8015f9e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8015fa0:	4638      	mov	r0, r7
 8015fa2:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8015fa6:	f006 f9fb 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015faa:	f04f 0802 	mov.w	r8, #2
 8015fae:	fb95 f5f8 	sdiv	r5, r5, r8
 8015fb2:	b2ad      	uxth	r5, r5
 8015fb4:	fb90 f0f8 	sdiv	r0, r0, r8
 8015fb8:	1a2d      	subs	r5, r5, r0
 8015fba:	8735      	strh	r5, [r6, #56]	; 0x38
 8015fbc:	4638      	mov	r0, r7
 8015fbe:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8015fc2:	fb94 f4f8 	sdiv	r4, r4, r8
 8015fc6:	f006 fa1f 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015fca:	b2a4      	uxth	r4, r4
 8015fcc:	fb90 f0f8 	sdiv	r0, r0, r8
 8015fd0:	1a24      	subs	r4, r4, r0
 8015fd2:	8774      	strh	r4, [r6, #58]	; 0x3a
 8015fd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015fd8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8015fd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015fdc:	4604      	mov	r4, r0
 8015fde:	b08c      	sub	sp, #48	; 0x30
 8015fe0:	460d      	mov	r5, r1
 8015fe2:	f7ff fedb 	bl	8015d9c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8015fe6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8015fea:	2b00      	cmp	r3, #0
 8015fec:	d05d      	beq.n	80160aa <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8015fee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015ff0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015ff4:	a805      	add	r0, sp, #20
 8015ff6:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8015ffa:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8015ffe:	f006 f9cf 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016002:	4606      	mov	r6, r0
 8016004:	a805      	add	r0, sp, #20
 8016006:	f006 f9ff 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801600a:	6869      	ldr	r1, [r5, #4]
 801600c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016010:	6828      	ldr	r0, [r5, #0]
 8016012:	f8ad 8018 	strh.w	r8, [sp, #24]
 8016016:	ab08      	add	r3, sp, #32
 8016018:	ad08      	add	r5, sp, #32
 801601a:	c303      	stmia	r3!, {r0, r1}
 801601c:	a906      	add	r1, sp, #24
 801601e:	4628      	mov	r0, r5
 8016020:	f8ad 701a 	strh.w	r7, [sp, #26]
 8016024:	f8ad 601c 	strh.w	r6, [sp, #28]
 8016028:	f7fc fe18 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 801602c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016030:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8016034:	429a      	cmp	r2, r3
 8016036:	d035      	beq.n	80160a4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8016038:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801603c:	2b00      	cmp	r3, #0
 801603e:	dd31      	ble.n	80160a4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8016040:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8016044:	2b00      	cmp	r3, #0
 8016046:	dd2d      	ble.n	80160a4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8016048:	2300      	movs	r3, #0
 801604a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801604e:	6823      	ldr	r3, [r4, #0]
 8016050:	a90a      	add	r1, sp, #40	; 0x28
 8016052:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016054:	4620      	mov	r0, r4
 8016056:	4798      	blx	r3
 8016058:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801605c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801605e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016062:	1a9b      	subs	r3, r3, r2
 8016064:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016068:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 801606a:	1ac9      	subs	r1, r1, r3
 801606c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8016070:	490f      	ldr	r1, [pc, #60]	; (80160b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8016072:	6809      	ldr	r1, [r1, #0]
 8016074:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8016078:	b108      	cbz	r0, 801607e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 801607a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 801607c:	b900      	cbnz	r0, 8016080 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801607e:	6888      	ldr	r0, [r1, #8]
 8016080:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8016084:	440b      	add	r3, r1
 8016086:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801608a:	2601      	movs	r6, #1
 801608c:	440a      	add	r2, r1
 801608e:	6801      	ldr	r1, [r0, #0]
 8016090:	9602      	str	r6, [sp, #8]
 8016092:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8016096:	e9cd 5400 	strd	r5, r4, [sp]
 801609a:	b21b      	sxth	r3, r3
 801609c:	688c      	ldr	r4, [r1, #8]
 801609e:	b212      	sxth	r2, r2
 80160a0:	a905      	add	r1, sp, #20
 80160a2:	47a0      	blx	r4
 80160a4:	b00c      	add	sp, #48	; 0x30
 80160a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80160aa:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80160ac:	e7a0      	b.n	8015ff0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80160ae:	bf00      	nop
 80160b0:	20013854 	.word	0x20013854

080160b4 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80160b4:	b510      	push	{r4, lr}
 80160b6:	2101      	movs	r1, #1
 80160b8:	2200      	movs	r2, #0
 80160ba:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80160be:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80160c2:	4c0e      	ldr	r4, [pc, #56]	; (80160fc <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80160c4:	8082      	strh	r2, [r0, #4]
 80160c6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80160ca:	80c2      	strh	r2, [r0, #6]
 80160cc:	8102      	strh	r2, [r0, #8]
 80160ce:	8142      	strh	r2, [r0, #10]
 80160d0:	8182      	strh	r2, [r0, #12]
 80160d2:	81c2      	strh	r2, [r0, #14]
 80160d4:	8202      	strh	r2, [r0, #16]
 80160d6:	8242      	strh	r2, [r0, #18]
 80160d8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80160dc:	61c2      	str	r2, [r0, #28]
 80160de:	8402      	strh	r2, [r0, #32]
 80160e0:	8442      	strh	r2, [r0, #34]	; 0x22
 80160e2:	6282      	str	r2, [r0, #40]	; 0x28
 80160e4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80160e8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80160ea:	8601      	strh	r1, [r0, #48]	; 0x30
 80160ec:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80160f0:	6004      	str	r4, [r0, #0]
 80160f2:	8681      	strh	r1, [r0, #52]	; 0x34
 80160f4:	86c1      	strh	r1, [r0, #54]	; 0x36
 80160f6:	8702      	strh	r2, [r0, #56]	; 0x38
 80160f8:	8742      	strh	r2, [r0, #58]	; 0x3a
 80160fa:	bd10      	pop	{r4, pc}
 80160fc:	08031e4c 	.word	0x08031e4c

08016100 <_ZN8touchgfx5ImageD1Ev>:
 8016100:	4770      	bx	lr

08016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8016102:	b570      	push	{r4, r5, r6, lr}
 8016104:	880b      	ldrh	r3, [r1, #0]
 8016106:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016108:	4604      	mov	r4, r0
 801610a:	4608      	mov	r0, r1
 801610c:	460d      	mov	r5, r1
 801610e:	f006 f947 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016112:	4606      	mov	r6, r0
 8016114:	4628      	mov	r0, r5
 8016116:	f006 f977 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801611a:	6823      	ldr	r3, [r4, #0]
 801611c:	4605      	mov	r5, r0
 801611e:	4631      	mov	r1, r6
 8016120:	4620      	mov	r0, r4
 8016122:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016124:	4798      	blx	r3
 8016126:	6823      	ldr	r3, [r4, #0]
 8016128:	4629      	mov	r1, r5
 801612a:	4620      	mov	r0, r4
 801612c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801612e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016132:	4718      	bx	r3

08016134 <_ZN8touchgfx5ImageD0Ev>:
 8016134:	b510      	push	{r4, lr}
 8016136:	212c      	movs	r1, #44	; 0x2c
 8016138:	4604      	mov	r4, r0
 801613a:	f016 fe3e 	bl	802cdba <_ZdlPvj>
 801613e:	4620      	mov	r0, r4
 8016140:	bd10      	pop	{r4, pc}

08016142 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8016142:	b510      	push	{r4, lr}
 8016144:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8016148:	2bff      	cmp	r3, #255	; 0xff
 801614a:	4604      	mov	r4, r0
 801614c:	d006      	beq.n	801615c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801614e:	2300      	movs	r3, #0
 8016150:	8003      	strh	r3, [r0, #0]
 8016152:	8043      	strh	r3, [r0, #2]
 8016154:	8083      	strh	r3, [r0, #4]
 8016156:	80c3      	strh	r3, [r0, #6]
 8016158:	4620      	mov	r0, r4
 801615a:	bd10      	pop	{r4, pc}
 801615c:	3126      	adds	r1, #38	; 0x26
 801615e:	f006 f987 	bl	801c470 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016162:	e7f9      	b.n	8016158 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08016164 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8016164:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016168:	4604      	mov	r4, r0
 801616a:	b088      	sub	sp, #32
 801616c:	f854 3b26 	ldr.w	r3, [r4], #38
 8016170:	2500      	movs	r5, #0
 8016172:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016174:	460f      	mov	r7, r1
 8016176:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801617a:	a904      	add	r1, sp, #16
 801617c:	4606      	mov	r6, r0
 801617e:	4798      	blx	r3
 8016180:	4620      	mov	r0, r4
 8016182:	f006 f90d 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016186:	4680      	mov	r8, r0
 8016188:	4620      	mov	r0, r4
 801618a:	f006 f93d 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801618e:	9506      	str	r5, [sp, #24]
 8016190:	ad06      	add	r5, sp, #24
 8016192:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016196:	4639      	mov	r1, r7
 8016198:	4628      	mov	r0, r5
 801619a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801619e:	f7fc fd5d 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 80161a2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80161a6:	2b00      	cmp	r3, #0
 80161a8:	dd19      	ble.n	80161de <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80161aa:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80161ae:	2b00      	cmp	r3, #0
 80161b0:	dd15      	ble.n	80161de <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80161b2:	4b0c      	ldr	r3, [pc, #48]	; (80161e4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80161b4:	681b      	ldr	r3, [r3, #0]
 80161b6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80161ba:	b10a      	cbz	r2, 80161c0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80161bc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80161be:	b900      	cbnz	r0, 80161c2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80161c0:	6898      	ldr	r0, [r3, #8]
 80161c2:	6801      	ldr	r1, [r0, #0]
 80161c4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80161c8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80161cc:	2701      	movs	r7, #1
 80161ce:	9702      	str	r7, [sp, #8]
 80161d0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80161d4:	e9cd 5600 	strd	r5, r6, [sp]
 80161d8:	688d      	ldr	r5, [r1, #8]
 80161da:	4621      	mov	r1, r4
 80161dc:	47a8      	blx	r5
 80161de:	b008      	add	sp, #32
 80161e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80161e4:	20013854 	.word	0x20013854

080161e8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80161e8:	4770      	bx	lr

080161ea <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80161ea:	b510      	push	{r4, lr}
 80161ec:	2148      	movs	r1, #72	; 0x48
 80161ee:	4604      	mov	r4, r0
 80161f0:	f016 fde3 	bl	802cdba <_ZdlPvj>
 80161f4:	4620      	mov	r0, r4
 80161f6:	bd10      	pop	{r4, pc}

080161f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80161f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80161fc:	b08d      	sub	sp, #52	; 0x34
 80161fe:	4604      	mov	r4, r0
 8016200:	460f      	mov	r7, r1
 8016202:	f7ff fdcb 	bl	8015d9c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8016206:	4a55      	ldr	r2, [pc, #340]	; (801635c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8016208:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801620a:	8812      	ldrh	r2, [r2, #0]
 801620c:	429a      	cmp	r2, r3
 801620e:	f240 8082 	bls.w	8016316 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016212:	4d53      	ldr	r5, [pc, #332]	; (8016360 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8016214:	682a      	ldr	r2, [r5, #0]
 8016216:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801621a:	4b52      	ldr	r3, [pc, #328]	; (8016364 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801621c:	681b      	ldr	r3, [r3, #0]
 801621e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8016222:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8016226:	2200      	movs	r2, #0
 8016228:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801622c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8016230:	2a03      	cmp	r2, #3
 8016232:	d811      	bhi.n	8016258 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8016234:	e8df f002 	tbb	[pc, r2]
 8016238:	89727902 	.word	0x89727902
 801623c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8016240:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8016244:	1ad2      	subs	r2, r2, r3
 8016246:	2002      	movs	r0, #2
 8016248:	f8ad 1010 	strh.w	r1, [sp, #16]
 801624c:	fb92 f2f0 	sdiv	r2, r2, r0
 8016250:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016254:	f8ad 200e 	strh.w	r2, [sp, #14]
 8016258:	f10d 080c 	add.w	r8, sp, #12
 801625c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016260:	f10d 0914 	add.w	r9, sp, #20
 8016264:	e889 0003 	stmia.w	r9, {r0, r1}
 8016268:	4639      	mov	r1, r7
 801626a:	4648      	mov	r0, r9
 801626c:	f7fc fcf6 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 8016270:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016274:	2b00      	cmp	r3, #0
 8016276:	dd4e      	ble.n	8016316 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016278:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801627c:	2b00      	cmp	r3, #0
 801627e:	dd4a      	ble.n	8016316 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016280:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8016284:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8016288:	1a9b      	subs	r3, r3, r2
 801628a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801628e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8016292:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8016296:	1a9b      	subs	r3, r3, r2
 8016298:	f8ad 3016 	strh.w	r3, [sp, #22]
 801629c:	6823      	ldr	r3, [r4, #0]
 801629e:	4641      	mov	r1, r8
 80162a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80162a2:	4620      	mov	r0, r4
 80162a4:	4798      	blx	r3
 80162a6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80162aa:	2b00      	cmp	r3, #0
 80162ac:	d053      	beq.n	8016356 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80162ae:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80162b0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80162b2:	682b      	ldr	r3, [r5, #0]
 80162b4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80162b8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80162bc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80162c0:	785b      	ldrb	r3, [r3, #1]
 80162c2:	9209      	str	r2, [sp, #36]	; 0x24
 80162c4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80162c8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80162cc:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80162d0:	2300      	movs	r3, #0
 80162d2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80162d6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80162da:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80162de:	4b22      	ldr	r3, [pc, #136]	; (8016368 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80162e0:	9607      	str	r6, [sp, #28]
 80162e2:	681b      	ldr	r3, [r3, #0]
 80162e4:	f88d 5020 	strb.w	r5, [sp, #32]
 80162e8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80162ec:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80162f0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80162f4:	b10a      	cbz	r2, 80162fa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80162f6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80162f8:	b904      	cbnz	r4, 80162fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80162fa:	689c      	ldr	r4, [r3, #8]
 80162fc:	4b1b      	ldr	r3, [pc, #108]	; (801636c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80162fe:	6818      	ldr	r0, [r3, #0]
 8016300:	f7f4 fa6e 	bl	800a7e0 <_ZNK8touchgfx5Texts7getTextEt>
 8016304:	ab07      	add	r3, sp, #28
 8016306:	9001      	str	r0, [sp, #4]
 8016308:	9300      	str	r3, [sp, #0]
 801630a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801630e:	464b      	mov	r3, r9
 8016310:	4620      	mov	r0, r4
 8016312:	f7f4 fa17 	bl	800a744 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8016316:	b00d      	add	sp, #52	; 0x34
 8016318:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801631c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8016320:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8016324:	1ad2      	subs	r2, r2, r3
 8016326:	3201      	adds	r2, #1
 8016328:	e78d      	b.n	8016246 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801632a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801632e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8016332:	1ad2      	subs	r2, r2, r3
 8016334:	3201      	adds	r2, #1
 8016336:	2002      	movs	r0, #2
 8016338:	f8ad 3010 	strh.w	r3, [sp, #16]
 801633c:	fb92 f2f0 	sdiv	r2, r2, r0
 8016340:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016344:	f8ad 200c 	strh.w	r2, [sp, #12]
 8016348:	e786      	b.n	8016258 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801634a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801634e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8016352:	1ad2      	subs	r2, r2, r3
 8016354:	e7ef      	b.n	8016336 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8016356:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8016358:	e7aa      	b.n	80162b0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801635a:	bf00      	nop
 801635c:	200138b0 	.word	0x200138b0
 8016360:	200138ac 	.word	0x200138ac
 8016364:	200138b4 	.word	0x200138b4
 8016368:	20013854 	.word	0x20013854
 801636c:	200138b8 	.word	0x200138b8

08016370 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8016370:	b510      	push	{r4, lr}
 8016372:	2101      	movs	r1, #1
 8016374:	4c13      	ldr	r4, [pc, #76]	; (80163c4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8016376:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801637a:	2200      	movs	r2, #0
 801637c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8016380:	6004      	str	r4, [r0, #0]
 8016382:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016386:	4c10      	ldr	r4, [pc, #64]	; (80163c8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8016388:	8082      	strh	r2, [r0, #4]
 801638a:	80c2      	strh	r2, [r0, #6]
 801638c:	8102      	strh	r2, [r0, #8]
 801638e:	8142      	strh	r2, [r0, #10]
 8016390:	8182      	strh	r2, [r0, #12]
 8016392:	81c2      	strh	r2, [r0, #14]
 8016394:	8202      	strh	r2, [r0, #16]
 8016396:	8242      	strh	r2, [r0, #18]
 8016398:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801639c:	61c2      	str	r2, [r0, #28]
 801639e:	8402      	strh	r2, [r0, #32]
 80163a0:	8442      	strh	r2, [r0, #34]	; 0x22
 80163a2:	6282      	str	r2, [r0, #40]	; 0x28
 80163a4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80163a8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80163aa:	8601      	strh	r1, [r0, #48]	; 0x30
 80163ac:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80163b0:	6344      	str	r4, [r0, #52]	; 0x34
 80163b2:	8701      	strh	r1, [r0, #56]	; 0x38
 80163b4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80163b8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80163bc:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80163c0:	bd10      	pop	{r4, pc}
 80163c2:	bf00      	nop
 80163c4:	08031f30 	.word	0x08031f30
 80163c8:	0802f724 	.word	0x0802f724

080163cc <_ZN8touchgfx7OutlineD1Ev>:
 80163cc:	4770      	bx	lr

080163ce <_ZN8touchgfx7OutlineD0Ev>:
 80163ce:	b510      	push	{r4, lr}
 80163d0:	2130      	movs	r1, #48	; 0x30
 80163d2:	4604      	mov	r4, r0
 80163d4:	f016 fcf1 	bl	802cdba <_ZdlPvj>
 80163d8:	4620      	mov	r0, r4
 80163da:	bd10      	pop	{r4, pc}

080163dc <_ZN8touchgfx7Outline5resetEv>:
 80163dc:	b510      	push	{r4, lr}
 80163de:	4604      	mov	r4, r0
 80163e0:	f000 fe96 	bl	8017110 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80163e4:	60e0      	str	r0, [r4, #12]
 80163e6:	f000 fe99 	bl	801711c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80163ea:	68e3      	ldr	r3, [r4, #12]
 80163ec:	6123      	str	r3, [r4, #16]
 80163ee:	08c0      	lsrs	r0, r0, #3
 80163f0:	2200      	movs	r2, #0
 80163f2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80163f6:	3801      	subs	r0, #1
 80163f8:	6060      	str	r0, [r4, #4]
 80163fa:	60a2      	str	r2, [r4, #8]
 80163fc:	8019      	strh	r1, [r3, #0]
 80163fe:	8059      	strh	r1, [r3, #2]
 8016400:	809a      	strh	r2, [r3, #4]
 8016402:	80da      	strh	r2, [r3, #6]
 8016404:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016406:	f023 0301 	bic.w	r3, r3, #1
 801640a:	f043 0302 	orr.w	r3, r3, #2
 801640e:	6263      	str	r3, [r4, #36]	; 0x24
 8016410:	bd10      	pop	{r4, pc}
	...

08016414 <_ZN8touchgfx7OutlineC1Ev>:
 8016414:	b510      	push	{r4, lr}
 8016416:	4b0a      	ldr	r3, [pc, #40]	; (8016440 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8016418:	6003      	str	r3, [r0, #0]
 801641a:	2300      	movs	r3, #0
 801641c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8016420:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8016424:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8016428:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801642c:	6243      	str	r3, [r0, #36]	; 0x24
 801642e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8016432:	4604      	mov	r4, r0
 8016434:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8016438:	f7ff ffd0 	bl	80163dc <_ZN8touchgfx7Outline5resetEv>
 801643c:	4620      	mov	r0, r4
 801643e:	bd10      	pop	{r4, pc}
 8016440:	08031fa4 	.word	0x08031fa4

08016444 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8016444:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016448:	b093      	sub	sp, #76	; 0x4c
 801644a:	1156      	asrs	r6, r2, #5
 801644c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801644e:	9305      	str	r3, [sp, #20]
 8016450:	f004 051f 	and.w	r5, r4, #31
 8016454:	1153      	asrs	r3, r2, #5
 8016456:	9504      	str	r5, [sp, #16]
 8016458:	1165      	asrs	r5, r4, #5
 801645a:	9303      	str	r3, [sp, #12]
 801645c:	42ae      	cmp	r6, r5
 801645e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8016462:	9306      	str	r3, [sp, #24]
 8016464:	f002 031f 	and.w	r3, r2, #31
 8016468:	f040 80f8 	bne.w	801665c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801646c:	9c04      	ldr	r4, [sp, #16]
 801646e:	9a05      	ldr	r2, [sp, #20]
 8016470:	42a3      	cmp	r3, r4
 8016472:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8016476:	6902      	ldr	r2, [r0, #16]
 8016478:	d125      	bne.n	80164c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801647a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801647e:	459e      	cmp	lr, r3
 8016480:	d103      	bne.n	801648a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8016482:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016486:	429e      	cmp	r6, r3
 8016488:	d035      	beq.n	80164f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801648a:	88d1      	ldrh	r1, [r2, #6]
 801648c:	8893      	ldrh	r3, [r2, #4]
 801648e:	430b      	orrs	r3, r1
 8016490:	d010      	beq.n	80164b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016492:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016496:	2b00      	cmp	r3, #0
 8016498:	db0c      	blt.n	80164b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801649a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801649c:	428b      	cmp	r3, r1
 801649e:	da09      	bge.n	80164b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80164a0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80164a4:	428b      	cmp	r3, r1
 80164a6:	bf38      	it	cc
 80164a8:	3208      	addcc	r2, #8
 80164aa:	f103 0301 	add.w	r3, r3, #1
 80164ae:	bf38      	it	cc
 80164b0:	6102      	strcc	r2, [r0, #16]
 80164b2:	6083      	str	r3, [r0, #8]
 80164b4:	6903      	ldr	r3, [r0, #16]
 80164b6:	9a03      	ldr	r2, [sp, #12]
 80164b8:	f8a3 e000 	strh.w	lr, [r3]
 80164bc:	805a      	strh	r2, [r3, #2]
 80164be:	2200      	movs	r2, #0
 80164c0:	809a      	strh	r2, [r3, #4]
 80164c2:	80da      	strh	r2, [r3, #6]
 80164c4:	e017      	b.n	80164f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80164c6:	9c05      	ldr	r4, [sp, #20]
 80164c8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80164cc:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80164d0:	f004 041f 	and.w	r4, r4, #31
 80164d4:	114e      	asrs	r6, r1, #5
 80164d6:	9402      	str	r4, [sp, #8]
 80164d8:	9c04      	ldr	r4, [sp, #16]
 80164da:	4576      	cmp	r6, lr
 80164dc:	f001 0c1f 	and.w	ip, r1, #31
 80164e0:	eba4 0403 	sub.w	r4, r4, r3
 80164e4:	d10a      	bne.n	80164fc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80164e6:	9b02      	ldr	r3, [sp, #8]
 80164e8:	449c      	add	ip, r3
 80164ea:	44a0      	add	r8, r4
 80164ec:	fb04 a40c 	mla	r4, r4, ip, sl
 80164f0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80164f4:	80d4      	strh	r4, [r2, #6]
 80164f6:	b013      	add	sp, #76	; 0x4c
 80164f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164fc:	9d05      	ldr	r5, [sp, #20]
 80164fe:	1a69      	subs	r1, r5, r1
 8016500:	bf5b      	ittet	pl
 8016502:	f1cc 0520 	rsbpl	r5, ip, #32
 8016506:	436c      	mulpl	r4, r5
 8016508:	2500      	movmi	r5, #0
 801650a:	2520      	movpl	r5, #32
 801650c:	bf44      	itt	mi
 801650e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016512:	4249      	negmi	r1, r1
 8016514:	9501      	str	r5, [sp, #4]
 8016516:	9f01      	ldr	r7, [sp, #4]
 8016518:	fb94 f5f1 	sdiv	r5, r4, r1
 801651c:	fb01 4415 	mls	r4, r1, r5, r4
 8016520:	bf54      	ite	pl
 8016522:	f04f 0901 	movpl.w	r9, #1
 8016526:	f04f 39ff 	movmi.w	r9, #4294967295
 801652a:	2c00      	cmp	r4, #0
 801652c:	bfb8      	it	lt
 801652e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016532:	44bc      	add	ip, r7
 8016534:	44a8      	add	r8, r5
 8016536:	fb05 ac0c 	mla	ip, r5, ip, sl
 801653a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801653e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016542:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016546:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801654a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801654e:	bfb8      	it	lt
 8016550:	1864      	addlt	r4, r4, r1
 8016552:	ea58 0202 	orrs.w	r2, r8, r2
 8016556:	444e      	add	r6, r9
 8016558:	d011      	beq.n	801657e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801655a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801655e:	f1b8 0f00 	cmp.w	r8, #0
 8016562:	db0c      	blt.n	801657e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016564:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8016566:	4590      	cmp	r8, r2
 8016568:	da09      	bge.n	801657e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801656a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801656e:	4590      	cmp	r8, r2
 8016570:	bf3c      	itt	cc
 8016572:	f10c 0208 	addcc.w	r2, ip, #8
 8016576:	6102      	strcc	r2, [r0, #16]
 8016578:	f108 0201 	add.w	r2, r8, #1
 801657c:	6082      	str	r2, [r0, #8]
 801657e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016582:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016586:	f8ac 6000 	strh.w	r6, [ip]
 801658a:	2700      	movs	r7, #0
 801658c:	45b6      	cmp	lr, r6
 801658e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8016592:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016596:	f8ac 7006 	strh.w	r7, [ip, #6]
 801659a:	442b      	add	r3, r5
 801659c:	d04d      	beq.n	801663a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801659e:	9f04      	ldr	r7, [sp, #16]
 80165a0:	1aff      	subs	r7, r7, r3
 80165a2:	443d      	add	r5, r7
 80165a4:	016d      	lsls	r5, r5, #5
 80165a6:	fb95 f8f1 	sdiv	r8, r5, r1
 80165aa:	fb01 5518 	mls	r5, r1, r8, r5
 80165ae:	2d00      	cmp	r5, #0
 80165b0:	bfb8      	it	lt
 80165b2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80165b6:	f108 0701 	add.w	r7, r8, #1
 80165ba:	bfb8      	it	lt
 80165bc:	186d      	addlt	r5, r5, r1
 80165be:	1a64      	subs	r4, r4, r1
 80165c0:	9703      	str	r7, [sp, #12]
 80165c2:	f04f 0a00 	mov.w	sl, #0
 80165c6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80165ca:	1964      	adds	r4, r4, r5
 80165cc:	bf58      	it	pl
 80165ce:	9f03      	ldrpl	r7, [sp, #12]
 80165d0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80165d4:	bf48      	it	mi
 80165d6:	4647      	movmi	r7, r8
 80165d8:	44bb      	add	fp, r7
 80165da:	f8ac b004 	strh.w	fp, [ip, #4]
 80165de:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80165e2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80165e6:	f8ac b006 	strh.w	fp, [ip, #6]
 80165ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80165ee:	443b      	add	r3, r7
 80165f0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80165f4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80165f8:	bf58      	it	pl
 80165fa:	1a64      	subpl	r4, r4, r1
 80165fc:	ea5b 0707 	orrs.w	r7, fp, r7
 8016600:	444e      	add	r6, r9
 8016602:	d011      	beq.n	8016628 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016604:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016608:	f1bb 0f00 	cmp.w	fp, #0
 801660c:	db0c      	blt.n	8016628 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801660e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016610:	45bb      	cmp	fp, r7
 8016612:	da09      	bge.n	8016628 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016614:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016618:	45bb      	cmp	fp, r7
 801661a:	bf3c      	itt	cc
 801661c:	f10c 0708 	addcc.w	r7, ip, #8
 8016620:	6107      	strcc	r7, [r0, #16]
 8016622:	f10b 0701 	add.w	r7, fp, #1
 8016626:	6087      	str	r7, [r0, #8]
 8016628:	6907      	ldr	r7, [r0, #16]
 801662a:	45b6      	cmp	lr, r6
 801662c:	803e      	strh	r6, [r7, #0]
 801662e:	807a      	strh	r2, [r7, #2]
 8016630:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016634:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016638:	d1c5      	bne.n	80165c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801663a:	9a04      	ldr	r2, [sp, #16]
 801663c:	1ad3      	subs	r3, r2, r3
 801663e:	6902      	ldr	r2, [r0, #16]
 8016640:	8891      	ldrh	r1, [r2, #4]
 8016642:	88d6      	ldrh	r6, [r2, #6]
 8016644:	4419      	add	r1, r3
 8016646:	8091      	strh	r1, [r2, #4]
 8016648:	9902      	ldr	r1, [sp, #8]
 801664a:	f101 0c20 	add.w	ip, r1, #32
 801664e:	9901      	ldr	r1, [sp, #4]
 8016650:	ebac 0c01 	sub.w	ip, ip, r1
 8016654:	fb03 630c 	mla	r3, r3, ip, r6
 8016658:	80d3      	strh	r3, [r2, #6]
 801665a:	e74c      	b.n	80164f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801665c:	9d05      	ldr	r5, [sp, #20]
 801665e:	1aa2      	subs	r2, r4, r2
 8016660:	eba5 0501 	sub.w	r5, r5, r1
 8016664:	9508      	str	r5, [sp, #32]
 8016666:	9202      	str	r2, [sp, #8]
 8016668:	f140 8128 	bpl.w	80168bc <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801666c:	9a03      	ldr	r2, [sp, #12]
 801666e:	2a00      	cmp	r2, #0
 8016670:	f6ff af41 	blt.w	80164f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016674:	9a02      	ldr	r2, [sp, #8]
 8016676:	4252      	negs	r2, r2
 8016678:	9202      	str	r2, [sp, #8]
 801667a:	9a06      	ldr	r2, [sp, #24]
 801667c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8016680:	f04f 34ff 	mov.w	r4, #4294967295
 8016684:	9206      	str	r2, [sp, #24]
 8016686:	462a      	mov	r2, r5
 8016688:	940b      	str	r4, [sp, #44]	; 0x2c
 801668a:	435a      	muls	r2, r3
 801668c:	2400      	movs	r4, #0
 801668e:	9d02      	ldr	r5, [sp, #8]
 8016690:	9401      	str	r4, [sp, #4]
 8016692:	9c02      	ldr	r4, [sp, #8]
 8016694:	fb92 f4f4 	sdiv	r4, r2, r4
 8016698:	fb05 2214 	mls	r2, r5, r4, r2
 801669c:	2a00      	cmp	r2, #0
 801669e:	9207      	str	r2, [sp, #28]
 80166a0:	bfbc      	itt	lt
 80166a2:	1952      	addlt	r2, r2, r5
 80166a4:	9207      	strlt	r2, [sp, #28]
 80166a6:	9a01      	ldr	r2, [sp, #4]
 80166a8:	6905      	ldr	r5, [r0, #16]
 80166aa:	bfb8      	it	lt
 80166ac:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80166b0:	eb04 0901 	add.w	r9, r4, r1
 80166b4:	429a      	cmp	r2, r3
 80166b6:	ea4f 1669 	mov.w	r6, r9, asr #5
 80166ba:	f040 8112 	bne.w	80168e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80166be:	f9b5 3000 	ldrsh.w	r3, [r5]
 80166c2:	429e      	cmp	r6, r3
 80166c4:	d104      	bne.n	80166d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80166c6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80166ca:	9a03      	ldr	r2, [sp, #12]
 80166cc:	429a      	cmp	r2, r3
 80166ce:	d01b      	beq.n	8016708 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80166d0:	88ea      	ldrh	r2, [r5, #6]
 80166d2:	88ab      	ldrh	r3, [r5, #4]
 80166d4:	4313      	orrs	r3, r2
 80166d6:	d010      	beq.n	80166fa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80166d8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80166dc:	2a00      	cmp	r2, #0
 80166de:	db0c      	blt.n	80166fa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80166e0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80166e2:	429a      	cmp	r2, r3
 80166e4:	da09      	bge.n	80166fa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80166e6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80166ea:	429a      	cmp	r2, r3
 80166ec:	bf38      	it	cc
 80166ee:	3508      	addcc	r5, #8
 80166f0:	f102 0201 	add.w	r2, r2, #1
 80166f4:	bf38      	it	cc
 80166f6:	6105      	strcc	r5, [r0, #16]
 80166f8:	6082      	str	r2, [r0, #8]
 80166fa:	6903      	ldr	r3, [r0, #16]
 80166fc:	9a03      	ldr	r2, [sp, #12]
 80166fe:	805a      	strh	r2, [r3, #2]
 8016700:	2200      	movs	r2, #0
 8016702:	801e      	strh	r6, [r3, #0]
 8016704:	809a      	strh	r2, [r3, #4]
 8016706:	80da      	strh	r2, [r3, #6]
 8016708:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801670a:	9a03      	ldr	r2, [sp, #12]
 801670c:	6901      	ldr	r1, [r0, #16]
 801670e:	441a      	add	r2, r3
 8016710:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016714:	42b3      	cmp	r3, r6
 8016716:	d103      	bne.n	8016720 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8016718:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801671c:	429a      	cmp	r2, r3
 801671e:	d01a      	beq.n	8016756 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8016720:	88cc      	ldrh	r4, [r1, #6]
 8016722:	888b      	ldrh	r3, [r1, #4]
 8016724:	4323      	orrs	r3, r4
 8016726:	d010      	beq.n	801674a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016728:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801672c:	2c00      	cmp	r4, #0
 801672e:	db0c      	blt.n	801674a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016730:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016732:	429c      	cmp	r4, r3
 8016734:	da09      	bge.n	801674a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016736:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801673a:	429c      	cmp	r4, r3
 801673c:	bf38      	it	cc
 801673e:	3108      	addcc	r1, #8
 8016740:	f104 0401 	add.w	r4, r4, #1
 8016744:	bf38      	it	cc
 8016746:	6101      	strcc	r1, [r0, #16]
 8016748:	6084      	str	r4, [r0, #8]
 801674a:	6903      	ldr	r3, [r0, #16]
 801674c:	2100      	movs	r1, #0
 801674e:	801e      	strh	r6, [r3, #0]
 8016750:	805a      	strh	r2, [r3, #2]
 8016752:	8099      	strh	r1, [r3, #4]
 8016754:	80d9      	strh	r1, [r3, #6]
 8016756:	9b06      	ldr	r3, [sp, #24]
 8016758:	4293      	cmp	r3, r2
 801675a:	f000 8082 	beq.w	8016862 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801675e:	9b08      	ldr	r3, [sp, #32]
 8016760:	9c02      	ldr	r4, [sp, #8]
 8016762:	9902      	ldr	r1, [sp, #8]
 8016764:	015b      	lsls	r3, r3, #5
 8016766:	fb93 f1f1 	sdiv	r1, r3, r1
 801676a:	fb04 3311 	mls	r3, r4, r1, r3
 801676e:	2b00      	cmp	r3, #0
 8016770:	9103      	str	r1, [sp, #12]
 8016772:	9308      	str	r3, [sp, #32]
 8016774:	da04      	bge.n	8016780 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8016776:	1e4b      	subs	r3, r1, #1
 8016778:	9303      	str	r3, [sp, #12]
 801677a:	9b08      	ldr	r3, [sp, #32]
 801677c:	4423      	add	r3, r4
 801677e:	9308      	str	r3, [sp, #32]
 8016780:	9b07      	ldr	r3, [sp, #28]
 8016782:	9902      	ldr	r1, [sp, #8]
 8016784:	1a5b      	subs	r3, r3, r1
 8016786:	9307      	str	r3, [sp, #28]
 8016788:	9b01      	ldr	r3, [sp, #4]
 801678a:	f1c3 0320 	rsb	r3, r3, #32
 801678e:	930e      	str	r3, [sp, #56]	; 0x38
 8016790:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016792:	9b01      	ldr	r3, [sp, #4]
 8016794:	1a5b      	subs	r3, r3, r1
 8016796:	464f      	mov	r7, r9
 8016798:	930a      	str	r3, [sp, #40]	; 0x28
 801679a:	2600      	movs	r6, #0
 801679c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80167a0:	185b      	adds	r3, r3, r1
 80167a2:	bf58      	it	pl
 80167a4:	9902      	ldrpl	r1, [sp, #8]
 80167a6:	9307      	str	r3, [sp, #28]
 80167a8:	bf5d      	ittte	pl
 80167aa:	1a5b      	subpl	r3, r3, r1
 80167ac:	9307      	strpl	r3, [sp, #28]
 80167ae:	9b03      	ldrpl	r3, [sp, #12]
 80167b0:	9903      	ldrmi	r1, [sp, #12]
 80167b2:	bf58      	it	pl
 80167b4:	1c59      	addpl	r1, r3, #1
 80167b6:	4489      	add	r9, r1
 80167b8:	2a00      	cmp	r2, #0
 80167ba:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80167be:	db2e      	blt.n	801681e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80167c0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80167c2:	4293      	cmp	r3, r2
 80167c4:	dd2b      	ble.n	801681e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80167c6:	9c01      	ldr	r4, [sp, #4]
 80167c8:	6905      	ldr	r5, [r0, #16]
 80167ca:	46a0      	mov	r8, r4
 80167cc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80167ce:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80167d2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80167d6:	45a0      	cmp	r8, r4
 80167d8:	f040 814f 	bne.w	8016a7a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80167dc:	f9b5 1000 	ldrsh.w	r1, [r5]
 80167e0:	4551      	cmp	r1, sl
 80167e2:	d103      	bne.n	80167ec <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80167e4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80167e8:	4291      	cmp	r1, r2
 80167ea:	d018      	beq.n	801681e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80167ec:	ea5c 010e 	orrs.w	r1, ip, lr
 80167f0:	d00f      	beq.n	8016812 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80167f2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80167f6:	2900      	cmp	r1, #0
 80167f8:	db0b      	blt.n	8016812 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80167fa:	428b      	cmp	r3, r1
 80167fc:	dd09      	ble.n	8016812 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80167fe:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8016802:	4299      	cmp	r1, r3
 8016804:	bf38      	it	cc
 8016806:	3508      	addcc	r5, #8
 8016808:	f101 0101 	add.w	r1, r1, #1
 801680c:	bf38      	it	cc
 801680e:	6105      	strcc	r5, [r0, #16]
 8016810:	6081      	str	r1, [r0, #8]
 8016812:	6903      	ldr	r3, [r0, #16]
 8016814:	f8a3 a000 	strh.w	sl, [r3]
 8016818:	805a      	strh	r2, [r3, #2]
 801681a:	809e      	strh	r6, [r3, #4]
 801681c:	80de      	strh	r6, [r3, #6]
 801681e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016820:	6901      	ldr	r1, [r0, #16]
 8016822:	441a      	add	r2, r3
 8016824:	88cc      	ldrh	r4, [r1, #6]
 8016826:	888b      	ldrh	r3, [r1, #4]
 8016828:	4323      	orrs	r3, r4
 801682a:	d010      	beq.n	801684e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801682c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8016830:	2c00      	cmp	r4, #0
 8016832:	db0c      	blt.n	801684e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8016834:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016836:	429c      	cmp	r4, r3
 8016838:	da09      	bge.n	801684e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801683a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801683e:	429c      	cmp	r4, r3
 8016840:	bf38      	it	cc
 8016842:	3108      	addcc	r1, #8
 8016844:	f104 0401 	add.w	r4, r4, #1
 8016848:	bf38      	it	cc
 801684a:	6101      	strcc	r1, [r0, #16]
 801684c:	6084      	str	r4, [r0, #8]
 801684e:	6903      	ldr	r3, [r0, #16]
 8016850:	f8a3 a000 	strh.w	sl, [r3]
 8016854:	805a      	strh	r2, [r3, #2]
 8016856:	809e      	strh	r6, [r3, #4]
 8016858:	80de      	strh	r6, [r3, #6]
 801685a:	9b06      	ldr	r3, [sp, #24]
 801685c:	4293      	cmp	r3, r2
 801685e:	464f      	mov	r7, r9
 8016860:	d19c      	bne.n	801679c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8016862:	9b01      	ldr	r3, [sp, #4]
 8016864:	6907      	ldr	r7, [r0, #16]
 8016866:	f1c3 0620 	rsb	r6, r3, #32
 801686a:	9b05      	ldr	r3, [sp, #20]
 801686c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8016870:	9b04      	ldr	r3, [sp, #16]
 8016872:	429e      	cmp	r6, r3
 8016874:	f040 81cc 	bne.w	8016c10 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8016878:	f9b7 3000 	ldrsh.w	r3, [r7]
 801687c:	459e      	cmp	lr, r3
 801687e:	d104      	bne.n	801688a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8016880:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016884:	429a      	cmp	r2, r3
 8016886:	f43f ae36 	beq.w	80164f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801688a:	88f9      	ldrh	r1, [r7, #6]
 801688c:	88bb      	ldrh	r3, [r7, #4]
 801688e:	430b      	orrs	r3, r1
 8016890:	d010      	beq.n	80168b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016892:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016896:	2b00      	cmp	r3, #0
 8016898:	db0c      	blt.n	80168b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801689a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801689c:	428b      	cmp	r3, r1
 801689e:	da09      	bge.n	80168b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80168a0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80168a4:	428b      	cmp	r3, r1
 80168a6:	bf38      	it	cc
 80168a8:	3708      	addcc	r7, #8
 80168aa:	f103 0301 	add.w	r3, r3, #1
 80168ae:	bf38      	it	cc
 80168b0:	6107      	strcc	r7, [r0, #16]
 80168b2:	6083      	str	r3, [r0, #8]
 80168b4:	6903      	ldr	r3, [r0, #16]
 80168b6:	f8a3 e000 	strh.w	lr, [r3]
 80168ba:	e5ff      	b.n	80164bc <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 80168bc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80168be:	9c03      	ldr	r4, [sp, #12]
 80168c0:	42a2      	cmp	r2, r4
 80168c2:	f6ff ae18 	blt.w	80164f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80168c6:	9c06      	ldr	r4, [sp, #24]
 80168c8:	42a2      	cmp	r2, r4
 80168ca:	bfb8      	it	lt
 80168cc:	3201      	addlt	r2, #1
 80168ce:	9c08      	ldr	r4, [sp, #32]
 80168d0:	bfb8      	it	lt
 80168d2:	9206      	strlt	r2, [sp, #24]
 80168d4:	f1c3 0220 	rsb	r2, r3, #32
 80168d8:	4362      	muls	r2, r4
 80168da:	2401      	movs	r4, #1
 80168dc:	940b      	str	r4, [sp, #44]	; 0x2c
 80168de:	2420      	movs	r4, #32
 80168e0:	e6d5      	b.n	801668e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80168e2:	f009 021f 	and.w	r2, r9, #31
 80168e6:	ea4f 1861 	mov.w	r8, r1, asr #5
 80168ea:	920c      	str	r2, [sp, #48]	; 0x30
 80168ec:	9a01      	ldr	r2, [sp, #4]
 80168ee:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80168f2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80168f6:	45b0      	cmp	r8, r6
 80168f8:	f001 011f 	and.w	r1, r1, #31
 80168fc:	eba2 0203 	sub.w	r2, r2, r3
 8016900:	d108      	bne.n	8016914 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8016902:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016904:	4419      	add	r1, r3
 8016906:	4496      	add	lr, r2
 8016908:	fb02 a101 	mla	r1, r2, r1, sl
 801690c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8016910:	80e9      	strh	r1, [r5, #6]
 8016912:	e6f9      	b.n	8016708 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016914:	2c00      	cmp	r4, #0
 8016916:	f2c0 80a9 	blt.w	8016a6c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801691a:	2701      	movs	r7, #1
 801691c:	f1c1 0c20 	rsb	ip, r1, #32
 8016920:	970a      	str	r7, [sp, #40]	; 0x28
 8016922:	fb02 f20c 	mul.w	r2, r2, ip
 8016926:	2720      	movs	r7, #32
 8016928:	9709      	str	r7, [sp, #36]	; 0x24
 801692a:	fb92 fcf4 	sdiv	ip, r2, r4
 801692e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8016930:	fb04 221c 	mls	r2, r4, ip, r2
 8016934:	2a00      	cmp	r2, #0
 8016936:	bfb8      	it	lt
 8016938:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801693c:	4439      	add	r1, r7
 801693e:	fb0c a101 	mla	r1, ip, r1, sl
 8016942:	80e9      	strh	r1, [r5, #6]
 8016944:	44e6      	add	lr, ip
 8016946:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016948:	f8a5 e004 	strh.w	lr, [r5, #4]
 801694c:	eb08 0501 	add.w	r5, r8, r1
 8016950:	6901      	ldr	r1, [r0, #16]
 8016952:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8016956:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801695a:	bfb8      	it	lt
 801695c:	1912      	addlt	r2, r2, r4
 801695e:	ea58 070e 	orrs.w	r7, r8, lr
 8016962:	d010      	beq.n	8016986 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016964:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8016968:	f1be 0f00 	cmp.w	lr, #0
 801696c:	db0b      	blt.n	8016986 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801696e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016970:	45be      	cmp	lr, r7
 8016972:	da08      	bge.n	8016986 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016974:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016978:	45be      	cmp	lr, r7
 801697a:	bf3c      	itt	cc
 801697c:	3108      	addcc	r1, #8
 801697e:	6101      	strcc	r1, [r0, #16]
 8016980:	f10e 0101 	add.w	r1, lr, #1
 8016984:	6081      	str	r1, [r0, #8]
 8016986:	6901      	ldr	r1, [r0, #16]
 8016988:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801698c:	800d      	strh	r5, [r1, #0]
 801698e:	f04f 0e00 	mov.w	lr, #0
 8016992:	42ae      	cmp	r6, r5
 8016994:	f8a1 8002 	strh.w	r8, [r1, #2]
 8016998:	f8a1 e004 	strh.w	lr, [r1, #4]
 801699c:	f8a1 e006 	strh.w	lr, [r1, #6]
 80169a0:	4463      	add	r3, ip
 80169a2:	d054      	beq.n	8016a4e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80169a4:	9901      	ldr	r1, [sp, #4]
 80169a6:	1ac9      	subs	r1, r1, r3
 80169a8:	4461      	add	r1, ip
 80169aa:	0149      	lsls	r1, r1, #5
 80169ac:	fb91 fef4 	sdiv	lr, r1, r4
 80169b0:	fb04 111e 	mls	r1, r4, lr, r1
 80169b4:	2900      	cmp	r1, #0
 80169b6:	bfb8      	it	lt
 80169b8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80169bc:	f10e 0701 	add.w	r7, lr, #1
 80169c0:	bfb8      	it	lt
 80169c2:	1909      	addlt	r1, r1, r4
 80169c4:	1b12      	subs	r2, r2, r4
 80169c6:	970d      	str	r7, [sp, #52]	; 0x34
 80169c8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 80169cc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80169ce:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80169d2:	1852      	adds	r2, r2, r1
 80169d4:	bf54      	ite	pl
 80169d6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 80169da:	46f4      	movmi	ip, lr
 80169dc:	44e3      	add	fp, ip
 80169de:	f8aa b004 	strh.w	fp, [sl, #4]
 80169e2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80169e6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80169ea:	f8aa b006 	strh.w	fp, [sl, #6]
 80169ee:	4463      	add	r3, ip
 80169f0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80169f4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80169f8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80169fc:	bf58      	it	pl
 80169fe:	1b12      	subpl	r2, r2, r4
 8016a00:	443d      	add	r5, r7
 8016a02:	ea5b 070a 	orrs.w	r7, fp, sl
 8016a06:	d014      	beq.n	8016a32 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016a08:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8016a0c:	f1ba 0f00 	cmp.w	sl, #0
 8016a10:	db0f      	blt.n	8016a32 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016a12:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016a14:	45ba      	cmp	sl, r7
 8016a16:	da0c      	bge.n	8016a32 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016a18:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8016a1c:	45ba      	cmp	sl, r7
 8016a1e:	bf38      	it	cc
 8016a20:	f10c 0c08 	addcc.w	ip, ip, #8
 8016a24:	f10a 0a01 	add.w	sl, sl, #1
 8016a28:	bf38      	it	cc
 8016a2a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8016a2e:	f8c0 a008 	str.w	sl, [r0, #8]
 8016a32:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016a36:	f04f 0700 	mov.w	r7, #0
 8016a3a:	42ae      	cmp	r6, r5
 8016a3c:	f8ac 5000 	strh.w	r5, [ip]
 8016a40:	f8ac 8002 	strh.w	r8, [ip, #2]
 8016a44:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016a48:	f8ac 7006 	strh.w	r7, [ip, #6]
 8016a4c:	d1bc      	bne.n	80169c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8016a4e:	6904      	ldr	r4, [r0, #16]
 8016a50:	9a01      	ldr	r2, [sp, #4]
 8016a52:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016a54:	1ad3      	subs	r3, r2, r3
 8016a56:	88a2      	ldrh	r2, [r4, #4]
 8016a58:	441a      	add	r2, r3
 8016a5a:	80a2      	strh	r2, [r4, #4]
 8016a5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016a5e:	3120      	adds	r1, #32
 8016a60:	1a89      	subs	r1, r1, r2
 8016a62:	88e2      	ldrh	r2, [r4, #6]
 8016a64:	fb03 2301 	mla	r3, r3, r1, r2
 8016a68:	80e3      	strh	r3, [r4, #6]
 8016a6a:	e64d      	b.n	8016708 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016a6c:	f04f 37ff 	mov.w	r7, #4294967295
 8016a70:	970a      	str	r7, [sp, #40]	; 0x28
 8016a72:	434a      	muls	r2, r1
 8016a74:	4264      	negs	r4, r4
 8016a76:	2700      	movs	r7, #0
 8016a78:	e756      	b.n	8016928 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8016a7a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8016a7e:	f009 031f 	and.w	r3, r9, #31
 8016a82:	45d0      	cmp	r8, sl
 8016a84:	f007 071f 	and.w	r7, r7, #31
 8016a88:	930f      	str	r3, [sp, #60]	; 0x3c
 8016a8a:	fa1f fc8c 	uxth.w	ip, ip
 8016a8e:	fa1f fe8e 	uxth.w	lr, lr
 8016a92:	d10a      	bne.n	8016aaa <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8016a94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016a96:	449c      	add	ip, r3
 8016a98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016a9a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8016a9e:	441f      	add	r7, r3
 8016aa0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016aa2:	fb03 e707 	mla	r7, r3, r7, lr
 8016aa6:	80ef      	strh	r7, [r5, #6]
 8016aa8:	e6b9      	b.n	801681e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016aaa:	2900      	cmp	r1, #0
 8016aac:	f2c0 80a8 	blt.w	8016c00 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8016ab0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016ab2:	f1c7 0320 	rsb	r3, r7, #32
 8016ab6:	4363      	muls	r3, r4
 8016ab8:	2401      	movs	r4, #1
 8016aba:	940d      	str	r4, [sp, #52]	; 0x34
 8016abc:	2420      	movs	r4, #32
 8016abe:	940c      	str	r4, [sp, #48]	; 0x30
 8016ac0:	fb93 f4f1 	sdiv	r4, r3, r1
 8016ac4:	fb01 3b14 	mls	fp, r1, r4, r3
 8016ac8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016aca:	f1bb 0f00 	cmp.w	fp, #0
 8016ace:	bfb8      	it	lt
 8016ad0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016ad4:	441f      	add	r7, r3
 8016ad6:	fb04 e707 	mla	r7, r4, r7, lr
 8016ada:	44a4      	add	ip, r4
 8016adc:	f8a5 c004 	strh.w	ip, [r5, #4]
 8016ae0:	80ef      	strh	r7, [r5, #6]
 8016ae2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016ae6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016ae8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8016aec:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016af0:	bfb8      	it	lt
 8016af2:	448b      	addlt	fp, r1
 8016af4:	eb08 0503 	add.w	r5, r8, r3
 8016af8:	ea5e 0307 	orrs.w	r3, lr, r7
 8016afc:	d011      	beq.n	8016b22 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016afe:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8016b02:	f1be 0f00 	cmp.w	lr, #0
 8016b06:	db0c      	blt.n	8016b22 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016b08:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016b0a:	45be      	cmp	lr, r7
 8016b0c:	da09      	bge.n	8016b22 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016b0e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016b12:	45be      	cmp	lr, r7
 8016b14:	bf3c      	itt	cc
 8016b16:	f10c 0708 	addcc.w	r7, ip, #8
 8016b1a:	6107      	strcc	r7, [r0, #16]
 8016b1c:	f10e 0701 	add.w	r7, lr, #1
 8016b20:	6087      	str	r7, [r0, #8]
 8016b22:	6907      	ldr	r7, [r0, #16]
 8016b24:	b213      	sxth	r3, r2
 8016b26:	9310      	str	r3, [sp, #64]	; 0x40
 8016b28:	807b      	strh	r3, [r7, #2]
 8016b2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b2c:	803d      	strh	r5, [r7, #0]
 8016b2e:	4555      	cmp	r5, sl
 8016b30:	80be      	strh	r6, [r7, #4]
 8016b32:	80fe      	strh	r6, [r7, #6]
 8016b34:	eb04 0c03 	add.w	ip, r4, r3
 8016b38:	d051      	beq.n	8016bde <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8016b3a:	9b01      	ldr	r3, [sp, #4]
 8016b3c:	eba3 070c 	sub.w	r7, r3, ip
 8016b40:	443c      	add	r4, r7
 8016b42:	0164      	lsls	r4, r4, #5
 8016b44:	fb94 f8f1 	sdiv	r8, r4, r1
 8016b48:	fb01 4418 	mls	r4, r1, r8, r4
 8016b4c:	2c00      	cmp	r4, #0
 8016b4e:	bfb8      	it	lt
 8016b50:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016b54:	ebab 0301 	sub.w	r3, fp, r1
 8016b58:	f108 0701 	add.w	r7, r8, #1
 8016b5c:	bfb8      	it	lt
 8016b5e:	1864      	addlt	r4, r4, r1
 8016b60:	9309      	str	r3, [sp, #36]	; 0x24
 8016b62:	9711      	str	r7, [sp, #68]	; 0x44
 8016b64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b66:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016b6a:	191b      	adds	r3, r3, r4
 8016b6c:	bf58      	it	pl
 8016b6e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8016b70:	f8be b004 	ldrh.w	fp, [lr, #4]
 8016b74:	9309      	str	r3, [sp, #36]	; 0x24
 8016b76:	bf48      	it	mi
 8016b78:	4647      	movmi	r7, r8
 8016b7a:	44bb      	add	fp, r7
 8016b7c:	f8ae b004 	strh.w	fp, [lr, #4]
 8016b80:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016b84:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016b88:	f8ae b006 	strh.w	fp, [lr, #6]
 8016b8c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016b90:	44bc      	add	ip, r7
 8016b92:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016b94:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016b98:	443d      	add	r5, r7
 8016b9a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8016b9e:	bf5c      	itt	pl
 8016ba0:	1a5b      	subpl	r3, r3, r1
 8016ba2:	9309      	strpl	r3, [sp, #36]	; 0x24
 8016ba4:	ea5b 0307 	orrs.w	r3, fp, r7
 8016ba8:	d011      	beq.n	8016bce <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016baa:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8016bae:	f1bb 0f00 	cmp.w	fp, #0
 8016bb2:	db0c      	blt.n	8016bce <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016bb4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016bb6:	45bb      	cmp	fp, r7
 8016bb8:	da09      	bge.n	8016bce <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016bba:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016bbe:	45bb      	cmp	fp, r7
 8016bc0:	bf3c      	itt	cc
 8016bc2:	f10e 0708 	addcc.w	r7, lr, #8
 8016bc6:	6107      	strcc	r7, [r0, #16]
 8016bc8:	f10b 0701 	add.w	r7, fp, #1
 8016bcc:	6087      	str	r7, [r0, #8]
 8016bce:	6907      	ldr	r7, [r0, #16]
 8016bd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016bd2:	803d      	strh	r5, [r7, #0]
 8016bd4:	4555      	cmp	r5, sl
 8016bd6:	807b      	strh	r3, [r7, #2]
 8016bd8:	80be      	strh	r6, [r7, #4]
 8016bda:	80fe      	strh	r6, [r7, #6]
 8016bdc:	d1c2      	bne.n	8016b64 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8016bde:	9b01      	ldr	r3, [sp, #4]
 8016be0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016be2:	eba3 0c0c 	sub.w	ip, r3, ip
 8016be6:	6903      	ldr	r3, [r0, #16]
 8016be8:	8899      	ldrh	r1, [r3, #4]
 8016bea:	4461      	add	r1, ip
 8016bec:	8099      	strh	r1, [r3, #4]
 8016bee:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016bf0:	3720      	adds	r7, #32
 8016bf2:	1a7f      	subs	r7, r7, r1
 8016bf4:	88d9      	ldrh	r1, [r3, #6]
 8016bf6:	fb0c 1c07 	mla	ip, ip, r7, r1
 8016bfa:	f8a3 c006 	strh.w	ip, [r3, #6]
 8016bfe:	e60e      	b.n	801681e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016c00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016c02:	f04f 34ff 	mov.w	r4, #4294967295
 8016c06:	940d      	str	r4, [sp, #52]	; 0x34
 8016c08:	437b      	muls	r3, r7
 8016c0a:	4249      	negs	r1, r1
 8016c0c:	2400      	movs	r4, #0
 8016c0e:	e756      	b.n	8016abe <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8016c10:	9905      	ldr	r1, [sp, #20]
 8016c12:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8016c16:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8016c1a:	f001 011f 	and.w	r1, r1, #31
 8016c1e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8016c22:	9102      	str	r1, [sp, #8]
 8016c24:	9904      	ldr	r1, [sp, #16]
 8016c26:	45f3      	cmp	fp, lr
 8016c28:	f009 0c1f 	and.w	ip, r9, #31
 8016c2c:	eba1 0406 	sub.w	r4, r1, r6
 8016c30:	d108      	bne.n	8016c44 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8016c32:	9b02      	ldr	r3, [sp, #8]
 8016c34:	449c      	add	ip, r3
 8016c36:	44a0      	add	r8, r4
 8016c38:	fb04 a40c 	mla	r4, r4, ip, sl
 8016c3c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016c40:	80fc      	strh	r4, [r7, #6]
 8016c42:	e458      	b.n	80164f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016c44:	9905      	ldr	r1, [sp, #20]
 8016c46:	ebb1 0109 	subs.w	r1, r1, r9
 8016c4a:	bf5b      	ittet	pl
 8016c4c:	f1cc 0520 	rsbpl	r5, ip, #32
 8016c50:	436c      	mulpl	r4, r5
 8016c52:	2500      	movmi	r5, #0
 8016c54:	2520      	movpl	r5, #32
 8016c56:	bf44      	itt	mi
 8016c58:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016c5c:	4249      	negmi	r1, r1
 8016c5e:	9501      	str	r5, [sp, #4]
 8016c60:	9b01      	ldr	r3, [sp, #4]
 8016c62:	fb94 f5f1 	sdiv	r5, r4, r1
 8016c66:	fb01 4415 	mls	r4, r1, r5, r4
 8016c6a:	bf54      	ite	pl
 8016c6c:	f04f 0901 	movpl.w	r9, #1
 8016c70:	f04f 39ff 	movmi.w	r9, #4294967295
 8016c74:	2c00      	cmp	r4, #0
 8016c76:	bfb8      	it	lt
 8016c78:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016c7c:	449c      	add	ip, r3
 8016c7e:	44a8      	add	r8, r5
 8016c80:	fb05 ac0c 	mla	ip, r5, ip, sl
 8016c84:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016c88:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016c8c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016c90:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8016c94:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016c98:	bfb8      	it	lt
 8016c9a:	1864      	addlt	r4, r4, r1
 8016c9c:	ea58 0707 	orrs.w	r7, r8, r7
 8016ca0:	eb0b 0309 	add.w	r3, fp, r9
 8016ca4:	d011      	beq.n	8016cca <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016ca6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8016caa:	f1b8 0f00 	cmp.w	r8, #0
 8016cae:	db0c      	blt.n	8016cca <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016cb0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016cb2:	45b8      	cmp	r8, r7
 8016cb4:	da09      	bge.n	8016cca <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016cb6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8016cba:	45b8      	cmp	r8, r7
 8016cbc:	bf3c      	itt	cc
 8016cbe:	f10c 0708 	addcc.w	r7, ip, #8
 8016cc2:	6107      	strcc	r7, [r0, #16]
 8016cc4:	f108 0701 	add.w	r7, r8, #1
 8016cc8:	6087      	str	r7, [r0, #8]
 8016cca:	6907      	ldr	r7, [r0, #16]
 8016ccc:	f04f 0c00 	mov.w	ip, #0
 8016cd0:	b212      	sxth	r2, r2
 8016cd2:	459e      	cmp	lr, r3
 8016cd4:	803b      	strh	r3, [r7, #0]
 8016cd6:	807a      	strh	r2, [r7, #2]
 8016cd8:	f8a7 c004 	strh.w	ip, [r7, #4]
 8016cdc:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016ce0:	442e      	add	r6, r5
 8016ce2:	d04d      	beq.n	8016d80 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8016ce4:	9f04      	ldr	r7, [sp, #16]
 8016ce6:	1bbf      	subs	r7, r7, r6
 8016ce8:	443d      	add	r5, r7
 8016cea:	016d      	lsls	r5, r5, #5
 8016cec:	fb95 f8f1 	sdiv	r8, r5, r1
 8016cf0:	fb01 5518 	mls	r5, r1, r8, r5
 8016cf4:	4565      	cmp	r5, ip
 8016cf6:	bfb8      	it	lt
 8016cf8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016cfc:	f108 0701 	add.w	r7, r8, #1
 8016d00:	bfb8      	it	lt
 8016d02:	186d      	addlt	r5, r5, r1
 8016d04:	1a64      	subs	r4, r4, r1
 8016d06:	9703      	str	r7, [sp, #12]
 8016d08:	f04f 0a00 	mov.w	sl, #0
 8016d0c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016d10:	1964      	adds	r4, r4, r5
 8016d12:	bf58      	it	pl
 8016d14:	9f03      	ldrpl	r7, [sp, #12]
 8016d16:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016d1a:	bf48      	it	mi
 8016d1c:	4647      	movmi	r7, r8
 8016d1e:	44bb      	add	fp, r7
 8016d20:	f8ac b004 	strh.w	fp, [ip, #4]
 8016d24:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016d28:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016d2c:	f8ac b006 	strh.w	fp, [ip, #6]
 8016d30:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016d34:	443e      	add	r6, r7
 8016d36:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016d3a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016d3e:	bf58      	it	pl
 8016d40:	1a64      	subpl	r4, r4, r1
 8016d42:	ea5b 0707 	orrs.w	r7, fp, r7
 8016d46:	444b      	add	r3, r9
 8016d48:	d011      	beq.n	8016d6e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016d4a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016d4e:	f1bb 0f00 	cmp.w	fp, #0
 8016d52:	db0c      	blt.n	8016d6e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016d54:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016d56:	45bb      	cmp	fp, r7
 8016d58:	da09      	bge.n	8016d6e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016d5a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016d5e:	45bb      	cmp	fp, r7
 8016d60:	bf3c      	itt	cc
 8016d62:	f10c 0708 	addcc.w	r7, ip, #8
 8016d66:	6107      	strcc	r7, [r0, #16]
 8016d68:	f10b 0701 	add.w	r7, fp, #1
 8016d6c:	6087      	str	r7, [r0, #8]
 8016d6e:	6907      	ldr	r7, [r0, #16]
 8016d70:	459e      	cmp	lr, r3
 8016d72:	803b      	strh	r3, [r7, #0]
 8016d74:	807a      	strh	r2, [r7, #2]
 8016d76:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016d7a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016d7e:	d1c5      	bne.n	8016d0c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8016d80:	9b04      	ldr	r3, [sp, #16]
 8016d82:	1b9e      	subs	r6, r3, r6
 8016d84:	6903      	ldr	r3, [r0, #16]
 8016d86:	889a      	ldrh	r2, [r3, #4]
 8016d88:	4432      	add	r2, r6
 8016d8a:	809a      	strh	r2, [r3, #4]
 8016d8c:	9a02      	ldr	r2, [sp, #8]
 8016d8e:	f102 0c20 	add.w	ip, r2, #32
 8016d92:	9a01      	ldr	r2, [sp, #4]
 8016d94:	ebac 0c02 	sub.w	ip, ip, r2
 8016d98:	88da      	ldrh	r2, [r3, #6]
 8016d9a:	fb06 260c 	mla	r6, r6, ip, r2
 8016d9e:	80de      	strh	r6, [r3, #6]
 8016da0:	f7ff bba9 	b.w	80164f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08016da4 <_ZN8touchgfx7Outline6lineToEii>:
 8016da4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016da6:	079b      	lsls	r3, r3, #30
 8016da8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8016daa:	460e      	mov	r6, r1
 8016dac:	4615      	mov	r5, r2
 8016dae:	d511      	bpl.n	8016dd4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016db0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8016db4:	ea86 0701 	eor.w	r7, r6, r1
 8016db8:	ea85 0302 	eor.w	r3, r5, r2
 8016dbc:	433b      	orrs	r3, r7
 8016dbe:	d009      	beq.n	8016dd4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016dc0:	4633      	mov	r3, r6
 8016dc2:	9500      	str	r5, [sp, #0]
 8016dc4:	f7ff fb3e 	bl	8016444 <_ZN8touchgfx7Outline10renderLineEiiii>
 8016dc8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016dca:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8016dce:	f043 0301 	orr.w	r3, r3, #1
 8016dd2:	6243      	str	r3, [r0, #36]	; 0x24
 8016dd4:	b003      	add	sp, #12
 8016dd6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016dd8 <_ZN8touchgfx7Outline6moveToEii>:
 8016dd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016dda:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016ddc:	4615      	mov	r5, r2
 8016dde:	079a      	lsls	r2, r3, #30
 8016de0:	4604      	mov	r4, r0
 8016de2:	460e      	mov	r6, r1
 8016de4:	d401      	bmi.n	8016dea <_ZN8touchgfx7Outline6moveToEii+0x12>
 8016de6:	f7ff faf9 	bl	80163dc <_ZN8touchgfx7Outline5resetEv>
 8016dea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016dec:	07db      	lsls	r3, r3, #31
 8016dee:	d504      	bpl.n	8016dfa <_ZN8touchgfx7Outline6moveToEii+0x22>
 8016df0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8016df4:	4620      	mov	r0, r4
 8016df6:	f7ff ffd5 	bl	8016da4 <_ZN8touchgfx7Outline6lineToEii>
 8016dfa:	6923      	ldr	r3, [r4, #16]
 8016dfc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016e00:	1170      	asrs	r0, r6, #5
 8016e02:	4290      	cmp	r0, r2
 8016e04:	ea4f 1165 	mov.w	r1, r5, asr #5
 8016e08:	d103      	bne.n	8016e12 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8016e0a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016e0e:	4291      	cmp	r1, r2
 8016e10:	d01a      	beq.n	8016e48 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8016e12:	88df      	ldrh	r7, [r3, #6]
 8016e14:	889a      	ldrh	r2, [r3, #4]
 8016e16:	433a      	orrs	r2, r7
 8016e18:	d010      	beq.n	8016e3c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016e1a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016e1e:	2a00      	cmp	r2, #0
 8016e20:	db0c      	blt.n	8016e3c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016e22:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8016e24:	42ba      	cmp	r2, r7
 8016e26:	da09      	bge.n	8016e3c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016e28:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8016e2c:	42ba      	cmp	r2, r7
 8016e2e:	bf38      	it	cc
 8016e30:	3308      	addcc	r3, #8
 8016e32:	f102 0201 	add.w	r2, r2, #1
 8016e36:	bf38      	it	cc
 8016e38:	6123      	strcc	r3, [r4, #16]
 8016e3a:	60a2      	str	r2, [r4, #8]
 8016e3c:	6923      	ldr	r3, [r4, #16]
 8016e3e:	2200      	movs	r2, #0
 8016e40:	8018      	strh	r0, [r3, #0]
 8016e42:	8059      	strh	r1, [r3, #2]
 8016e44:	809a      	strh	r2, [r3, #4]
 8016e46:	80da      	strh	r2, [r3, #6]
 8016e48:	6166      	str	r6, [r4, #20]
 8016e4a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8016e4e:	6225      	str	r5, [r4, #32]
 8016e50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016e52 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8016e52:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016e56:	b0d0      	sub	sp, #320	; 0x140
 8016e58:	466c      	mov	r4, sp
 8016e5a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016e5e:	4627      	mov	r7, r4
 8016e60:	1a0d      	subs	r5, r1, r0
 8016e62:	2d48      	cmp	r5, #72	; 0x48
 8016e64:	f100 0308 	add.w	r3, r0, #8
 8016e68:	f340 80d5 	ble.w	8017016 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016e6c:	112d      	asrs	r5, r5, #4
 8016e6e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8016e72:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016e76:	6816      	ldr	r6, [r2, #0]
 8016e78:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8016e7c:	6006      	str	r6, [r0, #0]
 8016e7e:	6856      	ldr	r6, [r2, #4]
 8016e80:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016e84:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016e88:	6046      	str	r6, [r0, #4]
 8016e8a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016e8e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8016e92:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016e96:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016e9a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016e9e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8016ea2:	4565      	cmp	r5, ip
 8016ea4:	f1a1 0208 	sub.w	r2, r1, #8
 8016ea8:	db06      	blt.n	8016eb8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8016eaa:	d119      	bne.n	8016ee0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016eac:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8016eb0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8016eb4:	42ae      	cmp	r6, r5
 8016eb6:	dd13      	ble.n	8016ee0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016eb8:	460e      	mov	r6, r1
 8016eba:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8016ebe:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016ec2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8016ec6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8016eca:	601d      	str	r5, [r3, #0]
 8016ecc:	6875      	ldr	r5, [r6, #4]
 8016ece:	605d      	str	r5, [r3, #4]
 8016ed0:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016ed4:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016ed8:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016edc:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016ee0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8016ee4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8016ee8:	42ae      	cmp	r6, r5
 8016eea:	db06      	blt.n	8016efa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8016eec:	d116      	bne.n	8016f1c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016eee:	f9b0 c000 	ldrsh.w	ip, [r0]
 8016ef2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8016ef6:	45ac      	cmp	ip, r5
 8016ef8:	da10      	bge.n	8016f1c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016efa:	681d      	ldr	r5, [r3, #0]
 8016efc:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016f00:	6005      	str	r5, [r0, #0]
 8016f02:	685d      	ldr	r5, [r3, #4]
 8016f04:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016f08:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016f0c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8016f10:	6045      	str	r5, [r0, #4]
 8016f12:	8146      	strh	r6, [r0, #10]
 8016f14:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8016f18:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8016f1c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016f20:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016f24:	4565      	cmp	r5, ip
 8016f26:	db06      	blt.n	8016f36 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8016f28:	d119      	bne.n	8016f5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016f2a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8016f2e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016f32:	42ae      	cmp	r6, r5
 8016f34:	da13      	bge.n	8016f5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016f36:	460e      	mov	r6, r1
 8016f38:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016f3c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016f40:	6005      	str	r5, [r0, #0]
 8016f42:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8016f46:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8016f4a:	6875      	ldr	r5, [r6, #4]
 8016f4c:	6045      	str	r5, [r0, #4]
 8016f4e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016f52:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016f56:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016f5a:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016f5e:	3308      	adds	r3, #8
 8016f60:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016f64:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8016f68:	45e6      	cmp	lr, ip
 8016f6a:	dbf8      	blt.n	8016f5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016f6c:	d105      	bne.n	8016f7a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016f6e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016f72:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016f76:	42ae      	cmp	r6, r5
 8016f78:	dbf1      	blt.n	8016f5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016f7a:	4615      	mov	r5, r2
 8016f7c:	3a08      	subs	r2, #8
 8016f7e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8016f82:	45b4      	cmp	ip, r6
 8016f84:	dbf9      	blt.n	8016f7a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016f86:	d105      	bne.n	8016f94 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8016f88:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016f8c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8016f90:	45b0      	cmp	r8, r6
 8016f92:	dbf2      	blt.n	8016f7a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016f94:	4293      	cmp	r3, r2
 8016f96:	f1a5 0608 	sub.w	r6, r5, #8
 8016f9a:	d816      	bhi.n	8016fca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8016f9c:	f8d6 c000 	ldr.w	ip, [r6]
 8016fa0:	f9b3 a000 	ldrsh.w	sl, [r3]
 8016fa4:	f8c3 c000 	str.w	ip, [r3]
 8016fa8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8016fac:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8016fb0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8016fb4:	f8c3 c004 	str.w	ip, [r3, #4]
 8016fb8:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016fbc:	f825 ec06 	strh.w	lr, [r5, #-6]
 8016fc0:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016fc4:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016fc8:	e7c9      	b.n	8016f5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016fca:	f8d6 e000 	ldr.w	lr, [r6]
 8016fce:	f9b0 a000 	ldrsh.w	sl, [r0]
 8016fd2:	f8c0 e000 	str.w	lr, [r0]
 8016fd6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8016fda:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8016fde:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8016fe2:	f8c0 e004 	str.w	lr, [r0, #4]
 8016fe6:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016fea:	f825 cc06 	strh.w	ip, [r5, #-6]
 8016fee:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016ff2:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016ff6:	1acd      	subs	r5, r1, r3
 8016ff8:	1a16      	subs	r6, r2, r0
 8016ffa:	10ed      	asrs	r5, r5, #3
 8016ffc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8017000:	bfb5      	itete	lt
 8017002:	e9c4 0200 	strdlt	r0, r2, [r4]
 8017006:	e9c4 3100 	strdge	r3, r1, [r4]
 801700a:	460a      	movlt	r2, r1
 801700c:	4603      	movge	r3, r0
 801700e:	3408      	adds	r4, #8
 8017010:	4618      	mov	r0, r3
 8017012:	4611      	mov	r1, r2
 8017014:	e724      	b.n	8016e60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8017016:	4299      	cmp	r1, r3
 8017018:	d928      	bls.n	801706c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801701a:	f1a3 0210 	sub.w	r2, r3, #16
 801701e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8017022:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8017026:	45ac      	cmp	ip, r5
 8017028:	db06      	blt.n	8017038 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801702a:	d11d      	bne.n	8017068 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801702c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8017030:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8017034:	42ae      	cmp	r6, r5
 8017036:	da17      	bge.n	8017068 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8017038:	4615      	mov	r5, r2
 801703a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801703e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8017042:	6116      	str	r6, [r2, #16]
 8017044:	686e      	ldr	r6, [r5, #4]
 8017046:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801704a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801704e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8017052:	42a8      	cmp	r0, r5
 8017054:	6156      	str	r6, [r2, #20]
 8017056:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801705a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801705e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8017062:	f1a2 0208 	sub.w	r2, r2, #8
 8017066:	d1da      	bne.n	801701e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8017068:	3308      	adds	r3, #8
 801706a:	e7d4      	b.n	8017016 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801706c:	42bc      	cmp	r4, r7
 801706e:	d903      	bls.n	8017078 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8017070:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8017074:	3c08      	subs	r4, #8
 8017076:	e6f3      	b.n	8016e60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8017078:	b050      	add	sp, #320	; 0x140
 801707a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801707e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801707e:	b510      	push	{r4, lr}
 8017080:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017082:	07da      	lsls	r2, r3, #31
 8017084:	4604      	mov	r4, r0
 8017086:	d507      	bpl.n	8017098 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8017088:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801708c:	f7ff fe8a 	bl	8016da4 <_ZN8touchgfx7Outline6lineToEii>
 8017090:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017092:	f023 0301 	bic.w	r3, r3, #1
 8017096:	6243      	str	r3, [r0, #36]	; 0x24
 8017098:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801709a:	079b      	lsls	r3, r3, #30
 801709c:	d521      	bpl.n	80170e2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801709e:	6923      	ldr	r3, [r4, #16]
 80170a0:	88d9      	ldrh	r1, [r3, #6]
 80170a2:	889a      	ldrh	r2, [r3, #4]
 80170a4:	430a      	orrs	r2, r1
 80170a6:	d010      	beq.n	80170ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80170a8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80170ac:	2a00      	cmp	r2, #0
 80170ae:	db0c      	blt.n	80170ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80170b0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80170b2:	428a      	cmp	r2, r1
 80170b4:	da09      	bge.n	80170ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80170b6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80170ba:	4291      	cmp	r1, r2
 80170bc:	bf88      	it	hi
 80170be:	3308      	addhi	r3, #8
 80170c0:	f102 0201 	add.w	r2, r2, #1
 80170c4:	bf88      	it	hi
 80170c6:	6123      	strhi	r3, [r4, #16]
 80170c8:	60a2      	str	r2, [r4, #8]
 80170ca:	68a1      	ldr	r1, [r4, #8]
 80170cc:	b129      	cbz	r1, 80170da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80170ce:	6863      	ldr	r3, [r4, #4]
 80170d0:	4299      	cmp	r1, r3
 80170d2:	d802      	bhi.n	80170da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80170d4:	68e0      	ldr	r0, [r4, #12]
 80170d6:	f7ff febc 	bl	8016e52 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80170da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80170dc:	f023 0302 	bic.w	r3, r3, #2
 80170e0:	6263      	str	r3, [r4, #36]	; 0x24
 80170e2:	68e0      	ldr	r0, [r4, #12]
 80170e4:	bd10      	pop	{r4, pc}
	...

080170e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80170e8:	4b02      	ldr	r3, [pc, #8]	; (80170f4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80170ea:	6018      	str	r0, [r3, #0]
 80170ec:	4b02      	ldr	r3, [pc, #8]	; (80170f8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80170ee:	6019      	str	r1, [r3, #0]
 80170f0:	4770      	bx	lr
 80170f2:	bf00      	nop
 80170f4:	2001385c 	.word	0x2001385c
 80170f8:	20013860 	.word	0x20013860

080170fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80170fc:	4a02      	ldr	r2, [pc, #8]	; (8017108 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80170fe:	2300      	movs	r3, #0
 8017100:	6013      	str	r3, [r2, #0]
 8017102:	4a02      	ldr	r2, [pc, #8]	; (801710c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8017104:	6013      	str	r3, [r2, #0]
 8017106:	4770      	bx	lr
 8017108:	2001385c 	.word	0x2001385c
 801710c:	20013860 	.word	0x20013860

08017110 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8017110:	4b01      	ldr	r3, [pc, #4]	; (8017118 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8017112:	6818      	ldr	r0, [r3, #0]
 8017114:	4770      	bx	lr
 8017116:	bf00      	nop
 8017118:	2001385c 	.word	0x2001385c

0801711c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801711c:	4b01      	ldr	r3, [pc, #4]	; (8017124 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801711e:	6818      	ldr	r0, [r3, #0]
 8017120:	4770      	bx	lr
 8017122:	bf00      	nop
 8017124:	20013860 	.word	0x20013860

08017128 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8017128:	b510      	push	{r4, lr}
 801712a:	6803      	ldr	r3, [r0, #0]
 801712c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801712e:	460c      	mov	r4, r1
 8017130:	4798      	blx	r3
 8017132:	1b03      	subs	r3, r0, r4
 8017134:	4258      	negs	r0, r3
 8017136:	4158      	adcs	r0, r3
 8017138:	bd10      	pop	{r4, pc}
	...

0801713c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801713c:	4b01      	ldr	r3, [pc, #4]	; (8017144 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801713e:	6019      	str	r1, [r3, #0]
 8017140:	4770      	bx	lr
 8017142:	bf00      	nop
 8017144:	20013864 	.word	0x20013864

08017148 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8017148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801714c:	4696      	mov	lr, r2
 801714e:	4605      	mov	r5, r0
 8017150:	4614      	mov	r4, r2
 8017152:	460e      	mov	r6, r1
 8017154:	461f      	mov	r7, r3
 8017156:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801715a:	b097      	sub	sp, #92	; 0x5c
 801715c:	f10d 0c1c 	add.w	ip, sp, #28
 8017160:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017164:	f8de 3000 	ldr.w	r3, [lr]
 8017168:	f8cc 3000 	str.w	r3, [ip]
 801716c:	f104 0e14 	add.w	lr, r4, #20
 8017170:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017174:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017178:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801717c:	f8de 3000 	ldr.w	r3, [lr]
 8017180:	f8cc 3000 	str.w	r3, [ip]
 8017184:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017188:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801718c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017190:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017194:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8017198:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801719c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80171a0:	f8de 3000 	ldr.w	r3, [lr]
 80171a4:	f8cc 3000 	str.w	r3, [ip]
 80171a8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80171aa:	682b      	ldr	r3, [r5, #0]
 80171ac:	9201      	str	r2, [sp, #4]
 80171ae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80171b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80171b4:	9200      	str	r2, [sp, #0]
 80171b6:	f8cd 8008 	str.w	r8, [sp, #8]
 80171ba:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80171be:	aa07      	add	r2, sp, #28
 80171c0:	463b      	mov	r3, r7
 80171c2:	4631      	mov	r1, r6
 80171c4:	4628      	mov	r0, r5
 80171c6:	47d8      	blx	fp
 80171c8:	46a6      	mov	lr, r4
 80171ca:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80171ce:	f10d 0c1c 	add.w	ip, sp, #28
 80171d2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80171d6:	f8de 3000 	ldr.w	r3, [lr]
 80171da:	f8cc 3000 	str.w	r3, [ip]
 80171de:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80171e2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80171e6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80171ea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80171ee:	343c      	adds	r4, #60	; 0x3c
 80171f0:	f8de 3000 	ldr.w	r3, [lr]
 80171f4:	f8cc 3000 	str.w	r3, [ip]
 80171f8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80171fa:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80171fe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017202:	6823      	ldr	r3, [r4, #0]
 8017204:	f8cc 3000 	str.w	r3, [ip]
 8017208:	682b      	ldr	r3, [r5, #0]
 801720a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801720e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017210:	9201      	str	r2, [sp, #4]
 8017212:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017214:	9200      	str	r2, [sp, #0]
 8017216:	f8cd 8008 	str.w	r8, [sp, #8]
 801721a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801721c:	aa07      	add	r2, sp, #28
 801721e:	463b      	mov	r3, r7
 8017220:	4631      	mov	r1, r6
 8017222:	4628      	mov	r0, r5
 8017224:	47a0      	blx	r4
 8017226:	b017      	add	sp, #92	; 0x5c
 8017228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801722c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801722c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017230:	b08d      	sub	sp, #52	; 0x34
 8017232:	4688      	mov	r8, r1
 8017234:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017236:	f8d3 c000 	ldr.w	ip, [r3]
 801723a:	680f      	ldr	r7, [r1, #0]
 801723c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8017240:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8017244:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8017248:	edd3 6a07 	vldr	s13, [r3, #28]
 801724c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801724e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8017252:	f9b1 9000 	ldrsh.w	r9, [r1]
 8017256:	f9ba 1000 	ldrsh.w	r1, [sl]
 801725a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801725e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8017262:	eba7 070c 	sub.w	r7, r7, ip
 8017266:	42bc      	cmp	r4, r7
 8017268:	bfa8      	it	ge
 801726a:	463c      	movge	r4, r7
 801726c:	ee07 4a90 	vmov	s15, r4
 8017270:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8017274:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8017278:	ee25 4a04 	vmul.f32	s8, s10, s8
 801727c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8017280:	ee25 5a27 	vmul.f32	s10, s10, s15
 8017284:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017288:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801728c:	eb09 0e0c 	add.w	lr, r9, ip
 8017290:	4571      	cmp	r1, lr
 8017292:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8017296:	ee32 1a05 	vadd.f32	s2, s4, s10
 801729a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801729e:	ee61 1a87 	vmul.f32	s3, s3, s14
 80172a2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80172a6:	f340 808d 	ble.w	80173c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80172aa:	eba1 060e 	sub.w	r6, r1, lr
 80172ae:	fb96 f5f4 	sdiv	r5, r6, r4
 80172b2:	ee07 5a10 	vmov	s14, r5
 80172b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80172ba:	2d00      	cmp	r5, #0
 80172bc:	fb04 6615 	mls	r6, r4, r5, r6
 80172c0:	eea7 0a04 	vfma.f32	s0, s14, s8
 80172c4:	eee7 0a24 	vfma.f32	s1, s14, s9
 80172c8:	eea7 1a05 	vfma.f32	s2, s14, s10
 80172cc:	dd13      	ble.n	80172f6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80172ce:	ee70 6a44 	vsub.f32	s13, s0, s8
 80172d2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80172d6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80172da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172de:	bf18      	it	ne
 80172e0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80172e4:	ee31 2a45 	vsub.f32	s4, s2, s10
 80172e8:	bf08      	it	eq
 80172ea:	eeb0 7a67 	vmoveq.f32	s14, s15
 80172ee:	ee61 1a87 	vmul.f32	s3, s3, s14
 80172f2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80172f6:	fb05 f204 	mul.w	r2, r5, r4
 80172fa:	1abf      	subs	r7, r7, r2
 80172fc:	4494      	add	ip, r2
 80172fe:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8017302:	4411      	add	r1, r2
 8017304:	eb09 020c 	add.w	r2, r9, ip
 8017308:	443a      	add	r2, r7
 801730a:	b209      	sxth	r1, r1
 801730c:	428a      	cmp	r2, r1
 801730e:	bfc4      	itt	gt
 8017310:	eba1 0209 	subgt.w	r2, r1, r9
 8017314:	eba2 070c 	subgt.w	r7, r2, ip
 8017318:	2f00      	cmp	r7, #0
 801731a:	dd50      	ble.n	80173be <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801731c:	fb97 f1f4 	sdiv	r1, r7, r4
 8017320:	fb04 7211 	mls	r2, r4, r1, r7
 8017324:	b90a      	cbnz	r2, 801732a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8017326:	3901      	subs	r1, #1
 8017328:	4622      	mov	r2, r4
 801732a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801732e:	6840      	ldr	r0, [r0, #4]
 8017330:	900b      	str	r0, [sp, #44]	; 0x2c
 8017332:	f8d0 a000 	ldr.w	sl, [r0]
 8017336:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8017338:	9008      	str	r0, [sp, #32]
 801733a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801733e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8017340:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8017344:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8017348:	695b      	ldr	r3, [r3, #20]
 801734a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801734c:	445b      	add	r3, fp
 801734e:	eef0 6a42 	vmov.f32	s13, s4
 8017352:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8017356:	ee21 3a23 	vmul.f32	s6, s2, s7
 801735a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801735e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017362:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017366:	9307      	str	r3, [sp, #28]
 8017368:	ee17 7a90 	vmov	r7, s15
 801736c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8017370:	eeb0 7a61 	vmov.f32	s14, s3
 8017374:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017378:	ee16 3a90 	vmov	r3, s13
 801737c:	fb97 f7f4 	sdiv	r7, r7, r4
 8017380:	ee17 ca90 	vmov	ip, s15
 8017384:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8017388:	fb9c fcf4 	sdiv	ip, ip, r4
 801738c:	fb0c 3306 	mla	r3, ip, r6, r3
 8017390:	9302      	str	r3, [sp, #8]
 8017392:	ee17 3a10 	vmov	r3, s14
 8017396:	44b6      	add	lr, r6
 8017398:	fb04 e505 	mla	r5, r4, r5, lr
 801739c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80173a0:	fb07 3706 	mla	r7, r7, r6, r3
 80173a4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80173a8:	e9cd 4700 	strd	r4, r7, [sp]
 80173ac:	2900      	cmp	r1, #0
 80173ae:	bfcc      	ite	gt
 80173b0:	46a1      	movgt	r9, r4
 80173b2:	4691      	movle	r9, r2
 80173b4:	eba9 0306 	sub.w	r3, r9, r6
 80173b8:	f8da 4008 	ldr.w	r4, [sl, #8]
 80173bc:	47a0      	blx	r4
 80173be:	b00d      	add	sp, #52	; 0x34
 80173c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173c4:	2500      	movs	r5, #0
 80173c6:	462e      	mov	r6, r5
 80173c8:	e799      	b.n	80172fe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080173cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80173cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173d0:	b0db      	sub	sp, #364	; 0x16c
 80173d2:	461d      	mov	r5, r3
 80173d4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80173d8:	930a      	str	r3, [sp, #40]	; 0x28
 80173da:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80173de:	930b      	str	r3, [sp, #44]	; 0x2c
 80173e0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80173e4:	9310      	str	r3, [sp, #64]	; 0x40
 80173e6:	6803      	ldr	r3, [r0, #0]
 80173e8:	910f      	str	r1, [sp, #60]	; 0x3c
 80173ea:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80173ec:	9009      	str	r0, [sp, #36]	; 0x24
 80173ee:	4614      	mov	r4, r2
 80173f0:	4629      	mov	r1, r5
 80173f2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80173f6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80173fa:	47b8      	blx	r7
 80173fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80173fe:	6058      	str	r0, [r3, #4]
 8017400:	2800      	cmp	r0, #0
 8017402:	f000 83a1 	beq.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017406:	682b      	ldr	r3, [r5, #0]
 8017408:	9314      	str	r3, [sp, #80]	; 0x50
 801740a:	686b      	ldr	r3, [r5, #4]
 801740c:	9315      	str	r3, [sp, #84]	; 0x54
 801740e:	4bc4      	ldr	r3, [pc, #784]	; (8017720 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8017410:	ed94 7a02 	vldr	s14, [r4, #8]
 8017414:	7819      	ldrb	r1, [r3, #0]
 8017416:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801741a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801741e:	2900      	cmp	r1, #0
 8017420:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017424:	bf16      	itet	ne
 8017426:	4619      	movne	r1, r3
 8017428:	4611      	moveq	r1, r2
 801742a:	4613      	movne	r3, r2
 801742c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017430:	9116      	str	r1, [sp, #88]	; 0x58
 8017432:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8017436:	f240 8387 	bls.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801743a:	ed94 7a07 	vldr	s14, [r4, #28]
 801743e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017442:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017446:	f240 837f 	bls.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801744a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801744e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017452:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017456:	f240 8377 	bls.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801745a:	6822      	ldr	r2, [r4, #0]
 801745c:	4bb1      	ldr	r3, [pc, #708]	; (8017724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801745e:	429a      	cmp	r2, r3
 8017460:	f2c0 8372 	blt.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017464:	49b0      	ldr	r1, [pc, #704]	; (8017728 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8017466:	6963      	ldr	r3, [r4, #20]
 8017468:	428a      	cmp	r2, r1
 801746a:	f300 836d 	bgt.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801746e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017472:	48ae      	ldr	r0, [pc, #696]	; (801772c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8017474:	33ff      	adds	r3, #255	; 0xff
 8017476:	4283      	cmp	r3, r0
 8017478:	f200 8366 	bhi.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801747c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801747e:	4dac      	ldr	r5, [pc, #688]	; (8017730 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8017480:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017484:	33ff      	adds	r3, #255	; 0xff
 8017486:	42ab      	cmp	r3, r5
 8017488:	f200 835e 	bhi.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801748c:	6862      	ldr	r2, [r4, #4]
 801748e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8017492:	33ff      	adds	r3, #255	; 0xff
 8017494:	4283      	cmp	r3, r0
 8017496:	f200 8357 	bhi.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801749a:	69a1      	ldr	r1, [r4, #24]
 801749c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80174a0:	33ff      	adds	r3, #255	; 0xff
 80174a2:	4283      	cmp	r3, r0
 80174a4:	f200 8350 	bhi.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80174a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80174aa:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80174ae:	30ff      	adds	r0, #255	; 0xff
 80174b0:	42a8      	cmp	r0, r5
 80174b2:	f200 8349 	bhi.w	8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80174b6:	428a      	cmp	r2, r1
 80174b8:	f280 8110 	bge.w	80176dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80174bc:	429a      	cmp	r2, r3
 80174be:	f300 8119 	bgt.w	80176f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80174c2:	4299      	cmp	r1, r3
 80174c4:	f280 811d 	bge.w	8017702 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80174c8:	2502      	movs	r5, #2
 80174ca:	2701      	movs	r7, #1
 80174cc:	46a9      	mov	r9, r5
 80174ce:	46b8      	mov	r8, r7
 80174d0:	f04f 0a00 	mov.w	sl, #0
 80174d4:	4621      	mov	r1, r4
 80174d6:	a849      	add	r0, sp, #292	; 0x124
 80174d8:	f003 ff2a 	bl	801b330 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80174dc:	4622      	mov	r2, r4
 80174de:	4653      	mov	r3, sl
 80174e0:	a949      	add	r1, sp, #292	; 0x124
 80174e2:	f8cd 9000 	str.w	r9, [sp]
 80174e6:	a819      	add	r0, sp, #100	; 0x64
 80174e8:	f004 f852 	bl	801b590 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80174ec:	4622      	mov	r2, r4
 80174ee:	4653      	mov	r3, sl
 80174f0:	a949      	add	r1, sp, #292	; 0x124
 80174f2:	f8cd 8000 	str.w	r8, [sp]
 80174f6:	a829      	add	r0, sp, #164	; 0xa4
 80174f8:	f004 f84a 	bl	801b590 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80174fc:	4643      	mov	r3, r8
 80174fe:	4622      	mov	r2, r4
 8017500:	a949      	add	r1, sp, #292	; 0x124
 8017502:	f8cd 9000 	str.w	r9, [sp]
 8017506:	a839      	add	r0, sp, #228	; 0xe4
 8017508:	f004 f842 	bl	801b590 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801750c:	42af      	cmp	r7, r5
 801750e:	bfb5      	itete	lt
 8017510:	2300      	movlt	r3, #0
 8017512:	2301      	movge	r3, #1
 8017514:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017516:	930e      	strge	r3, [sp, #56]	; 0x38
 8017518:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801751a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801751e:	af12      	add	r7, sp, #72	; 0x48
 8017520:	bfb9      	ittee	lt
 8017522:	ad29      	addlt	r5, sp, #164	; 0xa4
 8017524:	ac19      	addlt	r4, sp, #100	; 0x64
 8017526:	ad19      	addge	r5, sp, #100	; 0x64
 8017528:	ac29      	addge	r4, sp, #164	; 0xa4
 801752a:	e887 0003 	stmia.w	r7, {r0, r1}
 801752e:	b928      	cbnz	r0, 801753c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8017530:	4b80      	ldr	r3, [pc, #512]	; (8017734 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8017532:	6818      	ldr	r0, [r3, #0]
 8017534:	6803      	ldr	r3, [r0, #0]
 8017536:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017538:	4798      	blx	r3
 801753a:	6038      	str	r0, [r7, #0]
 801753c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801753e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017542:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017546:	930c      	str	r3, [sp, #48]	; 0x30
 8017548:	990c      	ldr	r1, [sp, #48]	; 0x30
 801754a:	6963      	ldr	r3, [r4, #20]
 801754c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801754e:	440b      	add	r3, r1
 8017550:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017554:	4408      	add	r0, r1
 8017556:	b200      	sxth	r0, r0
 8017558:	4283      	cmp	r3, r0
 801755a:	900d      	str	r0, [sp, #52]	; 0x34
 801755c:	f280 80dd 	bge.w	801771a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8017560:	428b      	cmp	r3, r1
 8017562:	da08      	bge.n	8017576 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017564:	2a00      	cmp	r2, #0
 8017566:	dd06      	ble.n	8017576 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017568:	1acb      	subs	r3, r1, r3
 801756a:	429a      	cmp	r2, r3
 801756c:	f2c0 80e4 	blt.w	8017738 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8017570:	2b00      	cmp	r3, #0
 8017572:	f300 80e2 	bgt.w	801773a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8017576:	6967      	ldr	r7, [r4, #20]
 8017578:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801757a:	443b      	add	r3, r7
 801757c:	461f      	mov	r7, r3
 801757e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017580:	1bdf      	subs	r7, r3, r7
 8017582:	4297      	cmp	r7, r2
 8017584:	bfa8      	it	ge
 8017586:	4617      	movge	r7, r2
 8017588:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801758c:	2f00      	cmp	r7, #0
 801758e:	f340 8166 	ble.w	801785e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8017592:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017594:	6829      	ldr	r1, [r5, #0]
 8017596:	f9b3 2000 	ldrsh.w	r2, [r3]
 801759a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801759e:	6820      	ldr	r0, [r4, #0]
 80175a0:	4411      	add	r1, r2
 80175a2:	4299      	cmp	r1, r3
 80175a4:	dd1a      	ble.n	80175dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80175a6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80175aa:	440b      	add	r3, r1
 80175ac:	4402      	add	r2, r0
 80175ae:	b21b      	sxth	r3, r3
 80175b0:	429a      	cmp	r2, r3
 80175b2:	dc13      	bgt.n	80175dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80175b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80175b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80175b8:	681b      	ldr	r3, [r3, #0]
 80175ba:	9206      	str	r2, [sp, #24]
 80175bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80175be:	9205      	str	r2, [sp, #20]
 80175c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80175c2:	9500      	str	r5, [sp, #0]
 80175c4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80175c8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80175ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 80175cc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80175d0:	a912      	add	r1, sp, #72	; 0x48
 80175d2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80175d6:	aa49      	add	r2, sp, #292	; 0x124
 80175d8:	4623      	mov	r3, r4
 80175da:	47c8      	blx	r9
 80175dc:	e9d4 2300 	ldrd	r2, r3, [r4]
 80175e0:	441a      	add	r2, r3
 80175e2:	6963      	ldr	r3, [r4, #20]
 80175e4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80175e8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80175ec:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80175f0:	68a1      	ldr	r1, [r4, #8]
 80175f2:	ed94 6a08 	vldr	s12, [r4, #32]
 80175f6:	6022      	str	r2, [r4, #0]
 80175f8:	3301      	adds	r3, #1
 80175fa:	6163      	str	r3, [r4, #20]
 80175fc:	69a3      	ldr	r3, [r4, #24]
 80175fe:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017602:	3b01      	subs	r3, #1
 8017604:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017608:	61a3      	str	r3, [r4, #24]
 801760a:	6923      	ldr	r3, [r4, #16]
 801760c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017610:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017614:	edd4 6a07 	vldr	s13, [r4, #28]
 8017618:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801761c:	440b      	add	r3, r1
 801761e:	68e1      	ldr	r1, [r4, #12]
 8017620:	6123      	str	r3, [r4, #16]
 8017622:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017626:	428b      	cmp	r3, r1
 8017628:	edc4 6a07 	vstr	s13, [r4, #28]
 801762c:	db15      	blt.n	801765a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801762e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017632:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017636:	3201      	adds	r2, #1
 8017638:	edc4 6a07 	vstr	s13, [r4, #28]
 801763c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8017640:	6022      	str	r2, [r4, #0]
 8017642:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017646:	1a5b      	subs	r3, r3, r1
 8017648:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801764c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8017650:	6123      	str	r3, [r4, #16]
 8017652:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017656:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801765a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801765e:	441a      	add	r2, r3
 8017660:	696b      	ldr	r3, [r5, #20]
 8017662:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017666:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801766a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801766e:	68a9      	ldr	r1, [r5, #8]
 8017670:	ed95 6a08 	vldr	s12, [r5, #32]
 8017674:	602a      	str	r2, [r5, #0]
 8017676:	3301      	adds	r3, #1
 8017678:	616b      	str	r3, [r5, #20]
 801767a:	69ab      	ldr	r3, [r5, #24]
 801767c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017680:	3b01      	subs	r3, #1
 8017682:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017686:	61ab      	str	r3, [r5, #24]
 8017688:	692b      	ldr	r3, [r5, #16]
 801768a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801768e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017692:	edd5 6a07 	vldr	s13, [r5, #28]
 8017696:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801769a:	440b      	add	r3, r1
 801769c:	68e9      	ldr	r1, [r5, #12]
 801769e:	612b      	str	r3, [r5, #16]
 80176a0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80176a4:	428b      	cmp	r3, r1
 80176a6:	edc5 6a07 	vstr	s13, [r5, #28]
 80176aa:	db15      	blt.n	80176d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80176ac:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80176b0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80176b4:	3201      	adds	r2, #1
 80176b6:	edc5 6a07 	vstr	s13, [r5, #28]
 80176ba:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80176be:	602a      	str	r2, [r5, #0]
 80176c0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80176c4:	1a5b      	subs	r3, r3, r1
 80176c6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80176ca:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80176ce:	612b      	str	r3, [r5, #16]
 80176d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80176d4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80176d8:	3f01      	subs	r7, #1
 80176da:	e757      	b.n	801758c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80176dc:	4299      	cmp	r1, r3
 80176de:	dc13      	bgt.n	8017708 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80176e0:	429a      	cmp	r2, r3
 80176e2:	da14      	bge.n	801770e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80176e4:	2502      	movs	r5, #2
 80176e6:	2703      	movs	r7, #3
 80176e8:	46a9      	mov	r9, r5
 80176ea:	f04f 0800 	mov.w	r8, #0
 80176ee:	f04f 0a01 	mov.w	sl, #1
 80176f2:	e6ef      	b.n	80174d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80176f4:	2501      	movs	r5, #1
 80176f6:	2700      	movs	r7, #0
 80176f8:	46a9      	mov	r9, r5
 80176fa:	46b8      	mov	r8, r7
 80176fc:	f04f 0a02 	mov.w	sl, #2
 8017700:	e6e8      	b.n	80174d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017702:	2501      	movs	r5, #1
 8017704:	2702      	movs	r7, #2
 8017706:	e6e1      	b.n	80174cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8017708:	2500      	movs	r5, #0
 801770a:	2701      	movs	r7, #1
 801770c:	e7f4      	b.n	80176f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801770e:	2702      	movs	r7, #2
 8017710:	2503      	movs	r5, #3
 8017712:	f04f 0900 	mov.w	r9, #0
 8017716:	46b8      	mov	r8, r7
 8017718:	e7e9      	b.n	80176ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801771a:	4613      	mov	r3, r2
 801771c:	e728      	b.n	8017570 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801771e:	bf00      	nop
 8017720:	2001384c 	.word	0x2001384c
 8017724:	fffd8f01 	.word	0xfffd8f01
 8017728:	00027100 	.word	0x00027100
 801772c:	0004e1ff 	.word	0x0004e1ff
 8017730:	0004e1fe 	.word	0x0004e1fe
 8017734:	20013854 	.word	0x20013854
 8017738:	4613      	mov	r3, r2
 801773a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801773c:	9111      	str	r1, [sp, #68]	; 0x44
 801773e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8017742:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8017746:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8017748:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801774c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8017750:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8017754:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8017758:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801775c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8017760:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8017764:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8017768:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801776c:	469e      	mov	lr, r3
 801776e:	469c      	mov	ip, r3
 8017770:	f04f 0900 	mov.w	r9, #0
 8017774:	f1bc 0f00 	cmp.w	ip, #0
 8017778:	d147      	bne.n	801780a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801777a:	eb03 0c07 	add.w	ip, r3, r7
 801777e:	1ad7      	subs	r7, r2, r3
 8017780:	f1b9 0f00 	cmp.w	r9, #0
 8017784:	d009      	beq.n	801779a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8017786:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801778a:	9029      	str	r0, [sp, #164]	; 0xa4
 801778c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8017790:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8017794:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8017798:	912d      	str	r1, [sp, #180]	; 0xb4
 801779a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801779c:	9111      	str	r1, [sp, #68]	; 0x44
 801779e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80177a2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80177a6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80177aa:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80177ae:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80177b2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80177b6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80177ba:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80177be:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80177c2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80177c6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80177ca:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80177ce:	f04f 0800 	mov.w	r8, #0
 80177d2:	f1be 0f00 	cmp.w	lr, #0
 80177d6:	d031      	beq.n	801783c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80177d8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80177da:	4431      	add	r1, r6
 80177dc:	4549      	cmp	r1, r9
 80177de:	4450      	add	r0, sl
 80177e0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80177e4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80177e8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80177ec:	db08      	blt.n	8017800 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80177ee:	ee77 7a85 	vadd.f32	s15, s15, s10
 80177f2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80177f6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80177fa:	3001      	adds	r0, #1
 80177fc:	eba1 0109 	sub.w	r1, r1, r9
 8017800:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017804:	f04f 0801 	mov.w	r8, #1
 8017808:	e7e3      	b.n	80177d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801780a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801780c:	4431      	add	r1, r6
 801780e:	4541      	cmp	r1, r8
 8017810:	4450      	add	r0, sl
 8017812:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017816:	ee77 7a84 	vadd.f32	s15, s15, s8
 801781a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801781e:	db08      	blt.n	8017832 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8017820:	ee76 6a85 	vadd.f32	s13, s13, s10
 8017824:	ee37 7a25 	vadd.f32	s14, s14, s11
 8017828:	ee77 7a86 	vadd.f32	s15, s15, s12
 801782c:	3001      	adds	r0, #1
 801782e:	eba1 0108 	sub.w	r1, r1, r8
 8017832:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017836:	f04f 0901 	mov.w	r9, #1
 801783a:	e79b      	b.n	8017774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801783c:	449c      	add	ip, r3
 801783e:	1aff      	subs	r7, r7, r3
 8017840:	f1b8 0f00 	cmp.w	r8, #0
 8017844:	d009      	beq.n	801785a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8017846:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801784a:	9019      	str	r0, [sp, #100]	; 0x64
 801784c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8017850:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8017854:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8017858:	911d      	str	r1, [sp, #116]	; 0x74
 801785a:	1ad2      	subs	r2, r2, r3
 801785c:	e68b      	b.n	8017576 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801785e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017860:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8017862:	2b00      	cmp	r3, #0
 8017864:	f000 80d1 	beq.w	8017a0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8017868:	ad19      	add	r5, sp, #100	; 0x64
 801786a:	ac39      	add	r4, sp, #228	; 0xe4
 801786c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801786e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017872:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017876:	930c      	str	r3, [sp, #48]	; 0x30
 8017878:	990c      	ldr	r1, [sp, #48]	; 0x30
 801787a:	6963      	ldr	r3, [r4, #20]
 801787c:	440b      	add	r3, r1
 801787e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017882:	4408      	add	r0, r1
 8017884:	b200      	sxth	r0, r0
 8017886:	4283      	cmp	r3, r0
 8017888:	900d      	str	r0, [sp, #52]	; 0x34
 801788a:	f280 80c1 	bge.w	8017a10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801788e:	428b      	cmp	r3, r1
 8017890:	da08      	bge.n	80178a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017892:	2a00      	cmp	r2, #0
 8017894:	dd06      	ble.n	80178a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017896:	1acb      	subs	r3, r1, r3
 8017898:	429a      	cmp	r2, r3
 801789a:	f2c0 80bb 	blt.w	8017a14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801789e:	2b00      	cmp	r3, #0
 80178a0:	f300 80b9 	bgt.w	8017a16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80178a4:	6967      	ldr	r7, [r4, #20]
 80178a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80178a8:	443b      	add	r3, r7
 80178aa:	461f      	mov	r7, r3
 80178ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80178ae:	1bdf      	subs	r7, r3, r7
 80178b0:	4297      	cmp	r7, r2
 80178b2:	bfa8      	it	ge
 80178b4:	4617      	movge	r7, r2
 80178b6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80178ba:	2f00      	cmp	r7, #0
 80178bc:	f340 813c 	ble.w	8017b38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80178c0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80178c2:	6829      	ldr	r1, [r5, #0]
 80178c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80178c8:	f9bb 3000 	ldrsh.w	r3, [fp]
 80178cc:	6820      	ldr	r0, [r4, #0]
 80178ce:	4411      	add	r1, r2
 80178d0:	4299      	cmp	r1, r3
 80178d2:	dd1a      	ble.n	801790a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80178d4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80178d8:	440b      	add	r3, r1
 80178da:	4402      	add	r2, r0
 80178dc:	b21b      	sxth	r3, r3
 80178de:	429a      	cmp	r2, r3
 80178e0:	dc13      	bgt.n	801790a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80178e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80178e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80178e6:	681b      	ldr	r3, [r3, #0]
 80178e8:	9206      	str	r2, [sp, #24]
 80178ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80178ec:	9205      	str	r2, [sp, #20]
 80178ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80178f0:	9500      	str	r5, [sp, #0]
 80178f2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80178f6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80178f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80178fa:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80178fe:	a912      	add	r1, sp, #72	; 0x48
 8017900:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017904:	aa49      	add	r2, sp, #292	; 0x124
 8017906:	4623      	mov	r3, r4
 8017908:	47c8      	blx	r9
 801790a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801790e:	441a      	add	r2, r3
 8017910:	6963      	ldr	r3, [r4, #20]
 8017912:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017916:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801791a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801791e:	68a1      	ldr	r1, [r4, #8]
 8017920:	ed94 6a08 	vldr	s12, [r4, #32]
 8017924:	6022      	str	r2, [r4, #0]
 8017926:	3301      	adds	r3, #1
 8017928:	6163      	str	r3, [r4, #20]
 801792a:	69a3      	ldr	r3, [r4, #24]
 801792c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017930:	3b01      	subs	r3, #1
 8017932:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017936:	61a3      	str	r3, [r4, #24]
 8017938:	6923      	ldr	r3, [r4, #16]
 801793a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801793e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017942:	edd4 6a07 	vldr	s13, [r4, #28]
 8017946:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801794a:	440b      	add	r3, r1
 801794c:	68e1      	ldr	r1, [r4, #12]
 801794e:	6123      	str	r3, [r4, #16]
 8017950:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017954:	428b      	cmp	r3, r1
 8017956:	edc4 6a07 	vstr	s13, [r4, #28]
 801795a:	db15      	blt.n	8017988 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801795c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017960:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017964:	3201      	adds	r2, #1
 8017966:	edc4 6a07 	vstr	s13, [r4, #28]
 801796a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801796e:	6022      	str	r2, [r4, #0]
 8017970:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017974:	1a5b      	subs	r3, r3, r1
 8017976:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801797a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801797e:	6123      	str	r3, [r4, #16]
 8017980:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017984:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017988:	e9d5 2300 	ldrd	r2, r3, [r5]
 801798c:	441a      	add	r2, r3
 801798e:	696b      	ldr	r3, [r5, #20]
 8017990:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017994:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017998:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801799c:	68a9      	ldr	r1, [r5, #8]
 801799e:	ed95 6a08 	vldr	s12, [r5, #32]
 80179a2:	602a      	str	r2, [r5, #0]
 80179a4:	3301      	adds	r3, #1
 80179a6:	616b      	str	r3, [r5, #20]
 80179a8:	69ab      	ldr	r3, [r5, #24]
 80179aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80179ae:	3b01      	subs	r3, #1
 80179b0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80179b4:	61ab      	str	r3, [r5, #24]
 80179b6:	692b      	ldr	r3, [r5, #16]
 80179b8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80179bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80179c0:	edd5 6a07 	vldr	s13, [r5, #28]
 80179c4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80179c8:	440b      	add	r3, r1
 80179ca:	68e9      	ldr	r1, [r5, #12]
 80179cc:	612b      	str	r3, [r5, #16]
 80179ce:	ee76 6a86 	vadd.f32	s13, s13, s12
 80179d2:	428b      	cmp	r3, r1
 80179d4:	edc5 6a07 	vstr	s13, [r5, #28]
 80179d8:	db15      	blt.n	8017a06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80179da:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80179de:	ee76 6a26 	vadd.f32	s13, s12, s13
 80179e2:	3201      	adds	r2, #1
 80179e4:	edc5 6a07 	vstr	s13, [r5, #28]
 80179e8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80179ec:	602a      	str	r2, [r5, #0]
 80179ee:	ee36 7a87 	vadd.f32	s14, s13, s14
 80179f2:	1a5b      	subs	r3, r3, r1
 80179f4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80179f8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80179fc:	612b      	str	r3, [r5, #16]
 80179fe:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017a02:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017a06:	3f01      	subs	r7, #1
 8017a08:	e757      	b.n	80178ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8017a0a:	ad39      	add	r5, sp, #228	; 0xe4
 8017a0c:	ac19      	add	r4, sp, #100	; 0x64
 8017a0e:	e72d      	b.n	801786c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8017a10:	4613      	mov	r3, r2
 8017a12:	e744      	b.n	801789e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8017a14:	4613      	mov	r3, r2
 8017a16:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8017a1a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8017a1c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8017a20:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8017a24:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8017a28:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8017a2c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8017a30:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8017a34:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8017a38:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8017a3a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8017a3e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8017a42:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8017a46:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8017a4a:	960e      	str	r6, [sp, #56]	; 0x38
 8017a4c:	469e      	mov	lr, r3
 8017a4e:	461f      	mov	r7, r3
 8017a50:	f04f 0900 	mov.w	r9, #0
 8017a54:	2f00      	cmp	r7, #0
 8017a56:	d146      	bne.n	8017ae6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8017a58:	449c      	add	ip, r3
 8017a5a:	1ad7      	subs	r7, r2, r3
 8017a5c:	f1b9 0f00 	cmp.w	r9, #0
 8017a60:	d009      	beq.n	8017a76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8017a62:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8017a66:	9039      	str	r0, [sp, #228]	; 0xe4
 8017a68:	913d      	str	r1, [sp, #244]	; 0xf4
 8017a6a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8017a6e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8017a72:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8017a76:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8017a78:	910e      	str	r1, [sp, #56]	; 0x38
 8017a7a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8017a7e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017a82:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8017a86:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8017a8a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8017a8e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017a92:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8017a96:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8017a9a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017a9e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017aa2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8017aa6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8017aaa:	f04f 0800 	mov.w	r8, #0
 8017aae:	f1be 0f00 	cmp.w	lr, #0
 8017ab2:	d030      	beq.n	8017b16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8017ab4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017ab6:	4431      	add	r1, r6
 8017ab8:	4549      	cmp	r1, r9
 8017aba:	4450      	add	r0, sl
 8017abc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017ac0:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017ac4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8017ac8:	db08      	blt.n	8017adc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8017aca:	ee77 7a85 	vadd.f32	s15, s15, s10
 8017ace:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017ad2:	ee37 7a06 	vadd.f32	s14, s14, s12
 8017ad6:	3001      	adds	r0, #1
 8017ad8:	eba1 0109 	sub.w	r1, r1, r9
 8017adc:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017ae0:	f04f 0801 	mov.w	r8, #1
 8017ae4:	e7e3      	b.n	8017aae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8017ae6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017ae8:	4431      	add	r1, r6
 8017aea:	4541      	cmp	r1, r8
 8017aec:	4450      	add	r0, sl
 8017aee:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017af2:	ee77 7a84 	vadd.f32	s15, s15, s8
 8017af6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8017afa:	db08      	blt.n	8017b0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8017afc:	ee76 6a85 	vadd.f32	s13, s13, s10
 8017b00:	ee37 7a25 	vadd.f32	s14, s14, s11
 8017b04:	ee77 7a86 	vadd.f32	s15, s15, s12
 8017b08:	3001      	adds	r0, #1
 8017b0a:	eba1 0108 	sub.w	r1, r1, r8
 8017b0e:	3f01      	subs	r7, #1
 8017b10:	f04f 0901 	mov.w	r9, #1
 8017b14:	e79e      	b.n	8017a54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8017b16:	449c      	add	ip, r3
 8017b18:	1aff      	subs	r7, r7, r3
 8017b1a:	f1b8 0f00 	cmp.w	r8, #0
 8017b1e:	d009      	beq.n	8017b34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8017b20:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8017b24:	9019      	str	r0, [sp, #100]	; 0x64
 8017b26:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8017b2a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8017b2e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8017b32:	911d      	str	r1, [sp, #116]	; 0x74
 8017b34:	1ad2      	subs	r2, r2, r3
 8017b36:	e6b5      	b.n	80178a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017b38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017b3a:	681b      	ldr	r3, [r3, #0]
 8017b3c:	b923      	cbnz	r3, 8017b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017b3e:	4b04      	ldr	r3, [pc, #16]	; (8017b50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8017b40:	6818      	ldr	r0, [r3, #0]
 8017b42:	6803      	ldr	r3, [r0, #0]
 8017b44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017b46:	4798      	blx	r3
 8017b48:	b05b      	add	sp, #364	; 0x16c
 8017b4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b4e:	bf00      	nop
 8017b50:	20013854 	.word	0x20013854

08017b54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8017b54:	b570      	push	{r4, r5, r6, lr}
 8017b56:	4604      	mov	r4, r0
 8017b58:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8017b5c:	9805      	ldr	r0, [sp, #20]
 8017b5e:	6061      	str	r1, [r4, #4]
 8017b60:	2500      	movs	r5, #0
 8017b62:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8017b66:	8263      	strh	r3, [r4, #18]
 8017b68:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017b6c:	8025      	strh	r5, [r4, #0]
 8017b6e:	7221      	strb	r1, [r4, #8]
 8017b70:	7266      	strb	r6, [r4, #9]
 8017b72:	60e0      	str	r0, [r4, #12]
 8017b74:	8222      	strh	r2, [r4, #16]
 8017b76:	82a3      	strh	r3, [r4, #20]
 8017b78:	82e5      	strh	r5, [r4, #22]
 8017b7a:	8325      	strh	r5, [r4, #24]
 8017b7c:	8365      	strh	r5, [r4, #26]
 8017b7e:	83a5      	strh	r5, [r4, #28]
 8017b80:	83e5      	strh	r5, [r4, #30]
 8017b82:	8425      	strh	r5, [r4, #32]
 8017b84:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8017b88:	b32e      	cbz	r6, 8017bd6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017b8a:	6803      	ldr	r3, [r0, #0]
 8017b8c:	695b      	ldr	r3, [r3, #20]
 8017b8e:	4798      	blx	r3
 8017b90:	4606      	mov	r6, r0
 8017b92:	b300      	cbz	r0, 8017bd6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017b94:	68e0      	ldr	r0, [r4, #12]
 8017b96:	6803      	ldr	r3, [r0, #0]
 8017b98:	4631      	mov	r1, r6
 8017b9a:	68db      	ldr	r3, [r3, #12]
 8017b9c:	4798      	blx	r3
 8017b9e:	4605      	mov	r5, r0
 8017ba0:	b1c8      	cbz	r0, 8017bd6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017ba2:	7b43      	ldrb	r3, [r0, #13]
 8017ba4:	7a82      	ldrb	r2, [r0, #10]
 8017ba6:	005b      	lsls	r3, r3, #1
 8017ba8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017bac:	4313      	orrs	r3, r2
 8017bae:	8423      	strh	r3, [r4, #32]
 8017bb0:	7a63      	ldrb	r3, [r4, #9]
 8017bb2:	2b06      	cmp	r3, #6
 8017bb4:	d10f      	bne.n	8017bd6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017bb6:	68e0      	ldr	r0, [r4, #12]
 8017bb8:	6803      	ldr	r3, [r0, #0]
 8017bba:	462a      	mov	r2, r5
 8017bbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017bbe:	4631      	mov	r1, r6
 8017bc0:	4798      	blx	r3
 8017bc2:	7b6b      	ldrb	r3, [r5, #13]
 8017bc4:	005b      	lsls	r3, r3, #1
 8017bc6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017bca:	7aab      	ldrb	r3, [r5, #10]
 8017bcc:	4313      	orrs	r3, r2
 8017bce:	4418      	add	r0, r3
 8017bd0:	8c23      	ldrh	r3, [r4, #32]
 8017bd2:	4418      	add	r0, r3
 8017bd4:	8420      	strh	r0, [r4, #32]
 8017bd6:	4620      	mov	r0, r4
 8017bd8:	bd70      	pop	{r4, r5, r6, pc}

08017bda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8017bda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bde:	2400      	movs	r4, #0
 8017be0:	b085      	sub	sp, #20
 8017be2:	4681      	mov	r9, r0
 8017be4:	4688      	mov	r8, r1
 8017be6:	4692      	mov	sl, r2
 8017be8:	469b      	mov	fp, r3
 8017bea:	4627      	mov	r7, r4
 8017bec:	4625      	mov	r5, r4
 8017bee:	4626      	mov	r6, r4
 8017bf0:	4554      	cmp	r4, sl
 8017bf2:	da2a      	bge.n	8017c4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017bf4:	2300      	movs	r3, #0
 8017bf6:	9303      	str	r3, [sp, #12]
 8017bf8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017bfc:	429d      	cmp	r5, r3
 8017bfe:	d004      	beq.n	8017c0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8017c00:	f242 030b 	movw	r3, #8203	; 0x200b
 8017c04:	429d      	cmp	r5, r3
 8017c06:	bf18      	it	ne
 8017c08:	462f      	movne	r7, r5
 8017c0a:	ab03      	add	r3, sp, #12
 8017c0c:	4642      	mov	r2, r8
 8017c0e:	4659      	mov	r1, fp
 8017c10:	4648      	mov	r0, r9
 8017c12:	f003 f9a3 	bl	801af5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017c16:	4605      	mov	r5, r0
 8017c18:	b1b8      	cbz	r0, 8017c4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017c1a:	280a      	cmp	r0, #10
 8017c1c:	d015      	beq.n	8017c4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017c1e:	9a03      	ldr	r2, [sp, #12]
 8017c20:	b18a      	cbz	r2, 8017c46 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8017c22:	7b50      	ldrb	r0, [r2, #13]
 8017c24:	7a93      	ldrb	r3, [r2, #10]
 8017c26:	8895      	ldrh	r5, [r2, #4]
 8017c28:	0040      	lsls	r0, r0, #1
 8017c2a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017c2e:	4303      	orrs	r3, r0
 8017c30:	9301      	str	r3, [sp, #4]
 8017c32:	f8d8 3000 	ldr.w	r3, [r8]
 8017c36:	4639      	mov	r1, r7
 8017c38:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017c3a:	4640      	mov	r0, r8
 8017c3c:	4798      	blx	r3
 8017c3e:	9b01      	ldr	r3, [sp, #4]
 8017c40:	4418      	add	r0, r3
 8017c42:	4406      	add	r6, r0
 8017c44:	b2b6      	uxth	r6, r6
 8017c46:	3401      	adds	r4, #1
 8017c48:	e7d2      	b.n	8017bf0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8017c4a:	4630      	mov	r0, r6
 8017c4c:	b005      	add	sp, #20
 8017c4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017c52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8017c52:	2a02      	cmp	r2, #2
 8017c54:	b530      	push	{r4, r5, lr}
 8017c56:	d011      	beq.n	8017c7c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8017c58:	2a03      	cmp	r2, #3
 8017c5a:	d01c      	beq.n	8017c96 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8017c5c:	2a01      	cmp	r2, #1
 8017c5e:	d10c      	bne.n	8017c7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017c60:	888b      	ldrh	r3, [r1, #4]
 8017c62:	8801      	ldrh	r1, [r0, #0]
 8017c64:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8017c68:	8844      	ldrh	r4, [r0, #2]
 8017c6a:	8004      	strh	r4, [r0, #0]
 8017c6c:	1a5b      	subs	r3, r3, r1
 8017c6e:	1a9b      	subs	r3, r3, r2
 8017c70:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8017c74:	8043      	strh	r3, [r0, #2]
 8017c76:	8081      	strh	r1, [r0, #4]
 8017c78:	80c2      	strh	r2, [r0, #6]
 8017c7a:	bd30      	pop	{r4, r5, pc}
 8017c7c:	88cb      	ldrh	r3, [r1, #6]
 8017c7e:	8842      	ldrh	r2, [r0, #2]
 8017c80:	1a9b      	subs	r3, r3, r2
 8017c82:	88c2      	ldrh	r2, [r0, #6]
 8017c84:	1a9b      	subs	r3, r3, r2
 8017c86:	888a      	ldrh	r2, [r1, #4]
 8017c88:	8801      	ldrh	r1, [r0, #0]
 8017c8a:	8043      	strh	r3, [r0, #2]
 8017c8c:	1a52      	subs	r2, r2, r1
 8017c8e:	8881      	ldrh	r1, [r0, #4]
 8017c90:	1a52      	subs	r2, r2, r1
 8017c92:	8002      	strh	r2, [r0, #0]
 8017c94:	e7f1      	b.n	8017c7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017c96:	88cb      	ldrh	r3, [r1, #6]
 8017c98:	8841      	ldrh	r1, [r0, #2]
 8017c9a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8017c9e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017ca2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8017ca6:	8045      	strh	r5, [r0, #2]
 8017ca8:	1a5b      	subs	r3, r3, r1
 8017caa:	1a9b      	subs	r3, r3, r2
 8017cac:	8003      	strh	r3, [r0, #0]
 8017cae:	8082      	strh	r2, [r0, #4]
 8017cb0:	80c4      	strh	r4, [r0, #6]
 8017cb2:	e7e2      	b.n	8017c7a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08017cb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8017cb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cb8:	b09f      	sub	sp, #124	; 0x7c
 8017cba:	9116      	str	r1, [sp, #88]	; 0x58
 8017cbc:	9317      	str	r3, [sp, #92]	; 0x5c
 8017cbe:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017cc0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017cc2:	8809      	ldrh	r1, [r1, #0]
 8017cc4:	889b      	ldrh	r3, [r3, #4]
 8017cc6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8017cca:	9212      	str	r2, [sp, #72]	; 0x48
 8017ccc:	440b      	add	r3, r1
 8017cce:	b21b      	sxth	r3, r3
 8017cd0:	9310      	str	r3, [sp, #64]	; 0x40
 8017cd2:	f8d8 3000 	ldr.w	r3, [r8]
 8017cd6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8017cda:	7b19      	ldrb	r1, [r3, #12]
 8017cdc:	7adb      	ldrb	r3, [r3, #11]
 8017cde:	9011      	str	r0, [sp, #68]	; 0x44
 8017ce0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8017ce4:	9114      	str	r1, [sp, #80]	; 0x50
 8017ce6:	9315      	str	r3, [sp, #84]	; 0x54
 8017ce8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8017cec:	2a00      	cmp	r2, #0
 8017cee:	d06a      	beq.n	8017dc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8017cf0:	f898 3010 	ldrb.w	r3, [r8, #16]
 8017cf4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017cf6:	2b06      	cmp	r3, #6
 8017cf8:	bf14      	ite	ne
 8017cfa:	2301      	movne	r3, #1
 8017cfc:	2302      	moveq	r3, #2
 8017cfe:	4413      	add	r3, r2
 8017d00:	f04f 0900 	mov.w	r9, #0
 8017d04:	930f      	str	r3, [sp, #60]	; 0x3c
 8017d06:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8017d0a:	464c      	mov	r4, r9
 8017d0c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017d10:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8017d14:	4293      	cmp	r3, r2
 8017d16:	f280 808f 	bge.w	8017e38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017d1a:	2300      	movs	r3, #0
 8017d1c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8017d20:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8017d24:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017d28:	429c      	cmp	r4, r3
 8017d2a:	d006      	beq.n	8017d3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8017d2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017d2e:	f242 020b 	movw	r2, #8203	; 0x200b
 8017d32:	4294      	cmp	r4, r2
 8017d34:	bf18      	it	ne
 8017d36:	4623      	movne	r3, r4
 8017d38:	930d      	str	r3, [sp, #52]	; 0x34
 8017d3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017d3c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8017d3e:	f8d8 2000 	ldr.w	r2, [r8]
 8017d42:	428b      	cmp	r3, r1
 8017d44:	db41      	blt.n	8017dca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8017d46:	6813      	ldr	r3, [r2, #0]
 8017d48:	4610      	mov	r0, r2
 8017d4a:	695b      	ldr	r3, [r3, #20]
 8017d4c:	4798      	blx	r3
 8017d4e:	4604      	mov	r4, r0
 8017d50:	f8d8 0000 	ldr.w	r0, [r8]
 8017d54:	6803      	ldr	r3, [r0, #0]
 8017d56:	aa1d      	add	r2, sp, #116	; 0x74
 8017d58:	689d      	ldr	r5, [r3, #8]
 8017d5a:	4621      	mov	r1, r4
 8017d5c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017d60:	47a8      	blx	r5
 8017d62:	901c      	str	r0, [sp, #112]	; 0x70
 8017d64:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017d68:	429c      	cmp	r4, r3
 8017d6a:	f000 80eb 	beq.w	8017f44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d6e:	f242 030b 	movw	r3, #8203	; 0x200b
 8017d72:	429c      	cmp	r4, r3
 8017d74:	f000 80e6 	beq.w	8017f44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d78:	2c00      	cmp	r4, #0
 8017d7a:	f000 80f8 	beq.w	8017f6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017d7e:	2c0a      	cmp	r4, #10
 8017d80:	d060      	beq.n	8017e44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017d82:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017d84:	b36a      	cbz	r2, 8017de2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8017d86:	8894      	ldrh	r4, [r2, #4]
 8017d88:	f1bb 0f00 	cmp.w	fp, #0
 8017d8c:	d03b      	beq.n	8017e06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8017d8e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8017d92:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017d96:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017d9a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8017d9e:	f1bb 0f01 	cmp.w	fp, #1
 8017da2:	ea49 0903 	orr.w	r9, r9, r3
 8017da6:	d134      	bne.n	8017e12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8017da8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017daa:	eba6 0609 	sub.w	r6, r6, r9
 8017dae:	2b00      	cmp	r3, #0
 8017db0:	d14f      	bne.n	8017e52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017db2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017db4:	eb09 0306 	add.w	r3, r9, r6
 8017db8:	4413      	add	r3, r2
 8017dba:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017dbc:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017dc0:	4293      	cmp	r3, r2
 8017dc2:	da51      	bge.n	8017e68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017dc4:	e038      	b.n	8017e38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017dc6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017dc8:	e79a      	b.n	8017d00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8017dca:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017dce:	9301      	str	r3, [sp, #4]
 8017dd0:	ab1d      	add	r3, sp, #116	; 0x74
 8017dd2:	9300      	str	r3, [sp, #0]
 8017dd4:	4659      	mov	r1, fp
 8017dd6:	ab1c      	add	r3, sp, #112	; 0x70
 8017dd8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017dda:	f003 f908 	bl	801afee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8017dde:	4604      	mov	r4, r0
 8017de0:	e7c0      	b.n	8017d64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8017de2:	f8d8 0000 	ldr.w	r0, [r8]
 8017de6:	6803      	ldr	r3, [r0, #0]
 8017de8:	691b      	ldr	r3, [r3, #16]
 8017dea:	4798      	blx	r3
 8017dec:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017df0:	4298      	cmp	r0, r3
 8017df2:	f000 80a7 	beq.w	8017f44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017df6:	f242 030b 	movw	r3, #8203	; 0x200b
 8017dfa:	4298      	cmp	r0, r3
 8017dfc:	f000 80a2 	beq.w	8017f44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017e00:	f1bb 0f00 	cmp.w	fp, #0
 8017e04:	d100      	bne.n	8017e08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8017e06:	444e      	add	r6, r9
 8017e08:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017e0a:	2a00      	cmp	r2, #0
 8017e0c:	d1bf      	bne.n	8017d8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8017e0e:	4691      	mov	r9, r2
 8017e10:	e098      	b.n	8017f44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017e12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017e14:	2b00      	cmp	r3, #0
 8017e16:	f000 80ac 	beq.w	8017f72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8017e1a:	f1bb 0f00 	cmp.w	fp, #0
 8017e1e:	d118      	bne.n	8017e52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017e20:	f8d8 0000 	ldr.w	r0, [r8]
 8017e24:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017e26:	6803      	ldr	r3, [r0, #0]
 8017e28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017e2a:	4798      	blx	r3
 8017e2c:	4406      	add	r6, r0
 8017e2e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017e30:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017e32:	1af3      	subs	r3, r6, r3
 8017e34:	4293      	cmp	r3, r2
 8017e36:	dd17      	ble.n	8017e68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017e38:	2c00      	cmp	r4, #0
 8017e3a:	f000 8098 	beq.w	8017f6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017e3e:	2c0a      	cmp	r4, #10
 8017e40:	f040 8086 	bne.w	8017f50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8017e44:	240a      	movs	r4, #10
 8017e46:	fab4 f084 	clz	r0, r4
 8017e4a:	0940      	lsrs	r0, r0, #5
 8017e4c:	b01f      	add	sp, #124	; 0x7c
 8017e4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e52:	f8d8 0000 	ldr.w	r0, [r8]
 8017e56:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017e58:	6803      	ldr	r3, [r0, #0]
 8017e5a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017e5c:	4798      	blx	r3
 8017e5e:	f1bb 0f01 	cmp.w	fp, #1
 8017e62:	eba6 0600 	sub.w	r6, r6, r0
 8017e66:	d0a4      	beq.n	8017db2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8017e68:	981c      	ldr	r0, [sp, #112]	; 0x70
 8017e6a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017e6c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8017e70:	f9b3 7000 	ldrsh.w	r7, [r3]
 8017e74:	7b43      	ldrb	r3, [r0, #13]
 8017e76:	015b      	lsls	r3, r3, #5
 8017e78:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017e7c:	7983      	ldrb	r3, [r0, #6]
 8017e7e:	4431      	add	r1, r6
 8017e80:	4313      	orrs	r3, r2
 8017e82:	440b      	add	r3, r1
 8017e84:	42bb      	cmp	r3, r7
 8017e86:	db5d      	blt.n	8017f44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017e88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e8a:	4299      	cmp	r1, r3
 8017e8c:	da5a      	bge.n	8017f44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017e8e:	f8d8 0000 	ldr.w	r0, [r8]
 8017e92:	6803      	ldr	r3, [r0, #0]
 8017e94:	42b7      	cmp	r7, r6
 8017e96:	bfc8      	it	gt
 8017e98:	1bbf      	subgt	r7, r7, r6
 8017e9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017e9c:	bfcc      	ite	gt
 8017e9e:	b2bf      	uxthgt	r7, r7
 8017ea0:	2700      	movle	r7, #0
 8017ea2:	4798      	blx	r3
 8017ea4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017ea6:	7b5a      	ldrb	r2, [r3, #13]
 8017ea8:	00d1      	lsls	r1, r2, #3
 8017eaa:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8017eae:	7a19      	ldrb	r1, [r3, #8]
 8017eb0:	4329      	orrs	r1, r5
 8017eb2:	0655      	lsls	r5, r2, #25
 8017eb4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8017eb6:	bf44      	itt	mi
 8017eb8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8017ebc:	b209      	sxthmi	r1, r1
 8017ebe:	1945      	adds	r5, r0, r5
 8017ec0:	1a6d      	subs	r5, r5, r1
 8017ec2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017ec4:	b2ad      	uxth	r5, r5
 8017ec6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8017eca:	fa0f fa85 	sxth.w	sl, r5
 8017ece:	4551      	cmp	r1, sl
 8017ed0:	dd3c      	ble.n	8017f4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8017ed2:	0112      	lsls	r2, r2, #4
 8017ed4:	79d8      	ldrb	r0, [r3, #7]
 8017ed6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017eda:	4302      	orrs	r2, r0
 8017edc:	4492      	add	sl, r2
 8017ede:	4551      	cmp	r1, sl
 8017ee0:	dc30      	bgt.n	8017f44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017ee2:	1b4d      	subs	r5, r1, r5
 8017ee4:	b22d      	sxth	r5, r5
 8017ee6:	468a      	mov	sl, r1
 8017ee8:	9319      	str	r3, [sp, #100]	; 0x64
 8017eea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017eec:	f8d8 0000 	ldr.w	r0, [r8]
 8017ef0:	681a      	ldr	r2, [r3, #0]
 8017ef2:	6801      	ldr	r1, [r0, #0]
 8017ef4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8017ef6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8017ef8:	9313      	str	r3, [sp, #76]	; 0x4c
 8017efa:	9218      	str	r2, [sp, #96]	; 0x60
 8017efc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8017efe:	4788      	blx	r1
 8017f00:	f898 1006 	ldrb.w	r1, [r8, #6]
 8017f04:	910b      	str	r1, [sp, #44]	; 0x2c
 8017f06:	f898 100e 	ldrb.w	r1, [r8, #14]
 8017f0a:	910a      	str	r1, [sp, #40]	; 0x28
 8017f0c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8017f10:	9109      	str	r1, [sp, #36]	; 0x24
 8017f12:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8017f16:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017f18:	9305      	str	r3, [sp, #20]
 8017f1a:	b2ad      	uxth	r5, r5
 8017f1c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8017f20:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8017f24:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017f26:	9304      	str	r3, [sp, #16]
 8017f28:	4437      	add	r7, r6
 8017f2a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017f2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017f2e:	9206      	str	r2, [sp, #24]
 8017f30:	b23f      	sxth	r7, r7
 8017f32:	f8cd a004 	str.w	sl, [sp, #4]
 8017f36:	9700      	str	r7, [sp, #0]
 8017f38:	681a      	ldr	r2, [r3, #0]
 8017f3a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017f3c:	685b      	ldr	r3, [r3, #4]
 8017f3e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017f40:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017f42:	47a8      	blx	r5
 8017f44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017f46:	3301      	adds	r3, #1
 8017f48:	930e      	str	r3, [sp, #56]	; 0x38
 8017f4a:	e6e1      	b.n	8017d10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8017f4c:	2500      	movs	r5, #0
 8017f4e:	e7cb      	b.n	8017ee8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8017f50:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8017f52:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017f54:	3501      	adds	r5, #1
 8017f56:	429d      	cmp	r5, r3
 8017f58:	f6bf af75 	bge.w	8017e46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017f5c:	4659      	mov	r1, fp
 8017f5e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017f60:	f7f2 fbac 	bl	800a6bc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017f64:	4604      	mov	r4, r0
 8017f66:	b110      	cbz	r0, 8017f6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017f68:	280a      	cmp	r0, #10
 8017f6a:	d1f2      	bne.n	8017f52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8017f6c:	e76a      	b.n	8017e44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017f6e:	2400      	movs	r4, #0
 8017f70:	e769      	b.n	8017e46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017f72:	f1bb 0f00 	cmp.w	fp, #0
 8017f76:	f43f af5a 	beq.w	8017e2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8017f7a:	e775      	b.n	8017e68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8017f7c:	b530      	push	{r4, r5, lr}
 8017f7e:	8ac4      	ldrh	r4, [r0, #22]
 8017f80:	8b45      	ldrh	r5, [r0, #26]
 8017f82:	8343      	strh	r3, [r0, #26]
 8017f84:	442c      	add	r4, r5
 8017f86:	1ae4      	subs	r4, r4, r3
 8017f88:	82c4      	strh	r4, [r0, #22]
 8017f8a:	8b83      	ldrh	r3, [r0, #28]
 8017f8c:	8b04      	ldrh	r4, [r0, #24]
 8017f8e:	4422      	add	r2, r4
 8017f90:	440c      	add	r4, r1
 8017f92:	1a59      	subs	r1, r3, r1
 8017f94:	83c2      	strh	r2, [r0, #30]
 8017f96:	8304      	strh	r4, [r0, #24]
 8017f98:	8381      	strh	r1, [r0, #28]
 8017f9a:	bd30      	pop	{r4, r5, pc}

08017f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8017f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fa0:	4604      	mov	r4, r0
 8017fa2:	8a47      	ldrh	r7, [r0, #18]
 8017fa4:	68c0      	ldr	r0, [r0, #12]
 8017fa6:	6803      	ldr	r3, [r0, #0]
 8017fa8:	b085      	sub	sp, #20
 8017faa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017fac:	4798      	blx	r3
 8017fae:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8017fb2:	7a63      	ldrb	r3, [r4, #9]
 8017fb4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8017fb8:	42b7      	cmp	r7, r6
 8017fba:	f103 33ff 	add.w	r3, r3, #4294967295
 8017fbe:	bfac      	ite	ge
 8017fc0:	f04f 0900 	movge.w	r9, #0
 8017fc4:	f04f 0901 	movlt.w	r9, #1
 8017fc8:	2b05      	cmp	r3, #5
 8017fca:	d804      	bhi.n	8017fd6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8017fcc:	e8df f003 	tbb	[pc, r3]
 8017fd0:	470e0854 	.word	0x470e0854
 8017fd4:	4c4c      	.short	0x4c4c
 8017fd6:	2500      	movs	r5, #0
 8017fd8:	46a9      	mov	r9, r5
 8017fda:	462e      	mov	r6, r5
 8017fdc:	462f      	mov	r7, r5
 8017fde:	e00d      	b.n	8017ffc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017fe0:	42b7      	cmp	r7, r6
 8017fe2:	bfb4      	ite	lt
 8017fe4:	2600      	movlt	r6, #0
 8017fe6:	2601      	movge	r6, #1
 8017fe8:	2500      	movs	r5, #0
 8017fea:	e7f7      	b.n	8017fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017fec:	42b7      	cmp	r7, r6
 8017fee:	464d      	mov	r5, r9
 8017ff0:	f04f 0900 	mov.w	r9, #0
 8017ff4:	bfb4      	ite	lt
 8017ff6:	2600      	movlt	r6, #0
 8017ff8:	2601      	movge	r6, #1
 8017ffa:	464f      	mov	r7, r9
 8017ffc:	f04f 0800 	mov.w	r8, #0
 8018000:	f8a4 8016 	strh.w	r8, [r4, #22]
 8018004:	f8a4 8018 	strh.w	r8, [r4, #24]
 8018008:	f8cd 8004 	str.w	r8, [sp, #4]
 801800c:	2300      	movs	r3, #0
 801800e:	9303      	str	r3, [sp, #12]
 8018010:	8823      	ldrh	r3, [r4, #0]
 8018012:	2b20      	cmp	r3, #32
 8018014:	d034      	beq.n	8018080 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8018016:	f242 010b 	movw	r1, #8203	; 0x200b
 801801a:	1a5a      	subs	r2, r3, r1
 801801c:	f1d2 0a00 	rsbs	sl, r2, #0
 8018020:	eb4a 0a02 	adc.w	sl, sl, r2
 8018024:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8018028:	4293      	cmp	r3, r2
 801802a:	d009      	beq.n	8018040 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801802c:	428b      	cmp	r3, r1
 801802e:	9a01      	ldr	r2, [sp, #4]
 8018030:	bf18      	it	ne
 8018032:	461a      	movne	r2, r3
 8018034:	9201      	str	r2, [sp, #4]
 8018036:	bf0c      	ite	eq
 8018038:	f04f 0a01 	moveq.w	sl, #1
 801803c:	f04f 0a00 	movne.w	sl, #0
 8018040:	ab03      	add	r3, sp, #12
 8018042:	68e2      	ldr	r2, [r4, #12]
 8018044:	7a21      	ldrb	r1, [r4, #8]
 8018046:	6860      	ldr	r0, [r4, #4]
 8018048:	f002 ff88 	bl	801af5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801804c:	8020      	strh	r0, [r4, #0]
 801804e:	b9d8      	cbnz	r0, 8018088 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8018050:	8ba2      	ldrh	r2, [r4, #28]
 8018052:	2300      	movs	r3, #0
 8018054:	4611      	mov	r1, r2
 8018056:	4620      	mov	r0, r4
 8018058:	f7ff ff90 	bl	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801805c:	e06e      	b.n	801813c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801805e:	2500      	movs	r5, #0
 8018060:	46a9      	mov	r9, r5
 8018062:	462e      	mov	r6, r5
 8018064:	2701      	movs	r7, #1
 8018066:	e7c9      	b.n	8017ffc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8018068:	42b7      	cmp	r7, r6
 801806a:	f04f 0500 	mov.w	r5, #0
 801806e:	bfb4      	ite	lt
 8018070:	2700      	movlt	r7, #0
 8018072:	2701      	movge	r7, #1
 8018074:	462e      	mov	r6, r5
 8018076:	e7c1      	b.n	8017ffc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8018078:	2500      	movs	r5, #0
 801807a:	46a9      	mov	r9, r5
 801807c:	2601      	movs	r6, #1
 801807e:	e7ad      	b.n	8017fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8018080:	9301      	str	r3, [sp, #4]
 8018082:	f04f 0a01 	mov.w	sl, #1
 8018086:	e7db      	b.n	8018040 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8018088:	8b63      	ldrh	r3, [r4, #26]
 801808a:	280a      	cmp	r0, #10
 801808c:	f103 0301 	add.w	r3, r3, #1
 8018090:	8363      	strh	r3, [r4, #26]
 8018092:	d0dd      	beq.n	8018050 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8018094:	9a03      	ldr	r2, [sp, #12]
 8018096:	bb62      	cbnz	r2, 80180f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8018098:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801809c:	4298      	cmp	r0, r3
 801809e:	d003      	beq.n	80180a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80180a0:	f242 030b 	movw	r3, #8203	; 0x200b
 80180a4:	4298      	cmp	r0, r3
 80180a6:	d1b1      	bne.n	801800c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80180a8:	8823      	ldrh	r3, [r4, #0]
 80180aa:	8ba1      	ldrh	r1, [r4, #28]
 80180ac:	2b20      	cmp	r3, #32
 80180ae:	d003      	beq.n	80180b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80180b0:	f242 000b 	movw	r0, #8203	; 0x200b
 80180b4:	4283      	cmp	r3, r0
 80180b6:	d131      	bne.n	801811c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80180b8:	f1ba 0f00 	cmp.w	sl, #0
 80180bc:	bf0a      	itet	eq
 80180be:	4688      	moveq	r8, r1
 80180c0:	4650      	movne	r0, sl
 80180c2:	2001      	moveq	r0, #1
 80180c4:	440a      	add	r2, r1
 80180c6:	8b23      	ldrh	r3, [r4, #24]
 80180c8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80180cc:	b292      	uxth	r2, r2
 80180ce:	83a2      	strh	r2, [r4, #28]
 80180d0:	4413      	add	r3, r2
 80180d2:	f1b9 0f00 	cmp.w	r9, #0
 80180d6:	d102      	bne.n	80180de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80180d8:	2d00      	cmp	r5, #0
 80180da:	d042      	beq.n	8018162 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80180dc:	b300      	cbz	r0, 8018120 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80180de:	8c21      	ldrh	r1, [r4, #32]
 80180e0:	4419      	add	r1, r3
 80180e2:	458c      	cmp	ip, r1
 80180e4:	da37      	bge.n	8018156 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80180e6:	8ae1      	ldrh	r1, [r4, #22]
 80180e8:	2900      	cmp	r1, #0
 80180ea:	d034      	beq.n	8018156 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80180ec:	4563      	cmp	r3, ip
 80180ee:	dd8d      	ble.n	801800c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80180f0:	e01d      	b.n	801812e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80180f2:	8893      	ldrh	r3, [r2, #4]
 80180f4:	8023      	strh	r3, [r4, #0]
 80180f6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80180fa:	9901      	ldr	r1, [sp, #4]
 80180fc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8018100:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8018104:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8018108:	ea4b 0b00 	orr.w	fp, fp, r0
 801810c:	68e0      	ldr	r0, [r4, #12]
 801810e:	6803      	ldr	r3, [r0, #0]
 8018110:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018112:	4798      	blx	r3
 8018114:	eb0b 0200 	add.w	r2, fp, r0
 8018118:	b292      	uxth	r2, r2
 801811a:	e7c5      	b.n	80180a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801811c:	2000      	movs	r0, #0
 801811e:	e7d1      	b.n	80180c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8018120:	4563      	cmp	r3, ip
 8018122:	f77f af73 	ble.w	801800c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018126:	8ae3      	ldrh	r3, [r4, #22]
 8018128:	2b00      	cmp	r3, #0
 801812a:	f43f af6f 	beq.w	801800c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801812e:	2301      	movs	r3, #1
 8018130:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8018134:	8c22      	ldrh	r2, [r4, #32]
 8018136:	8be3      	ldrh	r3, [r4, #30]
 8018138:	4413      	add	r3, r2
 801813a:	83e3      	strh	r3, [r4, #30]
 801813c:	68e0      	ldr	r0, [r4, #12]
 801813e:	6803      	ldr	r3, [r0, #0]
 8018140:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018142:	4798      	blx	r3
 8018144:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8018148:	4418      	add	r0, r3
 801814a:	8a63      	ldrh	r3, [r4, #18]
 801814c:	1a18      	subs	r0, r3, r0
 801814e:	8260      	strh	r0, [r4, #18]
 8018150:	b005      	add	sp, #20
 8018152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018156:	2300      	movs	r3, #0
 8018158:	4611      	mov	r1, r2
 801815a:	4620      	mov	r0, r4
 801815c:	f7ff ff0e 	bl	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8018160:	e754      	b.n	801800c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018162:	4563      	cmp	r3, ip
 8018164:	dd14      	ble.n	8018190 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8018166:	b117      	cbz	r7, 801816e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8018168:	2301      	movs	r3, #1
 801816a:	460a      	mov	r2, r1
 801816c:	e772      	b.n	8018054 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801816e:	2e00      	cmp	r6, #0
 8018170:	f43f af4c 	beq.w	801800c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018174:	2800      	cmp	r0, #0
 8018176:	f47f af49 	bne.w	801800c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801817a:	f1ba 0f00 	cmp.w	sl, #0
 801817e:	d002      	beq.n	8018186 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8018180:	2301      	movs	r3, #1
 8018182:	4642      	mov	r2, r8
 8018184:	e767      	b.n	8018056 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8018186:	8ae3      	ldrh	r3, [r4, #22]
 8018188:	2b00      	cmp	r3, #0
 801818a:	f43f af3f 	beq.w	801800c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801818e:	e7d5      	b.n	801813c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8018190:	2800      	cmp	r0, #0
 8018192:	f47f af3b 	bne.w	801800c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018196:	f1ba 0f00 	cmp.w	sl, #0
 801819a:	f43f af37 	beq.w	801800c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801819e:	2301      	movs	r3, #1
 80181a0:	4642      	mov	r2, r8
 80181a2:	e7da      	b.n	801815a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080181a4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80181a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80181a6:	4605      	mov	r5, r0
 80181a8:	b08f      	sub	sp, #60	; 0x3c
 80181aa:	4617      	mov	r7, r2
 80181ac:	461c      	mov	r4, r3
 80181ae:	460e      	mov	r6, r1
 80181b0:	b1d1      	cbz	r1, 80181e8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80181b2:	681b      	ldr	r3, [r3, #0]
 80181b4:	4620      	mov	r0, r4
 80181b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80181b8:	4798      	blx	r3
 80181ba:	4240      	negs	r0, r0
 80181bc:	b200      	sxth	r0, r0
 80181be:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80181c2:	9603      	str	r6, [sp, #12]
 80181c4:	9700      	str	r7, [sp, #0]
 80181c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80181ca:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80181ce:	4629      	mov	r1, r5
 80181d0:	a805      	add	r0, sp, #20
 80181d2:	f7ff fcbf 	bl	8017b54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80181d6:	2401      	movs	r4, #1
 80181d8:	a805      	add	r0, sp, #20
 80181da:	f7ff fedf 	bl	8017f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80181de:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80181e2:	b163      	cbz	r3, 80181fe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80181e4:	3401      	adds	r4, #1
 80181e6:	e7f7      	b.n	80181d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80181e8:	f002 ff86 	bl	801b0f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80181ec:	2401      	movs	r4, #1
 80181ee:	280a      	cmp	r0, #10
 80181f0:	4628      	mov	r0, r5
 80181f2:	bf08      	it	eq
 80181f4:	3401      	addeq	r4, #1
 80181f6:	f002 ff7f 	bl	801b0f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80181fa:	2800      	cmp	r0, #0
 80181fc:	d1f7      	bne.n	80181ee <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80181fe:	b2a0      	uxth	r0, r4
 8018200:	b00f      	add	sp, #60	; 0x3c
 8018202:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018204 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8018204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018208:	b0e3      	sub	sp, #396	; 0x18c
 801820a:	461c      	mov	r4, r3
 801820c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801820e:	4683      	mov	fp, r0
 8018210:	4688      	mov	r8, r1
 8018212:	2b00      	cmp	r3, #0
 8018214:	f000 8112 	beq.w	801843c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018218:	6823      	ldr	r3, [r4, #0]
 801821a:	2b00      	cmp	r3, #0
 801821c:	f000 810e 	beq.w	801843c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018220:	7ba3      	ldrb	r3, [r4, #14]
 8018222:	2b00      	cmp	r3, #0
 8018224:	f000 810a 	beq.w	801843c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018228:	6810      	ldr	r0, [r2, #0]
 801822a:	6851      	ldr	r1, [r2, #4]
 801822c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8018230:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8018234:	ad0a      	add	r5, sp, #40	; 0x28
 8018236:	462b      	mov	r3, r5
 8018238:	c303      	stmia	r3!, {r0, r1}
 801823a:	2100      	movs	r1, #0
 801823c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8018240:	910c      	str	r1, [sp, #48]	; 0x30
 8018242:	79a2      	ldrb	r2, [r4, #6]
 8018244:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018248:	a90c      	add	r1, sp, #48	; 0x30
 801824a:	4628      	mov	r0, r5
 801824c:	f7ff fd01 	bl	8017c52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018250:	a90c      	add	r1, sp, #48	; 0x30
 8018252:	4608      	mov	r0, r1
 8018254:	79a2      	ldrb	r2, [r4, #6]
 8018256:	f7ff fcfc 	bl	8017c52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801825a:	a817      	add	r0, sp, #92	; 0x5c
 801825c:	f002 fb20 	bl	801a8a0 <_ZN8touchgfx12TextProviderC1Ev>
 8018260:	6820      	ldr	r0, [r4, #0]
 8018262:	6803      	ldr	r3, [r0, #0]
 8018264:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018266:	4798      	blx	r3
 8018268:	4606      	mov	r6, r0
 801826a:	6820      	ldr	r0, [r4, #0]
 801826c:	6803      	ldr	r3, [r0, #0]
 801826e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018270:	4798      	blx	r3
 8018272:	4633      	mov	r3, r6
 8018274:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8018276:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8018278:	9000      	str	r0, [sp, #0]
 801827a:	a817      	add	r0, sp, #92	; 0x5c
 801827c:	f002 fb6b 	bl	801a956 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018280:	6820      	ldr	r0, [r4, #0]
 8018282:	f894 a004 	ldrb.w	sl, [r4, #4]
 8018286:	6803      	ldr	r3, [r0, #0]
 8018288:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801828a:	4798      	blx	r3
 801828c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8018290:	6823      	ldr	r3, [r4, #0]
 8018292:	4607      	mov	r7, r0
 8018294:	4406      	add	r6, r0
 8018296:	a830      	add	r0, sp, #192	; 0xc0
 8018298:	f893 9009 	ldrb.w	r9, [r3, #9]
 801829c:	f002 fb00 	bl	801a8a0 <_ZN8touchgfx12TextProviderC1Ev>
 80182a0:	7c23      	ldrb	r3, [r4, #16]
 80182a2:	b17b      	cbz	r3, 80182c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80182a4:	6820      	ldr	r0, [r4, #0]
 80182a6:	6803      	ldr	r3, [r0, #0]
 80182a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80182aa:	4798      	blx	r3
 80182ac:	9009      	str	r0, [sp, #36]	; 0x24
 80182ae:	6820      	ldr	r0, [r4, #0]
 80182b0:	6802      	ldr	r2, [r0, #0]
 80182b2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80182b4:	4790      	blx	r2
 80182b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80182b8:	9000      	str	r0, [sp, #0]
 80182ba:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80182bc:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80182be:	a830      	add	r0, sp, #192	; 0xc0
 80182c0:	f002 fb49 	bl	801a956 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80182c4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80182c8:	7be2      	ldrb	r2, [r4, #15]
 80182ca:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80182ce:	1a8a      	subs	r2, r1, r2
 80182d0:	7c21      	ldrb	r1, [r4, #16]
 80182d2:	9103      	str	r1, [sp, #12]
 80182d4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80182d8:	9102      	str	r1, [sp, #8]
 80182da:	6821      	ldr	r1, [r4, #0]
 80182dc:	9101      	str	r1, [sp, #4]
 80182de:	7961      	ldrb	r1, [r4, #5]
 80182e0:	9100      	str	r1, [sp, #0]
 80182e2:	b292      	uxth	r2, r2
 80182e4:	a930      	add	r1, sp, #192	; 0xc0
 80182e6:	a80e      	add	r0, sp, #56	; 0x38
 80182e8:	f7ff fc34 	bl	8017b54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80182ec:	2e00      	cmp	r6, #0
 80182ee:	dc5b      	bgt.n	80183a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80182f0:	af17      	add	r7, sp, #92	; 0x5c
 80182f2:	f04f 0900 	mov.w	r9, #0
 80182f6:	7c23      	ldrb	r3, [r4, #16]
 80182f8:	2b00      	cmp	r3, #0
 80182fa:	f000 80b1 	beq.w	8018460 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80182fe:	a80e      	add	r0, sp, #56	; 0x38
 8018300:	f7ff fe4c 	bl	8017f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018304:	f1ba 0f00 	cmp.w	sl, #0
 8018308:	f000 80a5 	beq.w	8018456 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801830c:	7c23      	ldrb	r3, [r4, #16]
 801830e:	9309      	str	r3, [sp, #36]	; 0x24
 8018310:	2264      	movs	r2, #100	; 0x64
 8018312:	4639      	mov	r1, r7
 8018314:	a849      	add	r0, sp, #292	; 0x124
 8018316:	f015 ff62 	bl	802e1de <memcpy>
 801831a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801831c:	2b00      	cmp	r3, #0
 801831e:	f000 80a7 	beq.w	8018470 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8018322:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8018326:	7922      	ldrb	r2, [r4, #4]
 8018328:	2a01      	cmp	r2, #1
 801832a:	f040 808a 	bne.w	8018442 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801832e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8018332:	1ac0      	subs	r0, r0, r3
 8018334:	2302      	movs	r3, #2
 8018336:	fb90 f0f3 	sdiv	r0, r0, r3
 801833a:	b200      	sxth	r0, r0
 801833c:	7c23      	ldrb	r3, [r4, #16]
 801833e:	2b00      	cmp	r3, #0
 8018340:	f000 808b 	beq.w	801845a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8018344:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8018348:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801834c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018350:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8018354:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8018358:	4410      	add	r0, r2
 801835a:	b200      	sxth	r0, r0
 801835c:	9000      	str	r0, [sp, #0]
 801835e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8018362:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8018366:	4642      	mov	r2, r8
 8018368:	2100      	movs	r1, #0
 801836a:	4658      	mov	r0, fp
 801836c:	f7ff fca2 	bl	8017cb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8018370:	2800      	cmp	r0, #0
 8018372:	d163      	bne.n	801843c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018374:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018378:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801837c:	b2b2      	uxth	r2, r6
 801837e:	4413      	add	r3, r2
 8018380:	1a8a      	subs	r2, r1, r2
 8018382:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8018386:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801838a:	b21b      	sxth	r3, r3
 801838c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018390:	2a00      	cmp	r2, #0
 8018392:	d153      	bne.n	801843c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018394:	6822      	ldr	r2, [r4, #0]
 8018396:	8869      	ldrh	r1, [r5, #2]
 8018398:	7a12      	ldrb	r2, [r2, #8]
 801839a:	1a9b      	subs	r3, r3, r2
 801839c:	88ea      	ldrh	r2, [r5, #6]
 801839e:	440a      	add	r2, r1
 80183a0:	b212      	sxth	r2, r2
 80183a2:	4293      	cmp	r3, r2
 80183a4:	dda7      	ble.n	80182f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80183a6:	e049      	b.n	801843c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80183a8:	7c23      	ldrb	r3, [r4, #16]
 80183aa:	444f      	add	r7, r9
 80183ac:	b1c3      	cbz	r3, 80183e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80183ae:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80183b2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80183b6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80183ba:	443b      	add	r3, r7
 80183bc:	4293      	cmp	r3, r2
 80183be:	da97      	bge.n	80182f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80183c0:	a80e      	add	r0, sp, #56	; 0x38
 80183c2:	f7ff fdeb 	bl	8017f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80183c6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80183ca:	3b01      	subs	r3, #1
 80183cc:	b29b      	uxth	r3, r3
 80183ce:	454b      	cmp	r3, r9
 80183d0:	9309      	str	r3, [sp, #36]	; 0x24
 80183d2:	d021      	beq.n	8018418 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80183d4:	7961      	ldrb	r1, [r4, #5]
 80183d6:	a817      	add	r0, sp, #92	; 0x5c
 80183d8:	f7f2 f970 	bl	800a6bc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80183dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80183de:	e7f4      	b.n	80183ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80183e0:	fa1f f986 	uxth.w	r9, r6
 80183e4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80183e8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80183ec:	443b      	add	r3, r7
 80183ee:	4293      	cmp	r3, r2
 80183f0:	f6bf af7e 	bge.w	80182f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80183f4:	a817      	add	r0, sp, #92	; 0x5c
 80183f6:	f002 fe7f 	bl	801b0f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80183fa:	b1f8      	cbz	r0, 801843c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80183fc:	280a      	cmp	r0, #10
 80183fe:	d1f1      	bne.n	80183e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018400:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018404:	444b      	add	r3, r9
 8018406:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801840a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801840e:	eba3 0309 	sub.w	r3, r3, r9
 8018412:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018416:	e7e5      	b.n	80183e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018418:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801841c:	b2b3      	uxth	r3, r6
 801841e:	441a      	add	r2, r3
 8018420:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8018424:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8018428:	1ad3      	subs	r3, r2, r3
 801842a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801842e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018432:	b11b      	cbz	r3, 801843c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018434:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8018438:	2b00      	cmp	r3, #0
 801843a:	d0ba      	beq.n	80183b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801843c:	b063      	add	sp, #396	; 0x18c
 801843e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018442:	2a02      	cmp	r2, #2
 8018444:	d105      	bne.n	8018452 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8018446:	7be2      	ldrb	r2, [r4, #15]
 8018448:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801844c:	1a80      	subs	r0, r0, r2
 801844e:	1ac0      	subs	r0, r0, r3
 8018450:	e773      	b.n	801833a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8018452:	2000      	movs	r0, #0
 8018454:	e772      	b.n	801833c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8018456:	7be0      	ldrb	r0, [r4, #15]
 8018458:	e770      	b.n	801833c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801845a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801845e:	e773      	b.n	8018348 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8018460:	f1ba 0f00 	cmp.w	sl, #0
 8018464:	d0f7      	beq.n	8018456 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018466:	2264      	movs	r2, #100	; 0x64
 8018468:	4639      	mov	r1, r7
 801846a:	a849      	add	r0, sp, #292	; 0x124
 801846c:	f015 feb7 	bl	802e1de <memcpy>
 8018470:	2300      	movs	r3, #0
 8018472:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018476:	6821      	ldr	r1, [r4, #0]
 8018478:	a849      	add	r0, sp, #292	; 0x124
 801847a:	f7ff fbae 	bl	8017bda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801847e:	b203      	sxth	r3, r0
 8018480:	e751      	b.n	8018326 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08018482 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8018482:	2b03      	cmp	r3, #3
 8018484:	d818      	bhi.n	80184b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8018486:	e8df f003 	tbb	[pc, r3]
 801848a:	0602      	.short	0x0602
 801848c:	130d      	.short	0x130d
 801848e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018492:	1850      	adds	r0, r2, r1
 8018494:	4770      	bx	lr
 8018496:	8803      	ldrh	r3, [r0, #0]
 8018498:	8880      	ldrh	r0, [r0, #4]
 801849a:	4418      	add	r0, r3
 801849c:	b200      	sxth	r0, r0
 801849e:	1a80      	subs	r0, r0, r2
 80184a0:	3801      	subs	r0, #1
 80184a2:	4770      	bx	lr
 80184a4:	8803      	ldrh	r3, [r0, #0]
 80184a6:	8880      	ldrh	r0, [r0, #4]
 80184a8:	4418      	add	r0, r3
 80184aa:	b200      	sxth	r0, r0
 80184ac:	1a40      	subs	r0, r0, r1
 80184ae:	e7f7      	b.n	80184a0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80184b0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80184b4:	4410      	add	r0, r2
 80184b6:	4770      	bx	lr
 80184b8:	2000      	movs	r0, #0
 80184ba:	4770      	bx	lr

080184bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80184bc:	2b03      	cmp	r3, #3
 80184be:	d817      	bhi.n	80184f0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80184c0:	e8df f003 	tbb	[pc, r3]
 80184c4:	10090602 	.word	0x10090602
 80184c8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80184cc:	1850      	adds	r0, r2, r1
 80184ce:	4770      	bx	lr
 80184d0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80184d4:	e7fa      	b.n	80184cc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80184d6:	8843      	ldrh	r3, [r0, #2]
 80184d8:	88c0      	ldrh	r0, [r0, #6]
 80184da:	4418      	add	r0, r3
 80184dc:	b200      	sxth	r0, r0
 80184de:	1a80      	subs	r0, r0, r2
 80184e0:	3801      	subs	r0, #1
 80184e2:	4770      	bx	lr
 80184e4:	8843      	ldrh	r3, [r0, #2]
 80184e6:	88c0      	ldrh	r0, [r0, #6]
 80184e8:	4418      	add	r0, r3
 80184ea:	b200      	sxth	r0, r0
 80184ec:	1a40      	subs	r0, r0, r1
 80184ee:	e7f7      	b.n	80184e0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80184f0:	2000      	movs	r0, #0
 80184f2:	4770      	bx	lr

080184f4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80184f4:	4b01      	ldr	r3, [pc, #4]	; (80184fc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80184f6:	2200      	movs	r2, #0
 80184f8:	601a      	str	r2, [r3, #0]
 80184fa:	4770      	bx	lr
 80184fc:	20013864 	.word	0x20013864

08018500 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8018500:	4603      	mov	r3, r0
 8018502:	b1c8      	cbz	r0, 8018538 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8018504:	0c02      	lsrs	r2, r0, #16
 8018506:	0412      	lsls	r2, r2, #16
 8018508:	b9a2      	cbnz	r2, 8018534 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801850a:	0403      	lsls	r3, r0, #16
 801850c:	2010      	movs	r0, #16
 801850e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018512:	bf04      	itt	eq
 8018514:	021b      	lsleq	r3, r3, #8
 8018516:	3008      	addeq	r0, #8
 8018518:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801851c:	bf04      	itt	eq
 801851e:	011b      	lsleq	r3, r3, #4
 8018520:	3004      	addeq	r0, #4
 8018522:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8018526:	bf04      	itt	eq
 8018528:	009b      	lsleq	r3, r3, #2
 801852a:	3002      	addeq	r0, #2
 801852c:	2b00      	cmp	r3, #0
 801852e:	db04      	blt.n	801853a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8018530:	3001      	adds	r0, #1
 8018532:	4770      	bx	lr
 8018534:	2000      	movs	r0, #0
 8018536:	e7ea      	b.n	801850e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8018538:	2020      	movs	r0, #32
 801853a:	4770      	bx	lr

0801853c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801853c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018540:	b087      	sub	sp, #28
 8018542:	460d      	mov	r5, r1
 8018544:	4616      	mov	r6, r2
 8018546:	4698      	mov	r8, r3
 8018548:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801854c:	4601      	mov	r1, r0
 801854e:	b120      	cbz	r0, 801855a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018550:	b11a      	cbz	r2, 801855a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018552:	2d1f      	cmp	r5, #31
 8018554:	d801      	bhi.n	801855a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018556:	2b1f      	cmp	r3, #31
 8018558:	d904      	bls.n	8018564 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801855a:	2000      	movs	r0, #0
 801855c:	6038      	str	r0, [r7, #0]
 801855e:	b007      	add	sp, #28
 8018560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018564:	b97d      	cbnz	r5, 8018586 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8018566:	b143      	cbz	r3, 801857a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8018568:	4602      	mov	r2, r0
 801856a:	e9cd 4700 	strd	r4, r7, [sp]
 801856e:	462b      	mov	r3, r5
 8018570:	4641      	mov	r1, r8
 8018572:	4630      	mov	r0, r6
 8018574:	f7ff ffe2 	bl	801853c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018578:	e7f1      	b.n	801855e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801857a:	f04f 33ff 	mov.w	r3, #4294967295
 801857e:	603b      	str	r3, [r7, #0]
 8018580:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018584:	e7eb      	b.n	801855e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018586:	fa32 fa05 	lsrs.w	sl, r2, r5
 801858a:	d106      	bne.n	801859a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801858c:	4346      	muls	r6, r0
 801858e:	fbb6 f0f4 	udiv	r0, r6, r4
 8018592:	fb04 6610 	mls	r6, r4, r0, r6
 8018596:	603e      	str	r6, [r7, #0]
 8018598:	e7e1      	b.n	801855e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801859a:	2201      	movs	r2, #1
 801859c:	40aa      	lsls	r2, r5
 801859e:	3a01      	subs	r2, #1
 80185a0:	4016      	ands	r6, r2
 80185a2:	fa00 fb05 	lsl.w	fp, r0, r5
 80185a6:	4630      	mov	r0, r6
 80185a8:	fbbb f9f4 	udiv	r9, fp, r4
 80185ac:	fb0a f309 	mul.w	r3, sl, r9
 80185b0:	9303      	str	r3, [sp, #12]
 80185b2:	f7ff ffa5 	bl	8018500 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80185b6:	462b      	mov	r3, r5
 80185b8:	460a      	mov	r2, r1
 80185ba:	e9cd 4700 	strd	r4, r7, [sp]
 80185be:	4601      	mov	r1, r0
 80185c0:	4630      	mov	r0, r6
 80185c2:	f7ff ffbb 	bl	801853c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80185c6:	fb04 b919 	mls	r9, r4, r9, fp
 80185ca:	4606      	mov	r6, r0
 80185cc:	4648      	mov	r0, r9
 80185ce:	eb05 0108 	add.w	r1, r5, r8
 80185d2:	f7ff ff95 	bl	8018500 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80185d6:	ab05      	add	r3, sp, #20
 80185d8:	e9cd 4300 	strd	r4, r3, [sp]
 80185dc:	464a      	mov	r2, r9
 80185de:	4603      	mov	r3, r0
 80185e0:	4650      	mov	r0, sl
 80185e2:	f7ff ffab 	bl	801853c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80185e6:	6839      	ldr	r1, [r7, #0]
 80185e8:	9a05      	ldr	r2, [sp, #20]
 80185ea:	9b03      	ldr	r3, [sp, #12]
 80185ec:	4411      	add	r1, r2
 80185ee:	fbb1 f2f4 	udiv	r2, r1, r4
 80185f2:	18d3      	adds	r3, r2, r3
 80185f4:	441e      	add	r6, r3
 80185f6:	fb04 1412 	mls	r4, r4, r2, r1
 80185fa:	4430      	add	r0, r6
 80185fc:	603c      	str	r4, [r7, #0]
 80185fe:	e7ae      	b.n	801855e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08018600 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8018600:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018604:	b085      	sub	sp, #20
 8018606:	f1b0 0900 	subs.w	r9, r0, #0
 801860a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801860c:	461d      	mov	r5, r3
 801860e:	bfbf      	itttt	lt
 8018610:	6823      	ldrlt	r3, [r4, #0]
 8018612:	425b      	neglt	r3, r3
 8018614:	f1c9 0900 	rsblt	r9, r9, #0
 8018618:	6023      	strlt	r3, [r4, #0]
 801861a:	bfb4      	ite	lt
 801861c:	f04f 36ff 	movlt.w	r6, #4294967295
 8018620:	2601      	movge	r6, #1
 8018622:	2a00      	cmp	r2, #0
 8018624:	4617      	mov	r7, r2
 8018626:	da04      	bge.n	8018632 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8018628:	6823      	ldr	r3, [r4, #0]
 801862a:	425b      	negs	r3, r3
 801862c:	4257      	negs	r7, r2
 801862e:	4276      	negs	r6, r6
 8018630:	6023      	str	r3, [r4, #0]
 8018632:	2d00      	cmp	r5, #0
 8018634:	4638      	mov	r0, r7
 8018636:	bfba      	itte	lt
 8018638:	426d      	neglt	r5, r5
 801863a:	f04f 38ff 	movlt.w	r8, #4294967295
 801863e:	f04f 0801 	movge.w	r8, #1
 8018642:	f7ff ff5d 	bl	8018500 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018646:	ab03      	add	r3, sp, #12
 8018648:	e9cd 5300 	strd	r5, r3, [sp]
 801864c:	463a      	mov	r2, r7
 801864e:	4603      	mov	r3, r0
 8018650:	4648      	mov	r0, r9
 8018652:	f7ff ff73 	bl	801853c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018656:	6823      	ldr	r3, [r4, #0]
 8018658:	9a03      	ldr	r2, [sp, #12]
 801865a:	4546      	cmp	r6, r8
 801865c:	441a      	add	r2, r3
 801865e:	fb92 f3f5 	sdiv	r3, r2, r5
 8018662:	4418      	add	r0, r3
 8018664:	bf18      	it	ne
 8018666:	4240      	negne	r0, r0
 8018668:	fb05 2313 	mls	r3, r5, r3, r2
 801866c:	1c72      	adds	r2, r6, #1
 801866e:	6023      	str	r3, [r4, #0]
 8018670:	d105      	bne.n	801867e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8018672:	2b00      	cmp	r3, #0
 8018674:	f1c3 0200 	rsb	r2, r3, #0
 8018678:	db0b      	blt.n	8018692 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801867a:	6022      	str	r2, [r4, #0]
 801867c:	e006      	b.n	801868c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801867e:	2e01      	cmp	r6, #1
 8018680:	d104      	bne.n	801868c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018682:	2b00      	cmp	r3, #0
 8018684:	da02      	bge.n	801868c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018686:	442b      	add	r3, r5
 8018688:	3801      	subs	r0, #1
 801868a:	6023      	str	r3, [r4, #0]
 801868c:	b005      	add	sp, #20
 801868e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018692:	3801      	subs	r0, #1
 8018694:	1b52      	subs	r2, r2, r5
 8018696:	e7f0      	b.n	801867a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08018698 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018698:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801869c:	4c1c      	ldr	r4, [pc, #112]	; (8018710 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801869e:	6807      	ldr	r7, [r0, #0]
 80186a0:	69a3      	ldr	r3, [r4, #24]
 80186a2:	4605      	mov	r5, r0
 80186a4:	b92b      	cbnz	r3, 80186b2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80186a6:	6840      	ldr	r0, [r0, #4]
 80186a8:	e9c5 7000 	strd	r7, r0, [r5]
 80186ac:	b004      	add	sp, #16
 80186ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80186b2:	68a2      	ldr	r2, [r4, #8]
 80186b4:	6820      	ldr	r0, [r4, #0]
 80186b6:	ae04      	add	r6, sp, #16
 80186b8:	f04f 0802 	mov.w	r8, #2
 80186bc:	fb93 f1f8 	sdiv	r1, r3, r8
 80186c0:	440a      	add	r2, r1
 80186c2:	f846 2d04 	str.w	r2, [r6, #-4]!
 80186c6:	69e1      	ldr	r1, [r4, #28]
 80186c8:	9600      	str	r6, [sp, #0]
 80186ca:	463a      	mov	r2, r7
 80186cc:	f7ff ff98 	bl	8018600 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80186d0:	69a3      	ldr	r3, [r4, #24]
 80186d2:	686a      	ldr	r2, [r5, #4]
 80186d4:	6a21      	ldr	r1, [r4, #32]
 80186d6:	9600      	str	r6, [sp, #0]
 80186d8:	4607      	mov	r7, r0
 80186da:	6860      	ldr	r0, [r4, #4]
 80186dc:	f7ff ff90 	bl	8018600 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80186e0:	6962      	ldr	r2, [r4, #20]
 80186e2:	69a3      	ldr	r3, [r4, #24]
 80186e4:	fb93 f8f8 	sdiv	r8, r3, r8
 80186e8:	4442      	add	r2, r8
 80186ea:	9203      	str	r2, [sp, #12]
 80186ec:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80186ee:	682a      	ldr	r2, [r5, #0]
 80186f0:	9600      	str	r6, [sp, #0]
 80186f2:	4407      	add	r7, r0
 80186f4:	68e0      	ldr	r0, [r4, #12]
 80186f6:	f7ff ff83 	bl	8018600 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80186fa:	9600      	str	r6, [sp, #0]
 80186fc:	4680      	mov	r8, r0
 80186fe:	69a3      	ldr	r3, [r4, #24]
 8018700:	686a      	ldr	r2, [r5, #4]
 8018702:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8018704:	6920      	ldr	r0, [r4, #16]
 8018706:	f7ff ff7b 	bl	8018600 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801870a:	4440      	add	r0, r8
 801870c:	e7cc      	b.n	80186a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801870e:	bf00      	nop
 8018710:	20013868 	.word	0x20013868

08018714 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8018714:	4b07      	ldr	r3, [pc, #28]	; (8018734 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8018716:	781b      	ldrb	r3, [r3, #0]
 8018718:	2b01      	cmp	r3, #1
 801871a:	d109      	bne.n	8018730 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801871c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018720:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018724:	8003      	strh	r3, [r0, #0]
 8018726:	4b04      	ldr	r3, [pc, #16]	; (8018738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8018728:	881b      	ldrh	r3, [r3, #0]
 801872a:	3b01      	subs	r3, #1
 801872c:	1a9b      	subs	r3, r3, r2
 801872e:	800b      	strh	r3, [r1, #0]
 8018730:	4770      	bx	lr
 8018732:	bf00      	nop
 8018734:	2001384c 	.word	0x2001384c
 8018738:	20013848 	.word	0x20013848

0801873c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801873c:	b510      	push	{r4, lr}
 801873e:	4b07      	ldr	r3, [pc, #28]	; (801875c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8018740:	781b      	ldrb	r3, [r3, #0]
 8018742:	2b01      	cmp	r3, #1
 8018744:	d108      	bne.n	8018758 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8018746:	4b06      	ldr	r3, [pc, #24]	; (8018760 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8018748:	880c      	ldrh	r4, [r1, #0]
 801874a:	881b      	ldrh	r3, [r3, #0]
 801874c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018750:	3b01      	subs	r3, #1
 8018752:	1b1b      	subs	r3, r3, r4
 8018754:	8003      	strh	r3, [r0, #0]
 8018756:	800a      	strh	r2, [r1, #0]
 8018758:	bd10      	pop	{r4, pc}
 801875a:	bf00      	nop
 801875c:	2001384c 	.word	0x2001384c
 8018760:	20013848 	.word	0x20013848

08018764 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8018764:	b510      	push	{r4, lr}
 8018766:	4b0a      	ldr	r3, [pc, #40]	; (8018790 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8018768:	781b      	ldrb	r3, [r3, #0]
 801876a:	2b01      	cmp	r3, #1
 801876c:	d10e      	bne.n	801878c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801876e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018772:	8843      	ldrh	r3, [r0, #2]
 8018774:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018778:	8044      	strh	r4, [r0, #2]
 801877a:	18ca      	adds	r2, r1, r3
 801877c:	4b05      	ldr	r3, [pc, #20]	; (8018794 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801877e:	881b      	ldrh	r3, [r3, #0]
 8018780:	1a9b      	subs	r3, r3, r2
 8018782:	8003      	strh	r3, [r0, #0]
 8018784:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018788:	80c3      	strh	r3, [r0, #6]
 801878a:	8081      	strh	r1, [r0, #4]
 801878c:	bd10      	pop	{r4, pc}
 801878e:	bf00      	nop
 8018790:	2001384c 	.word	0x2001384c
 8018794:	20013848 	.word	0x20013848

08018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018798:	4b08      	ldr	r3, [pc, #32]	; (80187bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801879a:	781b      	ldrb	r3, [r3, #0]
 801879c:	2b01      	cmp	r3, #1
 801879e:	d10c      	bne.n	80187ba <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80187a0:	8803      	ldrh	r3, [r0, #0]
 80187a2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80187a6:	8842      	ldrh	r2, [r0, #2]
 80187a8:	8002      	strh	r2, [r0, #0]
 80187aa:	185a      	adds	r2, r3, r1
 80187ac:	4b04      	ldr	r3, [pc, #16]	; (80187c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80187ae:	881b      	ldrh	r3, [r3, #0]
 80187b0:	1a9b      	subs	r3, r3, r2
 80187b2:	8043      	strh	r3, [r0, #2]
 80187b4:	88c3      	ldrh	r3, [r0, #6]
 80187b6:	8083      	strh	r3, [r0, #4]
 80187b8:	80c1      	strh	r1, [r0, #6]
 80187ba:	4770      	bx	lr
 80187bc:	2001384c 	.word	0x2001384c
 80187c0:	20013848 	.word	0x20013848

080187c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80187c4:	b510      	push	{r4, lr}
 80187c6:	4b07      	ldr	r3, [pc, #28]	; (80187e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80187c8:	781b      	ldrb	r3, [r3, #0]
 80187ca:	2b01      	cmp	r3, #1
 80187cc:	d108      	bne.n	80187e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80187ce:	f9b1 3000 	ldrsh.w	r3, [r1]
 80187d2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80187d6:	8003      	strh	r3, [r0, #0]
 80187d8:	8893      	ldrh	r3, [r2, #4]
 80187da:	3b01      	subs	r3, #1
 80187dc:	1b1b      	subs	r3, r3, r4
 80187de:	800b      	strh	r3, [r1, #0]
 80187e0:	bd10      	pop	{r4, pc}
 80187e2:	bf00      	nop
 80187e4:	2001384c 	.word	0x2001384c

080187e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80187e8:	4b0b      	ldr	r3, [pc, #44]	; (8018818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80187ea:	781b      	ldrb	r3, [r3, #0]
 80187ec:	2b01      	cmp	r3, #1
 80187ee:	d111      	bne.n	8018814 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80187f0:	680b      	ldr	r3, [r1, #0]
 80187f2:	ed90 7a00 	vldr	s14, [r0]
 80187f6:	6003      	str	r3, [r0, #0]
 80187f8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80187fc:	eddf 6a07 	vldr	s13, [pc, #28]	; 801881c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8018800:	ee07 3a90 	vmov	s15, r3
 8018804:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018808:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801880c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8018810:	edc1 7a00 	vstr	s15, [r1]
 8018814:	4770      	bx	lr
 8018816:	bf00      	nop
 8018818:	2001384c 	.word	0x2001384c
 801881c:	38d1b717 	.word	0x38d1b717

08018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8018820:	b510      	push	{r4, lr}
 8018822:	4b0a      	ldr	r3, [pc, #40]	; (801884c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8018824:	781b      	ldrb	r3, [r3, #0]
 8018826:	2b01      	cmp	r3, #1
 8018828:	460a      	mov	r2, r1
 801882a:	d10d      	bne.n	8018848 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801882c:	8881      	ldrh	r1, [r0, #4]
 801882e:	8803      	ldrh	r3, [r0, #0]
 8018830:	440b      	add	r3, r1
 8018832:	4601      	mov	r1, r0
 8018834:	3b01      	subs	r3, #1
 8018836:	f821 3b02 	strh.w	r3, [r1], #2
 801883a:	f7ff ffc3 	bl	80187c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801883e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018842:	88c2      	ldrh	r2, [r0, #6]
 8018844:	8082      	strh	r2, [r0, #4]
 8018846:	80c3      	strh	r3, [r0, #6]
 8018848:	bd10      	pop	{r4, pc}
 801884a:	bf00      	nop
 801884c:	2001384c 	.word	0x2001384c

08018850 <_ZN8touchgfx11Application13requestRedrawEv>:
 8018850:	4b06      	ldr	r3, [pc, #24]	; (801886c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8018852:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018856:	4b06      	ldr	r3, [pc, #24]	; (8018870 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8018858:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801885c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018860:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8018864:	2100      	movs	r1, #0
 8018866:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801886a:	4770      	bx	lr
 801886c:	20013848 	.word	0x20013848
 8018870:	2001384a 	.word	0x2001384a

08018874 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8018874:	4b03      	ldr	r3, [pc, #12]	; (8018884 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8018876:	6818      	ldr	r0, [r3, #0]
 8018878:	b110      	cbz	r0, 8018880 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801887a:	6803      	ldr	r3, [r0, #0]
 801887c:	699b      	ldr	r3, [r3, #24]
 801887e:	4718      	bx	r3
 8018880:	4770      	bx	lr
 8018882:	bf00      	nop
 8018884:	20013898 	.word	0x20013898

08018888 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8018888:	4770      	bx	lr
	...

0801888c <_ZN8touchgfx11Application4drawEv>:
 801888c:	b507      	push	{r0, r1, r2, lr}
 801888e:	4b09      	ldr	r3, [pc, #36]	; (80188b4 <_ZN8touchgfx11Application4drawEv+0x28>)
 8018890:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018894:	4b08      	ldr	r3, [pc, #32]	; (80188b8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8018896:	f8ad 2004 	strh.w	r2, [sp, #4]
 801889a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801889e:	f8ad 3006 	strh.w	r3, [sp, #6]
 80188a2:	6803      	ldr	r3, [r0, #0]
 80188a4:	2100      	movs	r1, #0
 80188a6:	9100      	str	r1, [sp, #0]
 80188a8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80188aa:	4669      	mov	r1, sp
 80188ac:	4798      	blx	r3
 80188ae:	b003      	add	sp, #12
 80188b0:	f85d fb04 	ldr.w	pc, [sp], #4
 80188b4:	20013848 	.word	0x20013848
 80188b8:	2001384a 	.word	0x2001384a

080188bc <_ZN8touchgfx11Application10invalidateEv>:
 80188bc:	4b09      	ldr	r3, [pc, #36]	; (80188e4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80188be:	f9b3 2000 	ldrsh.w	r2, [r3]
 80188c2:	4b09      	ldr	r3, [pc, #36]	; (80188e8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80188c4:	b082      	sub	sp, #8
 80188c6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80188ca:	f8ad 2004 	strh.w	r2, [sp, #4]
 80188ce:	2100      	movs	r1, #0
 80188d0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80188d4:	9100      	str	r1, [sp, #0]
 80188d6:	6803      	ldr	r3, [r0, #0]
 80188d8:	aa02      	add	r2, sp, #8
 80188da:	e912 0006 	ldmdb	r2, {r1, r2}
 80188de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80188e0:	b002      	add	sp, #8
 80188e2:	4718      	bx	r3
 80188e4:	20013848 	.word	0x20013848
 80188e8:	2001384a 	.word	0x2001384a

080188ec <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80188ec:	4b03      	ldr	r3, [pc, #12]	; (80188fc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80188ee:	6818      	ldr	r0, [r3, #0]
 80188f0:	b110      	cbz	r0, 80188f8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80188f2:	6803      	ldr	r3, [r0, #0]
 80188f4:	69db      	ldr	r3, [r3, #28]
 80188f6:	4718      	bx	r3
 80188f8:	4770      	bx	lr
 80188fa:	bf00      	nop
 80188fc:	20013898 	.word	0x20013898

08018900 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8018900:	4b03      	ldr	r3, [pc, #12]	; (8018910 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8018902:	6818      	ldr	r0, [r3, #0]
 8018904:	b110      	cbz	r0, 801890c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8018906:	6803      	ldr	r3, [r0, #0]
 8018908:	6a1b      	ldr	r3, [r3, #32]
 801890a:	4718      	bx	r3
 801890c:	4770      	bx	lr
 801890e:	bf00      	nop
 8018910:	20013898 	.word	0x20013898

08018914 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8018914:	2300      	movs	r3, #0
 8018916:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801891a:	4770      	bx	lr

0801891c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801891c:	4b03      	ldr	r3, [pc, #12]	; (801892c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801891e:	6818      	ldr	r0, [r3, #0]
 8018920:	b110      	cbz	r0, 8018928 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8018922:	6803      	ldr	r3, [r0, #0]
 8018924:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018926:	4718      	bx	r3
 8018928:	4770      	bx	lr
 801892a:	bf00      	nop
 801892c:	20013898 	.word	0x20013898

08018930 <_ZN8touchgfx11ApplicationD1Ev>:
 8018930:	4770      	bx	lr

08018932 <_ZN8touchgfx11ApplicationD0Ev>:
 8018932:	b510      	push	{r4, lr}
 8018934:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8018938:	4604      	mov	r4, r0
 801893a:	f014 fa3e 	bl	802cdba <_ZdlPvj>
 801893e:	4620      	mov	r0, r4
 8018940:	bd10      	pop	{r4, pc}

08018942 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8018942:	b510      	push	{r4, lr}
 8018944:	f9b1 4000 	ldrsh.w	r4, [r1]
 8018948:	888a      	ldrh	r2, [r1, #4]
 801894a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801894e:	4422      	add	r2, r4
 8018950:	b212      	sxth	r2, r2
 8018952:	4293      	cmp	r3, r2
 8018954:	da15      	bge.n	8018982 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018956:	8882      	ldrh	r2, [r0, #4]
 8018958:	4413      	add	r3, r2
 801895a:	b21b      	sxth	r3, r3
 801895c:	429c      	cmp	r4, r3
 801895e:	da10      	bge.n	8018982 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018960:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8018964:	88c9      	ldrh	r1, [r1, #6]
 8018966:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801896a:	4419      	add	r1, r3
 801896c:	b209      	sxth	r1, r1
 801896e:	428a      	cmp	r2, r1
 8018970:	da07      	bge.n	8018982 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018972:	88c0      	ldrh	r0, [r0, #6]
 8018974:	4410      	add	r0, r2
 8018976:	b200      	sxth	r0, r0
 8018978:	4283      	cmp	r3, r0
 801897a:	bfac      	ite	ge
 801897c:	2000      	movge	r0, #0
 801897e:	2001      	movlt	r0, #1
 8018980:	bd10      	pop	{r4, pc}
 8018982:	2000      	movs	r0, #0
 8018984:	e7fc      	b.n	8018980 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08018986 <_ZN8touchgfx4Rect10restrictToEss>:
 8018986:	f9b0 3000 	ldrsh.w	r3, [r0]
 801898a:	2b00      	cmp	r3, #0
 801898c:	b510      	push	{r4, lr}
 801898e:	da04      	bge.n	801899a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8018990:	8884      	ldrh	r4, [r0, #4]
 8018992:	4423      	add	r3, r4
 8018994:	8083      	strh	r3, [r0, #4]
 8018996:	2300      	movs	r3, #0
 8018998:	8003      	strh	r3, [r0, #0]
 801899a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801899e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80189a2:	1b09      	subs	r1, r1, r4
 80189a4:	428b      	cmp	r3, r1
 80189a6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80189aa:	bfc8      	it	gt
 80189ac:	8081      	strhgt	r1, [r0, #4]
 80189ae:	2b00      	cmp	r3, #0
 80189b0:	da04      	bge.n	80189bc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80189b2:	88c1      	ldrh	r1, [r0, #6]
 80189b4:	440b      	add	r3, r1
 80189b6:	80c3      	strh	r3, [r0, #6]
 80189b8:	2300      	movs	r3, #0
 80189ba:	8043      	strh	r3, [r0, #2]
 80189bc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80189c0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80189c4:	1a52      	subs	r2, r2, r1
 80189c6:	4293      	cmp	r3, r2
 80189c8:	bfc8      	it	gt
 80189ca:	80c2      	strhgt	r2, [r0, #6]
 80189cc:	bd10      	pop	{r4, pc}
	...

080189d0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80189d0:	b510      	push	{r4, lr}
 80189d2:	4b10      	ldr	r3, [pc, #64]	; (8018a14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80189d4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80189d8:	4b0f      	ldr	r3, [pc, #60]	; (8018a18 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80189da:	460c      	mov	r4, r1
 80189dc:	4620      	mov	r0, r4
 80189de:	f9b3 1000 	ldrsh.w	r1, [r3]
 80189e2:	f7ff ffd0 	bl	8018986 <_ZN8touchgfx4Rect10restrictToEss>
 80189e6:	4b0d      	ldr	r3, [pc, #52]	; (8018a1c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80189e8:	6818      	ldr	r0, [r3, #0]
 80189ea:	b190      	cbz	r0, 8018a12 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80189ec:	6803      	ldr	r3, [r0, #0]
 80189ee:	4621      	mov	r1, r4
 80189f0:	689b      	ldr	r3, [r3, #8]
 80189f2:	4798      	blx	r3
 80189f4:	4b0a      	ldr	r3, [pc, #40]	; (8018a20 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80189f6:	6818      	ldr	r0, [r3, #0]
 80189f8:	b118      	cbz	r0, 8018a02 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80189fa:	6803      	ldr	r3, [r0, #0]
 80189fc:	4621      	mov	r1, r4
 80189fe:	689b      	ldr	r3, [r3, #8]
 8018a00:	4798      	blx	r3
 8018a02:	4b08      	ldr	r3, [pc, #32]	; (8018a24 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8018a04:	6818      	ldr	r0, [r3, #0]
 8018a06:	6803      	ldr	r3, [r0, #0]
 8018a08:	4621      	mov	r1, r4
 8018a0a:	69db      	ldr	r3, [r3, #28]
 8018a0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018a10:	4718      	bx	r3
 8018a12:	bd10      	pop	{r4, pc}
 8018a14:	2001384a 	.word	0x2001384a
 8018a18:	20013848 	.word	0x20013848
 8018a1c:	20013898 	.word	0x20013898
 8018a20:	20013894 	.word	0x20013894
 8018a24:	20013854 	.word	0x20013854

08018a28 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8018a28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018a2a:	4606      	mov	r6, r0
 8018a2c:	4608      	mov	r0, r1
 8018a2e:	460f      	mov	r7, r1
 8018a30:	f7fa f957 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018a34:	b9e8      	cbnz	r0, 8018a72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018a36:	f9b7 5000 	ldrsh.w	r5, [r7]
 8018a3a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8018a3e:	42a5      	cmp	r5, r4
 8018a40:	db17      	blt.n	8018a72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018a42:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8018a46:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8018a4a:	429a      	cmp	r2, r3
 8018a4c:	db11      	blt.n	8018a72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018a4e:	88b9      	ldrh	r1, [r7, #4]
 8018a50:	440d      	add	r5, r1
 8018a52:	88b1      	ldrh	r1, [r6, #4]
 8018a54:	440c      	add	r4, r1
 8018a56:	b22d      	sxth	r5, r5
 8018a58:	b224      	sxth	r4, r4
 8018a5a:	42a5      	cmp	r5, r4
 8018a5c:	dc09      	bgt.n	8018a72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018a5e:	88f8      	ldrh	r0, [r7, #6]
 8018a60:	4410      	add	r0, r2
 8018a62:	88f2      	ldrh	r2, [r6, #6]
 8018a64:	4413      	add	r3, r2
 8018a66:	b200      	sxth	r0, r0
 8018a68:	b21b      	sxth	r3, r3
 8018a6a:	4298      	cmp	r0, r3
 8018a6c:	bfcc      	ite	gt
 8018a6e:	2000      	movgt	r0, #0
 8018a70:	2001      	movle	r0, #1
 8018a72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08018a74 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8018a74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018a76:	4604      	mov	r4, r0
 8018a78:	4608      	mov	r0, r1
 8018a7a:	460d      	mov	r5, r1
 8018a7c:	f7fa f931 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018a80:	b978      	cbnz	r0, 8018aa2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8018a82:	4620      	mov	r0, r4
 8018a84:	f7fa f92d 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018a88:	f9b5 6000 	ldrsh.w	r6, [r5]
 8018a8c:	b150      	cbz	r0, 8018aa4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8018a8e:	8026      	strh	r6, [r4, #0]
 8018a90:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018a94:	8063      	strh	r3, [r4, #2]
 8018a96:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8018a9a:	80a3      	strh	r3, [r4, #4]
 8018a9c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8018aa0:	80e3      	strh	r3, [r4, #6]
 8018aa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018aa4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018aa8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018aac:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8018ab0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8018ab4:	88ed      	ldrh	r5, [r5, #6]
 8018ab6:	42b1      	cmp	r1, r6
 8018ab8:	460f      	mov	r7, r1
 8018aba:	bfa8      	it	ge
 8018abc:	4637      	movge	r7, r6
 8018abe:	4293      	cmp	r3, r2
 8018ac0:	4618      	mov	r0, r3
 8018ac2:	4466      	add	r6, ip
 8018ac4:	bfa8      	it	ge
 8018ac6:	4610      	movge	r0, r2
 8018ac8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018acc:	8027      	strh	r7, [r4, #0]
 8018ace:	442a      	add	r2, r5
 8018ad0:	88e5      	ldrh	r5, [r4, #6]
 8018ad2:	8060      	strh	r0, [r4, #2]
 8018ad4:	4461      	add	r1, ip
 8018ad6:	442b      	add	r3, r5
 8018ad8:	b236      	sxth	r6, r6
 8018ada:	b209      	sxth	r1, r1
 8018adc:	b212      	sxth	r2, r2
 8018ade:	b21b      	sxth	r3, r3
 8018ae0:	428e      	cmp	r6, r1
 8018ae2:	bfac      	ite	ge
 8018ae4:	ebc7 0106 	rsbge	r1, r7, r6
 8018ae8:	ebc7 0101 	rsblt	r1, r7, r1
 8018aec:	429a      	cmp	r2, r3
 8018aee:	bfac      	ite	ge
 8018af0:	ebc0 0202 	rsbge	r2, r0, r2
 8018af4:	ebc0 0203 	rsblt	r2, r0, r3
 8018af8:	80a1      	strh	r1, [r4, #4]
 8018afa:	80e2      	strh	r2, [r4, #6]
 8018afc:	e7d1      	b.n	8018aa2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08018b00 <_ZN8touchgfx11Application11getInstanceEv>:
 8018b00:	4b01      	ldr	r3, [pc, #4]	; (8018b08 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8018b02:	6818      	ldr	r0, [r3, #0]
 8018b04:	4770      	bx	lr
 8018b06:	bf00      	nop
 8018b08:	200138a8 	.word	0x200138a8

08018b0c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8018b0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018b0e:	4b10      	ldr	r3, [pc, #64]	; (8018b50 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8018b10:	781b      	ldrb	r3, [r3, #0]
 8018b12:	4605      	mov	r5, r0
 8018b14:	b1d3      	cbz	r3, 8018b4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8018b16:	4b0f      	ldr	r3, [pc, #60]	; (8018b54 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8018b18:	4f0f      	ldr	r7, [pc, #60]	; (8018b58 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8018b1a:	881c      	ldrh	r4, [r3, #0]
 8018b1c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8018b20:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8018b24:	42a3      	cmp	r3, r4
 8018b26:	d90e      	bls.n	8018b46 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8018b28:	683b      	ldr	r3, [r7, #0]
 8018b2a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8018b2e:	b10a      	cbz	r2, 8018b34 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8018b30:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8018b32:	b900      	cbnz	r0, 8018b36 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8018b34:	6898      	ldr	r0, [r3, #8]
 8018b36:	6803      	ldr	r3, [r0, #0]
 8018b38:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8018b3c:	69db      	ldr	r3, [r3, #28]
 8018b3e:	3401      	adds	r4, #1
 8018b40:	4798      	blx	r3
 8018b42:	b2a4      	uxth	r4, r4
 8018b44:	e7ec      	b.n	8018b20 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8018b46:	2300      	movs	r3, #0
 8018b48:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8018b4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018b4e:	bf00      	nop
 8018b50:	20013852 	.word	0x20013852
 8018b54:	2000008c 	.word	0x2000008c
 8018b58:	20013854 	.word	0x20013854

08018b5c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8018b5c:	b510      	push	{r4, lr}
 8018b5e:	2300      	movs	r3, #0
 8018b60:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8018b64:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018b68:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018b6c:	4604      	mov	r4, r0
 8018b6e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018b72:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8018b76:	429a      	cmp	r2, r3
 8018b78:	d90e      	bls.n	8018b98 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8018b7a:	18e2      	adds	r2, r4, r3
 8018b7c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8018b80:	b122      	cbz	r2, 8018b8c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8018b82:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8018b86:	6803      	ldr	r3, [r0, #0]
 8018b88:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018b8a:	4798      	blx	r3
 8018b8c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018b90:	3301      	adds	r3, #1
 8018b92:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8018b96:	e7ea      	b.n	8018b6e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8018b98:	bd10      	pop	{r4, pc}

08018b9a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8018b9a:	b530      	push	{r4, r5, lr}
 8018b9c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8018ba0:	2200      	movs	r2, #0
 8018ba2:	b293      	uxth	r3, r2
 8018ba4:	429d      	cmp	r5, r3
 8018ba6:	d90e      	bls.n	8018bc6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018ba8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8018bac:	428b      	cmp	r3, r1
 8018bae:	d10b      	bne.n	8018bc8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018bb0:	1884      	adds	r4, r0, r2
 8018bb2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8018bb6:	b13b      	cbz	r3, 8018bc8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018bb8:	3b01      	subs	r3, #1
 8018bba:	b2db      	uxtb	r3, r3
 8018bbc:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8018bc0:	b90b      	cbnz	r3, 8018bc6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018bc2:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8018bc6:	bd30      	pop	{r4, r5, pc}
 8018bc8:	3201      	adds	r2, #1
 8018bca:	e7ea      	b.n	8018ba2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8018bcc:	2300      	movs	r3, #0
 8018bce:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018bd2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8018bd6:	30a4      	adds	r0, #164	; 0xa4
 8018bd8:	f802 3b01 	strb.w	r3, [r2], #1
 8018bdc:	4282      	cmp	r2, r0
 8018bde:	d1fb      	bne.n	8018bd8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8018be0:	4770      	bx	lr
	...

08018be4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8018be4:	b570      	push	{r4, r5, r6, lr}
 8018be6:	4c0b      	ldr	r4, [pc, #44]	; (8018c14 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8018be8:	4605      	mov	r5, r0
 8018bea:	6820      	ldr	r0, [r4, #0]
 8018bec:	460e      	mov	r6, r1
 8018bee:	b110      	cbz	r0, 8018bf6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8018bf0:	6803      	ldr	r3, [r0, #0]
 8018bf2:	695b      	ldr	r3, [r3, #20]
 8018bf4:	4798      	blx	r3
 8018bf6:	1d28      	adds	r0, r5, #4
 8018bf8:	f7ff ffe8 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018bfc:	6026      	str	r6, [r4, #0]
 8018bfe:	6833      	ldr	r3, [r6, #0]
 8018c00:	4630      	mov	r0, r6
 8018c02:	68db      	ldr	r3, [r3, #12]
 8018c04:	4798      	blx	r3
 8018c06:	682b      	ldr	r3, [r5, #0]
 8018c08:	4628      	mov	r0, r5
 8018c0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018c0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018c10:	4718      	bx	r3
 8018c12:	bf00      	nop
 8018c14:	20013898 	.word	0x20013898

08018c18 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8018c18:	2300      	movs	r3, #0
 8018c1a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8018c1e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8018c22:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018c24:	461a      	mov	r2, r3
 8018c26:	461c      	mov	r4, r3
 8018c28:	461d      	mov	r5, r3
 8018c2a:	459c      	cmp	ip, r3
 8018c2c:	dd1a      	ble.n	8018c64 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8018c2e:	18c6      	adds	r6, r0, r3
 8018c30:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8018c34:	b16e      	cbz	r6, 8018c52 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8018c36:	429a      	cmp	r2, r3
 8018c38:	d008      	beq.n	8018c4c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8018c3a:	fa1f fe82 	uxth.w	lr, r2
 8018c3e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8018c42:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8018c46:	1887      	adds	r7, r0, r2
 8018c48:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8018c4c:	3201      	adds	r2, #1
 8018c4e:	3301      	adds	r3, #1
 8018c50:	e7eb      	b.n	8018c2a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8018c52:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8018c56:	4299      	cmp	r1, r3
 8018c58:	bfa8      	it	ge
 8018c5a:	3501      	addge	r5, #1
 8018c5c:	429e      	cmp	r6, r3
 8018c5e:	bfc8      	it	gt
 8018c60:	3401      	addgt	r4, #1
 8018c62:	e7f4      	b.n	8018c4e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8018c64:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8018c68:	1b49      	subs	r1, r1, r5
 8018c6a:	1b1b      	subs	r3, r3, r4
 8018c6c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8018c70:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018c74:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018c78:	4293      	cmp	r3, r2
 8018c7a:	dd03      	ble.n	8018c84 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8018c7c:	3b01      	subs	r3, #1
 8018c7e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018c82:	e7f7      	b.n	8018c74 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8018c84:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08018c88 <_ZN8touchgfx11Application15handleTickEventEv>:
 8018c88:	b570      	push	{r4, r5, r6, lr}
 8018c8a:	4d16      	ldr	r5, [pc, #88]	; (8018ce4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8018c8c:	4604      	mov	r4, r0
 8018c8e:	6828      	ldr	r0, [r5, #0]
 8018c90:	b140      	cbz	r0, 8018ca4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018c92:	7a03      	ldrb	r3, [r0, #8]
 8018c94:	b933      	cbnz	r3, 8018ca4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018c96:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018c9a:	6803      	ldr	r3, [r0, #0]
 8018c9c:	689b      	ldr	r3, [r3, #8]
 8018c9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018ca2:	4718      	bx	r3
 8018ca4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8018ca8:	4e0f      	ldr	r6, [pc, #60]	; (8018ce8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8018caa:	b973      	cbnz	r3, 8018cca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018cac:	b168      	cbz	r0, 8018cca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018cae:	7a03      	ldrb	r3, [r0, #8]
 8018cb0:	b15b      	cbz	r3, 8018cca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018cb2:	6830      	ldr	r0, [r6, #0]
 8018cb4:	b110      	cbz	r0, 8018cbc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8018cb6:	6803      	ldr	r3, [r0, #0]
 8018cb8:	691b      	ldr	r3, [r3, #16]
 8018cba:	4798      	blx	r3
 8018cbc:	6828      	ldr	r0, [r5, #0]
 8018cbe:	6803      	ldr	r3, [r0, #0]
 8018cc0:	68db      	ldr	r3, [r3, #12]
 8018cc2:	4798      	blx	r3
 8018cc4:	2301      	movs	r3, #1
 8018cc6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018cca:	3404      	adds	r4, #4
 8018ccc:	4620      	mov	r0, r4
 8018cce:	f7ff ff45 	bl	8018b5c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8018cd2:	4620      	mov	r0, r4
 8018cd4:	f7ff ffa0 	bl	8018c18 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018cd8:	6830      	ldr	r0, [r6, #0]
 8018cda:	b110      	cbz	r0, 8018ce2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8018cdc:	6803      	ldr	r3, [r0, #0]
 8018cde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018ce0:	e7dd      	b.n	8018c9e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8018ce2:	bd70      	pop	{r4, r5, r6, pc}
 8018ce4:	2001389c 	.word	0x2001389c
 8018ce8:	20013898 	.word	0x20013898

08018cec <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8018cec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018cee:	2300      	movs	r3, #0
 8018cf0:	4604      	mov	r4, r0
 8018cf2:	460d      	mov	r5, r1
 8018cf4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8018cf8:	4618      	mov	r0, r3
 8018cfa:	b29a      	uxth	r2, r3
 8018cfc:	4291      	cmp	r1, r2
 8018cfe:	d911      	bls.n	8018d24 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8018d00:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8018d04:	18e6      	adds	r6, r4, r3
 8018d06:	42af      	cmp	r7, r5
 8018d08:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8018d0c:	d105      	bne.n	8018d1a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8018d0e:	2aff      	cmp	r2, #255	; 0xff
 8018d10:	d002      	beq.n	8018d18 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018d12:	3201      	adds	r2, #1
 8018d14:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8018d18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018d1a:	2a00      	cmp	r2, #0
 8018d1c:	bf08      	it	eq
 8018d1e:	2001      	moveq	r0, #1
 8018d20:	3301      	adds	r3, #1
 8018d22:	e7ea      	b.n	8018cfa <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8018d24:	b120      	cbz	r0, 8018d30 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018d26:	2920      	cmp	r1, #32
 8018d28:	d102      	bne.n	8018d30 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018d2a:	4620      	mov	r0, r4
 8018d2c:	f7ff ff74 	bl	8018c18 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018d30:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8018d34:	2b1f      	cmp	r3, #31
 8018d36:	d8ef      	bhi.n	8018d18 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018d38:	18e2      	adds	r2, r4, r3
 8018d3a:	2101      	movs	r1, #1
 8018d3c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8018d40:	185a      	adds	r2, r3, r1
 8018d42:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8018d46:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8018d4a:	e7e5      	b.n	8018d18 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08018d4c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8018d4c:	4603      	mov	r3, r0
 8018d4e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8018d52:	2200      	movs	r2, #0
 8018d54:	801a      	strh	r2, [r3, #0]
 8018d56:	805a      	strh	r2, [r3, #2]
 8018d58:	809a      	strh	r2, [r3, #4]
 8018d5a:	80da      	strh	r2, [r3, #6]
 8018d5c:	3308      	adds	r3, #8
 8018d5e:	428b      	cmp	r3, r1
 8018d60:	d1f8      	bne.n	8018d54 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8018d62:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8018d66:	4770      	bx	lr

08018d68 <_ZN8touchgfx11ApplicationC1Ev>:
 8018d68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018d6a:	4606      	mov	r6, r0
 8018d6c:	4b1c      	ldr	r3, [pc, #112]	; (8018de0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8018d6e:	f846 3b04 	str.w	r3, [r6], #4
 8018d72:	4604      	mov	r4, r0
 8018d74:	2500      	movs	r5, #0
 8018d76:	22a8      	movs	r2, #168	; 0xa8
 8018d78:	2100      	movs	r1, #0
 8018d7a:	4630      	mov	r0, r6
 8018d7c:	f015 f909 	bl	802df92 <memset>
 8018d80:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8018d84:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8018d88:	f7ff ffe0 	bl	8018d4c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018d8c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8018d90:	f7ff ffdc 	bl	8018d4c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018d94:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8018d98:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8018d9c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8018da0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8018da4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8018da8:	490e      	ldr	r1, [pc, #56]	; (8018de4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8018daa:	480f      	ldr	r0, [pc, #60]	; (8018de8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8018dac:	4f0f      	ldr	r7, [pc, #60]	; (8018dec <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8018dae:	f010 fe27 	bl	8029a00 <CRC_Lock>
 8018db2:	4b0f      	ldr	r3, [pc, #60]	; (8018df0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8018db4:	b158      	cbz	r0, 8018dce <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8018db6:	801d      	strh	r5, [r3, #0]
 8018db8:	4a0e      	ldr	r2, [pc, #56]	; (8018df4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8018dba:	2300      	movs	r3, #0
 8018dbc:	6013      	str	r3, [r2, #0]
 8018dbe:	4a0e      	ldr	r2, [pc, #56]	; (8018df8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8018dc0:	603b      	str	r3, [r7, #0]
 8018dc2:	4630      	mov	r0, r6
 8018dc4:	6013      	str	r3, [r2, #0]
 8018dc6:	f7ff ff01 	bl	8018bcc <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018dca:	4620      	mov	r0, r4
 8018dcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018dce:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8018dd2:	2002      	movs	r0, #2
 8018dd4:	801a      	strh	r2, [r3, #0]
 8018dd6:	6038      	str	r0, [r7, #0]
 8018dd8:	f001 fb4a 	bl	801a470 <_ZN8touchgfx6Screen4drawEv>
 8018ddc:	e7ec      	b.n	8018db8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8018dde:	bf00      	nop
 8018de0:	08031fb4 	.word	0x08031fb4
 8018de4:	b5e8b5cd 	.word	0xb5e8b5cd
 8018de8:	f407a5c2 	.word	0xf407a5c2
 8018dec:	20013898 	.word	0x20013898
 8018df0:	2000008c 	.word	0x2000008c
 8018df4:	200138a8 	.word	0x200138a8
 8018df8:	2001389c 	.word	0x2001389c

08018dfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8018dfc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8018e00:	3b01      	subs	r3, #1
 8018e02:	b29b      	uxth	r3, r3
 8018e04:	428b      	cmp	r3, r1
 8018e06:	b510      	push	{r4, lr}
 8018e08:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8018e0c:	d908      	bls.n	8018e20 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8018e0e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8018e12:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8018e16:	681a      	ldr	r2, [r3, #0]
 8018e18:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8018e1c:	685a      	ldr	r2, [r3, #4]
 8018e1e:	6062      	str	r2, [r4, #4]
 8018e20:	bd10      	pop	{r4, pc}
	...

08018e24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8018e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e28:	4b8f      	ldr	r3, [pc, #572]	; (8019068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8018e2a:	b08f      	sub	sp, #60	; 0x3c
 8018e2c:	ac0a      	add	r4, sp, #40	; 0x28
 8018e2e:	e884 0006 	stmia.w	r4, {r1, r2}
 8018e32:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018e36:	4b8d      	ldr	r3, [pc, #564]	; (801906c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8018e38:	4683      	mov	fp, r0
 8018e3a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018e3e:	4620      	mov	r0, r4
 8018e40:	f7ff fda1 	bl	8018986 <_ZN8touchgfx4Rect10restrictToEss>
 8018e44:	4620      	mov	r0, r4
 8018e46:	f7f9 ff4c 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018e4a:	2800      	cmp	r0, #0
 8018e4c:	d16a      	bne.n	8018f24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018e4e:	9403      	str	r4, [sp, #12]
 8018e50:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8018e54:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8018e58:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8018e5c:	35a4      	adds	r5, #164	; 0xa4
 8018e5e:	9301      	str	r3, [sp, #4]
 8018e60:	b15c      	cbz	r4, 8018e7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8018e62:	4629      	mov	r1, r5
 8018e64:	9803      	ldr	r0, [sp, #12]
 8018e66:	f7ff fddf 	bl	8018a28 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018e6a:	3c01      	subs	r4, #1
 8018e6c:	b118      	cbz	r0, 8018e76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8018e6e:	b2a1      	uxth	r1, r4
 8018e70:	9801      	ldr	r0, [sp, #4]
 8018e72:	f7ff ffc3 	bl	8018dfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018e76:	3d08      	subs	r5, #8
 8018e78:	e7f2      	b.n	8018e60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8018e7a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8018e7e:	f8cd a010 	str.w	sl, [sp, #16]
 8018e82:	f10a 33ff 	add.w	r3, sl, #4294967295
 8018e86:	9302      	str	r3, [sp, #8]
 8018e88:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8018e8c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8018e90:	9306      	str	r3, [sp, #24]
 8018e92:	445c      	add	r4, fp
 8018e94:	2500      	movs	r5, #0
 8018e96:	4626      	mov	r6, r4
 8018e98:	f8cd a014 	str.w	sl, [sp, #20]
 8018e9c:	462f      	mov	r7, r5
 8018e9e:	9b05      	ldr	r3, [sp, #20]
 8018ea0:	2b00      	cmp	r3, #0
 8018ea2:	d073      	beq.n	8018f8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8018ea4:	9903      	ldr	r1, [sp, #12]
 8018ea6:	4630      	mov	r0, r6
 8018ea8:	f7ff fd4b 	bl	8018942 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018eac:	b350      	cbz	r0, 8018f04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018eae:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8018eb2:	f9b6 c000 	ldrsh.w	ip, [r6]
 8018eb6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8018eba:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8018ebe:	45e6      	cmp	lr, ip
 8018ec0:	db33      	blt.n	8018f2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018ec2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018ec6:	88b3      	ldrh	r3, [r6, #4]
 8018ec8:	4472      	add	r2, lr
 8018eca:	4463      	add	r3, ip
 8018ecc:	b212      	sxth	r2, r2
 8018ece:	b21b      	sxth	r3, r3
 8018ed0:	429a      	cmp	r2, r3
 8018ed2:	dc2a      	bgt.n	8018f2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018ed4:	88f3      	ldrh	r3, [r6, #6]
 8018ed6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8018eda:	fa1f f289 	uxth.w	r2, r9
 8018ede:	4413      	add	r3, r2
 8018ee0:	b29b      	uxth	r3, r3
 8018ee2:	45c8      	cmp	r8, r9
 8018ee4:	fa1f fc88 	uxth.w	ip, r8
 8018ee8:	fa0f fe83 	sxth.w	lr, r3
 8018eec:	db0f      	blt.n	8018f0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8018eee:	eba3 030c 	sub.w	r3, r3, ip
 8018ef2:	1ac9      	subs	r1, r1, r3
 8018ef4:	b209      	sxth	r1, r1
 8018ef6:	2900      	cmp	r1, #0
 8018ef8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018efc:	dd12      	ble.n	8018f24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018efe:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8018f02:	4605      	mov	r5, r0
 8018f04:	9b05      	ldr	r3, [sp, #20]
 8018f06:	3b01      	subs	r3, #1
 8018f08:	9305      	str	r3, [sp, #20]
 8018f0a:	3e08      	subs	r6, #8
 8018f0c:	e7c7      	b.n	8018e9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8018f0e:	4461      	add	r1, ip
 8018f10:	b209      	sxth	r1, r1
 8018f12:	4571      	cmp	r1, lr
 8018f14:	dc38      	bgt.n	8018f88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018f16:	eba2 020c 	sub.w	r2, r2, ip
 8018f1a:	b212      	sxth	r2, r2
 8018f1c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8018f20:	2a00      	cmp	r2, #0
 8018f22:	dcee      	bgt.n	8018f02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018f24:	b00f      	add	sp, #60	; 0x3c
 8018f26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f2a:	45c8      	cmp	r8, r9
 8018f2c:	db2c      	blt.n	8018f88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018f2e:	88f3      	ldrh	r3, [r6, #6]
 8018f30:	4499      	add	r9, r3
 8018f32:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8018f36:	4498      	add	r8, r3
 8018f38:	fa0f f989 	sxth.w	r9, r9
 8018f3c:	fa0f f888 	sxth.w	r8, r8
 8018f40:	45c1      	cmp	r9, r8
 8018f42:	db21      	blt.n	8018f88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018f44:	88b3      	ldrh	r3, [r6, #4]
 8018f46:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018f4a:	fa1f f28c 	uxth.w	r2, ip
 8018f4e:	4413      	add	r3, r2
 8018f50:	b29b      	uxth	r3, r3
 8018f52:	45e6      	cmp	lr, ip
 8018f54:	fa1f f88e 	uxth.w	r8, lr
 8018f58:	fa0f f983 	sxth.w	r9, r3
 8018f5c:	db0a      	blt.n	8018f74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8018f5e:	eba3 0308 	sub.w	r3, r3, r8
 8018f62:	1ac9      	subs	r1, r1, r3
 8018f64:	b209      	sxth	r1, r1
 8018f66:	2900      	cmp	r1, #0
 8018f68:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8018f6c:	ddda      	ble.n	8018f24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018f6e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8018f72:	e7c6      	b.n	8018f02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018f74:	4441      	add	r1, r8
 8018f76:	b209      	sxth	r1, r1
 8018f78:	4549      	cmp	r1, r9
 8018f7a:	dc05      	bgt.n	8018f88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018f7c:	eba2 0208 	sub.w	r2, r2, r8
 8018f80:	b212      	sxth	r2, r2
 8018f82:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8018f86:	e7cb      	b.n	8018f20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8018f88:	4607      	mov	r7, r0
 8018f8a:	e7bb      	b.n	8018f04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018f8c:	2d00      	cmp	r5, #0
 8018f8e:	d181      	bne.n	8018e94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8018f90:	2f00      	cmp	r7, #0
 8018f92:	f000 81dd 	beq.w	8019350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018f96:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8018f9a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8018f9e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8018fa2:	b2b3      	uxth	r3, r6
 8018fa4:	9305      	str	r3, [sp, #20]
 8018fa6:	9a05      	ldr	r2, [sp, #20]
 8018fa8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018fac:	4413      	add	r3, r2
 8018fae:	b2ba      	uxth	r2, r7
 8018fb0:	4492      	add	sl, r2
 8018fb2:	b29b      	uxth	r3, r3
 8018fb4:	fa1f fa8a 	uxth.w	sl, sl
 8018fb8:	fa0f f883 	sxth.w	r8, r3
 8018fbc:	fa0f f98a 	sxth.w	r9, sl
 8018fc0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8018fc4:	9b04      	ldr	r3, [sp, #16]
 8018fc6:	2b00      	cmp	r3, #0
 8018fc8:	d052      	beq.n	8019070 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8018fca:	9903      	ldr	r1, [sp, #12]
 8018fcc:	4620      	mov	r0, r4
 8018fce:	f7ff fcb8 	bl	8018942 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018fd2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8018fd6:	b1c0      	cbz	r0, 801900a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018fd8:	f9b4 e000 	ldrsh.w	lr, [r4]
 8018fdc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8018fe0:	4576      	cmp	r6, lr
 8018fe2:	dc22      	bgt.n	801902a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018fe4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018fe8:	44f4      	add	ip, lr
 8018fea:	fa0f fc8c 	sxth.w	ip, ip
 8018fee:	45e0      	cmp	r8, ip
 8018ff0:	db1b      	blt.n	801902a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018ff2:	428f      	cmp	r7, r1
 8018ff4:	fa1f fc81 	uxth.w	ip, r1
 8018ff8:	88e1      	ldrh	r1, [r4, #6]
 8018ffa:	dc0d      	bgt.n	8019018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8018ffc:	ebaa 0c0c 	sub.w	ip, sl, ip
 8019000:	eba1 010c 	sub.w	r1, r1, ip
 8019004:	f8a4 9002 	strh.w	r9, [r4, #2]
 8019008:	80e1      	strh	r1, [r4, #6]
 801900a:	4628      	mov	r0, r5
 801900c:	9904      	ldr	r1, [sp, #16]
 801900e:	3901      	subs	r1, #1
 8019010:	9104      	str	r1, [sp, #16]
 8019012:	3c08      	subs	r4, #8
 8019014:	4605      	mov	r5, r0
 8019016:	e7d3      	b.n	8018fc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8019018:	4461      	add	r1, ip
 801901a:	b209      	sxth	r1, r1
 801901c:	4549      	cmp	r1, r9
 801901e:	dcf5      	bgt.n	801900c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8019020:	eba2 0c0c 	sub.w	ip, r2, ip
 8019024:	f8a4 c006 	strh.w	ip, [r4, #6]
 8019028:	e7ef      	b.n	801900a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801902a:	428f      	cmp	r7, r1
 801902c:	dcee      	bgt.n	801900c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801902e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8019032:	4461      	add	r1, ip
 8019034:	b209      	sxth	r1, r1
 8019036:	4589      	cmp	r9, r1
 8019038:	dbe8      	blt.n	801900c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801903a:	4576      	cmp	r6, lr
 801903c:	fa1f fc8e 	uxth.w	ip, lr
 8019040:	88a1      	ldrh	r1, [r4, #4]
 8019042:	dc07      	bgt.n	8019054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8019044:	eba3 0c0c 	sub.w	ip, r3, ip
 8019048:	eba1 010c 	sub.w	r1, r1, ip
 801904c:	f8a4 8000 	strh.w	r8, [r4]
 8019050:	80a1      	strh	r1, [r4, #4]
 8019052:	e7da      	b.n	801900a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8019054:	4461      	add	r1, ip
 8019056:	b209      	sxth	r1, r1
 8019058:	4588      	cmp	r8, r1
 801905a:	dbd7      	blt.n	801900c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801905c:	9905      	ldr	r1, [sp, #20]
 801905e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019062:	f8a4 c004 	strh.w	ip, [r4, #4]
 8019066:	e7d0      	b.n	801900a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8019068:	2001384a 	.word	0x2001384a
 801906c:	20013848 	.word	0x20013848
 8019070:	2d00      	cmp	r5, #0
 8019072:	f000 816d 	beq.w	8019350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8019076:	9b06      	ldr	r3, [sp, #24]
 8019078:	445b      	add	r3, fp
 801907a:	461c      	mov	r4, r3
 801907c:	9b02      	ldr	r3, [sp, #8]
 801907e:	3301      	adds	r3, #1
 8019080:	f000 8166 	beq.w	8019350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8019084:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8019088:	4629      	mov	r1, r5
 801908a:	9803      	ldr	r0, [sp, #12]
 801908c:	f7ff fccc 	bl	8018a28 <_ZNK8touchgfx4Rect8includesERKS0_>
 8019090:	b120      	cbz	r0, 801909c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8019092:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019096:	9801      	ldr	r0, [sp, #4]
 8019098:	f7ff feb0 	bl	8018dfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801909c:	9903      	ldr	r1, [sp, #12]
 801909e:	4628      	mov	r0, r5
 80190a0:	f7ff fc4f 	bl	8018942 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80190a4:	2800      	cmp	r0, #0
 80190a6:	f000 809c 	beq.w	80191e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80190aa:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80190ae:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80190b2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80190b6:	9309      	str	r3, [sp, #36]	; 0x24
 80190b8:	fa1f f189 	uxth.w	r1, r9
 80190bc:	eb01 0c03 	add.w	ip, r1, r3
 80190c0:	fa1f fa8c 	uxth.w	sl, ip
 80190c4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80190c8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80190cc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80190d0:	b283      	uxth	r3, r0
 80190d2:	eb03 050c 	add.w	r5, r3, ip
 80190d6:	b2ad      	uxth	r5, r5
 80190d8:	9505      	str	r5, [sp, #20]
 80190da:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80190de:	9504      	str	r5, [sp, #16]
 80190e0:	4548      	cmp	r0, r9
 80190e2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80190e6:	f340 8099 	ble.w	801921c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80190ea:	1a5b      	subs	r3, r3, r1
 80190ec:	b29b      	uxth	r3, r3
 80190ee:	4596      	cmp	lr, r2
 80190f0:	fa0f f08a 	sxth.w	r0, sl
 80190f4:	b21e      	sxth	r6, r3
 80190f6:	dd2e      	ble.n	8019156 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80190f8:	9f02      	ldr	r7, [sp, #8]
 80190fa:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80190fe:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8019102:	9f04      	ldr	r7, [sp, #16]
 8019104:	1a3f      	subs	r7, r7, r0
 8019106:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801910a:	fa1f fe8e 	uxth.w	lr, lr
 801910e:	b292      	uxth	r2, r2
 8019110:	ebae 0102 	sub.w	r1, lr, r2
 8019114:	44a6      	add	lr, r4
 8019116:	4402      	add	r2, r0
 8019118:	b289      	uxth	r1, r1
 801911a:	fa0f fe8e 	sxth.w	lr, lr
 801911e:	b212      	sxth	r2, r2
 8019120:	b20d      	sxth	r5, r1
 8019122:	ebae 0202 	sub.w	r2, lr, r2
 8019126:	436f      	muls	r7, r5
 8019128:	4372      	muls	r2, r6
 801912a:	4297      	cmp	r7, r2
 801912c:	db09      	blt.n	8019142 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801912e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8019132:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8019136:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801913a:	449c      	add	ip, r3
 801913c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8019140:	e686      	b.n	8018e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019142:	4421      	add	r1, r4
 8019144:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8019148:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801914c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8019150:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019154:	e67c      	b.n	8018e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019156:	9f04      	ldr	r7, [sp, #16]
 8019158:	42b8      	cmp	r0, r7
 801915a:	da27      	bge.n	80191ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801915c:	9902      	ldr	r1, [sp, #8]
 801915e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8019162:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8019166:	eb05 010e 	add.w	r1, r5, lr
 801916a:	fa1f f881 	uxth.w	r8, r1
 801916e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8019172:	4411      	add	r1, r2
 8019174:	eba1 0108 	sub.w	r1, r1, r8
 8019178:	b289      	uxth	r1, r1
 801917a:	fa0f f988 	sxth.w	r9, r8
 801917e:	eba2 020e 	sub.w	r2, r2, lr
 8019182:	fa0f f881 	sxth.w	r8, r1
 8019186:	1a3f      	subs	r7, r7, r0
 8019188:	4372      	muls	r2, r6
 801918a:	fb08 f707 	mul.w	r7, r8, r7
 801918e:	42ba      	cmp	r2, r7
 8019190:	dc06      	bgt.n	80191a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8019192:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8019196:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801919a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801919e:	e7ca      	b.n	8019136 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80191a0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80191a4:	4429      	add	r1, r5
 80191a6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80191aa:	e651      	b.n	8018e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80191ac:	9805      	ldr	r0, [sp, #20]
 80191ae:	ebaa 0000 	sub.w	r0, sl, r0
 80191b2:	b280      	uxth	r0, r0
 80191b4:	2d06      	cmp	r5, #6
 80191b6:	fa0f fe80 	sxth.w	lr, r0
 80191ba:	d817      	bhi.n	80191ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80191bc:	9b04      	ldr	r3, [sp, #16]
 80191be:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80191c2:	1c6b      	adds	r3, r5, #1
 80191c4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80191c8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80191cc:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80191d0:	9b01      	ldr	r3, [sp, #4]
 80191d2:	9801      	ldr	r0, [sp, #4]
 80191d4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80191d8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80191dc:	805a      	strh	r2, [r3, #2]
 80191de:	809e      	strh	r6, [r3, #4]
 80191e0:	80d9      	strh	r1, [r3, #6]
 80191e2:	9b02      	ldr	r3, [sp, #8]
 80191e4:	3b01      	subs	r3, #1
 80191e6:	9302      	str	r3, [sp, #8]
 80191e8:	3c08      	subs	r4, #8
 80191ea:	e747      	b.n	801907c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80191ec:	9a02      	ldr	r2, [sp, #8]
 80191ee:	45b6      	cmp	lr, r6
 80191f0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80191f4:	db0d      	blt.n	8019212 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80191f6:	449c      	add	ip, r3
 80191f8:	fa1f fc8c 	uxth.w	ip, ip
 80191fc:	445a      	add	r2, fp
 80191fe:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8019202:	448c      	add	ip, r1
 8019204:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8019208:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801920c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8019210:	e61e      	b.n	8018e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019212:	445a      	add	r2, fp
 8019214:	4484      	add	ip, r0
 8019216:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801921a:	e78f      	b.n	801913c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801921c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8019220:	fa1f f18e 	uxth.w	r1, lr
 8019224:	eb01 0806 	add.w	r8, r1, r6
 8019228:	b293      	uxth	r3, r2
 801922a:	fa1f f888 	uxth.w	r8, r8
 801922e:	9306      	str	r3, [sp, #24]
 8019230:	fa0f f388 	sxth.w	r3, r8
 8019234:	9307      	str	r3, [sp, #28]
 8019236:	9f06      	ldr	r7, [sp, #24]
 8019238:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801923c:	443b      	add	r3, r7
 801923e:	b29b      	uxth	r3, r3
 8019240:	4596      	cmp	lr, r2
 8019242:	9308      	str	r3, [sp, #32]
 8019244:	da24      	bge.n	8019290 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8019246:	9905      	ldr	r1, [sp, #20]
 8019248:	eba3 0308 	sub.w	r3, r3, r8
 801924c:	ebaa 0401 	sub.w	r4, sl, r1
 8019250:	b2a4      	uxth	r4, r4
 8019252:	b29b      	uxth	r3, r3
 8019254:	b225      	sxth	r5, r4
 8019256:	b219      	sxth	r1, r3
 8019258:	eba2 020e 	sub.w	r2, r2, lr
 801925c:	eba9 0000 	sub.w	r0, r9, r0
 8019260:	436a      	muls	r2, r5
 8019262:	4348      	muls	r0, r1
 8019264:	4282      	cmp	r2, r0
 8019266:	9a02      	ldr	r2, [sp, #8]
 8019268:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801926c:	445a      	add	r2, fp
 801926e:	dc06      	bgt.n	801927e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8019270:	9b07      	ldr	r3, [sp, #28]
 8019272:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8019276:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801927a:	44a4      	add	ip, r4
 801927c:	e75e      	b.n	801913c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801927e:	9904      	ldr	r1, [sp, #16]
 8019280:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8019284:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8019288:	4433      	add	r3, r6
 801928a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801928e:	e5df      	b.n	8018e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019290:	9f06      	ldr	r7, [sp, #24]
 8019292:	9b04      	ldr	r3, [sp, #16]
 8019294:	1bc9      	subs	r1, r1, r7
 8019296:	fa0f f78a 	sxth.w	r7, sl
 801929a:	b289      	uxth	r1, r1
 801929c:	429f      	cmp	r7, r3
 801929e:	fa0f fe81 	sxth.w	lr, r1
 80192a2:	dd23      	ble.n	80192ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80192a4:	9a05      	ldr	r2, [sp, #20]
 80192a6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80192aa:	9d07      	ldr	r5, [sp, #28]
 80192ac:	ebaa 0202 	sub.w	r2, sl, r2
 80192b0:	b292      	uxth	r2, r2
 80192b2:	eba5 0a03 	sub.w	sl, r5, r3
 80192b6:	b214      	sxth	r4, r2
 80192b8:	eba9 0000 	sub.w	r0, r9, r0
 80192bc:	9b02      	ldr	r3, [sp, #8]
 80192be:	fb0e f000 	mul.w	r0, lr, r0
 80192c2:	fb04 fa0a 	mul.w	sl, r4, sl
 80192c6:	00db      	lsls	r3, r3, #3
 80192c8:	4550      	cmp	r0, sl
 80192ca:	445b      	add	r3, fp
 80192cc:	db03      	blt.n	80192d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80192ce:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80192d2:	4494      	add	ip, r2
 80192d4:	e732      	b.n	801913c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80192d6:	9a04      	ldr	r2, [sp, #16]
 80192d8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80192dc:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80192e0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80192e4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80192e8:	4431      	add	r1, r6
 80192ea:	e75c      	b.n	80191a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80192ec:	9b08      	ldr	r3, [sp, #32]
 80192ee:	eba3 0308 	sub.w	r3, r3, r8
 80192f2:	b29b      	uxth	r3, r3
 80192f4:	2d06      	cmp	r5, #6
 80192f6:	b218      	sxth	r0, r3
 80192f8:	d813      	bhi.n	8019322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80192fa:	9b07      	ldr	r3, [sp, #28]
 80192fc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8019300:	1c6b      	adds	r3, r5, #1
 8019302:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8019306:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801930a:	9b01      	ldr	r3, [sp, #4]
 801930c:	9901      	ldr	r1, [sp, #4]
 801930e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019312:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8019316:	805a      	strh	r2, [r3, #2]
 8019318:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801931a:	809a      	strh	r2, [r3, #4]
 801931c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8019320:	e75f      	b.n	80191e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8019322:	9c02      	ldr	r4, [sp, #8]
 8019324:	4570      	cmp	r0, lr
 8019326:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801932a:	db0d      	blt.n	8019348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801932c:	4431      	add	r1, r6
 801932e:	9b06      	ldr	r3, [sp, #24]
 8019330:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8019334:	b289      	uxth	r1, r1
 8019336:	445c      	add	r4, fp
 8019338:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801933c:	4419      	add	r1, r3
 801933e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8019342:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8019346:	e583      	b.n	8018e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019348:	445c      	add	r4, fp
 801934a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801934e:	e79b      	b.n	8019288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8019350:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8019354:	1e65      	subs	r5, r4, #1
 8019356:	b2ad      	uxth	r5, r5
 8019358:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801935c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8019360:	42b5      	cmp	r5, r6
 8019362:	d044      	beq.n	80193ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8019364:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8019368:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801936c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019370:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8019374:	4282      	cmp	r2, r0
 8019376:	d11f      	bne.n	80193b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019378:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801937c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019380:	459c      	cmp	ip, r3
 8019382:	d119      	bne.n	80193b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019384:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8019388:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801938c:	19d8      	adds	r0, r3, r7
 801938e:	b200      	sxth	r0, r0
 8019390:	4288      	cmp	r0, r1
 8019392:	d109      	bne.n	80193a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8019394:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8019398:	4413      	add	r3, r2
 801939a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801939e:	4629      	mov	r1, r5
 80193a0:	9801      	ldr	r0, [sp, #4]
 80193a2:	f7ff fd2b 	bl	8018dfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80193a6:	e003      	b.n	80193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80193a8:	4411      	add	r1, r2
 80193aa:	b209      	sxth	r1, r1
 80193ac:	42b9      	cmp	r1, r7
 80193ae:	d0f3      	beq.n	8019398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80193b0:	3d01      	subs	r5, #1
 80193b2:	b2ad      	uxth	r5, r5
 80193b4:	3c08      	subs	r4, #8
 80193b6:	e7d3      	b.n	8019360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80193b8:	42b9      	cmp	r1, r7
 80193ba:	d1f9      	bne.n	80193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80193bc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80193c0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80193c4:	4299      	cmp	r1, r3
 80193c6:	d1f3      	bne.n	80193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80193c8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80193cc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80193d0:	181f      	adds	r7, r3, r0
 80193d2:	b23f      	sxth	r7, r7
 80193d4:	42ba      	cmp	r2, r7
 80193d6:	d105      	bne.n	80193e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80193d8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80193dc:	440b      	add	r3, r1
 80193de:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80193e2:	e7dc      	b.n	801939e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80193e4:	440a      	add	r2, r1
 80193e6:	b212      	sxth	r2, r2
 80193e8:	4290      	cmp	r0, r2
 80193ea:	d1e1      	bne.n	80193b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80193ec:	e7f6      	b.n	80193dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80193ee:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80193f2:	2e07      	cmp	r6, #7
 80193f4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80193f8:	d812      	bhi.n	8019420 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80193fa:	1c75      	adds	r5, r6, #1
 80193fc:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8019400:	9d01      	ldr	r5, [sp, #4]
 8019402:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8019406:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801940a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801940e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8019412:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8019416:	442c      	add	r4, r5
 8019418:	8061      	strh	r1, [r4, #2]
 801941a:	80a2      	strh	r2, [r4, #4]
 801941c:	80e3      	strh	r3, [r4, #6]
 801941e:	e581      	b.n	8018f24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019420:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8019424:	3e01      	subs	r6, #1
 8019426:	445c      	add	r4, fp
 8019428:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801942c:	f04f 37ff 	mov.w	r7, #4294967295
 8019430:	2500      	movs	r5, #0
 8019432:	9305      	str	r3, [sp, #20]
 8019434:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019438:	9302      	str	r3, [sp, #8]
 801943a:	1e72      	subs	r2, r6, #1
 801943c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019440:	9304      	str	r3, [sp, #16]
 8019442:	4691      	mov	r9, r2
 8019444:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8019448:	f1b9 3fff 	cmp.w	r9, #4294967295
 801944c:	bf14      	ite	ne
 801944e:	9905      	ldrne	r1, [sp, #20]
 8019450:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8019454:	6818      	ldr	r0, [r3, #0]
 8019456:	9207      	str	r2, [sp, #28]
 8019458:	bf18      	it	ne
 801945a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801945e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8019462:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8019466:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801946a:	9306      	str	r3, [sp, #24]
 801946c:	fb18 f801 	smulbb	r8, r8, r1
 8019470:	6859      	ldr	r1, [r3, #4]
 8019472:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019476:	4671      	mov	r1, lr
 8019478:	a80c      	add	r0, sp, #48	; 0x30
 801947a:	f7ff fafb 	bl	8018a74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801947e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8019482:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8019486:	9b04      	ldr	r3, [sp, #16]
 8019488:	9a02      	ldr	r2, [sp, #8]
 801948a:	fb10 f001 	smulbb	r0, r0, r1
 801948e:	fb02 8803 	mla	r8, r2, r3, r8
 8019492:	eba0 0108 	sub.w	r1, r0, r8
 8019496:	f04f 0c08 	mov.w	ip, #8
 801949a:	fb90 f0fc 	sdiv	r0, r0, ip
 801949e:	4288      	cmp	r0, r1
 80194a0:	dc20      	bgt.n	80194e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80194a2:	4551      	cmp	r1, sl
 80194a4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80194a8:	da03      	bge.n	80194b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80194aa:	b1d9      	cbz	r1, 80194e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80194ac:	468a      	mov	sl, r1
 80194ae:	464f      	mov	r7, r9
 80194b0:	4635      	mov	r5, r6
 80194b2:	f109 39ff 	add.w	r9, r9, #4294967295
 80194b6:	f119 0f02 	cmn.w	r9, #2
 80194ba:	d1c5      	bne.n	8019448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80194bc:	4616      	mov	r6, r2
 80194be:	3201      	adds	r2, #1
 80194c0:	f1a4 0408 	sub.w	r4, r4, #8
 80194c4:	d1b6      	bne.n	8019434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80194c6:	9b01      	ldr	r3, [sp, #4]
 80194c8:	b2ac      	uxth	r4, r5
 80194ca:	00ed      	lsls	r5, r5, #3
 80194cc:	1958      	adds	r0, r3, r5
 80194ce:	1c7b      	adds	r3, r7, #1
 80194d0:	d10b      	bne.n	80194ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80194d2:	4601      	mov	r1, r0
 80194d4:	9803      	ldr	r0, [sp, #12]
 80194d6:	f7ff facd 	bl	8018a74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80194da:	4621      	mov	r1, r4
 80194dc:	9801      	ldr	r0, [sp, #4]
 80194de:	f7ff fc8d 	bl	8018dfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80194e2:	e4b5      	b.n	8018e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80194e4:	464f      	mov	r7, r9
 80194e6:	4635      	mov	r5, r6
 80194e8:	e7ed      	b.n	80194c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80194ea:	9b01      	ldr	r3, [sp, #4]
 80194ec:	00ff      	lsls	r7, r7, #3
 80194ee:	19d9      	adds	r1, r3, r7
 80194f0:	f7ff fac0 	bl	8018a74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80194f4:	9b03      	ldr	r3, [sp, #12]
 80194f6:	cb03      	ldmia	r3!, {r0, r1}
 80194f8:	445f      	add	r7, fp
 80194fa:	445d      	add	r5, fp
 80194fc:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8019500:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8019504:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8019508:	9b03      	ldr	r3, [sp, #12]
 801950a:	6869      	ldr	r1, [r5, #4]
 801950c:	c303      	stmia	r3!, {r0, r1}
 801950e:	e7e4      	b.n	80194da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08019510 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8019510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019514:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8019518:	b09b      	sub	sp, #108	; 0x6c
 801951a:	4604      	mov	r4, r0
 801951c:	4630      	mov	r0, r6
 801951e:	f7f9 fbe0 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019522:	4605      	mov	r5, r0
 8019524:	b948      	cbnz	r0, 801953a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8019526:	6823      	ldr	r3, [r4, #0]
 8019528:	e896 0006 	ldmia.w	r6, {r1, r2}
 801952c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801952e:	4620      	mov	r0, r4
 8019530:	4798      	blx	r3
 8019532:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8019536:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801953a:	4bc6      	ldr	r3, [pc, #792]	; (8019854 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801953c:	681b      	ldr	r3, [r3, #0]
 801953e:	2b00      	cmp	r3, #0
 8019540:	d03f      	beq.n	80195c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019542:	4dc5      	ldr	r5, [pc, #788]	; (8019858 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8019544:	4628      	mov	r0, r5
 8019546:	f7f9 fbcc 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801954a:	4606      	mov	r6, r0
 801954c:	2800      	cmp	r0, #0
 801954e:	d138      	bne.n	80195c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019550:	4628      	mov	r0, r5
 8019552:	f7ff f907 	bl	8018764 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019556:	6823      	ldr	r3, [r4, #0]
 8019558:	6829      	ldr	r1, [r5, #0]
 801955a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801955c:	686a      	ldr	r2, [r5, #4]
 801955e:	4620      	mov	r0, r4
 8019560:	4798      	blx	r3
 8019562:	802e      	strh	r6, [r5, #0]
 8019564:	806e      	strh	r6, [r5, #2]
 8019566:	80ae      	strh	r6, [r5, #4]
 8019568:	80ee      	strh	r6, [r5, #6]
 801956a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801956e:	4dbb      	ldr	r5, [pc, #748]	; (801985c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8019570:	4640      	mov	r0, r8
 8019572:	f7ff fbeb 	bl	8018d4c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019576:	882e      	ldrh	r6, [r5, #0]
 8019578:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801957c:	4633      	mov	r3, r6
 801957e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8019582:	42bb      	cmp	r3, r7
 8019584:	d224      	bcs.n	80195d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019586:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801958a:	2907      	cmp	r1, #7
 801958c:	d816      	bhi.n	80195bc <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801958e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8019592:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8019596:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801959a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801959e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80195a2:	1c4a      	adds	r2, r1, #1
 80195a4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80195a8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80195ac:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80195b0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80195b4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80195b8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80195bc:	3301      	adds	r3, #1
 80195be:	b29b      	uxth	r3, r3
 80195c0:	e7df      	b.n	8019582 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80195c2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80195c6:	2b00      	cmp	r3, #0
 80195c8:	d1cf      	bne.n	801956a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80195ca:	b01b      	add	sp, #108	; 0x6c
 80195cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80195d0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80195d4:	42b3      	cmp	r3, r6
 80195d6:	d90c      	bls.n	80195f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80195d8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80195dc:	6822      	ldr	r2, [r4, #0]
 80195de:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80195e2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80195e4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80195e8:	4620      	mov	r0, r4
 80195ea:	3601      	adds	r6, #1
 80195ec:	47b8      	blx	r7
 80195ee:	b2b6      	uxth	r6, r6
 80195f0:	e7ee      	b.n	80195d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80195f2:	4a9b      	ldr	r2, [pc, #620]	; (8019860 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80195f4:	6813      	ldr	r3, [r2, #0]
 80195f6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80195fa:	2b01      	cmp	r3, #1
 80195fc:	4691      	mov	r9, r2
 80195fe:	f040 80e2 	bne.w	80197c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8019602:	8829      	ldrh	r1, [r5, #0]
 8019604:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8019608:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801960c:	33ae      	adds	r3, #174	; 0xae
 801960e:	2600      	movs	r6, #0
 8019610:	428f      	cmp	r7, r1
 8019612:	f103 0308 	add.w	r3, r3, #8
 8019616:	dd0a      	ble.n	801962e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8019618:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801961c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8019620:	4402      	add	r2, r0
 8019622:	b212      	sxth	r2, r2
 8019624:	4296      	cmp	r6, r2
 8019626:	bfb8      	it	lt
 8019628:	4616      	movlt	r6, r2
 801962a:	3101      	adds	r1, #1
 801962c:	e7f0      	b.n	8019610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801962e:	4b8d      	ldr	r3, [pc, #564]	; (8019864 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8019630:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8019860 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8019634:	881b      	ldrh	r3, [r3, #0]
 8019636:	2b0f      	cmp	r3, #15
 8019638:	bf88      	it	hi
 801963a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801963e:	f04f 0300 	mov.w	r3, #0
 8019642:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8019646:	bf98      	it	ls
 8019648:	f04f 0b01 	movls.w	fp, #1
 801964c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8019650:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8019654:	4b82      	ldr	r3, [pc, #520]	; (8019860 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019656:	4438      	add	r0, r7
 8019658:	b207      	sxth	r7, r0
 801965a:	6818      	ldr	r0, [r3, #0]
 801965c:	42b7      	cmp	r7, r6
 801965e:	6803      	ldr	r3, [r0, #0]
 8019660:	f280 8083 	bge.w	801976a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8019664:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019668:	4798      	blx	r3
 801966a:	eb07 030b 	add.w	r3, r7, fp
 801966e:	4298      	cmp	r0, r3
 8019670:	da07      	bge.n	8019682 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019672:	42b0      	cmp	r0, r6
 8019674:	da05      	bge.n	8019682 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019676:	4287      	cmp	r7, r0
 8019678:	dd6c      	ble.n	8019754 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801967a:	2f00      	cmp	r7, #0
 801967c:	dd6a      	ble.n	8019754 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801967e:	4630      	mov	r0, r6
 8019680:	e004      	b.n	801968c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8019682:	4287      	cmp	r7, r0
 8019684:	dcfb      	bgt.n	801967e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8019686:	42b0      	cmp	r0, r6
 8019688:	bfa8      	it	ge
 801968a:	4630      	movge	r0, r6
 801968c:	4b76      	ldr	r3, [pc, #472]	; (8019868 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801968e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8019692:	1bc0      	subs	r0, r0, r7
 8019694:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019698:	882f      	ldrh	r7, [r5, #0]
 801969a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801969e:	2200      	movs	r2, #0
 80196a0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80196a4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80196a8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80196ac:	42bb      	cmp	r3, r7
 80196ae:	d9cd      	bls.n	801964c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80196b0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80196b4:	ab07      	add	r3, sp, #28
 80196b6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80196ba:	6851      	ldr	r1, [r2, #4]
 80196bc:	c303      	stmia	r3!, {r0, r1}
 80196be:	a905      	add	r1, sp, #20
 80196c0:	a807      	add	r0, sp, #28
 80196c2:	f7ff f93e 	bl	8018942 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80196c6:	2800      	cmp	r0, #0
 80196c8:	d04c      	beq.n	8019764 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80196ca:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80196ce:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80196d2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80196d6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80196da:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80196de:	9302      	str	r3, [sp, #8]
 80196e0:	4686      	mov	lr, r0
 80196e2:	4290      	cmp	r0, r2
 80196e4:	4450      	add	r0, sl
 80196e6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80196ea:	bfb8      	it	lt
 80196ec:	4696      	movlt	lr, r2
 80196ee:	4452      	add	r2, sl
 80196f0:	4299      	cmp	r1, r3
 80196f2:	b280      	uxth	r0, r0
 80196f4:	b292      	uxth	r2, r2
 80196f6:	468c      	mov	ip, r1
 80196f8:	fa0f fa82 	sxth.w	sl, r2
 80196fc:	bfb8      	it	lt
 80196fe:	469c      	movlt	ip, r3
 8019700:	b203      	sxth	r3, r0
 8019702:	4553      	cmp	r3, sl
 8019704:	bfb8      	it	lt
 8019706:	4602      	movlt	r2, r0
 8019708:	eba2 020e 	sub.w	r2, r2, lr
 801970c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019710:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019714:	9b02      	ldr	r3, [sp, #8]
 8019716:	f8ad e01c 	strh.w	lr, [sp, #28]
 801971a:	4411      	add	r1, r2
 801971c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019720:	f8ad c01e 	strh.w	ip, [sp, #30]
 8019724:	4413      	add	r3, r2
 8019726:	b289      	uxth	r1, r1
 8019728:	b29b      	uxth	r3, r3
 801972a:	b208      	sxth	r0, r1
 801972c:	b21a      	sxth	r2, r3
 801972e:	4290      	cmp	r0, r2
 8019730:	bfb8      	it	lt
 8019732:	460b      	movlt	r3, r1
 8019734:	eba3 030c 	sub.w	r3, r3, ip
 8019738:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801973c:	a807      	add	r0, sp, #28
 801973e:	f7f9 fad0 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019742:	b920      	cbnz	r0, 801974e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8019744:	6823      	ldr	r3, [r4, #0]
 8019746:	a907      	add	r1, sp, #28
 8019748:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801974a:	4620      	mov	r0, r4
 801974c:	4798      	blx	r3
 801974e:	3701      	adds	r7, #1
 8019750:	b2bf      	uxth	r7, r7
 8019752:	e7a9      	b.n	80196a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8019754:	f8d9 0000 	ldr.w	r0, [r9]
 8019758:	6803      	ldr	r3, [r0, #0]
 801975a:	2101      	movs	r1, #1
 801975c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8019760:	4798      	blx	r3
 8019762:	e773      	b.n	801964c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019764:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8019768:	e7e8      	b.n	801973c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801976a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801976c:	4798      	blx	r3
 801976e:	4b3f      	ldr	r3, [pc, #252]	; (801986c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8019770:	781b      	ldrb	r3, [r3, #0]
 8019772:	2b00      	cmp	r3, #0
 8019774:	f43f af29 	beq.w	80195ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019778:	2300      	movs	r3, #0
 801977a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801977e:	882b      	ldrh	r3, [r5, #0]
 8019780:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019784:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8019788:	42ab      	cmp	r3, r5
 801978a:	f4bf af1e 	bcs.w	80195ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801978e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8019792:	2907      	cmp	r1, #7
 8019794:	d814      	bhi.n	80197c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8019796:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801979a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801979e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80197a2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80197a6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80197aa:	1c4a      	adds	r2, r1, #1
 80197ac:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80197b0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80197b4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80197b8:	f8a2 c002 	strh.w	ip, [r2, #2]
 80197bc:	8097      	strh	r7, [r2, #4]
 80197be:	80d6      	strh	r6, [r2, #6]
 80197c0:	3301      	adds	r3, #1
 80197c2:	b29b      	uxth	r3, r3
 80197c4:	e7e0      	b.n	8019788 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80197c6:	2b02      	cmp	r3, #2
 80197c8:	f040 8133 	bne.w	8019a32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80197cc:	4b28      	ldr	r3, [pc, #160]	; (8019870 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80197ce:	781b      	ldrb	r3, [r3, #0]
 80197d0:	2b01      	cmp	r3, #1
 80197d2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80197d6:	f000 8098 	beq.w	801990a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80197da:	882a      	ldrh	r2, [r5, #0]
 80197dc:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80197e0:	3201      	adds	r2, #1
 80197e2:	b292      	uxth	r2, r2
 80197e4:	2900      	cmp	r1, #0
 80197e6:	d0c2      	beq.n	801976e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80197e8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80197ec:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80197f0:	441e      	add	r6, r3
 80197f2:	b236      	sxth	r6, r6
 80197f4:	4694      	mov	ip, r2
 80197f6:	f04f 0900 	mov.w	r9, #0
 80197fa:	fa1f f38c 	uxth.w	r3, ip
 80197fe:	4299      	cmp	r1, r3
 8019800:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8019804:	f240 80bf 	bls.w	8019986 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8019808:	4427      	add	r7, r4
 801980a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801980e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8019812:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8019816:	4283      	cmp	r3, r0
 8019818:	f340 80a1 	ble.w	801995e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801981c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8019820:	4406      	add	r6, r0
 8019822:	b236      	sxth	r6, r6
 8019824:	429e      	cmp	r6, r3
 8019826:	bfa8      	it	ge
 8019828:	461e      	movge	r6, r3
 801982a:	46e1      	mov	r9, ip
 801982c:	f10c 0c01 	add.w	ip, ip, #1
 8019830:	e7e3      	b.n	80197fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8019832:	d10a      	bne.n	801984a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8019834:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8019838:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801983c:	4562      	cmp	r2, ip
 801983e:	bfb8      	it	lt
 8019840:	4662      	movlt	r2, ip
 8019842:	4288      	cmp	r0, r1
 8019844:	bfb8      	it	lt
 8019846:	461f      	movlt	r7, r3
 8019848:	e087      	b.n	801995a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801984a:	428a      	cmp	r2, r1
 801984c:	bfb8      	it	lt
 801984e:	460a      	movlt	r2, r1
 8019850:	e083      	b.n	801995a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8019852:	bf00      	nop
 8019854:	20013894 	.word	0x20013894
 8019858:	200138a0 	.word	0x200138a0
 801985c:	2000008c 	.word	0x2000008c
 8019860:	20013854 	.word	0x20013854
 8019864:	2001384a 	.word	0x2001384a
 8019868:	20013848 	.word	0x20013848
 801986c:	20013852 	.word	0x20013852
 8019870:	2001384c 	.word	0x2001384c
 8019874:	19a1      	adds	r1, r4, r6
 8019876:	ab07      	add	r3, sp, #28
 8019878:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801987c:	6849      	ldr	r1, [r1, #4]
 801987e:	c303      	stmia	r3!, {r0, r1}
 8019880:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019884:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019888:	2b13      	cmp	r3, #19
 801988a:	bfd8      	it	le
 801988c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8019890:	f8ad 201c 	strh.w	r2, [sp, #28]
 8019894:	440b      	add	r3, r1
 8019896:	1a9b      	subs	r3, r3, r2
 8019898:	a807      	add	r0, sp, #28
 801989a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801989e:	f7fe ff7b 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80198a2:	a807      	add	r0, sp, #28
 80198a4:	f7f9 fa1d 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80198a8:	bb78      	cbnz	r0, 801990a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80198aa:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80198ae:	f8d9 0000 	ldr.w	r0, [r9]
 80198b2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80198b6:	f8d0 e000 	ldr.w	lr, [r0]
 80198ba:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80198be:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80198c2:	f1bc 0f14 	cmp.w	ip, #20
 80198c6:	bfa8      	it	ge
 80198c8:	f04f 0c14 	movge.w	ip, #20
 80198cc:	fa1f fc8c 	uxth.w	ip, ip
 80198d0:	f8cd c000 	str.w	ip, [sp]
 80198d4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80198d8:	47d8      	blx	fp
 80198da:	4683      	mov	fp, r0
 80198dc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80198e0:	a807      	add	r0, sp, #28
 80198e2:	f7fe ff3f 	bl	8018764 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80198e6:	6823      	ldr	r3, [r4, #0]
 80198e8:	4426      	add	r6, r4
 80198ea:	4620      	mov	r0, r4
 80198ec:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80198ee:	a907      	add	r1, sp, #28
 80198f0:	4798      	blx	r3
 80198f2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80198f6:	eba0 000b 	sub.w	r0, r0, fp
 80198fa:	b200      	sxth	r0, r0
 80198fc:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8019900:	b918      	cbnz	r0, 801990a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8019902:	b2b9      	uxth	r1, r7
 8019904:	4650      	mov	r0, sl
 8019906:	f7ff fa79 	bl	8018dfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801990a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801990e:	f1bb 0f00 	cmp.w	fp, #0
 8019912:	f43f af2c 	beq.w	801976e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019916:	882b      	ldrh	r3, [r5, #0]
 8019918:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801991c:	3301      	adds	r3, #1
 801991e:	b29b      	uxth	r3, r3
 8019920:	2700      	movs	r7, #0
 8019922:	b299      	uxth	r1, r3
 8019924:	458b      	cmp	fp, r1
 8019926:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801992a:	d9a3      	bls.n	8019874 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801992c:	4426      	add	r6, r4
 801992e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8019932:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8019936:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801993a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801993e:	4408      	add	r0, r1
 8019940:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8019944:	4461      	add	r1, ip
 8019946:	b200      	sxth	r0, r0
 8019948:	b209      	sxth	r1, r1
 801994a:	4288      	cmp	r0, r1
 801994c:	f6bf af71 	bge.w	8019832 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8019950:	4584      	cmp	ip, r0
 8019952:	4662      	mov	r2, ip
 8019954:	461f      	mov	r7, r3
 8019956:	bfb8      	it	lt
 8019958:	4602      	movlt	r2, r0
 801995a:	3301      	adds	r3, #1
 801995c:	e7e1      	b.n	8019922 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801995e:	d10e      	bne.n	801997e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8019960:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8019964:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8019968:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801996c:	4473      	add	r3, lr
 801996e:	b21b      	sxth	r3, r3
 8019970:	429e      	cmp	r6, r3
 8019972:	bfa8      	it	ge
 8019974:	461e      	movge	r6, r3
 8019976:	4287      	cmp	r7, r0
 8019978:	bfb8      	it	lt
 801997a:	46e1      	movlt	r9, ip
 801997c:	e756      	b.n	801982c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801997e:	4286      	cmp	r6, r0
 8019980:	bfa8      	it	ge
 8019982:	4606      	movge	r6, r0
 8019984:	e752      	b.n	801982c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8019986:	eb0a 0007 	add.w	r0, sl, r7
 801998a:	4427      	add	r7, r4
 801998c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8019990:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8019994:	f1bb 0f13 	cmp.w	fp, #19
 8019998:	bfde      	ittt	le
 801999a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801999e:	445e      	addle	r6, fp
 80199a0:	b236      	sxthle	r6, r6
 80199a2:	f7f9 f99e 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80199a6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80199aa:	2800      	cmp	r0, #0
 80199ac:	f47f af1a 	bne.w	80197e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80199b0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80199b4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80199b8:	482a      	ldr	r0, [pc, #168]	; (8019a64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80199ba:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 80199be:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 80199c2:	6800      	ldr	r0, [r0, #0]
 80199c4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80199c8:	1ab6      	subs	r6, r6, r2
 80199ca:	2e14      	cmp	r6, #20
 80199cc:	f8ad 201e 	strh.w	r2, [sp, #30]
 80199d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80199d4:	bfa8      	it	ge
 80199d6:	2614      	movge	r6, #20
 80199d8:	f8d0 c000 	ldr.w	ip, [r0]
 80199dc:	b2b6      	uxth	r6, r6
 80199de:	fa1f fb8b 	uxth.w	fp, fp
 80199e2:	455e      	cmp	r6, fp
 80199e4:	bf94      	ite	ls
 80199e6:	9600      	strls	r6, [sp, #0]
 80199e8:	f8cd b000 	strhi.w	fp, [sp]
 80199ec:	b292      	uxth	r2, r2
 80199ee:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80199f2:	b29b      	uxth	r3, r3
 80199f4:	b289      	uxth	r1, r1
 80199f6:	47b0      	blx	r6
 80199f8:	6823      	ldr	r3, [r4, #0]
 80199fa:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80199fe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019a00:	a907      	add	r1, sp, #28
 8019a02:	4620      	mov	r0, r4
 8019a04:	4798      	blx	r3
 8019a06:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8019a0a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8019a0e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8019a12:	1a5b      	subs	r3, r3, r1
 8019a14:	440a      	add	r2, r1
 8019a16:	b21b      	sxth	r3, r3
 8019a18:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8019a1c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8019a20:	2b00      	cmp	r3, #0
 8019a22:	f47f aeda 	bne.w	80197da <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8019a26:	fa1f f189 	uxth.w	r1, r9
 8019a2a:	4650      	mov	r0, sl
 8019a2c:	f7ff f9e6 	bl	8018dfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019a30:	e6d3      	b.n	80197da <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8019a32:	882e      	ldrh	r6, [r5, #0]
 8019a34:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019a38:	42b3      	cmp	r3, r6
 8019a3a:	f67f ae98 	bls.w	801976e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019a3e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8019a42:	ab07      	add	r3, sp, #28
 8019a44:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8019a48:	6851      	ldr	r1, [r2, #4]
 8019a4a:	c303      	stmia	r3!, {r0, r1}
 8019a4c:	a807      	add	r0, sp, #28
 8019a4e:	f7f9 f948 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019a52:	b920      	cbnz	r0, 8019a5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8019a54:	6823      	ldr	r3, [r4, #0]
 8019a56:	a907      	add	r1, sp, #28
 8019a58:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019a5a:	4620      	mov	r0, r4
 8019a5c:	4798      	blx	r3
 8019a5e:	3601      	adds	r6, #1
 8019a60:	b2b6      	uxth	r6, r6
 8019a62:	e7e7      	b.n	8019a34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8019a64:	20013854 	.word	0x20013854

08019a68 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8019a68:	4b03      	ldr	r3, [pc, #12]	; (8019a78 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8019a6a:	2200      	movs	r2, #0
 8019a6c:	801a      	strh	r2, [r3, #0]
 8019a6e:	805a      	strh	r2, [r3, #2]
 8019a70:	809a      	strh	r2, [r3, #4]
 8019a72:	80da      	strh	r2, [r3, #6]
 8019a74:	4770      	bx	lr
 8019a76:	bf00      	nop
 8019a78:	200138a0 	.word	0x200138a0

08019a7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8019a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a80:	4606      	mov	r6, r0
 8019a82:	b09d      	sub	sp, #116	; 0x74
 8019a84:	a803      	add	r0, sp, #12
 8019a86:	4614      	mov	r4, r2
 8019a88:	468a      	mov	sl, r1
 8019a8a:	461d      	mov	r5, r3
 8019a8c:	f000 ff08 	bl	801a8a0 <_ZN8touchgfx12TextProviderC1Ev>
 8019a90:	6833      	ldr	r3, [r6, #0]
 8019a92:	4630      	mov	r0, r6
 8019a94:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019a96:	4798      	blx	r3
 8019a98:	6833      	ldr	r3, [r6, #0]
 8019a9a:	4607      	mov	r7, r0
 8019a9c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019a9e:	4630      	mov	r0, r6
 8019aa0:	4798      	blx	r3
 8019aa2:	462a      	mov	r2, r5
 8019aa4:	9000      	str	r0, [sp, #0]
 8019aa6:	4621      	mov	r1, r4
 8019aa8:	463b      	mov	r3, r7
 8019aaa:	a803      	add	r0, sp, #12
 8019aac:	f000 ff53 	bl	801a956 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019ab0:	2500      	movs	r5, #0
 8019ab2:	462c      	mov	r4, r5
 8019ab4:	46a9      	mov	r9, r5
 8019ab6:	46a8      	mov	r8, r5
 8019ab8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8019abc:	2300      	movs	r3, #0
 8019abe:	9302      	str	r3, [sp, #8]
 8019ac0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8019ac4:	429c      	cmp	r4, r3
 8019ac6:	d002      	beq.n	8019ace <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8019ac8:	455c      	cmp	r4, fp
 8019aca:	bf18      	it	ne
 8019acc:	4625      	movne	r5, r4
 8019ace:	ab02      	add	r3, sp, #8
 8019ad0:	4632      	mov	r2, r6
 8019ad2:	4651      	mov	r1, sl
 8019ad4:	a803      	add	r0, sp, #12
 8019ad6:	f001 fa41 	bl	801af5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019ada:	4604      	mov	r4, r0
 8019adc:	b108      	cbz	r0, 8019ae2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8019ade:	280a      	cmp	r0, #10
 8019ae0:	d10a      	bne.n	8019af8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8019ae2:	45c1      	cmp	r9, r8
 8019ae4:	bf38      	it	cc
 8019ae6:	46c1      	movcc	r9, r8
 8019ae8:	f04f 0800 	mov.w	r8, #0
 8019aec:	2c00      	cmp	r4, #0
 8019aee:	d1e5      	bne.n	8019abc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8019af0:	4648      	mov	r0, r9
 8019af2:	b01d      	add	sp, #116	; 0x74
 8019af4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019af8:	9a02      	ldr	r2, [sp, #8]
 8019afa:	2a00      	cmp	r2, #0
 8019afc:	d0de      	beq.n	8019abc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8019afe:	7b57      	ldrb	r7, [r2, #13]
 8019b00:	6833      	ldr	r3, [r6, #0]
 8019b02:	8894      	ldrh	r4, [r2, #4]
 8019b04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019b06:	007f      	lsls	r7, r7, #1
 8019b08:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8019b0c:	7a97      	ldrb	r7, [r2, #10]
 8019b0e:	4629      	mov	r1, r5
 8019b10:	4307      	orrs	r7, r0
 8019b12:	4630      	mov	r0, r6
 8019b14:	4798      	blx	r3
 8019b16:	4438      	add	r0, r7
 8019b18:	4480      	add	r8, r0
 8019b1a:	fa1f f888 	uxth.w	r8, r8
 8019b1e:	e7e5      	b.n	8019aec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08019b20 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8019b20:	b508      	push	{r3, lr}
 8019b22:	6803      	ldr	r3, [r0, #0]
 8019b24:	68db      	ldr	r3, [r3, #12]
 8019b26:	4798      	blx	r3
 8019b28:	b128      	cbz	r0, 8019b36 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8019b2a:	7b43      	ldrb	r3, [r0, #13]
 8019b2c:	7a80      	ldrb	r0, [r0, #10]
 8019b2e:	005b      	lsls	r3, r3, #1
 8019b30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8019b34:	4318      	orrs	r0, r3
 8019b36:	bd08      	pop	{r3, pc}

08019b38 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8019b38:	b40e      	push	{r1, r2, r3}
 8019b3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019b3c:	b09e      	sub	sp, #120	; 0x78
 8019b3e:	ab23      	add	r3, sp, #140	; 0x8c
 8019b40:	4605      	mov	r5, r0
 8019b42:	f853 4b04 	ldr.w	r4, [r3], #4
 8019b46:	9303      	str	r3, [sp, #12]
 8019b48:	a805      	add	r0, sp, #20
 8019b4a:	f000 fea9 	bl	801a8a0 <_ZN8touchgfx12TextProviderC1Ev>
 8019b4e:	682b      	ldr	r3, [r5, #0]
 8019b50:	4628      	mov	r0, r5
 8019b52:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019b54:	4798      	blx	r3
 8019b56:	682b      	ldr	r3, [r5, #0]
 8019b58:	4606      	mov	r6, r0
 8019b5a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019b5c:	4628      	mov	r0, r5
 8019b5e:	4798      	blx	r3
 8019b60:	4633      	mov	r3, r6
 8019b62:	ae1e      	add	r6, sp, #120	; 0x78
 8019b64:	4621      	mov	r1, r4
 8019b66:	9000      	str	r0, [sp, #0]
 8019b68:	9a03      	ldr	r2, [sp, #12]
 8019b6a:	2400      	movs	r4, #0
 8019b6c:	a805      	add	r0, sp, #20
 8019b6e:	f000 fef2 	bl	801a956 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019b72:	f846 4d68 	str.w	r4, [r6, #-104]!
 8019b76:	462a      	mov	r2, r5
 8019b78:	4633      	mov	r3, r6
 8019b7a:	4621      	mov	r1, r4
 8019b7c:	a805      	add	r0, sp, #20
 8019b7e:	f001 f9ed 	bl	801af5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019b82:	b1f0      	cbz	r0, 8019bc2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8019b84:	280a      	cmp	r0, #10
 8019b86:	d018      	beq.n	8019bba <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019b88:	9f04      	ldr	r7, [sp, #16]
 8019b8a:	b1b7      	cbz	r7, 8019bba <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019b8c:	7b78      	ldrb	r0, [r7, #13]
 8019b8e:	7a3b      	ldrb	r3, [r7, #8]
 8019b90:	88ea      	ldrh	r2, [r5, #6]
 8019b92:	00c1      	lsls	r1, r0, #3
 8019b94:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019b98:	4319      	orrs	r1, r3
 8019b9a:	0643      	lsls	r3, r0, #25
 8019b9c:	bf44      	itt	mi
 8019b9e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8019ba2:	b219      	sxthmi	r1, r3
 8019ba4:	0100      	lsls	r0, r0, #4
 8019ba6:	79fb      	ldrb	r3, [r7, #7]
 8019ba8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8019bac:	4303      	orrs	r3, r0
 8019bae:	4413      	add	r3, r2
 8019bb0:	1a5b      	subs	r3, r3, r1
 8019bb2:	b21b      	sxth	r3, r3
 8019bb4:	429c      	cmp	r4, r3
 8019bb6:	bfb8      	it	lt
 8019bb8:	461c      	movlt	r4, r3
 8019bba:	4633      	mov	r3, r6
 8019bbc:	462a      	mov	r2, r5
 8019bbe:	2100      	movs	r1, #0
 8019bc0:	e7dc      	b.n	8019b7c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8019bc2:	b2a0      	uxth	r0, r4
 8019bc4:	b01e      	add	sp, #120	; 0x78
 8019bc6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019bca:	b003      	add	sp, #12
 8019bcc:	4770      	bx	lr

08019bce <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8019bce:	7a43      	ldrb	r3, [r0, #9]
 8019bd0:	8880      	ldrh	r0, [r0, #4]
 8019bd2:	4418      	add	r0, r3
 8019bd4:	b280      	uxth	r0, r0
 8019bd6:	4770      	bx	lr

08019bd8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8019bd8:	6803      	ldr	r3, [r0, #0]
 8019bda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019bdc:	4718      	bx	r3

08019bde <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8019bde:	b40e      	push	{r1, r2, r3}
 8019be0:	b570      	push	{r4, r5, r6, lr}
 8019be2:	b09d      	sub	sp, #116	; 0x74
 8019be4:	ab21      	add	r3, sp, #132	; 0x84
 8019be6:	4604      	mov	r4, r0
 8019be8:	f853 5b04 	ldr.w	r5, [r3], #4
 8019bec:	9302      	str	r3, [sp, #8]
 8019bee:	a803      	add	r0, sp, #12
 8019bf0:	f000 fe56 	bl	801a8a0 <_ZN8touchgfx12TextProviderC1Ev>
 8019bf4:	6823      	ldr	r3, [r4, #0]
 8019bf6:	4620      	mov	r0, r4
 8019bf8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019bfa:	4798      	blx	r3
 8019bfc:	6823      	ldr	r3, [r4, #0]
 8019bfe:	4606      	mov	r6, r0
 8019c00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019c02:	4620      	mov	r0, r4
 8019c04:	4798      	blx	r3
 8019c06:	4633      	mov	r3, r6
 8019c08:	9000      	str	r0, [sp, #0]
 8019c0a:	9a02      	ldr	r2, [sp, #8]
 8019c0c:	4629      	mov	r1, r5
 8019c0e:	a803      	add	r0, sp, #12
 8019c10:	f000 fea1 	bl	801a956 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019c14:	a803      	add	r0, sp, #12
 8019c16:	f001 fa6f 	bl	801b0f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019c1a:	2401      	movs	r4, #1
 8019c1c:	b2a3      	uxth	r3, r4
 8019c1e:	b140      	cbz	r0, 8019c32 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8019c20:	280a      	cmp	r0, #10
 8019c22:	bf08      	it	eq
 8019c24:	3301      	addeq	r3, #1
 8019c26:	a803      	add	r0, sp, #12
 8019c28:	bf08      	it	eq
 8019c2a:	b21c      	sxtheq	r4, r3
 8019c2c:	f001 fa64 	bl	801b0f8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019c30:	e7f4      	b.n	8019c1c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8019c32:	4618      	mov	r0, r3
 8019c34:	b01d      	add	sp, #116	; 0x74
 8019c36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c3a:	b003      	add	sp, #12
 8019c3c:	4770      	bx	lr

08019c3e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8019c3e:	b40e      	push	{r1, r2, r3}
 8019c40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019c42:	b09e      	sub	sp, #120	; 0x78
 8019c44:	ab23      	add	r3, sp, #140	; 0x8c
 8019c46:	4604      	mov	r4, r0
 8019c48:	f853 5b04 	ldr.w	r5, [r3], #4
 8019c4c:	9303      	str	r3, [sp, #12]
 8019c4e:	a805      	add	r0, sp, #20
 8019c50:	f000 fe26 	bl	801a8a0 <_ZN8touchgfx12TextProviderC1Ev>
 8019c54:	6823      	ldr	r3, [r4, #0]
 8019c56:	4620      	mov	r0, r4
 8019c58:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019c5a:	4798      	blx	r3
 8019c5c:	6823      	ldr	r3, [r4, #0]
 8019c5e:	4606      	mov	r6, r0
 8019c60:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019c62:	4620      	mov	r0, r4
 8019c64:	4798      	blx	r3
 8019c66:	4633      	mov	r3, r6
 8019c68:	4629      	mov	r1, r5
 8019c6a:	9000      	str	r0, [sp, #0]
 8019c6c:	9a03      	ldr	r2, [sp, #12]
 8019c6e:	a805      	add	r0, sp, #20
 8019c70:	ad1e      	add	r5, sp, #120	; 0x78
 8019c72:	f000 fe70 	bl	801a956 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019c76:	2100      	movs	r1, #0
 8019c78:	f845 1d68 	str.w	r1, [r5, #-104]!
 8019c7c:	4622      	mov	r2, r4
 8019c7e:	462b      	mov	r3, r5
 8019c80:	a805      	add	r0, sp, #20
 8019c82:	f001 f96b 	bl	801af5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019c86:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8019c8a:	b1d8      	cbz	r0, 8019cc4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8019c8c:	280a      	cmp	r0, #10
 8019c8e:	d012      	beq.n	8019cb6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019c90:	9804      	ldr	r0, [sp, #16]
 8019c92:	b180      	cbz	r0, 8019cb6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019c94:	7b47      	ldrb	r7, [r0, #13]
 8019c96:	88e2      	ldrh	r2, [r4, #6]
 8019c98:	00fb      	lsls	r3, r7, #3
 8019c9a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019c9e:	7a03      	ldrb	r3, [r0, #8]
 8019ca0:	430b      	orrs	r3, r1
 8019ca2:	0679      	lsls	r1, r7, #25
 8019ca4:	bf44      	itt	mi
 8019ca6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019caa:	b21b      	sxthmi	r3, r3
 8019cac:	1ad3      	subs	r3, r2, r3
 8019cae:	b21b      	sxth	r3, r3
 8019cb0:	429e      	cmp	r6, r3
 8019cb2:	bfa8      	it	ge
 8019cb4:	461e      	movge	r6, r3
 8019cb6:	462b      	mov	r3, r5
 8019cb8:	4622      	mov	r2, r4
 8019cba:	2100      	movs	r1, #0
 8019cbc:	a805      	add	r0, sp, #20
 8019cbe:	f001 f94d 	bl	801af5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019cc2:	e7e2      	b.n	8019c8a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8019cc4:	4630      	mov	r0, r6
 8019cc6:	b01e      	add	sp, #120	; 0x78
 8019cc8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019ccc:	b003      	add	sp, #12
 8019cce:	4770      	bx	lr

08019cd0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8019cd0:	b513      	push	{r0, r1, r4, lr}
 8019cd2:	6803      	ldr	r3, [r0, #0]
 8019cd4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8019cd8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019cdc:	f8ad 1004 	strh.w	r1, [sp, #4]
 8019ce0:	2400      	movs	r4, #0
 8019ce2:	9400      	str	r4, [sp, #0]
 8019ce4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8019ce8:	691b      	ldr	r3, [r3, #16]
 8019cea:	4669      	mov	r1, sp
 8019cec:	4798      	blx	r3
 8019cee:	b002      	add	sp, #8
 8019cf0:	bd10      	pop	{r4, pc}

08019cf2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8019cf2:	b538      	push	{r3, r4, r5, lr}
 8019cf4:	680b      	ldr	r3, [r1, #0]
 8019cf6:	460c      	mov	r4, r1
 8019cf8:	68db      	ldr	r3, [r3, #12]
 8019cfa:	4605      	mov	r5, r0
 8019cfc:	4798      	blx	r3
 8019cfe:	6823      	ldr	r3, [r4, #0]
 8019d00:	4620      	mov	r0, r4
 8019d02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019d04:	4629      	mov	r1, r5
 8019d06:	4798      	blx	r3
 8019d08:	4628      	mov	r0, r5
 8019d0a:	bd38      	pop	{r3, r4, r5, pc}

08019d0c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8019d0c:	b410      	push	{r4}
 8019d0e:	880a      	ldrh	r2, [r1, #0]
 8019d10:	8884      	ldrh	r4, [r0, #4]
 8019d12:	4422      	add	r2, r4
 8019d14:	800a      	strh	r2, [r1, #0]
 8019d16:	88c4      	ldrh	r4, [r0, #6]
 8019d18:	884a      	ldrh	r2, [r1, #2]
 8019d1a:	4422      	add	r2, r4
 8019d1c:	804a      	strh	r2, [r1, #2]
 8019d1e:	6940      	ldr	r0, [r0, #20]
 8019d20:	b120      	cbz	r0, 8019d2c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8019d22:	6803      	ldr	r3, [r0, #0]
 8019d24:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019d28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019d2a:	4718      	bx	r3
 8019d2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019d30:	4770      	bx	lr

08019d32 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8019d32:	b570      	push	{r4, r5, r6, lr}
 8019d34:	8882      	ldrh	r2, [r0, #4]
 8019d36:	880b      	ldrh	r3, [r1, #0]
 8019d38:	4413      	add	r3, r2
 8019d3a:	800b      	strh	r3, [r1, #0]
 8019d3c:	88c2      	ldrh	r2, [r0, #6]
 8019d3e:	884b      	ldrh	r3, [r1, #2]
 8019d40:	460c      	mov	r4, r1
 8019d42:	4413      	add	r3, r2
 8019d44:	804b      	strh	r3, [r1, #2]
 8019d46:	4605      	mov	r5, r0
 8019d48:	1d01      	adds	r1, r0, #4
 8019d4a:	4620      	mov	r0, r4
 8019d4c:	f7f8 ff86 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 8019d50:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019d54:	2b00      	cmp	r3, #0
 8019d56:	dd0b      	ble.n	8019d70 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019d58:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019d5c:	2b00      	cmp	r3, #0
 8019d5e:	dd07      	ble.n	8019d70 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019d60:	6968      	ldr	r0, [r5, #20]
 8019d62:	b128      	cbz	r0, 8019d70 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019d64:	6803      	ldr	r3, [r0, #0]
 8019d66:	4621      	mov	r1, r4
 8019d68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019d6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019d6e:	4718      	bx	r3
 8019d70:	bd70      	pop	{r4, r5, r6, pc}
	...

08019d74 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8019d74:	b570      	push	{r4, r5, r6, lr}
 8019d76:	8882      	ldrh	r2, [r0, #4]
 8019d78:	880b      	ldrh	r3, [r1, #0]
 8019d7a:	4413      	add	r3, r2
 8019d7c:	800b      	strh	r3, [r1, #0]
 8019d7e:	88c2      	ldrh	r2, [r0, #6]
 8019d80:	884b      	ldrh	r3, [r1, #2]
 8019d82:	460c      	mov	r4, r1
 8019d84:	4413      	add	r3, r2
 8019d86:	804b      	strh	r3, [r1, #2]
 8019d88:	4605      	mov	r5, r0
 8019d8a:	1d01      	adds	r1, r0, #4
 8019d8c:	4620      	mov	r0, r4
 8019d8e:	f7f8 ff65 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 8019d92:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019d96:	2b00      	cmp	r3, #0
 8019d98:	dd19      	ble.n	8019dce <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019d9a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019d9e:	2b00      	cmp	r3, #0
 8019da0:	dd15      	ble.n	8019dce <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019da2:	6968      	ldr	r0, [r5, #20]
 8019da4:	b128      	cbz	r0, 8019db2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8019da6:	6803      	ldr	r3, [r0, #0]
 8019da8:	4621      	mov	r1, r4
 8019daa:	691b      	ldr	r3, [r3, #16]
 8019dac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019db0:	4718      	bx	r3
 8019db2:	4b07      	ldr	r3, [pc, #28]	; (8019dd0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8019db4:	681b      	ldr	r3, [r3, #0]
 8019db6:	3304      	adds	r3, #4
 8019db8:	429d      	cmp	r5, r3
 8019dba:	d108      	bne.n	8019dce <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019dbc:	f7fe fea0 	bl	8018b00 <_ZN8touchgfx11Application11getInstanceEv>
 8019dc0:	6803      	ldr	r3, [r0, #0]
 8019dc2:	6821      	ldr	r1, [r4, #0]
 8019dc4:	6862      	ldr	r2, [r4, #4]
 8019dc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019dc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019dcc:	4718      	bx	r3
 8019dce:	bd70      	pop	{r4, r5, r6, pc}
 8019dd0:	20013898 	.word	0x20013898

08019dd4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8019dd4:	b570      	push	{r4, r5, r6, lr}
 8019dd6:	4604      	mov	r4, r0
 8019dd8:	4616      	mov	r6, r2
 8019dda:	460d      	mov	r5, r1
 8019ddc:	b901      	cbnz	r1, 8019de0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8019dde:	b192      	cbz	r2, 8019e06 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8019de0:	6823      	ldr	r3, [r4, #0]
 8019de2:	4620      	mov	r0, r4
 8019de4:	699b      	ldr	r3, [r3, #24]
 8019de6:	4798      	blx	r3
 8019de8:	88e2      	ldrh	r2, [r4, #6]
 8019dea:	88a1      	ldrh	r1, [r4, #4]
 8019dec:	4432      	add	r2, r6
 8019dee:	4429      	add	r1, r5
 8019df0:	4620      	mov	r0, r4
 8019df2:	b212      	sxth	r2, r2
 8019df4:	b209      	sxth	r1, r1
 8019df6:	f7e9 fce1 	bl	80037bc <_ZN8touchgfx8Drawable5setXYEss>
 8019dfa:	6823      	ldr	r3, [r4, #0]
 8019dfc:	4620      	mov	r0, r4
 8019dfe:	699b      	ldr	r3, [r3, #24]
 8019e00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019e04:	4718      	bx	r3
 8019e06:	bd70      	pop	{r4, r5, r6, pc}

08019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8019e08:	b510      	push	{r4, lr}
 8019e0a:	4604      	mov	r4, r0
 8019e0c:	4608      	mov	r0, r1
 8019e0e:	2300      	movs	r3, #0
 8019e10:	8023      	strh	r3, [r4, #0]
 8019e12:	8063      	strh	r3, [r4, #2]
 8019e14:	6803      	ldr	r3, [r0, #0]
 8019e16:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019e1a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8019e1e:	80a1      	strh	r1, [r4, #4]
 8019e20:	80e2      	strh	r2, [r4, #6]
 8019e22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019e24:	4621      	mov	r1, r4
 8019e26:	4798      	blx	r3
 8019e28:	4620      	mov	r0, r4
 8019e2a:	bd10      	pop	{r4, pc}

08019e2c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8019e2c:	b530      	push	{r4, r5, lr}
 8019e2e:	8083      	strh	r3, [r0, #4]
 8019e30:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8019e34:	80c3      	strh	r3, [r0, #6]
 8019e36:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8019e3a:	7203      	strb	r3, [r0, #8]
 8019e3c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019e40:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8019e44:	7243      	strb	r3, [r0, #9]
 8019e46:	7a83      	ldrb	r3, [r0, #10]
 8019e48:	6141      	str	r1, [r0, #20]
 8019e4a:	f365 0306 	bfi	r3, r5, #0, #7
 8019e4e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8019e52:	8302      	strh	r2, [r0, #24]
 8019e54:	f365 13c7 	bfi	r3, r5, #7, #1
 8019e58:	7283      	strb	r3, [r0, #10]
 8019e5a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8019e5e:	72c3      	strb	r3, [r0, #11]
 8019e60:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8019e64:	7303      	strb	r3, [r0, #12]
 8019e66:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019e6a:	81c3      	strh	r3, [r0, #14]
 8019e6c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8019e70:	8203      	strh	r3, [r0, #16]
 8019e72:	4b01      	ldr	r3, [pc, #4]	; (8019e78 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8019e74:	6003      	str	r3, [r0, #0]
 8019e76:	bd30      	pop	{r4, r5, pc}
 8019e78:	08032070 	.word	0x08032070

08019e7c <_ZNK8touchgfx9ConstFont4findEt>:
 8019e7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019e7e:	6944      	ldr	r4, [r0, #20]
 8019e80:	b3bc      	cbz	r4, 8019ef2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019e82:	88a3      	ldrh	r3, [r4, #4]
 8019e84:	8b02      	ldrh	r2, [r0, #24]
 8019e86:	1acb      	subs	r3, r1, r3
 8019e88:	f102 32ff 	add.w	r2, r2, #4294967295
 8019e8c:	d431      	bmi.n	8019ef2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019e8e:	4293      	cmp	r3, r2
 8019e90:	dd0c      	ble.n	8019eac <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8019e92:	230e      	movs	r3, #14
 8019e94:	fb03 4302 	mla	r3, r3, r2, r4
 8019e98:	889b      	ldrh	r3, [r3, #4]
 8019e9a:	1a5b      	subs	r3, r3, r1
 8019e9c:	1ad3      	subs	r3, r2, r3
 8019e9e:	429a      	cmp	r2, r3
 8019ea0:	db27      	blt.n	8019ef2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019ea2:	2b00      	cmp	r3, #0
 8019ea4:	bfbc      	itt	lt
 8019ea6:	2302      	movlt	r3, #2
 8019ea8:	fb92 f3f3 	sdivlt	r3, r2, r3
 8019eac:	2500      	movs	r5, #0
 8019eae:	260e      	movs	r6, #14
 8019eb0:	4295      	cmp	r5, r2
 8019eb2:	dc1e      	bgt.n	8019ef2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019eb4:	fb06 4003 	mla	r0, r6, r3, r4
 8019eb8:	8887      	ldrh	r7, [r0, #4]
 8019eba:	42b9      	cmp	r1, r7
 8019ebc:	d01a      	beq.n	8019ef4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8019ebe:	d20d      	bcs.n	8019edc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8019ec0:	1e5a      	subs	r2, r3, #1
 8019ec2:	4295      	cmp	r5, r2
 8019ec4:	dc15      	bgt.n	8019ef2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019ec6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8019eca:	1a5b      	subs	r3, r3, r1
 8019ecc:	1ad3      	subs	r3, r2, r3
 8019ece:	429a      	cmp	r2, r3
 8019ed0:	db0f      	blt.n	8019ef2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019ed2:	429d      	cmp	r5, r3
 8019ed4:	ddec      	ble.n	8019eb0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019ed6:	1953      	adds	r3, r2, r5
 8019ed8:	105b      	asrs	r3, r3, #1
 8019eda:	e7e9      	b.n	8019eb0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019edc:	1c5d      	adds	r5, r3, #1
 8019ede:	42aa      	cmp	r2, r5
 8019ee0:	db07      	blt.n	8019ef2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019ee2:	8a43      	ldrh	r3, [r0, #18]
 8019ee4:	1acb      	subs	r3, r1, r3
 8019ee6:	442b      	add	r3, r5
 8019ee8:	429d      	cmp	r5, r3
 8019eea:	dc02      	bgt.n	8019ef2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019eec:	429a      	cmp	r2, r3
 8019eee:	dadf      	bge.n	8019eb0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019ef0:	e7f1      	b.n	8019ed6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8019ef2:	2000      	movs	r0, #0
 8019ef4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019ef6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8019ef6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019ef8:	4604      	mov	r4, r0
 8019efa:	4617      	mov	r7, r2
 8019efc:	461e      	mov	r6, r3
 8019efe:	b911      	cbnz	r1, 8019f06 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8019f00:	2500      	movs	r5, #0
 8019f02:	4628      	mov	r0, r5
 8019f04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019f06:	290a      	cmp	r1, #10
 8019f08:	d0fa      	beq.n	8019f00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019f0a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8019f0e:	4291      	cmp	r1, r2
 8019f10:	d0f6      	beq.n	8019f00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019f12:	f242 020b 	movw	r2, #8203	; 0x200b
 8019f16:	4291      	cmp	r1, r2
 8019f18:	d0f2      	beq.n	8019f00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019f1a:	f7ff ffaf 	bl	8019e7c <_ZNK8touchgfx9ConstFont4findEt>
 8019f1e:	4605      	mov	r5, r0
 8019f20:	b950      	cbnz	r0, 8019f38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8019f22:	6823      	ldr	r3, [r4, #0]
 8019f24:	4620      	mov	r0, r4
 8019f26:	691b      	ldr	r3, [r3, #16]
 8019f28:	4798      	blx	r3
 8019f2a:	4601      	mov	r1, r0
 8019f2c:	4620      	mov	r0, r4
 8019f2e:	f7ff ffa5 	bl	8019e7c <_ZNK8touchgfx9ConstFont4findEt>
 8019f32:	4605      	mov	r5, r0
 8019f34:	2800      	cmp	r0, #0
 8019f36:	d0e3      	beq.n	8019f00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019f38:	6823      	ldr	r3, [r4, #0]
 8019f3a:	4629      	mov	r1, r5
 8019f3c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8019f3e:	4620      	mov	r0, r4
 8019f40:	4798      	blx	r3
 8019f42:	6038      	str	r0, [r7, #0]
 8019f44:	6823      	ldr	r3, [r4, #0]
 8019f46:	4620      	mov	r0, r4
 8019f48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019f4a:	4798      	blx	r3
 8019f4c:	7030      	strb	r0, [r6, #0]
 8019f4e:	e7d8      	b.n	8019f02 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08019f50 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8019f50:	b538      	push	{r3, r4, r5, lr}
 8019f52:	4605      	mov	r5, r0
 8019f54:	f002 fb94 	bl	801c680 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019f58:	4604      	mov	r4, r0
 8019f5a:	4628      	mov	r0, r5
 8019f5c:	f002 fad4 	bl	801c508 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019f60:	2800      	cmp	r0, #0
 8019f62:	bf14      	ite	ne
 8019f64:	2002      	movne	r0, #2
 8019f66:	2000      	moveq	r0, #0
 8019f68:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019f6c:	b280      	uxth	r0, r0
 8019f6e:	bd38      	pop	{r3, r4, r5, pc}

08019f70 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8019f70:	b538      	push	{r3, r4, r5, lr}
 8019f72:	4605      	mov	r5, r0
 8019f74:	f002 fb84 	bl	801c680 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019f78:	4604      	mov	r4, r0
 8019f7a:	4628      	mov	r0, r5
 8019f7c:	f002 fac4 	bl	801c508 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019f80:	2800      	cmp	r0, #0
 8019f82:	bf14      	ite	ne
 8019f84:	2002      	movne	r0, #2
 8019f86:	2000      	moveq	r0, #0
 8019f88:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019f8c:	f040 0001 	orr.w	r0, r0, #1
 8019f90:	b280      	uxth	r0, r0
 8019f92:	bd38      	pop	{r3, r4, r5, pc}

08019f94 <_ZN8touchgfx4clzuEm>:
 8019f94:	4603      	mov	r3, r0
 8019f96:	b1c8      	cbz	r0, 8019fcc <_ZN8touchgfx4clzuEm+0x38>
 8019f98:	0c02      	lsrs	r2, r0, #16
 8019f9a:	0412      	lsls	r2, r2, #16
 8019f9c:	b9a2      	cbnz	r2, 8019fc8 <_ZN8touchgfx4clzuEm+0x34>
 8019f9e:	0403      	lsls	r3, r0, #16
 8019fa0:	2010      	movs	r0, #16
 8019fa2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8019fa6:	bf04      	itt	eq
 8019fa8:	021b      	lsleq	r3, r3, #8
 8019faa:	3008      	addeq	r0, #8
 8019fac:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8019fb0:	bf04      	itt	eq
 8019fb2:	011b      	lsleq	r3, r3, #4
 8019fb4:	3004      	addeq	r0, #4
 8019fb6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8019fba:	bf04      	itt	eq
 8019fbc:	009b      	lsleq	r3, r3, #2
 8019fbe:	3002      	addeq	r0, #2
 8019fc0:	2b00      	cmp	r3, #0
 8019fc2:	db04      	blt.n	8019fce <_ZN8touchgfx4clzuEm+0x3a>
 8019fc4:	3001      	adds	r0, #1
 8019fc6:	4770      	bx	lr
 8019fc8:	2000      	movs	r0, #0
 8019fca:	e7ea      	b.n	8019fa2 <_ZN8touchgfx4clzuEm+0xe>
 8019fcc:	2020      	movs	r0, #32
 8019fce:	4770      	bx	lr

08019fd0 <_ZN8touchgfx7muldivuEmmmRm>:
 8019fd0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8019fd4:	460f      	mov	r7, r1
 8019fd6:	4615      	mov	r5, r2
 8019fd8:	461e      	mov	r6, r3
 8019fda:	4601      	mov	r1, r0
 8019fdc:	b100      	cbz	r0, 8019fe0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8019fde:	b927      	cbnz	r7, 8019fea <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8019fe0:	2000      	movs	r0, #0
 8019fe2:	6030      	str	r0, [r6, #0]
 8019fe4:	b002      	add	sp, #8
 8019fe6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019fea:	f7ff ffd3 	bl	8019f94 <_ZN8touchgfx4clzuEm>
 8019fee:	b980      	cbnz	r0, 801a012 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8019ff0:	4638      	mov	r0, r7
 8019ff2:	f7ff ffcf 	bl	8019f94 <_ZN8touchgfx4clzuEm>
 8019ff6:	2800      	cmp	r0, #0
 8019ff8:	dd05      	ble.n	801a006 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8019ffa:	4633      	mov	r3, r6
 8019ffc:	462a      	mov	r2, r5
 8019ffe:	4638      	mov	r0, r7
 801a000:	f7ff ffe6 	bl	8019fd0 <_ZN8touchgfx7muldivuEmmmRm>
 801a004:	e7ee      	b.n	8019fe4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a006:	f04f 33ff 	mov.w	r3, #4294967295
 801a00a:	6033      	str	r3, [r6, #0]
 801a00c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801a010:	e7e8      	b.n	8019fe4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a012:	fa37 f800 	lsrs.w	r8, r7, r0
 801a016:	fb07 f301 	mul.w	r3, r7, r1
 801a01a:	d105      	bne.n	801a028 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801a01c:	fbb3 f0f5 	udiv	r0, r3, r5
 801a020:	fb05 3510 	mls	r5, r5, r0, r3
 801a024:	6035      	str	r5, [r6, #0]
 801a026:	e7dd      	b.n	8019fe4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801a028:	2301      	movs	r3, #1
 801a02a:	fa01 fa00 	lsl.w	sl, r1, r0
 801a02e:	fa03 f000 	lsl.w	r0, r3, r0
 801a032:	3801      	subs	r0, #1
 801a034:	462a      	mov	r2, r5
 801a036:	4633      	mov	r3, r6
 801a038:	4038      	ands	r0, r7
 801a03a:	f7ff ffc9 	bl	8019fd0 <_ZN8touchgfx7muldivuEmmmRm>
 801a03e:	fbba f9f5 	udiv	r9, sl, r5
 801a042:	462a      	mov	r2, r5
 801a044:	4607      	mov	r7, r0
 801a046:	ab01      	add	r3, sp, #4
 801a048:	fb05 a119 	mls	r1, r5, r9, sl
 801a04c:	4640      	mov	r0, r8
 801a04e:	f7ff ffbf 	bl	8019fd0 <_ZN8touchgfx7muldivuEmmmRm>
 801a052:	9b01      	ldr	r3, [sp, #4]
 801a054:	6832      	ldr	r2, [r6, #0]
 801a056:	fb08 f409 	mul.w	r4, r8, r9
 801a05a:	441a      	add	r2, r3
 801a05c:	fbb2 f3f5 	udiv	r3, r2, r5
 801a060:	441c      	add	r4, r3
 801a062:	443c      	add	r4, r7
 801a064:	4420      	add	r0, r4
 801a066:	fb05 2513 	mls	r5, r5, r3, r2
 801a06a:	e7db      	b.n	801a024 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801a06c <_ZN8touchgfx6muldivElllRl>:
 801a06c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a06e:	2800      	cmp	r0, #0
 801a070:	bfba      	itte	lt
 801a072:	4240      	neglt	r0, r0
 801a074:	f04f 34ff 	movlt.w	r4, #4294967295
 801a078:	2401      	movge	r4, #1
 801a07a:	2900      	cmp	r1, #0
 801a07c:	bfbc      	itt	lt
 801a07e:	4249      	neglt	r1, r1
 801a080:	4264      	neglt	r4, r4
 801a082:	2a00      	cmp	r2, #0
 801a084:	bfb6      	itet	lt
 801a086:	4265      	neglt	r5, r4
 801a088:	4625      	movge	r5, r4
 801a08a:	4252      	neglt	r2, r2
 801a08c:	4288      	cmp	r0, r1
 801a08e:	461e      	mov	r6, r3
 801a090:	bfc2      	ittt	gt
 801a092:	4603      	movgt	r3, r0
 801a094:	4608      	movgt	r0, r1
 801a096:	4619      	movgt	r1, r3
 801a098:	ab01      	add	r3, sp, #4
 801a09a:	f7ff ff99 	bl	8019fd0 <_ZN8touchgfx7muldivuEmmmRm>
 801a09e:	9b01      	ldr	r3, [sp, #4]
 801a0a0:	4368      	muls	r0, r5
 801a0a2:	435c      	muls	r4, r3
 801a0a4:	6034      	str	r4, [r6, #0]
 801a0a6:	b002      	add	sp, #8
 801a0a8:	bd70      	pop	{r4, r5, r6, pc}

0801a0aa <_ZN8touchgfx6muldivElll>:
 801a0aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a0ac:	4606      	mov	r6, r0
 801a0ae:	ab01      	add	r3, sp, #4
 801a0b0:	460d      	mov	r5, r1
 801a0b2:	4614      	mov	r4, r2
 801a0b4:	f7ff ffda 	bl	801a06c <_ZN8touchgfx6muldivElllRl>
 801a0b8:	2e00      	cmp	r6, #0
 801a0ba:	db20      	blt.n	801a0fe <_ZN8touchgfx6muldivElll+0x54>
 801a0bc:	bf14      	ite	ne
 801a0be:	2301      	movne	r3, #1
 801a0c0:	2300      	moveq	r3, #0
 801a0c2:	2d00      	cmp	r5, #0
 801a0c4:	db1e      	blt.n	801a104 <_ZN8touchgfx6muldivElll+0x5a>
 801a0c6:	bf14      	ite	ne
 801a0c8:	2201      	movne	r2, #1
 801a0ca:	2200      	moveq	r2, #0
 801a0cc:	2c00      	cmp	r4, #0
 801a0ce:	fb03 f202 	mul.w	r2, r3, r2
 801a0d2:	db1a      	blt.n	801a10a <_ZN8touchgfx6muldivElll+0x60>
 801a0d4:	bf14      	ite	ne
 801a0d6:	2301      	movne	r3, #1
 801a0d8:	2300      	moveq	r3, #0
 801a0da:	4353      	muls	r3, r2
 801a0dc:	2b01      	cmp	r3, #1
 801a0de:	d117      	bne.n	801a110 <_ZN8touchgfx6muldivElll+0x66>
 801a0e0:	9b01      	ldr	r3, [sp, #4]
 801a0e2:	2c00      	cmp	r4, #0
 801a0e4:	bfb8      	it	lt
 801a0e6:	4264      	neglt	r4, r4
 801a0e8:	2b00      	cmp	r3, #0
 801a0ea:	f104 0401 	add.w	r4, r4, #1
 801a0ee:	bfb8      	it	lt
 801a0f0:	425b      	neglt	r3, r3
 801a0f2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801a0f6:	db00      	blt.n	801a0fa <_ZN8touchgfx6muldivElll+0x50>
 801a0f8:	3001      	adds	r0, #1
 801a0fa:	b002      	add	sp, #8
 801a0fc:	bd70      	pop	{r4, r5, r6, pc}
 801a0fe:	f04f 33ff 	mov.w	r3, #4294967295
 801a102:	e7de      	b.n	801a0c2 <_ZN8touchgfx6muldivElll+0x18>
 801a104:	f04f 32ff 	mov.w	r2, #4294967295
 801a108:	e7e0      	b.n	801a0cc <_ZN8touchgfx6muldivElll+0x22>
 801a10a:	f04f 33ff 	mov.w	r3, #4294967295
 801a10e:	e7e4      	b.n	801a0da <_ZN8touchgfx6muldivElll+0x30>
 801a110:	3301      	adds	r3, #1
 801a112:	d1f2      	bne.n	801a0fa <_ZN8touchgfx6muldivElll+0x50>
 801a114:	9b01      	ldr	r3, [sp, #4]
 801a116:	2c00      	cmp	r4, #0
 801a118:	bfb8      	it	lt
 801a11a:	4264      	neglt	r4, r4
 801a11c:	2b00      	cmp	r3, #0
 801a11e:	bfb8      	it	lt
 801a120:	425b      	neglt	r3, r3
 801a122:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801a126:	bfc8      	it	gt
 801a128:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801a12c:	e7e5      	b.n	801a0fa <_ZN8touchgfx6muldivElll+0x50>

0801a12e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801a12e:	2000      	movs	r0, #0
 801a130:	4770      	bx	lr

0801a132 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801a132:	2001      	movs	r0, #1
 801a134:	4770      	bx	lr

0801a136 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801a136:	2002      	movs	r0, #2
 801a138:	4770      	bx	lr

0801a13a <_ZN8touchgfx6ScreenD1Ev>:
 801a13a:	4770      	bx	lr

0801a13c <_ZN8touchgfx12GestureEventD1Ev>:
 801a13c:	4770      	bx	lr

0801a13e <_ZN8touchgfx9DragEventD1Ev>:
 801a13e:	4770      	bx	lr

0801a140 <_ZN8touchgfx10ClickEventD1Ev>:
 801a140:	4770      	bx	lr

0801a142 <_ZN8touchgfx10ClickEventD0Ev>:
 801a142:	b510      	push	{r4, lr}
 801a144:	210c      	movs	r1, #12
 801a146:	4604      	mov	r4, r0
 801a148:	f012 fe37 	bl	802cdba <_ZdlPvj>
 801a14c:	4620      	mov	r0, r4
 801a14e:	bd10      	pop	{r4, pc}

0801a150 <_ZN8touchgfx9DragEventD0Ev>:
 801a150:	b510      	push	{r4, lr}
 801a152:	2110      	movs	r1, #16
 801a154:	4604      	mov	r4, r0
 801a156:	f012 fe30 	bl	802cdba <_ZdlPvj>
 801a15a:	4620      	mov	r0, r4
 801a15c:	bd10      	pop	{r4, pc}

0801a15e <_ZN8touchgfx12GestureEventD0Ev>:
 801a15e:	b510      	push	{r4, lr}
 801a160:	210c      	movs	r1, #12
 801a162:	4604      	mov	r4, r0
 801a164:	f012 fe29 	bl	802cdba <_ZdlPvj>
 801a168:	4620      	mov	r0, r4
 801a16a:	bd10      	pop	{r4, pc}

0801a16c <_ZN8touchgfx6ScreenD0Ev>:
 801a16c:	b510      	push	{r4, lr}
 801a16e:	213c      	movs	r1, #60	; 0x3c
 801a170:	4604      	mov	r4, r0
 801a172:	f012 fe22 	bl	802cdba <_ZdlPvj>
 801a176:	4620      	mov	r0, r4
 801a178:	bd10      	pop	{r4, pc}
	...

0801a17c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801a17c:	b530      	push	{r4, r5, lr}
 801a17e:	460d      	mov	r5, r1
 801a180:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a182:	b087      	sub	sp, #28
 801a184:	4604      	mov	r4, r0
 801a186:	b301      	cbz	r1, 801a1ca <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a188:	a801      	add	r0, sp, #4
 801a18a:	f7ff fe3d 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a18e:	892a      	ldrh	r2, [r5, #8]
 801a190:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a194:	7928      	ldrb	r0, [r5, #4]
 801a196:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a19a:	f88d 0010 	strb.w	r0, [sp, #16]
 801a19e:	1ad2      	subs	r2, r2, r3
 801a1a0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a1a2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a1a4:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a1a8:	441a      	add	r2, r3
 801a1aa:	896b      	ldrh	r3, [r5, #10]
 801a1ac:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a1b0:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a1b4:	1b5b      	subs	r3, r3, r5
 801a1b6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a1b8:	442b      	add	r3, r5
 801a1ba:	4d05      	ldr	r5, [pc, #20]	; (801a1d0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a1bc:	9503      	str	r5, [sp, #12]
 801a1be:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a1c2:	6803      	ldr	r3, [r0, #0]
 801a1c4:	a903      	add	r1, sp, #12
 801a1c6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a1c8:	4798      	blx	r3
 801a1ca:	b007      	add	sp, #28
 801a1cc:	bd30      	pop	{r4, r5, pc}
 801a1ce:	bf00      	nop
 801a1d0:	080320f8 	.word	0x080320f8

0801a1d4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a1d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a1d8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a1da:	b08a      	sub	sp, #40	; 0x28
 801a1dc:	4604      	mov	r4, r0
 801a1de:	460d      	mov	r5, r1
 801a1e0:	b113      	cbz	r3, 801a1e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a1e2:	790b      	ldrb	r3, [r1, #4]
 801a1e4:	2b00      	cmp	r3, #0
 801a1e6:	d044      	beq.n	801a272 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a1e8:	f104 0804 	add.w	r8, r4, #4
 801a1ec:	4641      	mov	r1, r8
 801a1ee:	a803      	add	r0, sp, #12
 801a1f0:	f7ff fe0a 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a1f4:	792b      	ldrb	r3, [r5, #4]
 801a1f6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a1fa:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a1fe:	b983      	cbnz	r3, 801a222 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a200:	892a      	ldrh	r2, [r5, #8]
 801a202:	88e9      	ldrh	r1, [r5, #6]
 801a204:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a208:	1b92      	subs	r2, r2, r6
 801a20a:	1bc9      	subs	r1, r1, r7
 801a20c:	9301      	str	r3, [sp, #4]
 801a20e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a212:	9300      	str	r3, [sp, #0]
 801a214:	b212      	sxth	r2, r2
 801a216:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a21a:	b209      	sxth	r1, r1
 801a21c:	4640      	mov	r0, r8
 801a21e:	f7f8 fc39 	bl	8012a94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a222:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a224:	b329      	cbz	r1, 801a272 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a226:	a805      	add	r0, sp, #20
 801a228:	f7ff fdee 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a22c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a230:	792b      	ldrb	r3, [r5, #4]
 801a232:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a234:	f88d 3020 	strb.w	r3, [sp, #32]
 801a238:	1abf      	subs	r7, r7, r2
 801a23a:	88ea      	ldrh	r2, [r5, #6]
 801a23c:	4417      	add	r7, r2
 801a23e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a240:	4417      	add	r7, r2
 801a242:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a246:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a24a:	1ab6      	subs	r6, r6, r2
 801a24c:	892a      	ldrh	r2, [r5, #8]
 801a24e:	4416      	add	r6, r2
 801a250:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a252:	4416      	add	r6, r2
 801a254:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a258:	4a07      	ldr	r2, [pc, #28]	; (801a278 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a25a:	9207      	str	r2, [sp, #28]
 801a25c:	2600      	movs	r6, #0
 801a25e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a262:	6803      	ldr	r3, [r0, #0]
 801a264:	a907      	add	r1, sp, #28
 801a266:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a268:	4798      	blx	r3
 801a26a:	792b      	ldrb	r3, [r5, #4]
 801a26c:	b10b      	cbz	r3, 801a272 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a26e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a272:	b00a      	add	sp, #40	; 0x28
 801a274:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a278:	080320d0 	.word	0x080320d0

0801a27c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a27c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a280:	460c      	mov	r4, r1
 801a282:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a284:	b088      	sub	sp, #32
 801a286:	4605      	mov	r5, r0
 801a288:	2900      	cmp	r1, #0
 801a28a:	d06d      	beq.n	801a368 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a28c:	4668      	mov	r0, sp
 801a28e:	f7ff fdbb 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a292:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a294:	88e3      	ldrh	r3, [r4, #6]
 801a296:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a29a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a29e:	440b      	add	r3, r1
 801a2a0:	b21b      	sxth	r3, r3
 801a2a2:	4543      	cmp	r3, r8
 801a2a4:	db31      	blt.n	801a30a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a2a6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a2aa:	44c4      	add	ip, r8
 801a2ac:	fa0f fc8c 	sxth.w	ip, ip
 801a2b0:	4563      	cmp	r3, ip
 801a2b2:	da2a      	bge.n	801a30a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a2b4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a2b6:	8926      	ldrh	r6, [r4, #8]
 801a2b8:	4416      	add	r6, r2
 801a2ba:	b236      	sxth	r6, r6
 801a2bc:	42be      	cmp	r6, r7
 801a2be:	db24      	blt.n	801a30a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a2c0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801a2c4:	4438      	add	r0, r7
 801a2c6:	b200      	sxth	r0, r0
 801a2c8:	4286      	cmp	r6, r0
 801a2ca:	da1e      	bge.n	801a30a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a2cc:	8963      	ldrh	r3, [r4, #10]
 801a2ce:	4419      	add	r1, r3
 801a2d0:	b209      	sxth	r1, r1
 801a2d2:	4541      	cmp	r1, r8
 801a2d4:	db08      	blt.n	801a2e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a2d6:	4561      	cmp	r1, ip
 801a2d8:	da06      	bge.n	801a2e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a2da:	89a3      	ldrh	r3, [r4, #12]
 801a2dc:	441a      	add	r2, r3
 801a2de:	b212      	sxth	r2, r2
 801a2e0:	42ba      	cmp	r2, r7
 801a2e2:	db01      	blt.n	801a2e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a2e4:	4282      	cmp	r2, r0
 801a2e6:	db10      	blt.n	801a30a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a2e8:	4b21      	ldr	r3, [pc, #132]	; (801a370 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a2ea:	9304      	str	r3, [sp, #16]
 801a2ec:	2302      	movs	r3, #2
 801a2ee:	f88d 3014 	strb.w	r3, [sp, #20]
 801a2f2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a2f4:	2300      	movs	r3, #0
 801a2f6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a2fa:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a2fe:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a302:	6803      	ldr	r3, [r0, #0]
 801a304:	a904      	add	r1, sp, #16
 801a306:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a308:	4798      	blx	r3
 801a30a:	1d29      	adds	r1, r5, #4
 801a30c:	a802      	add	r0, sp, #8
 801a30e:	f7ff fd7b 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a312:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a316:	88e0      	ldrh	r0, [r4, #6]
 801a318:	7921      	ldrb	r1, [r4, #4]
 801a31a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a31e:	8922      	ldrh	r2, [r4, #8]
 801a320:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a322:	f88d 1014 	strb.w	r1, [sp, #20]
 801a326:	eba3 0808 	sub.w	r8, r3, r8
 801a32a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a32e:	1bdf      	subs	r7, r3, r7
 801a330:	b2bb      	uxth	r3, r7
 801a332:	fa1f f888 	uxth.w	r8, r8
 801a336:	8967      	ldrh	r7, [r4, #10]
 801a338:	89a4      	ldrh	r4, [r4, #12]
 801a33a:	4440      	add	r0, r8
 801a33c:	4460      	add	r0, ip
 801a33e:	441a      	add	r2, r3
 801a340:	44b8      	add	r8, r7
 801a342:	4423      	add	r3, r4
 801a344:	f8ad 0016 	strh.w	r0, [sp, #22]
 801a348:	4433      	add	r3, r6
 801a34a:	4432      	add	r2, r6
 801a34c:	44e0      	add	r8, ip
 801a34e:	4c09      	ldr	r4, [pc, #36]	; (801a374 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801a350:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a352:	9404      	str	r4, [sp, #16]
 801a354:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a358:	f8ad 801a 	strh.w	r8, [sp, #26]
 801a35c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a360:	6803      	ldr	r3, [r0, #0]
 801a362:	a904      	add	r1, sp, #16
 801a364:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a366:	4798      	blx	r3
 801a368:	b008      	add	sp, #32
 801a36a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a36e:	bf00      	nop
 801a370:	080320d0 	.word	0x080320d0
 801a374:	080320e4 	.word	0x080320e4

0801a378 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801a378:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a37a:	4604      	mov	r4, r0
 801a37c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801a380:	3201      	adds	r2, #1
 801a382:	d112      	bne.n	801a3aa <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801a384:	6803      	ldr	r3, [r0, #0]
 801a386:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a38a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a38e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a392:	2500      	movs	r5, #0
 801a394:	9500      	str	r5, [sp, #0]
 801a396:	466d      	mov	r5, sp
 801a398:	4629      	mov	r1, r5
 801a39a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a39e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a3a0:	4798      	blx	r3
 801a3a2:	e895 0003 	ldmia.w	r5, {r0, r1}
 801a3a6:	e884 0003 	stmia.w	r4, {r0, r1}
 801a3aa:	4620      	mov	r0, r4
 801a3ac:	b003      	add	sp, #12
 801a3ae:	bd30      	pop	{r4, r5, pc}

0801a3b0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801a3b0:	b513      	push	{r0, r1, r4, lr}
 801a3b2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801a3b6:	3301      	adds	r3, #1
 801a3b8:	4604      	mov	r4, r0
 801a3ba:	d109      	bne.n	801a3d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801a3bc:	4601      	mov	r1, r0
 801a3be:	4668      	mov	r0, sp
 801a3c0:	f7ff fd22 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a3c4:	f8bd 3000 	ldrh.w	r3, [sp]
 801a3c8:	8423      	strh	r3, [r4, #32]
 801a3ca:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a3ce:	8463      	strh	r3, [r4, #34]	; 0x22
 801a3d0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801a3d4:	b002      	add	sp, #8
 801a3d6:	bd10      	pop	{r4, pc}

0801a3d8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801a3d8:	b513      	push	{r0, r1, r4, lr}
 801a3da:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801a3de:	3301      	adds	r3, #1
 801a3e0:	4604      	mov	r4, r0
 801a3e2:	d109      	bne.n	801a3f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801a3e4:	4601      	mov	r1, r0
 801a3e6:	4668      	mov	r0, sp
 801a3e8:	f7ff fd0e 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a3ec:	f8bd 3000 	ldrh.w	r3, [sp]
 801a3f0:	8423      	strh	r3, [r4, #32]
 801a3f2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a3f6:	8463      	strh	r3, [r4, #34]	; 0x22
 801a3f8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801a3fc:	b002      	add	sp, #8
 801a3fe:	bd10      	pop	{r4, pc}

0801a400 <_ZN8touchgfx6ScreenC1Ev>:
 801a400:	b570      	push	{r4, r5, r6, lr}
 801a402:	4605      	mov	r5, r0
 801a404:	4b16      	ldr	r3, [pc, #88]	; (801a460 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801a406:	f845 3b04 	str.w	r3, [r5], #4
 801a40a:	2300      	movs	r3, #0
 801a40c:	8103      	strh	r3, [r0, #8]
 801a40e:	8143      	strh	r3, [r0, #10]
 801a410:	8183      	strh	r3, [r0, #12]
 801a412:	81c3      	strh	r3, [r0, #14]
 801a414:	8203      	strh	r3, [r0, #16]
 801a416:	8243      	strh	r3, [r0, #18]
 801a418:	8283      	strh	r3, [r0, #20]
 801a41a:	82c3      	strh	r3, [r0, #22]
 801a41c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801a420:	6203      	str	r3, [r0, #32]
 801a422:	8483      	strh	r3, [r0, #36]	; 0x24
 801a424:	84c3      	strh	r3, [r0, #38]	; 0x26
 801a426:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801a42a:	4a0e      	ldr	r2, [pc, #56]	; (801a464 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801a42c:	6343      	str	r3, [r0, #52]	; 0x34
 801a42e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801a432:	4b0d      	ldr	r3, [pc, #52]	; (801a468 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801a434:	6042      	str	r2, [r0, #4]
 801a436:	f9b3 6000 	ldrsh.w	r6, [r3]
 801a43a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801a43c:	4a0b      	ldr	r2, [pc, #44]	; (801a46c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801a43e:	4604      	mov	r4, r0
 801a440:	2101      	movs	r1, #1
 801a442:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801a446:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801a44a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a44e:	4628      	mov	r0, r5
 801a450:	4798      	blx	r3
 801a452:	6863      	ldr	r3, [r4, #4]
 801a454:	4628      	mov	r0, r5
 801a456:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a458:	4631      	mov	r1, r6
 801a45a:	4798      	blx	r3
 801a45c:	4620      	mov	r0, r4
 801a45e:	bd70      	pop	{r4, r5, r6, pc}
 801a460:	0803210c 	.word	0x0803210c
 801a464:	08031790 	.word	0x08031790
 801a468:	2001384a 	.word	0x2001384a
 801a46c:	20013848 	.word	0x20013848

0801a470 <_ZN8touchgfx6Screen4drawEv>:
 801a470:	b507      	push	{r0, r1, r2, lr}
 801a472:	4b09      	ldr	r3, [pc, #36]	; (801a498 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801a474:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a478:	4b08      	ldr	r3, [pc, #32]	; (801a49c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801a47a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a47e:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a482:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a486:	6803      	ldr	r3, [r0, #0]
 801a488:	2100      	movs	r1, #0
 801a48a:	9100      	str	r1, [sp, #0]
 801a48c:	689b      	ldr	r3, [r3, #8]
 801a48e:	4669      	mov	r1, sp
 801a490:	4798      	blx	r3
 801a492:	b003      	add	sp, #12
 801a494:	f85d fb04 	ldr.w	pc, [sp], #4
 801a498:	20013848 	.word	0x20013848
 801a49c:	2001384a 	.word	0x2001384a

0801a4a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801a4a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4a4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801a4a8:	2b00      	cmp	r3, #0
 801a4aa:	b089      	sub	sp, #36	; 0x24
 801a4ac:	4680      	mov	r8, r0
 801a4ae:	460c      	mov	r4, r1
 801a4b0:	4615      	mov	r5, r2
 801a4b2:	dd0e      	ble.n	801a4d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a4b4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801a4b8:	2b00      	cmp	r3, #0
 801a4ba:	dd0a      	ble.n	801a4d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a4bc:	4628      	mov	r0, r5
 801a4be:	f7ff ff5b 	bl	801a378 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a4c2:	4621      	mov	r1, r4
 801a4c4:	f7fe fa3d 	bl	8018942 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801a4c8:	69eb      	ldr	r3, [r5, #28]
 801a4ca:	b928      	cbnz	r0, 801a4d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801a4cc:	461d      	mov	r5, r3
 801a4ce:	2b00      	cmp	r3, #0
 801a4d0:	d1f4      	bne.n	801a4bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801a4d2:	b009      	add	sp, #36	; 0x24
 801a4d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a4d8:	ae04      	add	r6, sp, #16
 801a4da:	2b00      	cmp	r3, #0
 801a4dc:	f000 80b5 	beq.w	801a64a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a4e0:	682b      	ldr	r3, [r5, #0]
 801a4e2:	4629      	mov	r1, r5
 801a4e4:	68db      	ldr	r3, [r3, #12]
 801a4e6:	a802      	add	r0, sp, #8
 801a4e8:	4798      	blx	r3
 801a4ea:	4628      	mov	r0, r5
 801a4ec:	f7ff ff60 	bl	801a3b0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a4f0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801a4f4:	4407      	add	r7, r0
 801a4f6:	4628      	mov	r0, r5
 801a4f8:	f7ff ff6e 	bl	801a3d8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a4fc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a500:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801a504:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a508:	4418      	add	r0, r3
 801a50a:	4621      	mov	r1, r4
 801a50c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801a510:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a514:	b23f      	sxth	r7, r7
 801a516:	4630      	mov	r0, r6
 801a518:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a51c:	f8ad 7010 	strh.w	r7, [sp, #16]
 801a520:	f7f8 fb9c 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 801a524:	4628      	mov	r0, r5
 801a526:	f7ff ff27 	bl	801a378 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a52a:	4602      	mov	r2, r0
 801a52c:	e896 0003 	ldmia.w	r6, {r0, r1}
 801a530:	ab06      	add	r3, sp, #24
 801a532:	e883 0003 	stmia.w	r3, {r0, r1}
 801a536:	4611      	mov	r1, r2
 801a538:	4618      	mov	r0, r3
 801a53a:	f7f8 fb8f 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 801a53e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801a542:	f9b4 1000 	ldrsh.w	r1, [r4]
 801a546:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801a54a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801a54e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801a552:	4299      	cmp	r1, r3
 801a554:	d10b      	bne.n	801a56e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a556:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a55a:	4552      	cmp	r2, sl
 801a55c:	d107      	bne.n	801a56e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a55e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801a562:	455a      	cmp	r2, fp
 801a564:	d103      	bne.n	801a56e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a566:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801a56a:	454a      	cmp	r2, r9
 801a56c:	d06d      	beq.n	801a64a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a56e:	f1bb 0f00 	cmp.w	fp, #0
 801a572:	dd65      	ble.n	801a640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a574:	f1b9 0f00 	cmp.w	r9, #0
 801a578:	dd62      	ble.n	801a640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a57a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a57e:	fa1f f08a 	uxth.w	r0, sl
 801a582:	4552      	cmp	r2, sl
 801a584:	9000      	str	r0, [sp, #0]
 801a586:	da12      	bge.n	801a5ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801a588:	9301      	str	r3, [sp, #4]
 801a58a:	9b00      	ldr	r3, [sp, #0]
 801a58c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a590:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a594:	1a9a      	subs	r2, r3, r2
 801a596:	f8ad 1010 	strh.w	r1, [sp, #16]
 801a59a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a59e:	f8ad 2016 	strh.w	r2, [sp, #22]
 801a5a2:	69ea      	ldr	r2, [r5, #28]
 801a5a4:	4631      	mov	r1, r6
 801a5a6:	4640      	mov	r0, r8
 801a5a8:	f7ff ff7a 	bl	801a4a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a5ac:	9b01      	ldr	r3, [sp, #4]
 801a5ae:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a5b2:	429a      	cmp	r2, r3
 801a5b4:	b29f      	uxth	r7, r3
 801a5b6:	da0d      	bge.n	801a5d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801a5b8:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a5bc:	1aba      	subs	r2, r7, r2
 801a5be:	f8ad a012 	strh.w	sl, [sp, #18]
 801a5c2:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a5c6:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a5ca:	69ea      	ldr	r2, [r5, #28]
 801a5cc:	4631      	mov	r1, r6
 801a5ce:	4640      	mov	r0, r8
 801a5d0:	f7ff ff66 	bl	801a4a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a5d4:	8822      	ldrh	r2, [r4, #0]
 801a5d6:	88a3      	ldrh	r3, [r4, #4]
 801a5d8:	445f      	add	r7, fp
 801a5da:	4413      	add	r3, r2
 801a5dc:	b29b      	uxth	r3, r3
 801a5de:	b2bf      	uxth	r7, r7
 801a5e0:	b23a      	sxth	r2, r7
 801a5e2:	b219      	sxth	r1, r3
 801a5e4:	4291      	cmp	r1, r2
 801a5e6:	dd0d      	ble.n	801a604 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801a5e8:	1bdb      	subs	r3, r3, r7
 801a5ea:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a5ee:	f8ad a012 	strh.w	sl, [sp, #18]
 801a5f2:	f8ad 3014 	strh.w	r3, [sp, #20]
 801a5f6:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a5fa:	69ea      	ldr	r2, [r5, #28]
 801a5fc:	4631      	mov	r1, r6
 801a5fe:	4640      	mov	r0, r8
 801a600:	f7ff ff4e 	bl	801a4a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a604:	88e2      	ldrh	r2, [r4, #6]
 801a606:	8863      	ldrh	r3, [r4, #2]
 801a608:	4413      	add	r3, r2
 801a60a:	9a00      	ldr	r2, [sp, #0]
 801a60c:	444a      	add	r2, r9
 801a60e:	b29b      	uxth	r3, r3
 801a610:	fa1f f982 	uxth.w	r9, r2
 801a614:	fa0f f289 	sxth.w	r2, r9
 801a618:	b219      	sxth	r1, r3
 801a61a:	428a      	cmp	r2, r1
 801a61c:	da15      	bge.n	801a64a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a61e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a622:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a626:	f8ad 1014 	strh.w	r1, [sp, #20]
 801a62a:	eba3 0309 	sub.w	r3, r3, r9
 801a62e:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a632:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a636:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a63a:	69ea      	ldr	r2, [r5, #28]
 801a63c:	4631      	mov	r1, r6
 801a63e:	e001      	b.n	801a644 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801a640:	69ea      	ldr	r2, [r5, #28]
 801a642:	4621      	mov	r1, r4
 801a644:	4640      	mov	r0, r8
 801a646:	f7ff ff2b 	bl	801a4a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a64a:	4628      	mov	r0, r5
 801a64c:	f7ff fe94 	bl	801a378 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a650:	6861      	ldr	r1, [r4, #4]
 801a652:	4602      	mov	r2, r0
 801a654:	6820      	ldr	r0, [r4, #0]
 801a656:	4633      	mov	r3, r6
 801a658:	c303      	stmia	r3!, {r0, r1}
 801a65a:	4611      	mov	r1, r2
 801a65c:	4630      	mov	r0, r6
 801a65e:	f7f8 fafd 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 801a662:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801a666:	2b00      	cmp	r3, #0
 801a668:	f77f af33 	ble.w	801a4d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a66c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801a670:	2b00      	cmp	r3, #0
 801a672:	f77f af2e 	ble.w	801a4d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a676:	4628      	mov	r0, r5
 801a678:	f7ff fe9a 	bl	801a3b0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a67c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801a680:	1a18      	subs	r0, r3, r0
 801a682:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a686:	4628      	mov	r0, r5
 801a688:	f7ff fea6 	bl	801a3d8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a68c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a690:	1a18      	subs	r0, r3, r0
 801a692:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a696:	682b      	ldr	r3, [r5, #0]
 801a698:	4631      	mov	r1, r6
 801a69a:	689b      	ldr	r3, [r3, #8]
 801a69c:	4628      	mov	r0, r5
 801a69e:	4798      	blx	r3
 801a6a0:	e717      	b.n	801a4d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801a6a2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801a6a2:	b570      	push	{r4, r5, r6, lr}
 801a6a4:	460c      	mov	r4, r1
 801a6a6:	b086      	sub	sp, #24
 801a6a8:	1d06      	adds	r6, r0, #4
 801a6aa:	2300      	movs	r3, #0
 801a6ac:	4631      	mov	r1, r6
 801a6ae:	4605      	mov	r5, r0
 801a6b0:	a802      	add	r0, sp, #8
 801a6b2:	9301      	str	r3, [sp, #4]
 801a6b4:	f7ff fba8 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a6b8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a6bc:	8822      	ldrh	r2, [r4, #0]
 801a6be:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801a6c2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a6c6:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a6ca:	1ad2      	subs	r2, r2, r3
 801a6cc:	8863      	ldrh	r3, [r4, #2]
 801a6ce:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a6d2:	1a5b      	subs	r3, r3, r1
 801a6d4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801a6d8:	f8ad 1016 	strh.w	r1, [sp, #22]
 801a6dc:	aa01      	add	r2, sp, #4
 801a6de:	a904      	add	r1, sp, #16
 801a6e0:	4630      	mov	r0, r6
 801a6e2:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a6e6:	f7f8 fb91 	bl	8012e0c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801a6ea:	9a01      	ldr	r2, [sp, #4]
 801a6ec:	b11a      	cbz	r2, 801a6f6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801a6ee:	4621      	mov	r1, r4
 801a6f0:	4628      	mov	r0, r5
 801a6f2:	f7ff fed5 	bl	801a4a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a6f6:	b006      	add	sp, #24
 801a6f8:	bd70      	pop	{r4, r5, r6, pc}

0801a6fa <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801a6fa:	b530      	push	{r4, r5, lr}
 801a6fc:	4602      	mov	r2, r0
 801a6fe:	4604      	mov	r4, r0
 801a700:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801a704:	b085      	sub	sp, #20
 801a706:	460d      	mov	r5, r1
 801a708:	6851      	ldr	r1, [r2, #4]
 801a70a:	466b      	mov	r3, sp
 801a70c:	c303      	stmia	r3!, {r0, r1}
 801a70e:	4629      	mov	r1, r5
 801a710:	4668      	mov	r0, sp
 801a712:	f7f8 faa3 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 801a716:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a71a:	b12b      	cbz	r3, 801a728 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801a71c:	4669      	mov	r1, sp
 801a71e:	4620      	mov	r0, r4
 801a720:	f7ff ffbf 	bl	801a6a2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801a724:	b005      	add	sp, #20
 801a726:	bd30      	pop	{r4, r5, pc}
 801a728:	3404      	adds	r4, #4
 801a72a:	4621      	mov	r1, r4
 801a72c:	a802      	add	r0, sp, #8
 801a72e:	f7ff fb6b 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a732:	f8bd 3000 	ldrh.w	r3, [sp]
 801a736:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801a73a:	1a9b      	subs	r3, r3, r2
 801a73c:	f8ad 3000 	strh.w	r3, [sp]
 801a740:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a744:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a748:	4669      	mov	r1, sp
 801a74a:	1a9b      	subs	r3, r3, r2
 801a74c:	4620      	mov	r0, r4
 801a74e:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a752:	f7f8 fb22 	bl	8012d9a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801a756:	e7e5      	b.n	801a724 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801a758 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801a758:	680a      	ldr	r2, [r1, #0]
 801a75a:	460b      	mov	r3, r1
 801a75c:	6992      	ldr	r2, [r2, #24]
 801a75e:	1d01      	adds	r1, r0, #4
 801a760:	4618      	mov	r0, r3
 801a762:	4710      	bx	r2

0801a764 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 801a764:	4298      	cmp	r0, r3
 801a766:	d200      	bcs.n	801a76a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 801a768:	b913      	cbnz	r3, 801a770 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801a76a:	440a      	add	r2, r1
 801a76c:	b210      	sxth	r0, r2
 801a76e:	4770      	bx	lr
 801a770:	ee07 0a90 	vmov	s15, r0
 801a774:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a778:	ee07 3a90 	vmov	s15, r3
 801a77c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a780:	eddf 4a15 	vldr	s9, [pc, #84]	; 801a7d8 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 801a784:	eddf 5a15 	vldr	s11, [pc, #84]	; 801a7dc <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 801a788:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a78c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a790:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a794:	ee07 2a90 	vmov	s15, r2
 801a798:	eee7 5a24 	vfma.f32	s11, s14, s9
 801a79c:	ee27 5a07 	vmul.f32	s10, s14, s14
 801a7a0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a7a4:	eee5 6a25 	vfma.f32	s13, s10, s11
 801a7a8:	ee07 1a90 	vmov	s15, r1
 801a7ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a7b0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a7b4:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a7b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a7bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7c0:	bfcc      	ite	gt
 801a7c2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a7c6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a7ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a7ce:	ee17 3a90 	vmov	r3, s15
 801a7d2:	b218      	sxth	r0, r3
 801a7d4:	4770      	bx	lr
 801a7d6:	bf00      	nop
 801a7d8:	402ce6b0 	.word	0x402ce6b0
 801a7dc:	3fd9cd60 	.word	0x3fd9cd60

0801a7e0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801a7e0:	4298      	cmp	r0, r3
 801a7e2:	d200      	bcs.n	801a7e6 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801a7e4:	b913      	cbnz	r3, 801a7ec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801a7e6:	440a      	add	r2, r1
 801a7e8:	b210      	sxth	r0, r2
 801a7ea:	4770      	bx	lr
 801a7ec:	ee07 0a90 	vmov	s15, r0
 801a7f0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a7f4:	ee07 3a90 	vmov	s15, r3
 801a7f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a7fc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a800:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a804:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a808:	ee07 2a90 	vmov	s15, r2
 801a80c:	ee67 5a07 	vmul.f32	s11, s14, s14
 801a810:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a814:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a818:	ee07 1a90 	vmov	s15, r1
 801a81c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a820:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a824:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a828:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a82c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a830:	bfcc      	ite	gt
 801a832:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a836:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a83a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a83e:	ee17 3a90 	vmov	r3, s15
 801a842:	b218      	sxth	r0, r3
 801a844:	4770      	bx	lr

0801a846 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801a846:	4298      	cmp	r0, r3
 801a848:	d200      	bcs.n	801a84c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801a84a:	b913      	cbnz	r3, 801a852 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801a84c:	440a      	add	r2, r1
 801a84e:	b210      	sxth	r0, r2
 801a850:	4770      	bx	lr
 801a852:	ee07 2a90 	vmov	s15, r2
 801a856:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801a85a:	ee07 0a90 	vmov	s15, r0
 801a85e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801a862:	ee67 7a27 	vmul.f32	s15, s14, s15
 801a866:	ee07 3a10 	vmov	s14, r3
 801a86a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801a86e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a872:	ee07 1a90 	vmov	s15, r1
 801a876:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a87a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a87e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a882:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a88a:	bfcc      	ite	gt
 801a88c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a890:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a894:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a898:	ee17 3a90 	vmov	r3, s15
 801a89c:	b218      	sxth	r0, r3
 801a89e:	4770      	bx	lr

0801a8a0 <_ZN8touchgfx12TextProviderC1Ev>:
 801a8a0:	b538      	push	{r3, r4, r5, lr}
 801a8a2:	2500      	movs	r5, #0
 801a8a4:	2302      	movs	r3, #2
 801a8a6:	4604      	mov	r4, r0
 801a8a8:	e9c0 5500 	strd	r5, r5, [r0]
 801a8ac:	7403      	strb	r3, [r0, #16]
 801a8ae:	6145      	str	r5, [r0, #20]
 801a8b0:	7605      	strb	r5, [r0, #24]
 801a8b2:	83c5      	strh	r5, [r0, #30]
 801a8b4:	8405      	strh	r5, [r0, #32]
 801a8b6:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a8b8:	8705      	strh	r5, [r0, #56]	; 0x38
 801a8ba:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801a8bc:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801a8c0:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801a8c4:	220e      	movs	r2, #14
 801a8c6:	4629      	mov	r1, r5
 801a8c8:	304c      	adds	r0, #76	; 0x4c
 801a8ca:	f013 fb62 	bl	802df92 <memset>
 801a8ce:	2301      	movs	r3, #1
 801a8d0:	4620      	mov	r0, r4
 801a8d2:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801a8d6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a8da:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801a8de:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801a8e2:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801a8e6:	f7ef ff2b 	bl	800a740 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801a8ea:	4620      	mov	r0, r4
 801a8ec:	bd38      	pop	{r3, r4, r5, pc}

0801a8ee <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801a8ee:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a8f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a8f4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801a8f6:	fab0 f080 	clz	r0, r0
 801a8fa:	0940      	lsrs	r0, r0, #5
 801a8fc:	4770      	bx	lr

0801a8fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801a8fe:	b530      	push	{r4, r5, lr}
 801a900:	2500      	movs	r5, #0
 801a902:	2401      	movs	r4, #1
 801a904:	6843      	ldr	r3, [r0, #4]
 801a906:	b913      	cbnz	r3, 801a90e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801a908:	6803      	ldr	r3, [r0, #0]
 801a90a:	b313      	cbz	r3, 801a952 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a90c:	6043      	str	r3, [r0, #4]
 801a90e:	7e03      	ldrb	r3, [r0, #24]
 801a910:	b143      	cbz	r3, 801a924 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801a912:	6943      	ldr	r3, [r0, #20]
 801a914:	b12b      	cbz	r3, 801a922 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a916:	881a      	ldrh	r2, [r3, #0]
 801a918:	b11a      	cbz	r2, 801a922 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a91a:	1c9a      	adds	r2, r3, #2
 801a91c:	6142      	str	r2, [r0, #20]
 801a91e:	8818      	ldrh	r0, [r3, #0]
 801a920:	bd30      	pop	{r4, r5, pc}
 801a922:	7605      	strb	r5, [r0, #24]
 801a924:	6843      	ldr	r3, [r0, #4]
 801a926:	8819      	ldrh	r1, [r3, #0]
 801a928:	b199      	cbz	r1, 801a952 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a92a:	1c9a      	adds	r2, r3, #2
 801a92c:	2902      	cmp	r1, #2
 801a92e:	6042      	str	r2, [r0, #4]
 801a930:	d1f5      	bne.n	801a91e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801a932:	7c03      	ldrb	r3, [r0, #16]
 801a934:	2b01      	cmp	r3, #1
 801a936:	d8e5      	bhi.n	801a904 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a938:	1c5a      	adds	r2, r3, #1
 801a93a:	3302      	adds	r3, #2
 801a93c:	7402      	strb	r2, [r0, #16]
 801a93e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801a942:	6143      	str	r3, [r0, #20]
 801a944:	2b00      	cmp	r3, #0
 801a946:	d0dd      	beq.n	801a904 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a948:	881b      	ldrh	r3, [r3, #0]
 801a94a:	2b00      	cmp	r3, #0
 801a94c:	d0da      	beq.n	801a904 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a94e:	7604      	strb	r4, [r0, #24]
 801a950:	e7d8      	b.n	801a904 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a952:	2000      	movs	r0, #0
 801a954:	e7e4      	b.n	801a920 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801a956 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801a956:	b430      	push	{r4, r5}
 801a958:	6001      	str	r1, [r0, #0]
 801a95a:	2100      	movs	r1, #0
 801a95c:	6041      	str	r1, [r0, #4]
 801a95e:	6815      	ldr	r5, [r2, #0]
 801a960:	6085      	str	r5, [r0, #8]
 801a962:	6852      	ldr	r2, [r2, #4]
 801a964:	6443      	str	r3, [r0, #68]	; 0x44
 801a966:	9b02      	ldr	r3, [sp, #8]
 801a968:	60c2      	str	r2, [r0, #12]
 801a96a:	7401      	strb	r1, [r0, #16]
 801a96c:	6141      	str	r1, [r0, #20]
 801a96e:	7601      	strb	r1, [r0, #24]
 801a970:	8701      	strh	r1, [r0, #56]	; 0x38
 801a972:	8401      	strh	r1, [r0, #32]
 801a974:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801a978:	6483      	str	r3, [r0, #72]	; 0x48
 801a97a:	bc30      	pop	{r4, r5}
 801a97c:	f7ef bee0 	b.w	800a740 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801a980 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801a980:	b408      	push	{r3}
 801a982:	b510      	push	{r4, lr}
 801a984:	b085      	sub	sp, #20
 801a986:	ac07      	add	r4, sp, #28
 801a988:	f854 3b04 	ldr.w	r3, [r4], #4
 801a98c:	9300      	str	r3, [sp, #0]
 801a98e:	4613      	mov	r3, r2
 801a990:	4622      	mov	r2, r4
 801a992:	9403      	str	r4, [sp, #12]
 801a994:	f7ff ffdf 	bl	801a956 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a998:	b005      	add	sp, #20
 801a99a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a99e:	b001      	add	sp, #4
 801a9a0:	4770      	bx	lr

0801a9a2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801a9a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a9a4:	4605      	mov	r5, r0
 801a9a6:	4608      	mov	r0, r1
 801a9a8:	b1e9      	cbz	r1, 801a9e6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801a9aa:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801a9ae:	460b      	mov	r3, r1
 801a9b0:	f101 0708 	add.w	r7, r1, #8
 801a9b4:	4622      	mov	r2, r4
 801a9b6:	6818      	ldr	r0, [r3, #0]
 801a9b8:	6859      	ldr	r1, [r3, #4]
 801a9ba:	4626      	mov	r6, r4
 801a9bc:	c603      	stmia	r6!, {r0, r1}
 801a9be:	3308      	adds	r3, #8
 801a9c0:	42bb      	cmp	r3, r7
 801a9c2:	4634      	mov	r4, r6
 801a9c4:	d1f7      	bne.n	801a9b6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801a9c6:	6818      	ldr	r0, [r3, #0]
 801a9c8:	6030      	str	r0, [r6, #0]
 801a9ca:	889b      	ldrh	r3, [r3, #4]
 801a9cc:	80b3      	strh	r3, [r6, #4]
 801a9ce:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801a9d2:	015b      	lsls	r3, r3, #5
 801a9d4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a9d8:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801a9dc:	430b      	orrs	r3, r1
 801a9de:	425b      	negs	r3, r3
 801a9e0:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801a9e4:	4610      	mov	r0, r2
 801a9e6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a9e8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801a9e8:	b538      	push	{r3, r4, r5, lr}
 801a9ea:	460c      	mov	r4, r1
 801a9ec:	6811      	ldr	r1, [r2, #0]
 801a9ee:	4610      	mov	r0, r2
 801a9f0:	68cd      	ldr	r5, [r1, #12]
 801a9f2:	4619      	mov	r1, r3
 801a9f4:	47a8      	blx	r5
 801a9f6:	2800      	cmp	r0, #0
 801a9f8:	bf08      	it	eq
 801a9fa:	4620      	moveq	r0, r4
 801a9fc:	bd38      	pop	{r3, r4, r5, pc}
	...

0801aa00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801aa00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aa02:	4604      	mov	r4, r0
 801aa04:	4615      	mov	r5, r2
 801aa06:	4608      	mov	r0, r1
 801aa08:	b93a      	cbnz	r2, 801aa1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801aa0a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801aa0e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801aa12:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801aa16:	4628      	mov	r0, r5
 801aa18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801aa1a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801aa1e:	8893      	ldrh	r3, [r2, #4]
 801aa20:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801aa24:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801aa28:	79ee      	ldrb	r6, [r5, #7]
 801aa2a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801aa2e:	4316      	orrs	r6, r2
 801aa30:	19da      	adds	r2, r3, r7
 801aa32:	b291      	uxth	r1, r2
 801aa34:	291d      	cmp	r1, #29
 801aa36:	b2b7      	uxth	r7, r6
 801aa38:	d87a      	bhi.n	801ab30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801aa3a:	2201      	movs	r2, #1
 801aa3c:	408a      	lsls	r2, r1
 801aa3e:	4975      	ldr	r1, [pc, #468]	; (801ac14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801aa40:	420a      	tst	r2, r1
 801aa42:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801aa46:	d12d      	bne.n	801aaa4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801aa48:	f412 7f60 	tst.w	r2, #896	; 0x380
 801aa4c:	d070      	beq.n	801ab30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801aa4e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801aa52:	462b      	mov	r3, r5
 801aa54:	f105 0e08 	add.w	lr, r5, #8
 801aa58:	4615      	mov	r5, r2
 801aa5a:	6818      	ldr	r0, [r3, #0]
 801aa5c:	6859      	ldr	r1, [r3, #4]
 801aa5e:	4694      	mov	ip, r2
 801aa60:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801aa64:	3308      	adds	r3, #8
 801aa66:	4573      	cmp	r3, lr
 801aa68:	4662      	mov	r2, ip
 801aa6a:	d1f6      	bne.n	801aa5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801aa6c:	6818      	ldr	r0, [r3, #0]
 801aa6e:	f8cc 0000 	str.w	r0, [ip]
 801aa72:	889b      	ldrh	r3, [r3, #4]
 801aa74:	f8ac 3004 	strh.w	r3, [ip, #4]
 801aa78:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801aa7c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801aa80:	b2b3      	uxth	r3, r6
 801aa82:	1aca      	subs	r2, r1, r3
 801aa84:	b292      	uxth	r2, r2
 801aa86:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801aa8a:	10d2      	asrs	r2, r2, #3
 801aa8c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801aa90:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801aa94:	4302      	orrs	r2, r0
 801aa96:	1bcf      	subs	r7, r1, r7
 801aa98:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801aa9c:	1afb      	subs	r3, r7, r3
 801aa9e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801aaa2:	e7b8      	b.n	801aa16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801aaa4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801aaa6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801aaaa:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801aaac:	f640 6333 	movw	r3, #3635	; 0xe33
 801aab0:	4299      	cmp	r1, r3
 801aab2:	d110      	bne.n	801aad6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801aab4:	6803      	ldr	r3, [r0, #0]
 801aab6:	68db      	ldr	r3, [r3, #12]
 801aab8:	4798      	blx	r3
 801aaba:	7b41      	ldrb	r1, [r0, #13]
 801aabc:	00cb      	lsls	r3, r1, #3
 801aabe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aac2:	7a03      	ldrb	r3, [r0, #8]
 801aac4:	0648      	lsls	r0, r1, #25
 801aac6:	ea43 0302 	orr.w	r3, r3, r2
 801aaca:	bf44      	itt	mi
 801aacc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aad0:	b21b      	sxthmi	r3, r3
 801aad2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801aad6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801aada:	443b      	add	r3, r7
 801aadc:	4433      	add	r3, r6
 801aade:	b29b      	uxth	r3, r3
 801aae0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801aae4:	462a      	mov	r2, r5
 801aae6:	f105 0c08 	add.w	ip, r5, #8
 801aaea:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801aaee:	4635      	mov	r5, r6
 801aaf0:	6810      	ldr	r0, [r2, #0]
 801aaf2:	6851      	ldr	r1, [r2, #4]
 801aaf4:	4637      	mov	r7, r6
 801aaf6:	c703      	stmia	r7!, {r0, r1}
 801aaf8:	3208      	adds	r2, #8
 801aafa:	4562      	cmp	r2, ip
 801aafc:	463e      	mov	r6, r7
 801aafe:	d1f7      	bne.n	801aaf0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801ab00:	6810      	ldr	r0, [r2, #0]
 801ab02:	6038      	str	r0, [r7, #0]
 801ab04:	8892      	ldrh	r2, [r2, #4]
 801ab06:	80ba      	strh	r2, [r7, #4]
 801ab08:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ab0c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ab10:	10db      	asrs	r3, r3, #3
 801ab12:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ab16:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ab1a:	4313      	orrs	r3, r2
 801ab1c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801ab20:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801ab24:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801ab28:	1a9b      	subs	r3, r3, r2
 801ab2a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801ab2e:	e772      	b.n	801aa16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801ab30:	f023 0204 	bic.w	r2, r3, #4
 801ab34:	f640 611b 	movw	r1, #3611	; 0xe1b
 801ab38:	428a      	cmp	r2, r1
 801ab3a:	d003      	beq.n	801ab44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801ab3c:	f640 621d 	movw	r2, #3613	; 0xe1d
 801ab40:	4293      	cmp	r3, r2
 801ab42:	d120      	bne.n	801ab86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801ab44:	3b01      	subs	r3, #1
 801ab46:	4602      	mov	r2, r0
 801ab48:	b29b      	uxth	r3, r3
 801ab4a:	4629      	mov	r1, r5
 801ab4c:	4620      	mov	r0, r4
 801ab4e:	f7ff ff4b 	bl	801a9e8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801ab52:	7b41      	ldrb	r1, [r0, #13]
 801ab54:	00cb      	lsls	r3, r1, #3
 801ab56:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ab5a:	7a03      	ldrb	r3, [r0, #8]
 801ab5c:	0649      	lsls	r1, r1, #25
 801ab5e:	ea43 0302 	orr.w	r3, r3, r2
 801ab62:	bf44      	itt	mi
 801ab64:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ab68:	b21b      	sxthmi	r3, r3
 801ab6a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ab6e:	7b6b      	ldrb	r3, [r5, #13]
 801ab70:	7aaa      	ldrb	r2, [r5, #10]
 801ab72:	005b      	lsls	r3, r3, #1
 801ab74:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801ab78:	4313      	orrs	r3, r2
 801ab7a:	115a      	asrs	r2, r3, #5
 801ab7c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801ab80:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801ab84:	e036      	b.n	801abf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801ab86:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801ab8a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801ab8e:	7a2a      	ldrb	r2, [r5, #8]
 801ab90:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801ab94:	ea42 0201 	orr.w	r2, r2, r1
 801ab98:	bf1c      	itt	ne
 801ab9a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801ab9e:	b212      	sxthne	r2, r2
 801aba0:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801aba4:	f640 6109 	movw	r1, #3593	; 0xe09
 801aba8:	f023 0210 	bic.w	r2, r3, #16
 801abac:	428a      	cmp	r2, r1
 801abae:	d003      	beq.n	801abb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801abb0:	f640 6213 	movw	r2, #3603	; 0xe13
 801abb4:	4293      	cmp	r3, r2
 801abb6:	d12a      	bne.n	801ac0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801abb8:	7b6e      	ldrb	r6, [r5, #13]
 801abba:	0076      	lsls	r6, r6, #1
 801abbc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801abc0:	7aae      	ldrb	r6, [r5, #10]
 801abc2:	4316      	orrs	r6, r2
 801abc4:	f640 6213 	movw	r2, #3603	; 0xe13
 801abc8:	4293      	cmp	r3, r2
 801abca:	bf18      	it	ne
 801abcc:	f103 33ff 	addne.w	r3, r3, #4294967295
 801abd0:	4602      	mov	r2, r0
 801abd2:	bf14      	ite	ne
 801abd4:	b29b      	uxthne	r3, r3
 801abd6:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801abda:	4629      	mov	r1, r5
 801abdc:	4620      	mov	r0, r4
 801abde:	f7ff ff03 	bl	801a9e8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801abe2:	7b43      	ldrb	r3, [r0, #13]
 801abe4:	7a82      	ldrb	r2, [r0, #10]
 801abe6:	005b      	lsls	r3, r3, #1
 801abe8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801abec:	4313      	orrs	r3, r2
 801abee:	1af6      	subs	r6, r6, r3
 801abf0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801abf4:	7b69      	ldrb	r1, [r5, #13]
 801abf6:	00cb      	lsls	r3, r1, #3
 801abf8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801abfc:	7a2b      	ldrb	r3, [r5, #8]
 801abfe:	4313      	orrs	r3, r2
 801ac00:	064a      	lsls	r2, r1, #25
 801ac02:	bf44      	itt	mi
 801ac04:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ac08:	b21b      	sxthmi	r3, r3
 801ac0a:	1bdb      	subs	r3, r3, r7
 801ac0c:	e747      	b.n	801aa9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801ac0e:	2300      	movs	r3, #0
 801ac10:	e7b6      	b.n	801ab80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801ac12:	bf00      	nop
 801ac14:	3fc00079 	.word	0x3fc00079

0801ac18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801ac18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ac1c:	4604      	mov	r4, r0
 801ac1e:	b942      	cbnz	r2, 801ac32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801ac20:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801ac24:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801ac28:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801ac2c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801ac30:	e047      	b.n	801acc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801ac32:	7b51      	ldrb	r1, [r2, #13]
 801ac34:	8893      	ldrh	r3, [r2, #4]
 801ac36:	010d      	lsls	r5, r1, #4
 801ac38:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801ac3c:	79d5      	ldrb	r5, [r2, #7]
 801ac3e:	4305      	orrs	r5, r0
 801ac40:	2d04      	cmp	r5, #4
 801ac42:	bfcc      	ite	gt
 801ac44:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801ac48:	f04f 0e01 	movle.w	lr, #1
 801ac4c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801ac50:	f200 80ab 	bhi.w	801adaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801ac54:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801ac58:	4283      	cmp	r3, r0
 801ac5a:	d216      	bcs.n	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac5c:	f240 605b 	movw	r0, #1627	; 0x65b
 801ac60:	4283      	cmp	r3, r0
 801ac62:	d859      	bhi.n	801ad18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801ac64:	f240 6057 	movw	r0, #1623	; 0x657
 801ac68:	4283      	cmp	r3, r0
 801ac6a:	d20e      	bcs.n	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac6c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801ac70:	d24a      	bcs.n	801ad08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801ac72:	f240 604e 	movw	r0, #1614	; 0x64e
 801ac76:	4283      	cmp	r3, r0
 801ac78:	d207      	bcs.n	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac7a:	f240 601a 	movw	r0, #1562	; 0x61a
 801ac7e:	4283      	cmp	r3, r0
 801ac80:	d02a      	beq.n	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac82:	d821      	bhi.n	801acc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801ac84:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801ac88:	d35b      	bcc.n	801ad42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ac8a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801ac8e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ac92:	f040 80d0 	bne.w	801ae36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ac96:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801ac9a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ac9e:	f040 80ca 	bne.w	801ae36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801aca2:	00cb      	lsls	r3, r1, #3
 801aca4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801aca8:	7a13      	ldrb	r3, [r2, #8]
 801acaa:	0649      	lsls	r1, r1, #25
 801acac:	ea43 0300 	orr.w	r3, r3, r0
 801acb0:	bf44      	itt	mi
 801acb2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801acb6:	b21b      	sxthmi	r3, r3
 801acb8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801acbc:	1b5d      	subs	r5, r3, r5
 801acbe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801acc2:	4610      	mov	r0, r2
 801acc4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801acc8:	f240 604b 	movw	r0, #1611	; 0x64b
 801accc:	4283      	cmp	r3, r0
 801acce:	d338      	bcc.n	801ad42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801acd0:	f240 604c 	movw	r0, #1612	; 0x64c
 801acd4:	4283      	cmp	r3, r0
 801acd6:	d9d8      	bls.n	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801acd8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801acdc:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801ace0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ace4:	f040 80f2 	bne.w	801aecc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ace8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801acec:	f040 80ee 	bne.w	801aecc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801acf0:	00cb      	lsls	r3, r1, #3
 801acf2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801acf6:	7a13      	ldrb	r3, [r2, #8]
 801acf8:	064e      	lsls	r6, r1, #25
 801acfa:	ea43 0300 	orr.w	r3, r3, r0
 801acfe:	bf44      	itt	mi
 801ad00:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ad04:	b21b      	sxthmi	r3, r3
 801ad06:	e7d9      	b.n	801acbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801ad08:	f240 6054 	movw	r0, #1620	; 0x654
 801ad0c:	4283      	cmp	r3, r0
 801ad0e:	d8e3      	bhi.n	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad10:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801ad14:	d9e0      	bls.n	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad16:	e7b8      	b.n	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad18:	f240 6074 	movw	r0, #1652	; 0x674
 801ad1c:	4283      	cmp	r3, r0
 801ad1e:	d0b4      	beq.n	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad20:	d82d      	bhi.n	801ad7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801ad22:	f240 605e 	movw	r0, #1630	; 0x65e
 801ad26:	4283      	cmp	r3, r0
 801ad28:	d804      	bhi.n	801ad34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801ad2a:	f240 605d 	movw	r0, #1629	; 0x65d
 801ad2e:	4283      	cmp	r3, r0
 801ad30:	d3d2      	bcc.n	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad32:	e7aa      	b.n	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad34:	f240 605f 	movw	r0, #1631	; 0x65f
 801ad38:	4283      	cmp	r3, r0
 801ad3a:	d0cd      	beq.n	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad3c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801ad40:	d0a3      	beq.n	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad42:	00cb      	lsls	r3, r1, #3
 801ad44:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ad48:	7a13      	ldrb	r3, [r2, #8]
 801ad4a:	0649      	lsls	r1, r1, #25
 801ad4c:	ea43 0300 	orr.w	r3, r3, r0
 801ad50:	bf44      	itt	mi
 801ad52:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ad56:	b21b      	sxthmi	r3, r3
 801ad58:	1b5d      	subs	r5, r3, r5
 801ad5a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ad5e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ad62:	7b53      	ldrb	r3, [r2, #13]
 801ad64:	015b      	lsls	r3, r3, #5
 801ad66:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801ad6a:	7993      	ldrb	r3, [r2, #6]
 801ad6c:	430b      	orrs	r3, r1
 801ad6e:	005b      	lsls	r3, r3, #1
 801ad70:	2105      	movs	r1, #5
 801ad72:	fb93 f3f1 	sdiv	r3, r3, r1
 801ad76:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801ad7a:	440b      	add	r3, r1
 801ad7c:	e756      	b.n	801ac2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801ad7e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801ad82:	4283      	cmp	r3, r0
 801ad84:	d809      	bhi.n	801ad9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801ad86:	f240 60df 	movw	r0, #1759	; 0x6df
 801ad8a:	4283      	cmp	r3, r0
 801ad8c:	f4bf af7d 	bcs.w	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad90:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801ad94:	2b05      	cmp	r3, #5
 801ad96:	d8d4      	bhi.n	801ad42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ad98:	e777      	b.n	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad9a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801ad9e:	4283      	cmp	r3, r0
 801ada0:	d09a      	beq.n	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ada2:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801ada6:	4283      	cmp	r3, r0
 801ada8:	e7ca      	b.n	801ad40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801adaa:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801adae:	d22b      	bcs.n	801ae08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801adb0:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801adb4:	4283      	cmp	r3, r0
 801adb6:	d28f      	bcs.n	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801adb8:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801adbc:	4283      	cmp	r3, r0
 801adbe:	d816      	bhi.n	801adee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801adc0:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801adc4:	4283      	cmp	r3, r0
 801adc6:	f4bf af60 	bcs.w	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801adca:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801adce:	4283      	cmp	r3, r0
 801add0:	d80a      	bhi.n	801ade8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801add2:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801add6:	4283      	cmp	r3, r0
 801add8:	f4bf af57 	bcs.w	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801addc:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801ade0:	4283      	cmp	r3, r0
 801ade2:	f43f af79 	beq.w	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ade6:	e7ac      	b.n	801ad42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ade8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801adec:	e7f8      	b.n	801ade0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801adee:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801adf2:	4283      	cmp	r3, r0
 801adf4:	d802      	bhi.n	801adfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801adf6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801adfa:	e798      	b.n	801ad2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801adfc:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801ae00:	4283      	cmp	r3, r0
 801ae02:	f47f af42 	bne.w	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae06:	e767      	b.n	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae08:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801ae0c:	4283      	cmp	r3, r0
 801ae0e:	f43f af63 	beq.w	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae12:	d802      	bhi.n	801ae1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801ae14:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801ae18:	e7f2      	b.n	801ae00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801ae1a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801ae1e:	4283      	cmp	r3, r0
 801ae20:	d805      	bhi.n	801ae2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801ae22:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801ae26:	4283      	cmp	r3, r0
 801ae28:	f4ff af2f 	bcc.w	801ac8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ae2c:	e754      	b.n	801acd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ae2e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801ae32:	4283      	cmp	r3, r0
 801ae34:	e7af      	b.n	801ad96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801ae36:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801ae3a:	4617      	mov	r7, r2
 801ae3c:	f102 0808 	add.w	r8, r2, #8
 801ae40:	4666      	mov	r6, ip
 801ae42:	6838      	ldr	r0, [r7, #0]
 801ae44:	6879      	ldr	r1, [r7, #4]
 801ae46:	46e6      	mov	lr, ip
 801ae48:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801ae4c:	3708      	adds	r7, #8
 801ae4e:	4547      	cmp	r7, r8
 801ae50:	46f4      	mov	ip, lr
 801ae52:	d1f6      	bne.n	801ae42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801ae54:	6838      	ldr	r0, [r7, #0]
 801ae56:	f8ce 0000 	str.w	r0, [lr]
 801ae5a:	88b9      	ldrh	r1, [r7, #4]
 801ae5c:	f8ae 1004 	strh.w	r1, [lr, #4]
 801ae60:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801ae64:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ae68:	d009      	beq.n	801ae7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801ae6a:	7b51      	ldrb	r1, [r2, #13]
 801ae6c:	7992      	ldrb	r2, [r2, #6]
 801ae6e:	0149      	lsls	r1, r1, #5
 801ae70:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801ae74:	4311      	orrs	r1, r2
 801ae76:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801ae7a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801ae7e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ae82:	b2ad      	uxth	r5, r5
 801ae84:	d00d      	beq.n	801aea2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801ae86:	442b      	add	r3, r5
 801ae88:	b29b      	uxth	r3, r3
 801ae8a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ae8e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ae92:	10db      	asrs	r3, r3, #3
 801ae94:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ae98:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ae9c:	4313      	orrs	r3, r2
 801ae9e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801aea2:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801aea6:	00cb      	lsls	r3, r1, #3
 801aea8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aeac:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801aeb0:	064f      	lsls	r7, r1, #25
 801aeb2:	ea43 0302 	orr.w	r3, r3, r2
 801aeb6:	bf44      	itt	mi
 801aeb8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aebc:	b21b      	sxthmi	r3, r3
 801aebe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801aec2:	1b5b      	subs	r3, r3, r5
 801aec4:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801aec8:	4632      	mov	r2, r6
 801aeca:	e6fa      	b.n	801acc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801aecc:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801aed0:	4617      	mov	r7, r2
 801aed2:	f102 0908 	add.w	r9, r2, #8
 801aed6:	4666      	mov	r6, ip
 801aed8:	6838      	ldr	r0, [r7, #0]
 801aeda:	6879      	ldr	r1, [r7, #4]
 801aedc:	46e0      	mov	r8, ip
 801aede:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801aee2:	3708      	adds	r7, #8
 801aee4:	454f      	cmp	r7, r9
 801aee6:	46c4      	mov	ip, r8
 801aee8:	d1f6      	bne.n	801aed8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801aeea:	6838      	ldr	r0, [r7, #0]
 801aeec:	f8c8 0000 	str.w	r0, [r8]
 801aef0:	88b9      	ldrh	r1, [r7, #4]
 801aef2:	f8a8 1004 	strh.w	r1, [r8, #4]
 801aef6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801aefa:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801aefe:	d009      	beq.n	801af14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801af00:	7b51      	ldrb	r1, [r2, #13]
 801af02:	7992      	ldrb	r2, [r2, #6]
 801af04:	0149      	lsls	r1, r1, #5
 801af06:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801af0a:	4311      	orrs	r1, r2
 801af0c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801af10:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801af14:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801af18:	d00e      	beq.n	801af38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801af1a:	eba3 030e 	sub.w	r3, r3, lr
 801af1e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801af22:	b29b      	uxth	r3, r3
 801af24:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801af28:	10db      	asrs	r3, r3, #3
 801af2a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801af2e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801af32:	4313      	orrs	r3, r2
 801af34:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801af38:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801af3c:	00cb      	lsls	r3, r1, #3
 801af3e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801af42:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801af46:	0648      	lsls	r0, r1, #25
 801af48:	ea43 0302 	orr.w	r3, r3, r2
 801af4c:	bf44      	itt	mi
 801af4e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801af52:	b21b      	sxthmi	r3, r3
 801af54:	1b5d      	subs	r5, r3, r5
 801af56:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801af5a:	e7b5      	b.n	801aec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801af5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801af5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801af60:	461e      	mov	r6, r3
 801af62:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801af64:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801af68:	4604      	mov	r4, r0
 801af6a:	4617      	mov	r7, r2
 801af6c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801af70:	f7ef fba4 	bl	800a6bc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801af74:	4605      	mov	r5, r0
 801af76:	b918      	cbnz	r0, 801af80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801af78:	6030      	str	r0, [r6, #0]
 801af7a:	4628      	mov	r0, r5
 801af7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801af80:	683b      	ldr	r3, [r7, #0]
 801af82:	4601      	mov	r1, r0
 801af84:	68db      	ldr	r3, [r3, #12]
 801af86:	4638      	mov	r0, r7
 801af88:	4798      	blx	r3
 801af8a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801af8e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801af92:	4602      	mov	r2, r0
 801af94:	6030      	str	r0, [r6, #0]
 801af96:	d213      	bcs.n	801afc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801af98:	4643      	mov	r3, r8
 801af9a:	4639      	mov	r1, r7
 801af9c:	4620      	mov	r0, r4
 801af9e:	f7ff fe3b 	bl	801ac18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801afa2:	6030      	str	r0, [r6, #0]
 801afa4:	6833      	ldr	r3, [r6, #0]
 801afa6:	b143      	cbz	r3, 801afba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801afa8:	7b5a      	ldrb	r2, [r3, #13]
 801afaa:	7a9b      	ldrb	r3, [r3, #10]
 801afac:	0052      	lsls	r2, r2, #1
 801afae:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801afb2:	4313      	orrs	r3, r2
 801afb4:	bf0c      	ite	eq
 801afb6:	2301      	moveq	r3, #1
 801afb8:	2300      	movne	r3, #0
 801afba:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801afbe:	e7dc      	b.n	801af7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801afc0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801afc4:	b29b      	uxth	r3, r3
 801afc6:	2b7f      	cmp	r3, #127	; 0x7f
 801afc8:	d804      	bhi.n	801afd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801afca:	4639      	mov	r1, r7
 801afcc:	4620      	mov	r0, r4
 801afce:	f7ff fd17 	bl	801aa00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801afd2:	e7e6      	b.n	801afa2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801afd4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801afd8:	2b00      	cmp	r3, #0
 801afda:	d0e3      	beq.n	801afa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801afdc:	f640 1302 	movw	r3, #2306	; 0x902
 801afe0:	429d      	cmp	r5, r3
 801afe2:	d1df      	bne.n	801afa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801afe4:	4601      	mov	r1, r0
 801afe6:	4620      	mov	r0, r4
 801afe8:	f7ff fcdb 	bl	801a9a2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801afec:	e7d9      	b.n	801afa2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801afee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801afee:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801aff2:	461e      	mov	r6, r3
 801aff4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801aff6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801affa:	4604      	mov	r4, r0
 801affc:	4617      	mov	r7, r2
 801affe:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b002:	f7ef fb5b 	bl	800a6bc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b006:	4605      	mov	r5, r0
 801b008:	b918      	cbnz	r0, 801b012 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801b00a:	6030      	str	r0, [r6, #0]
 801b00c:	4628      	mov	r0, r5
 801b00e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b012:	683b      	ldr	r3, [r7, #0]
 801b014:	4601      	mov	r1, r0
 801b016:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801b01a:	4638      	mov	r0, r7
 801b01c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801b020:	47c8      	blx	r9
 801b022:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b026:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b02a:	4602      	mov	r2, r0
 801b02c:	6030      	str	r0, [r6, #0]
 801b02e:	d213      	bcs.n	801b058 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801b030:	4643      	mov	r3, r8
 801b032:	4639      	mov	r1, r7
 801b034:	4620      	mov	r0, r4
 801b036:	f7ff fdef 	bl	801ac18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b03a:	6030      	str	r0, [r6, #0]
 801b03c:	6833      	ldr	r3, [r6, #0]
 801b03e:	b143      	cbz	r3, 801b052 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801b040:	7b5a      	ldrb	r2, [r3, #13]
 801b042:	7a9b      	ldrb	r3, [r3, #10]
 801b044:	0052      	lsls	r2, r2, #1
 801b046:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b04a:	4313      	orrs	r3, r2
 801b04c:	bf0c      	ite	eq
 801b04e:	2301      	moveq	r3, #1
 801b050:	2300      	movne	r3, #0
 801b052:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b056:	e7d9      	b.n	801b00c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801b058:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b05c:	b29b      	uxth	r3, r3
 801b05e:	2b7f      	cmp	r3, #127	; 0x7f
 801b060:	d804      	bhi.n	801b06c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801b062:	4639      	mov	r1, r7
 801b064:	4620      	mov	r0, r4
 801b066:	f7ff fccb 	bl	801aa00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b06a:	e7e6      	b.n	801b03a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801b06c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b070:	2b00      	cmp	r3, #0
 801b072:	d0e3      	beq.n	801b03c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801b074:	f640 1302 	movw	r3, #2306	; 0x902
 801b078:	429d      	cmp	r5, r3
 801b07a:	d1df      	bne.n	801b03c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801b07c:	4601      	mov	r1, r0
 801b07e:	4620      	mov	r0, r4
 801b080:	f7ff fc8f 	bl	801a9a2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b084:	e7d9      	b.n	801b03a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801b086 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801b086:	b510      	push	{r4, lr}
 801b088:	4604      	mov	r4, r0
 801b08a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801b08e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b090:	b1f1      	cbz	r1, 801b0d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b092:	2b0a      	cmp	r3, #10
 801b094:	d02f      	beq.n	801b0f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b096:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801b098:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801b09c:	3901      	subs	r1, #1
 801b09e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801b0a0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801b0a4:	1c51      	adds	r1, r2, #1
 801b0a6:	b289      	uxth	r1, r1
 801b0a8:	2901      	cmp	r1, #1
 801b0aa:	bf84      	itt	hi
 801b0ac:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801b0b0:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801b0b2:	f103 0201 	add.w	r2, r3, #1
 801b0b6:	8722      	strh	r2, [r4, #56]	; 0x38
 801b0b8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b0ba:	bf98      	it	ls
 801b0bc:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801b0be:	4413      	add	r3, r2
 801b0c0:	b29b      	uxth	r3, r3
 801b0c2:	2b09      	cmp	r3, #9
 801b0c4:	bf88      	it	hi
 801b0c6:	3b0a      	subhi	r3, #10
 801b0c8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b0cc:	8458      	strh	r0, [r3, #34]	; 0x22
 801b0ce:	e7dc      	b.n	801b08a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801b0d0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b0d2:	2b0a      	cmp	r3, #10
 801b0d4:	d00f      	beq.n	801b0f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b0d6:	4620      	mov	r0, r4
 801b0d8:	f7ff fc11 	bl	801a8fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801b0dc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b0de:	1c5a      	adds	r2, r3, #1
 801b0e0:	8722      	strh	r2, [r4, #56]	; 0x38
 801b0e2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b0e4:	4413      	add	r3, r2
 801b0e6:	b29b      	uxth	r3, r3
 801b0e8:	2b09      	cmp	r3, #9
 801b0ea:	bf88      	it	hi
 801b0ec:	3b0a      	subhi	r3, #10
 801b0ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b0f2:	8458      	strh	r0, [r3, #34]	; 0x22
 801b0f4:	e7ec      	b.n	801b0d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b0f6:	bd10      	pop	{r4, pc}

0801b0f8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801b0f8:	b538      	push	{r3, r4, r5, lr}
 801b0fa:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b0fc:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801b100:	4604      	mov	r4, r0
 801b102:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801b104:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801b106:	3a01      	subs	r2, #1
 801b108:	8702      	strh	r2, [r0, #56]	; 0x38
 801b10a:	1c5a      	adds	r2, r3, #1
 801b10c:	b292      	uxth	r2, r2
 801b10e:	2a09      	cmp	r2, #9
 801b110:	bf86      	itte	hi
 801b112:	3b09      	subhi	r3, #9
 801b114:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801b116:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801b118:	f7ff ffb5 	bl	801b086 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801b11c:	8c23      	ldrh	r3, [r4, #32]
 801b11e:	2b01      	cmp	r3, #1
 801b120:	bf9c      	itt	ls
 801b122:	3301      	addls	r3, #1
 801b124:	8423      	strhls	r3, [r4, #32]
 801b126:	8be3      	ldrh	r3, [r4, #30]
 801b128:	b90b      	cbnz	r3, 801b12e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801b12a:	2302      	movs	r3, #2
 801b12c:	83e3      	strh	r3, [r4, #30]
 801b12e:	8be3      	ldrh	r3, [r4, #30]
 801b130:	3b01      	subs	r3, #1
 801b132:	b29b      	uxth	r3, r3
 801b134:	83e3      	strh	r3, [r4, #30]
 801b136:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b13a:	4628      	mov	r0, r5
 801b13c:	8365      	strh	r5, [r4, #26]
 801b13e:	bd38      	pop	{r3, r4, r5, pc}

0801b140 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801b140:	428a      	cmp	r2, r1
 801b142:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b146:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801b148:	d931      	bls.n	801b1ae <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801b14a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801b14c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801b150:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801b154:	19ee      	adds	r6, r5, r7
 801b156:	1a54      	subs	r4, r2, r1
 801b158:	3e01      	subs	r6, #1
 801b15a:	fa1f fe84 	uxth.w	lr, r4
 801b15e:	b2b4      	uxth	r4, r6
 801b160:	eba4 090e 	sub.w	r9, r4, lr
 801b164:	fa1f f989 	uxth.w	r9, r9
 801b168:	2c09      	cmp	r4, #9
 801b16a:	4626      	mov	r6, r4
 801b16c:	bf88      	it	hi
 801b16e:	f1a4 060a 	subhi.w	r6, r4, #10
 801b172:	f1bc 0f00 	cmp.w	ip, #0
 801b176:	bf08      	it	eq
 801b178:	f04f 0c02 	moveq.w	ip, #2
 801b17c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b180:	f10c 3cff 	add.w	ip, ip, #4294967295
 801b184:	fa1f fc8c 	uxth.w	ip, ip
 801b188:	3c01      	subs	r4, #1
 801b18a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801b18e:	b2a4      	uxth	r4, r4
 801b190:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801b194:	454c      	cmp	r4, r9
 801b196:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801b19a:	d1e5      	bne.n	801b168 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801b19c:	eba5 050e 	sub.w	r5, r5, lr
 801b1a0:	eb0e 0408 	add.w	r4, lr, r8
 801b1a4:	8705      	strh	r5, [r0, #56]	; 0x38
 801b1a6:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801b1aa:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801b1ae:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b1b0:	1a64      	subs	r4, r4, r1
 801b1b2:	4439      	add	r1, r7
 801b1b4:	b289      	uxth	r1, r1
 801b1b6:	2909      	cmp	r1, #9
 801b1b8:	bf88      	it	hi
 801b1ba:	390a      	subhi	r1, #10
 801b1bc:	8704      	strh	r4, [r0, #56]	; 0x38
 801b1be:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b1c0:	250a      	movs	r5, #10
 801b1c2:	b18a      	cbz	r2, 801b1e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801b1c4:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b1c6:	3a01      	subs	r2, #1
 801b1c8:	b292      	uxth	r2, r2
 801b1ca:	3101      	adds	r1, #1
 801b1cc:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b1d0:	8701      	strh	r1, [r0, #56]	; 0x38
 801b1d2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b1d4:	b901      	cbnz	r1, 801b1d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801b1d6:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b1d8:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b1da:	3901      	subs	r1, #1
 801b1dc:	b289      	uxth	r1, r1
 801b1de:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b1e0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b1e4:	844c      	strh	r4, [r1, #34]	; 0x22
 801b1e6:	e7ec      	b.n	801b1c2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801b1e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b1ec:	f7ff bf4b 	b.w	801b086 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801b1f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b1f0:	b570      	push	{r4, r5, r6, lr}
 801b1f2:	2500      	movs	r5, #0
 801b1f4:	4295      	cmp	r5, r2
 801b1f6:	d011      	beq.n	801b21c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801b1f8:	8bc4      	ldrh	r4, [r0, #30]
 801b1fa:	f831 6b02 	ldrh.w	r6, [r1], #2
 801b1fe:	4414      	add	r4, r2
 801b200:	3c01      	subs	r4, #1
 801b202:	1b64      	subs	r4, r4, r5
 801b204:	b2a4      	uxth	r4, r4
 801b206:	2c01      	cmp	r4, #1
 801b208:	bf88      	it	hi
 801b20a:	3c02      	subhi	r4, #2
 801b20c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b210:	8b64      	ldrh	r4, [r4, #26]
 801b212:	42b4      	cmp	r4, r6
 801b214:	d117      	bne.n	801b246 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801b216:	3501      	adds	r5, #1
 801b218:	b2ad      	uxth	r5, r5
 801b21a:	e7eb      	b.n	801b1f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801b21c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b220:	2400      	movs	r4, #0
 801b222:	4413      	add	r3, r2
 801b224:	b2a2      	uxth	r2, r4
 801b226:	429a      	cmp	r2, r3
 801b228:	da0f      	bge.n	801b24a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801b22a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b22c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b230:	4432      	add	r2, r6
 801b232:	b292      	uxth	r2, r2
 801b234:	2a09      	cmp	r2, #9
 801b236:	bf88      	it	hi
 801b238:	3a0a      	subhi	r2, #10
 801b23a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b23e:	3401      	adds	r4, #1
 801b240:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b242:	42aa      	cmp	r2, r5
 801b244:	d0ee      	beq.n	801b224 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801b246:	2000      	movs	r0, #0
 801b248:	bd70      	pop	{r4, r5, r6, pc}
 801b24a:	2001      	movs	r0, #1
 801b24c:	e7fc      	b.n	801b248 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801b24e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b24e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b252:	4605      	mov	r5, r0
 801b254:	4616      	mov	r6, r2
 801b256:	1c8c      	adds	r4, r1, #2
 801b258:	8809      	ldrh	r1, [r1, #0]
 801b25a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b25e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b262:	42b3      	cmp	r3, r6
 801b264:	d124      	bne.n	801b2b0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b266:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b26a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b26e:	f001 070f 	and.w	r7, r1, #15
 801b272:	f8cd 8000 	str.w	r8, [sp]
 801b276:	464b      	mov	r3, r9
 801b278:	4652      	mov	r2, sl
 801b27a:	4621      	mov	r1, r4
 801b27c:	4628      	mov	r0, r5
 801b27e:	f7ff ffb7 	bl	801b1f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b282:	4683      	mov	fp, r0
 801b284:	b168      	cbz	r0, 801b2a2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b286:	eb0a 0109 	add.w	r1, sl, r9
 801b28a:	4441      	add	r1, r8
 801b28c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b290:	463a      	mov	r2, r7
 801b292:	4649      	mov	r1, r9
 801b294:	4628      	mov	r0, r5
 801b296:	f7ff ff53 	bl	801b140 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b29a:	4658      	mov	r0, fp
 801b29c:	b003      	add	sp, #12
 801b29e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2a2:	eb07 010a 	add.w	r1, r7, sl
 801b2a6:	4449      	add	r1, r9
 801b2a8:	4441      	add	r1, r8
 801b2aa:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b2ae:	e7d2      	b.n	801b256 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b2b0:	f04f 0b00 	mov.w	fp, #0
 801b2b4:	e7f1      	b.n	801b29a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b2b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b2b6:	b570      	push	{r4, r5, r6, lr}
 801b2b8:	8810      	ldrh	r0, [r2, #0]
 801b2ba:	4298      	cmp	r0, r3
 801b2bc:	d817      	bhi.n	801b2ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b2be:	1e48      	subs	r0, r1, #1
 801b2c0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b2c4:	4298      	cmp	r0, r3
 801b2c6:	d312      	bcc.n	801b2ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b2c8:	2400      	movs	r4, #0
 801b2ca:	428c      	cmp	r4, r1
 801b2cc:	d20f      	bcs.n	801b2ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b2ce:	1860      	adds	r0, r4, r1
 801b2d0:	1040      	asrs	r0, r0, #1
 801b2d2:	0085      	lsls	r5, r0, #2
 801b2d4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b2d8:	42b3      	cmp	r3, r6
 801b2da:	d902      	bls.n	801b2e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b2dc:	3001      	adds	r0, #1
 801b2de:	b284      	uxth	r4, r0
 801b2e0:	e7f3      	b.n	801b2ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b2e2:	d201      	bcs.n	801b2e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b2e4:	b281      	uxth	r1, r0
 801b2e6:	e7f0      	b.n	801b2ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b2e8:	442a      	add	r2, r5
 801b2ea:	8850      	ldrh	r0, [r2, #2]
 801b2ec:	bd70      	pop	{r4, r5, r6, pc}
 801b2ee:	2000      	movs	r0, #0
 801b2f0:	e7fc      	b.n	801b2ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b2f2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b2f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b2f6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b2f8:	886f      	ldrh	r7, [r5, #2]
 801b2fa:	4604      	mov	r4, r0
 801b2fc:	087f      	lsrs	r7, r7, #1
 801b2fe:	260b      	movs	r6, #11
 801b300:	3e01      	subs	r6, #1
 801b302:	d013      	beq.n	801b32c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b304:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b306:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b30a:	462a      	mov	r2, r5
 801b30c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b310:	4639      	mov	r1, r7
 801b312:	4643      	mov	r3, r8
 801b314:	4620      	mov	r0, r4
 801b316:	f7ff ffce 	bl	801b2b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b31a:	b138      	cbz	r0, 801b32c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b31c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b320:	4642      	mov	r2, r8
 801b322:	4620      	mov	r0, r4
 801b324:	f7ff ff93 	bl	801b24e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b328:	2800      	cmp	r0, #0
 801b32a:	d1e9      	bne.n	801b300 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b32c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b330 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801b330:	b570      	push	{r4, r5, r6, lr}
 801b332:	694a      	ldr	r2, [r1, #20]
 801b334:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801b336:	684b      	ldr	r3, [r1, #4]
 801b338:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801b33a:	1b54      	subs	r4, r2, r5
 801b33c:	f000 8106 	beq.w	801b54c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801b340:	1b9b      	subs	r3, r3, r6
 801b342:	d003      	beq.n	801b34c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b344:	4363      	muls	r3, r4
 801b346:	2210      	movs	r2, #16
 801b348:	fb93 f3f2 	sdiv	r3, r3, r2
 801b34c:	680c      	ldr	r4, [r1, #0]
 801b34e:	698a      	ldr	r2, [r1, #24]
 801b350:	1b65      	subs	r5, r4, r5
 801b352:	f000 80fd 	beq.w	801b550 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801b356:	1b92      	subs	r2, r2, r6
 801b358:	d003      	beq.n	801b362 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b35a:	436a      	muls	r2, r5
 801b35c:	2410      	movs	r4, #16
 801b35e:	fb92 f2f4 	sdiv	r2, r2, r4
 801b362:	1a9b      	subs	r3, r3, r2
 801b364:	ee07 3a90 	vmov	s15, r3
 801b368:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801b58c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801b36c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b370:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b374:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b378:	460a      	mov	r2, r1
 801b37a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801b37e:	4603      	mov	r3, r0
 801b380:	f100 040c 	add.w	r4, r0, #12
 801b384:	eeb1 6a43 	vneg.f32	s12, s6
 801b388:	edd2 7a02 	vldr	s15, [r2, #8]
 801b38c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801b390:	3214      	adds	r2, #20
 801b392:	ece3 6a01 	vstmia	r3!, {s13}
 801b396:	ed52 7a02 	vldr	s15, [r2, #-8]
 801b39a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b39e:	429c      	cmp	r4, r3
 801b3a0:	edc3 7a02 	vstr	s15, [r3, #8]
 801b3a4:	ed52 7a01 	vldr	s15, [r2, #-4]
 801b3a8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b3ac:	edc3 7a05 	vstr	s15, [r3, #20]
 801b3b0:	d1ea      	bne.n	801b388 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801b3b2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b3b4:	698b      	ldr	r3, [r1, #24]
 801b3b6:	edd0 4a02 	vldr	s9, [r0, #8]
 801b3ba:	edd0 3a00 	vldr	s7, [r0]
 801b3be:	edd0 6a01 	vldr	s13, [r0, #4]
 801b3c2:	ed90 5a05 	vldr	s10, [r0, #20]
 801b3c6:	ed90 2a03 	vldr	s4, [r0, #12]
 801b3ca:	edd0 5a04 	vldr	s11, [r0, #16]
 801b3ce:	ed90 1a07 	vldr	s2, [r0, #28]
 801b3d2:	edd0 2a06 	vldr	s5, [r0, #24]
 801b3d6:	1a9b      	subs	r3, r3, r2
 801b3d8:	ee07 3a90 	vmov	s15, r3
 801b3dc:	684b      	ldr	r3, [r1, #4]
 801b3de:	1a9b      	subs	r3, r3, r2
 801b3e0:	ee07 3a10 	vmov	s14, r3
 801b3e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b3e8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801b3ec:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b3f0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801b3f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b3f8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801b3fc:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b400:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801b404:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b408:	ee32 5a45 	vsub.f32	s10, s4, s10
 801b40c:	ee67 7a83 	vmul.f32	s15, s15, s6
 801b410:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801b414:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b416:	694a      	ldr	r2, [r1, #20]
 801b418:	1b13      	subs	r3, r2, r4
 801b41a:	ee07 3a10 	vmov	s14, r3
 801b41e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b422:	680b      	ldr	r3, [r1, #0]
 801b424:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b428:	1b1b      	subs	r3, r3, r4
 801b42a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801b42e:	ee07 3a10 	vmov	s14, r3
 801b432:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b436:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b43a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801b43e:	ee64 4a86 	vmul.f32	s9, s9, s12
 801b442:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801b446:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b448:	698b      	ldr	r3, [r1, #24]
 801b44a:	1a9b      	subs	r3, r3, r2
 801b44c:	ee06 3a90 	vmov	s13, r3
 801b450:	684b      	ldr	r3, [r1, #4]
 801b452:	1a9b      	subs	r3, r3, r2
 801b454:	ee07 3a10 	vmov	s14, r3
 801b458:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b45c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b460:	ee66 6a84 	vmul.f32	s13, s13, s8
 801b464:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b468:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801b46c:	eee5 6a87 	vfma.f32	s13, s11, s14
 801b470:	ee66 6a83 	vmul.f32	s13, s13, s6
 801b474:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801b478:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b47a:	694a      	ldr	r2, [r1, #20]
 801b47c:	1b13      	subs	r3, r2, r4
 801b47e:	ee07 3a10 	vmov	s14, r3
 801b482:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b486:	680b      	ldr	r3, [r1, #0]
 801b488:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b48c:	1b1b      	subs	r3, r3, r4
 801b48e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801b492:	ee07 3a10 	vmov	s14, r3
 801b496:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b49a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b49e:	eea5 5a87 	vfma.f32	s10, s11, s14
 801b4a2:	edd0 5a08 	vldr	s11, [r0, #32]
 801b4a6:	ee25 5a06 	vmul.f32	s10, s10, s12
 801b4aa:	ee31 1a65 	vsub.f32	s2, s2, s11
 801b4ae:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801b4b2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b4b4:	698b      	ldr	r3, [r1, #24]
 801b4b6:	1a9b      	subs	r3, r3, r2
 801b4b8:	ee07 3a10 	vmov	s14, r3
 801b4bc:	684b      	ldr	r3, [r1, #4]
 801b4be:	1a9b      	subs	r3, r3, r2
 801b4c0:	ee01 3a90 	vmov	s3, r3
 801b4c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b4c8:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801b4cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b4d0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801b4d4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801b4d8:	ee61 1a84 	vmul.f32	s3, s3, s8
 801b4dc:	eea1 7a21 	vfma.f32	s14, s2, s3
 801b4e0:	ee27 7a03 	vmul.f32	s14, s14, s6
 801b4e4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b4e8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b4ea:	694a      	ldr	r2, [r1, #20]
 801b4ec:	1b13      	subs	r3, r2, r4
 801b4ee:	ee03 3a10 	vmov	s6, r3
 801b4f2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b4f6:	680b      	ldr	r3, [r1, #0]
 801b4f8:	ee23 3a04 	vmul.f32	s6, s6, s8
 801b4fc:	1b1b      	subs	r3, r3, r4
 801b4fe:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801b502:	ee03 3a10 	vmov	s6, r3
 801b506:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b50a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801b50e:	eee1 5a04 	vfma.f32	s11, s2, s8
 801b512:	ee25 6a86 	vmul.f32	s12, s11, s12
 801b516:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801b51a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801b51e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801b522:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801b526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b52a:	dd13      	ble.n	801b554 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801b52c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b530:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801b534:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b536:	eee3 7a87 	vfma.f32	s15, s7, s14
 801b53a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801b53e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b542:	dd15      	ble.n	801b570 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801b544:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b548:	6403      	str	r3, [r0, #64]	; 0x40
 801b54a:	bd70      	pop	{r4, r5, r6, pc}
 801b54c:	4623      	mov	r3, r4
 801b54e:	e6fd      	b.n	801b34c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b550:	462a      	mov	r2, r5
 801b552:	e706      	b.n	801b362 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b554:	d502      	bpl.n	801b55c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801b556:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b55a:	e7e9      	b.n	801b530 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801b55c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801b560:	eea3 2a85 	vfma.f32	s4, s7, s10
 801b564:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801b568:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b56c:	dade      	bge.n	801b52c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801b56e:	e7f2      	b.n	801b556 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801b570:	d502      	bpl.n	801b578 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801b572:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b576:	e7e7      	b.n	801b548 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801b578:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801b57c:	eee3 4a86 	vfma.f32	s9, s7, s12
 801b580:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801b584:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b588:	dadc      	bge.n	801b544 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801b58a:	e7f2      	b.n	801b572 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801b58c:	3d800000 	.word	0x3d800000

0801b590 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801b590:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b594:	2714      	movs	r7, #20
 801b596:	435f      	muls	r7, r3
 801b598:	eb02 0c07 	add.w	ip, r2, r7
 801b59c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801b5a0:	f115 0e0f 	adds.w	lr, r5, #15
 801b5a4:	f100 80a2 	bmi.w	801b6ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801b5a8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801b5ac:	9c08      	ldr	r4, [sp, #32]
 801b5ae:	f8c0 e014 	str.w	lr, [r0, #20]
 801b5b2:	2614      	movs	r6, #20
 801b5b4:	4366      	muls	r6, r4
 801b5b6:	eb02 0806 	add.w	r8, r2, r6
 801b5ba:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b5be:	f115 040f 	adds.w	r4, r5, #15
 801b5c2:	f100 809f 	bmi.w	801b704 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801b5c6:	1124      	asrs	r4, r4, #4
 801b5c8:	eba4 040e 	sub.w	r4, r4, lr
 801b5cc:	6184      	str	r4, [r0, #24]
 801b5ce:	2c00      	cmp	r4, #0
 801b5d0:	f000 808a 	beq.w	801b6e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801b5d4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801b5d8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801b5dc:	5995      	ldr	r5, [r2, r6]
 801b5de:	eba4 0809 	sub.w	r8, r4, r9
 801b5e2:	59d4      	ldr	r4, [r2, r7]
 801b5e4:	eba5 0a04 	sub.w	sl, r5, r4
 801b5e8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801b5ec:	fb0e fe05 	mul.w	lr, lr, r5
 801b5f0:	fb0a ee19 	mls	lr, sl, r9, lr
 801b5f4:	fb08 e404 	mla	r4, r8, r4, lr
 801b5f8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801b5fc:	3c01      	subs	r4, #1
 801b5fe:	19a4      	adds	r4, r4, r6
 801b600:	f100 808c 	bmi.w	801b71c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801b604:	fb94 fef6 	sdiv	lr, r4, r6
 801b608:	f8c0 e000 	str.w	lr, [r0]
 801b60c:	fb06 441e 	mls	r4, r6, lr, r4
 801b610:	6104      	str	r4, [r0, #16]
 801b612:	2d00      	cmp	r5, #0
 801b614:	f2c0 8095 	blt.w	801b742 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801b618:	fb95 f4f6 	sdiv	r4, r5, r6
 801b61c:	6044      	str	r4, [r0, #4]
 801b61e:	fb06 5514 	mls	r5, r6, r4, r5
 801b622:	6085      	str	r5, [r0, #8]
 801b624:	60c6      	str	r6, [r0, #12]
 801b626:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801b62a:	6945      	ldr	r5, [r0, #20]
 801b62c:	59d2      	ldr	r2, [r2, r7]
 801b62e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801b764 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801b632:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b636:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801b63a:	ee07 4a10 	vmov	s14, r4
 801b63e:	6804      	ldr	r4, [r0, #0]
 801b640:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801b644:	ee07 2a90 	vmov	s15, r2
 801b648:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b64c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b650:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b654:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b658:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b65c:	edd3 6a00 	vldr	s13, [r3]
 801b660:	eee6 6a07 	vfma.f32	s13, s12, s14
 801b664:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801b668:	eee6 6a27 	vfma.f32	s13, s12, s15
 801b66c:	edc0 6a07 	vstr	s13, [r0, #28]
 801b670:	edd0 6a01 	vldr	s13, [r0, #4]
 801b674:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801b678:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b67c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b680:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b684:	ed80 6a08 	vstr	s12, [r0, #32]
 801b688:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801b68a:	6242      	str	r2, [r0, #36]	; 0x24
 801b68c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801b690:	ed93 6a03 	vldr	s12, [r3, #12]
 801b694:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b698:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b69c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801b6a0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801b6a4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b6a8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801b6ac:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b6b0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801b6b4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b6b6:	6302      	str	r2, [r0, #48]	; 0x30
 801b6b8:	ed93 6a06 	vldr	s12, [r3, #24]
 801b6bc:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801b6c0:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b6c4:	eeb0 7a46 	vmov.f32	s14, s12
 801b6c8:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801b6cc:	eea6 7a27 	vfma.f32	s14, s12, s15
 801b6d0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b6d4:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801b6d8:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801b6dc:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b6e0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801b6e4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801b6e6:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b6e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b6ec:	f1c5 0501 	rsb	r5, r5, #1
 801b6f0:	f015 050f 	ands.w	r5, r5, #15
 801b6f4:	bf18      	it	ne
 801b6f6:	2501      	movne	r5, #1
 801b6f8:	2410      	movs	r4, #16
 801b6fa:	fb9e fef4 	sdiv	lr, lr, r4
 801b6fe:	ebae 0e05 	sub.w	lr, lr, r5
 801b702:	e753      	b.n	801b5ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801b704:	f1c5 0501 	rsb	r5, r5, #1
 801b708:	f015 050f 	ands.w	r5, r5, #15
 801b70c:	bf18      	it	ne
 801b70e:	2501      	movne	r5, #1
 801b710:	f04f 0910 	mov.w	r9, #16
 801b714:	fb94 f4f9 	sdiv	r4, r4, r9
 801b718:	1b64      	subs	r4, r4, r5
 801b71a:	e755      	b.n	801b5c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801b71c:	4264      	negs	r4, r4
 801b71e:	fb94 fef6 	sdiv	lr, r4, r6
 801b722:	f1ce 0800 	rsb	r8, lr, #0
 801b726:	fb06 441e 	mls	r4, r6, lr, r4
 801b72a:	f8c0 8000 	str.w	r8, [r0]
 801b72e:	6104      	str	r4, [r0, #16]
 801b730:	2c00      	cmp	r4, #0
 801b732:	f43f af6e 	beq.w	801b612 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801b736:	ea6f 0e0e 	mvn.w	lr, lr
 801b73a:	f8c0 e000 	str.w	lr, [r0]
 801b73e:	1b34      	subs	r4, r6, r4
 801b740:	e766      	b.n	801b610 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801b742:	426d      	negs	r5, r5
 801b744:	fb95 f4f6 	sdiv	r4, r5, r6
 801b748:	f1c4 0e00 	rsb	lr, r4, #0
 801b74c:	fb06 5514 	mls	r5, r6, r4, r5
 801b750:	f8c0 e004 	str.w	lr, [r0, #4]
 801b754:	6085      	str	r5, [r0, #8]
 801b756:	2d00      	cmp	r5, #0
 801b758:	f43f af64 	beq.w	801b624 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801b75c:	43e4      	mvns	r4, r4
 801b75e:	6044      	str	r4, [r0, #4]
 801b760:	1b75      	subs	r5, r6, r5
 801b762:	e75e      	b.n	801b622 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801b764:	3d800000 	.word	0x3d800000

0801b768 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801b768:	4602      	mov	r2, r0
 801b76a:	b148      	cbz	r0, 801b780 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801b76c:	2300      	movs	r3, #0
 801b76e:	b298      	uxth	r0, r3
 801b770:	3301      	adds	r3, #1
 801b772:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801b776:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801b77a:	2900      	cmp	r1, #0
 801b77c:	d1f7      	bne.n	801b76e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801b77e:	4770      	bx	lr
 801b780:	4770      	bx	lr

0801b782 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801b782:	b530      	push	{r4, r5, lr}
 801b784:	4604      	mov	r4, r0
 801b786:	b159      	cbz	r1, 801b7a0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801b788:	b148      	cbz	r0, 801b79e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b78a:	2300      	movs	r3, #0
 801b78c:	b298      	uxth	r0, r3
 801b78e:	4282      	cmp	r2, r0
 801b790:	d905      	bls.n	801b79e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b792:	5ccd      	ldrb	r5, [r1, r3]
 801b794:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801b798:	3301      	adds	r3, #1
 801b79a:	2d00      	cmp	r5, #0
 801b79c:	d1f6      	bne.n	801b78c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801b79e:	bd30      	pop	{r4, r5, pc}
 801b7a0:	4608      	mov	r0, r1
 801b7a2:	e7fc      	b.n	801b79e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801b7a4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801b7a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b7a6:	b08b      	sub	sp, #44	; 0x2c
 801b7a8:	468c      	mov	ip, r1
 801b7aa:	2100      	movs	r1, #0
 801b7ac:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b7b0:	4604      	mov	r4, r0
 801b7b2:	261f      	movs	r6, #31
 801b7b4:	af01      	add	r7, sp, #4
 801b7b6:	fb94 fef3 	sdiv	lr, r4, r3
 801b7ba:	fb03 441e 	mls	r4, r3, lr, r4
 801b7be:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801b7c2:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801b7c6:	b2ec      	uxtb	r4, r5
 801b7c8:	2d09      	cmp	r5, #9
 801b7ca:	bfd4      	ite	le
 801b7cc:	3430      	addle	r4, #48	; 0x30
 801b7ce:	3457      	addgt	r4, #87	; 0x57
 801b7d0:	b2e4      	uxtb	r4, r4
 801b7d2:	55bc      	strb	r4, [r7, r6]
 801b7d4:	4674      	mov	r4, lr
 801b7d6:	1e71      	subs	r1, r6, #1
 801b7d8:	b974      	cbnz	r4, 801b7f8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801b7da:	2800      	cmp	r0, #0
 801b7dc:	da05      	bge.n	801b7ea <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801b7de:	ab0a      	add	r3, sp, #40	; 0x28
 801b7e0:	4419      	add	r1, r3
 801b7e2:	232d      	movs	r3, #45	; 0x2d
 801b7e4:	f801 3c24 	strb.w	r3, [r1, #-36]
 801b7e8:	1eb1      	subs	r1, r6, #2
 801b7ea:	3101      	adds	r1, #1
 801b7ec:	4439      	add	r1, r7
 801b7ee:	4660      	mov	r0, ip
 801b7f0:	f7ff ffc7 	bl	801b782 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b7f4:	b00b      	add	sp, #44	; 0x2c
 801b7f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b7f8:	460e      	mov	r6, r1
 801b7fa:	e7dc      	b.n	801b7b6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801b7fc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801b7fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b7fe:	b08b      	sub	sp, #44	; 0x2c
 801b800:	468c      	mov	ip, r1
 801b802:	2100      	movs	r1, #0
 801b804:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b808:	ae01      	add	r6, sp, #4
 801b80a:	211f      	movs	r1, #31
 801b80c:	fbb0 f7f3 	udiv	r7, r0, r3
 801b810:	fb03 0517 	mls	r5, r3, r7, r0
 801b814:	b2ec      	uxtb	r4, r5
 801b816:	2d09      	cmp	r5, #9
 801b818:	bfd4      	ite	le
 801b81a:	3430      	addle	r4, #48	; 0x30
 801b81c:	3457      	addgt	r4, #87	; 0x57
 801b81e:	b2e4      	uxtb	r4, r4
 801b820:	558c      	strb	r4, [r1, r6]
 801b822:	4638      	mov	r0, r7
 801b824:	1e4c      	subs	r4, r1, #1
 801b826:	b92f      	cbnz	r7, 801b834 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801b828:	4431      	add	r1, r6
 801b82a:	4660      	mov	r0, ip
 801b82c:	f7ff ffa9 	bl	801b782 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b830:	b00b      	add	sp, #44	; 0x2c
 801b832:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b834:	4621      	mov	r1, r4
 801b836:	e7e9      	b.n	801b80c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801b838 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801b838:	b410      	push	{r4}
 801b83a:	b131      	cbz	r1, 801b84a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b83c:	1e9c      	subs	r4, r3, #2
 801b83e:	2c22      	cmp	r4, #34	; 0x22
 801b840:	d803      	bhi.n	801b84a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b842:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b846:	f7ff bfad 	b.w	801b7a4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801b84a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b84e:	4770      	bx	lr

0801b850 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801b850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b854:	4691      	mov	r9, r2
 801b856:	b085      	sub	sp, #20
 801b858:	6802      	ldr	r2, [r0, #0]
 801b85a:	9201      	str	r2, [sp, #4]
 801b85c:	4688      	mov	r8, r1
 801b85e:	4683      	mov	fp, r0
 801b860:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801b864:	9103      	str	r1, [sp, #12]
 801b866:	4610      	mov	r0, r2
 801b868:	461c      	mov	r4, r3
 801b86a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801b86e:	9302      	str	r3, [sp, #8]
 801b870:	f7ff ff7a 	bl	801b768 <_ZN8touchgfx7Unicode6strlenEPKt>
 801b874:	f1b8 0f00 	cmp.w	r8, #0
 801b878:	bf0c      	ite	eq
 801b87a:	4684      	moveq	ip, r0
 801b87c:	f100 0c01 	addne.w	ip, r0, #1
 801b880:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801b884:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801b888:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b88a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b88c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801b890:	9903      	ldr	r1, [sp, #12]
 801b892:	fa1f fc8c 	uxth.w	ip, ip
 801b896:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801b89a:	d041      	beq.n	801b920 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b89c:	d834      	bhi.n	801b908 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801b89e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801b8a2:	d059      	beq.n	801b958 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801b8a4:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801b8a8:	d03a      	beq.n	801b920 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b8aa:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801b8ae:	d034      	beq.n	801b91a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b8b0:	2400      	movs	r4, #0
 801b8b2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801b8b6:	3a01      	subs	r2, #1
 801b8b8:	b169      	cbz	r1, 801b8d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b8ba:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b8bc:	458c      	cmp	ip, r1
 801b8be:	da09      	bge.n	801b8d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b8c0:	eba1 010c 	sub.w	r1, r1, ip
 801b8c4:	b289      	uxth	r1, r1
 801b8c6:	b933      	cbnz	r3, 801b8d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b8c8:	2e00      	cmp	r6, #0
 801b8ca:	d051      	beq.n	801b970 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b8cc:	2800      	cmp	r0, #0
 801b8ce:	d04f      	beq.n	801b970 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b8d0:	440c      	add	r4, r1
 801b8d2:	b2a4      	uxth	r4, r4
 801b8d4:	2100      	movs	r1, #0
 801b8d6:	682b      	ldr	r3, [r5, #0]
 801b8d8:	4293      	cmp	r3, r2
 801b8da:	da07      	bge.n	801b8ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b8dc:	f1b8 0f00 	cmp.w	r8, #0
 801b8e0:	d004      	beq.n	801b8ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b8e2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801b8e6:	682b      	ldr	r3, [r5, #0]
 801b8e8:	3301      	adds	r3, #1
 801b8ea:	602b      	str	r3, [r5, #0]
 801b8ec:	2730      	movs	r7, #48	; 0x30
 801b8ee:	2c00      	cmp	r4, #0
 801b8f0:	d04e      	beq.n	801b990 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b8f2:	682e      	ldr	r6, [r5, #0]
 801b8f4:	3c01      	subs	r4, #1
 801b8f6:	42b2      	cmp	r2, r6
 801b8f8:	b2a4      	uxth	r4, r4
 801b8fa:	dd49      	ble.n	801b990 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b8fc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b900:	682b      	ldr	r3, [r5, #0]
 801b902:	3301      	adds	r3, #1
 801b904:	602b      	str	r3, [r5, #0]
 801b906:	e7f2      	b.n	801b8ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801b908:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801b90c:	d01d      	beq.n	801b94a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801b90e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801b912:	d002      	beq.n	801b91a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b914:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801b918:	e7c9      	b.n	801b8ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801b91a:	4684      	mov	ip, r0
 801b91c:	f04f 0800 	mov.w	r8, #0
 801b920:	2c00      	cmp	r4, #0
 801b922:	d0c6      	beq.n	801b8b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b924:	b947      	cbnz	r7, 801b938 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b926:	2801      	cmp	r0, #1
 801b928:	d106      	bne.n	801b938 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b92a:	8814      	ldrh	r4, [r2, #0]
 801b92c:	2c30      	cmp	r4, #48	; 0x30
 801b92e:	bf02      	ittt	eq
 801b930:	3202      	addeq	r2, #2
 801b932:	f8cb 2000 	streq.w	r2, [fp]
 801b936:	4638      	moveq	r0, r7
 801b938:	45bc      	cmp	ip, r7
 801b93a:	da14      	bge.n	801b966 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801b93c:	b2bf      	uxth	r7, r7
 801b93e:	eba7 040c 	sub.w	r4, r7, ip
 801b942:	b2a4      	uxth	r4, r4
 801b944:	46bc      	mov	ip, r7
 801b946:	2600      	movs	r6, #0
 801b948:	e7b3      	b.n	801b8b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b94a:	4684      	mov	ip, r0
 801b94c:	b16c      	cbz	r4, 801b96a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801b94e:	42b8      	cmp	r0, r7
 801b950:	dd00      	ble.n	801b954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801b952:	b2b8      	uxth	r0, r7
 801b954:	2400      	movs	r4, #0
 801b956:	e003      	b.n	801b960 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801b958:	f04f 0c01 	mov.w	ip, #1
 801b95c:	2400      	movs	r4, #0
 801b95e:	4660      	mov	r0, ip
 801b960:	4626      	mov	r6, r4
 801b962:	46a0      	mov	r8, r4
 801b964:	e7a5      	b.n	801b8b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b966:	2400      	movs	r4, #0
 801b968:	e7ed      	b.n	801b946 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801b96a:	4626      	mov	r6, r4
 801b96c:	46a0      	mov	r8, r4
 801b96e:	e7a0      	b.n	801b8b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b970:	2900      	cmp	r1, #0
 801b972:	d0b0      	beq.n	801b8d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b974:	2720      	movs	r7, #32
 801b976:	682e      	ldr	r6, [r5, #0]
 801b978:	2900      	cmp	r1, #0
 801b97a:	d0ac      	beq.n	801b8d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b97c:	3901      	subs	r1, #1
 801b97e:	4296      	cmp	r6, r2
 801b980:	b289      	uxth	r1, r1
 801b982:	daa7      	bge.n	801b8d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b984:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b988:	682b      	ldr	r3, [r5, #0]
 801b98a:	3301      	adds	r3, #1
 801b98c:	602b      	str	r3, [r5, #0]
 801b98e:	e7f2      	b.n	801b976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801b990:	b188      	cbz	r0, 801b9b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b992:	682b      	ldr	r3, [r5, #0]
 801b994:	3801      	subs	r0, #1
 801b996:	429a      	cmp	r2, r3
 801b998:	b280      	uxth	r0, r0
 801b99a:	dd0c      	ble.n	801b9b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b99c:	f8db 3000 	ldr.w	r3, [fp]
 801b9a0:	1c9c      	adds	r4, r3, #2
 801b9a2:	f8cb 4000 	str.w	r4, [fp]
 801b9a6:	881c      	ldrh	r4, [r3, #0]
 801b9a8:	682b      	ldr	r3, [r5, #0]
 801b9aa:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801b9ae:	682b      	ldr	r3, [r5, #0]
 801b9b0:	3301      	adds	r3, #1
 801b9b2:	602b      	str	r3, [r5, #0]
 801b9b4:	e7ec      	b.n	801b990 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b9b6:	2620      	movs	r6, #32
 801b9b8:	b151      	cbz	r1, 801b9d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b9ba:	6828      	ldr	r0, [r5, #0]
 801b9bc:	3901      	subs	r1, #1
 801b9be:	4282      	cmp	r2, r0
 801b9c0:	b289      	uxth	r1, r1
 801b9c2:	dd05      	ble.n	801b9d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b9c4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801b9c8:	682b      	ldr	r3, [r5, #0]
 801b9ca:	3301      	adds	r3, #1
 801b9cc:	602b      	str	r3, [r5, #0]
 801b9ce:	e7f3      	b.n	801b9b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801b9d0:	b005      	add	sp, #20
 801b9d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b9d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801b9d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b9da:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801b9de:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801b9e2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801b9e6:	2400      	movs	r4, #0
 801b9e8:	8014      	strh	r4, [r2, #0]
 801b9ea:	701c      	strb	r4, [r3, #0]
 801b9ec:	f888 4000 	strb.w	r4, [r8]
 801b9f0:	f88c 4000 	strb.w	r4, [ip]
 801b9f4:	f88e 4000 	strb.w	r4, [lr]
 801b9f8:	703c      	strb	r4, [r7, #0]
 801b9fa:	6804      	ldr	r4, [r0, #0]
 801b9fc:	b1a4      	cbz	r4, 801ba28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801b9fe:	8824      	ldrh	r4, [r4, #0]
 801ba00:	f04f 0901 	mov.w	r9, #1
 801ba04:	b314      	cbz	r4, 801ba4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801ba06:	2c2b      	cmp	r4, #43	; 0x2b
 801ba08:	d001      	beq.n	801ba0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801ba0a:	2c20      	cmp	r4, #32
 801ba0c:	d110      	bne.n	801ba30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801ba0e:	8014      	strh	r4, [r2, #0]
 801ba10:	6804      	ldr	r4, [r0, #0]
 801ba12:	b10c      	cbz	r4, 801ba18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801ba14:	3402      	adds	r4, #2
 801ba16:	6004      	str	r4, [r0, #0]
 801ba18:	680c      	ldr	r4, [r1, #0]
 801ba1a:	b10c      	cbz	r4, 801ba20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801ba1c:	3401      	adds	r4, #1
 801ba1e:	600c      	str	r4, [r1, #0]
 801ba20:	6804      	ldr	r4, [r0, #0]
 801ba22:	b17c      	cbz	r4, 801ba44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801ba24:	8824      	ldrh	r4, [r4, #0]
 801ba26:	e7ed      	b.n	801ba04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801ba28:	680c      	ldr	r4, [r1, #0]
 801ba2a:	b17c      	cbz	r4, 801ba4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801ba2c:	7824      	ldrb	r4, [r4, #0]
 801ba2e:	e7e7      	b.n	801ba00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801ba30:	2c2d      	cmp	r4, #45	; 0x2d
 801ba32:	d102      	bne.n	801ba3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801ba34:	f883 9000 	strb.w	r9, [r3]
 801ba38:	e7ea      	b.n	801ba10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801ba3a:	2c23      	cmp	r4, #35	; 0x23
 801ba3c:	d107      	bne.n	801ba4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801ba3e:	f888 9000 	strb.w	r9, [r8]
 801ba42:	e7e5      	b.n	801ba10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801ba44:	680c      	ldr	r4, [r1, #0]
 801ba46:	b10c      	cbz	r4, 801ba4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801ba48:	7824      	ldrb	r4, [r4, #0]
 801ba4a:	e7db      	b.n	801ba04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801ba4c:	2400      	movs	r4, #0
 801ba4e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801ba52:	2b09      	cmp	r3, #9
 801ba54:	d901      	bls.n	801ba5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801ba56:	2c2a      	cmp	r4, #42	; 0x2a
 801ba58:	d122      	bne.n	801baa0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801ba5a:	2301      	movs	r3, #1
 801ba5c:	2c30      	cmp	r4, #48	; 0x30
 801ba5e:	f88e 3000 	strb.w	r3, [lr]
 801ba62:	d10d      	bne.n	801ba80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801ba64:	f88c 3000 	strb.w	r3, [ip]
 801ba68:	6803      	ldr	r3, [r0, #0]
 801ba6a:	b10b      	cbz	r3, 801ba70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801ba6c:	3302      	adds	r3, #2
 801ba6e:	6003      	str	r3, [r0, #0]
 801ba70:	680b      	ldr	r3, [r1, #0]
 801ba72:	b10b      	cbz	r3, 801ba78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801ba74:	3301      	adds	r3, #1
 801ba76:	600b      	str	r3, [r1, #0]
 801ba78:	6803      	ldr	r3, [r0, #0]
 801ba7a:	2b00      	cmp	r3, #0
 801ba7c:	d02f      	beq.n	801bade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801ba7e:	881c      	ldrh	r4, [r3, #0]
 801ba80:	2c2a      	cmp	r4, #42	; 0x2a
 801ba82:	d135      	bne.n	801baf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801ba84:	f04f 33ff 	mov.w	r3, #4294967295
 801ba88:	6033      	str	r3, [r6, #0]
 801ba8a:	6803      	ldr	r3, [r0, #0]
 801ba8c:	b10b      	cbz	r3, 801ba92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801ba8e:	3302      	adds	r3, #2
 801ba90:	6003      	str	r3, [r0, #0]
 801ba92:	680b      	ldr	r3, [r1, #0]
 801ba94:	b10b      	cbz	r3, 801ba9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801ba96:	3301      	adds	r3, #1
 801ba98:	600b      	str	r3, [r1, #0]
 801ba9a:	6803      	ldr	r3, [r0, #0]
 801ba9c:	b31b      	cbz	r3, 801bae6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801ba9e:	881c      	ldrh	r4, [r3, #0]
 801baa0:	2c2e      	cmp	r4, #46	; 0x2e
 801baa2:	d11a      	bne.n	801bada <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801baa4:	2301      	movs	r3, #1
 801baa6:	703b      	strb	r3, [r7, #0]
 801baa8:	6803      	ldr	r3, [r0, #0]
 801baaa:	b10b      	cbz	r3, 801bab0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801baac:	3302      	adds	r3, #2
 801baae:	6003      	str	r3, [r0, #0]
 801bab0:	680b      	ldr	r3, [r1, #0]
 801bab2:	b10b      	cbz	r3, 801bab8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801bab4:	3301      	adds	r3, #1
 801bab6:	600b      	str	r3, [r1, #0]
 801bab8:	6803      	ldr	r3, [r0, #0]
 801baba:	2b00      	cmp	r3, #0
 801babc:	d036      	beq.n	801bb2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801babe:	881b      	ldrh	r3, [r3, #0]
 801bac0:	2b2a      	cmp	r3, #42	; 0x2a
 801bac2:	d137      	bne.n	801bb34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801bac4:	f04f 33ff 	mov.w	r3, #4294967295
 801bac8:	602b      	str	r3, [r5, #0]
 801baca:	6803      	ldr	r3, [r0, #0]
 801bacc:	b10b      	cbz	r3, 801bad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801bace:	3302      	adds	r3, #2
 801bad0:	6003      	str	r3, [r0, #0]
 801bad2:	680b      	ldr	r3, [r1, #0]
 801bad4:	b10b      	cbz	r3, 801bada <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801bad6:	3301      	adds	r3, #1
 801bad8:	600b      	str	r3, [r1, #0]
 801bada:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801bade:	680c      	ldr	r4, [r1, #0]
 801bae0:	b134      	cbz	r4, 801baf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801bae2:	7824      	ldrb	r4, [r4, #0]
 801bae4:	e7cc      	b.n	801ba80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801bae6:	680b      	ldr	r3, [r1, #0]
 801bae8:	2b00      	cmp	r3, #0
 801baea:	d0f6      	beq.n	801bada <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801baec:	781c      	ldrb	r4, [r3, #0]
 801baee:	e7d7      	b.n	801baa0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801baf0:	2300      	movs	r3, #0
 801baf2:	6033      	str	r3, [r6, #0]
 801baf4:	220a      	movs	r2, #10
 801baf6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801bafa:	fa1f f38c 	uxth.w	r3, ip
 801bafe:	2b09      	cmp	r3, #9
 801bb00:	d8ce      	bhi.n	801baa0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801bb02:	6833      	ldr	r3, [r6, #0]
 801bb04:	fb02 c303 	mla	r3, r2, r3, ip
 801bb08:	6033      	str	r3, [r6, #0]
 801bb0a:	6803      	ldr	r3, [r0, #0]
 801bb0c:	b10b      	cbz	r3, 801bb12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801bb0e:	3302      	adds	r3, #2
 801bb10:	6003      	str	r3, [r0, #0]
 801bb12:	680b      	ldr	r3, [r1, #0]
 801bb14:	b10b      	cbz	r3, 801bb1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801bb16:	3301      	adds	r3, #1
 801bb18:	600b      	str	r3, [r1, #0]
 801bb1a:	6803      	ldr	r3, [r0, #0]
 801bb1c:	b10b      	cbz	r3, 801bb22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801bb1e:	881c      	ldrh	r4, [r3, #0]
 801bb20:	e7e9      	b.n	801baf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801bb22:	680c      	ldr	r4, [r1, #0]
 801bb24:	2c00      	cmp	r4, #0
 801bb26:	d0e6      	beq.n	801baf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801bb28:	7824      	ldrb	r4, [r4, #0]
 801bb2a:	e7e4      	b.n	801baf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801bb2c:	680b      	ldr	r3, [r1, #0]
 801bb2e:	b10b      	cbz	r3, 801bb34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801bb30:	781b      	ldrb	r3, [r3, #0]
 801bb32:	e7c5      	b.n	801bac0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801bb34:	2200      	movs	r2, #0
 801bb36:	602a      	str	r2, [r5, #0]
 801bb38:	240a      	movs	r4, #10
 801bb3a:	3b30      	subs	r3, #48	; 0x30
 801bb3c:	b29e      	uxth	r6, r3
 801bb3e:	2e09      	cmp	r6, #9
 801bb40:	682a      	ldr	r2, [r5, #0]
 801bb42:	d813      	bhi.n	801bb6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801bb44:	fb04 3302 	mla	r3, r4, r2, r3
 801bb48:	602b      	str	r3, [r5, #0]
 801bb4a:	6803      	ldr	r3, [r0, #0]
 801bb4c:	b10b      	cbz	r3, 801bb52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801bb4e:	3302      	adds	r3, #2
 801bb50:	6003      	str	r3, [r0, #0]
 801bb52:	680b      	ldr	r3, [r1, #0]
 801bb54:	b10b      	cbz	r3, 801bb5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801bb56:	3301      	adds	r3, #1
 801bb58:	600b      	str	r3, [r1, #0]
 801bb5a:	6803      	ldr	r3, [r0, #0]
 801bb5c:	b10b      	cbz	r3, 801bb62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801bb5e:	881b      	ldrh	r3, [r3, #0]
 801bb60:	e7eb      	b.n	801bb3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801bb62:	680b      	ldr	r3, [r1, #0]
 801bb64:	2b00      	cmp	r3, #0
 801bb66:	d0e8      	beq.n	801bb3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801bb68:	781b      	ldrb	r3, [r3, #0]
 801bb6a:	e7e6      	b.n	801bb3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801bb6c:	2a06      	cmp	r2, #6
 801bb6e:	bfa8      	it	ge
 801bb70:	2206      	movge	r2, #6
 801bb72:	602a      	str	r2, [r5, #0]
 801bb74:	e7b1      	b.n	801bada <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801bb76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801bb76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb7a:	b0a3      	sub	sp, #140	; 0x8c
 801bb7c:	2600      	movs	r6, #0
 801bb7e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801bb82:	4607      	mov	r7, r0
 801bb84:	4688      	mov	r8, r1
 801bb86:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bb8a:	4631      	mov	r1, r6
 801bb8c:	2242      	movs	r2, #66	; 0x42
 801bb8e:	4648      	mov	r0, r9
 801bb90:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801bb92:	960d      	str	r6, [sp, #52]	; 0x34
 801bb94:	f012 f9fd 	bl	802df92 <memset>
 801bb98:	b15f      	cbz	r7, 801bbb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801bb9a:	f108 3aff 	add.w	sl, r8, #4294967295
 801bb9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bba0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bba2:	b152      	cbz	r2, 801bbba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801bba4:	8812      	ldrh	r2, [r2, #0]
 801bba6:	b10a      	cbz	r2, 801bbac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801bba8:	459a      	cmp	sl, r3
 801bbaa:	dc2e      	bgt.n	801bc0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801bbac:	2200      	movs	r2, #0
 801bbae:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801bbb2:	4638      	mov	r0, r7
 801bbb4:	b023      	add	sp, #140	; 0x8c
 801bbb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbba:	9a08      	ldr	r2, [sp, #32]
 801bbbc:	2a00      	cmp	r2, #0
 801bbbe:	d0f5      	beq.n	801bbac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801bbc0:	7812      	ldrb	r2, [r2, #0]
 801bbc2:	e7f0      	b.n	801bba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801bbc4:	2d00      	cmp	r5, #0
 801bbc6:	d0ea      	beq.n	801bb9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bbc8:	782a      	ldrb	r2, [r5, #0]
 801bbca:	b142      	cbz	r2, 801bbde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801bbcc:	2a25      	cmp	r2, #37	; 0x25
 801bbce:	d001      	beq.n	801bbd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801bbd0:	459a      	cmp	sl, r3
 801bbd2:	dc08      	bgt.n	801bbe6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801bbd4:	f1bb 0f00 	cmp.w	fp, #0
 801bbd8:	d121      	bne.n	801bc1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801bbda:	2d00      	cmp	r5, #0
 801bbdc:	d0df      	beq.n	801bb9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bbde:	782a      	ldrb	r2, [r5, #0]
 801bbe0:	f04f 0b00 	mov.w	fp, #0
 801bbe4:	e01d      	b.n	801bc22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801bbe6:	f1bb 0f00 	cmp.w	fp, #0
 801bbea:	d078      	beq.n	801bcde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801bbec:	f8bb 2000 	ldrh.w	r2, [fp]
 801bbf0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801bbf4:	f1bb 0f00 	cmp.w	fp, #0
 801bbf8:	d002      	beq.n	801bc00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801bbfa:	f10b 0202 	add.w	r2, fp, #2
 801bbfe:	9209      	str	r2, [sp, #36]	; 0x24
 801bc00:	b10d      	cbz	r5, 801bc06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801bc02:	3501      	adds	r5, #1
 801bc04:	9508      	str	r5, [sp, #32]
 801bc06:	3301      	adds	r3, #1
 801bc08:	930d      	str	r3, [sp, #52]	; 0x34
 801bc0a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801bc0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bc10:	f1bb 0f00 	cmp.w	fp, #0
 801bc14:	d0d6      	beq.n	801bbc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801bc16:	f8bb 2000 	ldrh.w	r2, [fp]
 801bc1a:	2a00      	cmp	r2, #0
 801bc1c:	d1d6      	bne.n	801bbcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801bc1e:	f8bb 2000 	ldrh.w	r2, [fp]
 801bc22:	2a00      	cmp	r2, #0
 801bc24:	d0bb      	beq.n	801bb9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bc26:	459a      	cmp	sl, r3
 801bc28:	ddb9      	ble.n	801bb9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bc2a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801bc2e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801bc32:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801bc36:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801bc3a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801bc3e:	960e      	str	r6, [sp, #56]	; 0x38
 801bc40:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801bc44:	960f      	str	r6, [sp, #60]	; 0x3c
 801bc46:	f1bb 0f00 	cmp.w	fp, #0
 801bc4a:	d002      	beq.n	801bc52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801bc4c:	f10b 0302 	add.w	r3, fp, #2
 801bc50:	9309      	str	r3, [sp, #36]	; 0x24
 801bc52:	b10d      	cbz	r5, 801bc58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801bc54:	1c6b      	adds	r3, r5, #1
 801bc56:	9308      	str	r3, [sp, #32]
 801bc58:	ab0f      	add	r3, sp, #60	; 0x3c
 801bc5a:	9305      	str	r3, [sp, #20]
 801bc5c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bc60:	9304      	str	r3, [sp, #16]
 801bc62:	ab0e      	add	r3, sp, #56	; 0x38
 801bc64:	9303      	str	r3, [sp, #12]
 801bc66:	ab0c      	add	r3, sp, #48	; 0x30
 801bc68:	9302      	str	r3, [sp, #8]
 801bc6a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bc6e:	9301      	str	r3, [sp, #4]
 801bc70:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801bc74:	9300      	str	r3, [sp, #0]
 801bc76:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801bc7a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801bc7e:	a908      	add	r1, sp, #32
 801bc80:	a809      	add	r0, sp, #36	; 0x24
 801bc82:	f7ff fea8 	bl	801b9d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801bc86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc88:	2b00      	cmp	r3, #0
 801bc8a:	bfbe      	ittt	lt
 801bc8c:	6823      	ldrlt	r3, [r4, #0]
 801bc8e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bc92:	930e      	strlt	r3, [sp, #56]	; 0x38
 801bc94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bc96:	bfb8      	it	lt
 801bc98:	3404      	addlt	r4, #4
 801bc9a:	2b00      	cmp	r3, #0
 801bc9c:	bfb8      	it	lt
 801bc9e:	6823      	ldrlt	r3, [r4, #0]
 801bca0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801bca4:	bfbe      	ittt	lt
 801bca6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bcaa:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801bcac:	3404      	addlt	r4, #4
 801bcae:	b1d9      	cbz	r1, 801bce8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801bcb0:	880b      	ldrh	r3, [r1, #0]
 801bcb2:	2b69      	cmp	r3, #105	; 0x69
 801bcb4:	d01f      	beq.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bcb6:	d82f      	bhi.n	801bd18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801bcb8:	2b58      	cmp	r3, #88	; 0x58
 801bcba:	d01c      	beq.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bcbc:	d818      	bhi.n	801bcf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801bcbe:	2b25      	cmp	r3, #37	; 0x25
 801bcc0:	d034      	beq.n	801bd2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801bcc2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801bcc6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bcc8:	f1bb 0f00 	cmp.w	fp, #0
 801bccc:	f000 80b8 	beq.w	801be40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801bcd0:	f8bb 5000 	ldrh.w	r5, [fp]
 801bcd4:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801bcd8:	3301      	adds	r3, #1
 801bcda:	930d      	str	r3, [sp, #52]	; 0x34
 801bcdc:	e029      	b.n	801bd32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bcde:	b10d      	cbz	r5, 801bce4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801bce0:	782a      	ldrb	r2, [r5, #0]
 801bce2:	e785      	b.n	801bbf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bce4:	462a      	mov	r2, r5
 801bce6:	e783      	b.n	801bbf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bce8:	2a00      	cmp	r2, #0
 801bcea:	d0ea      	beq.n	801bcc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bcec:	7813      	ldrb	r3, [r2, #0]
 801bcee:	e7e0      	b.n	801bcb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801bcf0:	3b63      	subs	r3, #99	; 0x63
 801bcf2:	2b01      	cmp	r3, #1
 801bcf4:	d8e5      	bhi.n	801bcc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bcf6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801bcfa:	b329      	cbz	r1, 801bd48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801bcfc:	880b      	ldrh	r3, [r1, #0]
 801bcfe:	2b69      	cmp	r3, #105	; 0x69
 801bd00:	d063      	beq.n	801bdca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bd02:	d825      	bhi.n	801bd50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801bd04:	2b63      	cmp	r3, #99	; 0x63
 801bd06:	d038      	beq.n	801bd7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801bd08:	2b64      	cmp	r3, #100	; 0x64
 801bd0a:	d05e      	beq.n	801bdca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bd0c:	2b58      	cmp	r3, #88	; 0x58
 801bd0e:	d07b      	beq.n	801be08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801bd10:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801bd14:	4625      	mov	r5, r4
 801bd16:	e036      	b.n	801bd86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bd18:	2b73      	cmp	r3, #115	; 0x73
 801bd1a:	d0ec      	beq.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bd1c:	d802      	bhi.n	801bd24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801bd1e:	2b6f      	cmp	r3, #111	; 0x6f
 801bd20:	d1cf      	bne.n	801bcc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bd22:	e7e8      	b.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bd24:	2b75      	cmp	r3, #117	; 0x75
 801bd26:	d0e6      	beq.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bd28:	2b78      	cmp	r3, #120	; 0x78
 801bd2a:	e7f9      	b.n	801bd20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801bd2c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bd2e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801bd32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd34:	b10b      	cbz	r3, 801bd3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801bd36:	3302      	adds	r3, #2
 801bd38:	9309      	str	r3, [sp, #36]	; 0x24
 801bd3a:	9b08      	ldr	r3, [sp, #32]
 801bd3c:	2b00      	cmp	r3, #0
 801bd3e:	f43f af2e 	beq.w	801bb9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bd42:	3301      	adds	r3, #1
 801bd44:	9308      	str	r3, [sp, #32]
 801bd46:	e72a      	b.n	801bb9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bd48:	2a00      	cmp	r2, #0
 801bd4a:	d0e1      	beq.n	801bd10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bd4c:	7813      	ldrb	r3, [r2, #0]
 801bd4e:	e7d6      	b.n	801bcfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801bd50:	2b73      	cmp	r3, #115	; 0x73
 801bd52:	d036      	beq.n	801bdc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801bd54:	d807      	bhi.n	801bd66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801bd56:	2b6f      	cmp	r3, #111	; 0x6f
 801bd58:	d1da      	bne.n	801bd10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bd5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bd5c:	1d25      	adds	r5, r4, #4
 801bd5e:	eba8 0202 	sub.w	r2, r8, r2
 801bd62:	2308      	movs	r3, #8
 801bd64:	e04a      	b.n	801bdfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bd66:	2b75      	cmp	r3, #117	; 0x75
 801bd68:	d043      	beq.n	801bdf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801bd6a:	2b78      	cmp	r3, #120	; 0x78
 801bd6c:	d1d0      	bne.n	801bd10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bd6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bd70:	1d25      	adds	r5, r4, #4
 801bd72:	eba8 0202 	sub.w	r2, r8, r2
 801bd76:	2310      	movs	r3, #16
 801bd78:	e040      	b.n	801bdfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bd7a:	6823      	ldr	r3, [r4, #0]
 801bd7c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801bd80:	1d25      	adds	r5, r4, #4
 801bd82:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801bd86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd88:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bd8c:	2b00      	cmp	r3, #0
 801bd8e:	d052      	beq.n	801be36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801bd90:	881a      	ldrh	r2, [r3, #0]
 801bd92:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bd96:	a80d      	add	r0, sp, #52	; 0x34
 801bd98:	9005      	str	r0, [sp, #20]
 801bd9a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bd9e:	9004      	str	r0, [sp, #16]
 801bda0:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bda2:	9003      	str	r0, [sp, #12]
 801bda4:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bda8:	9002      	str	r0, [sp, #8]
 801bdaa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bdac:	9001      	str	r0, [sp, #4]
 801bdae:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bdb2:	9000      	str	r0, [sp, #0]
 801bdb4:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801bdb8:	a810      	add	r0, sp, #64	; 0x40
 801bdba:	f7ff fd49 	bl	801b850 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bdbe:	462c      	mov	r4, r5
 801bdc0:	e7b7      	b.n	801bd32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bdc2:	6823      	ldr	r3, [r4, #0]
 801bdc4:	1d25      	adds	r5, r4, #4
 801bdc6:	9310      	str	r3, [sp, #64]	; 0x40
 801bdc8:	e7dd      	b.n	801bd86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bdca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bdcc:	6820      	ldr	r0, [r4, #0]
 801bdce:	eba8 0202 	sub.w	r2, r8, r2
 801bdd2:	230a      	movs	r3, #10
 801bdd4:	b292      	uxth	r2, r2
 801bdd6:	4649      	mov	r1, r9
 801bdd8:	f7ff fce4 	bl	801b7a4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801bddc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801bde0:	2b2d      	cmp	r3, #45	; 0x2d
 801bde2:	f104 0504 	add.w	r5, r4, #4
 801bde6:	d1ce      	bne.n	801bd86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bde8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bdec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bdee:	3302      	adds	r3, #2
 801bdf0:	e7e9      	b.n	801bdc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801bdf2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bdf4:	1d25      	adds	r5, r4, #4
 801bdf6:	eba8 0202 	sub.w	r2, r8, r2
 801bdfa:	230a      	movs	r3, #10
 801bdfc:	b292      	uxth	r2, r2
 801bdfe:	4649      	mov	r1, r9
 801be00:	6820      	ldr	r0, [r4, #0]
 801be02:	f7ff fcfb 	bl	801b7fc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801be06:	e7be      	b.n	801bd86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801be08:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801be0a:	6820      	ldr	r0, [r4, #0]
 801be0c:	eba8 0202 	sub.w	r2, r8, r2
 801be10:	b292      	uxth	r2, r2
 801be12:	2310      	movs	r3, #16
 801be14:	4649      	mov	r1, r9
 801be16:	f7ff fcf1 	bl	801b7fc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801be1a:	1d25      	adds	r5, r4, #4
 801be1c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801be20:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801be24:	2b00      	cmp	r3, #0
 801be26:	d0ae      	beq.n	801bd86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801be28:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801be2c:	2919      	cmp	r1, #25
 801be2e:	d8f7      	bhi.n	801be20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801be30:	3b20      	subs	r3, #32
 801be32:	8013      	strh	r3, [r2, #0]
 801be34:	e7f4      	b.n	801be20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801be36:	9a08      	ldr	r2, [sp, #32]
 801be38:	2a00      	cmp	r2, #0
 801be3a:	d0aa      	beq.n	801bd92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801be3c:	7812      	ldrb	r2, [r2, #0]
 801be3e:	e7a8      	b.n	801bd92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801be40:	2d00      	cmp	r5, #0
 801be42:	f43f af47 	beq.w	801bcd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801be46:	782d      	ldrb	r5, [r5, #0]
 801be48:	e744      	b.n	801bcd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801be4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801be4a:	b507      	push	{r0, r1, r2, lr}
 801be4c:	9300      	str	r3, [sp, #0]
 801be4e:	4613      	mov	r3, r2
 801be50:	2200      	movs	r2, #0
 801be52:	f7ff fe90 	bl	801bb76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801be56:	b003      	add	sp, #12
 801be58:	f85d fb04 	ldr.w	pc, [sp], #4

0801be5c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801be5c:	b40c      	push	{r2, r3}
 801be5e:	b507      	push	{r0, r1, r2, lr}
 801be60:	ab04      	add	r3, sp, #16
 801be62:	f853 2b04 	ldr.w	r2, [r3], #4
 801be66:	9301      	str	r3, [sp, #4]
 801be68:	f7ff ffef 	bl	801be4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801be6c:	b003      	add	sp, #12
 801be6e:	f85d eb04 	ldr.w	lr, [sp], #4
 801be72:	b002      	add	sp, #8
 801be74:	4770      	bx	lr
	...

0801be78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801be78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be7c:	b0c5      	sub	sp, #276	; 0x114
 801be7e:	2400      	movs	r4, #0
 801be80:	af11      	add	r7, sp, #68	; 0x44
 801be82:	4606      	mov	r6, r0
 801be84:	468a      	mov	sl, r1
 801be86:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801be8a:	4621      	mov	r1, r4
 801be8c:	22c8      	movs	r2, #200	; 0xc8
 801be8e:	4638      	mov	r0, r7
 801be90:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801be94:	940d      	str	r4, [sp, #52]	; 0x34
 801be96:	f012 f87c 	bl	802df92 <memset>
 801be9a:	b16e      	cbz	r6, 801beb8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801be9c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801c140 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801bea0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bea2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bea4:	b162      	cbz	r2, 801bec0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801bea6:	8812      	ldrh	r2, [r2, #0]
 801bea8:	b11a      	cbz	r2, 801beb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801beaa:	f10a 31ff 	add.w	r1, sl, #4294967295
 801beae:	4299      	cmp	r1, r3
 801beb0:	dc2e      	bgt.n	801bf10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801beb2:	2200      	movs	r2, #0
 801beb4:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801beb8:	4630      	mov	r0, r6
 801beba:	b045      	add	sp, #276	; 0x114
 801bebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bec0:	9a08      	ldr	r2, [sp, #32]
 801bec2:	2a00      	cmp	r2, #0
 801bec4:	d0f5      	beq.n	801beb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bec6:	7812      	ldrb	r2, [r2, #0]
 801bec8:	e7ee      	b.n	801bea8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801beca:	2d00      	cmp	r5, #0
 801becc:	d0e8      	beq.n	801bea0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bece:	782a      	ldrb	r2, [r5, #0]
 801bed0:	b142      	cbz	r2, 801bee4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801bed2:	2a25      	cmp	r2, #37	; 0x25
 801bed4:	d001      	beq.n	801beda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801bed6:	4299      	cmp	r1, r3
 801bed8:	dc08      	bgt.n	801beec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801beda:	f1b8 0f00 	cmp.w	r8, #0
 801bede:	d121      	bne.n	801bf24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801bee0:	2d00      	cmp	r5, #0
 801bee2:	d0dd      	beq.n	801bea0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bee4:	782a      	ldrb	r2, [r5, #0]
 801bee6:	f04f 0800 	mov.w	r8, #0
 801beea:	e01d      	b.n	801bf28 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801beec:	f1b8 0f00 	cmp.w	r8, #0
 801bef0:	d07f      	beq.n	801bff2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801bef2:	f8b8 2000 	ldrh.w	r2, [r8]
 801bef6:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801befa:	f1b8 0f00 	cmp.w	r8, #0
 801befe:	d002      	beq.n	801bf06 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801bf00:	f108 0202 	add.w	r2, r8, #2
 801bf04:	9209      	str	r2, [sp, #36]	; 0x24
 801bf06:	b10d      	cbz	r5, 801bf0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801bf08:	3501      	adds	r5, #1
 801bf0a:	9508      	str	r5, [sp, #32]
 801bf0c:	3301      	adds	r3, #1
 801bf0e:	930d      	str	r3, [sp, #52]	; 0x34
 801bf10:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801bf14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf16:	f1b8 0f00 	cmp.w	r8, #0
 801bf1a:	d0d6      	beq.n	801beca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801bf1c:	f8b8 2000 	ldrh.w	r2, [r8]
 801bf20:	2a00      	cmp	r2, #0
 801bf22:	d1d6      	bne.n	801bed2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801bf24:	f8b8 2000 	ldrh.w	r2, [r8]
 801bf28:	2a00      	cmp	r2, #0
 801bf2a:	d0b9      	beq.n	801bea0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bf2c:	4299      	cmp	r1, r3
 801bf2e:	ddb7      	ble.n	801bea0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bf30:	2300      	movs	r3, #0
 801bf32:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bf36:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801bf3a:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801bf3e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801bf42:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801bf46:	930e      	str	r3, [sp, #56]	; 0x38
 801bf48:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801bf4c:	930f      	str	r3, [sp, #60]	; 0x3c
 801bf4e:	f1b8 0f00 	cmp.w	r8, #0
 801bf52:	d002      	beq.n	801bf5a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801bf54:	f108 0302 	add.w	r3, r8, #2
 801bf58:	9309      	str	r3, [sp, #36]	; 0x24
 801bf5a:	b10d      	cbz	r5, 801bf60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801bf5c:	1c6b      	adds	r3, r5, #1
 801bf5e:	9308      	str	r3, [sp, #32]
 801bf60:	ab0f      	add	r3, sp, #60	; 0x3c
 801bf62:	9305      	str	r3, [sp, #20]
 801bf64:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bf68:	9304      	str	r3, [sp, #16]
 801bf6a:	ab0e      	add	r3, sp, #56	; 0x38
 801bf6c:	9303      	str	r3, [sp, #12]
 801bf6e:	ab0c      	add	r3, sp, #48	; 0x30
 801bf70:	9302      	str	r3, [sp, #8]
 801bf72:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bf76:	9301      	str	r3, [sp, #4]
 801bf78:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801bf7c:	9300      	str	r3, [sp, #0]
 801bf7e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801bf82:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801bf86:	a908      	add	r1, sp, #32
 801bf88:	a809      	add	r0, sp, #36	; 0x24
 801bf8a:	f7ff fd24 	bl	801b9d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801bf8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf90:	2b00      	cmp	r3, #0
 801bf92:	da0b      	bge.n	801bfac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801bf94:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801bf98:	edd3 7a00 	vldr	s15, [r3]
 801bf9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801bfa0:	3401      	adds	r4, #1
 801bfa2:	ee17 3a90 	vmov	r3, s15
 801bfa6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bfaa:	930e      	str	r3, [sp, #56]	; 0x38
 801bfac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bfae:	2b00      	cmp	r3, #0
 801bfb0:	da0b      	bge.n	801bfca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801bfb2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801bfb6:	edd3 7a00 	vldr	s15, [r3]
 801bfba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801bfbe:	3401      	adds	r4, #1
 801bfc0:	ee17 3a90 	vmov	r3, s15
 801bfc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bfc8:	930f      	str	r3, [sp, #60]	; 0x3c
 801bfca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bfcc:	b1b3      	cbz	r3, 801bffc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801bfce:	881a      	ldrh	r2, [r3, #0]
 801bfd0:	2a25      	cmp	r2, #37	; 0x25
 801bfd2:	d018      	beq.n	801c006 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801bfd4:	2a66      	cmp	r2, #102	; 0x66
 801bfd6:	d01c      	beq.n	801c012 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801bfd8:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801bfdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bfde:	f1b8 0f00 	cmp.w	r8, #0
 801bfe2:	f000 8121 	beq.w	801c228 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801bfe6:	f8b8 5000 	ldrh.w	r5, [r8]
 801bfea:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801bfee:	3301      	adds	r3, #1
 801bff0:	e00d      	b.n	801c00e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801bff2:	b10d      	cbz	r5, 801bff8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801bff4:	782a      	ldrb	r2, [r5, #0]
 801bff6:	e77e      	b.n	801bef6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801bff8:	462a      	mov	r2, r5
 801bffa:	e77c      	b.n	801bef6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801bffc:	9b08      	ldr	r3, [sp, #32]
 801bffe:	2b00      	cmp	r3, #0
 801c000:	d0ea      	beq.n	801bfd8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801c002:	781a      	ldrb	r2, [r3, #0]
 801c004:	e7e4      	b.n	801bfd0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801c006:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c008:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801c00c:	3302      	adds	r3, #2
 801c00e:	930d      	str	r3, [sp, #52]	; 0x34
 801c010:	e041      	b.n	801c096 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801c012:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801c016:	edd3 7a00 	vldr	s15, [r3]
 801c01a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801c01e:	9710      	str	r7, [sp, #64]	; 0x40
 801c020:	3401      	adds	r4, #1
 801c022:	b923      	cbnz	r3, 801c02e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801c024:	2301      	movs	r3, #1
 801c026:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801c02a:	2306      	movs	r3, #6
 801c02c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c02e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801c032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c036:	bf48      	it	mi
 801c038:	eef1 7a67 	vnegmi.f32	s15, s15
 801c03c:	eeb0 7ae7 	vabs.f32	s14, s15
 801c040:	bf48      	it	mi
 801c042:	232d      	movmi	r3, #45	; 0x2d
 801c044:	eeb4 7a45 	vcmp.f32	s14, s10
 801c048:	bf48      	it	mi
 801c04a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801c04e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c052:	dd2b      	ble.n	801c0ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801c054:	4b3b      	ldr	r3, [pc, #236]	; (801c144 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801c056:	9311      	str	r3, [sp, #68]	; 0x44
 801c058:	2366      	movs	r3, #102	; 0x66
 801c05a:	9312      	str	r3, [sp, #72]	; 0x48
 801c05c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c05e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801c062:	2b00      	cmp	r3, #0
 801c064:	f000 80da 	beq.w	801c21c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801c068:	881a      	ldrh	r2, [r3, #0]
 801c06a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801c06e:	a80d      	add	r0, sp, #52	; 0x34
 801c070:	9005      	str	r0, [sp, #20]
 801c072:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801c076:	9004      	str	r0, [sp, #16]
 801c078:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c07a:	9003      	str	r0, [sp, #12]
 801c07c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801c080:	9002      	str	r0, [sp, #8]
 801c082:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c084:	9001      	str	r0, [sp, #4]
 801c086:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801c08a:	9000      	str	r0, [sp, #0]
 801c08c:	e9cd a606 	strd	sl, r6, [sp, #24]
 801c090:	a810      	add	r0, sp, #64	; 0x40
 801c092:	f7ff fbdd 	bl	801b850 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801c096:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c098:	b10b      	cbz	r3, 801c09e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801c09a:	3302      	adds	r3, #2
 801c09c:	9309      	str	r3, [sp, #36]	; 0x24
 801c09e:	9b08      	ldr	r3, [sp, #32]
 801c0a0:	2b00      	cmp	r3, #0
 801c0a2:	f43f aefd 	beq.w	801bea0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801c0a6:	3301      	adds	r3, #1
 801c0a8:	9308      	str	r3, [sp, #32]
 801c0aa:	e6f9      	b.n	801bea0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801c0ac:	eef4 7a67 	vcmp.f32	s15, s15
 801c0b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0b4:	d63a      	bvs.n	801c12c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801c0b6:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801c0ba:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801c0be:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801c0c2:	eeb0 6a67 	vmov.f32	s12, s15
 801c0c6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c0ca:	eef0 5a47 	vmov.f32	s11, s14
 801c0ce:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801c0d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0d6:	da2d      	bge.n	801c134 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801c0d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c0da:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801c0de:	2100      	movs	r1, #0
 801c0e0:	eef0 4a46 	vmov.f32	s9, s12
 801c0e4:	ebaa 0202 	sub.w	r2, sl, r2
 801c0e8:	eef4 6ac6 	vcmpe.f32	s13, s12
 801c0ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c0f0:	b28d      	uxth	r5, r1
 801c0f2:	db2c      	blt.n	801c14e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801c0f4:	1a53      	subs	r3, r2, r1
 801c0f6:	2b00      	cmp	r3, #0
 801c0f8:	dd29      	ble.n	801c14e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801c0fa:	3101      	adds	r1, #1
 801c0fc:	2964      	cmp	r1, #100	; 0x64
 801c0fe:	d025      	beq.n	801c14c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801c100:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801c104:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801c108:	ee17 3a10 	vmov	r3, s14
 801c10c:	2b09      	cmp	r3, #9
 801c10e:	bfa8      	it	ge
 801c110:	2309      	movge	r3, #9
 801c112:	ee07 3a10 	vmov	s14, r3
 801c116:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c11a:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801c11e:	eee7 7a66 	vfms.f32	s15, s14, s13
 801c122:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801c126:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801c12a:	e7dd      	b.n	801c0e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801c12c:	4b06      	ldr	r3, [pc, #24]	; (801c148 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801c12e:	9311      	str	r3, [sp, #68]	; 0x44
 801c130:	236e      	movs	r3, #110	; 0x6e
 801c132:	e792      	b.n	801c05a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801c134:	ee66 6a87 	vmul.f32	s13, s13, s14
 801c138:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801c13c:	e7c7      	b.n	801c0ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801c13e:	bf00      	nop
 801c140:	7f7fffff 	.word	0x7f7fffff
 801c144:	006e0069 	.word	0x006e0069
 801c148:	0061006e 	.word	0x0061006e
 801c14c:	2563      	movs	r5, #99	; 0x63
 801c14e:	2a63      	cmp	r2, #99	; 0x63
 801c150:	bfd4      	ite	le
 801c152:	ebc5 0202 	rsble	r2, r5, r2
 801c156:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801c15a:	2a00      	cmp	r2, #0
 801c15c:	dd43      	ble.n	801c1e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801c15e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c160:	2b00      	cmp	r3, #0
 801c162:	dd40      	ble.n	801c1e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801c164:	f04f 0901 	mov.w	r9, #1
 801c168:	210a      	movs	r1, #10
 801c16a:	f113 33ff 	adds.w	r3, r3, #4294967295
 801c16e:	d30c      	bcc.n	801c18a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801c170:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c174:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801c178:	ee17 0a10 	vmov	r0, s14
 801c17c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c180:	fb01 0909 	mla	r9, r1, r9, r0
 801c184:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c188:	e7ef      	b.n	801c16a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801c18a:	3501      	adds	r5, #1
 801c18c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c18e:	b292      	uxth	r2, r2
 801c190:	230a      	movs	r3, #10
 801c192:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801c196:	4648      	mov	r0, r9
 801c198:	f7ff fb4e 	bl	801b838 <_ZN8touchgfx7Unicode4itoaElPtti>
 801c19c:	f1b9 0f01 	cmp.w	r9, #1
 801c1a0:	dc1f      	bgt.n	801c1e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801c1a2:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801c1a6:	2b00      	cmp	r3, #0
 801c1a8:	bf0c      	ite	eq
 801c1aa:	2300      	moveq	r3, #0
 801c1ac:	232e      	movne	r3, #46	; 0x2e
 801c1ae:	aa44      	add	r2, sp, #272	; 0x110
 801c1b0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c1b4:	eef4 7ae4 	vcmpe.f32	s15, s9
 801c1b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1bc:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801c1c0:	f6ff af4c 	blt.w	801c05c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c1c4:	2300      	movs	r3, #0
 801c1c6:	f838 2b02 	ldrh.w	r2, [r8], #2
 801c1ca:	1c59      	adds	r1, r3, #1
 801c1cc:	b98a      	cbnz	r2, 801c1f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801c1ce:	b29b      	uxth	r3, r3
 801c1d0:	2130      	movs	r1, #48	; 0x30
 801c1d2:	b983      	cbnz	r3, 801c1f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801c1d4:	2331      	movs	r3, #49	; 0x31
 801c1d6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c1da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c1dc:	3b02      	subs	r3, #2
 801c1de:	9310      	str	r3, [sp, #64]	; 0x40
 801c1e0:	e73c      	b.n	801c05c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c1e2:	232e      	movs	r3, #46	; 0x2e
 801c1e4:	e7e3      	b.n	801c1ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801c1e6:	ab44      	add	r3, sp, #272	; 0x110
 801c1e8:	3501      	adds	r5, #1
 801c1ea:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801c1ee:	2300      	movs	r3, #0
 801c1f0:	e7e0      	b.n	801c1b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801c1f2:	460b      	mov	r3, r1
 801c1f4:	e7e7      	b.n	801c1c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801c1f6:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801c1fa:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801c1fe:	2808      	cmp	r0, #8
 801c200:	d806      	bhi.n	801c210 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801c202:	a944      	add	r1, sp, #272	; 0x110
 801c204:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801c208:	3201      	adds	r2, #1
 801c20a:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801c20e:	e725      	b.n	801c05c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c210:	2a39      	cmp	r2, #57	; 0x39
 801c212:	bf08      	it	eq
 801c214:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801c218:	3b01      	subs	r3, #1
 801c21a:	e7da      	b.n	801c1d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801c21c:	9a08      	ldr	r2, [sp, #32]
 801c21e:	2a00      	cmp	r2, #0
 801c220:	f43f af23 	beq.w	801c06a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c224:	7812      	ldrb	r2, [r2, #0]
 801c226:	e720      	b.n	801c06a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c228:	2d00      	cmp	r5, #0
 801c22a:	f43f aede 	beq.w	801bfea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c22e:	782d      	ldrb	r5, [r5, #0]
 801c230:	e6db      	b.n	801bfea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c232:	bf00      	nop

0801c234 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801c234:	b507      	push	{r0, r1, r2, lr}
 801c236:	9300      	str	r3, [sp, #0]
 801c238:	4613      	mov	r3, r2
 801c23a:	2200      	movs	r2, #0
 801c23c:	f7ff fe1c 	bl	801be78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801c240:	b003      	add	sp, #12
 801c242:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801c248 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c248:	4b01      	ldr	r3, [pc, #4]	; (801c250 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c24a:	6018      	str	r0, [r3, #0]
 801c24c:	4770      	bx	lr
 801c24e:	bf00      	nop
 801c250:	200138bc 	.word	0x200138bc

0801c254 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c254:	4b06      	ldr	r3, [pc, #24]	; (801c270 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c256:	881a      	ldrh	r2, [r3, #0]
 801c258:	4282      	cmp	r2, r0
 801c25a:	d807      	bhi.n	801c26c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c25c:	4b05      	ldr	r3, [pc, #20]	; (801c274 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c25e:	881b      	ldrh	r3, [r3, #0]
 801c260:	4413      	add	r3, r2
 801c262:	4298      	cmp	r0, r3
 801c264:	bfac      	ite	ge
 801c266:	2000      	movge	r0, #0
 801c268:	2001      	movlt	r0, #1
 801c26a:	4770      	bx	lr
 801c26c:	2000      	movs	r0, #0
 801c26e:	4770      	bx	lr
 801c270:	200138dc 	.word	0x200138dc
 801c274:	200138e0 	.word	0x200138e0

0801c278 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c278:	b508      	push	{r3, lr}
 801c27a:	4601      	mov	r1, r0
 801c27c:	f7ff ffea 	bl	801c254 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c280:	b118      	cbz	r0, 801c28a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c282:	4b02      	ldr	r3, [pc, #8]	; (801c28c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c284:	681b      	ldr	r3, [r3, #0]
 801c286:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c28a:	bd08      	pop	{r3, pc}
 801c28c:	200138c0 	.word	0x200138c0

0801c290 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c290:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c292:	4c24      	ldr	r4, [pc, #144]	; (801c324 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c294:	6823      	ldr	r3, [r4, #0]
 801c296:	2b00      	cmp	r3, #0
 801c298:	d042      	beq.n	801c320 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c29a:	4a23      	ldr	r2, [pc, #140]	; (801c328 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c29c:	4d23      	ldr	r5, [pc, #140]	; (801c32c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c29e:	8811      	ldrh	r1, [r2, #0]
 801c2a0:	f8b5 c000 	ldrh.w	ip, [r5]
 801c2a4:	4822      	ldr	r0, [pc, #136]	; (801c330 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c2a6:	4461      	add	r1, ip
 801c2a8:	1c4a      	adds	r2, r1, #1
 801c2aa:	f022 0201 	bic.w	r2, r2, #1
 801c2ae:	008f      	lsls	r7, r1, #2
 801c2b0:	0412      	lsls	r2, r2, #16
 801c2b2:	19de      	adds	r6, r3, r7
 801c2b4:	0c12      	lsrs	r2, r2, #16
 801c2b6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c2ba:	6006      	str	r6, [r0, #0]
 801c2bc:	4e1d      	ldr	r6, [pc, #116]	; (801c334 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c2be:	19da      	adds	r2, r3, r7
 801c2c0:	6032      	str	r2, [r6, #0]
 801c2c2:	220e      	movs	r2, #14
 801c2c4:	fb02 f20c 	mul.w	r2, r2, ip
 801c2c8:	3203      	adds	r2, #3
 801c2ca:	f022 0203 	bic.w	r2, r2, #3
 801c2ce:	443a      	add	r2, r7
 801c2d0:	4f19      	ldr	r7, [pc, #100]	; (801c338 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c2d2:	4413      	add	r3, r2
 801c2d4:	603b      	str	r3, [r7, #0]
 801c2d6:	4f19      	ldr	r7, [pc, #100]	; (801c33c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c2d8:	2300      	movs	r3, #0
 801c2da:	803b      	strh	r3, [r7, #0]
 801c2dc:	4f18      	ldr	r7, [pc, #96]	; (801c340 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c2de:	683f      	ldr	r7, [r7, #0]
 801c2e0:	1aba      	subs	r2, r7, r2
 801c2e2:	4f18      	ldr	r7, [pc, #96]	; (801c344 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c2e4:	603a      	str	r2, [r7, #0]
 801c2e6:	4a18      	ldr	r2, [pc, #96]	; (801c348 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c2e8:	469c      	mov	ip, r3
 801c2ea:	8013      	strh	r3, [r2, #0]
 801c2ec:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c2f0:	428b      	cmp	r3, r1
 801c2f2:	d10d      	bne.n	801c310 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c2f4:	882d      	ldrh	r5, [r5, #0]
 801c2f6:	6830      	ldr	r0, [r6, #0]
 801c2f8:	2300      	movs	r3, #0
 801c2fa:	240e      	movs	r4, #14
 801c2fc:	429d      	cmp	r5, r3
 801c2fe:	d90f      	bls.n	801c320 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c300:	fb04 0203 	mla	r2, r4, r3, r0
 801c304:	3301      	adds	r3, #1
 801c306:	7b11      	ldrb	r1, [r2, #12]
 801c308:	f36f 1145 	bfc	r1, #5, #1
 801c30c:	7311      	strb	r1, [r2, #12]
 801c30e:	e7f5      	b.n	801c2fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c310:	6822      	ldr	r2, [r4, #0]
 801c312:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c316:	6802      	ldr	r2, [r0, #0]
 801c318:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c31c:	3301      	adds	r3, #1
 801c31e:	e7e7      	b.n	801c2f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c320:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c322:	bf00      	nop
 801c324:	200138c0 	.word	0x200138c0
 801c328:	200138dc 	.word	0x200138dc
 801c32c:	200138e0 	.word	0x200138e0
 801c330:	200138d4 	.word	0x200138d4
 801c334:	200138c4 	.word	0x200138c4
 801c338:	200138cc 	.word	0x200138cc
 801c33c:	200138de 	.word	0x200138de
 801c340:	200138c8 	.word	0x200138c8
 801c344:	200138d8 	.word	0x200138d8
 801c348:	200138d0 	.word	0x200138d0

0801c34c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c34c:	4b06      	ldr	r3, [pc, #24]	; (801c368 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c34e:	681b      	ldr	r3, [r3, #0]
 801c350:	b943      	cbnz	r3, 801c364 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c352:	b139      	cbz	r1, 801c364 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c354:	4b05      	ldr	r3, [pc, #20]	; (801c36c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c356:	801a      	strh	r2, [r3, #0]
 801c358:	4b05      	ldr	r3, [pc, #20]	; (801c370 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c35a:	6019      	str	r1, [r3, #0]
 801c35c:	4b05      	ldr	r3, [pc, #20]	; (801c374 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c35e:	6018      	str	r0, [r3, #0]
 801c360:	f7ff bf96 	b.w	801c290 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c364:	4770      	bx	lr
 801c366:	bf00      	nop
 801c368:	200138cc 	.word	0x200138cc
 801c36c:	200138e0 	.word	0x200138e0
 801c370:	200138c8 	.word	0x200138c8
 801c374:	200138c0 	.word	0x200138c0

0801c378 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c378:	b470      	push	{r4, r5, r6}
 801c37a:	4c07      	ldr	r4, [pc, #28]	; (801c398 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c37c:	6826      	ldr	r6, [r4, #0]
 801c37e:	4605      	mov	r5, r0
 801c380:	4610      	mov	r0, r2
 801c382:	9a03      	ldr	r2, [sp, #12]
 801c384:	b936      	cbnz	r6, 801c394 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c386:	6025      	str	r5, [r4, #0]
 801c388:	4c04      	ldr	r4, [pc, #16]	; (801c39c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c38a:	8021      	strh	r1, [r4, #0]
 801c38c:	bc70      	pop	{r4, r5, r6}
 801c38e:	4619      	mov	r1, r3
 801c390:	f7ff bfdc 	b.w	801c34c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c394:	bc70      	pop	{r4, r5, r6}
 801c396:	4770      	bx	lr
 801c398:	200138e4 	.word	0x200138e4
 801c39c:	200138dc 	.word	0x200138dc

0801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c3a0:	4a12      	ldr	r2, [pc, #72]	; (801c3ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c3a2:	8803      	ldrh	r3, [r0, #0]
 801c3a4:	8812      	ldrh	r2, [r2, #0]
 801c3a6:	4293      	cmp	r3, r2
 801c3a8:	d207      	bcs.n	801c3ba <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c3aa:	4a11      	ldr	r2, [pc, #68]	; (801c3f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c3ac:	6812      	ldr	r2, [r2, #0]
 801c3ae:	2114      	movs	r1, #20
 801c3b0:	fb01 2303 	mla	r3, r1, r3, r2
 801c3b4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c3b8:	4770      	bx	lr
 801c3ba:	490e      	ldr	r1, [pc, #56]	; (801c3f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c3bc:	8809      	ldrh	r1, [r1, #0]
 801c3be:	4411      	add	r1, r2
 801c3c0:	428b      	cmp	r3, r1
 801c3c2:	da04      	bge.n	801c3ce <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c3c4:	1a9b      	subs	r3, r3, r2
 801c3c6:	4a0c      	ldr	r2, [pc, #48]	; (801c3f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c3c8:	210e      	movs	r1, #14
 801c3ca:	6812      	ldr	r2, [r2, #0]
 801c3cc:	e7f0      	b.n	801c3b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c3ce:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c3d2:	4293      	cmp	r3, r2
 801c3d4:	d108      	bne.n	801c3e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c3d6:	4b09      	ldr	r3, [pc, #36]	; (801c3fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c3d8:	781b      	ldrb	r3, [r3, #0]
 801c3da:	b91b      	cbnz	r3, 801c3e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c3dc:	4b08      	ldr	r3, [pc, #32]	; (801c400 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c3de:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c3e2:	4770      	bx	lr
 801c3e4:	4b07      	ldr	r3, [pc, #28]	; (801c404 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c3e6:	e7fa      	b.n	801c3de <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c3e8:	2000      	movs	r0, #0
 801c3ea:	4770      	bx	lr
 801c3ec:	200138dc 	.word	0x200138dc
 801c3f0:	200138e4 	.word	0x200138e4
 801c3f4:	200138e0 	.word	0x200138e0
 801c3f8:	200138c4 	.word	0x200138c4
 801c3fc:	2001384c 	.word	0x2001384c
 801c400:	2001384e 	.word	0x2001384e
 801c404:	20013850 	.word	0x20013850

0801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c408:	4a12      	ldr	r2, [pc, #72]	; (801c454 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c40a:	8803      	ldrh	r3, [r0, #0]
 801c40c:	8812      	ldrh	r2, [r2, #0]
 801c40e:	4293      	cmp	r3, r2
 801c410:	d207      	bcs.n	801c422 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c412:	4a11      	ldr	r2, [pc, #68]	; (801c458 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c414:	6812      	ldr	r2, [r2, #0]
 801c416:	2114      	movs	r1, #20
 801c418:	fb01 2303 	mla	r3, r1, r3, r2
 801c41c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c420:	4770      	bx	lr
 801c422:	490e      	ldr	r1, [pc, #56]	; (801c45c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c424:	8809      	ldrh	r1, [r1, #0]
 801c426:	4411      	add	r1, r2
 801c428:	428b      	cmp	r3, r1
 801c42a:	da04      	bge.n	801c436 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c42c:	1a9b      	subs	r3, r3, r2
 801c42e:	4a0c      	ldr	r2, [pc, #48]	; (801c460 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c430:	210e      	movs	r1, #14
 801c432:	6812      	ldr	r2, [r2, #0]
 801c434:	e7f0      	b.n	801c418 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c436:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c43a:	4293      	cmp	r3, r2
 801c43c:	d108      	bne.n	801c450 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c43e:	4b09      	ldr	r3, [pc, #36]	; (801c464 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c440:	781b      	ldrb	r3, [r3, #0]
 801c442:	b91b      	cbnz	r3, 801c44c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c444:	4b08      	ldr	r3, [pc, #32]	; (801c468 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c446:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c44a:	4770      	bx	lr
 801c44c:	4b07      	ldr	r3, [pc, #28]	; (801c46c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c44e:	e7fa      	b.n	801c446 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c450:	2000      	movs	r0, #0
 801c452:	4770      	bx	lr
 801c454:	200138dc 	.word	0x200138dc
 801c458:	200138e4 	.word	0x200138e4
 801c45c:	200138e0 	.word	0x200138e0
 801c460:	200138c4 	.word	0x200138c4
 801c464:	2001384c 	.word	0x2001384c
 801c468:	20013850 	.word	0x20013850
 801c46c:	2001384e 	.word	0x2001384e

0801c470 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c470:	b510      	push	{r4, lr}
 801c472:	4a1f      	ldr	r2, [pc, #124]	; (801c4f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c474:	880b      	ldrh	r3, [r1, #0]
 801c476:	8812      	ldrh	r2, [r2, #0]
 801c478:	4293      	cmp	r3, r2
 801c47a:	d213      	bcs.n	801c4a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801c47c:	4a1d      	ldr	r2, [pc, #116]	; (801c4f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801c47e:	6812      	ldr	r2, [r2, #0]
 801c480:	2114      	movs	r1, #20
 801c482:	fb01 2303 	mla	r3, r1, r3, r2
 801c486:	8a1a      	ldrh	r2, [r3, #16]
 801c488:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c48c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c490:	8a5b      	ldrh	r3, [r3, #18]
 801c492:	8004      	strh	r4, [r0, #0]
 801c494:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c498:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c49c:	8041      	strh	r1, [r0, #2]
 801c49e:	8082      	strh	r2, [r0, #4]
 801c4a0:	80c3      	strh	r3, [r0, #6]
 801c4a2:	e00e      	b.n	801c4c2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c4a4:	4914      	ldr	r1, [pc, #80]	; (801c4f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801c4a6:	8809      	ldrh	r1, [r1, #0]
 801c4a8:	4411      	add	r1, r2
 801c4aa:	428b      	cmp	r3, r1
 801c4ac:	da0a      	bge.n	801c4c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801c4ae:	1a9b      	subs	r3, r3, r2
 801c4b0:	4a12      	ldr	r2, [pc, #72]	; (801c4fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801c4b2:	6812      	ldr	r2, [r2, #0]
 801c4b4:	210e      	movs	r1, #14
 801c4b6:	fb01 2303 	mla	r3, r1, r3, r2
 801c4ba:	681a      	ldr	r2, [r3, #0]
 801c4bc:	6002      	str	r2, [r0, #0]
 801c4be:	685a      	ldr	r2, [r3, #4]
 801c4c0:	6042      	str	r2, [r0, #4]
 801c4c2:	bd10      	pop	{r4, pc}
 801c4c4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c4c8:	4293      	cmp	r3, r2
 801c4ca:	d10b      	bne.n	801c4e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801c4cc:	4b0c      	ldr	r3, [pc, #48]	; (801c500 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c4ce:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c4d2:	4b0c      	ldr	r3, [pc, #48]	; (801c504 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c4d4:	8081      	strh	r1, [r0, #4]
 801c4d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c4da:	80c2      	strh	r2, [r0, #6]
 801c4dc:	2300      	movs	r3, #0
 801c4de:	8003      	strh	r3, [r0, #0]
 801c4e0:	8043      	strh	r3, [r0, #2]
 801c4e2:	e7ee      	b.n	801c4c2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c4e4:	2300      	movs	r3, #0
 801c4e6:	8003      	strh	r3, [r0, #0]
 801c4e8:	8043      	strh	r3, [r0, #2]
 801c4ea:	8083      	strh	r3, [r0, #4]
 801c4ec:	e7d8      	b.n	801c4a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801c4ee:	bf00      	nop
 801c4f0:	200138dc 	.word	0x200138dc
 801c4f4:	200138e4 	.word	0x200138e4
 801c4f8:	200138e0 	.word	0x200138e0
 801c4fc:	200138c4 	.word	0x200138c4
 801c500:	20013848 	.word	0x20013848
 801c504:	2001384a 	.word	0x2001384a

0801c508 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c508:	4a17      	ldr	r2, [pc, #92]	; (801c568 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801c50a:	8803      	ldrh	r3, [r0, #0]
 801c50c:	8812      	ldrh	r2, [r2, #0]
 801c50e:	4293      	cmp	r3, r2
 801c510:	d213      	bcs.n	801c53a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801c512:	4a16      	ldr	r2, [pc, #88]	; (801c56c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c514:	6812      	ldr	r2, [r2, #0]
 801c516:	2114      	movs	r1, #20
 801c518:	fb01 2303 	mla	r3, r1, r3, r2
 801c51c:	8a1a      	ldrh	r2, [r3, #16]
 801c51e:	8919      	ldrh	r1, [r3, #8]
 801c520:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c524:	428a      	cmp	r2, r1
 801c526:	db1d      	blt.n	801c564 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c528:	8a58      	ldrh	r0, [r3, #18]
 801c52a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c52e:	895b      	ldrh	r3, [r3, #10]
 801c530:	4298      	cmp	r0, r3
 801c532:	bfac      	ite	ge
 801c534:	2000      	movge	r0, #0
 801c536:	2001      	movlt	r0, #1
 801c538:	4770      	bx	lr
 801c53a:	490d      	ldr	r1, [pc, #52]	; (801c570 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c53c:	8809      	ldrh	r1, [r1, #0]
 801c53e:	4411      	add	r1, r2
 801c540:	428b      	cmp	r3, r1
 801c542:	da0d      	bge.n	801c560 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801c544:	1a9b      	subs	r3, r3, r2
 801c546:	4a0b      	ldr	r2, [pc, #44]	; (801c574 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c548:	6812      	ldr	r2, [r2, #0]
 801c54a:	210e      	movs	r1, #14
 801c54c:	fb01 2303 	mla	r3, r1, r3, r2
 801c550:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c554:	891a      	ldrh	r2, [r3, #8]
 801c556:	4291      	cmp	r1, r2
 801c558:	db04      	blt.n	801c564 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c55a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c55e:	e7e6      	b.n	801c52e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801c560:	2000      	movs	r0, #0
 801c562:	4770      	bx	lr
 801c564:	2001      	movs	r0, #1
 801c566:	4770      	bx	lr
 801c568:	200138dc 	.word	0x200138dc
 801c56c:	200138e4 	.word	0x200138e4
 801c570:	200138e0 	.word	0x200138e0
 801c574:	200138c4 	.word	0x200138c4

0801c578 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c578:	4a12      	ldr	r2, [pc, #72]	; (801c5c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c57a:	8803      	ldrh	r3, [r0, #0]
 801c57c:	8811      	ldrh	r1, [r2, #0]
 801c57e:	428b      	cmp	r3, r1
 801c580:	d20b      	bcs.n	801c59a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801c582:	4a11      	ldr	r2, [pc, #68]	; (801c5c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c584:	6812      	ldr	r2, [r2, #0]
 801c586:	b112      	cbz	r2, 801c58e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c588:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c58c:	b9c0      	cbnz	r0, 801c5c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801c58e:	4a0f      	ldr	r2, [pc, #60]	; (801c5cc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c590:	6811      	ldr	r1, [r2, #0]
 801c592:	2214      	movs	r2, #20
 801c594:	4353      	muls	r3, r2
 801c596:	58c8      	ldr	r0, [r1, r3]
 801c598:	4770      	bx	lr
 801c59a:	4a0d      	ldr	r2, [pc, #52]	; (801c5d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c59c:	8812      	ldrh	r2, [r2, #0]
 801c59e:	440a      	add	r2, r1
 801c5a0:	4293      	cmp	r3, r2
 801c5a2:	da04      	bge.n	801c5ae <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801c5a4:	4a08      	ldr	r2, [pc, #32]	; (801c5c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c5a6:	6812      	ldr	r2, [r2, #0]
 801c5a8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c5ac:	4770      	bx	lr
 801c5ae:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c5b2:	4293      	cmp	r3, r2
 801c5b4:	d103      	bne.n	801c5be <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c5b6:	4b07      	ldr	r3, [pc, #28]	; (801c5d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c5b8:	681b      	ldr	r3, [r3, #0]
 801c5ba:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c5bc:	4770      	bx	lr
 801c5be:	2000      	movs	r0, #0
 801c5c0:	4770      	bx	lr
 801c5c2:	bf00      	nop
 801c5c4:	200138dc 	.word	0x200138dc
 801c5c8:	200138c0 	.word	0x200138c0
 801c5cc:	200138e4 	.word	0x200138e4
 801c5d0:	200138e0 	.word	0x200138e0
 801c5d4:	20013854 	.word	0x20013854

0801c5d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c5d8:	4b24      	ldr	r3, [pc, #144]	; (801c66c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801c5da:	8802      	ldrh	r2, [r0, #0]
 801c5dc:	8818      	ldrh	r0, [r3, #0]
 801c5de:	4282      	cmp	r2, r0
 801c5e0:	d221      	bcs.n	801c626 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801c5e2:	4b23      	ldr	r3, [pc, #140]	; (801c670 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801c5e4:	6819      	ldr	r1, [r3, #0]
 801c5e6:	2314      	movs	r3, #20
 801c5e8:	fb03 1302 	mla	r3, r3, r2, r1
 801c5ec:	6858      	ldr	r0, [r3, #4]
 801c5ee:	2800      	cmp	r0, #0
 801c5f0:	d03a      	beq.n	801c668 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c5f2:	4920      	ldr	r1, [pc, #128]	; (801c674 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c5f4:	6809      	ldr	r1, [r1, #0]
 801c5f6:	2900      	cmp	r1, #0
 801c5f8:	d036      	beq.n	801c668 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c5fa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c5fe:	2900      	cmp	r1, #0
 801c600:	d032      	beq.n	801c668 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c602:	891a      	ldrh	r2, [r3, #8]
 801c604:	8958      	ldrh	r0, [r3, #10]
 801c606:	4350      	muls	r0, r2
 801c608:	7c5a      	ldrb	r2, [r3, #17]
 801c60a:	7cdb      	ldrb	r3, [r3, #19]
 801c60c:	0952      	lsrs	r2, r2, #5
 801c60e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c612:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c616:	2b0b      	cmp	r3, #11
 801c618:	bf18      	it	ne
 801c61a:	0040      	lslne	r0, r0, #1
 801c61c:	3003      	adds	r0, #3
 801c61e:	f020 0003 	bic.w	r0, r0, #3
 801c622:	4408      	add	r0, r1
 801c624:	4770      	bx	lr
 801c626:	4b14      	ldr	r3, [pc, #80]	; (801c678 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c628:	881b      	ldrh	r3, [r3, #0]
 801c62a:	4403      	add	r3, r0
 801c62c:	429a      	cmp	r2, r3
 801c62e:	da1a      	bge.n	801c666 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c630:	4b12      	ldr	r3, [pc, #72]	; (801c67c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c632:	681b      	ldr	r3, [r3, #0]
 801c634:	1a10      	subs	r0, r2, r0
 801c636:	210e      	movs	r1, #14
 801c638:	fb01 3000 	mla	r0, r1, r0, r3
 801c63c:	7b03      	ldrb	r3, [r0, #12]
 801c63e:	f003 031f 	and.w	r3, r3, #31
 801c642:	2b0b      	cmp	r3, #11
 801c644:	d10b      	bne.n	801c65e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801c646:	8903      	ldrh	r3, [r0, #8]
 801c648:	8940      	ldrh	r0, [r0, #10]
 801c64a:	4358      	muls	r0, r3
 801c64c:	4b09      	ldr	r3, [pc, #36]	; (801c674 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c64e:	6819      	ldr	r1, [r3, #0]
 801c650:	3003      	adds	r0, #3
 801c652:	f020 0303 	bic.w	r3, r0, #3
 801c656:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801c65a:	4418      	add	r0, r3
 801c65c:	4770      	bx	lr
 801c65e:	2b0d      	cmp	r3, #13
 801c660:	d101      	bne.n	801c666 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c662:	300d      	adds	r0, #13
 801c664:	4770      	bx	lr
 801c666:	2000      	movs	r0, #0
 801c668:	4770      	bx	lr
 801c66a:	bf00      	nop
 801c66c:	200138dc 	.word	0x200138dc
 801c670:	200138e4 	.word	0x200138e4
 801c674:	200138c0 	.word	0x200138c0
 801c678:	200138e0 	.word	0x200138e0
 801c67c:	200138c4 	.word	0x200138c4

0801c680 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801c680:	b510      	push	{r4, lr}
 801c682:	4a17      	ldr	r2, [pc, #92]	; (801c6e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801c684:	8803      	ldrh	r3, [r0, #0]
 801c686:	8812      	ldrh	r2, [r2, #0]
 801c688:	4293      	cmp	r3, r2
 801c68a:	d20c      	bcs.n	801c6a6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801c68c:	4a15      	ldr	r2, [pc, #84]	; (801c6e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801c68e:	6812      	ldr	r2, [r2, #0]
 801c690:	2114      	movs	r1, #20
 801c692:	fb01 2303 	mla	r3, r1, r3, r2
 801c696:	7c58      	ldrb	r0, [r3, #17]
 801c698:	0942      	lsrs	r2, r0, #5
 801c69a:	7cd8      	ldrb	r0, [r3, #19]
 801c69c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801c6a0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801c6a4:	bd10      	pop	{r4, pc}
 801c6a6:	4910      	ldr	r1, [pc, #64]	; (801c6e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801c6a8:	8809      	ldrh	r1, [r1, #0]
 801c6aa:	4411      	add	r1, r2
 801c6ac:	428b      	cmp	r3, r1
 801c6ae:	da09      	bge.n	801c6c4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801c6b0:	1a9b      	subs	r3, r3, r2
 801c6b2:	4a0e      	ldr	r2, [pc, #56]	; (801c6ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801c6b4:	6812      	ldr	r2, [r2, #0]
 801c6b6:	210e      	movs	r1, #14
 801c6b8:	fb01 2303 	mla	r3, r1, r3, r2
 801c6bc:	7b18      	ldrb	r0, [r3, #12]
 801c6be:	f000 001f 	and.w	r0, r0, #31
 801c6c2:	e7ef      	b.n	801c6a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c6c4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c6c8:	4293      	cmp	r3, r2
 801c6ca:	d106      	bne.n	801c6da <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801c6cc:	f7e8 ffb0 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 801c6d0:	6803      	ldr	r3, [r0, #0]
 801c6d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c6d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c6d8:	4718      	bx	r3
 801c6da:	2000      	movs	r0, #0
 801c6dc:	e7e2      	b.n	801c6a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c6de:	bf00      	nop
 801c6e0:	200138dc 	.word	0x200138dc
 801c6e4:	200138e4 	.word	0x200138e4
 801c6e8:	200138e0 	.word	0x200138e0
 801c6ec:	200138c4 	.word	0x200138c4

0801c6f0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801c6f0:	2010      	movs	r0, #16
 801c6f2:	4770      	bx	lr

0801c6f4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801c6f4:	2000      	movs	r0, #0
 801c6f6:	4770      	bx	lr

0801c6f8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801c6f8:	4b02      	ldr	r3, [pc, #8]	; (801c704 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801c6fa:	8818      	ldrh	r0, [r3, #0]
 801c6fc:	0040      	lsls	r0, r0, #1
 801c6fe:	b280      	uxth	r0, r0
 801c700:	4770      	bx	lr
 801c702:	bf00      	nop
 801c704:	2001384e 	.word	0x2001384e

0801c708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801c708:	2bff      	cmp	r3, #255	; 0xff
 801c70a:	d050      	beq.n	801c7ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801c70c:	2a0b      	cmp	r2, #11
 801c70e:	d04a      	beq.n	801c7a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c710:	d80e      	bhi.n	801c730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801c712:	2a03      	cmp	r2, #3
 801c714:	d03f      	beq.n	801c796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801c716:	d804      	bhi.n	801c722 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801c718:	2a01      	cmp	r2, #1
 801c71a:	d03e      	beq.n	801c79a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801c71c:	d93f      	bls.n	801c79e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801c71e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801c720:	4770      	bx	lr
 801c722:	2a09      	cmp	r2, #9
 801c724:	d03f      	beq.n	801c7a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c726:	d83c      	bhi.n	801c7a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c728:	2a08      	cmp	r2, #8
 801c72a:	d03a      	beq.n	801c7a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c72c:	2000      	movs	r0, #0
 801c72e:	4770      	bx	lr
 801c730:	2a2f      	cmp	r2, #47	; 0x2f
 801c732:	d024      	beq.n	801c77e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801c734:	d80d      	bhi.n	801c752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801c736:	2a2d      	cmp	r2, #45	; 0x2d
 801c738:	d014      	beq.n	801c764 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801c73a:	d826      	bhi.n	801c78a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801c73c:	2a2c      	cmp	r2, #44	; 0x2c
 801c73e:	d1f5      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c740:	684b      	ldr	r3, [r1, #4]
 801c742:	781b      	ldrb	r3, [r3, #0]
 801c744:	2b01      	cmp	r3, #1
 801c746:	d018      	beq.n	801c77a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801c748:	d323      	bcc.n	801c792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801c74a:	2b02      	cmp	r3, #2
 801c74c:	d1ee      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c74e:	6880      	ldr	r0, [r0, #8]
 801c750:	4770      	bx	lr
 801c752:	2a31      	cmp	r2, #49	; 0x31
 801c754:	d004      	beq.n	801c760 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801c756:	d328      	bcc.n	801c7aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c758:	2a32      	cmp	r2, #50	; 0x32
 801c75a:	d026      	beq.n	801c7aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c75c:	2a33      	cmp	r2, #51	; 0x33
 801c75e:	d1e5      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c760:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801c762:	4770      	bx	lr
 801c764:	684b      	ldr	r3, [r1, #4]
 801c766:	781b      	ldrb	r3, [r3, #0]
 801c768:	2b01      	cmp	r3, #1
 801c76a:	d004      	beq.n	801c776 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801c76c:	d30b      	bcc.n	801c786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801c76e:	2b02      	cmp	r3, #2
 801c770:	d1dc      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c772:	6900      	ldr	r0, [r0, #16]
 801c774:	4770      	bx	lr
 801c776:	6a00      	ldr	r0, [r0, #32]
 801c778:	4770      	bx	lr
 801c77a:	6980      	ldr	r0, [r0, #24]
 801c77c:	4770      	bx	lr
 801c77e:	684b      	ldr	r3, [r1, #4]
 801c780:	781b      	ldrb	r3, [r3, #0]
 801c782:	2b00      	cmp	r3, #0
 801c784:	d1d2      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c786:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801c788:	4770      	bx	lr
 801c78a:	684b      	ldr	r3, [r1, #4]
 801c78c:	781b      	ldrb	r3, [r3, #0]
 801c78e:	2b00      	cmp	r3, #0
 801c790:	d1cc      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c792:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801c794:	4770      	bx	lr
 801c796:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801c798:	4770      	bx	lr
 801c79a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801c79c:	4770      	bx	lr
 801c79e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801c7a0:	4770      	bx	lr
 801c7a2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801c7a4:	4770      	bx	lr
 801c7a6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801c7a8:	4770      	bx	lr
 801c7aa:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801c7ac:	4770      	bx	lr
 801c7ae:	2a0b      	cmp	r2, #11
 801c7b0:	d049      	beq.n	801c846 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c7b2:	d80e      	bhi.n	801c7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801c7b4:	2a03      	cmp	r2, #3
 801c7b6:	d040      	beq.n	801c83a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801c7b8:	d804      	bhi.n	801c7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801c7ba:	2a01      	cmp	r2, #1
 801c7bc:	d03f      	beq.n	801c83e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801c7be:	d940      	bls.n	801c842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801c7c0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801c7c2:	4770      	bx	lr
 801c7c4:	2a09      	cmp	r2, #9
 801c7c6:	d03e      	beq.n	801c846 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c7c8:	d801      	bhi.n	801c7ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801c7ca:	2a08      	cmp	r2, #8
 801c7cc:	d1ae      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c7ce:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801c7d0:	4770      	bx	lr
 801c7d2:	2a2f      	cmp	r2, #47	; 0x2f
 801c7d4:	d024      	beq.n	801c820 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801c7d6:	d80d      	bhi.n	801c7f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801c7d8:	2a2d      	cmp	r2, #45	; 0x2d
 801c7da:	d014      	beq.n	801c806 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801c7dc:	d826      	bhi.n	801c82c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801c7de:	2a2c      	cmp	r2, #44	; 0x2c
 801c7e0:	d1a4      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c7e2:	684b      	ldr	r3, [r1, #4]
 801c7e4:	781b      	ldrb	r3, [r3, #0]
 801c7e6:	2b01      	cmp	r3, #1
 801c7e8:	d018      	beq.n	801c81c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801c7ea:	d324      	bcc.n	801c836 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801c7ec:	2b02      	cmp	r3, #2
 801c7ee:	d19d      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c7f0:	68c0      	ldr	r0, [r0, #12]
 801c7f2:	4770      	bx	lr
 801c7f4:	2a31      	cmp	r2, #49	; 0x31
 801c7f6:	d004      	beq.n	801c802 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801c7f8:	d327      	bcc.n	801c84a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c7fa:	2a32      	cmp	r2, #50	; 0x32
 801c7fc:	d025      	beq.n	801c84a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c7fe:	2a33      	cmp	r2, #51	; 0x33
 801c800:	d194      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c802:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801c804:	4770      	bx	lr
 801c806:	684b      	ldr	r3, [r1, #4]
 801c808:	781b      	ldrb	r3, [r3, #0]
 801c80a:	2b01      	cmp	r3, #1
 801c80c:	d004      	beq.n	801c818 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801c80e:	d30b      	bcc.n	801c828 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801c810:	2b02      	cmp	r3, #2
 801c812:	d18b      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c814:	6940      	ldr	r0, [r0, #20]
 801c816:	4770      	bx	lr
 801c818:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801c81a:	4770      	bx	lr
 801c81c:	69c0      	ldr	r0, [r0, #28]
 801c81e:	4770      	bx	lr
 801c820:	684b      	ldr	r3, [r1, #4]
 801c822:	781b      	ldrb	r3, [r3, #0]
 801c824:	2b00      	cmp	r3, #0
 801c826:	d181      	bne.n	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c828:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801c82a:	4770      	bx	lr
 801c82c:	684b      	ldr	r3, [r1, #4]
 801c82e:	781b      	ldrb	r3, [r3, #0]
 801c830:	2b00      	cmp	r3, #0
 801c832:	f47f af7b 	bne.w	801c72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c836:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801c838:	4770      	bx	lr
 801c83a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801c83c:	4770      	bx	lr
 801c83e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801c840:	4770      	bx	lr
 801c842:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801c844:	4770      	bx	lr
 801c846:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801c848:	4770      	bx	lr
 801c84a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801c84c:	4770      	bx	lr

0801c84e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c84e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c852:	b087      	sub	sp, #28
 801c854:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c856:	9205      	str	r2, [sp, #20]
 801c858:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c85c:	9202      	str	r2, [sp, #8]
 801c85e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c862:	9101      	str	r1, [sp, #4]
 801c864:	6841      	ldr	r1, [r0, #4]
 801c866:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c86a:	fb01 2404 	mla	r4, r1, r4, r2
 801c86e:	6802      	ldr	r2, [r0, #0]
 801c870:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c874:	f8de 2000 	ldr.w	r2, [lr]
 801c878:	9203      	str	r2, [sp, #12]
 801c87a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c87e:	3204      	adds	r2, #4
 801c880:	9204      	str	r2, [sp, #16]
 801c882:	9a02      	ldr	r2, [sp, #8]
 801c884:	43d6      	mvns	r6, r2
 801c886:	b2f6      	uxtb	r6, r6
 801c888:	9a01      	ldr	r2, [sp, #4]
 801c88a:	2a00      	cmp	r2, #0
 801c88c:	dc03      	bgt.n	801c896 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c88e:	9a05      	ldr	r2, [sp, #20]
 801c890:	2a00      	cmp	r2, #0
 801c892:	f340 8129 	ble.w	801cae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c896:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c898:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801c89c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801c8a0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c8a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c8a6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c8aa:	2b00      	cmp	r3, #0
 801c8ac:	dd0e      	ble.n	801c8cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c8ae:	1408      	asrs	r0, r1, #16
 801c8b0:	d405      	bmi.n	801c8be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c8b2:	4560      	cmp	r0, ip
 801c8b4:	da03      	bge.n	801c8be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c8b6:	1410      	asrs	r0, r2, #16
 801c8b8:	d401      	bmi.n	801c8be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c8ba:	42b8      	cmp	r0, r7
 801c8bc:	db07      	blt.n	801c8ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c8be:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c8c0:	4401      	add	r1, r0
 801c8c2:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c8c4:	3b01      	subs	r3, #1
 801c8c6:	4402      	add	r2, r0
 801c8c8:	3402      	adds	r4, #2
 801c8ca:	e7ee      	b.n	801c8aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c8cc:	d071      	beq.n	801c9b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c8ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c8d0:	1e58      	subs	r0, r3, #1
 801c8d2:	fb05 1500 	mla	r5, r5, r0, r1
 801c8d6:	142d      	asrs	r5, r5, #16
 801c8d8:	d45f      	bmi.n	801c99a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c8da:	4565      	cmp	r5, ip
 801c8dc:	da5d      	bge.n	801c99a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c8de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c8e0:	fb05 2000 	mla	r0, r5, r0, r2
 801c8e4:	1400      	asrs	r0, r0, #16
 801c8e6:	d458      	bmi.n	801c99a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c8e8:	42b8      	cmp	r0, r7
 801c8ea:	da56      	bge.n	801c99a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c8ec:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801c8f0:	4699      	mov	r9, r3
 801c8f2:	46a2      	mov	sl, r4
 801c8f4:	f1b9 0f00 	cmp.w	r9, #0
 801c8f8:	dd57      	ble.n	801c9aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801c8fa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c8fe:	9803      	ldr	r0, [sp, #12]
 801c900:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801c904:	140d      	asrs	r5, r1, #16
 801c906:	fb07 000c 	mla	r0, r7, ip, r0
 801c90a:	f109 39ff 	add.w	r9, r9, #4294967295
 801c90e:	5d40      	ldrb	r0, [r0, r5]
 801c910:	9d04      	ldr	r5, [sp, #16]
 801c912:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c916:	f8ba 5000 	ldrh.w	r5, [sl]
 801c91a:	122f      	asrs	r7, r5, #8
 801c91c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c920:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c924:	fb17 f706 	smulbb	r7, r7, r6
 801c928:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c92c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c930:	00ed      	lsls	r5, r5, #3
 801c932:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c936:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801c93a:	10c7      	asrs	r7, r0, #3
 801c93c:	b2ed      	uxtb	r5, r5
 801c93e:	00c0      	lsls	r0, r0, #3
 801c940:	fb18 f806 	smulbb	r8, r8, r6
 801c944:	fb15 f506 	smulbb	r5, r5, r6
 801c948:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c94c:	b2c0      	uxtb	r0, r0
 801c94e:	fa1f fc8c 	uxth.w	ip, ip
 801c952:	fb07 870b 	mla	r7, r7, fp, r8
 801c956:	fb00 500b 	mla	r0, r0, fp, r5
 801c95a:	b280      	uxth	r0, r0
 801c95c:	b2bf      	uxth	r7, r7
 801c95e:	f10c 0501 	add.w	r5, ip, #1
 801c962:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c966:	f107 0801 	add.w	r8, r7, #1
 801c96a:	1c45      	adds	r5, r0, #1
 801c96c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c970:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c974:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c976:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c97a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c97e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c982:	ea45 0c0c 	orr.w	ip, r5, ip
 801c986:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c98a:	4401      	add	r1, r0
 801c98c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c98e:	ea4c 0c08 	orr.w	ip, ip, r8
 801c992:	f82a cb02 	strh.w	ip, [sl], #2
 801c996:	4402      	add	r2, r0
 801c998:	e7ac      	b.n	801c8f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c99a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801c99e:	f04f 0800 	mov.w	r8, #0
 801c9a2:	eb03 0008 	add.w	r0, r3, r8
 801c9a6:	2800      	cmp	r0, #0
 801c9a8:	dc41      	bgt.n	801ca2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c9aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c9ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c9b2:	9b01      	ldr	r3, [sp, #4]
 801c9b4:	2b00      	cmp	r3, #0
 801c9b6:	f340 8097 	ble.w	801cae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c9ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c9be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c9c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c9c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c9c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c9cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c9d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c9d4:	eef0 6a62 	vmov.f32	s13, s5
 801c9d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c9dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c9e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c9e4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801c9e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c9ec:	eef0 6a43 	vmov.f32	s13, s6
 801c9f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c9f4:	ee12 2a90 	vmov	r2, s5
 801c9f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c9fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca00:	ee13 2a10 	vmov	r2, s6
 801ca04:	9313      	str	r3, [sp, #76]	; 0x4c
 801ca06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ca08:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca0c:	9314      	str	r3, [sp, #80]	; 0x50
 801ca0e:	9b01      	ldr	r3, [sp, #4]
 801ca10:	9a05      	ldr	r2, [sp, #20]
 801ca12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ca16:	3b01      	subs	r3, #1
 801ca18:	9301      	str	r3, [sp, #4]
 801ca1a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801ca1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ca20:	eeb0 3a67 	vmov.f32	s6, s15
 801ca24:	bf08      	it	eq
 801ca26:	4613      	moveq	r3, r2
 801ca28:	eef0 2a47 	vmov.f32	s5, s14
 801ca2c:	e72c      	b.n	801c888 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ca2e:	140f      	asrs	r7, r1, #16
 801ca30:	d453      	bmi.n	801cada <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ca32:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ca36:	42bd      	cmp	r5, r7
 801ca38:	dd4f      	ble.n	801cada <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ca3a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ca3e:	d44c      	bmi.n	801cada <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ca40:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ca44:	4560      	cmp	r0, ip
 801ca46:	dd48      	ble.n	801cada <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ca48:	9803      	ldr	r0, [sp, #12]
 801ca4a:	b22d      	sxth	r5, r5
 801ca4c:	fb0c 0505 	mla	r5, ip, r5, r0
 801ca50:	5de8      	ldrb	r0, [r5, r7]
 801ca52:	9d04      	ldr	r5, [sp, #16]
 801ca54:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ca58:	f06f 0501 	mvn.w	r5, #1
 801ca5c:	fb05 fb08 	mul.w	fp, r5, r8
 801ca60:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ca64:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ca68:	122f      	asrs	r7, r5, #8
 801ca6a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ca6e:	fb17 f706 	smulbb	r7, r7, r6
 801ca72:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ca76:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ca7a:	00ed      	lsls	r5, r5, #3
 801ca7c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ca80:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ca84:	10c7      	asrs	r7, r0, #3
 801ca86:	b2ed      	uxtb	r5, r5
 801ca88:	00c0      	lsls	r0, r0, #3
 801ca8a:	fb19 f906 	smulbb	r9, r9, r6
 801ca8e:	fb15 f506 	smulbb	r5, r5, r6
 801ca92:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ca96:	b2c0      	uxtb	r0, r0
 801ca98:	fa1f fc8c 	uxth.w	ip, ip
 801ca9c:	fb07 970a 	mla	r7, r7, sl, r9
 801caa0:	fb00 500a 	mla	r0, r0, sl, r5
 801caa4:	b2bf      	uxth	r7, r7
 801caa6:	b280      	uxth	r0, r0
 801caa8:	f10c 0501 	add.w	r5, ip, #1
 801caac:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801cab0:	f107 0901 	add.w	r9, r7, #1
 801cab4:	1c45      	adds	r5, r0, #1
 801cab6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801caba:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801cabe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cac2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cac6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801caca:	ea45 0c0c 	orr.w	ip, r5, ip
 801cace:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cad2:	ea4c 0c09 	orr.w	ip, ip, r9
 801cad6:	f824 c00b 	strh.w	ip, [r4, fp]
 801cada:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cadc:	4401      	add	r1, r0
 801cade:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cae0:	f108 38ff 	add.w	r8, r8, #4294967295
 801cae4:	4402      	add	r2, r0
 801cae6:	e75c      	b.n	801c9a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801cae8:	b007      	add	sp, #28
 801caea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801caee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801caee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801caf2:	b085      	sub	sp, #20
 801caf4:	4693      	mov	fp, r2
 801caf6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801caf8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cafa:	6870      	ldr	r0, [r6, #4]
 801cafc:	9100      	str	r1, [sp, #0]
 801cafe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cb02:	fb00 2404 	mla	r4, r0, r4, r2
 801cb06:	6832      	ldr	r2, [r6, #0]
 801cb08:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cb0c:	682a      	ldr	r2, [r5, #0]
 801cb0e:	9201      	str	r2, [sp, #4]
 801cb10:	686a      	ldr	r2, [r5, #4]
 801cb12:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801cb16:	3204      	adds	r2, #4
 801cb18:	9202      	str	r2, [sp, #8]
 801cb1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cb1e:	9a00      	ldr	r2, [sp, #0]
 801cb20:	2a00      	cmp	r2, #0
 801cb22:	dc03      	bgt.n	801cb2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801cb24:	f1bb 0f00 	cmp.w	fp, #0
 801cb28:	f340 80a0 	ble.w	801cc6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801cb2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cb2e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cb32:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801cb36:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cb3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cb3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cb40:	2b00      	cmp	r3, #0
 801cb42:	dd0c      	ble.n	801cb5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb44:	1406      	asrs	r6, r0, #16
 801cb46:	d405      	bmi.n	801cb54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cb48:	454e      	cmp	r6, r9
 801cb4a:	da03      	bge.n	801cb54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cb4c:	1416      	asrs	r6, r2, #16
 801cb4e:	d401      	bmi.n	801cb54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cb50:	4546      	cmp	r6, r8
 801cb52:	db05      	blt.n	801cb60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb54:	4470      	add	r0, lr
 801cb56:	4462      	add	r2, ip
 801cb58:	3b01      	subs	r3, #1
 801cb5a:	3402      	adds	r4, #2
 801cb5c:	e7f0      	b.n	801cb40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801cb5e:	d00f      	beq.n	801cb80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cb60:	1e5e      	subs	r6, r3, #1
 801cb62:	fb0e 0706 	mla	r7, lr, r6, r0
 801cb66:	143f      	asrs	r7, r7, #16
 801cb68:	d541      	bpl.n	801cbee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801cb6a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801cb6e:	4698      	mov	r8, r3
 801cb70:	9603      	str	r6, [sp, #12]
 801cb72:	f1b8 0f00 	cmp.w	r8, #0
 801cb76:	dc59      	bgt.n	801cc2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cb78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cb7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cb80:	9b00      	ldr	r3, [sp, #0]
 801cb82:	2b00      	cmp	r3, #0
 801cb84:	dd72      	ble.n	801cc6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801cb86:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cb92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb94:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb9c:	eeb0 6a62 	vmov.f32	s12, s5
 801cba0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cba4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cba8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cbac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cbb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cbb4:	eeb0 6a43 	vmov.f32	s12, s6
 801cbb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cbbc:	ee12 2a90 	vmov	r2, s5
 801cbc0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cbc4:	fb92 fef3 	sdiv	lr, r2, r3
 801cbc8:	ee13 2a10 	vmov	r2, s6
 801cbcc:	fb92 fcf3 	sdiv	ip, r2, r3
 801cbd0:	9b00      	ldr	r3, [sp, #0]
 801cbd2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cbd6:	3b01      	subs	r3, #1
 801cbd8:	9300      	str	r3, [sp, #0]
 801cbda:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cbde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cbe0:	eeb0 3a67 	vmov.f32	s6, s15
 801cbe4:	bf08      	it	eq
 801cbe6:	465b      	moveq	r3, fp
 801cbe8:	eef0 2a47 	vmov.f32	s5, s14
 801cbec:	e797      	b.n	801cb1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cbee:	454f      	cmp	r7, r9
 801cbf0:	dabb      	bge.n	801cb6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cbf2:	fb0c 2606 	mla	r6, ip, r6, r2
 801cbf6:	1436      	asrs	r6, r6, #16
 801cbf8:	d4b7      	bmi.n	801cb6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cbfa:	4546      	cmp	r6, r8
 801cbfc:	dab5      	bge.n	801cb6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cbfe:	461e      	mov	r6, r3
 801cc00:	46a0      	mov	r8, r4
 801cc02:	2e00      	cmp	r6, #0
 801cc04:	ddb8      	ble.n	801cb78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cc06:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801cc0a:	9901      	ldr	r1, [sp, #4]
 801cc0c:	1417      	asrs	r7, r2, #16
 801cc0e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801cc12:	fb0a 1707 	mla	r7, sl, r7, r1
 801cc16:	9902      	ldr	r1, [sp, #8]
 801cc18:	f817 7009 	ldrb.w	r7, [r7, r9]
 801cc1c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801cc20:	f828 7b02 	strh.w	r7, [r8], #2
 801cc24:	4470      	add	r0, lr
 801cc26:	4462      	add	r2, ip
 801cc28:	3e01      	subs	r6, #1
 801cc2a:	e7ea      	b.n	801cc02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801cc2c:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cc30:	d417      	bmi.n	801cc62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cc32:	68ae      	ldr	r6, [r5, #8]
 801cc34:	454e      	cmp	r6, r9
 801cc36:	dd14      	ble.n	801cc62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cc38:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801cc3c:	d411      	bmi.n	801cc62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cc3e:	68ef      	ldr	r7, [r5, #12]
 801cc40:	4557      	cmp	r7, sl
 801cc42:	dd0e      	ble.n	801cc62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cc44:	9f01      	ldr	r7, [sp, #4]
 801cc46:	b236      	sxth	r6, r6
 801cc48:	fb0a 7606 	mla	r6, sl, r6, r7
 801cc4c:	9f02      	ldr	r7, [sp, #8]
 801cc4e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801cc52:	f06f 0101 	mvn.w	r1, #1
 801cc56:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801cc5a:	fb01 f608 	mul.w	r6, r1, r8
 801cc5e:	9903      	ldr	r1, [sp, #12]
 801cc60:	538f      	strh	r7, [r1, r6]
 801cc62:	4470      	add	r0, lr
 801cc64:	4462      	add	r2, ip
 801cc66:	f108 38ff 	add.w	r8, r8, #4294967295
 801cc6a:	e782      	b.n	801cb72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc6c:	b005      	add	sp, #20
 801cc6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cc72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc76:	b087      	sub	sp, #28
 801cc78:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cc7a:	9205      	str	r2, [sp, #20]
 801cc7c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cc80:	9203      	str	r2, [sp, #12]
 801cc82:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801cc86:	9102      	str	r1, [sp, #8]
 801cc88:	6861      	ldr	r1, [r4, #4]
 801cc8a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cc8e:	fb01 2000 	mla	r0, r1, r0, r2
 801cc92:	6822      	ldr	r2, [r4, #0]
 801cc94:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801cc98:	9200      	str	r2, [sp, #0]
 801cc9a:	f8dc 2000 	ldr.w	r2, [ip]
 801cc9e:	9204      	str	r2, [sp, #16]
 801cca0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cca4:	3204      	adds	r2, #4
 801cca6:	9201      	str	r2, [sp, #4]
 801cca8:	9a03      	ldr	r2, [sp, #12]
 801ccaa:	43d5      	mvns	r5, r2
 801ccac:	b2ed      	uxtb	r5, r5
 801ccae:	9a02      	ldr	r2, [sp, #8]
 801ccb0:	2a00      	cmp	r2, #0
 801ccb2:	dc03      	bgt.n	801ccbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ccb4:	9a05      	ldr	r2, [sp, #20]
 801ccb6:	2a00      	cmp	r2, #0
 801ccb8:	f340 812c 	ble.w	801cf14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ccbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ccbe:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801ccc2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801ccc6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ccca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cccc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ccd0:	2b00      	cmp	r3, #0
 801ccd2:	dd10      	ble.n	801ccf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ccd4:	140c      	asrs	r4, r1, #16
 801ccd6:	d405      	bmi.n	801cce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ccd8:	4574      	cmp	r4, lr
 801ccda:	da03      	bge.n	801cce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ccdc:	1414      	asrs	r4, r2, #16
 801ccde:	d401      	bmi.n	801cce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cce0:	42bc      	cmp	r4, r7
 801cce2:	db09      	blt.n	801ccf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cce4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cce6:	9800      	ldr	r0, [sp, #0]
 801cce8:	4421      	add	r1, r4
 801ccea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ccec:	3002      	adds	r0, #2
 801ccee:	4422      	add	r2, r4
 801ccf0:	3b01      	subs	r3, #1
 801ccf2:	9000      	str	r0, [sp, #0]
 801ccf4:	e7ec      	b.n	801ccd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ccf6:	d071      	beq.n	801cddc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801ccf8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ccfa:	1e5c      	subs	r4, r3, #1
 801ccfc:	fb06 1604 	mla	r6, r6, r4, r1
 801cd00:	1436      	asrs	r6, r6, #16
 801cd02:	d45d      	bmi.n	801cdc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cd04:	4576      	cmp	r6, lr
 801cd06:	da5b      	bge.n	801cdc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cd08:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801cd0a:	fb06 2404 	mla	r4, r6, r4, r2
 801cd0e:	1424      	asrs	r4, r4, #16
 801cd10:	d456      	bmi.n	801cdc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cd12:	42bc      	cmp	r4, r7
 801cd14:	da54      	bge.n	801cdc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cd16:	f8dd 9000 	ldr.w	r9, [sp]
 801cd1a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801cd1e:	4698      	mov	r8, r3
 801cd20:	f1b8 0f00 	cmp.w	r8, #0
 801cd24:	dd54      	ble.n	801cdd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801cd26:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801cd2a:	9804      	ldr	r0, [sp, #16]
 801cd2c:	1414      	asrs	r4, r2, #16
 801cd2e:	fb07 0404 	mla	r4, r7, r4, r0
 801cd32:	140e      	asrs	r6, r1, #16
 801cd34:	9801      	ldr	r0, [sp, #4]
 801cd36:	f814 e006 	ldrb.w	lr, [r4, r6]
 801cd3a:	f8b9 4000 	ldrh.w	r4, [r9]
 801cd3e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cd42:	eb00 0b0e 	add.w	fp, r0, lr
 801cd46:	1227      	asrs	r7, r4, #8
 801cd48:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cd4c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cd50:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801cd54:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cd56:	fb16 f60a 	smulbb	r6, r6, sl
 801cd5a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cd5e:	fb07 6705 	mla	r7, r7, r5, r6
 801cd62:	10e6      	asrs	r6, r4, #3
 801cd64:	00e4      	lsls	r4, r4, #3
 801cd66:	b2e4      	uxtb	r4, r4
 801cd68:	fb1b fb0a 	smulbb	fp, fp, sl
 801cd6c:	fb14 f405 	smulbb	r4, r4, r5
 801cd70:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cd74:	b2bf      	uxth	r7, r7
 801cd76:	fb06 b605 	mla	r6, r6, r5, fp
 801cd7a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801cd7e:	b2b6      	uxth	r6, r6
 801cd80:	fa1f fe8e 	uxth.w	lr, lr
 801cd84:	1c7c      	adds	r4, r7, #1
 801cd86:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cd8a:	f106 0b01 	add.w	fp, r6, #1
 801cd8e:	f10e 0401 	add.w	r4, lr, #1
 801cd92:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801cd96:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cd9a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cd9e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cda2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cda6:	4327      	orrs	r7, r4
 801cda8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cdac:	4401      	add	r1, r0
 801cdae:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cdb0:	ea47 070b 	orr.w	r7, r7, fp
 801cdb4:	f829 7b02 	strh.w	r7, [r9], #2
 801cdb8:	4402      	add	r2, r0
 801cdba:	f108 38ff 	add.w	r8, r8, #4294967295
 801cdbe:	e7af      	b.n	801cd20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801cdc0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801cdc4:	f04f 0e00 	mov.w	lr, #0
 801cdc8:	eb03 040e 	add.w	r4, r3, lr
 801cdcc:	2c00      	cmp	r4, #0
 801cdce:	dc43      	bgt.n	801ce58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cdd0:	9a00      	ldr	r2, [sp, #0]
 801cdd2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cdd6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cdda:	9300      	str	r3, [sp, #0]
 801cddc:	9b02      	ldr	r3, [sp, #8]
 801cdde:	2b00      	cmp	r3, #0
 801cde0:	f340 8098 	ble.w	801cf14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cde4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cde8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cdec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cdf0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cdf2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cdf6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cdfa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cdfe:	eef0 6a62 	vmov.f32	s13, s5
 801ce02:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce0e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801ce12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ce16:	eef0 6a43 	vmov.f32	s13, s6
 801ce1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ce1e:	ee12 2a90 	vmov	r2, s5
 801ce22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ce26:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce2a:	ee13 2a10 	vmov	r2, s6
 801ce2e:	9313      	str	r3, [sp, #76]	; 0x4c
 801ce30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ce32:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce36:	9314      	str	r3, [sp, #80]	; 0x50
 801ce38:	9b02      	ldr	r3, [sp, #8]
 801ce3a:	9a05      	ldr	r2, [sp, #20]
 801ce3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce40:	3b01      	subs	r3, #1
 801ce42:	9302      	str	r3, [sp, #8]
 801ce44:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801ce48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ce4a:	eeb0 3a67 	vmov.f32	s6, s15
 801ce4e:	bf08      	it	eq
 801ce50:	4613      	moveq	r3, r2
 801ce52:	eef0 2a47 	vmov.f32	s5, s14
 801ce56:	e72a      	b.n	801ccae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ce58:	140f      	asrs	r7, r1, #16
 801ce5a:	d454      	bmi.n	801cf06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ce5c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801ce60:	42be      	cmp	r6, r7
 801ce62:	dd50      	ble.n	801cf06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ce64:	ea5f 4822 	movs.w	r8, r2, asr #16
 801ce68:	d44d      	bmi.n	801cf06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ce6a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801ce6e:	4544      	cmp	r4, r8
 801ce70:	dd49      	ble.n	801cf06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ce72:	9c04      	ldr	r4, [sp, #16]
 801ce74:	b236      	sxth	r6, r6
 801ce76:	fb08 4606 	mla	r6, r8, r6, r4
 801ce7a:	f06f 0001 	mvn.w	r0, #1
 801ce7e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801ce82:	9c01      	ldr	r4, [sp, #4]
 801ce84:	fb00 fa0e 	mul.w	sl, r0, lr
 801ce88:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ce8c:	9800      	ldr	r0, [sp, #0]
 801ce8e:	eb04 0b08 	add.w	fp, r4, r8
 801ce92:	f830 400a 	ldrh.w	r4, [r0, sl]
 801ce96:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801ce9a:	9801      	ldr	r0, [sp, #4]
 801ce9c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cea0:	f810 8008 	ldrb.w	r8, [r0, r8]
 801cea4:	9800      	ldr	r0, [sp, #0]
 801cea6:	1227      	asrs	r7, r4, #8
 801cea8:	fb16 f609 	smulbb	r6, r6, r9
 801ceac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ceb0:	fb07 6705 	mla	r7, r7, r5, r6
 801ceb4:	10e6      	asrs	r6, r4, #3
 801ceb6:	00e4      	lsls	r4, r4, #3
 801ceb8:	b2e4      	uxtb	r4, r4
 801ceba:	fb1b fb09 	smulbb	fp, fp, r9
 801cebe:	fb14 f405 	smulbb	r4, r4, r5
 801cec2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cec6:	b2bf      	uxth	r7, r7
 801cec8:	fb06 b605 	mla	r6, r6, r5, fp
 801cecc:	fb08 4809 	mla	r8, r8, r9, r4
 801ced0:	b2b6      	uxth	r6, r6
 801ced2:	fa1f f888 	uxth.w	r8, r8
 801ced6:	1c7c      	adds	r4, r7, #1
 801ced8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cedc:	f106 0b01 	add.w	fp, r6, #1
 801cee0:	f108 0401 	add.w	r4, r8, #1
 801cee4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801cee8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801ceec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cef0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cef4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cef8:	4327      	orrs	r7, r4
 801cefa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cefe:	ea47 070b 	orr.w	r7, r7, fp
 801cf02:	f820 700a 	strh.w	r7, [r0, sl]
 801cf06:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cf08:	4401      	add	r1, r0
 801cf0a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cf0c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cf10:	4402      	add	r2, r0
 801cf12:	e759      	b.n	801cdc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801cf14:	b007      	add	sp, #28
 801cf16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801cf1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf20:	b085      	sub	sp, #20
 801cf22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cf26:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cf28:	9203      	str	r2, [sp, #12]
 801cf2a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cf2e:	6870      	ldr	r0, [r6, #4]
 801cf30:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cf32:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801cf36:	686f      	ldr	r7, [r5, #4]
 801cf38:	9101      	str	r1, [sp, #4]
 801cf3a:	fb00 2404 	mla	r4, r0, r4, r2
 801cf3e:	6832      	ldr	r2, [r6, #0]
 801cf40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cf44:	682a      	ldr	r2, [r5, #0]
 801cf46:	9202      	str	r2, [sp, #8]
 801cf48:	3704      	adds	r7, #4
 801cf4a:	9a01      	ldr	r2, [sp, #4]
 801cf4c:	2a00      	cmp	r2, #0
 801cf4e:	dc03      	bgt.n	801cf58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cf50:	9a03      	ldr	r2, [sp, #12]
 801cf52:	2a00      	cmp	r2, #0
 801cf54:	f340 80cc 	ble.w	801d0f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801cf58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cf5a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cf5e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801cf62:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cf66:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cf68:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cf6c:	2b00      	cmp	r3, #0
 801cf6e:	dd0d      	ble.n	801cf8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cf70:	1406      	asrs	r6, r0, #16
 801cf72:	d405      	bmi.n	801cf80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cf74:	454e      	cmp	r6, r9
 801cf76:	da03      	bge.n	801cf80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cf78:	1416      	asrs	r6, r2, #16
 801cf7a:	d401      	bmi.n	801cf80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cf7c:	4546      	cmp	r6, r8
 801cf7e:	db06      	blt.n	801cf8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cf80:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801cf82:	4460      	add	r0, ip
 801cf84:	4432      	add	r2, r6
 801cf86:	3b01      	subs	r3, #1
 801cf88:	3402      	adds	r4, #2
 801cf8a:	e7ef      	b.n	801cf6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801cf8c:	d00f      	beq.n	801cfae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cf8e:	1e5e      	subs	r6, r3, #1
 801cf90:	fb0c 0e06 	mla	lr, ip, r6, r0
 801cf94:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801cf98:	d543      	bpl.n	801d022 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801cf9a:	4698      	mov	r8, r3
 801cf9c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801cfa0:	f1b8 0f00 	cmp.w	r8, #0
 801cfa4:	dc71      	bgt.n	801d08a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801cfa6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cfaa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cfae:	9b01      	ldr	r3, [sp, #4]
 801cfb0:	2b00      	cmp	r3, #0
 801cfb2:	f340 809d 	ble.w	801d0f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801cfb6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cfba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cfbe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cfc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cfc4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cfc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cfcc:	eeb0 6a62 	vmov.f32	s12, s5
 801cfd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cfd4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cfd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cfdc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cfe0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cfe4:	eeb0 6a43 	vmov.f32	s12, s6
 801cfe8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cfec:	ee12 2a90 	vmov	r2, s5
 801cff0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cff4:	fb92 fcf3 	sdiv	ip, r2, r3
 801cff8:	ee13 2a10 	vmov	r2, s6
 801cffc:	fb92 f3f3 	sdiv	r3, r2, r3
 801d000:	9312      	str	r3, [sp, #72]	; 0x48
 801d002:	9b01      	ldr	r3, [sp, #4]
 801d004:	9a03      	ldr	r2, [sp, #12]
 801d006:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d00a:	3b01      	subs	r3, #1
 801d00c:	9301      	str	r3, [sp, #4]
 801d00e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d012:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d014:	eeb0 3a67 	vmov.f32	s6, s15
 801d018:	bf08      	it	eq
 801d01a:	4613      	moveq	r3, r2
 801d01c:	eef0 2a47 	vmov.f32	s5, s14
 801d020:	e793      	b.n	801cf4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d022:	45ce      	cmp	lr, r9
 801d024:	dab9      	bge.n	801cf9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d026:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d028:	fb01 2606 	mla	r6, r1, r6, r2
 801d02c:	1436      	asrs	r6, r6, #16
 801d02e:	d4b4      	bmi.n	801cf9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d030:	4546      	cmp	r6, r8
 801d032:	dab2      	bge.n	801cf9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d034:	4698      	mov	r8, r3
 801d036:	46a2      	mov	sl, r4
 801d038:	f1b8 0f00 	cmp.w	r8, #0
 801d03c:	ddb3      	ble.n	801cfa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d03e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d042:	9902      	ldr	r1, [sp, #8]
 801d044:	1416      	asrs	r6, r2, #16
 801d046:	fb09 1606 	mla	r6, r9, r6, r1
 801d04a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801d04e:	492a      	ldr	r1, [pc, #168]	; (801d0f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801d050:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801d054:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d058:	eb07 0b0e 	add.w	fp, r7, lr
 801d05c:	4460      	add	r0, ip
 801d05e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801d062:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801d066:	00f6      	lsls	r6, r6, #3
 801d068:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801d06c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d070:	ea49 0606 	orr.w	r6, r9, r6
 801d074:	f817 900e 	ldrb.w	r9, [r7, lr]
 801d078:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d07a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801d07e:	f82a 6b02 	strh.w	r6, [sl], #2
 801d082:	440a      	add	r2, r1
 801d084:	f108 38ff 	add.w	r8, r8, #4294967295
 801d088:	e7d6      	b.n	801d038 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d08a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801d08e:	d429      	bmi.n	801d0e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d090:	68ae      	ldr	r6, [r5, #8]
 801d092:	454e      	cmp	r6, r9
 801d094:	dd26      	ble.n	801d0e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d096:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801d09a:	d423      	bmi.n	801d0e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d09c:	68e9      	ldr	r1, [r5, #12]
 801d09e:	4559      	cmp	r1, fp
 801d0a0:	dd20      	ble.n	801d0e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d0a2:	9902      	ldr	r1, [sp, #8]
 801d0a4:	fa0f fe86 	sxth.w	lr, r6
 801d0a8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801d0ac:	f06f 0101 	mvn.w	r1, #1
 801d0b0:	f81e e009 	ldrb.w	lr, [lr, r9]
 801d0b4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d0b8:	eb07 060e 	add.w	r6, r7, lr
 801d0bc:	fb01 f908 	mul.w	r9, r1, r8
 801d0c0:	f896 b002 	ldrb.w	fp, [r6, #2]
 801d0c4:	7876      	ldrb	r6, [r6, #1]
 801d0c6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801d0ca:	00f6      	lsls	r6, r6, #3
 801d0cc:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801d0d0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d0d4:	ea4b 0606 	orr.w	r6, fp, r6
 801d0d8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801d0dc:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801d0e0:	f82a 6009 	strh.w	r6, [sl, r9]
 801d0e4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d0e6:	4460      	add	r0, ip
 801d0e8:	440a      	add	r2, r1
 801d0ea:	f108 38ff 	add.w	r8, r8, #4294967295
 801d0ee:	e757      	b.n	801cfa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d0f0:	b005      	add	sp, #20
 801d0f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0f6:	bf00      	nop
 801d0f8:	fffff800 	.word	0xfffff800

0801d0fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d0fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d100:	b087      	sub	sp, #28
 801d102:	468b      	mov	fp, r1
 801d104:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d106:	9204      	str	r2, [sp, #16]
 801d108:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d10c:	9205      	str	r2, [sp, #20]
 801d10e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d112:	6841      	ldr	r1, [r0, #4]
 801d114:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d118:	fb01 2404 	mla	r4, r1, r4, r2
 801d11c:	6802      	ldr	r2, [r0, #0]
 801d11e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d122:	f8dc 2000 	ldr.w	r2, [ip]
 801d126:	9201      	str	r2, [sp, #4]
 801d128:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d12c:	3204      	adds	r2, #4
 801d12e:	9202      	str	r2, [sp, #8]
 801d130:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d134:	f1bb 0f00 	cmp.w	fp, #0
 801d138:	dc03      	bgt.n	801d142 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d13a:	9a04      	ldr	r2, [sp, #16]
 801d13c:	2a00      	cmp	r2, #0
 801d13e:	f340 8138 	ble.w	801d3b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d142:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d144:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d148:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801d14c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d150:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d152:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d156:	2b00      	cmp	r3, #0
 801d158:	dd0e      	ble.n	801d178 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d15a:	1402      	asrs	r2, r0, #16
 801d15c:	d405      	bmi.n	801d16a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d15e:	42ba      	cmp	r2, r7
 801d160:	da03      	bge.n	801d16a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d162:	140a      	asrs	r2, r1, #16
 801d164:	d401      	bmi.n	801d16a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d166:	42b2      	cmp	r2, r6
 801d168:	db07      	blt.n	801d17a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d16a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d16c:	4410      	add	r0, r2
 801d16e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d170:	3b01      	subs	r3, #1
 801d172:	4411      	add	r1, r2
 801d174:	3402      	adds	r4, #2
 801d176:	e7ee      	b.n	801d156 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d178:	d019      	beq.n	801d1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d17a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d17c:	1e5a      	subs	r2, r3, #1
 801d17e:	fb05 0502 	mla	r5, r5, r2, r0
 801d182:	142d      	asrs	r5, r5, #16
 801d184:	d409      	bmi.n	801d19a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d186:	42bd      	cmp	r5, r7
 801d188:	da07      	bge.n	801d19a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d18a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d18c:	fb05 1202 	mla	r2, r5, r2, r1
 801d190:	1412      	asrs	r2, r2, #16
 801d192:	d402      	bmi.n	801d19a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d194:	42b2      	cmp	r2, r6
 801d196:	f2c0 80ac 	blt.w	801d2f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d19a:	f04f 0e00 	mov.w	lr, #0
 801d19e:	eb03 020e 	add.w	r2, r3, lr
 801d1a2:	2a00      	cmp	r2, #0
 801d1a4:	dc3e      	bgt.n	801d224 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d1a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d1aa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d1ae:	f1bb 0f00 	cmp.w	fp, #0
 801d1b2:	f340 80fe 	ble.w	801d3b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d1b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d1ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d1be:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d1c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d1c4:	f1bb 0b01 	subs.w	fp, fp, #1
 801d1c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d1cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d1d0:	eeb0 6a62 	vmov.f32	s12, s5
 801d1d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d1d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d1dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d1e0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d1e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d1e8:	eeb0 6a43 	vmov.f32	s12, s6
 801d1ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d1f0:	ee12 2a90 	vmov	r2, s5
 801d1f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d1f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1fc:	ee13 2a10 	vmov	r2, s6
 801d200:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d204:	9313      	str	r3, [sp, #76]	; 0x4c
 801d206:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d208:	fb92 f3f3 	sdiv	r3, r2, r3
 801d20c:	9a04      	ldr	r2, [sp, #16]
 801d20e:	9314      	str	r3, [sp, #80]	; 0x50
 801d210:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d214:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d216:	eeb0 3a67 	vmov.f32	s6, s15
 801d21a:	bf08      	it	eq
 801d21c:	4613      	moveq	r3, r2
 801d21e:	eef0 2a47 	vmov.f32	s5, s14
 801d222:	e787      	b.n	801d134 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d224:	1406      	asrs	r6, r0, #16
 801d226:	d45d      	bmi.n	801d2e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d228:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d22c:	42b5      	cmp	r5, r6
 801d22e:	dd59      	ble.n	801d2e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d230:	140f      	asrs	r7, r1, #16
 801d232:	d457      	bmi.n	801d2e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d234:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d238:	42ba      	cmp	r2, r7
 801d23a:	dd53      	ble.n	801d2e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d23c:	9a01      	ldr	r2, [sp, #4]
 801d23e:	b22d      	sxth	r5, r5
 801d240:	fb07 2505 	mla	r5, r7, r5, r2
 801d244:	5daa      	ldrb	r2, [r5, r6]
 801d246:	9d02      	ldr	r5, [sp, #8]
 801d248:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d24c:	0e2e      	lsrs	r6, r5, #24
 801d24e:	d049      	beq.n	801d2e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d250:	f06f 0201 	mvn.w	r2, #1
 801d254:	fb02 f20e 	mul.w	r2, r2, lr
 801d258:	9203      	str	r2, [sp, #12]
 801d25a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d25e:	9a05      	ldr	r2, [sp, #20]
 801d260:	4356      	muls	r6, r2
 801d262:	1c72      	adds	r2, r6, #1
 801d264:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d268:	1212      	asrs	r2, r2, #8
 801d26a:	fa1f f982 	uxth.w	r9, r2
 801d26e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d272:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d276:	43d2      	mvns	r2, r2
 801d278:	b2d2      	uxtb	r2, r2
 801d27a:	fb16 f609 	smulbb	r6, r6, r9
 801d27e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d282:	fb07 6702 	mla	r7, r7, r2, r6
 801d286:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d28a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d28e:	b2ed      	uxtb	r5, r5
 801d290:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d294:	fa5f f888 	uxtb.w	r8, r8
 801d298:	fb15 f509 	smulbb	r5, r5, r9
 801d29c:	fb08 5502 	mla	r5, r8, r2, r5
 801d2a0:	b2bf      	uxth	r7, r7
 801d2a2:	fb1a fa09 	smulbb	sl, sl, r9
 801d2a6:	b2ad      	uxth	r5, r5
 801d2a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d2ac:	fb06 a602 	mla	r6, r6, r2, sl
 801d2b0:	1c7a      	adds	r2, r7, #1
 801d2b2:	f105 0a01 	add.w	sl, r5, #1
 801d2b6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d2ba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d2be:	b2b6      	uxth	r6, r6
 801d2c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d2c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d2c8:	ea4a 0707 	orr.w	r7, sl, r7
 801d2cc:	f106 0a01 	add.w	sl, r6, #1
 801d2d0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d2d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d2d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d2dc:	9a03      	ldr	r2, [sp, #12]
 801d2de:	ea47 070a 	orr.w	r7, r7, sl
 801d2e2:	52a7      	strh	r7, [r4, r2]
 801d2e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d2e6:	4410      	add	r0, r2
 801d2e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d2ea:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d2ee:	4411      	add	r1, r2
 801d2f0:	e755      	b.n	801d19e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d2f2:	f04f 0800 	mov.w	r8, #0
 801d2f6:	eba3 0208 	sub.w	r2, r3, r8
 801d2fa:	2a00      	cmp	r2, #0
 801d2fc:	f77f af53 	ble.w	801d1a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d300:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d304:	9f01      	ldr	r7, [sp, #4]
 801d306:	140a      	asrs	r2, r1, #16
 801d308:	1405      	asrs	r5, r0, #16
 801d30a:	fb06 7202 	mla	r2, r6, r2, r7
 801d30e:	5d52      	ldrb	r2, [r2, r5]
 801d310:	9d02      	ldr	r5, [sp, #8]
 801d312:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d316:	0e2e      	lsrs	r6, r5, #24
 801d318:	d044      	beq.n	801d3a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d31a:	9a05      	ldr	r2, [sp, #20]
 801d31c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d320:	4356      	muls	r6, r2
 801d322:	1c72      	adds	r2, r6, #1
 801d324:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d328:	1212      	asrs	r2, r2, #8
 801d32a:	fa1f f982 	uxth.w	r9, r2
 801d32e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d332:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d336:	43d2      	mvns	r2, r2
 801d338:	b2d2      	uxtb	r2, r2
 801d33a:	fb16 f609 	smulbb	r6, r6, r9
 801d33e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d342:	fb07 6702 	mla	r7, r7, r2, r6
 801d346:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d34a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d34e:	b2ed      	uxtb	r5, r5
 801d350:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d354:	fa5f fe8e 	uxtb.w	lr, lr
 801d358:	fb15 f509 	smulbb	r5, r5, r9
 801d35c:	fb0e 5502 	mla	r5, lr, r2, r5
 801d360:	b2bf      	uxth	r7, r7
 801d362:	fb1a fa09 	smulbb	sl, sl, r9
 801d366:	b2ad      	uxth	r5, r5
 801d368:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d36c:	fb06 a602 	mla	r6, r6, r2, sl
 801d370:	1c7a      	adds	r2, r7, #1
 801d372:	f105 0a01 	add.w	sl, r5, #1
 801d376:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d37a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d37e:	b2b6      	uxth	r6, r6
 801d380:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d384:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d388:	ea4a 0707 	orr.w	r7, sl, r7
 801d38c:	f106 0a01 	add.w	sl, r6, #1
 801d390:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d394:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d398:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d39c:	ea47 070a 	orr.w	r7, r7, sl
 801d3a0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d3a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d3a6:	4410      	add	r0, r2
 801d3a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d3aa:	f108 0801 	add.w	r8, r8, #1
 801d3ae:	4411      	add	r1, r2
 801d3b0:	e7a1      	b.n	801d2f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d3b2:	b007      	add	sp, #28
 801d3b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d3b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d3b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3bc:	b085      	sub	sp, #20
 801d3be:	468b      	mov	fp, r1
 801d3c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d3c2:	9203      	str	r2, [sp, #12]
 801d3c4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d3c8:	6841      	ldr	r1, [r0, #4]
 801d3ca:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d3ce:	fb01 2404 	mla	r4, r1, r4, r2
 801d3d2:	6802      	ldr	r2, [r0, #0]
 801d3d4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d3d8:	f8de 2000 	ldr.w	r2, [lr]
 801d3dc:	9200      	str	r2, [sp, #0]
 801d3de:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d3e2:	3204      	adds	r2, #4
 801d3e4:	9201      	str	r2, [sp, #4]
 801d3e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d3ea:	f1bb 0f00 	cmp.w	fp, #0
 801d3ee:	dc03      	bgt.n	801d3f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d3f0:	9a03      	ldr	r2, [sp, #12]
 801d3f2:	2a00      	cmp	r2, #0
 801d3f4:	f340 8153 	ble.w	801d69e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d3f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d3fa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d3fe:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d402:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d406:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d408:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d40c:	2b00      	cmp	r3, #0
 801d40e:	dd0e      	ble.n	801d42e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d410:	1408      	asrs	r0, r1, #16
 801d412:	d405      	bmi.n	801d420 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d414:	42b8      	cmp	r0, r7
 801d416:	da03      	bge.n	801d420 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d418:	1410      	asrs	r0, r2, #16
 801d41a:	d401      	bmi.n	801d420 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d41c:	42b0      	cmp	r0, r6
 801d41e:	db07      	blt.n	801d430 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d420:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d422:	4401      	add	r1, r0
 801d424:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d426:	3b01      	subs	r3, #1
 801d428:	4402      	add	r2, r0
 801d42a:	3402      	adds	r4, #2
 801d42c:	e7ee      	b.n	801d40c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d42e:	d017      	beq.n	801d460 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d430:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d432:	1e58      	subs	r0, r3, #1
 801d434:	fb05 1500 	mla	r5, r5, r0, r1
 801d438:	142d      	asrs	r5, r5, #16
 801d43a:	d409      	bmi.n	801d450 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d43c:	42bd      	cmp	r5, r7
 801d43e:	da07      	bge.n	801d450 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d440:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d442:	fb05 2000 	mla	r0, r5, r0, r2
 801d446:	1400      	asrs	r0, r0, #16
 801d448:	d402      	bmi.n	801d450 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d44a:	42b0      	cmp	r0, r6
 801d44c:	f2c0 80bc 	blt.w	801d5c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d450:	2600      	movs	r6, #0
 801d452:	1998      	adds	r0, r3, r6
 801d454:	2800      	cmp	r0, #0
 801d456:	dc3e      	bgt.n	801d4d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d458:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d45c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d460:	f1bb 0f00 	cmp.w	fp, #0
 801d464:	f340 811b 	ble.w	801d69e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d468:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d46c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d470:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d474:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d476:	f1bb 0b01 	subs.w	fp, fp, #1
 801d47a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d47e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d482:	eeb0 6a62 	vmov.f32	s12, s5
 801d486:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d48a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d48e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d492:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d496:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d49a:	eeb0 6a43 	vmov.f32	s12, s6
 801d49e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d4a2:	ee12 2a90 	vmov	r2, s5
 801d4a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d4aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801d4ae:	ee13 2a10 	vmov	r2, s6
 801d4b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d4b6:	9311      	str	r3, [sp, #68]	; 0x44
 801d4b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d4ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801d4be:	9a03      	ldr	r2, [sp, #12]
 801d4c0:	9312      	str	r3, [sp, #72]	; 0x48
 801d4c2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d4c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d4c8:	eeb0 3a67 	vmov.f32	s6, s15
 801d4cc:	bf08      	it	eq
 801d4ce:	4613      	moveq	r3, r2
 801d4d0:	eef0 2a47 	vmov.f32	s5, s14
 801d4d4:	e789      	b.n	801d3ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d4d6:	140f      	asrs	r7, r1, #16
 801d4d8:	d426      	bmi.n	801d528 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d4da:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d4de:	42bd      	cmp	r5, r7
 801d4e0:	dd22      	ble.n	801d528 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d4e2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d4e6:	d41f      	bmi.n	801d528 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d4e8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d4ec:	4560      	cmp	r0, ip
 801d4ee:	dd1b      	ble.n	801d528 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d4f0:	9800      	ldr	r0, [sp, #0]
 801d4f2:	b22d      	sxth	r5, r5
 801d4f4:	fb0c 0505 	mla	r5, ip, r5, r0
 801d4f8:	5de8      	ldrb	r0, [r5, r7]
 801d4fa:	9d01      	ldr	r5, [sp, #4]
 801d4fc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d500:	0e07      	lsrs	r7, r0, #24
 801d502:	2fff      	cmp	r7, #255	; 0xff
 801d504:	d116      	bne.n	801d534 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d506:	f06f 0501 	mvn.w	r5, #1
 801d50a:	fb05 f706 	mul.w	r7, r5, r6
 801d50e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d512:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d516:	0945      	lsrs	r5, r0, #5
 801d518:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d51c:	ea4c 0505 	orr.w	r5, ip, r5
 801d520:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d524:	4305      	orrs	r5, r0
 801d526:	53e5      	strh	r5, [r4, r7]
 801d528:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d52a:	4401      	add	r1, r0
 801d52c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d52e:	3e01      	subs	r6, #1
 801d530:	4402      	add	r2, r0
 801d532:	e78e      	b.n	801d452 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d534:	b2fd      	uxtb	r5, r7
 801d536:	2f00      	cmp	r7, #0
 801d538:	d0f6      	beq.n	801d528 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d53a:	f06f 0701 	mvn.w	r7, #1
 801d53e:	4377      	muls	r7, r6
 801d540:	fa1f f985 	uxth.w	r9, r5
 801d544:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d548:	9702      	str	r7, [sp, #8]
 801d54a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d54e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d552:	43ed      	mvns	r5, r5
 801d554:	b2ed      	uxtb	r5, r5
 801d556:	fb17 f709 	smulbb	r7, r7, r9
 801d55a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d55e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d562:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d566:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d56a:	b2c0      	uxtb	r0, r0
 801d56c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d570:	fa5f f888 	uxtb.w	r8, r8
 801d574:	fb10 f009 	smulbb	r0, r0, r9
 801d578:	fb08 0005 	mla	r0, r8, r5, r0
 801d57c:	b280      	uxth	r0, r0
 801d57e:	fa1f fc8c 	uxth.w	ip, ip
 801d582:	fb1a fa09 	smulbb	sl, sl, r9
 801d586:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d58a:	fb07 a705 	mla	r7, r7, r5, sl
 801d58e:	f100 0a01 	add.w	sl, r0, #1
 801d592:	f10c 0501 	add.w	r5, ip, #1
 801d596:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d59a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d59e:	b2bf      	uxth	r7, r7
 801d5a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d5a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d5a8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d5ac:	f107 0a01 	add.w	sl, r7, #1
 801d5b0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d5b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d5b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d5bc:	9802      	ldr	r0, [sp, #8]
 801d5be:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d5c2:	f824 c000 	strh.w	ip, [r4, r0]
 801d5c6:	e7af      	b.n	801d528 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d5c8:	f04f 0800 	mov.w	r8, #0
 801d5cc:	eba3 0008 	sub.w	r0, r3, r8
 801d5d0:	2800      	cmp	r0, #0
 801d5d2:	f77f af41 	ble.w	801d458 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d5d6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d5da:	9f00      	ldr	r7, [sp, #0]
 801d5dc:	1410      	asrs	r0, r2, #16
 801d5de:	140d      	asrs	r5, r1, #16
 801d5e0:	fb06 7000 	mla	r0, r6, r0, r7
 801d5e4:	5d40      	ldrb	r0, [r0, r5]
 801d5e6:	9d01      	ldr	r5, [sp, #4]
 801d5e8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d5ec:	0e2e      	lsrs	r6, r5, #24
 801d5ee:	2eff      	cmp	r6, #255	; 0xff
 801d5f0:	d112      	bne.n	801d618 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d5f2:	482c      	ldr	r0, [pc, #176]	; (801d6a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d5f4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d5f8:	0968      	lsrs	r0, r5, #5
 801d5fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d5fe:	4330      	orrs	r0, r6
 801d600:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d604:	4328      	orrs	r0, r5
 801d606:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d60a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d60c:	4401      	add	r1, r0
 801d60e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d610:	f108 0801 	add.w	r8, r8, #1
 801d614:	4402      	add	r2, r0
 801d616:	e7d9      	b.n	801d5cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d618:	b2f0      	uxtb	r0, r6
 801d61a:	2e00      	cmp	r6, #0
 801d61c:	d0f5      	beq.n	801d60a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d61e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d622:	fa1f f980 	uxth.w	r9, r0
 801d626:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d62a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d62e:	43c0      	mvns	r0, r0
 801d630:	b2c0      	uxtb	r0, r0
 801d632:	fb16 f609 	smulbb	r6, r6, r9
 801d636:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d63a:	fb07 6700 	mla	r7, r7, r0, r6
 801d63e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d642:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d646:	b2ed      	uxtb	r5, r5
 801d648:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d64c:	fa5f fc8c 	uxtb.w	ip, ip
 801d650:	fb15 f509 	smulbb	r5, r5, r9
 801d654:	fb0c 5500 	mla	r5, ip, r0, r5
 801d658:	b2bf      	uxth	r7, r7
 801d65a:	fb1a fa09 	smulbb	sl, sl, r9
 801d65e:	b2ad      	uxth	r5, r5
 801d660:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d664:	fb06 a600 	mla	r6, r6, r0, sl
 801d668:	1c78      	adds	r0, r7, #1
 801d66a:	f105 0a01 	add.w	sl, r5, #1
 801d66e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d672:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d676:	b2b6      	uxth	r6, r6
 801d678:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d67c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d680:	ea4a 0707 	orr.w	r7, sl, r7
 801d684:	f106 0a01 	add.w	sl, r6, #1
 801d688:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d68c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d690:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d694:	ea47 070a 	orr.w	r7, r7, sl
 801d698:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d69c:	e7b5      	b.n	801d60a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d69e:	b005      	add	sp, #20
 801d6a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6a4:	fffff800 	.word	0xfffff800

0801d6a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d6ac:	b087      	sub	sp, #28
 801d6ae:	468b      	mov	fp, r1
 801d6b0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d6b2:	9204      	str	r2, [sp, #16]
 801d6b4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d6b8:	9205      	str	r2, [sp, #20]
 801d6ba:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d6be:	6861      	ldr	r1, [r4, #4]
 801d6c0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801d6c4:	fb01 2000 	mla	r0, r1, r0, r2
 801d6c8:	6822      	ldr	r2, [r4, #0]
 801d6ca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d6ce:	f8de 2000 	ldr.w	r2, [lr]
 801d6d2:	9201      	str	r2, [sp, #4]
 801d6d4:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d6d8:	9202      	str	r2, [sp, #8]
 801d6da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d6de:	f1bb 0f00 	cmp.w	fp, #0
 801d6e2:	dc03      	bgt.n	801d6ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801d6e4:	9a04      	ldr	r2, [sp, #16]
 801d6e6:	2a00      	cmp	r2, #0
 801d6e8:	f340 8142 	ble.w	801d970 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d6ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d6ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d6f2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d6f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d6fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d6fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d700:	2b00      	cmp	r3, #0
 801d702:	dd0e      	ble.n	801d722 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d704:	140c      	asrs	r4, r1, #16
 801d706:	d405      	bmi.n	801d714 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d708:	42bc      	cmp	r4, r7
 801d70a:	da03      	bge.n	801d714 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d70c:	1414      	asrs	r4, r2, #16
 801d70e:	d401      	bmi.n	801d714 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d710:	42b4      	cmp	r4, r6
 801d712:	db07      	blt.n	801d724 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d714:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d716:	4421      	add	r1, r4
 801d718:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d71a:	3b01      	subs	r3, #1
 801d71c:	4422      	add	r2, r4
 801d71e:	3002      	adds	r0, #2
 801d720:	e7ee      	b.n	801d700 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d722:	d019      	beq.n	801d758 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d724:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d726:	1e5c      	subs	r4, r3, #1
 801d728:	fb05 1504 	mla	r5, r5, r4, r1
 801d72c:	142d      	asrs	r5, r5, #16
 801d72e:	d409      	bmi.n	801d744 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d730:	42bd      	cmp	r5, r7
 801d732:	da07      	bge.n	801d744 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d734:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d736:	fb05 2404 	mla	r4, r5, r4, r2
 801d73a:	1424      	asrs	r4, r4, #16
 801d73c:	d402      	bmi.n	801d744 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d73e:	42b4      	cmp	r4, r6
 801d740:	f2c0 80b1 	blt.w	801d8a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d744:	f04f 0800 	mov.w	r8, #0
 801d748:	eb03 0408 	add.w	r4, r3, r8
 801d74c:	2c00      	cmp	r4, #0
 801d74e:	dc3e      	bgt.n	801d7ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d750:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d754:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d758:	f1bb 0f00 	cmp.w	fp, #0
 801d75c:	f340 8108 	ble.w	801d970 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d760:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d764:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d768:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d76c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d76e:	f1bb 0b01 	subs.w	fp, fp, #1
 801d772:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d776:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d77a:	eeb0 6a62 	vmov.f32	s12, s5
 801d77e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d782:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d786:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d78a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d78e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d792:	eeb0 6a43 	vmov.f32	s12, s6
 801d796:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d79a:	ee12 2a90 	vmov	r2, s5
 801d79e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d7a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d7a6:	ee13 2a10 	vmov	r2, s6
 801d7aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d7ae:	9313      	str	r3, [sp, #76]	; 0x4c
 801d7b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d7b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d7b6:	9a04      	ldr	r2, [sp, #16]
 801d7b8:	9314      	str	r3, [sp, #80]	; 0x50
 801d7ba:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d7be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d7c0:	eeb0 3a67 	vmov.f32	s6, s15
 801d7c4:	bf08      	it	eq
 801d7c6:	4613      	moveq	r3, r2
 801d7c8:	eef0 2a47 	vmov.f32	s5, s14
 801d7cc:	e787      	b.n	801d6de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801d7ce:	140e      	asrs	r6, r1, #16
 801d7d0:	d462      	bmi.n	801d898 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d7d2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d7d6:	42b5      	cmp	r5, r6
 801d7d8:	dd5e      	ble.n	801d898 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d7da:	1417      	asrs	r7, r2, #16
 801d7dc:	d45c      	bmi.n	801d898 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d7de:	f8de 400c 	ldr.w	r4, [lr, #12]
 801d7e2:	42bc      	cmp	r4, r7
 801d7e4:	dd58      	ble.n	801d898 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d7e6:	b22d      	sxth	r5, r5
 801d7e8:	fb07 6505 	mla	r5, r7, r5, r6
 801d7ec:	9c02      	ldr	r4, [sp, #8]
 801d7ee:	5d66      	ldrb	r6, [r4, r5]
 801d7f0:	2e00      	cmp	r6, #0
 801d7f2:	d051      	beq.n	801d898 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d7f4:	9c01      	ldr	r4, [sp, #4]
 801d7f6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801d7fa:	f06f 0401 	mvn.w	r4, #1
 801d7fe:	fb04 f408 	mul.w	r4, r4, r8
 801d802:	9403      	str	r4, [sp, #12]
 801d804:	5b05      	ldrh	r5, [r0, r4]
 801d806:	9c05      	ldr	r4, [sp, #20]
 801d808:	4366      	muls	r6, r4
 801d80a:	1c74      	adds	r4, r6, #1
 801d80c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d810:	1224      	asrs	r4, r4, #8
 801d812:	b2a7      	uxth	r7, r4
 801d814:	122e      	asrs	r6, r5, #8
 801d816:	43e4      	mvns	r4, r4
 801d818:	b2e4      	uxtb	r4, r4
 801d81a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801d81e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d822:	fb16 f604 	smulbb	r6, r6, r4
 801d826:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d82a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d82e:	00ed      	lsls	r5, r5, #3
 801d830:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d834:	b2ed      	uxtb	r5, r5
 801d836:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801d83a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d83e:	fb15 f504 	smulbb	r5, r5, r4
 801d842:	fa5f f989 	uxtb.w	r9, r9
 801d846:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d84a:	fb09 5507 	mla	r5, r9, r7, r5
 801d84e:	fb1a fa04 	smulbb	sl, sl, r4
 801d852:	fa1f fc8c 	uxth.w	ip, ip
 801d856:	b2ad      	uxth	r5, r5
 801d858:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d85c:	fb06 a607 	mla	r6, r6, r7, sl
 801d860:	f10c 0401 	add.w	r4, ip, #1
 801d864:	f105 0a01 	add.w	sl, r5, #1
 801d868:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d86c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d870:	b2b6      	uxth	r6, r6
 801d872:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d876:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d87a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d87e:	f106 0a01 	add.w	sl, r6, #1
 801d882:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d886:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d88a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d88e:	9c03      	ldr	r4, [sp, #12]
 801d890:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d894:	f820 c004 	strh.w	ip, [r0, r4]
 801d898:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d89a:	4421      	add	r1, r4
 801d89c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d89e:	f108 38ff 	add.w	r8, r8, #4294967295
 801d8a2:	4422      	add	r2, r4
 801d8a4:	e750      	b.n	801d748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d8a6:	f04f 0900 	mov.w	r9, #0
 801d8aa:	eba3 0409 	sub.w	r4, r3, r9
 801d8ae:	2c00      	cmp	r4, #0
 801d8b0:	f77f af4e 	ble.w	801d750 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d8b4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d8b8:	140d      	asrs	r5, r1, #16
 801d8ba:	1414      	asrs	r4, r2, #16
 801d8bc:	fb06 5404 	mla	r4, r6, r4, r5
 801d8c0:	9d02      	ldr	r5, [sp, #8]
 801d8c2:	5d2e      	ldrb	r6, [r5, r4]
 801d8c4:	2e00      	cmp	r6, #0
 801d8c6:	d04c      	beq.n	801d962 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801d8c8:	9d01      	ldr	r5, [sp, #4]
 801d8ca:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801d8ce:	9c05      	ldr	r4, [sp, #20]
 801d8d0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801d8d4:	4366      	muls	r6, r4
 801d8d6:	1c74      	adds	r4, r6, #1
 801d8d8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d8dc:	1224      	asrs	r4, r4, #8
 801d8de:	b2a7      	uxth	r7, r4
 801d8e0:	122e      	asrs	r6, r5, #8
 801d8e2:	43e4      	mvns	r4, r4
 801d8e4:	b2e4      	uxtb	r4, r4
 801d8e6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d8ea:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d8ee:	fb16 f604 	smulbb	r6, r6, r4
 801d8f2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d8f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d8fa:	00ed      	lsls	r5, r5, #3
 801d8fc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d900:	b2ed      	uxtb	r5, r5
 801d902:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d906:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d90a:	fb15 f504 	smulbb	r5, r5, r4
 801d90e:	fa5f f888 	uxtb.w	r8, r8
 801d912:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d916:	fb08 5507 	mla	r5, r8, r7, r5
 801d91a:	fb1a fa04 	smulbb	sl, sl, r4
 801d91e:	fa1f fc8c 	uxth.w	ip, ip
 801d922:	b2ad      	uxth	r5, r5
 801d924:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d928:	fb06 a607 	mla	r6, r6, r7, sl
 801d92c:	f10c 0401 	add.w	r4, ip, #1
 801d930:	f105 0a01 	add.w	sl, r5, #1
 801d934:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d938:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d93c:	b2b6      	uxth	r6, r6
 801d93e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d942:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d946:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d94a:	f106 0a01 	add.w	sl, r6, #1
 801d94e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d952:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d956:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d95a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d95e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801d962:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d964:	4421      	add	r1, r4
 801d966:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d968:	f109 0901 	add.w	r9, r9, #1
 801d96c:	4422      	add	r2, r4
 801d96e:	e79c      	b.n	801d8aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801d970:	b007      	add	sp, #28
 801d972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d976 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d976:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d97a:	b085      	sub	sp, #20
 801d97c:	468b      	mov	fp, r1
 801d97e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d980:	9203      	str	r2, [sp, #12]
 801d982:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801d986:	6861      	ldr	r1, [r4, #4]
 801d988:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801d98c:	fb01 2000 	mla	r0, r1, r0, r2
 801d990:	6822      	ldr	r2, [r4, #0]
 801d992:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d996:	f8d8 2000 	ldr.w	r2, [r8]
 801d99a:	9200      	str	r2, [sp, #0]
 801d99c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801d9a0:	9201      	str	r2, [sp, #4]
 801d9a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d9a6:	f1bb 0f00 	cmp.w	fp, #0
 801d9aa:	dc03      	bgt.n	801d9b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d9ac:	9a03      	ldr	r2, [sp, #12]
 801d9ae:	2a00      	cmp	r2, #0
 801d9b0:	f340 8146 	ble.w	801dc40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d9b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d9b6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801d9ba:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801d9be:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d9c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d9c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d9c8:	2b00      	cmp	r3, #0
 801d9ca:	dd0e      	ble.n	801d9ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d9cc:	140c      	asrs	r4, r1, #16
 801d9ce:	d405      	bmi.n	801d9dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d9d0:	42bc      	cmp	r4, r7
 801d9d2:	da03      	bge.n	801d9dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d9d4:	1414      	asrs	r4, r2, #16
 801d9d6:	d401      	bmi.n	801d9dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d9d8:	42b4      	cmp	r4, r6
 801d9da:	db07      	blt.n	801d9ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d9dc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d9de:	4421      	add	r1, r4
 801d9e0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d9e2:	3b01      	subs	r3, #1
 801d9e4:	4422      	add	r2, r4
 801d9e6:	3002      	adds	r0, #2
 801d9e8:	e7ee      	b.n	801d9c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d9ea:	d017      	beq.n	801da1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801d9ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d9ee:	1e5c      	subs	r4, r3, #1
 801d9f0:	fb05 1504 	mla	r5, r5, r4, r1
 801d9f4:	142d      	asrs	r5, r5, #16
 801d9f6:	d409      	bmi.n	801da0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d9f8:	42bd      	cmp	r5, r7
 801d9fa:	da07      	bge.n	801da0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d9fc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d9fe:	fb05 2404 	mla	r4, r5, r4, r2
 801da02:	1424      	asrs	r4, r4, #16
 801da04:	d402      	bmi.n	801da0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801da06:	42b4      	cmp	r4, r6
 801da08:	f2c0 80b3 	blt.w	801db72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801da0c:	2600      	movs	r6, #0
 801da0e:	199c      	adds	r4, r3, r6
 801da10:	2c00      	cmp	r4, #0
 801da12:	dc3e      	bgt.n	801da92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801da14:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801da18:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801da1c:	f1bb 0f00 	cmp.w	fp, #0
 801da20:	f340 810e 	ble.w	801dc40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801da24:	ee30 0a04 	vadd.f32	s0, s0, s8
 801da28:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801da2c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801da30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801da32:	f1bb 0b01 	subs.w	fp, fp, #1
 801da36:	ee31 1a05 	vadd.f32	s2, s2, s10
 801da3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801da3e:	eeb0 6a62 	vmov.f32	s12, s5
 801da42:	ee61 7a27 	vmul.f32	s15, s2, s15
 801da46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801da4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801da4e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801da52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801da56:	eeb0 6a43 	vmov.f32	s12, s6
 801da5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801da5e:	ee12 2a90 	vmov	r2, s5
 801da62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801da66:	fb92 f3f3 	sdiv	r3, r2, r3
 801da6a:	ee13 2a10 	vmov	r2, s6
 801da6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801da72:	9311      	str	r3, [sp, #68]	; 0x44
 801da74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801da76:	fb92 f3f3 	sdiv	r3, r2, r3
 801da7a:	9a03      	ldr	r2, [sp, #12]
 801da7c:	9312      	str	r3, [sp, #72]	; 0x48
 801da7e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801da82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801da84:	eeb0 3a67 	vmov.f32	s6, s15
 801da88:	bf08      	it	eq
 801da8a:	4613      	moveq	r3, r2
 801da8c:	eef0 2a47 	vmov.f32	s5, s14
 801da90:	e789      	b.n	801d9a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801da92:	140f      	asrs	r7, r1, #16
 801da94:	d418      	bmi.n	801dac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da96:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801da9a:	42bd      	cmp	r5, r7
 801da9c:	dd14      	ble.n	801dac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da9e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801daa2:	d411      	bmi.n	801dac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801daa4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801daa8:	4564      	cmp	r4, ip
 801daaa:	dd0d      	ble.n	801dac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801daac:	b22d      	sxth	r5, r5
 801daae:	fb0c 7505 	mla	r5, ip, r5, r7
 801dab2:	9c01      	ldr	r4, [sp, #4]
 801dab4:	5d64      	ldrb	r4, [r4, r5]
 801dab6:	2cff      	cmp	r4, #255	; 0xff
 801dab8:	d10c      	bne.n	801dad4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801daba:	9c00      	ldr	r4, [sp, #0]
 801dabc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801dac0:	f06f 0401 	mvn.w	r4, #1
 801dac4:	4374      	muls	r4, r6
 801dac6:	5305      	strh	r5, [r0, r4]
 801dac8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801daca:	4421      	add	r1, r4
 801dacc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dace:	3e01      	subs	r6, #1
 801dad0:	4422      	add	r2, r4
 801dad2:	e79c      	b.n	801da0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801dad4:	2c00      	cmp	r4, #0
 801dad6:	d0f7      	beq.n	801dac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dad8:	9f00      	ldr	r7, [sp, #0]
 801dada:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801dade:	f06f 0501 	mvn.w	r5, #1
 801dae2:	4375      	muls	r5, r6
 801dae4:	9502      	str	r5, [sp, #8]
 801dae6:	5b45      	ldrh	r5, [r0, r5]
 801dae8:	fa1f fc84 	uxth.w	ip, r4
 801daec:	122f      	asrs	r7, r5, #8
 801daee:	43e4      	mvns	r4, r4
 801daf0:	b2e4      	uxtb	r4, r4
 801daf2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801daf6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dafa:	fb17 f704 	smulbb	r7, r7, r4
 801dafe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801db02:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801db06:	00ed      	lsls	r5, r5, #3
 801db08:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801db0c:	b2ed      	uxtb	r5, r5
 801db0e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801db12:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801db16:	fb15 f504 	smulbb	r5, r5, r4
 801db1a:	fa5f f989 	uxtb.w	r9, r9
 801db1e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801db22:	fb09 550c 	mla	r5, r9, ip, r5
 801db26:	fb1a fa04 	smulbb	sl, sl, r4
 801db2a:	fa1f fe8e 	uxth.w	lr, lr
 801db2e:	b2ad      	uxth	r5, r5
 801db30:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801db34:	fb07 a70c 	mla	r7, r7, ip, sl
 801db38:	f10e 0401 	add.w	r4, lr, #1
 801db3c:	f105 0a01 	add.w	sl, r5, #1
 801db40:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801db44:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801db48:	b2bf      	uxth	r7, r7
 801db4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801db4e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801db52:	ea4a 0e0e 	orr.w	lr, sl, lr
 801db56:	f107 0a01 	add.w	sl, r7, #1
 801db5a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801db5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801db62:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801db66:	9c02      	ldr	r4, [sp, #8]
 801db68:	ea4e 0e0a 	orr.w	lr, lr, sl
 801db6c:	f820 e004 	strh.w	lr, [r0, r4]
 801db70:	e7aa      	b.n	801dac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801db72:	f04f 0900 	mov.w	r9, #0
 801db76:	eba3 0409 	sub.w	r4, r3, r9
 801db7a:	2c00      	cmp	r4, #0
 801db7c:	f77f af4a 	ble.w	801da14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801db80:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801db84:	1414      	asrs	r4, r2, #16
 801db86:	140d      	asrs	r5, r1, #16
 801db88:	fb06 5504 	mla	r5, r6, r4, r5
 801db8c:	9c01      	ldr	r4, [sp, #4]
 801db8e:	5d64      	ldrb	r4, [r4, r5]
 801db90:	2cff      	cmp	r4, #255	; 0xff
 801db92:	d10b      	bne.n	801dbac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801db94:	9c00      	ldr	r4, [sp, #0]
 801db96:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801db9a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801db9e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dba0:	4421      	add	r1, r4
 801dba2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dba4:	f109 0901 	add.w	r9, r9, #1
 801dba8:	4422      	add	r2, r4
 801dbaa:	e7e4      	b.n	801db76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dbac:	2c00      	cmp	r4, #0
 801dbae:	d0f6      	beq.n	801db9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801dbb0:	9e00      	ldr	r6, [sp, #0]
 801dbb2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801dbb6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801dbba:	b2a7      	uxth	r7, r4
 801dbbc:	122e      	asrs	r6, r5, #8
 801dbbe:	43e4      	mvns	r4, r4
 801dbc0:	b2e4      	uxtb	r4, r4
 801dbc2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801dbc6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dbca:	fb16 f604 	smulbb	r6, r6, r4
 801dbce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801dbd2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dbd6:	00ed      	lsls	r5, r5, #3
 801dbd8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801dbdc:	b2ed      	uxtb	r5, r5
 801dbde:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801dbe2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801dbe6:	fb15 f504 	smulbb	r5, r5, r4
 801dbea:	fa5f fe8e 	uxtb.w	lr, lr
 801dbee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dbf2:	fb0e 5507 	mla	r5, lr, r7, r5
 801dbf6:	fb1a fa04 	smulbb	sl, sl, r4
 801dbfa:	fa1f fc8c 	uxth.w	ip, ip
 801dbfe:	b2ad      	uxth	r5, r5
 801dc00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dc04:	fb06 a607 	mla	r6, r6, r7, sl
 801dc08:	f10c 0401 	add.w	r4, ip, #1
 801dc0c:	f105 0a01 	add.w	sl, r5, #1
 801dc10:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dc14:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dc18:	b2b6      	uxth	r6, r6
 801dc1a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dc1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dc22:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dc26:	f106 0a01 	add.w	sl, r6, #1
 801dc2a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dc2e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dc32:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dc36:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dc3a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dc3e:	e7ae      	b.n	801db9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801dc40:	b005      	add	sp, #20
 801dc42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dc46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc4a:	b085      	sub	sp, #20
 801dc4c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dc4e:	9203      	str	r2, [sp, #12]
 801dc50:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801dc54:	9201      	str	r2, [sp, #4]
 801dc56:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dc5a:	9100      	str	r1, [sp, #0]
 801dc5c:	6841      	ldr	r1, [r0, #4]
 801dc5e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801dc62:	fb01 2404 	mla	r4, r1, r4, r2
 801dc66:	6802      	ldr	r2, [r0, #0]
 801dc68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801dc6c:	f8de 2000 	ldr.w	r2, [lr]
 801dc70:	9202      	str	r2, [sp, #8]
 801dc72:	9a01      	ldr	r2, [sp, #4]
 801dc74:	43d6      	mvns	r6, r2
 801dc76:	b2f6      	uxtb	r6, r6
 801dc78:	9a00      	ldr	r2, [sp, #0]
 801dc7a:	2a00      	cmp	r2, #0
 801dc7c:	dc03      	bgt.n	801dc86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801dc7e:	9a03      	ldr	r2, [sp, #12]
 801dc80:	2a00      	cmp	r2, #0
 801dc82:	f340 8124 	ble.w	801dece <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dc86:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dc88:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801dc8c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801dc90:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801dc94:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dc96:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801dc9a:	2b00      	cmp	r3, #0
 801dc9c:	dd0e      	ble.n	801dcbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc9e:	1408      	asrs	r0, r1, #16
 801dca0:	d405      	bmi.n	801dcae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dca2:	4560      	cmp	r0, ip
 801dca4:	da03      	bge.n	801dcae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dca6:	1410      	asrs	r0, r2, #16
 801dca8:	d401      	bmi.n	801dcae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dcaa:	42b8      	cmp	r0, r7
 801dcac:	db07      	blt.n	801dcbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801dcae:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dcb0:	4401      	add	r1, r0
 801dcb2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dcb4:	3b01      	subs	r3, #1
 801dcb6:	4402      	add	r2, r0
 801dcb8:	3402      	adds	r4, #2
 801dcba:	e7ee      	b.n	801dc9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801dcbc:	d06e      	beq.n	801dd9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801dcbe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dcc0:	1e58      	subs	r0, r3, #1
 801dcc2:	fb05 1500 	mla	r5, r5, r0, r1
 801dcc6:	142d      	asrs	r5, r5, #16
 801dcc8:	d45c      	bmi.n	801dd84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dcca:	4565      	cmp	r5, ip
 801dccc:	da5a      	bge.n	801dd84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dcce:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801dcd0:	fb05 2000 	mla	r0, r5, r0, r2
 801dcd4:	1400      	asrs	r0, r0, #16
 801dcd6:	d455      	bmi.n	801dd84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dcd8:	42b8      	cmp	r0, r7
 801dcda:	da53      	bge.n	801dd84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dcdc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801dce0:	4699      	mov	r9, r3
 801dce2:	46a2      	mov	sl, r4
 801dce4:	f1b9 0f00 	cmp.w	r9, #0
 801dce8:	dd54      	ble.n	801dd94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801dcea:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801dcee:	140d      	asrs	r5, r1, #16
 801dcf0:	1410      	asrs	r0, r2, #16
 801dcf2:	fb07 5000 	mla	r0, r7, r0, r5
 801dcf6:	9d02      	ldr	r5, [sp, #8]
 801dcf8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801dcfc:	f8ba 5000 	ldrh.w	r5, [sl]
 801dd00:	122f      	asrs	r7, r5, #8
 801dd02:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dd06:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dd0a:	fb17 f706 	smulbb	r7, r7, r6
 801dd0e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801dd12:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dd16:	00ed      	lsls	r5, r5, #3
 801dd18:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801dd1c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801dd20:	10c7      	asrs	r7, r0, #3
 801dd22:	b2ed      	uxtb	r5, r5
 801dd24:	00c0      	lsls	r0, r0, #3
 801dd26:	fb18 f806 	smulbb	r8, r8, r6
 801dd2a:	fb15 f506 	smulbb	r5, r5, r6
 801dd2e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dd32:	b2c0      	uxtb	r0, r0
 801dd34:	fa1f fc8c 	uxth.w	ip, ip
 801dd38:	fb07 870b 	mla	r7, r7, fp, r8
 801dd3c:	fb00 500b 	mla	r0, r0, fp, r5
 801dd40:	b280      	uxth	r0, r0
 801dd42:	b2bf      	uxth	r7, r7
 801dd44:	f10c 0501 	add.w	r5, ip, #1
 801dd48:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dd4c:	f107 0801 	add.w	r8, r7, #1
 801dd50:	1c45      	adds	r5, r0, #1
 801dd52:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dd56:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801dd5a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dd5c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dd60:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dd64:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801dd68:	ea45 0c0c 	orr.w	ip, r5, ip
 801dd6c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801dd70:	4401      	add	r1, r0
 801dd72:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dd74:	ea4c 0c08 	orr.w	ip, ip, r8
 801dd78:	f82a cb02 	strh.w	ip, [sl], #2
 801dd7c:	4402      	add	r2, r0
 801dd7e:	f109 39ff 	add.w	r9, r9, #4294967295
 801dd82:	e7af      	b.n	801dce4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801dd84:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801dd88:	f04f 0800 	mov.w	r8, #0
 801dd8c:	eb03 0008 	add.w	r0, r3, r8
 801dd90:	2800      	cmp	r0, #0
 801dd92:	dc41      	bgt.n	801de18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801dd94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dd98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dd9c:	9b00      	ldr	r3, [sp, #0]
 801dd9e:	2b00      	cmp	r3, #0
 801dda0:	f340 8095 	ble.w	801dece <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dda4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dda8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ddac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ddb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ddb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ddb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ddba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ddbe:	eef0 6a62 	vmov.f32	s13, s5
 801ddc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ddc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ddca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ddce:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801ddd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ddd6:	eef0 6a43 	vmov.f32	s13, s6
 801ddda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ddde:	ee12 2a90 	vmov	r2, s5
 801dde2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dde6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ddea:	ee13 2a10 	vmov	r2, s6
 801ddee:	9311      	str	r3, [sp, #68]	; 0x44
 801ddf0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ddf2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ddf6:	9312      	str	r3, [sp, #72]	; 0x48
 801ddf8:	9b00      	ldr	r3, [sp, #0]
 801ddfa:	9a03      	ldr	r2, [sp, #12]
 801ddfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de00:	3b01      	subs	r3, #1
 801de02:	9300      	str	r3, [sp, #0]
 801de04:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801de08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de0a:	eeb0 3a67 	vmov.f32	s6, s15
 801de0e:	bf08      	it	eq
 801de10:	4613      	moveq	r3, r2
 801de12:	eef0 2a47 	vmov.f32	s5, s14
 801de16:	e72f      	b.n	801dc78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801de18:	140f      	asrs	r7, r1, #16
 801de1a:	d451      	bmi.n	801dec0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801de1c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801de20:	42bd      	cmp	r5, r7
 801de22:	dd4d      	ble.n	801dec0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801de24:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801de28:	d44a      	bmi.n	801dec0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801de2a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801de2e:	4560      	cmp	r0, ip
 801de30:	dd46      	ble.n	801dec0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801de32:	b22d      	sxth	r5, r5
 801de34:	fb0c 7505 	mla	r5, ip, r5, r7
 801de38:	9802      	ldr	r0, [sp, #8]
 801de3a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801de3e:	f06f 0501 	mvn.w	r5, #1
 801de42:	fb05 fb08 	mul.w	fp, r5, r8
 801de46:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801de4a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801de4e:	122f      	asrs	r7, r5, #8
 801de50:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801de54:	fb17 f706 	smulbb	r7, r7, r6
 801de58:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801de5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801de60:	00ed      	lsls	r5, r5, #3
 801de62:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801de66:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801de6a:	10c7      	asrs	r7, r0, #3
 801de6c:	b2ed      	uxtb	r5, r5
 801de6e:	00c0      	lsls	r0, r0, #3
 801de70:	fb19 f906 	smulbb	r9, r9, r6
 801de74:	fb15 f506 	smulbb	r5, r5, r6
 801de78:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801de7c:	b2c0      	uxtb	r0, r0
 801de7e:	fa1f fc8c 	uxth.w	ip, ip
 801de82:	fb07 970a 	mla	r7, r7, sl, r9
 801de86:	fb00 500a 	mla	r0, r0, sl, r5
 801de8a:	b2bf      	uxth	r7, r7
 801de8c:	b280      	uxth	r0, r0
 801de8e:	f10c 0501 	add.w	r5, ip, #1
 801de92:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801de96:	f107 0901 	add.w	r9, r7, #1
 801de9a:	1c45      	adds	r5, r0, #1
 801de9c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dea0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801dea4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dea8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801deac:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801deb0:	ea45 0c0c 	orr.w	ip, r5, ip
 801deb4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801deb8:	ea4c 0c09 	orr.w	ip, ip, r9
 801debc:	f824 c00b 	strh.w	ip, [r4, fp]
 801dec0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dec2:	4401      	add	r1, r0
 801dec4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dec6:	f108 38ff 	add.w	r8, r8, #4294967295
 801deca:	4402      	add	r2, r0
 801decc:	e75e      	b.n	801dd8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801dece:	b005      	add	sp, #20
 801ded0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ded4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ded4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ded8:	b085      	sub	sp, #20
 801deda:	4693      	mov	fp, r2
 801dedc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801dede:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801dee0:	6870      	ldr	r0, [r6, #4]
 801dee2:	9101      	str	r1, [sp, #4]
 801dee4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dee8:	fb00 2404 	mla	r4, r0, r4, r2
 801deec:	6832      	ldr	r2, [r6, #0]
 801deee:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801def2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801def6:	682a      	ldr	r2, [r5, #0]
 801def8:	9202      	str	r2, [sp, #8]
 801defa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801defe:	9a01      	ldr	r2, [sp, #4]
 801df00:	2a00      	cmp	r2, #0
 801df02:	dc03      	bgt.n	801df0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801df04:	f1bb 0f00 	cmp.w	fp, #0
 801df08:	f340 809a 	ble.w	801e040 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801df0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801df0e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801df12:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801df16:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801df1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801df1c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801df20:	2b00      	cmp	r3, #0
 801df22:	dd0c      	ble.n	801df3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801df24:	1406      	asrs	r6, r0, #16
 801df26:	d405      	bmi.n	801df34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801df28:	454e      	cmp	r6, r9
 801df2a:	da03      	bge.n	801df34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801df2c:	1416      	asrs	r6, r2, #16
 801df2e:	d401      	bmi.n	801df34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801df30:	4546      	cmp	r6, r8
 801df32:	db05      	blt.n	801df40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801df34:	4470      	add	r0, lr
 801df36:	4462      	add	r2, ip
 801df38:	3b01      	subs	r3, #1
 801df3a:	3402      	adds	r4, #2
 801df3c:	e7f0      	b.n	801df20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801df3e:	d00f      	beq.n	801df60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801df40:	1e5e      	subs	r6, r3, #1
 801df42:	fb0e 0706 	mla	r7, lr, r6, r0
 801df46:	143f      	asrs	r7, r7, #16
 801df48:	d541      	bpl.n	801dfce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801df4a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801df4e:	4698      	mov	r8, r3
 801df50:	9603      	str	r6, [sp, #12]
 801df52:	f1b8 0f00 	cmp.w	r8, #0
 801df56:	dc56      	bgt.n	801e006 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801df58:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801df5c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801df60:	9b01      	ldr	r3, [sp, #4]
 801df62:	2b00      	cmp	r3, #0
 801df64:	dd6c      	ble.n	801e040 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801df66:	ee30 0a04 	vadd.f32	s0, s0, s8
 801df6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801df6e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801df72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df74:	ee31 1a05 	vadd.f32	s2, s2, s10
 801df78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801df7c:	eeb0 6a62 	vmov.f32	s12, s5
 801df80:	ee61 7a27 	vmul.f32	s15, s2, s15
 801df84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801df88:	ee77 2a62 	vsub.f32	s5, s14, s5
 801df8c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801df90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801df94:	eeb0 6a43 	vmov.f32	s12, s6
 801df98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801df9c:	ee12 2a90 	vmov	r2, s5
 801dfa0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dfa4:	fb92 fef3 	sdiv	lr, r2, r3
 801dfa8:	ee13 2a10 	vmov	r2, s6
 801dfac:	fb92 fcf3 	sdiv	ip, r2, r3
 801dfb0:	9b01      	ldr	r3, [sp, #4]
 801dfb2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dfb6:	3b01      	subs	r3, #1
 801dfb8:	9301      	str	r3, [sp, #4]
 801dfba:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801dfbe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dfc0:	eeb0 3a67 	vmov.f32	s6, s15
 801dfc4:	bf08      	it	eq
 801dfc6:	465b      	moveq	r3, fp
 801dfc8:	eef0 2a47 	vmov.f32	s5, s14
 801dfcc:	e797      	b.n	801defe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801dfce:	454f      	cmp	r7, r9
 801dfd0:	dabb      	bge.n	801df4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dfd2:	fb0c 2606 	mla	r6, ip, r6, r2
 801dfd6:	1436      	asrs	r6, r6, #16
 801dfd8:	d4b7      	bmi.n	801df4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dfda:	4546      	cmp	r6, r8
 801dfdc:	dab5      	bge.n	801df4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dfde:	461e      	mov	r6, r3
 801dfe0:	46a0      	mov	r8, r4
 801dfe2:	2e00      	cmp	r6, #0
 801dfe4:	ddb8      	ble.n	801df58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dfe6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801dfea:	9902      	ldr	r1, [sp, #8]
 801dfec:	1417      	asrs	r7, r2, #16
 801dfee:	ea4f 4920 	mov.w	r9, r0, asr #16
 801dff2:	fb0a 9707 	mla	r7, sl, r7, r9
 801dff6:	4470      	add	r0, lr
 801dff8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801dffc:	f828 7b02 	strh.w	r7, [r8], #2
 801e000:	4462      	add	r2, ip
 801e002:	3e01      	subs	r6, #1
 801e004:	e7ed      	b.n	801dfe2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801e006:	ea5f 4920 	movs.w	r9, r0, asr #16
 801e00a:	d414      	bmi.n	801e036 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e00c:	68ae      	ldr	r6, [r5, #8]
 801e00e:	454e      	cmp	r6, r9
 801e010:	dd11      	ble.n	801e036 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e012:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801e016:	d40e      	bmi.n	801e036 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e018:	68ef      	ldr	r7, [r5, #12]
 801e01a:	4557      	cmp	r7, sl
 801e01c:	dd0b      	ble.n	801e036 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e01e:	b236      	sxth	r6, r6
 801e020:	fb0a 9606 	mla	r6, sl, r6, r9
 801e024:	9f02      	ldr	r7, [sp, #8]
 801e026:	f06f 0101 	mvn.w	r1, #1
 801e02a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801e02e:	fb01 f608 	mul.w	r6, r1, r8
 801e032:	9903      	ldr	r1, [sp, #12]
 801e034:	538f      	strh	r7, [r1, r6]
 801e036:	4470      	add	r0, lr
 801e038:	4462      	add	r2, ip
 801e03a:	f108 38ff 	add.w	r8, r8, #4294967295
 801e03e:	e788      	b.n	801df52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e040:	b005      	add	sp, #20
 801e042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e046 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e046:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e04a:	b087      	sub	sp, #28
 801e04c:	468b      	mov	fp, r1
 801e04e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e050:	9203      	str	r2, [sp, #12]
 801e052:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e056:	9204      	str	r2, [sp, #16]
 801e058:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801e05c:	6841      	ldr	r1, [r0, #4]
 801e05e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e062:	fb01 2505 	mla	r5, r1, r5, r2
 801e066:	6802      	ldr	r2, [r0, #0]
 801e068:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801e06c:	f8d9 2000 	ldr.w	r2, [r9]
 801e070:	9201      	str	r2, [sp, #4]
 801e072:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e076:	f1bb 0f00 	cmp.w	fp, #0
 801e07a:	dc03      	bgt.n	801e084 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e07c:	9a03      	ldr	r2, [sp, #12]
 801e07e:	2a00      	cmp	r2, #0
 801e080:	f340 8159 	ble.w	801e336 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e084:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e086:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e08a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e08e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e092:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e094:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e098:	2b00      	cmp	r3, #0
 801e09a:	dd0e      	ble.n	801e0ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e09c:	1402      	asrs	r2, r0, #16
 801e09e:	d405      	bmi.n	801e0ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e0a0:	42ba      	cmp	r2, r7
 801e0a2:	da03      	bge.n	801e0ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e0a4:	140a      	asrs	r2, r1, #16
 801e0a6:	d401      	bmi.n	801e0ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e0a8:	42b2      	cmp	r2, r6
 801e0aa:	db07      	blt.n	801e0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e0ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e0ae:	4410      	add	r0, r2
 801e0b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e0b2:	3b01      	subs	r3, #1
 801e0b4:	4411      	add	r1, r2
 801e0b6:	3502      	adds	r5, #2
 801e0b8:	e7ee      	b.n	801e098 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e0ba:	d017      	beq.n	801e0ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e0bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e0be:	1e5a      	subs	r2, r3, #1
 801e0c0:	fb04 0402 	mla	r4, r4, r2, r0
 801e0c4:	1424      	asrs	r4, r4, #16
 801e0c6:	d409      	bmi.n	801e0dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e0c8:	42bc      	cmp	r4, r7
 801e0ca:	da07      	bge.n	801e0dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e0cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e0ce:	fb04 1202 	mla	r2, r4, r2, r1
 801e0d2:	1412      	asrs	r2, r2, #16
 801e0d4:	d402      	bmi.n	801e0dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e0d6:	42b2      	cmp	r2, r6
 801e0d8:	f2c0 80bf 	blt.w	801e25a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e0dc:	2700      	movs	r7, #0
 801e0de:	19da      	adds	r2, r3, r7
 801e0e0:	2a00      	cmp	r2, #0
 801e0e2:	dc3e      	bgt.n	801e162 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e0e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e0e8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e0ec:	f1bb 0f00 	cmp.w	fp, #0
 801e0f0:	f340 8121 	ble.w	801e336 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e0f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e0f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e0fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e100:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e102:	f1bb 0b01 	subs.w	fp, fp, #1
 801e106:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e10a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e10e:	eeb0 6a62 	vmov.f32	s12, s5
 801e112:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e116:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e11a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e11e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e122:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e126:	eeb0 6a43 	vmov.f32	s12, s6
 801e12a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e12e:	ee12 2a90 	vmov	r2, s5
 801e132:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e136:	fb92 f3f3 	sdiv	r3, r2, r3
 801e13a:	ee13 2a10 	vmov	r2, s6
 801e13e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e142:	9313      	str	r3, [sp, #76]	; 0x4c
 801e144:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e146:	fb92 f3f3 	sdiv	r3, r2, r3
 801e14a:	9a03      	ldr	r2, [sp, #12]
 801e14c:	9314      	str	r3, [sp, #80]	; 0x50
 801e14e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e152:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e154:	eeb0 3a67 	vmov.f32	s6, s15
 801e158:	bf08      	it	eq
 801e15a:	4613      	moveq	r3, r2
 801e15c:	eef0 2a47 	vmov.f32	s5, s14
 801e160:	e789      	b.n	801e076 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e162:	1406      	asrs	r6, r0, #16
 801e164:	d42d      	bmi.n	801e1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e166:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e16a:	42b4      	cmp	r4, r6
 801e16c:	dd29      	ble.n	801e1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e16e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e172:	d426      	bmi.n	801e1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e174:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e178:	4562      	cmp	r2, ip
 801e17a:	dd22      	ble.n	801e1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e17c:	b224      	sxth	r4, r4
 801e17e:	9a01      	ldr	r2, [sp, #4]
 801e180:	fb0c 6404 	mla	r4, ip, r4, r6
 801e184:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e188:	0e22      	lsrs	r2, r4, #24
 801e18a:	d01a      	beq.n	801e1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e18c:	9e04      	ldr	r6, [sp, #16]
 801e18e:	4372      	muls	r2, r6
 801e190:	1c56      	adds	r6, r2, #1
 801e192:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e196:	1212      	asrs	r2, r2, #8
 801e198:	0a26      	lsrs	r6, r4, #8
 801e19a:	2aff      	cmp	r2, #255	; 0xff
 801e19c:	9605      	str	r6, [sp, #20]
 801e19e:	d116      	bne.n	801e1ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e1a0:	f06f 0201 	mvn.w	r2, #1
 801e1a4:	fb02 fc07 	mul.w	ip, r2, r7
 801e1a8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e1ac:	0962      	lsrs	r2, r4, #5
 801e1ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e1b2:	f026 0607 	bic.w	r6, r6, #7
 801e1b6:	4316      	orrs	r6, r2
 801e1b8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e1bc:	4326      	orrs	r6, r4
 801e1be:	f825 600c 	strh.w	r6, [r5, ip]
 801e1c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e1c4:	4410      	add	r0, r2
 801e1c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e1c8:	3f01      	subs	r7, #1
 801e1ca:	4411      	add	r1, r2
 801e1cc:	e787      	b.n	801e0de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e1ce:	f06f 0601 	mvn.w	r6, #1
 801e1d2:	437e      	muls	r6, r7
 801e1d4:	fa1f fa82 	uxth.w	sl, r2
 801e1d8:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e1dc:	9602      	str	r6, [sp, #8]
 801e1de:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e1e2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e1e6:	43d2      	mvns	r2, r2
 801e1e8:	b2d2      	uxtb	r2, r2
 801e1ea:	fb1c fc0a 	smulbb	ip, ip, sl
 801e1ee:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e1f2:	fb0e ce02 	mla	lr, lr, r2, ip
 801e1f6:	b2e4      	uxtb	r4, r4
 801e1f8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e1fc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e200:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e204:	fa5f f888 	uxtb.w	r8, r8
 801e208:	fb14 f40a 	smulbb	r4, r4, sl
 801e20c:	fb08 4402 	mla	r4, r8, r2, r4
 801e210:	fa1f fe8e 	uxth.w	lr, lr
 801e214:	fb16 f60a 	smulbb	r6, r6, sl
 801e218:	b2a4      	uxth	r4, r4
 801e21a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e21e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e222:	f10e 0201 	add.w	r2, lr, #1
 801e226:	1c66      	adds	r6, r4, #1
 801e228:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e22c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e230:	fa1f fc8c 	uxth.w	ip, ip
 801e234:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e238:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e23c:	ea46 0e0e 	orr.w	lr, r6, lr
 801e240:	f10c 0601 	add.w	r6, ip, #1
 801e244:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e248:	0976      	lsrs	r6, r6, #5
 801e24a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e24e:	9a02      	ldr	r2, [sp, #8]
 801e250:	ea4e 0e06 	orr.w	lr, lr, r6
 801e254:	f825 e002 	strh.w	lr, [r5, r2]
 801e258:	e7b3      	b.n	801e1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e25a:	f04f 0800 	mov.w	r8, #0
 801e25e:	eba3 0208 	sub.w	r2, r3, r8
 801e262:	2a00      	cmp	r2, #0
 801e264:	f77f af3e 	ble.w	801e0e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e268:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e26c:	1404      	asrs	r4, r0, #16
 801e26e:	140a      	asrs	r2, r1, #16
 801e270:	fb06 4202 	mla	r2, r6, r2, r4
 801e274:	9c01      	ldr	r4, [sp, #4]
 801e276:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e27a:	0e22      	lsrs	r2, r4, #24
 801e27c:	d016      	beq.n	801e2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e27e:	9e04      	ldr	r6, [sp, #16]
 801e280:	4372      	muls	r2, r6
 801e282:	1c56      	adds	r6, r2, #1
 801e284:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e288:	1212      	asrs	r2, r2, #8
 801e28a:	2aff      	cmp	r2, #255	; 0xff
 801e28c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e290:	d113      	bne.n	801e2ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e292:	0962      	lsrs	r2, r4, #5
 801e294:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e298:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e29c:	f026 0607 	bic.w	r6, r6, #7
 801e2a0:	4316      	orrs	r6, r2
 801e2a2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e2a6:	4326      	orrs	r6, r4
 801e2a8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e2ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e2ae:	4410      	add	r0, r2
 801e2b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e2b2:	f108 0801 	add.w	r8, r8, #1
 801e2b6:	4411      	add	r1, r2
 801e2b8:	e7d1      	b.n	801e25e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e2ba:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e2be:	fa1f fa82 	uxth.w	sl, r2
 801e2c2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e2c6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e2ca:	43d2      	mvns	r2, r2
 801e2cc:	b2d2      	uxtb	r2, r2
 801e2ce:	fb17 f70a 	smulbb	r7, r7, sl
 801e2d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e2d6:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e2da:	b2e4      	uxtb	r4, r4
 801e2dc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e2e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e2e4:	fa5f fe8e 	uxtb.w	lr, lr
 801e2e8:	fb14 f40a 	smulbb	r4, r4, sl
 801e2ec:	fb0e 4402 	mla	r4, lr, r2, r4
 801e2f0:	b2f6      	uxtb	r6, r6
 801e2f2:	fa1f fc8c 	uxth.w	ip, ip
 801e2f6:	fb16 f60a 	smulbb	r6, r6, sl
 801e2fa:	b2a4      	uxth	r4, r4
 801e2fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e300:	fb07 6702 	mla	r7, r7, r2, r6
 801e304:	f10c 0201 	add.w	r2, ip, #1
 801e308:	1c66      	adds	r6, r4, #1
 801e30a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e30e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e312:	b2bf      	uxth	r7, r7
 801e314:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e318:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e31c:	ea46 0c0c 	orr.w	ip, r6, ip
 801e320:	1c7e      	adds	r6, r7, #1
 801e322:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e326:	0976      	lsrs	r6, r6, #5
 801e328:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e32c:	ea4c 0c06 	orr.w	ip, ip, r6
 801e330:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e334:	e7ba      	b.n	801e2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e336:	b007      	add	sp, #28
 801e338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e33c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e33c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e340:	b085      	sub	sp, #20
 801e342:	468b      	mov	fp, r1
 801e344:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e346:	9203      	str	r2, [sp, #12]
 801e348:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e34c:	6841      	ldr	r1, [r0, #4]
 801e34e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e352:	fb01 2404 	mla	r4, r1, r4, r2
 801e356:	6802      	ldr	r2, [r0, #0]
 801e358:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e35c:	f8d8 2000 	ldr.w	r2, [r8]
 801e360:	9201      	str	r2, [sp, #4]
 801e362:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e366:	f1bb 0f00 	cmp.w	fp, #0
 801e36a:	dc03      	bgt.n	801e374 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e36c:	9a03      	ldr	r2, [sp, #12]
 801e36e:	2a00      	cmp	r2, #0
 801e370:	f340 814f 	ble.w	801e612 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e374:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e376:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e37a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e37e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e382:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e384:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e388:	2b00      	cmp	r3, #0
 801e38a:	dd0e      	ble.n	801e3aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e38c:	1408      	asrs	r0, r1, #16
 801e38e:	d405      	bmi.n	801e39c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e390:	42b8      	cmp	r0, r7
 801e392:	da03      	bge.n	801e39c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e394:	1410      	asrs	r0, r2, #16
 801e396:	d401      	bmi.n	801e39c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e398:	42b0      	cmp	r0, r6
 801e39a:	db07      	blt.n	801e3ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e39c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e39e:	4401      	add	r1, r0
 801e3a0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e3a2:	3b01      	subs	r3, #1
 801e3a4:	4402      	add	r2, r0
 801e3a6:	3402      	adds	r4, #2
 801e3a8:	e7ee      	b.n	801e388 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e3aa:	d017      	beq.n	801e3dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e3ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e3ae:	1e58      	subs	r0, r3, #1
 801e3b0:	fb05 1500 	mla	r5, r5, r0, r1
 801e3b4:	142d      	asrs	r5, r5, #16
 801e3b6:	d409      	bmi.n	801e3cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e3b8:	42bd      	cmp	r5, r7
 801e3ba:	da07      	bge.n	801e3cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e3bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e3be:	fb05 2000 	mla	r0, r5, r0, r2
 801e3c2:	1400      	asrs	r0, r0, #16
 801e3c4:	d402      	bmi.n	801e3cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e3c6:	42b0      	cmp	r0, r6
 801e3c8:	f2c0 80ba 	blt.w	801e540 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e3cc:	2600      	movs	r6, #0
 801e3ce:	1998      	adds	r0, r3, r6
 801e3d0:	2800      	cmp	r0, #0
 801e3d2:	dc3e      	bgt.n	801e452 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e3d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e3d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e3dc:	f1bb 0f00 	cmp.w	fp, #0
 801e3e0:	f340 8117 	ble.w	801e612 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e3e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e3e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e3ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e3f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e3f2:	f1bb 0b01 	subs.w	fp, fp, #1
 801e3f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e3fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e3fe:	eeb0 6a62 	vmov.f32	s12, s5
 801e402:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e406:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e40a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e40e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e412:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e416:	eeb0 6a43 	vmov.f32	s12, s6
 801e41a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e41e:	ee12 2a90 	vmov	r2, s5
 801e422:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e426:	fb92 f3f3 	sdiv	r3, r2, r3
 801e42a:	ee13 2a10 	vmov	r2, s6
 801e42e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e432:	9311      	str	r3, [sp, #68]	; 0x44
 801e434:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e436:	fb92 f3f3 	sdiv	r3, r2, r3
 801e43a:	9a03      	ldr	r2, [sp, #12]
 801e43c:	9312      	str	r3, [sp, #72]	; 0x48
 801e43e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e442:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e444:	eeb0 3a67 	vmov.f32	s6, s15
 801e448:	bf08      	it	eq
 801e44a:	4613      	moveq	r3, r2
 801e44c:	eef0 2a47 	vmov.f32	s5, s14
 801e450:	e789      	b.n	801e366 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e452:	140f      	asrs	r7, r1, #16
 801e454:	d424      	bmi.n	801e4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e456:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e45a:	42bd      	cmp	r5, r7
 801e45c:	dd20      	ble.n	801e4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e45e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e462:	d41d      	bmi.n	801e4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e464:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e468:	4560      	cmp	r0, ip
 801e46a:	dd19      	ble.n	801e4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e46c:	b22d      	sxth	r5, r5
 801e46e:	fb0c 7505 	mla	r5, ip, r5, r7
 801e472:	9801      	ldr	r0, [sp, #4]
 801e474:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e478:	0e07      	lsrs	r7, r0, #24
 801e47a:	2fff      	cmp	r7, #255	; 0xff
 801e47c:	d116      	bne.n	801e4ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e47e:	f06f 0501 	mvn.w	r5, #1
 801e482:	fb05 f706 	mul.w	r7, r5, r6
 801e486:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e48a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e48e:	0945      	lsrs	r5, r0, #5
 801e490:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e494:	ea4c 0505 	orr.w	r5, ip, r5
 801e498:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e49c:	4305      	orrs	r5, r0
 801e49e:	53e5      	strh	r5, [r4, r7]
 801e4a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e4a2:	4401      	add	r1, r0
 801e4a4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e4a6:	3e01      	subs	r6, #1
 801e4a8:	4402      	add	r2, r0
 801e4aa:	e790      	b.n	801e3ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e4ac:	b2fd      	uxtb	r5, r7
 801e4ae:	2f00      	cmp	r7, #0
 801e4b0:	d0f6      	beq.n	801e4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e4b2:	f06f 0701 	mvn.w	r7, #1
 801e4b6:	4377      	muls	r7, r6
 801e4b8:	fa1f f985 	uxth.w	r9, r5
 801e4bc:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e4c0:	9702      	str	r7, [sp, #8]
 801e4c2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e4c6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e4ca:	43ed      	mvns	r5, r5
 801e4cc:	b2ed      	uxtb	r5, r5
 801e4ce:	fb17 f709 	smulbb	r7, r7, r9
 801e4d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e4d6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e4da:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e4de:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e4e2:	b2c0      	uxtb	r0, r0
 801e4e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e4e8:	fa5f fe8e 	uxtb.w	lr, lr
 801e4ec:	fb10 f009 	smulbb	r0, r0, r9
 801e4f0:	fb0e 0005 	mla	r0, lr, r5, r0
 801e4f4:	b280      	uxth	r0, r0
 801e4f6:	fa1f fc8c 	uxth.w	ip, ip
 801e4fa:	fb1a fa09 	smulbb	sl, sl, r9
 801e4fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e502:	fb07 a705 	mla	r7, r7, r5, sl
 801e506:	f100 0a01 	add.w	sl, r0, #1
 801e50a:	f10c 0501 	add.w	r5, ip, #1
 801e50e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e512:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e516:	b2bf      	uxth	r7, r7
 801e518:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e51c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e520:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e524:	f107 0a01 	add.w	sl, r7, #1
 801e528:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e52c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e530:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e534:	9802      	ldr	r0, [sp, #8]
 801e536:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e53a:	f824 c000 	strh.w	ip, [r4, r0]
 801e53e:	e7af      	b.n	801e4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e540:	f04f 0e00 	mov.w	lr, #0
 801e544:	eba3 000e 	sub.w	r0, r3, lr
 801e548:	2800      	cmp	r0, #0
 801e54a:	f77f af43 	ble.w	801e3d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e54e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e552:	140d      	asrs	r5, r1, #16
 801e554:	1410      	asrs	r0, r2, #16
 801e556:	fb06 5000 	mla	r0, r6, r0, r5
 801e55a:	9d01      	ldr	r5, [sp, #4]
 801e55c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e560:	0e2e      	lsrs	r6, r5, #24
 801e562:	2eff      	cmp	r6, #255	; 0xff
 801e564:	d112      	bne.n	801e58c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e566:	482c      	ldr	r0, [pc, #176]	; (801e618 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e568:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e56c:	0968      	lsrs	r0, r5, #5
 801e56e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e572:	4330      	orrs	r0, r6
 801e574:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e578:	4328      	orrs	r0, r5
 801e57a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e57e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e580:	4401      	add	r1, r0
 801e582:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e584:	f10e 0e01 	add.w	lr, lr, #1
 801e588:	4402      	add	r2, r0
 801e58a:	e7db      	b.n	801e544 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e58c:	b2f0      	uxtb	r0, r6
 801e58e:	2e00      	cmp	r6, #0
 801e590:	d0f5      	beq.n	801e57e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e592:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e596:	fa1f f980 	uxth.w	r9, r0
 801e59a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e59e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e5a2:	43c0      	mvns	r0, r0
 801e5a4:	b2c0      	uxtb	r0, r0
 801e5a6:	fb16 f609 	smulbb	r6, r6, r9
 801e5aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e5ae:	fb07 6700 	mla	r7, r7, r0, r6
 801e5b2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e5b6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e5ba:	b2ed      	uxtb	r5, r5
 801e5bc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e5c0:	fa5f fc8c 	uxtb.w	ip, ip
 801e5c4:	fb15 f509 	smulbb	r5, r5, r9
 801e5c8:	fb0c 5500 	mla	r5, ip, r0, r5
 801e5cc:	b2bf      	uxth	r7, r7
 801e5ce:	fb1a fa09 	smulbb	sl, sl, r9
 801e5d2:	b2ad      	uxth	r5, r5
 801e5d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e5d8:	fb06 a600 	mla	r6, r6, r0, sl
 801e5dc:	1c78      	adds	r0, r7, #1
 801e5de:	f105 0a01 	add.w	sl, r5, #1
 801e5e2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e5e6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e5ea:	b2b6      	uxth	r6, r6
 801e5ec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e5f0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e5f4:	ea4a 0707 	orr.w	r7, sl, r7
 801e5f8:	f106 0a01 	add.w	sl, r6, #1
 801e5fc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e600:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e604:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e608:	ea47 070a 	orr.w	r7, r7, sl
 801e60c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e610:	e7b5      	b.n	801e57e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e612:	b005      	add	sp, #20
 801e614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e618:	fffff800 	.word	0xfffff800

0801e61c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e61c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e620:	b087      	sub	sp, #28
 801e622:	468b      	mov	fp, r1
 801e624:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e626:	9203      	str	r2, [sp, #12]
 801e628:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e62c:	9204      	str	r2, [sp, #16]
 801e62e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e632:	6841      	ldr	r1, [r0, #4]
 801e634:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e638:	fb01 2404 	mla	r4, r1, r4, r2
 801e63c:	6802      	ldr	r2, [r0, #0]
 801e63e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e642:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e646:	3201      	adds	r2, #1
 801e648:	f022 0201 	bic.w	r2, r2, #1
 801e64c:	9200      	str	r2, [sp, #0]
 801e64e:	f8d9 2000 	ldr.w	r2, [r9]
 801e652:	9201      	str	r2, [sp, #4]
 801e654:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e658:	f1bb 0f00 	cmp.w	fp, #0
 801e65c:	dc03      	bgt.n	801e666 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e65e:	9a03      	ldr	r2, [sp, #12]
 801e660:	2a00      	cmp	r2, #0
 801e662:	f340 8169 	ble.w	801e938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e666:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e668:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e66c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e670:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e674:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e676:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e67a:	2b00      	cmp	r3, #0
 801e67c:	dd0e      	ble.n	801e69c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e67e:	1402      	asrs	r2, r0, #16
 801e680:	d405      	bmi.n	801e68e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e682:	42ba      	cmp	r2, r7
 801e684:	da03      	bge.n	801e68e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e686:	140a      	asrs	r2, r1, #16
 801e688:	d401      	bmi.n	801e68e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e68a:	42b2      	cmp	r2, r6
 801e68c:	db07      	blt.n	801e69e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e68e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e690:	4410      	add	r0, r2
 801e692:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e694:	3b01      	subs	r3, #1
 801e696:	4411      	add	r1, r2
 801e698:	3402      	adds	r4, #2
 801e69a:	e7ee      	b.n	801e67a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e69c:	d017      	beq.n	801e6ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e69e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e6a0:	1e5a      	subs	r2, r3, #1
 801e6a2:	fb05 0502 	mla	r5, r5, r2, r0
 801e6a6:	142d      	asrs	r5, r5, #16
 801e6a8:	d409      	bmi.n	801e6be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e6aa:	42bd      	cmp	r5, r7
 801e6ac:	da07      	bge.n	801e6be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e6ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e6b0:	fb05 1202 	mla	r2, r5, r2, r1
 801e6b4:	1412      	asrs	r2, r2, #16
 801e6b6:	d402      	bmi.n	801e6be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e6b8:	42b2      	cmp	r2, r6
 801e6ba:	f2c0 80c7 	blt.w	801e84c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801e6be:	2700      	movs	r7, #0
 801e6c0:	19da      	adds	r2, r3, r7
 801e6c2:	2a00      	cmp	r2, #0
 801e6c4:	dc3e      	bgt.n	801e744 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e6c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e6ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e6ce:	f1bb 0f00 	cmp.w	fp, #0
 801e6d2:	f340 8131 	ble.w	801e938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e6d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e6da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e6de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e6e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e6e4:	f1bb 0b01 	subs.w	fp, fp, #1
 801e6e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e6ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e6f0:	eeb0 6a62 	vmov.f32	s12, s5
 801e6f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e6f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e6fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e700:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e704:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e708:	eeb0 6a43 	vmov.f32	s12, s6
 801e70c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e710:	ee12 2a90 	vmov	r2, s5
 801e714:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e718:	fb92 f3f3 	sdiv	r3, r2, r3
 801e71c:	ee13 2a10 	vmov	r2, s6
 801e720:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e724:	9313      	str	r3, [sp, #76]	; 0x4c
 801e726:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e728:	fb92 f3f3 	sdiv	r3, r2, r3
 801e72c:	9a03      	ldr	r2, [sp, #12]
 801e72e:	9314      	str	r3, [sp, #80]	; 0x50
 801e730:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e734:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e736:	eeb0 3a67 	vmov.f32	s6, s15
 801e73a:	bf08      	it	eq
 801e73c:	4613      	moveq	r3, r2
 801e73e:	eef0 2a47 	vmov.f32	s5, s14
 801e742:	e789      	b.n	801e658 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e744:	1405      	asrs	r5, r0, #16
 801e746:	d435      	bmi.n	801e7b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e748:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e74c:	42aa      	cmp	r2, r5
 801e74e:	dd31      	ble.n	801e7b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e750:	140e      	asrs	r6, r1, #16
 801e752:	d42f      	bmi.n	801e7b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e754:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e758:	42b2      	cmp	r2, r6
 801e75a:	dd2b      	ble.n	801e7b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e75c:	9a00      	ldr	r2, [sp, #0]
 801e75e:	fb06 5502 	mla	r5, r6, r2, r5
 801e762:	086a      	lsrs	r2, r5, #1
 801e764:	9e01      	ldr	r6, [sp, #4]
 801e766:	5cb2      	ldrb	r2, [r6, r2]
 801e768:	07ee      	lsls	r6, r5, #31
 801e76a:	bf54      	ite	pl
 801e76c:	f002 020f 	andpl.w	r2, r2, #15
 801e770:	1112      	asrmi	r2, r2, #4
 801e772:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e776:	b2d2      	uxtb	r2, r2
 801e778:	b1e2      	cbz	r2, 801e7b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e77a:	9d04      	ldr	r5, [sp, #16]
 801e77c:	436a      	muls	r2, r5
 801e77e:	1c55      	adds	r5, r2, #1
 801e780:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e784:	4d6e      	ldr	r5, [pc, #440]	; (801e940 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e786:	682d      	ldr	r5, [r5, #0]
 801e788:	1212      	asrs	r2, r2, #8
 801e78a:	0a2e      	lsrs	r6, r5, #8
 801e78c:	2aff      	cmp	r2, #255	; 0xff
 801e78e:	9605      	str	r6, [sp, #20]
 801e790:	d116      	bne.n	801e7c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e792:	f06f 0201 	mvn.w	r2, #1
 801e796:	fb02 fc07 	mul.w	ip, r2, r7
 801e79a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e79e:	096a      	lsrs	r2, r5, #5
 801e7a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e7a4:	f026 0607 	bic.w	r6, r6, #7
 801e7a8:	4316      	orrs	r6, r2
 801e7aa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e7ae:	432e      	orrs	r6, r5
 801e7b0:	f824 600c 	strh.w	r6, [r4, ip]
 801e7b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e7b6:	4410      	add	r0, r2
 801e7b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e7ba:	3f01      	subs	r7, #1
 801e7bc:	4411      	add	r1, r2
 801e7be:	e77f      	b.n	801e6c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801e7c0:	f06f 0601 	mvn.w	r6, #1
 801e7c4:	437e      	muls	r6, r7
 801e7c6:	fa1f fa82 	uxth.w	sl, r2
 801e7ca:	f834 8006 	ldrh.w	r8, [r4, r6]
 801e7ce:	9602      	str	r6, [sp, #8]
 801e7d0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e7d4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801e7d8:	43d2      	mvns	r2, r2
 801e7da:	b2d2      	uxtb	r2, r2
 801e7dc:	fb1c fc0a 	smulbb	ip, ip, sl
 801e7e0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e7e4:	fb0e ce02 	mla	lr, lr, r2, ip
 801e7e8:	b2ed      	uxtb	r5, r5
 801e7ea:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e7ee:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e7f2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e7f6:	fa5f f888 	uxtb.w	r8, r8
 801e7fa:	fb15 f50a 	smulbb	r5, r5, sl
 801e7fe:	fb08 5502 	mla	r5, r8, r2, r5
 801e802:	fa1f fe8e 	uxth.w	lr, lr
 801e806:	fb16 f60a 	smulbb	r6, r6, sl
 801e80a:	b2ad      	uxth	r5, r5
 801e80c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e810:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e814:	f10e 0201 	add.w	r2, lr, #1
 801e818:	1c6e      	adds	r6, r5, #1
 801e81a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e81e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801e822:	fa1f fc8c 	uxth.w	ip, ip
 801e826:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e82a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e82e:	ea46 0e0e 	orr.w	lr, r6, lr
 801e832:	f10c 0601 	add.w	r6, ip, #1
 801e836:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e83a:	0976      	lsrs	r6, r6, #5
 801e83c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e840:	9a02      	ldr	r2, [sp, #8]
 801e842:	ea4e 0e06 	orr.w	lr, lr, r6
 801e846:	f824 e002 	strh.w	lr, [r4, r2]
 801e84a:	e7b3      	b.n	801e7b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e84c:	f04f 0800 	mov.w	r8, #0
 801e850:	eba3 0208 	sub.w	r2, r3, r8
 801e854:	2a00      	cmp	r2, #0
 801e856:	f77f af36 	ble.w	801e6c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e85a:	9e00      	ldr	r6, [sp, #0]
 801e85c:	1402      	asrs	r2, r0, #16
 801e85e:	140d      	asrs	r5, r1, #16
 801e860:	fb06 2505 	mla	r5, r6, r5, r2
 801e864:	086a      	lsrs	r2, r5, #1
 801e866:	9e01      	ldr	r6, [sp, #4]
 801e868:	5cb2      	ldrb	r2, [r6, r2]
 801e86a:	07ed      	lsls	r5, r5, #31
 801e86c:	bf54      	ite	pl
 801e86e:	f002 020f 	andpl.w	r2, r2, #15
 801e872:	1112      	asrmi	r2, r2, #4
 801e874:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e878:	b2d2      	uxtb	r2, r2
 801e87a:	b1c2      	cbz	r2, 801e8ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e87c:	9d04      	ldr	r5, [sp, #16]
 801e87e:	436a      	muls	r2, r5
 801e880:	1c55      	adds	r5, r2, #1
 801e882:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e886:	4d2e      	ldr	r5, [pc, #184]	; (801e940 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e888:	1212      	asrs	r2, r2, #8
 801e88a:	682e      	ldr	r6, [r5, #0]
 801e88c:	2aff      	cmp	r2, #255	; 0xff
 801e88e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801e892:	d113      	bne.n	801e8bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801e894:	0972      	lsrs	r2, r6, #5
 801e896:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e89a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e89e:	f025 0507 	bic.w	r5, r5, #7
 801e8a2:	4315      	orrs	r5, r2
 801e8a4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e8a8:	4335      	orrs	r5, r6
 801e8aa:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801e8ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e8b0:	4410      	add	r0, r2
 801e8b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e8b4:	f108 0801 	add.w	r8, r8, #1
 801e8b8:	4411      	add	r1, r2
 801e8ba:	e7c9      	b.n	801e850 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e8bc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801e8c0:	fa1f fa82 	uxth.w	sl, r2
 801e8c4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e8c8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801e8cc:	43d2      	mvns	r2, r2
 801e8ce:	b2d2      	uxtb	r2, r2
 801e8d0:	fb17 f70a 	smulbb	r7, r7, sl
 801e8d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e8d8:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e8dc:	b2f6      	uxtb	r6, r6
 801e8de:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e8e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e8e6:	fa5f fe8e 	uxtb.w	lr, lr
 801e8ea:	fb16 f60a 	smulbb	r6, r6, sl
 801e8ee:	fb0e 6602 	mla	r6, lr, r2, r6
 801e8f2:	b2ed      	uxtb	r5, r5
 801e8f4:	fa1f fc8c 	uxth.w	ip, ip
 801e8f8:	fb15 f50a 	smulbb	r5, r5, sl
 801e8fc:	b2b6      	uxth	r6, r6
 801e8fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e902:	fb07 5702 	mla	r7, r7, r2, r5
 801e906:	f10c 0201 	add.w	r2, ip, #1
 801e90a:	1c75      	adds	r5, r6, #1
 801e90c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e910:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e914:	b2bf      	uxth	r7, r7
 801e916:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e91a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e91e:	ea45 0c0c 	orr.w	ip, r5, ip
 801e922:	1c7d      	adds	r5, r7, #1
 801e924:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801e928:	096d      	lsrs	r5, r5, #5
 801e92a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e92e:	ea4c 0c05 	orr.w	ip, ip, r5
 801e932:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801e936:	e7ba      	b.n	801e8ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e938:	b007      	add	sp, #28
 801e93a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e93e:	bf00      	nop
 801e940:	20013864 	.word	0x20013864

0801e944 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e948:	b087      	sub	sp, #28
 801e94a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ec58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801e94e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e950:	9205      	str	r2, [sp, #20]
 801e952:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e956:	9101      	str	r1, [sp, #4]
 801e958:	6841      	ldr	r1, [r0, #4]
 801e95a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801e95e:	fb01 2404 	mla	r4, r1, r4, r2
 801e962:	6802      	ldr	r2, [r0, #0]
 801e964:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e968:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e96c:	3201      	adds	r2, #1
 801e96e:	f022 0201 	bic.w	r2, r2, #1
 801e972:	9202      	str	r2, [sp, #8]
 801e974:	f8db 2000 	ldr.w	r2, [fp]
 801e978:	9203      	str	r2, [sp, #12]
 801e97a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e97e:	9a01      	ldr	r2, [sp, #4]
 801e980:	2a00      	cmp	r2, #0
 801e982:	dc03      	bgt.n	801e98c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e984:	9a05      	ldr	r2, [sp, #20]
 801e986:	2a00      	cmp	r2, #0
 801e988:	f340 8162 	ble.w	801ec50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e98c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e98e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801e992:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801e996:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e99a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e99c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e9a0:	2b00      	cmp	r3, #0
 801e9a2:	dd0e      	ble.n	801e9c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e9a4:	1402      	asrs	r2, r0, #16
 801e9a6:	d405      	bmi.n	801e9b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e9a8:	42ba      	cmp	r2, r7
 801e9aa:	da03      	bge.n	801e9b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e9ac:	140a      	asrs	r2, r1, #16
 801e9ae:	d401      	bmi.n	801e9b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e9b0:	42b2      	cmp	r2, r6
 801e9b2:	db07      	blt.n	801e9c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e9b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e9b6:	4410      	add	r0, r2
 801e9b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e9ba:	3b01      	subs	r3, #1
 801e9bc:	4411      	add	r1, r2
 801e9be:	3402      	adds	r4, #2
 801e9c0:	e7ee      	b.n	801e9a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801e9c2:	d017      	beq.n	801e9f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801e9c4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e9c6:	1e5a      	subs	r2, r3, #1
 801e9c8:	fb05 0502 	mla	r5, r5, r2, r0
 801e9cc:	142d      	asrs	r5, r5, #16
 801e9ce:	d409      	bmi.n	801e9e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e9d0:	42bd      	cmp	r5, r7
 801e9d2:	da07      	bge.n	801e9e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e9d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e9d6:	fb05 1202 	mla	r2, r5, r2, r1
 801e9da:	1412      	asrs	r2, r2, #16
 801e9dc:	d402      	bmi.n	801e9e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e9de:	42b2      	cmp	r2, r6
 801e9e0:	f2c0 80c3 	blt.w	801eb6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801e9e4:	2500      	movs	r5, #0
 801e9e6:	195a      	adds	r2, r3, r5
 801e9e8:	2a00      	cmp	r2, #0
 801e9ea:	dc3f      	bgt.n	801ea6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e9ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e9f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e9f4:	9b01      	ldr	r3, [sp, #4]
 801e9f6:	2b00      	cmp	r3, #0
 801e9f8:	f340 812a 	ble.w	801ec50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e9fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ea00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ea04:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ea08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ea0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ea0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ea12:	eeb0 6a62 	vmov.f32	s12, s5
 801ea16:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ea1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ea1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ea22:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ea26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ea2a:	eeb0 6a43 	vmov.f32	s12, s6
 801ea2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ea32:	ee12 2a90 	vmov	r2, s5
 801ea36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ea3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea3e:	ee13 2a10 	vmov	r2, s6
 801ea42:	9313      	str	r3, [sp, #76]	; 0x4c
 801ea44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ea46:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea4a:	9314      	str	r3, [sp, #80]	; 0x50
 801ea4c:	9b01      	ldr	r3, [sp, #4]
 801ea4e:	9a05      	ldr	r2, [sp, #20]
 801ea50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ea54:	3b01      	subs	r3, #1
 801ea56:	9301      	str	r3, [sp, #4]
 801ea58:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ea5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ea5e:	eeb0 3a67 	vmov.f32	s6, s15
 801ea62:	bf08      	it	eq
 801ea64:	4613      	moveq	r3, r2
 801ea66:	eef0 2a47 	vmov.f32	s5, s14
 801ea6a:	e788      	b.n	801e97e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ea6c:	1406      	asrs	r6, r0, #16
 801ea6e:	d42c      	bmi.n	801eaca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea70:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ea74:	42b2      	cmp	r2, r6
 801ea76:	dd28      	ble.n	801eaca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea78:	140f      	asrs	r7, r1, #16
 801ea7a:	d426      	bmi.n	801eaca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea7c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ea80:	42ba      	cmp	r2, r7
 801ea82:	dd22      	ble.n	801eaca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea84:	9a02      	ldr	r2, [sp, #8]
 801ea86:	fb07 6602 	mla	r6, r7, r2, r6
 801ea8a:	0872      	lsrs	r2, r6, #1
 801ea8c:	9f03      	ldr	r7, [sp, #12]
 801ea8e:	5cba      	ldrb	r2, [r7, r2]
 801ea90:	07f6      	lsls	r6, r6, #31
 801ea92:	bf54      	ite	pl
 801ea94:	f002 020f 	andpl.w	r2, r2, #15
 801ea98:	1112      	asrmi	r2, r2, #4
 801ea9a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ea9e:	b2d2      	uxtb	r2, r2
 801eaa0:	2aff      	cmp	r2, #255	; 0xff
 801eaa2:	d118      	bne.n	801ead6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801eaa4:	f8d8 2000 	ldr.w	r2, [r8]
 801eaa8:	f06f 0601 	mvn.w	r6, #1
 801eaac:	fb06 f705 	mul.w	r7, r6, r5
 801eab0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801eab4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801eab8:	0956      	lsrs	r6, r2, #5
 801eaba:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801eabe:	ea4c 0606 	orr.w	r6, ip, r6
 801eac2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801eac6:	4316      	orrs	r6, r2
 801eac8:	53e6      	strh	r6, [r4, r7]
 801eaca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801eacc:	4410      	add	r0, r2
 801eace:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ead0:	3d01      	subs	r5, #1
 801ead2:	4411      	add	r1, r2
 801ead4:	e787      	b.n	801e9e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ead6:	2a00      	cmp	r2, #0
 801ead8:	d0f7      	beq.n	801eaca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eada:	f06f 0601 	mvn.w	r6, #1
 801eade:	436e      	muls	r6, r5
 801eae0:	f8d8 c000 	ldr.w	ip, [r8]
 801eae4:	f834 e006 	ldrh.w	lr, [r4, r6]
 801eae8:	9604      	str	r6, [sp, #16]
 801eaea:	fa1f f982 	uxth.w	r9, r2
 801eaee:	ea4f 272e 	mov.w	r7, lr, asr #8
 801eaf2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801eaf6:	43d2      	mvns	r2, r2
 801eaf8:	b2d2      	uxtb	r2, r2
 801eafa:	fb16 f609 	smulbb	r6, r6, r9
 801eafe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801eb02:	fb07 6702 	mla	r7, r7, r2, r6
 801eb06:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801eb0a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801eb0e:	fa5f fc8c 	uxtb.w	ip, ip
 801eb12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801eb16:	fa5f fe8e 	uxtb.w	lr, lr
 801eb1a:	fb1c fc09 	smulbb	ip, ip, r9
 801eb1e:	fb0e cc02 	mla	ip, lr, r2, ip
 801eb22:	b2bf      	uxth	r7, r7
 801eb24:	fb1a fa09 	smulbb	sl, sl, r9
 801eb28:	fa1f fc8c 	uxth.w	ip, ip
 801eb2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801eb30:	fb06 a602 	mla	r6, r6, r2, sl
 801eb34:	1c7a      	adds	r2, r7, #1
 801eb36:	f10c 0a01 	add.w	sl, ip, #1
 801eb3a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801eb3e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801eb42:	b2b6      	uxth	r6, r6
 801eb44:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eb48:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801eb4c:	ea4a 0707 	orr.w	r7, sl, r7
 801eb50:	f106 0a01 	add.w	sl, r6, #1
 801eb54:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801eb58:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eb5c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eb60:	9a04      	ldr	r2, [sp, #16]
 801eb62:	ea47 070a 	orr.w	r7, r7, sl
 801eb66:	52a7      	strh	r7, [r4, r2]
 801eb68:	e7af      	b.n	801eaca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eb6a:	f04f 0e00 	mov.w	lr, #0
 801eb6e:	eba3 020e 	sub.w	r2, r3, lr
 801eb72:	2a00      	cmp	r2, #0
 801eb74:	f77f af3a 	ble.w	801e9ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801eb78:	9e02      	ldr	r6, [sp, #8]
 801eb7a:	1402      	asrs	r2, r0, #16
 801eb7c:	140d      	asrs	r5, r1, #16
 801eb7e:	fb06 2505 	mla	r5, r6, r5, r2
 801eb82:	086a      	lsrs	r2, r5, #1
 801eb84:	9e03      	ldr	r6, [sp, #12]
 801eb86:	5cb2      	ldrb	r2, [r6, r2]
 801eb88:	07ed      	lsls	r5, r5, #31
 801eb8a:	bf54      	ite	pl
 801eb8c:	f002 020f 	andpl.w	r2, r2, #15
 801eb90:	1112      	asrmi	r2, r2, #4
 801eb92:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801eb96:	b2d2      	uxtb	r2, r2
 801eb98:	2aff      	cmp	r2, #255	; 0xff
 801eb9a:	d115      	bne.n	801ebc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801eb9c:	f8d8 5000 	ldr.w	r5, [r8]
 801eba0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801eba4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801eba8:	096a      	lsrs	r2, r5, #5
 801ebaa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ebae:	4332      	orrs	r2, r6
 801ebb0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ebb4:	432a      	orrs	r2, r5
 801ebb6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ebba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ebbc:	4410      	add	r0, r2
 801ebbe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ebc0:	f10e 0e01 	add.w	lr, lr, #1
 801ebc4:	4411      	add	r1, r2
 801ebc6:	e7d2      	b.n	801eb6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ebc8:	2a00      	cmp	r2, #0
 801ebca:	d0f6      	beq.n	801ebba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ebcc:	f8d8 7000 	ldr.w	r7, [r8]
 801ebd0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ebd4:	fa1f f982 	uxth.w	r9, r2
 801ebd8:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ebdc:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ebe0:	43d2      	mvns	r2, r2
 801ebe2:	b2d2      	uxtb	r2, r2
 801ebe4:	fb15 f509 	smulbb	r5, r5, r9
 801ebe8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ebec:	fb06 5602 	mla	r6, r6, r2, r5
 801ebf0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ebf4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ebf8:	b2ff      	uxtb	r7, r7
 801ebfa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ebfe:	fa5f fc8c 	uxtb.w	ip, ip
 801ec02:	fb17 f709 	smulbb	r7, r7, r9
 801ec06:	fb0c 7702 	mla	r7, ip, r2, r7
 801ec0a:	b2b6      	uxth	r6, r6
 801ec0c:	fb1a fa09 	smulbb	sl, sl, r9
 801ec10:	b2bf      	uxth	r7, r7
 801ec12:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ec16:	fb05 a502 	mla	r5, r5, r2, sl
 801ec1a:	1c72      	adds	r2, r6, #1
 801ec1c:	f107 0a01 	add.w	sl, r7, #1
 801ec20:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ec24:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ec28:	b2ad      	uxth	r5, r5
 801ec2a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ec2e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ec32:	ea4a 0606 	orr.w	r6, sl, r6
 801ec36:	f105 0a01 	add.w	sl, r5, #1
 801ec3a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ec3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ec42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ec46:	ea46 060a 	orr.w	r6, r6, sl
 801ec4a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ec4e:	e7b4      	b.n	801ebba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ec50:	b007      	add	sp, #28
 801ec52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec56:	bf00      	nop
 801ec58:	20013864 	.word	0x20013864

0801ec5c <_ZN8touchgfx8LCD16bppD1Ev>:
 801ec5c:	4770      	bx	lr

0801ec5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ec5e:	4770      	bx	lr

0801ec60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ec60:	4770      	bx	lr

0801ec62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ec62:	4770      	bx	lr

0801ec64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ec64:	4770      	bx	lr

0801ec66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ec66:	4770      	bx	lr

0801ec68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ec68:	4770      	bx	lr

0801ec6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ec6a:	4770      	bx	lr

0801ec6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ec6c:	4770      	bx	lr

0801ec6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ec6e:	4770      	bx	lr

0801ec70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ec70:	4770      	bx	lr

0801ec72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ec72:	4770      	bx	lr

0801ec74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ec74:	4770      	bx	lr

0801ec76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ec76:	4770      	bx	lr

0801ec78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ec78:	4770      	bx	lr

0801ec7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ec7a:	4770      	bx	lr

0801ec7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ec7c:	4770      	bx	lr

0801ec7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ec7e:	4770      	bx	lr

0801ec80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ec80:	4770      	bx	lr

0801ec82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ec82:	4770      	bx	lr

0801ec84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ec84:	4770      	bx	lr

0801ec86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ec86:	4770      	bx	lr

0801ec88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ec88:	4770      	bx	lr

0801ec8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ec8a:	4770      	bx	lr

0801ec8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ec8c:	4770      	bx	lr

0801ec8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ec8e:	4770      	bx	lr

0801ec90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ec90:	4770      	bx	lr

0801ec92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ec92:	4770      	bx	lr

0801ec94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ec94:	4770      	bx	lr

0801ec96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ec96:	4770      	bx	lr

0801ec98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ec98:	4770      	bx	lr

0801ec9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ec9a:	4770      	bx	lr

0801ec9c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ec9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eca0:	b088      	sub	sp, #32
 801eca2:	ac08      	add	r4, sp, #32
 801eca4:	4606      	mov	r6, r0
 801eca6:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ecaa:	4620      	mov	r0, r4
 801ecac:	4688      	mov	r8, r1
 801ecae:	4691      	mov	r9, r2
 801ecb0:	f7fd fc62 	bl	801c578 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ecb4:	6833      	ldr	r3, [r6, #0]
 801ecb6:	4605      	mov	r5, r0
 801ecb8:	4620      	mov	r0, r4
 801ecba:	699f      	ldr	r7, [r3, #24]
 801ecbc:	f7fd fb70 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ecc0:	4682      	mov	sl, r0
 801ecc2:	4620      	mov	r0, r4
 801ecc4:	f7fd fba0 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ecc8:	9500      	str	r5, [sp, #0]
 801ecca:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ecce:	464b      	mov	r3, r9
 801ecd0:	a806      	add	r0, sp, #24
 801ecd2:	4642      	mov	r2, r8
 801ecd4:	4631      	mov	r1, r6
 801ecd6:	47b8      	blx	r7
 801ecd8:	4628      	mov	r0, r5
 801ecda:	b008      	add	sp, #32
 801ecdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ece0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ece0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ece4:	2300      	movs	r3, #0
 801ece6:	9300      	str	r3, [sp, #0]
 801ece8:	4b3d      	ldr	r3, [pc, #244]	; (801ede0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ecea:	781b      	ldrb	r3, [r3, #0]
 801ecec:	2b00      	cmp	r3, #0
 801ecee:	d137      	bne.n	801ed60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801ecf0:	4a3c      	ldr	r2, [pc, #240]	; (801ede4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ecf2:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ecf6:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ecfa:	2b00      	cmp	r3, #0
 801ecfc:	d132      	bne.n	801ed64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ecfe:	4b3a      	ldr	r3, [pc, #232]	; (801ede8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ed00:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ed04:	6808      	ldr	r0, [r1, #0]
 801ed06:	6849      	ldr	r1, [r1, #4]
 801ed08:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ed0c:	ac02      	add	r4, sp, #8
 801ed0e:	ab02      	add	r3, sp, #8
 801ed10:	c303      	stmia	r3!, {r0, r1}
 801ed12:	4669      	mov	r1, sp
 801ed14:	4620      	mov	r0, r4
 801ed16:	f7f9 fd83 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ed1a:	4668      	mov	r0, sp
 801ed1c:	f7f9 fd3c 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ed20:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ed24:	f8bd 2000 	ldrh.w	r2, [sp]
 801ed28:	4d30      	ldr	r5, [pc, #192]	; (801edec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ed2a:	4413      	add	r3, r2
 801ed2c:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ed30:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ed34:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ed38:	6828      	ldr	r0, [r5, #0]
 801ed3a:	4413      	add	r3, r2
 801ed3c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ed40:	6803      	ldr	r3, [r0, #0]
 801ed42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ed44:	4798      	blx	r3
 801ed46:	f010 0f01 	tst.w	r0, #1
 801ed4a:	462f      	mov	r7, r5
 801ed4c:	d00c      	beq.n	801ed68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ed4e:	6828      	ldr	r0, [r5, #0]
 801ed50:	6803      	ldr	r3, [r0, #0]
 801ed52:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ed56:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ed58:	4798      	blx	r3
 801ed5a:	b004      	add	sp, #16
 801ed5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ed60:	4a21      	ldr	r2, [pc, #132]	; (801ede8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ed62:	e7c6      	b.n	801ecf2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ed64:	4b1f      	ldr	r3, [pc, #124]	; (801ede4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ed66:	e7cb      	b.n	801ed00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ed68:	6838      	ldr	r0, [r7, #0]
 801ed6a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ed6e:	6803      	ldr	r3, [r0, #0]
 801ed70:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ed74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ed76:	4798      	blx	r3
 801ed78:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ed7c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ed80:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ed84:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ed88:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ed8c:	6838      	ldr	r0, [r7, #0]
 801ed8e:	6803      	ldr	r3, [r0, #0]
 801ed90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed92:	4798      	blx	r3
 801ed94:	4a13      	ldr	r2, [pc, #76]	; (801ede4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ed96:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ed9a:	8813      	ldrh	r3, [r2, #0]
 801ed9c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801eda0:	fb03 1404 	mla	r4, r3, r4, r1
 801eda4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801eda8:	435d      	muls	r5, r3
 801edaa:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801edae:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801edb2:	4691      	mov	r9, r2
 801edb4:	6838      	ldr	r0, [r7, #0]
 801edb6:	42ac      	cmp	r4, r5
 801edb8:	6803      	ldr	r3, [r0, #0]
 801edba:	d20e      	bcs.n	801edda <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801edbc:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801edc0:	4632      	mov	r2, r6
 801edc2:	4643      	mov	r3, r8
 801edc4:	4621      	mov	r1, r4
 801edc6:	47d0      	blx	sl
 801edc8:	f8b9 3000 	ldrh.w	r3, [r9]
 801edcc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801edd0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801edd4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801edd8:	e7ec      	b.n	801edb4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801edda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801eddc:	4798      	blx	r3
 801edde:	e7bc      	b.n	801ed5a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ede0:	2001384c 	.word	0x2001384c
 801ede4:	2001384e 	.word	0x2001384e
 801ede8:	20013850 	.word	0x20013850
 801edec:	20013854 	.word	0x20013854

0801edf0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801edf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edf4:	b08b      	sub	sp, #44	; 0x2c
 801edf6:	460f      	mov	r7, r1
 801edf8:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801edfc:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801ee00:	4616      	mov	r6, r2
 801ee02:	f1bb 0f00 	cmp.w	fp, #0
 801ee06:	d04a      	beq.n	801ee9e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ee08:	6810      	ldr	r0, [r2, #0]
 801ee0a:	6851      	ldr	r1, [r2, #4]
 801ee0c:	ad06      	add	r5, sp, #24
 801ee0e:	c503      	stmia	r5!, {r0, r1}
 801ee10:	6818      	ldr	r0, [r3, #0]
 801ee12:	6859      	ldr	r1, [r3, #4]
 801ee14:	ad08      	add	r5, sp, #32
 801ee16:	c503      	stmia	r5!, {r0, r1}
 801ee18:	a806      	add	r0, sp, #24
 801ee1a:	f7f9 fcbd 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ee1e:	4631      	mov	r1, r6
 801ee20:	a808      	add	r0, sp, #32
 801ee22:	f7f9 fcfd 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ee26:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ee2a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ee2e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801ee32:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801ee36:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801ee3a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801ee3e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801ee42:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801ee46:	4f5f      	ldr	r7, [pc, #380]	; (801efc4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ee48:	440a      	add	r2, r1
 801ee4a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ee4e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ee52:	6838      	ldr	r0, [r7, #0]
 801ee54:	4413      	add	r3, r2
 801ee56:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ee5a:	6803      	ldr	r3, [r0, #0]
 801ee5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ee5e:	4798      	blx	r3
 801ee60:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ee64:	46b9      	mov	r9, r7
 801ee66:	d11d      	bne.n	801eea4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ee68:	b9fc      	cbnz	r4, 801eeaa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ee6a:	f010 0f01 	tst.w	r0, #1
 801ee6e:	d01c      	beq.n	801eeaa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ee70:	f8d9 0000 	ldr.w	r0, [r9]
 801ee74:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ee78:	6801      	ldr	r1, [r0, #0]
 801ee7a:	f8cd b00c 	str.w	fp, [sp, #12]
 801ee7e:	2700      	movs	r7, #0
 801ee80:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ee84:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ee88:	9402      	str	r4, [sp, #8]
 801ee8a:	b2ad      	uxth	r5, r5
 801ee8c:	fa1f f488 	uxth.w	r4, r8
 801ee90:	9501      	str	r5, [sp, #4]
 801ee92:	9400      	str	r4, [sp, #0]
 801ee94:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ee96:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ee9a:	4631      	mov	r1, r6
 801ee9c:	47a0      	blx	r4
 801ee9e:	b00b      	add	sp, #44	; 0x2c
 801eea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eea4:	f010 0f04 	tst.w	r0, #4
 801eea8:	e7e1      	b.n	801ee6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801eeaa:	f8d9 0000 	ldr.w	r0, [r9]
 801eeae:	6803      	ldr	r3, [r0, #0]
 801eeb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eeb2:	4798      	blx	r3
 801eeb4:	4b44      	ldr	r3, [pc, #272]	; (801efc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801eeb6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801eeba:	881a      	ldrh	r2, [r3, #0]
 801eebc:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801eec0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801eec4:	fb02 1404 	mla	r4, r2, r4, r1
 801eec8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801eecc:	469a      	mov	sl, r3
 801eece:	fb05 f502 	mul.w	r5, r5, r2
 801eed2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801eed6:	d059      	beq.n	801ef8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801eed8:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801eedc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801eee0:	fa1f f28b 	uxth.w	r2, fp
 801eee4:	fa1f f989 	uxth.w	r9, r9
 801eee8:	469e      	mov	lr, r3
 801eeea:	42ac      	cmp	r4, r5
 801eeec:	d264      	bcs.n	801efb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801eeee:	eb04 0a07 	add.w	sl, r4, r7
 801eef2:	4554      	cmp	r4, sl
 801eef4:	d23d      	bcs.n	801ef72 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801eef6:	8821      	ldrh	r1, [r4, #0]
 801eef8:	f836 3b02 	ldrh.w	r3, [r6], #2
 801eefc:	1208      	asrs	r0, r1, #8
 801eefe:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ef02:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ef06:	fb10 f009 	smulbb	r0, r0, r9
 801ef0a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801ef0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ef12:	00c9      	lsls	r1, r1, #3
 801ef14:	fb0c 0c02 	mla	ip, ip, r2, r0
 801ef18:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ef1c:	10d8      	asrs	r0, r3, #3
 801ef1e:	b2c9      	uxtb	r1, r1
 801ef20:	00db      	lsls	r3, r3, #3
 801ef22:	fa1f fc8c 	uxth.w	ip, ip
 801ef26:	fb1b fb09 	smulbb	fp, fp, r9
 801ef2a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ef2e:	b2db      	uxtb	r3, r3
 801ef30:	fb11 f109 	smulbb	r1, r1, r9
 801ef34:	fb00 b002 	mla	r0, r0, r2, fp
 801ef38:	fb03 1302 	mla	r3, r3, r2, r1
 801ef3c:	f10c 0b01 	add.w	fp, ip, #1
 801ef40:	b29b      	uxth	r3, r3
 801ef42:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801ef46:	b280      	uxth	r0, r0
 801ef48:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801ef4c:	f103 0c01 	add.w	ip, r3, #1
 801ef50:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ef54:	1c43      	adds	r3, r0, #1
 801ef56:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ef5a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ef5e:	0940      	lsrs	r0, r0, #5
 801ef60:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ef64:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ef68:	ea4c 0c00 	orr.w	ip, ip, r0
 801ef6c:	f824 cb02 	strh.w	ip, [r4], #2
 801ef70:	e7bf      	b.n	801eef2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ef72:	f8be 3000 	ldrh.w	r3, [lr]
 801ef76:	eba3 0308 	sub.w	r3, r3, r8
 801ef7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ef7e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ef82:	eba3 0308 	sub.w	r3, r3, r8
 801ef86:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ef8a:	e7ae      	b.n	801eeea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801ef8c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ef90:	f8d9 0000 	ldr.w	r0, [r9]
 801ef94:	42ac      	cmp	r4, r5
 801ef96:	6803      	ldr	r3, [r0, #0]
 801ef98:	d20e      	bcs.n	801efb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ef9a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ef9e:	4632      	mov	r2, r6
 801efa0:	463b      	mov	r3, r7
 801efa2:	4621      	mov	r1, r4
 801efa4:	47c0      	blx	r8
 801efa6:	f8ba 3000 	ldrh.w	r3, [sl]
 801efaa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801efae:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801efb2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801efb6:	e7eb      	b.n	801ef90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801efb8:	4b02      	ldr	r3, [pc, #8]	; (801efc4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801efba:	6818      	ldr	r0, [r3, #0]
 801efbc:	6803      	ldr	r3, [r0, #0]
 801efbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801efc0:	4798      	blx	r3
 801efc2:	e76c      	b.n	801ee9e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801efc4:	20013854 	.word	0x20013854
 801efc8:	2001384e 	.word	0x2001384e

0801efcc <_ZN8touchgfx8LCD16bppD0Ev>:
 801efcc:	b510      	push	{r4, lr}
 801efce:	2184      	movs	r1, #132	; 0x84
 801efd0:	4604      	mov	r4, r0
 801efd2:	f00d fef2 	bl	802cdba <_ZdlPvj>
 801efd6:	4620      	mov	r0, r4
 801efd8:	bd10      	pop	{r4, pc}

0801efda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801efda:	b510      	push	{r4, lr}
 801efdc:	2104      	movs	r1, #4
 801efde:	4604      	mov	r4, r0
 801efe0:	f00d feeb 	bl	802cdba <_ZdlPvj>
 801efe4:	4620      	mov	r0, r4
 801efe6:	bd10      	pop	{r4, pc}

0801efe8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801efe8:	b510      	push	{r4, lr}
 801efea:	2104      	movs	r1, #4
 801efec:	4604      	mov	r4, r0
 801efee:	f00d fee4 	bl	802cdba <_ZdlPvj>
 801eff2:	4620      	mov	r0, r4
 801eff4:	bd10      	pop	{r4, pc}

0801eff6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801eff6:	b510      	push	{r4, lr}
 801eff8:	f640 0144 	movw	r1, #2116	; 0x844
 801effc:	4604      	mov	r4, r0
 801effe:	f00d fedc 	bl	802cdba <_ZdlPvj>
 801f002:	4620      	mov	r0, r4
 801f004:	bd10      	pop	{r4, pc}

0801f006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f006:	b510      	push	{r4, lr}
 801f008:	2104      	movs	r1, #4
 801f00a:	4604      	mov	r4, r0
 801f00c:	f00d fed5 	bl	802cdba <_ZdlPvj>
 801f010:	4620      	mov	r0, r4
 801f012:	bd10      	pop	{r4, pc}

0801f014 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f014:	b510      	push	{r4, lr}
 801f016:	2104      	movs	r1, #4
 801f018:	4604      	mov	r4, r0
 801f01a:	f00d fece 	bl	802cdba <_ZdlPvj>
 801f01e:	4620      	mov	r0, r4
 801f020:	bd10      	pop	{r4, pc}

0801f022 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f022:	b510      	push	{r4, lr}
 801f024:	2104      	movs	r1, #4
 801f026:	4604      	mov	r4, r0
 801f028:	f00d fec7 	bl	802cdba <_ZdlPvj>
 801f02c:	4620      	mov	r0, r4
 801f02e:	bd10      	pop	{r4, pc}

0801f030 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f030:	b510      	push	{r4, lr}
 801f032:	2104      	movs	r1, #4
 801f034:	4604      	mov	r4, r0
 801f036:	f00d fec0 	bl	802cdba <_ZdlPvj>
 801f03a:	4620      	mov	r0, r4
 801f03c:	bd10      	pop	{r4, pc}

0801f03e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f03e:	b510      	push	{r4, lr}
 801f040:	2104      	movs	r1, #4
 801f042:	4604      	mov	r4, r0
 801f044:	f00d feb9 	bl	802cdba <_ZdlPvj>
 801f048:	4620      	mov	r0, r4
 801f04a:	bd10      	pop	{r4, pc}

0801f04c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801f04c:	b510      	push	{r4, lr}
 801f04e:	2104      	movs	r1, #4
 801f050:	4604      	mov	r4, r0
 801f052:	f00d feb2 	bl	802cdba <_ZdlPvj>
 801f056:	4620      	mov	r0, r4
 801f058:	bd10      	pop	{r4, pc}

0801f05a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f05a:	b510      	push	{r4, lr}
 801f05c:	2104      	movs	r1, #4
 801f05e:	4604      	mov	r4, r0
 801f060:	f00d feab 	bl	802cdba <_ZdlPvj>
 801f064:	4620      	mov	r0, r4
 801f066:	bd10      	pop	{r4, pc}

0801f068 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801f068:	b510      	push	{r4, lr}
 801f06a:	2104      	movs	r1, #4
 801f06c:	4604      	mov	r4, r0
 801f06e:	f00d fea4 	bl	802cdba <_ZdlPvj>
 801f072:	4620      	mov	r0, r4
 801f074:	bd10      	pop	{r4, pc}

0801f076 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f076:	b510      	push	{r4, lr}
 801f078:	2104      	movs	r1, #4
 801f07a:	4604      	mov	r4, r0
 801f07c:	f00d fe9d 	bl	802cdba <_ZdlPvj>
 801f080:	4620      	mov	r0, r4
 801f082:	bd10      	pop	{r4, pc}

0801f084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f084:	b510      	push	{r4, lr}
 801f086:	2104      	movs	r1, #4
 801f088:	4604      	mov	r4, r0
 801f08a:	f00d fe96 	bl	802cdba <_ZdlPvj>
 801f08e:	4620      	mov	r0, r4
 801f090:	bd10      	pop	{r4, pc}

0801f092 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f092:	b510      	push	{r4, lr}
 801f094:	2104      	movs	r1, #4
 801f096:	4604      	mov	r4, r0
 801f098:	f00d fe8f 	bl	802cdba <_ZdlPvj>
 801f09c:	4620      	mov	r0, r4
 801f09e:	bd10      	pop	{r4, pc}

0801f0a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f0a0:	b510      	push	{r4, lr}
 801f0a2:	2104      	movs	r1, #4
 801f0a4:	4604      	mov	r4, r0
 801f0a6:	f00d fe88 	bl	802cdba <_ZdlPvj>
 801f0aa:	4620      	mov	r0, r4
 801f0ac:	bd10      	pop	{r4, pc}

0801f0ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f0ae:	b510      	push	{r4, lr}
 801f0b0:	2104      	movs	r1, #4
 801f0b2:	4604      	mov	r4, r0
 801f0b4:	f00d fe81 	bl	802cdba <_ZdlPvj>
 801f0b8:	4620      	mov	r0, r4
 801f0ba:	bd10      	pop	{r4, pc}

0801f0bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f0bc:	b510      	push	{r4, lr}
 801f0be:	2104      	movs	r1, #4
 801f0c0:	4604      	mov	r4, r0
 801f0c2:	f00d fe7a 	bl	802cdba <_ZdlPvj>
 801f0c6:	4620      	mov	r0, r4
 801f0c8:	bd10      	pop	{r4, pc}

0801f0ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f0ca:	b510      	push	{r4, lr}
 801f0cc:	2104      	movs	r1, #4
 801f0ce:	4604      	mov	r4, r0
 801f0d0:	f00d fe73 	bl	802cdba <_ZdlPvj>
 801f0d4:	4620      	mov	r0, r4
 801f0d6:	bd10      	pop	{r4, pc}

0801f0d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f0d8:	b510      	push	{r4, lr}
 801f0da:	2104      	movs	r1, #4
 801f0dc:	4604      	mov	r4, r0
 801f0de:	f00d fe6c 	bl	802cdba <_ZdlPvj>
 801f0e2:	4620      	mov	r0, r4
 801f0e4:	bd10      	pop	{r4, pc}

0801f0e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f0e6:	b510      	push	{r4, lr}
 801f0e8:	2104      	movs	r1, #4
 801f0ea:	4604      	mov	r4, r0
 801f0ec:	f00d fe65 	bl	802cdba <_ZdlPvj>
 801f0f0:	4620      	mov	r0, r4
 801f0f2:	bd10      	pop	{r4, pc}

0801f0f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f0f4:	b510      	push	{r4, lr}
 801f0f6:	2104      	movs	r1, #4
 801f0f8:	4604      	mov	r4, r0
 801f0fa:	f00d fe5e 	bl	802cdba <_ZdlPvj>
 801f0fe:	4620      	mov	r0, r4
 801f100:	bd10      	pop	{r4, pc}

0801f102 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f102:	b510      	push	{r4, lr}
 801f104:	2104      	movs	r1, #4
 801f106:	4604      	mov	r4, r0
 801f108:	f00d fe57 	bl	802cdba <_ZdlPvj>
 801f10c:	4620      	mov	r0, r4
 801f10e:	bd10      	pop	{r4, pc}

0801f110 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f110:	b510      	push	{r4, lr}
 801f112:	2104      	movs	r1, #4
 801f114:	4604      	mov	r4, r0
 801f116:	f00d fe50 	bl	802cdba <_ZdlPvj>
 801f11a:	4620      	mov	r0, r4
 801f11c:	bd10      	pop	{r4, pc}

0801f11e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f11e:	b510      	push	{r4, lr}
 801f120:	2104      	movs	r1, #4
 801f122:	4604      	mov	r4, r0
 801f124:	f00d fe49 	bl	802cdba <_ZdlPvj>
 801f128:	4620      	mov	r0, r4
 801f12a:	bd10      	pop	{r4, pc}

0801f12c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f12c:	b510      	push	{r4, lr}
 801f12e:	2104      	movs	r1, #4
 801f130:	4604      	mov	r4, r0
 801f132:	f00d fe42 	bl	802cdba <_ZdlPvj>
 801f136:	4620      	mov	r0, r4
 801f138:	bd10      	pop	{r4, pc}

0801f13a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f13a:	b510      	push	{r4, lr}
 801f13c:	2104      	movs	r1, #4
 801f13e:	4604      	mov	r4, r0
 801f140:	f00d fe3b 	bl	802cdba <_ZdlPvj>
 801f144:	4620      	mov	r0, r4
 801f146:	bd10      	pop	{r4, pc}

0801f148 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f148:	b510      	push	{r4, lr}
 801f14a:	2104      	movs	r1, #4
 801f14c:	4604      	mov	r4, r0
 801f14e:	f00d fe34 	bl	802cdba <_ZdlPvj>
 801f152:	4620      	mov	r0, r4
 801f154:	bd10      	pop	{r4, pc}

0801f156 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801f156:	b510      	push	{r4, lr}
 801f158:	2104      	movs	r1, #4
 801f15a:	4604      	mov	r4, r0
 801f15c:	f00d fe2d 	bl	802cdba <_ZdlPvj>
 801f160:	4620      	mov	r0, r4
 801f162:	bd10      	pop	{r4, pc}

0801f164 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f164:	b510      	push	{r4, lr}
 801f166:	2104      	movs	r1, #4
 801f168:	4604      	mov	r4, r0
 801f16a:	f00d fe26 	bl	802cdba <_ZdlPvj>
 801f16e:	4620      	mov	r0, r4
 801f170:	bd10      	pop	{r4, pc}

0801f172 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f172:	b510      	push	{r4, lr}
 801f174:	2104      	movs	r1, #4
 801f176:	4604      	mov	r4, r0
 801f178:	f00d fe1f 	bl	802cdba <_ZdlPvj>
 801f17c:	4620      	mov	r0, r4
 801f17e:	bd10      	pop	{r4, pc}

0801f180 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f180:	b510      	push	{r4, lr}
 801f182:	2104      	movs	r1, #4
 801f184:	4604      	mov	r4, r0
 801f186:	f00d fe18 	bl	802cdba <_ZdlPvj>
 801f18a:	4620      	mov	r0, r4
 801f18c:	bd10      	pop	{r4, pc}
	...

0801f190 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f194:	b08f      	sub	sp, #60	; 0x3c
 801f196:	461c      	mov	r4, r3
 801f198:	9205      	str	r2, [sp, #20]
 801f19a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f19e:	9100      	str	r1, [sp, #0]
 801f1a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f1a2:	9201      	str	r2, [sp, #4]
 801f1a4:	2a00      	cmp	r2, #0
 801f1a6:	f000 8115 	beq.w	801f3d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801f1aa:	6820      	ldr	r0, [r4, #0]
 801f1ac:	6861      	ldr	r1, [r4, #4]
 801f1ae:	aa0a      	add	r2, sp, #40	; 0x28
 801f1b0:	c203      	stmia	r2!, {r0, r1}
 801f1b2:	6818      	ldr	r0, [r3, #0]
 801f1b4:	6859      	ldr	r1, [r3, #4]
 801f1b6:	aa0c      	add	r2, sp, #48	; 0x30
 801f1b8:	c203      	stmia	r2!, {r0, r1}
 801f1ba:	a80a      	add	r0, sp, #40	; 0x28
 801f1bc:	f7f9 faec 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f1c0:	4621      	mov	r1, r4
 801f1c2:	a80c      	add	r0, sp, #48	; 0x30
 801f1c4:	f7f9 fb2c 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f1c8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f1cc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f1d0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f1d4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f1d8:	bfde      	ittt	le
 801f1da:	b2b3      	uxthle	r3, r6
 801f1dc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f1e0:	fb92 f3f3 	sdivle	r3, r2, r3
 801f1e4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f1e8:	bfc8      	it	gt
 801f1ea:	2301      	movgt	r3, #1
 801f1ec:	fb92 f1f3 	sdiv	r1, r2, r3
 801f1f0:	fa1f fc81 	uxth.w	ip, r1
 801f1f4:	fb0c 2413 	mls	r4, ip, r3, r2
 801f1f8:	fb14 f406 	smulbb	r4, r4, r6
 801f1fc:	441d      	add	r5, r3
 801f1fe:	4404      	add	r4, r0
 801f200:	4661      	mov	r1, ip
 801f202:	3d01      	subs	r5, #1
 801f204:	b2a4      	uxth	r4, r4
 801f206:	fb95 f5f3 	sdiv	r5, r5, r3
 801f20a:	b131      	cbz	r1, 801f21a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801f20c:	9b05      	ldr	r3, [sp, #20]
 801f20e:	9900      	ldr	r1, [sp, #0]
 801f210:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f214:	ba1b      	rev	r3, r3
 801f216:	4419      	add	r1, r3
 801f218:	9100      	str	r1, [sp, #0]
 801f21a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f21e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801f222:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f226:	4418      	add	r0, r3
 801f228:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f22c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f230:	441a      	add	r2, r3
 801f232:	4b6a      	ldr	r3, [pc, #424]	; (801f3dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f234:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f238:	6818      	ldr	r0, [r3, #0]
 801f23a:	6803      	ldr	r3, [r0, #0]
 801f23c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f23e:	4798      	blx	r3
 801f240:	4967      	ldr	r1, [pc, #412]	; (801f3e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801f242:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f246:	880b      	ldrh	r3, [r1, #0]
 801f248:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f24c:	9109      	str	r1, [sp, #36]	; 0x24
 801f24e:	fb03 c202 	mla	r2, r3, r2, ip
 801f252:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f256:	4373      	muls	r3, r6
 801f258:	b2ad      	uxth	r5, r5
 801f25a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f25e:	00ad      	lsls	r5, r5, #2
 801f260:	9306      	str	r3, [sp, #24]
 801f262:	1d2b      	adds	r3, r5, #4
 801f264:	9307      	str	r3, [sp, #28]
 801f266:	9b01      	ldr	r3, [sp, #4]
 801f268:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f26c:	9103      	str	r1, [sp, #12]
 801f26e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801f272:	2c00      	cmp	r4, #0
 801f274:	bf0c      	ite	eq
 801f276:	46c6      	moveq	lr, r8
 801f278:	f04f 0e00 	movne.w	lr, #0
 801f27c:	2300      	movs	r3, #0
 801f27e:	b292      	uxth	r2, r2
 801f280:	fa1f fe8e 	uxth.w	lr, lr
 801f284:	9302      	str	r3, [sp, #8]
 801f286:	9204      	str	r2, [sp, #16]
 801f288:	9a06      	ldr	r2, [sp, #24]
 801f28a:	4282      	cmp	r2, r0
 801f28c:	f240 809d 	bls.w	801f3ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801f290:	b963      	cbnz	r3, 801f2ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f292:	9b00      	ldr	r3, [sp, #0]
 801f294:	781a      	ldrb	r2, [r3, #0]
 801f296:	0993      	lsrs	r3, r2, #6
 801f298:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f29c:	9202      	str	r2, [sp, #8]
 801f29e:	1e5a      	subs	r2, r3, #1
 801f2a0:	2a02      	cmp	r2, #2
 801f2a2:	d815      	bhi.n	801f2d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801f2a4:	9a00      	ldr	r2, [sp, #0]
 801f2a6:	3201      	adds	r2, #1
 801f2a8:	9200      	str	r2, [sp, #0]
 801f2aa:	b29b      	uxth	r3, r3
 801f2ac:	b1b4      	cbz	r4, 801f2dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801f2ae:	429c      	cmp	r4, r3
 801f2b0:	bf95      	itete	ls
 801f2b2:	1b1c      	subls	r4, r3, r4
 801f2b4:	1ae4      	subhi	r4, r4, r3
 801f2b6:	fa1f fa84 	uxthls.w	sl, r4
 801f2ba:	b2a4      	uxthhi	r4, r4
 801f2bc:	bf87      	ittee	hi
 801f2be:	4671      	movhi	r1, lr
 801f2c0:	f04f 0a00 	movhi.w	sl, #0
 801f2c4:	fa1f f188 	uxthls.w	r1, r8
 801f2c8:	2400      	movls	r4, #0
 801f2ca:	4653      	mov	r3, sl
 801f2cc:	468e      	mov	lr, r1
 801f2ce:	e7db      	b.n	801f288 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801f2d0:	9a00      	ldr	r2, [sp, #0]
 801f2d2:	9b00      	ldr	r3, [sp, #0]
 801f2d4:	3202      	adds	r2, #2
 801f2d6:	785b      	ldrb	r3, [r3, #1]
 801f2d8:	9200      	str	r2, [sp, #0]
 801f2da:	e7e7      	b.n	801f2ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f2dc:	2202      	movs	r2, #2
 801f2de:	4615      	mov	r5, r2
 801f2e0:	9907      	ldr	r1, [sp, #28]
 801f2e2:	9a02      	ldr	r2, [sp, #8]
 801f2e4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f2e8:	9905      	ldr	r1, [sp, #20]
 801f2ea:	4573      	cmp	r3, lr
 801f2ec:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f2f0:	9a01      	ldr	r2, [sp, #4]
 801f2f2:	bf2b      	itete	cs
 801f2f4:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f2f8:	ebae 0103 	subcc.w	r1, lr, r3
 801f2fc:	46f1      	movcs	r9, lr
 801f2fe:	4699      	movcc	r9, r3
 801f300:	bf27      	ittee	cs
 801f302:	fa1f fa8a 	uxthcs.w	sl, sl
 801f306:	4621      	movcs	r1, r4
 801f308:	b289      	uxthcc	r1, r1
 801f30a:	46a2      	movcc	sl, r4
 801f30c:	2aff      	cmp	r2, #255	; 0xff
 801f30e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f312:	d105      	bne.n	801f320 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f314:	4481      	add	r9, r0
 801f316:	4581      	cmp	r9, r0
 801f318:	d045      	beq.n	801f3a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f31a:	f820 cb02 	strh.w	ip, [r0], #2
 801f31e:	e7fa      	b.n	801f316 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f320:	9d03      	ldr	r5, [sp, #12]
 801f322:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f326:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f32a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f32e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f332:	436a      	muls	r2, r5
 801f334:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f338:	fa5f fc8c 	uxtb.w	ip, ip
 801f33c:	9208      	str	r2, [sp, #32]
 801f33e:	fb0b fb05 	mul.w	fp, fp, r5
 801f342:	fb0c fc05 	mul.w	ip, ip, r5
 801f346:	4481      	add	r9, r0
 801f348:	4581      	cmp	r9, r0
 801f34a:	d02c      	beq.n	801f3a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f34c:	8802      	ldrh	r2, [r0, #0]
 801f34e:	9d04      	ldr	r5, [sp, #16]
 801f350:	9f04      	ldr	r7, [sp, #16]
 801f352:	1216      	asrs	r6, r2, #8
 801f354:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f358:	fb16 f605 	smulbb	r6, r6, r5
 801f35c:	9d08      	ldr	r5, [sp, #32]
 801f35e:	442e      	add	r6, r5
 801f360:	10d5      	asrs	r5, r2, #3
 801f362:	00d2      	lsls	r2, r2, #3
 801f364:	b2d2      	uxtb	r2, r2
 801f366:	fb12 f207 	smulbb	r2, r2, r7
 801f36a:	b2b6      	uxth	r6, r6
 801f36c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f370:	4462      	add	r2, ip
 801f372:	fb15 f507 	smulbb	r5, r5, r7
 801f376:	b292      	uxth	r2, r2
 801f378:	1c77      	adds	r7, r6, #1
 801f37a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f37e:	1c57      	adds	r7, r2, #1
 801f380:	445d      	add	r5, fp
 801f382:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f386:	b2ad      	uxth	r5, r5
 801f388:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f38c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f390:	4316      	orrs	r6, r2
 801f392:	1c6a      	adds	r2, r5, #1
 801f394:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f398:	096d      	lsrs	r5, r5, #5
 801f39a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f39e:	432e      	orrs	r6, r5
 801f3a0:	f820 6b02 	strh.w	r6, [r0], #2
 801f3a4:	e7d0      	b.n	801f348 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f3a6:	4573      	cmp	r3, lr
 801f3a8:	d38f      	bcc.n	801f2ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f3aa:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f3ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f3b0:	fa1f f188 	uxth.w	r1, r8
 801f3b4:	1a64      	subs	r4, r4, r1
 801f3b6:	881b      	ldrh	r3, [r3, #0]
 801f3b8:	b2a4      	uxth	r4, r4
 801f3ba:	2c00      	cmp	r4, #0
 801f3bc:	eba3 0308 	sub.w	r3, r3, r8
 801f3c0:	bf18      	it	ne
 801f3c2:	2100      	movne	r1, #0
 801f3c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f3c8:	e77f      	b.n	801f2ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f3ca:	4b04      	ldr	r3, [pc, #16]	; (801f3dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f3cc:	6818      	ldr	r0, [r3, #0]
 801f3ce:	6803      	ldr	r3, [r0, #0]
 801f3d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f3d2:	4798      	blx	r3
 801f3d4:	b00f      	add	sp, #60	; 0x3c
 801f3d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f3da:	bf00      	nop
 801f3dc:	20013854 	.word	0x20013854
 801f3e0:	2001384e 	.word	0x2001384e

0801f3e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f3e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3e8:	b09f      	sub	sp, #124	; 0x7c
 801f3ea:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f3ee:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f3f2:	9209      	str	r2, [sp, #36]	; 0x24
 801f3f4:	461d      	mov	r5, r3
 801f3f6:	4604      	mov	r4, r0
 801f3f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f3fa:	2a00      	cmp	r2, #0
 801f3fc:	f000 81eb 	beq.w	801f7d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f400:	6828      	ldr	r0, [r5, #0]
 801f402:	6869      	ldr	r1, [r5, #4]
 801f404:	aa1a      	add	r2, sp, #104	; 0x68
 801f406:	c203      	stmia	r2!, {r0, r1}
 801f408:	6818      	ldr	r0, [r3, #0]
 801f40a:	6859      	ldr	r1, [r3, #4]
 801f40c:	aa1c      	add	r2, sp, #112	; 0x70
 801f40e:	c203      	stmia	r2!, {r0, r1}
 801f410:	a81a      	add	r0, sp, #104	; 0x68
 801f412:	f7f9 f9c1 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f416:	4629      	mov	r1, r5
 801f418:	a81c      	add	r0, sp, #112	; 0x70
 801f41a:	f7f9 fa01 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f41e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f422:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f426:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f42a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f42e:	bfd7      	itett	le
 801f430:	b29a      	uxthle	r2, r3
 801f432:	2201      	movgt	r2, #1
 801f434:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f438:	fb91 f2f2 	sdivle	r2, r1, r2
 801f43c:	9202      	str	r2, [sp, #8]
 801f43e:	9802      	ldr	r0, [sp, #8]
 801f440:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f444:	fb92 f0f0 	sdiv	r0, r2, r0
 801f448:	b280      	uxth	r0, r0
 801f44a:	9010      	str	r0, [sp, #64]	; 0x40
 801f44c:	9902      	ldr	r1, [sp, #8]
 801f44e:	9802      	ldr	r0, [sp, #8]
 801f450:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f452:	4488      	add	r8, r1
 801f454:	fb05 2510 	mls	r5, r5, r0, r2
 801f458:	fb15 f503 	smulbb	r5, r5, r3
 801f45c:	f108 38ff 	add.w	r8, r8, #4294967295
 801f460:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f464:	fb98 f8f1 	sdiv	r8, r8, r1
 801f468:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f46c:	440d      	add	r5, r1
 801f46e:	4419      	add	r1, r3
 801f470:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f474:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f478:	441a      	add	r2, r3
 801f47a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f47e:	9304      	str	r3, [sp, #16]
 801f480:	4b95      	ldr	r3, [pc, #596]	; (801f6d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f482:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f486:	6818      	ldr	r0, [r3, #0]
 801f488:	6803      	ldr	r3, [r0, #0]
 801f48a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f48c:	4798      	blx	r3
 801f48e:	4b93      	ldr	r3, [pc, #588]	; (801f6dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f490:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f494:	881a      	ldrh	r2, [r3, #0]
 801f496:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f49a:	9318      	str	r3, [sp, #96]	; 0x60
 801f49c:	fb02 7101 	mla	r1, r2, r1, r7
 801f4a0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f4a4:	4356      	muls	r6, r2
 801f4a6:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801f4aa:	f108 0801 	add.w	r8, r8, #1
 801f4ae:	920a      	str	r2, [sp, #40]	; 0x28
 801f4b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f4b2:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f4b6:	930f      	str	r3, [sp, #60]	; 0x3c
 801f4b8:	fa1f f888 	uxth.w	r8, r8
 801f4bc:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801f4c0:	f108 0204 	add.w	r2, r8, #4
 801f4c4:	9211      	str	r2, [sp, #68]	; 0x44
 801f4c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f4c8:	4b85      	ldr	r3, [pc, #532]	; (801f6e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f4ca:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801f4ce:	b2ad      	uxth	r5, r5
 801f4d0:	9215      	str	r2, [sp, #84]	; 0x54
 801f4d2:	2d00      	cmp	r5, #0
 801f4d4:	9a04      	ldr	r2, [sp, #16]
 801f4d6:	f04f 0100 	mov.w	r1, #0
 801f4da:	bf18      	it	ne
 801f4dc:	2200      	movne	r2, #0
 801f4de:	1b1b      	subs	r3, r3, r4
 801f4e0:	b292      	uxth	r2, r2
 801f4e2:	910d      	str	r1, [sp, #52]	; 0x34
 801f4e4:	9319      	str	r3, [sp, #100]	; 0x64
 801f4e6:	9910      	ldr	r1, [sp, #64]	; 0x40
 801f4e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f4ea:	fa11 f383 	uxtah	r3, r1, r3
 801f4ee:	9914      	ldr	r1, [sp, #80]	; 0x50
 801f4f0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f4f4:	3304      	adds	r3, #4
 801f4f6:	9306      	str	r3, [sp, #24]
 801f4f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f4fa:	4283      	cmp	r3, r0
 801f4fc:	f240 8166 	bls.w	801f7cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801f500:	9902      	ldr	r1, [sp, #8]
 801f502:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801f506:	fbb5 f3f3 	udiv	r3, r5, r3
 801f50a:	1acb      	subs	r3, r1, r3
 801f50c:	b29b      	uxth	r3, r3
 801f50e:	9316      	str	r3, [sp, #88]	; 0x58
 801f510:	9b06      	ldr	r3, [sp, #24]
 801f512:	9e06      	ldr	r6, [sp, #24]
 801f514:	7859      	ldrb	r1, [r3, #1]
 801f516:	789b      	ldrb	r3, [r3, #2]
 801f518:	7836      	ldrb	r6, [r6, #0]
 801f51a:	9612      	str	r6, [sp, #72]	; 0x48
 801f51c:	021b      	lsls	r3, r3, #8
 801f51e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801f522:	9906      	ldr	r1, [sp, #24]
 801f524:	78c9      	ldrb	r1, [r1, #3]
 801f526:	430b      	orrs	r3, r1
 801f528:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801f52a:	3601      	adds	r6, #1
 801f52c:	4419      	add	r1, r3
 801f52e:	9605      	str	r6, [sp, #20]
 801f530:	1c4e      	adds	r6, r1, #1
 801f532:	9603      	str	r6, [sp, #12]
 801f534:	7849      	ldrb	r1, [r1, #1]
 801f536:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f538:	0209      	lsls	r1, r1, #8
 801f53a:	5cf3      	ldrb	r3, [r6, r3]
 801f53c:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801f540:	4319      	orrs	r1, r3
 801f542:	b28b      	uxth	r3, r1
 801f544:	930c      	str	r3, [sp, #48]	; 0x30
 801f546:	2300      	movs	r3, #0
 801f548:	f04f 0a01 	mov.w	sl, #1
 801f54c:	9307      	str	r3, [sp, #28]
 801f54e:	469c      	mov	ip, r3
 801f550:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801f554:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801f558:	46d3      	mov	fp, sl
 801f55a:	4657      	mov	r7, sl
 801f55c:	930e      	str	r3, [sp, #56]	; 0x38
 801f55e:	2d00      	cmp	r5, #0
 801f560:	d07e      	beq.n	801f660 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801f562:	42af      	cmp	r7, r5
 801f564:	d26e      	bcs.n	801f644 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801f566:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f568:	9201      	str	r2, [sp, #4]
 801f56a:	1bed      	subs	r5, r5, r7
 801f56c:	4283      	cmp	r3, r0
 801f56e:	b2ad      	uxth	r5, r5
 801f570:	d802      	bhi.n	801f578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801f572:	e073      	b.n	801f65c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801f574:	2b00      	cmp	r3, #0
 801f576:	d15f      	bne.n	801f638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801f578:	9b03      	ldr	r3, [sp, #12]
 801f57a:	785b      	ldrb	r3, [r3, #1]
 801f57c:	f1cb 0207 	rsb	r2, fp, #7
 801f580:	4093      	lsls	r3, r2
 801f582:	005b      	lsls	r3, r3, #1
 801f584:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801f588:	9b03      	ldr	r3, [sp, #12]
 801f58a:	781b      	ldrb	r3, [r3, #0]
 801f58c:	fa43 f30b 	asr.w	r3, r3, fp
 801f590:	b2db      	uxtb	r3, r3
 801f592:	4313      	orrs	r3, r2
 801f594:	f10b 0201 	add.w	r2, fp, #1
 801f598:	fa5f fb82 	uxtb.w	fp, r2
 801f59c:	9a03      	ldr	r2, [sp, #12]
 801f59e:	f1bb 0f08 	cmp.w	fp, #8
 801f5a2:	bf15      	itete	ne
 801f5a4:	3201      	addne	r2, #1
 801f5a6:	3202      	addeq	r2, #2
 801f5a8:	9203      	strne	r2, [sp, #12]
 801f5aa:	9203      	streq	r2, [sp, #12]
 801f5ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f5ae:	b29f      	uxth	r7, r3
 801f5b0:	bf08      	it	eq
 801f5b2:	f04f 0b00 	moveq.w	fp, #0
 801f5b6:	42ba      	cmp	r2, r7
 801f5b8:	d309      	bcc.n	801f5ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801f5ba:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801f5be:	2301      	movs	r3, #1
 801f5c0:	9a05      	ldr	r2, [sp, #20]
 801f5c2:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801f5c6:	d30e      	bcc.n	801f5e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801f5c8:	469a      	mov	sl, r3
 801f5ca:	2600      	movs	r6, #0
 801f5cc:	e035      	b.n	801f63a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801f5ce:	9b05      	ldr	r3, [sp, #20]
 801f5d0:	429f      	cmp	r7, r3
 801f5d2:	d318      	bcc.n	801f606 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801f5d4:	eb04 030a 	add.w	r3, r4, sl
 801f5d8:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801f5dc:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801f5e0:	f10a 0301 	add.w	r3, sl, #1
 801f5e4:	b29b      	uxth	r3, r3
 801f5e6:	9a05      	ldr	r2, [sp, #20]
 801f5e8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801f5ec:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f5ee:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f5f2:	7116      	strb	r6, [r2, #4]
 801f5f4:	f10a 0601 	add.w	r6, sl, #1
 801f5f8:	80d1      	strh	r1, [r2, #6]
 801f5fa:	7156      	strb	r6, [r2, #5]
 801f5fc:	9a05      	ldr	r2, [sp, #20]
 801f5fe:	3201      	adds	r2, #1
 801f600:	b292      	uxth	r2, r2
 801f602:	9205      	str	r2, [sp, #20]
 801f604:	e7e0      	b.n	801f5c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801f606:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801f60a:	463a      	mov	r2, r7
 801f60c:	795b      	ldrb	r3, [r3, #5]
 801f60e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801f612:	4426      	add	r6, r4
 801f614:	9919      	ldr	r1, [sp, #100]	; 0x64
 801f616:	eb01 0c06 	add.w	ip, r1, r6
 801f61a:	f1bc 0f00 	cmp.w	ip, #0
 801f61e:	dd07      	ble.n	801f630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801f620:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f624:	f892 c004 	ldrb.w	ip, [r2, #4]
 801f628:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801f62c:	88d2      	ldrh	r2, [r2, #6]
 801f62e:	e7f1      	b.n	801f614 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801f630:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801f634:	b29b      	uxth	r3, r3
 801f636:	e7c3      	b.n	801f5c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801f638:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f63a:	970c      	str	r7, [sp, #48]	; 0x30
 801f63c:	9a01      	ldr	r2, [sp, #4]
 801f63e:	46b4      	mov	ip, r6
 801f640:	461f      	mov	r7, r3
 801f642:	e78c      	b.n	801f55e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801f644:	1b7b      	subs	r3, r7, r5
 801f646:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f64a:	9201      	str	r2, [sp, #4]
 801f64c:	eb0c 0605 	add.w	r6, ip, r5
 801f650:	b29b      	uxth	r3, r3
 801f652:	b2b6      	uxth	r6, r6
 801f654:	2500      	movs	r5, #0
 801f656:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f658:	4282      	cmp	r2, r0
 801f65a:	d88b      	bhi.n	801f574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f65c:	9a01      	ldr	r2, [sp, #4]
 801f65e:	e74b      	b.n	801f4f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801f660:	4297      	cmp	r7, r2
 801f662:	d332      	bcc.n	801f6ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801f664:	1abb      	subs	r3, r7, r2
 801f666:	b29b      	uxth	r3, r3
 801f668:	9208      	str	r2, [sp, #32]
 801f66a:	9501      	str	r5, [sp, #4]
 801f66c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f66e:	29ff      	cmp	r1, #255	; 0xff
 801f670:	9908      	ldr	r1, [sp, #32]
 801f672:	eb0c 0601 	add.w	r6, ip, r1
 801f676:	d135      	bne.n	801f6e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801f678:	f1a0 0e02 	sub.w	lr, r0, #2
 801f67c:	b2b6      	uxth	r6, r6
 801f67e:	45b4      	cmp	ip, r6
 801f680:	f040 808c 	bne.w	801f79c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801f684:	9908      	ldr	r1, [sp, #32]
 801f686:	4297      	cmp	r7, r2
 801f688:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f68c:	d3e2      	bcc.n	801f654 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801f68e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f690:	9904      	ldr	r1, [sp, #16]
 801f692:	8812      	ldrh	r2, [r2, #0]
 801f694:	1a52      	subs	r2, r2, r1
 801f696:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f69a:	9a07      	ldr	r2, [sp, #28]
 801f69c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801f69e:	3201      	adds	r2, #1
 801f6a0:	428a      	cmp	r2, r1
 801f6a2:	9207      	str	r2, [sp, #28]
 801f6a4:	f040 8087 	bne.w	801f7b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801f6a8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801f6ac:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801f6b0:	9b04      	ldr	r3, [sp, #16]
 801f6b2:	1bed      	subs	r5, r5, r7
 801f6b4:	b2ad      	uxth	r5, r5
 801f6b6:	2d00      	cmp	r5, #0
 801f6b8:	bf08      	it	eq
 801f6ba:	461a      	moveq	r2, r3
 801f6bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f6be:	bf18      	it	ne
 801f6c0:	2200      	movne	r2, #0
 801f6c2:	3301      	adds	r3, #1
 801f6c4:	930d      	str	r3, [sp, #52]	; 0x34
 801f6c6:	b292      	uxth	r2, r2
 801f6c8:	e70d      	b.n	801f4e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801f6ca:	1bd1      	subs	r1, r2, r7
 801f6cc:	b28b      	uxth	r3, r1
 801f6ce:	9301      	str	r3, [sp, #4]
 801f6d0:	9708      	str	r7, [sp, #32]
 801f6d2:	462b      	mov	r3, r5
 801f6d4:	e7ca      	b.n	801f66c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801f6d6:	bf00      	nop
 801f6d8:	20013854 	.word	0x20013854
 801f6dc:	2001384e 	.word	0x2001384e
 801f6e0:	fffff7fb 	.word	0xfffff7fb
 801f6e4:	b2b6      	uxth	r6, r6
 801f6e6:	900b      	str	r0, [sp, #44]	; 0x2c
 801f6e8:	45b4      	cmp	ip, r6
 801f6ea:	d0cb      	beq.n	801f684 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801f6ec:	f10c 0101 	add.w	r1, ip, #1
 801f6f0:	44a4      	add	ip, r4
 801f6f2:	9117      	str	r1, [sp, #92]	; 0x5c
 801f6f4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f6f8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f6fa:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f6fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f700:	f8b1 c000 	ldrh.w	ip, [r1]
 801f704:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f706:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801f70a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f70e:	fb1e fe01 	smulbb	lr, lr, r1
 801f712:	ea4f 2825 	mov.w	r8, r5, asr #8
 801f716:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f718:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f71c:	fb08 e801 	mla	r8, r8, r1, lr
 801f720:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801f724:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f726:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f72a:	fb19 f901 	smulbb	r9, r9, r1
 801f72e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801f732:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f734:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f738:	fb0e 9e01 	mla	lr, lr, r1, r9
 801f73c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f740:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f742:	fa5f fc8c 	uxtb.w	ip, ip
 801f746:	fb1c fc01 	smulbb	ip, ip, r1
 801f74a:	00ed      	lsls	r5, r5, #3
 801f74c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f74e:	b2ed      	uxtb	r5, r5
 801f750:	fb05 c501 	mla	r5, r5, r1, ip
 801f754:	fa1f f888 	uxth.w	r8, r8
 801f758:	fa1f fe8e 	uxth.w	lr, lr
 801f75c:	b2ad      	uxth	r5, r5
 801f75e:	f108 0c01 	add.w	ip, r8, #1
 801f762:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801f766:	f10e 0901 	add.w	r9, lr, #1
 801f76a:	f105 0c01 	add.w	ip, r5, #1
 801f76e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801f772:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801f776:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f77a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f77e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f782:	ea4c 0808 	orr.w	r8, ip, r8
 801f786:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f788:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801f78c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f790:	ea48 0809 	orr.w	r8, r8, r9
 801f794:	f821 8b02 	strh.w	r8, [r1], #2
 801f798:	910b      	str	r1, [sp, #44]	; 0x2c
 801f79a:	e7a5      	b.n	801f6e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801f79c:	f10c 0801 	add.w	r8, ip, #1
 801f7a0:	44a4      	add	ip, r4
 801f7a2:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f7a4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f7a8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f7ac:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801f7b0:	fa1f fc88 	uxth.w	ip, r8
 801f7b4:	e763      	b.n	801f67e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801f7b6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f7ba:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801f7be:	1aad      	subs	r5, r5, r2
 801f7c0:	b2ad      	uxth	r5, r5
 801f7c2:	2d00      	cmp	r5, #0
 801f7c4:	bf18      	it	ne
 801f7c6:	2200      	movne	r2, #0
 801f7c8:	9201      	str	r2, [sp, #4]
 801f7ca:	e744      	b.n	801f656 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801f7cc:	4b03      	ldr	r3, [pc, #12]	; (801f7dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801f7ce:	6818      	ldr	r0, [r3, #0]
 801f7d0:	6803      	ldr	r3, [r0, #0]
 801f7d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f7d4:	4798      	blx	r3
 801f7d6:	b01f      	add	sp, #124	; 0x7c
 801f7d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f7dc:	20013854 	.word	0x20013854

0801f7e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f7e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7e4:	b08f      	sub	sp, #60	; 0x3c
 801f7e6:	461c      	mov	r4, r3
 801f7e8:	9203      	str	r2, [sp, #12]
 801f7ea:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f7ee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f7f0:	9202      	str	r2, [sp, #8]
 801f7f2:	460f      	mov	r7, r1
 801f7f4:	2a00      	cmp	r2, #0
 801f7f6:	f000 8128 	beq.w	801fa4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801f7fa:	6820      	ldr	r0, [r4, #0]
 801f7fc:	6861      	ldr	r1, [r4, #4]
 801f7fe:	aa0a      	add	r2, sp, #40	; 0x28
 801f800:	c203      	stmia	r2!, {r0, r1}
 801f802:	6818      	ldr	r0, [r3, #0]
 801f804:	6859      	ldr	r1, [r3, #4]
 801f806:	aa0c      	add	r2, sp, #48	; 0x30
 801f808:	c203      	stmia	r2!, {r0, r1}
 801f80a:	a80a      	add	r0, sp, #40	; 0x28
 801f80c:	f7f8 ffc4 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f810:	4621      	mov	r1, r4
 801f812:	a80c      	add	r0, sp, #48	; 0x30
 801f814:	f7f9 f804 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f818:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f81c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f820:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f824:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f828:	bfde      	ittt	le
 801f82a:	b2b3      	uxthle	r3, r6
 801f82c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f830:	fb92 f3f3 	sdivle	r3, r2, r3
 801f834:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f838:	bfc8      	it	gt
 801f83a:	2301      	movgt	r3, #1
 801f83c:	fb92 f1f3 	sdiv	r1, r2, r3
 801f840:	fa1f fc81 	uxth.w	ip, r1
 801f844:	fb0c 2413 	mls	r4, ip, r3, r2
 801f848:	fb14 f406 	smulbb	r4, r4, r6
 801f84c:	441d      	add	r5, r3
 801f84e:	4404      	add	r4, r0
 801f850:	4661      	mov	r1, ip
 801f852:	3d01      	subs	r5, #1
 801f854:	b2a4      	uxth	r4, r4
 801f856:	fb95 f5f3 	sdiv	r5, r5, r3
 801f85a:	b121      	cbz	r1, 801f866 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801f85c:	9b03      	ldr	r3, [sp, #12]
 801f85e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f862:	ba1b      	rev	r3, r3
 801f864:	441f      	add	r7, r3
 801f866:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f86a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f86e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f872:	4418      	add	r0, r3
 801f874:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f878:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f87c:	441a      	add	r2, r3
 801f87e:	4b74      	ldr	r3, [pc, #464]	; (801fa50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f880:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f884:	6818      	ldr	r0, [r3, #0]
 801f886:	6803      	ldr	r3, [r0, #0]
 801f888:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f88a:	4798      	blx	r3
 801f88c:	4a71      	ldr	r2, [pc, #452]	; (801fa54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801f88e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801f892:	8813      	ldrh	r3, [r2, #0]
 801f894:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f898:	9209      	str	r2, [sp, #36]	; 0x24
 801f89a:	fb03 c101 	mla	r1, r3, r1, ip
 801f89e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f8a2:	4373      	muls	r3, r6
 801f8a4:	b2ad      	uxth	r5, r5
 801f8a6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f8aa:	00ad      	lsls	r5, r5, #2
 801f8ac:	2c00      	cmp	r4, #0
 801f8ae:	9304      	str	r3, [sp, #16]
 801f8b0:	f105 0304 	add.w	r3, r5, #4
 801f8b4:	9305      	str	r3, [sp, #20]
 801f8b6:	bf0c      	ite	eq
 801f8b8:	46c8      	moveq	r8, r9
 801f8ba:	f04f 0800 	movne.w	r8, #0
 801f8be:	2300      	movs	r3, #0
 801f8c0:	fa1f f888 	uxth.w	r8, r8
 801f8c4:	9301      	str	r3, [sp, #4]
 801f8c6:	9a04      	ldr	r2, [sp, #16]
 801f8c8:	4282      	cmp	r2, r0
 801f8ca:	f240 80b9 	bls.w	801fa40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801f8ce:	b95b      	cbnz	r3, 801f8e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801f8d0:	783a      	ldrb	r2, [r7, #0]
 801f8d2:	0993      	lsrs	r3, r2, #6
 801f8d4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f8d8:	9201      	str	r2, [sp, #4]
 801f8da:	1e5a      	subs	r2, r3, #1
 801f8dc:	2a02      	cmp	r2, #2
 801f8de:	bf8d      	iteet	hi
 801f8e0:	787b      	ldrbhi	r3, [r7, #1]
 801f8e2:	3701      	addls	r7, #1
 801f8e4:	b29b      	uxthls	r3, r3
 801f8e6:	3702      	addhi	r7, #2
 801f8e8:	b184      	cbz	r4, 801f90c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801f8ea:	429c      	cmp	r4, r3
 801f8ec:	bf95      	itete	ls
 801f8ee:	1b1c      	subls	r4, r3, r4
 801f8f0:	1ae4      	subhi	r4, r4, r3
 801f8f2:	fa1f fa84 	uxthls.w	sl, r4
 801f8f6:	b2a4      	uxthhi	r4, r4
 801f8f8:	bf87      	ittee	hi
 801f8fa:	46c4      	movhi	ip, r8
 801f8fc:	f04f 0a00 	movhi.w	sl, #0
 801f900:	fa1f fc89 	uxthls.w	ip, r9
 801f904:	2400      	movls	r4, #0
 801f906:	4653      	mov	r3, sl
 801f908:	46e0      	mov	r8, ip
 801f90a:	e7dc      	b.n	801f8c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801f90c:	2204      	movs	r2, #4
 801f90e:	4615      	mov	r5, r2
 801f910:	9905      	ldr	r1, [sp, #20]
 801f912:	9a01      	ldr	r2, [sp, #4]
 801f914:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f918:	9903      	ldr	r1, [sp, #12]
 801f91a:	588a      	ldr	r2, [r1, r2]
 801f91c:	4543      	cmp	r3, r8
 801f91e:	bf27      	ittee	cs
 801f920:	eba3 0a08 	subcs.w	sl, r3, r8
 801f924:	46c6      	movcs	lr, r8
 801f926:	eba8 0c03 	subcc.w	ip, r8, r3
 801f92a:	469e      	movcc	lr, r3
 801f92c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801f930:	bf27      	ittee	cs
 801f932:	fa1f fa8a 	uxthcs.w	sl, sl
 801f936:	46a4      	movcs	ip, r4
 801f938:	fa1f fc8c 	uxthcc.w	ip, ip
 801f93c:	46a2      	movcc	sl, r4
 801f93e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801f942:	2900      	cmp	r1, #0
 801f944:	d066      	beq.n	801fa14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801f946:	29ff      	cmp	r1, #255	; 0xff
 801f948:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f94c:	d114      	bne.n	801f978 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f94e:	9d02      	ldr	r5, [sp, #8]
 801f950:	2dff      	cmp	r5, #255	; 0xff
 801f952:	d111      	bne.n	801f978 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f954:	0951      	lsrs	r1, r2, #5
 801f956:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801f95a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f95e:	f026 0607 	bic.w	r6, r6, #7
 801f962:	430e      	orrs	r6, r1
 801f964:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f968:	4316      	orrs	r6, r2
 801f96a:	b2b6      	uxth	r6, r6
 801f96c:	4486      	add	lr, r0
 801f96e:	4586      	cmp	lr, r0
 801f970:	d051      	beq.n	801fa16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f972:	f820 6b02 	strh.w	r6, [r0], #2
 801f976:	e7fa      	b.n	801f96e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801f978:	9d02      	ldr	r5, [sp, #8]
 801f97a:	4369      	muls	r1, r5
 801f97c:	1c4d      	adds	r5, r1, #1
 801f97e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801f982:	122d      	asrs	r5, r5, #8
 801f984:	ea6f 0b05 	mvn.w	fp, r5
 801f988:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f98c:	b2ad      	uxth	r5, r5
 801f98e:	b2f6      	uxtb	r6, r6
 801f990:	b2d2      	uxtb	r2, r2
 801f992:	fb11 f105 	smulbb	r1, r1, r5
 801f996:	fb16 f605 	smulbb	r6, r6, r5
 801f99a:	fb12 f205 	smulbb	r2, r2, r5
 801f99e:	b289      	uxth	r1, r1
 801f9a0:	b2b6      	uxth	r6, r6
 801f9a2:	b292      	uxth	r2, r2
 801f9a4:	9106      	str	r1, [sp, #24]
 801f9a6:	9607      	str	r6, [sp, #28]
 801f9a8:	9208      	str	r2, [sp, #32]
 801f9aa:	4486      	add	lr, r0
 801f9ac:	fa5f fb8b 	uxtb.w	fp, fp
 801f9b0:	4586      	cmp	lr, r0
 801f9b2:	d030      	beq.n	801fa16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f9b4:	8802      	ldrh	r2, [r0, #0]
 801f9b6:	9906      	ldr	r1, [sp, #24]
 801f9b8:	1216      	asrs	r6, r2, #8
 801f9ba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f9be:	10d5      	asrs	r5, r2, #3
 801f9c0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f9c4:	fb06 160b 	mla	r6, r6, fp, r1
 801f9c8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f9cc:	9907      	ldr	r1, [sp, #28]
 801f9ce:	00d2      	lsls	r2, r2, #3
 801f9d0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f9d4:	fb05 150b 	mla	r5, r5, fp, r1
 801f9d8:	b2d2      	uxtb	r2, r2
 801f9da:	9908      	ldr	r1, [sp, #32]
 801f9dc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f9e0:	b2b6      	uxth	r6, r6
 801f9e2:	fb02 120b 	mla	r2, r2, fp, r1
 801f9e6:	b292      	uxth	r2, r2
 801f9e8:	1c71      	adds	r1, r6, #1
 801f9ea:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801f9ee:	1c51      	adds	r1, r2, #1
 801f9f0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f9f4:	b2ad      	uxth	r5, r5
 801f9f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f9fa:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f9fe:	4316      	orrs	r6, r2
 801fa00:	1c6a      	adds	r2, r5, #1
 801fa02:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801fa06:	096d      	lsrs	r5, r5, #5
 801fa08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fa0c:	432e      	orrs	r6, r5
 801fa0e:	f820 6b02 	strh.w	r6, [r0], #2
 801fa12:	e7cd      	b.n	801f9b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801fa14:	4470      	add	r0, lr
 801fa16:	4543      	cmp	r3, r8
 801fa18:	f4ff af75 	bcc.w	801f906 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801fa1c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801fa20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa22:	fa1f fc89 	uxth.w	ip, r9
 801fa26:	eba4 040c 	sub.w	r4, r4, ip
 801fa2a:	881b      	ldrh	r3, [r3, #0]
 801fa2c:	b2a4      	uxth	r4, r4
 801fa2e:	2c00      	cmp	r4, #0
 801fa30:	eba3 0309 	sub.w	r3, r3, r9
 801fa34:	bf18      	it	ne
 801fa36:	f04f 0c00 	movne.w	ip, #0
 801fa3a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fa3e:	e762      	b.n	801f906 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801fa40:	4b03      	ldr	r3, [pc, #12]	; (801fa50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801fa42:	6818      	ldr	r0, [r3, #0]
 801fa44:	6803      	ldr	r3, [r0, #0]
 801fa46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fa48:	4798      	blx	r3
 801fa4a:	b00f      	add	sp, #60	; 0x3c
 801fa4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa50:	20013854 	.word	0x20013854
 801fa54:	2001384e 	.word	0x2001384e

0801fa58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801fa58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa5c:	b093      	sub	sp, #76	; 0x4c
 801fa5e:	461c      	mov	r4, r3
 801fa60:	9205      	str	r2, [sp, #20]
 801fa62:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801fa66:	9101      	str	r1, [sp, #4]
 801fa68:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fa6a:	9202      	str	r2, [sp, #8]
 801fa6c:	2a00      	cmp	r2, #0
 801fa6e:	f000 812c 	beq.w	801fcca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801fa72:	6820      	ldr	r0, [r4, #0]
 801fa74:	6861      	ldr	r1, [r4, #4]
 801fa76:	aa0e      	add	r2, sp, #56	; 0x38
 801fa78:	c203      	stmia	r2!, {r0, r1}
 801fa7a:	6818      	ldr	r0, [r3, #0]
 801fa7c:	6859      	ldr	r1, [r3, #4]
 801fa7e:	aa10      	add	r2, sp, #64	; 0x40
 801fa80:	c203      	stmia	r2!, {r0, r1}
 801fa82:	a80e      	add	r0, sp, #56	; 0x38
 801fa84:	f7f8 fe88 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fa88:	4621      	mov	r1, r4
 801fa8a:	a810      	add	r0, sp, #64	; 0x40
 801fa8c:	f7f8 fec8 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fa90:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801fa94:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801fa98:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801fa9c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801faa0:	bfde      	ittt	le
 801faa2:	b2b3      	uxthle	r3, r6
 801faa4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801faa8:	fb92 f3f3 	sdivle	r3, r2, r3
 801faac:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801fab0:	bfc8      	it	gt
 801fab2:	2301      	movgt	r3, #1
 801fab4:	fb92 f1f3 	sdiv	r1, r2, r3
 801fab8:	fa1f fc81 	uxth.w	ip, r1
 801fabc:	fb0c 2413 	mls	r4, ip, r3, r2
 801fac0:	fb14 f406 	smulbb	r4, r4, r6
 801fac4:	441d      	add	r5, r3
 801fac6:	4404      	add	r4, r0
 801fac8:	4661      	mov	r1, ip
 801faca:	3d01      	subs	r5, #1
 801facc:	b2a4      	uxth	r4, r4
 801face:	fb95 f5f3 	sdiv	r5, r5, r3
 801fad2:	b131      	cbz	r1, 801fae2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801fad4:	9b05      	ldr	r3, [sp, #20]
 801fad6:	9901      	ldr	r1, [sp, #4]
 801fad8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801fadc:	ba1b      	rev	r3, r3
 801fade:	4419      	add	r1, r3
 801fae0:	9101      	str	r1, [sp, #4]
 801fae2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801fae6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801faea:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801faee:	4418      	add	r0, r3
 801faf0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801faf4:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801faf8:	441a      	add	r2, r3
 801fafa:	4b75      	ldr	r3, [pc, #468]	; (801fcd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fafc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801fb00:	6818      	ldr	r0, [r3, #0]
 801fb02:	6803      	ldr	r3, [r0, #0]
 801fb04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fb06:	4798      	blx	r3
 801fb08:	4972      	ldr	r1, [pc, #456]	; (801fcd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801fb0a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801fb0e:	880b      	ldrh	r3, [r1, #0]
 801fb10:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801fb14:	910d      	str	r1, [sp, #52]	; 0x34
 801fb16:	fb03 c202 	mla	r2, r3, r2, ip
 801fb1a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fb1e:	4373      	muls	r3, r6
 801fb20:	b2ad      	uxth	r5, r5
 801fb22:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fb26:	00ad      	lsls	r5, r5, #2
 801fb28:	9308      	str	r3, [sp, #32]
 801fb2a:	1d2b      	adds	r3, r5, #4
 801fb2c:	9309      	str	r3, [sp, #36]	; 0x24
 801fb2e:	9b02      	ldr	r3, [sp, #8]
 801fb30:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801fb34:	9106      	str	r1, [sp, #24]
 801fb36:	43da      	mvns	r2, r3
 801fb38:	2c00      	cmp	r4, #0
 801fb3a:	bf0c      	ite	eq
 801fb3c:	46dc      	moveq	ip, fp
 801fb3e:	f04f 0c00 	movne.w	ip, #0
 801fb42:	2300      	movs	r3, #0
 801fb44:	b2d2      	uxtb	r2, r2
 801fb46:	fa1f fc8c 	uxth.w	ip, ip
 801fb4a:	9303      	str	r3, [sp, #12]
 801fb4c:	9207      	str	r2, [sp, #28]
 801fb4e:	9a08      	ldr	r2, [sp, #32]
 801fb50:	4282      	cmp	r2, r0
 801fb52:	f240 80b5 	bls.w	801fcc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801fb56:	b963      	cbnz	r3, 801fb72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fb58:	9b01      	ldr	r3, [sp, #4]
 801fb5a:	781a      	ldrb	r2, [r3, #0]
 801fb5c:	0993      	lsrs	r3, r2, #6
 801fb5e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801fb62:	9203      	str	r2, [sp, #12]
 801fb64:	1e5a      	subs	r2, r3, #1
 801fb66:	2a02      	cmp	r2, #2
 801fb68:	d815      	bhi.n	801fb96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801fb6a:	9a01      	ldr	r2, [sp, #4]
 801fb6c:	3201      	adds	r2, #1
 801fb6e:	9201      	str	r2, [sp, #4]
 801fb70:	b29b      	uxth	r3, r3
 801fb72:	b1b4      	cbz	r4, 801fba2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801fb74:	429c      	cmp	r4, r3
 801fb76:	bf95      	itete	ls
 801fb78:	1b1c      	subls	r4, r3, r4
 801fb7a:	1ae4      	subhi	r4, r4, r3
 801fb7c:	fa1f f884 	uxthls.w	r8, r4
 801fb80:	b2a4      	uxthhi	r4, r4
 801fb82:	bf87      	ittee	hi
 801fb84:	4666      	movhi	r6, ip
 801fb86:	f04f 0800 	movhi.w	r8, #0
 801fb8a:	fa1f f68b 	uxthls.w	r6, fp
 801fb8e:	2400      	movls	r4, #0
 801fb90:	4643      	mov	r3, r8
 801fb92:	46b4      	mov	ip, r6
 801fb94:	e7db      	b.n	801fb4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801fb96:	9a01      	ldr	r2, [sp, #4]
 801fb98:	9b01      	ldr	r3, [sp, #4]
 801fb9a:	3202      	adds	r2, #2
 801fb9c:	785b      	ldrb	r3, [r3, #1]
 801fb9e:	9201      	str	r2, [sp, #4]
 801fba0:	e7e7      	b.n	801fb72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fba2:	2203      	movs	r2, #3
 801fba4:	4615      	mov	r5, r2
 801fba6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fba8:	9a03      	ldr	r2, [sp, #12]
 801fbaa:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fbae:	9905      	ldr	r1, [sp, #20]
 801fbb0:	4563      	cmp	r3, ip
 801fbb2:	eb01 0502 	add.w	r5, r1, r2
 801fbb6:	9902      	ldr	r1, [sp, #8]
 801fbb8:	bf29      	itett	cs
 801fbba:	eba3 080c 	subcs.w	r8, r3, ip
 801fbbe:	ebac 0603 	subcc.w	r6, ip, r3
 801fbc2:	fa1f f888 	uxthcs.w	r8, r8
 801fbc6:	46e1      	movcs	r9, ip
 801fbc8:	bf2f      	iteee	cs
 801fbca:	4626      	movcs	r6, r4
 801fbcc:	b2b6      	uxthcc	r6, r6
 801fbce:	4699      	movcc	r9, r3
 801fbd0:	46a0      	movcc	r8, r4
 801fbd2:	29ff      	cmp	r1, #255	; 0xff
 801fbd4:	d04a      	beq.n	801fc6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801fbd6:	9f06      	ldr	r7, [sp, #24]
 801fbd8:	78a9      	ldrb	r1, [r5, #2]
 801fbda:	9004      	str	r0, [sp, #16]
 801fbdc:	4379      	muls	r1, r7
 801fbde:	910a      	str	r1, [sp, #40]	; 0x28
 801fbe0:	7869      	ldrb	r1, [r5, #1]
 801fbe2:	4379      	muls	r1, r7
 801fbe4:	910b      	str	r1, [sp, #44]	; 0x2c
 801fbe6:	9905      	ldr	r1, [sp, #20]
 801fbe8:	5c8a      	ldrb	r2, [r1, r2]
 801fbea:	437a      	muls	r2, r7
 801fbec:	920c      	str	r2, [sp, #48]	; 0x30
 801fbee:	46ca      	mov	sl, r9
 801fbf0:	f1ba 0f00 	cmp.w	sl, #0
 801fbf4:	d03d      	beq.n	801fc72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801fbf6:	9a04      	ldr	r2, [sp, #16]
 801fbf8:	9f07      	ldr	r7, [sp, #28]
 801fbfa:	8812      	ldrh	r2, [r2, #0]
 801fbfc:	1215      	asrs	r5, r2, #8
 801fbfe:	46be      	mov	lr, r7
 801fc00:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fc04:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801fc06:	10d1      	asrs	r1, r2, #3
 801fc08:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801fc0c:	fb05 750e 	mla	r5, r5, lr, r7
 801fc10:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fc14:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801fc16:	00d2      	lsls	r2, r2, #3
 801fc18:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801fc1c:	fb01 710e 	mla	r1, r1, lr, r7
 801fc20:	b2d2      	uxtb	r2, r2
 801fc22:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fc24:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fc28:	b2ad      	uxth	r5, r5
 801fc2a:	fb02 720e 	mla	r2, r2, lr, r7
 801fc2e:	b292      	uxth	r2, r2
 801fc30:	f105 0e01 	add.w	lr, r5, #1
 801fc34:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801fc38:	f102 0e01 	add.w	lr, r2, #1
 801fc3c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801fc40:	b289      	uxth	r1, r1
 801fc42:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fc46:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fc4a:	4315      	orrs	r5, r2
 801fc4c:	1c4a      	adds	r2, r1, #1
 801fc4e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fc52:	0949      	lsrs	r1, r1, #5
 801fc54:	9a04      	ldr	r2, [sp, #16]
 801fc56:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fc5a:	430d      	orrs	r5, r1
 801fc5c:	f822 5b02 	strh.w	r5, [r2], #2
 801fc60:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fc64:	9204      	str	r2, [sp, #16]
 801fc66:	fa1f fa8a 	uxth.w	sl, sl
 801fc6a:	e7c1      	b.n	801fbf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801fc6c:	4649      	mov	r1, r9
 801fc6e:	4686      	mov	lr, r0
 801fc70:	b999      	cbnz	r1, 801fc9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801fc72:	4563      	cmp	r3, ip
 801fc74:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801fc78:	d38a      	bcc.n	801fb90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fc7a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801fc7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fc80:	fa1f f68b 	uxth.w	r6, fp
 801fc84:	1ba4      	subs	r4, r4, r6
 801fc86:	881b      	ldrh	r3, [r3, #0]
 801fc88:	b2a4      	uxth	r4, r4
 801fc8a:	2c00      	cmp	r4, #0
 801fc8c:	eba3 030b 	sub.w	r3, r3, fp
 801fc90:	bf18      	it	ne
 801fc92:	2600      	movne	r6, #0
 801fc94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fc98:	e77a      	b.n	801fb90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fc9a:	78aa      	ldrb	r2, [r5, #2]
 801fc9c:	4f0e      	ldr	r7, [pc, #56]	; (801fcd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801fc9e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801fca2:	786a      	ldrb	r2, [r5, #1]
 801fca4:	00d2      	lsls	r2, r2, #3
 801fca6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fcaa:	ea4a 0202 	orr.w	r2, sl, r2
 801fcae:	f895 a000 	ldrb.w	sl, [r5]
 801fcb2:	3901      	subs	r1, #1
 801fcb4:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801fcb8:	f82e 2b02 	strh.w	r2, [lr], #2
 801fcbc:	b289      	uxth	r1, r1
 801fcbe:	e7d7      	b.n	801fc70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801fcc0:	4b03      	ldr	r3, [pc, #12]	; (801fcd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fcc2:	6818      	ldr	r0, [r3, #0]
 801fcc4:	6803      	ldr	r3, [r0, #0]
 801fcc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fcc8:	4798      	blx	r3
 801fcca:	b013      	add	sp, #76	; 0x4c
 801fccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fcd0:	20013854 	.word	0x20013854
 801fcd4:	2001384e 	.word	0x2001384e
 801fcd8:	fffff800 	.word	0xfffff800

0801fcdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fcdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fce0:	b09d      	sub	sp, #116	; 0x74
 801fce2:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801fce6:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801fcea:	920e      	str	r2, [sp, #56]	; 0x38
 801fcec:	461c      	mov	r4, r3
 801fcee:	4683      	mov	fp, r0
 801fcf0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fcf2:	2a00      	cmp	r2, #0
 801fcf4:	f000 81e0 	beq.w	80200b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801fcf8:	6820      	ldr	r0, [r4, #0]
 801fcfa:	6861      	ldr	r1, [r4, #4]
 801fcfc:	aa18      	add	r2, sp, #96	; 0x60
 801fcfe:	c203      	stmia	r2!, {r0, r1}
 801fd00:	6818      	ldr	r0, [r3, #0]
 801fd02:	6859      	ldr	r1, [r3, #4]
 801fd04:	aa1a      	add	r2, sp, #104	; 0x68
 801fd06:	c203      	stmia	r2!, {r0, r1}
 801fd08:	a818      	add	r0, sp, #96	; 0x60
 801fd0a:	f7f8 fd45 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fd0e:	4621      	mov	r1, r4
 801fd10:	a81a      	add	r0, sp, #104	; 0x68
 801fd12:	f7f8 fd85 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fd16:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801fd1a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801fd1e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801fd22:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fd26:	bfd7      	itett	le
 801fd28:	b29a      	uxthle	r2, r3
 801fd2a:	2201      	movgt	r2, #1
 801fd2c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801fd30:	fb91 f2f2 	sdivle	r2, r1, r2
 801fd34:	9202      	str	r2, [sp, #8]
 801fd36:	9802      	ldr	r0, [sp, #8]
 801fd38:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801fd3c:	fb92 f0f0 	sdiv	r0, r2, r0
 801fd40:	b280      	uxth	r0, r0
 801fd42:	900f      	str	r0, [sp, #60]	; 0x3c
 801fd44:	9902      	ldr	r1, [sp, #8]
 801fd46:	9802      	ldr	r0, [sp, #8]
 801fd48:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fd4a:	440c      	add	r4, r1
 801fd4c:	fb05 2510 	mls	r5, r5, r0, r2
 801fd50:	fb15 f503 	smulbb	r5, r5, r3
 801fd54:	3c01      	subs	r4, #1
 801fd56:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801fd5a:	fb94 f4f1 	sdiv	r4, r4, r1
 801fd5e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801fd62:	440d      	add	r5, r1
 801fd64:	4419      	add	r1, r3
 801fd66:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801fd6a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801fd6e:	441a      	add	r2, r3
 801fd70:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801fd74:	9306      	str	r3, [sp, #24]
 801fd76:	4bb3      	ldr	r3, [pc, #716]	; (8020044 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801fd78:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801fd7c:	6818      	ldr	r0, [r3, #0]
 801fd7e:	6803      	ldr	r3, [r0, #0]
 801fd80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fd82:	4798      	blx	r3
 801fd84:	4bb0      	ldr	r3, [pc, #704]	; (8020048 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801fd86:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801fd8a:	881a      	ldrh	r2, [r3, #0]
 801fd8c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801fd90:	9316      	str	r3, [sp, #88]	; 0x58
 801fd92:	fb02 7101 	mla	r1, r2, r1, r7
 801fd96:	3401      	adds	r4, #1
 801fd98:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801fd9c:	b2a4      	uxth	r4, r4
 801fd9e:	4356      	muls	r6, r2
 801fda0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801fda4:	00a4      	lsls	r4, r4, #2
 801fda6:	920a      	str	r2, [sp, #40]	; 0x28
 801fda8:	1d22      	adds	r2, r4, #4
 801fdaa:	b2ad      	uxth	r5, r5
 801fdac:	9213      	str	r2, [sp, #76]	; 0x4c
 801fdae:	4ba7      	ldr	r3, [pc, #668]	; (802004c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801fdb0:	9a06      	ldr	r2, [sp, #24]
 801fdb2:	2d00      	cmp	r5, #0
 801fdb4:	bf0c      	ite	eq
 801fdb6:	4611      	moveq	r1, r2
 801fdb8:	2100      	movne	r1, #0
 801fdba:	2200      	movs	r2, #0
 801fdbc:	eba3 030b 	sub.w	r3, r3, fp
 801fdc0:	b289      	uxth	r1, r1
 801fdc2:	920d      	str	r2, [sp, #52]	; 0x34
 801fdc4:	9317      	str	r3, [sp, #92]	; 0x5c
 801fdc6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fdc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fdca:	fa12 f383 	uxtah	r3, r2, r3
 801fdce:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fdd0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fdd4:	3304      	adds	r3, #4
 801fdd6:	9308      	str	r3, [sp, #32]
 801fdd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fdda:	4543      	cmp	r3, r8
 801fddc:	f240 8167 	bls.w	80200ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801fde0:	9a02      	ldr	r2, [sp, #8]
 801fde2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801fde6:	fbb5 f3f3 	udiv	r3, r5, r3
 801fdea:	1ad3      	subs	r3, r2, r3
 801fdec:	b29b      	uxth	r3, r3
 801fdee:	9314      	str	r3, [sp, #80]	; 0x50
 801fdf0:	9b08      	ldr	r3, [sp, #32]
 801fdf2:	9808      	ldr	r0, [sp, #32]
 801fdf4:	785a      	ldrb	r2, [r3, #1]
 801fdf6:	789b      	ldrb	r3, [r3, #2]
 801fdf8:	7800      	ldrb	r0, [r0, #0]
 801fdfa:	9010      	str	r0, [sp, #64]	; 0x40
 801fdfc:	021b      	lsls	r3, r3, #8
 801fdfe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801fe02:	9a08      	ldr	r2, [sp, #32]
 801fe04:	78d2      	ldrb	r2, [r2, #3]
 801fe06:	4313      	orrs	r3, r2
 801fe08:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801fe0a:	3001      	adds	r0, #1
 801fe0c:	441a      	add	r2, r3
 801fe0e:	9007      	str	r0, [sp, #28]
 801fe10:	1c50      	adds	r0, r2, #1
 801fe12:	9005      	str	r0, [sp, #20]
 801fe14:	7852      	ldrb	r2, [r2, #1]
 801fe16:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fe18:	0212      	lsls	r2, r2, #8
 801fe1a:	5cc3      	ldrb	r3, [r0, r3]
 801fe1c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801fe20:	431a      	orrs	r2, r3
 801fe22:	b293      	uxth	r3, r2
 801fe24:	930b      	str	r3, [sp, #44]	; 0x2c
 801fe26:	2300      	movs	r3, #0
 801fe28:	9309      	str	r3, [sp, #36]	; 0x24
 801fe2a:	2301      	movs	r3, #1
 801fe2c:	9301      	str	r3, [sp, #4]
 801fe2e:	9304      	str	r3, [sp, #16]
 801fe30:	2300      	movs	r3, #0
 801fe32:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801fe36:	9303      	str	r3, [sp, #12]
 801fe38:	f04f 0e01 	mov.w	lr, #1
 801fe3c:	2d00      	cmp	r5, #0
 801fe3e:	d07c      	beq.n	801ff3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801fe40:	45ae      	cmp	lr, r5
 801fe42:	d26b      	bcs.n	801ff1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801fe44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fe46:	eba5 050e 	sub.w	r5, r5, lr
 801fe4a:	4543      	cmp	r3, r8
 801fe4c:	b2ad      	uxth	r5, r5
 801fe4e:	460c      	mov	r4, r1
 801fe50:	d802      	bhi.n	801fe58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801fe52:	e070      	b.n	801ff36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801fe54:	2b00      	cmp	r3, #0
 801fe56:	d15c      	bne.n	801ff12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801fe58:	9b05      	ldr	r3, [sp, #20]
 801fe5a:	9a04      	ldr	r2, [sp, #16]
 801fe5c:	785b      	ldrb	r3, [r3, #1]
 801fe5e:	9904      	ldr	r1, [sp, #16]
 801fe60:	f1c2 0207 	rsb	r2, r2, #7
 801fe64:	4093      	lsls	r3, r2
 801fe66:	005b      	lsls	r3, r3, #1
 801fe68:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801fe6c:	9b05      	ldr	r3, [sp, #20]
 801fe6e:	781b      	ldrb	r3, [r3, #0]
 801fe70:	410b      	asrs	r3, r1
 801fe72:	3101      	adds	r1, #1
 801fe74:	b2c9      	uxtb	r1, r1
 801fe76:	2908      	cmp	r1, #8
 801fe78:	9104      	str	r1, [sp, #16]
 801fe7a:	9905      	ldr	r1, [sp, #20]
 801fe7c:	bf0a      	itet	eq
 801fe7e:	3102      	addeq	r1, #2
 801fe80:	3101      	addne	r1, #1
 801fe82:	9105      	streq	r1, [sp, #20]
 801fe84:	b2db      	uxtb	r3, r3
 801fe86:	bf0a      	itet	eq
 801fe88:	2100      	moveq	r1, #0
 801fe8a:	9105      	strne	r1, [sp, #20]
 801fe8c:	9104      	streq	r1, [sp, #16]
 801fe8e:	4313      	orrs	r3, r2
 801fe90:	9910      	ldr	r1, [sp, #64]	; 0x40
 801fe92:	b29a      	uxth	r2, r3
 801fe94:	4291      	cmp	r1, r2
 801fe96:	d30a      	bcc.n	801feae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801fe98:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801fe9c:	2301      	movs	r3, #1
 801fe9e:	9907      	ldr	r1, [sp, #28]
 801fea0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801fea4:	d30f      	bcc.n	801fec6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fea6:	2100      	movs	r1, #0
 801fea8:	9301      	str	r3, [sp, #4]
 801feaa:	9103      	str	r1, [sp, #12]
 801feac:	e032      	b.n	801ff14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801feae:	9b07      	ldr	r3, [sp, #28]
 801feb0:	429a      	cmp	r2, r3
 801feb2:	d318      	bcc.n	801fee6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801feb4:	9b01      	ldr	r3, [sp, #4]
 801feb6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801feba:	445b      	add	r3, fp
 801febc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801fec0:	9b01      	ldr	r3, [sp, #4]
 801fec2:	3301      	adds	r3, #1
 801fec4:	b29b      	uxth	r3, r3
 801fec6:	9907      	ldr	r1, [sp, #28]
 801fec8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801fecc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fed0:	7108      	strb	r0, [r1, #4]
 801fed2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fed4:	80c8      	strh	r0, [r1, #6]
 801fed6:	9801      	ldr	r0, [sp, #4]
 801fed8:	3001      	adds	r0, #1
 801feda:	7148      	strb	r0, [r1, #5]
 801fedc:	9907      	ldr	r1, [sp, #28]
 801fede:	3101      	adds	r1, #1
 801fee0:	b289      	uxth	r1, r1
 801fee2:	9107      	str	r1, [sp, #28]
 801fee4:	e7df      	b.n	801fea6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801fee6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801feea:	4611      	mov	r1, r2
 801feec:	795b      	ldrb	r3, [r3, #5]
 801feee:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801fef2:	4458      	add	r0, fp
 801fef4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801fef6:	4406      	add	r6, r0
 801fef8:	2e00      	cmp	r6, #0
 801fefa:	dd06      	ble.n	801ff0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801fefc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ff00:	790e      	ldrb	r6, [r1, #4]
 801ff02:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801ff06:	88c9      	ldrh	r1, [r1, #6]
 801ff08:	e7f4      	b.n	801fef4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801ff0a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801ff0e:	b29b      	uxth	r3, r3
 801ff10:	e7c5      	b.n	801fe9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801ff12:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ff14:	920b      	str	r2, [sp, #44]	; 0x2c
 801ff16:	4621      	mov	r1, r4
 801ff18:	469e      	mov	lr, r3
 801ff1a:	e78f      	b.n	801fe3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801ff1c:	9a03      	ldr	r2, [sp, #12]
 801ff1e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ff22:	442a      	add	r2, r5
 801ff24:	ebae 0305 	sub.w	r3, lr, r5
 801ff28:	b292      	uxth	r2, r2
 801ff2a:	b29b      	uxth	r3, r3
 801ff2c:	9203      	str	r2, [sp, #12]
 801ff2e:	2500      	movs	r5, #0
 801ff30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ff32:	4542      	cmp	r2, r8
 801ff34:	d88e      	bhi.n	801fe54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801ff36:	4621      	mov	r1, r4
 801ff38:	e74e      	b.n	801fdd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801ff3a:	458e      	cmp	lr, r1
 801ff3c:	bf29      	itett	cs
 801ff3e:	ebae 0301 	subcs.w	r3, lr, r1
 801ff42:	eba1 040e 	subcc.w	r4, r1, lr
 801ff46:	b29b      	uxthcs	r3, r3
 801ff48:	910c      	strcs	r1, [sp, #48]	; 0x30
 801ff4a:	bf2f      	iteee	cs
 801ff4c:	462c      	movcs	r4, r5
 801ff4e:	b2a4      	uxthcc	r4, r4
 801ff50:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801ff54:	462b      	movcc	r3, r5
 801ff56:	f04f 0900 	mov.w	r9, #0
 801ff5a:	9a03      	ldr	r2, [sp, #12]
 801ff5c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801ff5e:	444a      	add	r2, r9
 801ff60:	4548      	cmp	r0, r9
 801ff62:	b292      	uxth	r2, r2
 801ff64:	d074      	beq.n	8020050 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801ff66:	445a      	add	r2, fp
 801ff68:	2004      	movs	r0, #4
 801ff6a:	4605      	mov	r5, r0
 801ff6c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801ff70:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ff72:	fb15 0202 	smlabb	r2, r5, r2, r0
 801ff76:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ff78:	5880      	ldr	r0, [r0, r2]
 801ff7a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801ff7e:	d014      	beq.n	801ffaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ff80:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ff84:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801ff88:	d112      	bne.n	801ffb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801ff8a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ff8c:	2aff      	cmp	r2, #255	; 0xff
 801ff8e:	d10f      	bne.n	801ffb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801ff90:	0942      	lsrs	r2, r0, #5
 801ff92:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ff96:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ff9a:	f025 0507 	bic.w	r5, r5, #7
 801ff9e:	4315      	orrs	r5, r2
 801ffa0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ffa4:	4305      	orrs	r5, r0
 801ffa6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801ffaa:	f109 0901 	add.w	r9, r9, #1
 801ffae:	e7d4      	b.n	801ff5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801ffb0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801ffb4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ffb8:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801ffbc:	9215      	str	r2, [sp, #84]	; 0x54
 801ffbe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ffc0:	fb02 fa0a 	mul.w	sl, r2, sl
 801ffc4:	f10a 0201 	add.w	r2, sl, #1
 801ffc8:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801ffcc:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ffd0:	1212      	asrs	r2, r2, #8
 801ffd2:	fa1f fa82 	uxth.w	sl, r2
 801ffd6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801ffda:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ffde:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ffe2:	43d2      	mvns	r2, r2
 801ffe4:	b2d2      	uxtb	r2, r2
 801ffe6:	fb16 f60a 	smulbb	r6, r6, sl
 801ffea:	fa5f fc8c 	uxtb.w	ip, ip
 801ffee:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801fff2:	b2c0      	uxtb	r0, r0
 801fff4:	fb07 6702 	mla	r7, r7, r2, r6
 801fff8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801fffc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801fffe:	fb10 f00a 	smulbb	r0, r0, sl
 8020002:	fb0c 0002 	mla	r0, ip, r2, r0
 8020006:	b2ed      	uxtb	r5, r5
 8020008:	b2bf      	uxth	r7, r7
 802000a:	fb15 f50a 	smulbb	r5, r5, sl
 802000e:	b280      	uxth	r0, r0
 8020010:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020014:	fb06 5602 	mla	r6, r6, r2, r5
 8020018:	1c7a      	adds	r2, r7, #1
 802001a:	1c45      	adds	r5, r0, #1
 802001c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8020020:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8020024:	b2b6      	uxth	r6, r6
 8020026:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 802002a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 802002e:	432f      	orrs	r7, r5
 8020030:	1c75      	adds	r5, r6, #1
 8020032:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8020036:	096d      	lsrs	r5, r5, #5
 8020038:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802003c:	432f      	orrs	r7, r5
 802003e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8020042:	e7b2      	b.n	801ffaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8020044:	20013854 	.word	0x20013854
 8020048:	2001384e 	.word	0x2001384e
 802004c:	fffff7fb 	.word	0xfffff7fb
 8020050:	9203      	str	r2, [sp, #12]
 8020052:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020054:	458e      	cmp	lr, r1
 8020056:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 802005a:	f4ff af68 	bcc.w	801ff2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 802005e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8020060:	9906      	ldr	r1, [sp, #24]
 8020062:	8812      	ldrh	r2, [r2, #0]
 8020064:	1a52      	subs	r2, r2, r1
 8020066:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 802006a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802006c:	9914      	ldr	r1, [sp, #80]	; 0x50
 802006e:	3201      	adds	r2, #1
 8020070:	428a      	cmp	r2, r1
 8020072:	9209      	str	r2, [sp, #36]	; 0x24
 8020074:	d111      	bne.n	802009a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8020076:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 802007a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 802007e:	9b06      	ldr	r3, [sp, #24]
 8020080:	eba5 0509 	sub.w	r5, r5, r9
 8020084:	b2ad      	uxth	r5, r5
 8020086:	2d00      	cmp	r5, #0
 8020088:	bf08      	it	eq
 802008a:	4619      	moveq	r1, r3
 802008c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802008e:	bf18      	it	ne
 8020090:	2100      	movne	r1, #0
 8020092:	3301      	adds	r3, #1
 8020094:	930d      	str	r3, [sp, #52]	; 0x34
 8020096:	b289      	uxth	r1, r1
 8020098:	e695      	b.n	801fdc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 802009a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 802009e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80200a2:	1b2d      	subs	r5, r5, r4
 80200a4:	b2ad      	uxth	r5, r5
 80200a6:	2d00      	cmp	r5, #0
 80200a8:	bf18      	it	ne
 80200aa:	2400      	movne	r4, #0
 80200ac:	e740      	b.n	801ff30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 80200ae:	4b04      	ldr	r3, [pc, #16]	; (80200c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 80200b0:	6818      	ldr	r0, [r3, #0]
 80200b2:	6803      	ldr	r3, [r0, #0]
 80200b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80200b6:	4798      	blx	r3
 80200b8:	b01d      	add	sp, #116	; 0x74
 80200ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80200be:	bf00      	nop
 80200c0:	20013854 	.word	0x20013854

080200c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80200c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200c8:	b09f      	sub	sp, #124	; 0x7c
 80200ca:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 80200ce:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 80200d2:	920a      	str	r2, [sp, #40]	; 0x28
 80200d4:	461d      	mov	r5, r3
 80200d6:	4604      	mov	r4, r0
 80200d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80200da:	2a00      	cmp	r2, #0
 80200dc:	f000 81fa 	beq.w	80204d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 80200e0:	6828      	ldr	r0, [r5, #0]
 80200e2:	6869      	ldr	r1, [r5, #4]
 80200e4:	aa1a      	add	r2, sp, #104	; 0x68
 80200e6:	c203      	stmia	r2!, {r0, r1}
 80200e8:	6818      	ldr	r0, [r3, #0]
 80200ea:	6859      	ldr	r1, [r3, #4]
 80200ec:	aa1c      	add	r2, sp, #112	; 0x70
 80200ee:	c203      	stmia	r2!, {r0, r1}
 80200f0:	a81a      	add	r0, sp, #104	; 0x68
 80200f2:	f7f8 fb51 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80200f6:	4629      	mov	r1, r5
 80200f8:	a81c      	add	r0, sp, #112	; 0x70
 80200fa:	f7f8 fb91 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80200fe:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8020102:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8020106:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 802010a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802010e:	bfd7      	itett	le
 8020110:	b29a      	uxthle	r2, r3
 8020112:	2201      	movgt	r2, #1
 8020114:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8020118:	fb91 f2f2 	sdivle	r2, r1, r2
 802011c:	9201      	str	r2, [sp, #4]
 802011e:	9801      	ldr	r0, [sp, #4]
 8020120:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8020124:	fb92 f0f0 	sdiv	r0, r2, r0
 8020128:	b280      	uxth	r0, r0
 802012a:	9010      	str	r0, [sp, #64]	; 0x40
 802012c:	9901      	ldr	r1, [sp, #4]
 802012e:	9801      	ldr	r0, [sp, #4]
 8020130:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020132:	440e      	add	r6, r1
 8020134:	fb05 2510 	mls	r5, r5, r0, r2
 8020138:	fb15 f503 	smulbb	r5, r5, r3
 802013c:	3e01      	subs	r6, #1
 802013e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8020142:	fb96 f6f1 	sdiv	r6, r6, r1
 8020146:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 802014a:	440d      	add	r5, r1
 802014c:	4419      	add	r1, r3
 802014e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8020152:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8020156:	441a      	add	r2, r3
 8020158:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 802015c:	9304      	str	r3, [sp, #16]
 802015e:	4b96      	ldr	r3, [pc, #600]	; (80203b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8020160:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8020164:	6818      	ldr	r0, [r3, #0]
 8020166:	6803      	ldr	r3, [r0, #0]
 8020168:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802016a:	4798      	blx	r3
 802016c:	4b93      	ldr	r3, [pc, #588]	; (80203bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 802016e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8020172:	881a      	ldrh	r2, [r3, #0]
 8020174:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8020178:	9318      	str	r3, [sp, #96]	; 0x60
 802017a:	fb02 c101 	mla	r1, r2, r1, ip
 802017e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8020182:	4357      	muls	r7, r2
 8020184:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8020188:	3601      	adds	r6, #1
 802018a:	920b      	str	r2, [sp, #44]	; 0x2c
 802018c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802018e:	4b8c      	ldr	r3, [pc, #560]	; (80203c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8020190:	b2b6      	uxth	r6, r6
 8020192:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8020196:	1d32      	adds	r2, r6, #4
 8020198:	9206      	str	r2, [sp, #24]
 802019a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802019c:	43d2      	mvns	r2, r2
 802019e:	b2d2      	uxtb	r2, r2
 80201a0:	b2ad      	uxth	r5, r5
 80201a2:	9215      	str	r2, [sp, #84]	; 0x54
 80201a4:	9a04      	ldr	r2, [sp, #16]
 80201a6:	2d00      	cmp	r5, #0
 80201a8:	bf0c      	ite	eq
 80201aa:	4611      	moveq	r1, r2
 80201ac:	2100      	movne	r1, #0
 80201ae:	2200      	movs	r2, #0
 80201b0:	1b1b      	subs	r3, r3, r4
 80201b2:	b289      	uxth	r1, r1
 80201b4:	920d      	str	r2, [sp, #52]	; 0x34
 80201b6:	9319      	str	r3, [sp, #100]	; 0x64
 80201b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80201ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80201bc:	fa12 f383 	uxtah	r3, r2, r3
 80201c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80201c2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80201c6:	3304      	adds	r3, #4
 80201c8:	9307      	str	r3, [sp, #28]
 80201ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80201cc:	455b      	cmp	r3, fp
 80201ce:	f240 817c 	bls.w	80204ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 80201d2:	9a01      	ldr	r2, [sp, #4]
 80201d4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 80201d8:	fbb5 f3f3 	udiv	r3, r5, r3
 80201dc:	1ad3      	subs	r3, r2, r3
 80201de:	b29b      	uxth	r3, r3
 80201e0:	9316      	str	r3, [sp, #88]	; 0x58
 80201e2:	9b07      	ldr	r3, [sp, #28]
 80201e4:	9807      	ldr	r0, [sp, #28]
 80201e6:	785a      	ldrb	r2, [r3, #1]
 80201e8:	789b      	ldrb	r3, [r3, #2]
 80201ea:	7800      	ldrb	r0, [r0, #0]
 80201ec:	9011      	str	r0, [sp, #68]	; 0x44
 80201ee:	021b      	lsls	r3, r3, #8
 80201f0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80201f4:	9a07      	ldr	r2, [sp, #28]
 80201f6:	78d2      	ldrb	r2, [r2, #3]
 80201f8:	4313      	orrs	r3, r2
 80201fa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80201fc:	3001      	adds	r0, #1
 80201fe:	441a      	add	r2, r3
 8020200:	9005      	str	r0, [sp, #20]
 8020202:	1c50      	adds	r0, r2, #1
 8020204:	9003      	str	r0, [sp, #12]
 8020206:	7852      	ldrb	r2, [r2, #1]
 8020208:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802020a:	0212      	lsls	r2, r2, #8
 802020c:	5cc3      	ldrb	r3, [r0, r3]
 802020e:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8020212:	431a      	orrs	r2, r3
 8020214:	b293      	uxth	r3, r2
 8020216:	930c      	str	r3, [sp, #48]	; 0x30
 8020218:	2300      	movs	r3, #0
 802021a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 802021e:	9308      	str	r3, [sp, #32]
 8020220:	461a      	mov	r2, r3
 8020222:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8020226:	930e      	str	r3, [sp, #56]	; 0x38
 8020228:	f04f 0801 	mov.w	r8, #1
 802022c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8020230:	f8cd 8008 	str.w	r8, [sp, #8]
 8020234:	46c4      	mov	ip, r8
 8020236:	930f      	str	r3, [sp, #60]	; 0x3c
 8020238:	2d00      	cmp	r5, #0
 802023a:	d07c      	beq.n	8020336 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 802023c:	45ac      	cmp	ip, r5
 802023e:	d26c      	bcs.n	802031a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8020240:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020242:	eba5 050c 	sub.w	r5, r5, ip
 8020246:	455b      	cmp	r3, fp
 8020248:	b2ad      	uxth	r5, r5
 802024a:	4608      	mov	r0, r1
 802024c:	d802      	bhi.n	8020254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802024e:	e070      	b.n	8020332 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8020250:	2b00      	cmp	r3, #0
 8020252:	d15c      	bne.n	802030e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8020254:	9b03      	ldr	r3, [sp, #12]
 8020256:	9a02      	ldr	r2, [sp, #8]
 8020258:	785b      	ldrb	r3, [r3, #1]
 802025a:	9902      	ldr	r1, [sp, #8]
 802025c:	f1c2 0207 	rsb	r2, r2, #7
 8020260:	4093      	lsls	r3, r2
 8020262:	005b      	lsls	r3, r3, #1
 8020264:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8020268:	9b03      	ldr	r3, [sp, #12]
 802026a:	781b      	ldrb	r3, [r3, #0]
 802026c:	410b      	asrs	r3, r1
 802026e:	3101      	adds	r1, #1
 8020270:	b2c9      	uxtb	r1, r1
 8020272:	2908      	cmp	r1, #8
 8020274:	9102      	str	r1, [sp, #8]
 8020276:	9903      	ldr	r1, [sp, #12]
 8020278:	bf0a      	itet	eq
 802027a:	3102      	addeq	r1, #2
 802027c:	3101      	addne	r1, #1
 802027e:	9103      	streq	r1, [sp, #12]
 8020280:	b2db      	uxtb	r3, r3
 8020282:	bf0a      	itet	eq
 8020284:	2100      	moveq	r1, #0
 8020286:	9103      	strne	r1, [sp, #12]
 8020288:	9102      	streq	r1, [sp, #8]
 802028a:	4313      	orrs	r3, r2
 802028c:	9911      	ldr	r1, [sp, #68]	; 0x44
 802028e:	b29a      	uxth	r2, r3
 8020290:	4291      	cmp	r1, r2
 8020292:	d30a      	bcc.n	80202aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8020294:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8020298:	2301      	movs	r3, #1
 802029a:	9905      	ldr	r1, [sp, #20]
 802029c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80202a0:	d30f      	bcc.n	80202c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 80202a2:	2100      	movs	r1, #0
 80202a4:	4698      	mov	r8, r3
 80202a6:	9100      	str	r1, [sp, #0]
 80202a8:	e032      	b.n	8020310 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 80202aa:	9b05      	ldr	r3, [sp, #20]
 80202ac:	429a      	cmp	r2, r3
 80202ae:	d318      	bcc.n	80202e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80202b0:	eb04 0308 	add.w	r3, r4, r8
 80202b4:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 80202b8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 80202bc:	f108 0301 	add.w	r3, r8, #1
 80202c0:	b29b      	uxth	r3, r3
 80202c2:	9905      	ldr	r1, [sp, #20]
 80202c4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 80202c8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80202cc:	710e      	strb	r6, [r1, #4]
 80202ce:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80202d0:	80ce      	strh	r6, [r1, #6]
 80202d2:	f108 0601 	add.w	r6, r8, #1
 80202d6:	714e      	strb	r6, [r1, #5]
 80202d8:	9905      	ldr	r1, [sp, #20]
 80202da:	3101      	adds	r1, #1
 80202dc:	b289      	uxth	r1, r1
 80202de:	9105      	str	r1, [sp, #20]
 80202e0:	e7df      	b.n	80202a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 80202e2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80202e6:	4611      	mov	r1, r2
 80202e8:	795b      	ldrb	r3, [r3, #5]
 80202ea:	f603 0604 	addw	r6, r3, #2052	; 0x804
 80202ee:	4426      	add	r6, r4
 80202f0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 80202f2:	4437      	add	r7, r6
 80202f4:	2f00      	cmp	r7, #0
 80202f6:	dd06      	ble.n	8020306 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80202f8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80202fc:	790f      	ldrb	r7, [r1, #4]
 80202fe:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8020302:	88c9      	ldrh	r1, [r1, #6]
 8020304:	e7f4      	b.n	80202f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8020306:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 802030a:	b29b      	uxth	r3, r3
 802030c:	e7c5      	b.n	802029a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802030e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020310:	920c      	str	r2, [sp, #48]	; 0x30
 8020312:	4601      	mov	r1, r0
 8020314:	9a00      	ldr	r2, [sp, #0]
 8020316:	469c      	mov	ip, r3
 8020318:	e78e      	b.n	8020238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 802031a:	1957      	adds	r7, r2, r5
 802031c:	ebac 0305 	sub.w	r3, ip, r5
 8020320:	b2ba      	uxth	r2, r7
 8020322:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8020326:	9200      	str	r2, [sp, #0]
 8020328:	b29b      	uxth	r3, r3
 802032a:	2500      	movs	r5, #0
 802032c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802032e:	455a      	cmp	r2, fp
 8020330:	d88e      	bhi.n	8020250 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8020332:	4601      	mov	r1, r0
 8020334:	e749      	b.n	80201ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8020336:	458c      	cmp	ip, r1
 8020338:	bf2c      	ite	cs
 802033a:	4628      	movcs	r0, r5
 802033c:	462b      	movcc	r3, r5
 802033e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8020340:	bf27      	ittee	cs
 8020342:	9109      	strcs	r1, [sp, #36]	; 0x24
 8020344:	ebac 0301 	subcs.w	r3, ip, r1
 8020348:	eba1 000c 	subcc.w	r0, r1, ip
 802034c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8020350:	bf2c      	ite	cs
 8020352:	b29b      	uxthcs	r3, r3
 8020354:	b280      	uxthcc	r0, r0
 8020356:	2dff      	cmp	r5, #255	; 0xff
 8020358:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802035a:	eb02 0705 	add.w	r7, r2, r5
 802035e:	b2bd      	uxth	r5, r7
 8020360:	9500      	str	r5, [sp, #0]
 8020362:	d12f      	bne.n	80203c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8020364:	465e      	mov	r6, fp
 8020366:	9d00      	ldr	r5, [sp, #0]
 8020368:	42aa      	cmp	r2, r5
 802036a:	f040 8084 	bne.w	8020476 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 802036e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020370:	458c      	cmp	ip, r1
 8020372:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020376:	d3d8      	bcc.n	802032a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8020378:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802037a:	9904      	ldr	r1, [sp, #16]
 802037c:	8812      	ldrh	r2, [r2, #0]
 802037e:	1a52      	subs	r2, r2, r1
 8020380:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020384:	9a08      	ldr	r2, [sp, #32]
 8020386:	9916      	ldr	r1, [sp, #88]	; 0x58
 8020388:	3201      	adds	r2, #1
 802038a:	428a      	cmp	r2, r1
 802038c:	9208      	str	r2, [sp, #32]
 802038e:	f040 8092 	bne.w	80204b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8020392:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8020396:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 802039a:	9b04      	ldr	r3, [sp, #16]
 802039c:	eba5 050c 	sub.w	r5, r5, ip
 80203a0:	b2ad      	uxth	r5, r5
 80203a2:	2d00      	cmp	r5, #0
 80203a4:	bf08      	it	eq
 80203a6:	4619      	moveq	r1, r3
 80203a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80203aa:	bf18      	it	ne
 80203ac:	2100      	movne	r1, #0
 80203ae:	3301      	adds	r3, #1
 80203b0:	930d      	str	r3, [sp, #52]	; 0x34
 80203b2:	b289      	uxth	r1, r1
 80203b4:	e700      	b.n	80201b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80203b6:	bf00      	nop
 80203b8:	20013854 	.word	0x20013854
 80203bc:	2001384e 	.word	0x2001384e
 80203c0:	fffff7fb 	.word	0xfffff7fb
 80203c4:	46d9      	mov	r9, fp
 80203c6:	9d00      	ldr	r5, [sp, #0]
 80203c8:	42aa      	cmp	r2, r5
 80203ca:	d0d0      	beq.n	802036e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 80203cc:	1c55      	adds	r5, r2, #1
 80203ce:	4422      	add	r2, r4
 80203d0:	9517      	str	r5, [sp, #92]	; 0x5c
 80203d2:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 80203d6:	9a06      	ldr	r2, [sp, #24]
 80203d8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80203dc:	4472      	add	r2, lr
 80203de:	9212      	str	r2, [sp, #72]	; 0x48
 80203e0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80203e2:	f8b9 2000 	ldrh.w	r2, [r9]
 80203e6:	f897 a002 	ldrb.w	sl, [r7, #2]
 80203ea:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80203ec:	1216      	asrs	r6, r2, #8
 80203ee:	fb1a fa07 	smulbb	sl, sl, r7
 80203f2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80203f6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80203f8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80203fc:	fb06 a607 	mla	r6, r6, r7, sl
 8020400:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8020402:	f897 a001 	ldrb.w	sl, [r7, #1]
 8020406:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020408:	10d5      	asrs	r5, r2, #3
 802040a:	fb1a fa07 	smulbb	sl, sl, r7
 802040e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020412:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020414:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020418:	fb05 a507 	mla	r5, r5, r7, sl
 802041c:	9f06      	ldr	r7, [sp, #24]
 802041e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020422:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020424:	00d2      	lsls	r2, r2, #3
 8020426:	fb1e fe07 	smulbb	lr, lr, r7
 802042a:	b2d2      	uxtb	r2, r2
 802042c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 802042e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020432:	b2b6      	uxth	r6, r6
 8020434:	fb02 e207 	mla	r2, r2, r7, lr
 8020438:	b292      	uxth	r2, r2
 802043a:	b2ad      	uxth	r5, r5
 802043c:	f106 0a01 	add.w	sl, r6, #1
 8020440:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8020444:	f102 0e01 	add.w	lr, r2, #1
 8020448:	f105 0a01 	add.w	sl, r5, #1
 802044c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8020450:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020454:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020458:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802045c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020460:	ea4e 0606 	orr.w	r6, lr, r6
 8020464:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020468:	ea46 060a 	orr.w	r6, r6, sl
 802046c:	f829 6b02 	strh.w	r6, [r9], #2
 8020470:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020474:	e7a7      	b.n	80203c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8020476:	f102 0e01 	add.w	lr, r2, #1
 802047a:	4422      	add	r2, r4
 802047c:	9f06      	ldr	r7, [sp, #24]
 802047e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 8020482:	9a06      	ldr	r2, [sp, #24]
 8020484:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020488:	eb02 0a05 	add.w	sl, r2, r5
 802048c:	4a13      	ldr	r2, [pc, #76]	; (80204dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 802048e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020492:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8020496:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802049a:	00d2      	lsls	r2, r2, #3
 802049c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80204a0:	ea49 0202 	orr.w	r2, r9, r2
 80204a4:	f817 9005 	ldrb.w	r9, [r7, r5]
 80204a8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80204ac:	f826 2b02 	strh.w	r2, [r6], #2
 80204b0:	fa1f f28e 	uxth.w	r2, lr
 80204b4:	e757      	b.n	8020366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80204b6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80204ba:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80204be:	1a2d      	subs	r5, r5, r0
 80204c0:	b2ad      	uxth	r5, r5
 80204c2:	2d00      	cmp	r5, #0
 80204c4:	bf18      	it	ne
 80204c6:	2000      	movne	r0, #0
 80204c8:	e730      	b.n	802032c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80204ca:	4b05      	ldr	r3, [pc, #20]	; (80204e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80204cc:	6818      	ldr	r0, [r3, #0]
 80204ce:	6803      	ldr	r3, [r0, #0]
 80204d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80204d2:	4798      	blx	r3
 80204d4:	b01f      	add	sp, #124	; 0x7c
 80204d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80204da:	bf00      	nop
 80204dc:	fffff800 	.word	0xfffff800
 80204e0:	20013854 	.word	0x20013854

080204e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80204e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80204e8:	b091      	sub	sp, #68	; 0x44
 80204ea:	469b      	mov	fp, r3
 80204ec:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80204f0:	4616      	mov	r6, r2
 80204f2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80204f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80204fa:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80204fe:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8020502:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020506:	4604      	mov	r4, r0
 8020508:	460d      	mov	r5, r1
 802050a:	4640      	mov	r0, r8
 802050c:	4659      	mov	r1, fp
 802050e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8020512:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8020516:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 802051a:	f7f2 fb9f 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 802051e:	4631      	mov	r1, r6
 8020520:	4640      	mov	r0, r8
 8020522:	f7f2 fb9b 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 8020526:	4b74      	ldr	r3, [pc, #464]	; (80206f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8020528:	8818      	ldrh	r0, [r3, #0]
 802052a:	4b74      	ldr	r3, [pc, #464]	; (80206fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 802052c:	8819      	ldrh	r1, [r3, #0]
 802052e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8020532:	2b00      	cmp	r3, #0
 8020534:	b202      	sxth	r2, r0
 8020536:	b20e      	sxth	r6, r1
 8020538:	da07      	bge.n	802054a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 802053a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 802053e:	4463      	add	r3, ip
 8020540:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8020544:	2300      	movs	r3, #0
 8020546:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 802054a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802054e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020552:	1ad2      	subs	r2, r2, r3
 8020554:	4594      	cmp	ip, r2
 8020556:	bfc4      	itt	gt
 8020558:	1ac2      	subgt	r2, r0, r3
 802055a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 802055e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020562:	2a00      	cmp	r2, #0
 8020564:	da07      	bge.n	8020576 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8020566:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 802056a:	4462      	add	r2, ip
 802056c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8020570:	2200      	movs	r2, #0
 8020572:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8020576:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 802057a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 802057e:	eba6 060a 	sub.w	r6, r6, sl
 8020582:	42b2      	cmp	r2, r6
 8020584:	bfc4      	itt	gt
 8020586:	eba1 020a 	subgt.w	r2, r1, sl
 802058a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 802058e:	4a5c      	ldr	r2, [pc, #368]	; (8020700 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8020590:	7812      	ldrb	r2, [r2, #0]
 8020592:	b9a2      	cbnz	r2, 80205be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8020594:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8020598:	4286      	cmp	r6, r0
 802059a:	4640      	mov	r0, r8
 802059c:	9303      	str	r3, [sp, #12]
 802059e:	bf14      	ite	ne
 80205a0:	2600      	movne	r6, #0
 80205a2:	2601      	moveq	r6, #1
 80205a4:	f7f2 fb9d 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80205a8:	9b03      	ldr	r3, [sp, #12]
 80205aa:	b160      	cbz	r0, 80205c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80205ac:	2300      	movs	r3, #0
 80205ae:	8023      	strh	r3, [r4, #0]
 80205b0:	8063      	strh	r3, [r4, #2]
 80205b2:	80a3      	strh	r3, [r4, #4]
 80205b4:	4620      	mov	r0, r4
 80205b6:	80e3      	strh	r3, [r4, #6]
 80205b8:	b011      	add	sp, #68	; 0x44
 80205ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80205be:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80205c2:	428e      	cmp	r6, r1
 80205c4:	e7e9      	b.n	802059a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80205c6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80205ca:	9205      	str	r2, [sp, #20]
 80205cc:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80205d0:	9206      	str	r2, [sp, #24]
 80205d2:	f8bb 2000 	ldrh.w	r2, [fp]
 80205d6:	900e      	str	r0, [sp, #56]	; 0x38
 80205d8:	1a9b      	subs	r3, r3, r2
 80205da:	b21b      	sxth	r3, r3
 80205dc:	9303      	str	r3, [sp, #12]
 80205de:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80205e2:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80205e6:	ebaa 0a03 	sub.w	sl, sl, r3
 80205ea:	fa0f f38a 	sxth.w	r3, sl
 80205ee:	9304      	str	r3, [sp, #16]
 80205f0:	9b03      	ldr	r3, [sp, #12]
 80205f2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80205f6:	9b04      	ldr	r3, [sp, #16]
 80205f8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80205fc:	9b05      	ldr	r3, [sp, #20]
 80205fe:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8020602:	a90e      	add	r1, sp, #56	; 0x38
 8020604:	9b06      	ldr	r3, [sp, #24]
 8020606:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 802060a:	a80c      	add	r0, sp, #48	; 0x30
 802060c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8020610:	f7f8 f906 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020614:	4640      	mov	r0, r8
 8020616:	f7f8 f8bf 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802061a:	a80e      	add	r0, sp, #56	; 0x38
 802061c:	f7f8 f8bc 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020620:	4b38      	ldr	r3, [pc, #224]	; (8020704 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8020622:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8020626:	881b      	ldrh	r3, [r3, #0]
 8020628:	9307      	str	r3, [sp, #28]
 802062a:	682b      	ldr	r3, [r5, #0]
 802062c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8020708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8020630:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020632:	4628      	mov	r0, r5
 8020634:	4798      	blx	r3
 8020636:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 802063a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 802063e:	4681      	mov	r9, r0
 8020640:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8020644:	f8db 0000 	ldr.w	r0, [fp]
 8020648:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802064a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802064e:	6803      	ldr	r3, [r0, #0]
 8020650:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020652:	4798      	blx	r3
 8020654:	4607      	mov	r7, r0
 8020656:	f8db 0000 	ldr.w	r0, [fp]
 802065a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 802065e:	6803      	ldr	r3, [r0, #0]
 8020660:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020664:	9109      	str	r1, [sp, #36]	; 0x24
 8020666:	9208      	str	r2, [sp, #32]
 8020668:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802066a:	4798      	blx	r3
 802066c:	f010 0f01 	tst.w	r0, #1
 8020670:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020674:	d012      	beq.n	802069c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8020676:	f8db 0000 	ldr.w	r0, [fp]
 802067a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 802067e:	6803      	ldr	r3, [r0, #0]
 8020680:	9200      	str	r2, [sp, #0]
 8020682:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8020684:	e898 0006 	ldmia.w	r8, {r1, r2}
 8020688:	462b      	mov	r3, r5
 802068a:	47b0      	blx	r6
 802068c:	9b03      	ldr	r3, [sp, #12]
 802068e:	8023      	strh	r3, [r4, #0]
 8020690:	9b04      	ldr	r3, [sp, #16]
 8020692:	8063      	strh	r3, [r4, #2]
 8020694:	9b05      	ldr	r3, [sp, #20]
 8020696:	80a3      	strh	r3, [r4, #4]
 8020698:	9b06      	ldr	r3, [sp, #24]
 802069a:	e78b      	b.n	80205b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 802069c:	fb09 f202 	mul.w	r2, r9, r2
 80206a0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80206a4:	440f      	add	r7, r1
 80206a6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 80206aa:	b166      	cbz	r6, 80206c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80206ac:	9a07      	ldr	r2, [sp, #28]
 80206ae:	4592      	cmp	sl, r2
 80206b0:	d109      	bne.n	80206c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80206b2:	f8db 0000 	ldr.w	r0, [fp]
 80206b6:	6802      	ldr	r2, [r0, #0]
 80206b8:	fb09 f303 	mul.w	r3, r9, r3
 80206bc:	6b56      	ldr	r6, [r2, #52]	; 0x34
 80206be:	4629      	mov	r1, r5
 80206c0:	463a      	mov	r2, r7
 80206c2:	47b0      	blx	r6
 80206c4:	e7e2      	b.n	802068c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80206c6:	fb0a f303 	mul.w	r3, sl, r3
 80206ca:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8020708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80206ce:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80206d2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80206d6:	4545      	cmp	r5, r8
 80206d8:	d2d8      	bcs.n	802068c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80206da:	f8db 0000 	ldr.w	r0, [fp]
 80206de:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80206e2:	6802      	ldr	r2, [r0, #0]
 80206e4:	4629      	mov	r1, r5
 80206e6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80206ea:	005b      	lsls	r3, r3, #1
 80206ec:	463a      	mov	r2, r7
 80206ee:	47d0      	blx	sl
 80206f0:	444f      	add	r7, r9
 80206f2:	4435      	add	r5, r6
 80206f4:	e7ef      	b.n	80206d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80206f6:	bf00      	nop
 80206f8:	20013848 	.word	0x20013848
 80206fc:	2001384a 	.word	0x2001384a
 8020700:	2001384c 	.word	0x2001384c
 8020704:	2001384e 	.word	0x2001384e
 8020708:	20013854 	.word	0x20013854

0802070c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 802070c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802070e:	4606      	mov	r6, r0
 8020710:	b087      	sub	sp, #28
 8020712:	460c      	mov	r4, r1
 8020714:	4617      	mov	r7, r2
 8020716:	461d      	mov	r5, r3
 8020718:	b333      	cbz	r3, 8020768 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 802071a:	4608      	mov	r0, r1
 802071c:	f7f2 fae1 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020720:	bb10      	cbnz	r0, 8020768 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020722:	6820      	ldr	r0, [r4, #0]
 8020724:	6861      	ldr	r1, [r4, #4]
 8020726:	4c1c      	ldr	r4, [pc, #112]	; (8020798 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8020728:	ab04      	add	r3, sp, #16
 802072a:	c303      	stmia	r3!, {r0, r1}
 802072c:	a804      	add	r0, sp, #16
 802072e:	f7f8 f833 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020732:	6820      	ldr	r0, [r4, #0]
 8020734:	6803      	ldr	r3, [r0, #0]
 8020736:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020738:	4798      	blx	r3
 802073a:	2dff      	cmp	r5, #255	; 0xff
 802073c:	d016      	beq.n	802076c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 802073e:	f010 0f08 	tst.w	r0, #8
 8020742:	6820      	ldr	r0, [r4, #0]
 8020744:	d015      	beq.n	8020772 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8020746:	2400      	movs	r4, #0
 8020748:	6801      	ldr	r1, [r0, #0]
 802074a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 802074e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020752:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8020756:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 802075a:	9401      	str	r4, [sp, #4]
 802075c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8020760:	9400      	str	r4, [sp, #0]
 8020762:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8020764:	4639      	mov	r1, r7
 8020766:	47a0      	blx	r4
 8020768:	b007      	add	sp, #28
 802076a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802076c:	f010 0f02 	tst.w	r0, #2
 8020770:	e7e7      	b.n	8020742 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8020772:	6803      	ldr	r3, [r0, #0]
 8020774:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020776:	4798      	blx	r3
 8020778:	4b08      	ldr	r3, [pc, #32]	; (802079c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 802077a:	881a      	ldrh	r2, [r3, #0]
 802077c:	6833      	ldr	r3, [r6, #0]
 802077e:	e9cd 7500 	strd	r7, r5, [sp]
 8020782:	4601      	mov	r1, r0
 8020784:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8020786:	4630      	mov	r0, r6
 8020788:	ab04      	add	r3, sp, #16
 802078a:	47a8      	blx	r5
 802078c:	6820      	ldr	r0, [r4, #0]
 802078e:	6803      	ldr	r3, [r0, #0]
 8020790:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020792:	4798      	blx	r3
 8020794:	e7e8      	b.n	8020768 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020796:	bf00      	nop
 8020798:	20013854 	.word	0x20013854
 802079c:	2001384e 	.word	0x2001384e

080207a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80207a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80207a4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 80207a8:	9e08      	ldr	r6, [sp, #32]
 80207aa:	4688      	mov	r8, r1
 80207ac:	4614      	mov	r4, r2
 80207ae:	461d      	mov	r5, r3
 80207b0:	2f00      	cmp	r7, #0
 80207b2:	f000 80a9 	beq.w	8020908 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80207b6:	4618      	mov	r0, r3
 80207b8:	f7f2 fa93 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80207bc:	2800      	cmp	r0, #0
 80207be:	f040 80a3 	bne.w	8020908 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80207c2:	f9b5 1000 	ldrsh.w	r1, [r5]
 80207c6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80207ca:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80207ce:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80207d2:	fb04 1303 	mla	r3, r4, r3, r1
 80207d6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80207da:	4365      	muls	r5, r4
 80207dc:	2fff      	cmp	r7, #255	; 0xff
 80207de:	eba4 0200 	sub.w	r2, r4, r0
 80207e2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80207e6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80207ea:	d04a      	beq.n	8020882 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80207ec:	b2bc      	uxth	r4, r7
 80207ee:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80207f2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80207f6:	fa5f f788 	uxtb.w	r7, r8
 80207fa:	b2f3      	uxtb	r3, r6
 80207fc:	0040      	lsls	r0, r0, #1
 80207fe:	fb0e fe04 	mul.w	lr, lr, r4
 8020802:	4367      	muls	r7, r4
 8020804:	4363      	muls	r3, r4
 8020806:	ea4f 0842 	mov.w	r8, r2, lsl #1
 802080a:	fa1f fc8c 	uxth.w	ip, ip
 802080e:	42a9      	cmp	r1, r5
 8020810:	d27a      	bcs.n	8020908 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020812:	eb01 0900 	add.w	r9, r1, r0
 8020816:	4549      	cmp	r1, r9
 8020818:	d231      	bcs.n	802087e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 802081a:	880a      	ldrh	r2, [r1, #0]
 802081c:	1214      	asrs	r4, r2, #8
 802081e:	10d6      	asrs	r6, r2, #3
 8020820:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8020824:	00d2      	lsls	r2, r2, #3
 8020826:	b2d2      	uxtb	r2, r2
 8020828:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802082c:	fb14 f40c 	smulbb	r4, r4, ip
 8020830:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020834:	4474      	add	r4, lr
 8020836:	fb12 f20c 	smulbb	r2, r2, ip
 802083a:	b2a4      	uxth	r4, r4
 802083c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020840:	441a      	add	r2, r3
 8020842:	b292      	uxth	r2, r2
 8020844:	f104 0a01 	add.w	sl, r4, #1
 8020848:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802084c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020850:	fb16 f60c 	smulbb	r6, r6, ip
 8020854:	f102 0a01 	add.w	sl, r2, #1
 8020858:	443e      	add	r6, r7
 802085a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802085e:	b2b6      	uxth	r6, r6
 8020860:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020864:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020868:	4322      	orrs	r2, r4
 802086a:	1c74      	adds	r4, r6, #1
 802086c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8020870:	0976      	lsrs	r6, r6, #5
 8020872:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8020876:	4332      	orrs	r2, r6
 8020878:	f821 2b02 	strh.w	r2, [r1], #2
 802087c:	e7cb      	b.n	8020816 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 802087e:	4441      	add	r1, r8
 8020880:	e7c5      	b.n	802080e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8020882:	4f22      	ldr	r7, [pc, #136]	; (802090c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8020884:	0973      	lsrs	r3, r6, #5
 8020886:	ea08 0707 	and.w	r7, r8, r7
 802088a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802088e:	433b      	orrs	r3, r7
 8020890:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8020894:	4333      	orrs	r3, r6
 8020896:	07e7      	lsls	r7, r4, #31
 8020898:	b29b      	uxth	r3, r3
 802089a:	d50b      	bpl.n	80208b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 802089c:	0040      	lsls	r0, r0, #1
 802089e:	0052      	lsls	r2, r2, #1
 80208a0:	42a9      	cmp	r1, r5
 80208a2:	d231      	bcs.n	8020908 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80208a4:	180c      	adds	r4, r1, r0
 80208a6:	42a1      	cmp	r1, r4
 80208a8:	d202      	bcs.n	80208b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80208aa:	f821 3b02 	strh.w	r3, [r1], #2
 80208ae:	e7fa      	b.n	80208a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 80208b0:	4411      	add	r1, r2
 80208b2:	e7f5      	b.n	80208a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80208b4:	078e      	lsls	r6, r1, #30
 80208b6:	d008      	beq.n	80208ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80208b8:	0066      	lsls	r6, r4, #1
 80208ba:	460a      	mov	r2, r1
 80208bc:	42aa      	cmp	r2, r5
 80208be:	d202      	bcs.n	80208c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80208c0:	8013      	strh	r3, [r2, #0]
 80208c2:	4432      	add	r2, r6
 80208c4:	e7fa      	b.n	80208bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80208c6:	3102      	adds	r1, #2
 80208c8:	3801      	subs	r0, #1
 80208ca:	07c2      	lsls	r2, r0, #31
 80208cc:	d50b      	bpl.n	80208e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 80208ce:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80208d2:	3a01      	subs	r2, #1
 80208d4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80208d8:	0066      	lsls	r6, r4, #1
 80208da:	42aa      	cmp	r2, r5
 80208dc:	d202      	bcs.n	80208e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80208de:	8013      	strh	r3, [r2, #0]
 80208e0:	4432      	add	r2, r6
 80208e2:	e7fa      	b.n	80208da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80208e4:	3801      	subs	r0, #1
 80208e6:	b178      	cbz	r0, 8020908 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80208e8:	1040      	asrs	r0, r0, #1
 80208ea:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80208ee:	0080      	lsls	r0, r0, #2
 80208f0:	0064      	lsls	r4, r4, #1
 80208f2:	42a9      	cmp	r1, r5
 80208f4:	d208      	bcs.n	8020908 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80208f6:	180e      	adds	r6, r1, r0
 80208f8:	460a      	mov	r2, r1
 80208fa:	42b2      	cmp	r2, r6
 80208fc:	d202      	bcs.n	8020904 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80208fe:	f842 3b04 	str.w	r3, [r2], #4
 8020902:	e7fa      	b.n	80208fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8020904:	4421      	add	r1, r4
 8020906:	e7f4      	b.n	80208f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8020908:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802090c:	00fff800 	.word	0x00fff800

08020910 <_ZN8touchgfx8LCD16bppC1Ev>:
 8020910:	2200      	movs	r2, #0
 8020912:	4912      	ldr	r1, [pc, #72]	; (802095c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8020914:	6042      	str	r2, [r0, #4]
 8020916:	6001      	str	r1, [r0, #0]
 8020918:	e9c0 2202 	strd	r2, r2, [r0, #8]
 802091c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8020920:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8020924:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8020928:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 802092c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8020930:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8020934:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8020938:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 802093c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8020940:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8020944:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8020948:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 802094c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8020950:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 8020954:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8020958:	4770      	bx	lr
 802095a:	bf00      	nop
 802095c:	080323c4 	.word	0x080323c4

08020960 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8020960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020964:	460d      	mov	r5, r1
 8020966:	b08d      	sub	sp, #52	; 0x34
 8020968:	4604      	mov	r4, r0
 802096a:	6808      	ldr	r0, [r1, #0]
 802096c:	6849      	ldr	r1, [r1, #4]
 802096e:	4699      	mov	r9, r3
 8020970:	ab08      	add	r3, sp, #32
 8020972:	c303      	stmia	r3!, {r0, r1}
 8020974:	6810      	ldr	r0, [r2, #0]
 8020976:	6851      	ldr	r1, [r2, #4]
 8020978:	ab0a      	add	r3, sp, #40	; 0x28
 802097a:	c303      	stmia	r3!, {r0, r1}
 802097c:	a808      	add	r0, sp, #32
 802097e:	f7f7 ff0b 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020982:	4629      	mov	r1, r5
 8020984:	a80a      	add	r0, sp, #40	; 0x28
 8020986:	f7f7 ff4b 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802098a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802098e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8020992:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8020996:	4d63      	ldr	r5, [pc, #396]	; (8020b24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020998:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 802099c:	6828      	ldr	r0, [r5, #0]
 802099e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80209a2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80209a6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80209aa:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80209ae:	440a      	add	r2, r1
 80209b0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80209b4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80209b8:	4413      	add	r3, r2
 80209ba:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80209be:	6803      	ldr	r3, [r0, #0]
 80209c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80209c2:	4798      	blx	r3
 80209c4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80209c8:	d119      	bne.n	80209fe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80209ca:	f010 0f20 	tst.w	r0, #32
 80209ce:	6828      	ldr	r0, [r5, #0]
 80209d0:	d018      	beq.n	8020a04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80209d2:	2500      	movs	r5, #0
 80209d4:	6801      	ldr	r1, [r0, #0]
 80209d6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80209da:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80209de:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80209e2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 80209e6:	9502      	str	r5, [sp, #8]
 80209e8:	b2b6      	uxth	r6, r6
 80209ea:	fa1f f588 	uxth.w	r5, r8
 80209ee:	9601      	str	r6, [sp, #4]
 80209f0:	9500      	str	r5, [sp, #0]
 80209f2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80209f4:	4621      	mov	r1, r4
 80209f6:	47a8      	blx	r5
 80209f8:	b00d      	add	sp, #52	; 0x34
 80209fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209fe:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020a02:	e7e4      	b.n	80209ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8020a04:	6803      	ldr	r3, [r0, #0]
 8020a06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020a08:	4798      	blx	r3
 8020a0a:	4947      	ldr	r1, [pc, #284]	; (8020b28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8020a0c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020a10:	880b      	ldrh	r3, [r1, #0]
 8020a12:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8020a16:	fb03 5202 	mla	r2, r3, r2, r5
 8020a1a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020a1e:	4373      	muls	r3, r6
 8020a20:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020a24:	9307      	str	r3, [sp, #28]
 8020a26:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8020a2a:	9306      	str	r3, [sp, #24]
 8020a2c:	468a      	mov	sl, r1
 8020a2e:	9b07      	ldr	r3, [sp, #28]
 8020a30:	4298      	cmp	r0, r3
 8020a32:	d270      	bcs.n	8020b16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8020a34:	9b06      	ldr	r3, [sp, #24]
 8020a36:	4621      	mov	r1, r4
 8020a38:	eb00 0b03 	add.w	fp, r0, r3
 8020a3c:	4558      	cmp	r0, fp
 8020a3e:	d25d      	bcs.n	8020afc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8020a40:	f851 4b04 	ldr.w	r4, [r1], #4
 8020a44:	0e23      	lsrs	r3, r4, #24
 8020a46:	d014      	beq.n	8020a72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020a48:	2bff      	cmp	r3, #255	; 0xff
 8020a4a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8020a4e:	d112      	bne.n	8020a76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020a50:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020a54:	d10f      	bne.n	8020a76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020a56:	0963      	lsrs	r3, r4, #5
 8020a58:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8020a5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a60:	f02c 0c07 	bic.w	ip, ip, #7
 8020a64:	ea43 0c0c 	orr.w	ip, r3, ip
 8020a68:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8020a6c:	ea4c 0404 	orr.w	r4, ip, r4
 8020a70:	8004      	strh	r4, [r0, #0]
 8020a72:	3002      	adds	r0, #2
 8020a74:	e7e2      	b.n	8020a3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8020a76:	fb09 f303 	mul.w	r3, r9, r3
 8020a7a:	8807      	ldrh	r7, [r0, #0]
 8020a7c:	1c5a      	adds	r2, r3, #1
 8020a7e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8020a82:	1212      	asrs	r2, r2, #8
 8020a84:	123e      	asrs	r6, r7, #8
 8020a86:	b293      	uxth	r3, r2
 8020a88:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8020a8c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020a90:	43d2      	mvns	r2, r2
 8020a92:	b2d2      	uxtb	r2, r2
 8020a94:	10fd      	asrs	r5, r7, #3
 8020a96:	fb1e fe03 	smulbb	lr, lr, r3
 8020a9a:	00ff      	lsls	r7, r7, #3
 8020a9c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020aa0:	fb06 e602 	mla	r6, r6, r2, lr
 8020aa4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020aa8:	b2ff      	uxtb	r7, r7
 8020aaa:	fa5f fc8c 	uxtb.w	ip, ip
 8020aae:	b2e4      	uxtb	r4, r4
 8020ab0:	b2b6      	uxth	r6, r6
 8020ab2:	fb1c fc03 	smulbb	ip, ip, r3
 8020ab6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020aba:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8020abe:	fb14 f403 	smulbb	r4, r4, r3
 8020ac2:	fb05 c502 	mla	r5, r5, r2, ip
 8020ac6:	f106 0e01 	add.w	lr, r6, #1
 8020aca:	fb07 4702 	mla	r7, r7, r2, r4
 8020ace:	b2ad      	uxth	r5, r5
 8020ad0:	b2bf      	uxth	r7, r7
 8020ad2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8020ad6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8020ada:	f105 0c01 	add.w	ip, r5, #1
 8020ade:	1c7e      	adds	r6, r7, #1
 8020ae0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8020ae4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020ae8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8020aec:	096d      	lsrs	r5, r5, #5
 8020aee:	ea46 060e 	orr.w	r6, r6, lr
 8020af2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020af6:	432e      	orrs	r6, r5
 8020af8:	8006      	strh	r6, [r0, #0]
 8020afa:	e7ba      	b.n	8020a72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020afc:	f8ba 3000 	ldrh.w	r3, [sl]
 8020b00:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8020b04:	eba3 0308 	sub.w	r3, r3, r8
 8020b08:	eba4 0408 	sub.w	r4, r4, r8
 8020b0c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020b10:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8020b14:	e78b      	b.n	8020a2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8020b16:	4b03      	ldr	r3, [pc, #12]	; (8020b24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020b18:	6818      	ldr	r0, [r3, #0]
 8020b1a:	6803      	ldr	r3, [r0, #0]
 8020b1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020b1e:	4798      	blx	r3
 8020b20:	e76a      	b.n	80209f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8020b22:	bf00      	nop
 8020b24:	20013854 	.word	0x20013854
 8020b28:	2001384e 	.word	0x2001384e

08020b2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8020b2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020b30:	460c      	mov	r4, r1
 8020b32:	b085      	sub	sp, #20
 8020b34:	6810      	ldr	r0, [r2, #0]
 8020b36:	6851      	ldr	r1, [r2, #4]
 8020b38:	466d      	mov	r5, sp
 8020b3a:	c503      	stmia	r5!, {r0, r1}
 8020b3c:	6818      	ldr	r0, [r3, #0]
 8020b3e:	6859      	ldr	r1, [r3, #4]
 8020b40:	4616      	mov	r6, r2
 8020b42:	c503      	stmia	r5!, {r0, r1}
 8020b44:	4668      	mov	r0, sp
 8020b46:	f7f7 fe27 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020b4a:	4631      	mov	r1, r6
 8020b4c:	a802      	add	r0, sp, #8
 8020b4e:	f7f7 fe67 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020b52:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8020b56:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8020b5a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8020b5e:	4d28      	ldr	r5, [pc, #160]	; (8020c00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8020b60:	4e28      	ldr	r6, [pc, #160]	; (8020c04 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8020b62:	6828      	ldr	r0, [r5, #0]
 8020b64:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8020b68:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8020b6c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020b70:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020b74:	f8bd 1000 	ldrh.w	r1, [sp]
 8020b78:	440a      	add	r2, r1
 8020b7a:	f8ad 2008 	strh.w	r2, [sp, #8]
 8020b7e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8020b82:	4413      	add	r3, r2
 8020b84:	f8ad 300a 	strh.w	r3, [sp, #10]
 8020b88:	6803      	ldr	r3, [r0, #0]
 8020b8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020b8c:	4798      	blx	r3
 8020b8e:	8833      	ldrh	r3, [r6, #0]
 8020b90:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8020b94:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8020b98:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8020c08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8020b9c:	fb03 1202 	mla	r2, r3, r2, r1
 8020ba0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020ba4:	fb08 f303 	mul.w	r3, r8, r3
 8020ba8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020bac:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8020bb0:	4298      	cmp	r0, r3
 8020bb2:	d21d      	bcs.n	8020bf0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8020bb4:	eb00 080c 	add.w	r8, r0, ip
 8020bb8:	4540      	cmp	r0, r8
 8020bba:	d20f      	bcs.n	8020bdc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8020bbc:	f854 1b04 	ldr.w	r1, [r4], #4
 8020bc0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8020bc4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8020bc8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020bcc:	ea42 0209 	orr.w	r2, r2, r9
 8020bd0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020bd4:	430a      	orrs	r2, r1
 8020bd6:	f820 2b02 	strh.w	r2, [r0], #2
 8020bda:	e7ed      	b.n	8020bb8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8020bdc:	8832      	ldrh	r2, [r6, #0]
 8020bde:	1bd2      	subs	r2, r2, r7
 8020be0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020be4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8020be8:	1bd2      	subs	r2, r2, r7
 8020bea:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8020bee:	e7df      	b.n	8020bb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8020bf0:	6828      	ldr	r0, [r5, #0]
 8020bf2:	6803      	ldr	r3, [r0, #0]
 8020bf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020bf6:	4798      	blx	r3
 8020bf8:	b005      	add	sp, #20
 8020bfa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020bfe:	bf00      	nop
 8020c00:	20013854 	.word	0x20013854
 8020c04:	2001384e 	.word	0x2001384e
 8020c08:	fffff800 	.word	0xfffff800

08020c0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8020c0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020c10:	460e      	mov	r6, r1
 8020c12:	b08e      	sub	sp, #56	; 0x38
 8020c14:	4604      	mov	r4, r0
 8020c16:	6808      	ldr	r0, [r1, #0]
 8020c18:	6849      	ldr	r1, [r1, #4]
 8020c1a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020df4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8020c1e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8020df8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8020c22:	461d      	mov	r5, r3
 8020c24:	ab0a      	add	r3, sp, #40	; 0x28
 8020c26:	c303      	stmia	r3!, {r0, r1}
 8020c28:	6810      	ldr	r0, [r2, #0]
 8020c2a:	6851      	ldr	r1, [r2, #4]
 8020c2c:	ab0c      	add	r3, sp, #48	; 0x30
 8020c2e:	c303      	stmia	r3!, {r0, r1}
 8020c30:	a80a      	add	r0, sp, #40	; 0x28
 8020c32:	f7f7 fdb1 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020c36:	4631      	mov	r1, r6
 8020c38:	a80c      	add	r0, sp, #48	; 0x30
 8020c3a:	f7f7 fdf1 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020c3e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8020c42:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8020c46:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020c4a:	f8d8 0000 	ldr.w	r0, [r8]
 8020c4e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8020c52:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8020c56:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020c5a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020c5e:	440c      	add	r4, r1
 8020c60:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8020c64:	440a      	add	r2, r1
 8020c66:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020c6a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8020c6e:	4413      	add	r3, r2
 8020c70:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020c74:	6803      	ldr	r3, [r0, #0]
 8020c76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020c78:	4798      	blx	r3
 8020c7a:	2dff      	cmp	r5, #255	; 0xff
 8020c7c:	d124      	bne.n	8020cc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8020c7e:	f010 0f01 	tst.w	r0, #1
 8020c82:	f8d8 0000 	ldr.w	r0, [r8]
 8020c86:	d022      	beq.n	8020cce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8020c88:	2100      	movs	r1, #0
 8020c8a:	f8d0 c000 	ldr.w	ip, [r0]
 8020c8e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8020c92:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8020c96:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8020c9a:	f04f 0e01 	mov.w	lr, #1
 8020c9e:	f8cd e018 	str.w	lr, [sp, #24]
 8020ca2:	f8b9 e000 	ldrh.w	lr, [r9]
 8020ca6:	9503      	str	r5, [sp, #12]
 8020ca8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8020cac:	b2b6      	uxth	r6, r6
 8020cae:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020cb2:	9102      	str	r1, [sp, #8]
 8020cb4:	b2bf      	uxth	r7, r7
 8020cb6:	9601      	str	r6, [sp, #4]
 8020cb8:	9700      	str	r7, [sp, #0]
 8020cba:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8020cbe:	4621      	mov	r1, r4
 8020cc0:	47a8      	blx	r5
 8020cc2:	b00e      	add	sp, #56	; 0x38
 8020cc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020cc8:	f010 0f04 	tst.w	r0, #4
 8020ccc:	e7d9      	b.n	8020c82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8020cce:	6803      	ldr	r3, [r0, #0]
 8020cd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020cd2:	4798      	blx	r3
 8020cd4:	f8b9 3000 	ldrh.w	r3, [r9]
 8020cd8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8020cdc:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8020ce0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020ce4:	fb03 1202 	mla	r2, r3, r2, r1
 8020ce8:	ebac 0c07 	sub.w	ip, ip, r7
 8020cec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020cf0:	435e      	muls	r6, r3
 8020cf2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8020cf6:	2dff      	cmp	r5, #255	; 0xff
 8020cf8:	eba3 0707 	sub.w	r7, r3, r7
 8020cfc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8020d00:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020d04:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8020d08:	d049      	beq.n	8020d9e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8020d0a:	43eb      	mvns	r3, r5
 8020d0c:	fa1f f985 	uxth.w	r9, r5
 8020d10:	b2db      	uxtb	r3, r3
 8020d12:	42b0      	cmp	r0, r6
 8020d14:	d266      	bcs.n	8020de4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020d16:	eb00 0a0e 	add.w	sl, r0, lr
 8020d1a:	4550      	cmp	r0, sl
 8020d1c:	4621      	mov	r1, r4
 8020d1e:	f104 0403 	add.w	r4, r4, #3
 8020d22:	d25b      	bcs.n	8020ddc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8020d24:	8802      	ldrh	r2, [r0, #0]
 8020d26:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020d2a:	ea4f 2822 	mov.w	r8, r2, asr #8
 8020d2e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8020d32:	fb11 f109 	smulbb	r1, r1, r9
 8020d36:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8020d3a:	10d5      	asrs	r5, r2, #3
 8020d3c:	fb08 1803 	mla	r8, r8, r3, r1
 8020d40:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8020d44:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020d48:	fb11 f109 	smulbb	r1, r1, r9
 8020d4c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020d50:	fb05 1503 	mla	r5, r5, r3, r1
 8020d54:	00d2      	lsls	r2, r2, #3
 8020d56:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020d5a:	b2d2      	uxtb	r2, r2
 8020d5c:	fb11 f109 	smulbb	r1, r1, r9
 8020d60:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020d64:	fa1f f888 	uxth.w	r8, r8
 8020d68:	fb02 1203 	mla	r2, r2, r3, r1
 8020d6c:	b292      	uxth	r2, r2
 8020d6e:	f108 0101 	add.w	r1, r8, #1
 8020d72:	b2ad      	uxth	r5, r5
 8020d74:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8020d78:	1c51      	adds	r1, r2, #1
 8020d7a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020d7e:	1c69      	adds	r1, r5, #1
 8020d80:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020d84:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8020d88:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020d8c:	096d      	lsrs	r5, r5, #5
 8020d8e:	ea42 0208 	orr.w	r2, r2, r8
 8020d92:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020d96:	432a      	orrs	r2, r5
 8020d98:	f820 2b02 	strh.w	r2, [r0], #2
 8020d9c:	e7bd      	b.n	8020d1a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8020d9e:	4a14      	ldr	r2, [pc, #80]	; (8020df0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8020da0:	42b0      	cmp	r0, r6
 8020da2:	d21f      	bcs.n	8020de4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020da4:	eb00 050e 	add.w	r5, r0, lr
 8020da8:	42a8      	cmp	r0, r5
 8020daa:	4621      	mov	r1, r4
 8020dac:	f104 0403 	add.w	r4, r4, #3
 8020db0:	d210      	bcs.n	8020dd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8020db2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8020db6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020dba:	00db      	lsls	r3, r3, #3
 8020dbc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8020dc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020dc4:	430b      	orrs	r3, r1
 8020dc6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020dca:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8020dce:	f820 3b02 	strh.w	r3, [r0], #2
 8020dd2:	e7e9      	b.n	8020da8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8020dd4:	4438      	add	r0, r7
 8020dd6:	eb01 040c 	add.w	r4, r1, ip
 8020dda:	e7e1      	b.n	8020da0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8020ddc:	4438      	add	r0, r7
 8020dde:	eb01 040c 	add.w	r4, r1, ip
 8020de2:	e796      	b.n	8020d12 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8020de4:	4b03      	ldr	r3, [pc, #12]	; (8020df4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8020de6:	6818      	ldr	r0, [r3, #0]
 8020de8:	6803      	ldr	r3, [r0, #0]
 8020dea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020dec:	4798      	blx	r3
 8020dee:	e768      	b.n	8020cc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8020df0:	fffff800 	.word	0xfffff800
 8020df4:	20013854 	.word	0x20013854
 8020df8:	2001384e 	.word	0x2001384e

08020dfc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8020dfc:	b4f0      	push	{r4, r5, r6, r7}
 8020dfe:	4616      	mov	r6, r2
 8020e00:	2e01      	cmp	r6, #1
 8020e02:	461c      	mov	r4, r3
 8020e04:	460d      	mov	r5, r1
 8020e06:	9a04      	ldr	r2, [sp, #16]
 8020e08:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8020e0c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8020e10:	d012      	beq.n	8020e38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8020e12:	d303      	bcc.n	8020e1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8020e14:	2e02      	cmp	r6, #2
 8020e16:	d00a      	beq.n	8020e2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8020e18:	bcf0      	pop	{r4, r5, r6, r7}
 8020e1a:	4770      	bx	lr
 8020e1c:	6805      	ldr	r5, [r0, #0]
 8020e1e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8020e22:	68ed      	ldr	r5, [r5, #12]
 8020e24:	4613      	mov	r3, r2
 8020e26:	46ac      	mov	ip, r5
 8020e28:	4622      	mov	r2, r4
 8020e2a:	bcf0      	pop	{r4, r5, r6, r7}
 8020e2c:	4760      	bx	ip
 8020e2e:	4621      	mov	r1, r4
 8020e30:	4628      	mov	r0, r5
 8020e32:	bcf0      	pop	{r4, r5, r6, r7}
 8020e34:	f7ff bd94 	b.w	8020960 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020e38:	4621      	mov	r1, r4
 8020e3a:	4628      	mov	r0, r5
 8020e3c:	bcf0      	pop	{r4, r5, r6, r7}
 8020e3e:	f7ff bee5 	b.w	8020c0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08020e44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8020e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e48:	4681      	mov	r9, r0
 8020e4a:	b093      	sub	sp, #76	; 0x4c
 8020e4c:	6810      	ldr	r0, [r2, #0]
 8020e4e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8020e52:	4f6d      	ldr	r7, [pc, #436]	; (8021008 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8020e54:	4688      	mov	r8, r1
 8020e56:	6851      	ldr	r1, [r2, #4]
 8020e58:	ac0e      	add	r4, sp, #56	; 0x38
 8020e5a:	c403      	stmia	r4!, {r0, r1}
 8020e5c:	6818      	ldr	r0, [r3, #0]
 8020e5e:	6859      	ldr	r1, [r3, #4]
 8020e60:	ac10      	add	r4, sp, #64	; 0x40
 8020e62:	4616      	mov	r6, r2
 8020e64:	c403      	stmia	r4!, {r0, r1}
 8020e66:	a80e      	add	r0, sp, #56	; 0x38
 8020e68:	f7f7 fc96 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020e6c:	4631      	mov	r1, r6
 8020e6e:	a810      	add	r0, sp, #64	; 0x40
 8020e70:	f7f7 fcd6 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020e74:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8020e78:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8020e7c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8020e80:	4e62      	ldr	r6, [pc, #392]	; (802100c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020e82:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8020e86:	6830      	ldr	r0, [r6, #0]
 8020e88:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8020e8c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020e90:	4489      	add	r9, r1
 8020e92:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8020e96:	440a      	add	r2, r1
 8020e98:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8020e9c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8020ea0:	4413      	add	r3, r2
 8020ea2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8020ea6:	6803      	ldr	r3, [r0, #0]
 8020ea8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020eaa:	4798      	blx	r3
 8020eac:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020eb0:	6830      	ldr	r0, [r6, #0]
 8020eb2:	d01d      	beq.n	8020ef0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8020eb4:	2200      	movs	r2, #0
 8020eb6:	6801      	ldr	r1, [r0, #0]
 8020eb8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8020ebc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020ec0:	220b      	movs	r2, #11
 8020ec2:	9207      	str	r2, [sp, #28]
 8020ec4:	883a      	ldrh	r2, [r7, #0]
 8020ec6:	9206      	str	r2, [sp, #24]
 8020ec8:	2201      	movs	r2, #1
 8020eca:	e9cd a204 	strd	sl, r2, [sp, #16]
 8020ece:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8020ed2:	9203      	str	r2, [sp, #12]
 8020ed4:	b2a4      	uxth	r4, r4
 8020ed6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8020eda:	9200      	str	r2, [sp, #0]
 8020edc:	b2ad      	uxth	r5, r5
 8020ede:	9502      	str	r5, [sp, #8]
 8020ee0:	9401      	str	r4, [sp, #4]
 8020ee2:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8020ee4:	4642      	mov	r2, r8
 8020ee6:	4649      	mov	r1, r9
 8020ee8:	47a0      	blx	r4
 8020eea:	b013      	add	sp, #76	; 0x4c
 8020eec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ef0:	6803      	ldr	r3, [r0, #0]
 8020ef2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020ef4:	4798      	blx	r3
 8020ef6:	883b      	ldrh	r3, [r7, #0]
 8020ef8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8020efc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8020f00:	fb03 1202 	mla	r2, r3, r2, r1
 8020f04:	435d      	muls	r5, r3
 8020f06:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020f0a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020f0e:	920c      	str	r2, [sp, #48]	; 0x30
 8020f10:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8020f14:	1b12      	subs	r2, r2, r4
 8020f16:	920d      	str	r2, [sp, #52]	; 0x34
 8020f18:	0062      	lsls	r2, r4, #1
 8020f1a:	1b1c      	subs	r4, r3, r4
 8020f1c:	0063      	lsls	r3, r4, #1
 8020f1e:	920a      	str	r2, [sp, #40]	; 0x28
 8020f20:	930b      	str	r3, [sp, #44]	; 0x2c
 8020f22:	f04f 0e04 	mov.w	lr, #4
 8020f26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020f28:	4298      	cmp	r0, r3
 8020f2a:	d266      	bcs.n	8020ffa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8020f2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020f2e:	eb00 0b03 	add.w	fp, r0, r3
 8020f32:	4558      	cmp	r0, fp
 8020f34:	d25c      	bcs.n	8020ff0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8020f36:	f819 3b01 	ldrb.w	r3, [r9], #1
 8020f3a:	fb1e e303 	smlabb	r3, lr, r3, lr
 8020f3e:	f858 2003 	ldr.w	r2, [r8, r3]
 8020f42:	0e11      	lsrs	r1, r2, #24
 8020f44:	d012      	beq.n	8020f6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020f46:	29ff      	cmp	r1, #255	; 0xff
 8020f48:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8020f4c:	d110      	bne.n	8020f70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020f4e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020f52:	d10d      	bne.n	8020f70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020f54:	0953      	lsrs	r3, r2, #5
 8020f56:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8020f5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020f5e:	f027 0707 	bic.w	r7, r7, #7
 8020f62:	431f      	orrs	r7, r3
 8020f64:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020f68:	433a      	orrs	r2, r7
 8020f6a:	8002      	strh	r2, [r0, #0]
 8020f6c:	3002      	adds	r0, #2
 8020f6e:	e7e0      	b.n	8020f32 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8020f70:	fb0a f101 	mul.w	r1, sl, r1
 8020f74:	8806      	ldrh	r6, [r0, #0]
 8020f76:	1c4b      	adds	r3, r1, #1
 8020f78:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8020f7c:	1235      	asrs	r5, r6, #8
 8020f7e:	10f4      	asrs	r4, r6, #3
 8020f80:	121b      	asrs	r3, r3, #8
 8020f82:	00f6      	lsls	r6, r6, #3
 8020f84:	b299      	uxth	r1, r3
 8020f86:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8020f8a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020f8e:	b2f6      	uxtb	r6, r6
 8020f90:	43db      	mvns	r3, r3
 8020f92:	b2d2      	uxtb	r2, r2
 8020f94:	b2db      	uxtb	r3, r3
 8020f96:	fb1c fc01 	smulbb	ip, ip, r1
 8020f9a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020f9e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020fa2:	fb12 f201 	smulbb	r2, r2, r1
 8020fa6:	fb05 c503 	mla	r5, r5, r3, ip
 8020faa:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020fae:	b2ff      	uxtb	r7, r7
 8020fb0:	fb06 2203 	mla	r2, r6, r3, r2
 8020fb4:	b2ad      	uxth	r5, r5
 8020fb6:	fb17 f701 	smulbb	r7, r7, r1
 8020fba:	b292      	uxth	r2, r2
 8020fbc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8020fc0:	fb04 7403 	mla	r4, r4, r3, r7
 8020fc4:	f105 0c01 	add.w	ip, r5, #1
 8020fc8:	1c57      	adds	r7, r2, #1
 8020fca:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020fce:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020fd2:	b2a4      	uxth	r4, r4
 8020fd4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020fd8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020fdc:	433d      	orrs	r5, r7
 8020fde:	1c67      	adds	r7, r4, #1
 8020fe0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8020fe4:	0964      	lsrs	r4, r4, #5
 8020fe6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020fea:	4325      	orrs	r5, r4
 8020fec:	8005      	strh	r5, [r0, #0]
 8020fee:	e7bd      	b.n	8020f6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020ff0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020ff2:	4418      	add	r0, r3
 8020ff4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020ff6:	4499      	add	r9, r3
 8020ff8:	e795      	b.n	8020f26 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8020ffa:	4b04      	ldr	r3, [pc, #16]	; (802100c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020ffc:	6818      	ldr	r0, [r3, #0]
 8020ffe:	6803      	ldr	r3, [r0, #0]
 8021000:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021002:	4798      	blx	r3
 8021004:	e771      	b.n	8020eea <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8021006:	bf00      	nop
 8021008:	2001384e 	.word	0x2001384e
 802100c:	20013854 	.word	0x20013854

08021010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8021010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021014:	b087      	sub	sp, #28
 8021016:	4680      	mov	r8, r0
 8021018:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 802101c:	460d      	mov	r5, r1
 802101e:	4614      	mov	r4, r2
 8021020:	2e00      	cmp	r6, #0
 8021022:	f000 80b9 	beq.w	8021198 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8021026:	6810      	ldr	r0, [r2, #0]
 8021028:	6851      	ldr	r1, [r2, #4]
 802102a:	af02      	add	r7, sp, #8
 802102c:	c703      	stmia	r7!, {r0, r1}
 802102e:	6818      	ldr	r0, [r3, #0]
 8021030:	6859      	ldr	r1, [r3, #4]
 8021032:	af04      	add	r7, sp, #16
 8021034:	c703      	stmia	r7!, {r0, r1}
 8021036:	a802      	add	r0, sp, #8
 8021038:	f7f7 fbae 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802103c:	4621      	mov	r1, r4
 802103e:	a804      	add	r0, sp, #16
 8021040:	f7f7 fbee 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021044:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8021048:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802104c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8021050:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8021054:	fb14 2103 	smlabb	r1, r4, r3, r2
 8021058:	eb08 0401 	add.w	r4, r8, r1
 802105c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8021060:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8021064:	440a      	add	r2, r1
 8021066:	f8ad 2010 	strh.w	r2, [sp, #16]
 802106a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 802106e:	4413      	add	r3, r2
 8021070:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021074:	4b4a      	ldr	r3, [pc, #296]	; (80211a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8021076:	6818      	ldr	r0, [r3, #0]
 8021078:	6803      	ldr	r3, [r0, #0]
 802107a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802107c:	4798      	blx	r3
 802107e:	4b49      	ldr	r3, [pc, #292]	; (80211a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8021080:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8021084:	881a      	ldrh	r2, [r3, #0]
 8021086:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 802108a:	2eff      	cmp	r6, #255	; 0xff
 802108c:	fb02 c101 	mla	r1, r2, r1, ip
 8021090:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8021094:	fb02 f207 	mul.w	r2, r2, r7
 8021098:	f105 0104 	add.w	r1, r5, #4
 802109c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80210a0:	461d      	mov	r5, r3
 80210a2:	d05a      	beq.n	802115a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80210a4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80210a8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80210ac:	b2b6      	uxth	r6, r6
 80210ae:	fa1f fe8e 	uxth.w	lr, lr
 80210b2:	9301      	str	r3, [sp, #4]
 80210b4:	4282      	cmp	r2, r0
 80210b6:	d96a      	bls.n	802118e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80210b8:	eb00 0b0a 	add.w	fp, r0, sl
 80210bc:	4583      	cmp	fp, r0
 80210be:	d940      	bls.n	8021142 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80210c0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80210c4:	8805      	ldrh	r5, [r0, #0]
 80210c6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80210ca:	122f      	asrs	r7, r5, #8
 80210cc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80210d0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80210d4:	fb17 f70e 	smulbb	r7, r7, lr
 80210d8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80210dc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80210e0:	00ed      	lsls	r5, r5, #3
 80210e2:	fb0c 7c06 	mla	ip, ip, r6, r7
 80210e6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80210ea:	10df      	asrs	r7, r3, #3
 80210ec:	b2ed      	uxtb	r5, r5
 80210ee:	00db      	lsls	r3, r3, #3
 80210f0:	fa1f fc8c 	uxth.w	ip, ip
 80210f4:	fb19 f90e 	smulbb	r9, r9, lr
 80210f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80210fc:	b2db      	uxtb	r3, r3
 80210fe:	fb15 f50e 	smulbb	r5, r5, lr
 8021102:	fb07 9706 	mla	r7, r7, r6, r9
 8021106:	fb03 5306 	mla	r3, r3, r6, r5
 802110a:	f10c 0901 	add.w	r9, ip, #1
 802110e:	b29b      	uxth	r3, r3
 8021110:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8021114:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8021118:	f103 0c01 	add.w	ip, r3, #1
 802111c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021120:	b2bf      	uxth	r7, r7
 8021122:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021126:	ea4c 0c09 	orr.w	ip, ip, r9
 802112a:	f107 0901 	add.w	r9, r7, #1
 802112e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8021132:	097f      	lsrs	r7, r7, #5
 8021134:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021138:	ea4c 0c07 	orr.w	ip, ip, r7
 802113c:	f820 cb02 	strh.w	ip, [r0], #2
 8021140:	e7bc      	b.n	80210bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8021142:	9b01      	ldr	r3, [sp, #4]
 8021144:	881b      	ldrh	r3, [r3, #0]
 8021146:	eba3 0308 	sub.w	r3, r3, r8
 802114a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802114e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8021152:	eba3 0308 	sub.w	r3, r3, r8
 8021156:	441c      	add	r4, r3
 8021158:	e7ac      	b.n	80210b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 802115a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802115e:	4282      	cmp	r2, r0
 8021160:	d915      	bls.n	802118e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8021162:	eb00 060a 	add.w	r6, r0, sl
 8021166:	4286      	cmp	r6, r0
 8021168:	d906      	bls.n	8021178 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 802116a:	f814 3b01 	ldrb.w	r3, [r4], #1
 802116e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8021172:	f820 3b02 	strh.w	r3, [r0], #2
 8021176:	e7f6      	b.n	8021166 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8021178:	882b      	ldrh	r3, [r5, #0]
 802117a:	eba3 0308 	sub.w	r3, r3, r8
 802117e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021182:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8021186:	eba3 0308 	sub.w	r3, r3, r8
 802118a:	441c      	add	r4, r3
 802118c:	e7e7      	b.n	802115e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 802118e:	4b04      	ldr	r3, [pc, #16]	; (80211a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8021190:	6818      	ldr	r0, [r3, #0]
 8021192:	6803      	ldr	r3, [r0, #0]
 8021194:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021196:	4798      	blx	r3
 8021198:	b007      	add	sp, #28
 802119a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802119e:	bf00      	nop
 80211a0:	20013854 	.word	0x20013854
 80211a4:	2001384e 	.word	0x2001384e

080211a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80211a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211ac:	b091      	sub	sp, #68	; 0x44
 80211ae:	4680      	mov	r8, r0
 80211b0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80211b4:	460f      	mov	r7, r1
 80211b6:	4614      	mov	r4, r2
 80211b8:	2d00      	cmp	r5, #0
 80211ba:	d051      	beq.n	8021260 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80211bc:	6810      	ldr	r0, [r2, #0]
 80211be:	6851      	ldr	r1, [r2, #4]
 80211c0:	f8df 9200 	ldr.w	r9, [pc, #512]	; 80213c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80211c4:	ae0c      	add	r6, sp, #48	; 0x30
 80211c6:	c603      	stmia	r6!, {r0, r1}
 80211c8:	6818      	ldr	r0, [r3, #0]
 80211ca:	6859      	ldr	r1, [r3, #4]
 80211cc:	ae0e      	add	r6, sp, #56	; 0x38
 80211ce:	c603      	stmia	r6!, {r0, r1}
 80211d0:	a80c      	add	r0, sp, #48	; 0x30
 80211d2:	f7f7 fae1 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80211d6:	4621      	mov	r1, r4
 80211d8:	a80e      	add	r0, sp, #56	; 0x38
 80211da:	f7f7 fb21 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80211de:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80211e2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80211e6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80211ea:	f8d9 0000 	ldr.w	r0, [r9]
 80211ee:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80211f2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80211f6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80211fa:	eb08 0401 	add.w	r4, r8, r1
 80211fe:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8021202:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80213c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8021206:	440a      	add	r2, r1
 8021208:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 802120c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8021210:	4413      	add	r3, r2
 8021212:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8021216:	6803      	ldr	r3, [r0, #0]
 8021218:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802121a:	4798      	blx	r3
 802121c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8021220:	f8d9 0000 	ldr.w	r0, [r9]
 8021224:	d01f      	beq.n	8021266 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8021226:	2200      	movs	r2, #0
 8021228:	6801      	ldr	r1, [r0, #0]
 802122a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 802122e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8021232:	220b      	movs	r2, #11
 8021234:	9207      	str	r2, [sp, #28]
 8021236:	f8b8 2000 	ldrh.w	r2, [r8]
 802123a:	9206      	str	r2, [sp, #24]
 802123c:	2201      	movs	r2, #1
 802123e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8021242:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8021246:	9203      	str	r2, [sp, #12]
 8021248:	fa1f f28a 	uxth.w	r2, sl
 802124c:	9202      	str	r2, [sp, #8]
 802124e:	b2b6      	uxth	r6, r6
 8021250:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8021254:	9200      	str	r2, [sp, #0]
 8021256:	9601      	str	r6, [sp, #4]
 8021258:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 802125a:	463a      	mov	r2, r7
 802125c:	4621      	mov	r1, r4
 802125e:	47a8      	blx	r5
 8021260:	b011      	add	sp, #68	; 0x44
 8021262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021266:	6803      	ldr	r3, [r0, #0]
 8021268:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802126a:	4798      	blx	r3
 802126c:	f8b8 2000 	ldrh.w	r2, [r8]
 8021270:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021274:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8021278:	2dff      	cmp	r5, #255	; 0xff
 802127a:	fb02 1303 	mla	r3, r2, r3, r1
 802127e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021282:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8021286:	fb0a fa02 	mul.w	sl, sl, r2
 802128a:	d062      	beq.n	8021352 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 802128c:	ea6f 0c05 	mvn.w	ip, r5
 8021290:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8021294:	930a      	str	r3, [sp, #40]	; 0x28
 8021296:	b2ad      	uxth	r5, r5
 8021298:	fa5f fc8c 	uxtb.w	ip, ip
 802129c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80212a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80212a2:	4298      	cmp	r0, r3
 80212a4:	f080 8085 	bcs.w	80213b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80212a8:	eb00 0b09 	add.w	fp, r0, r9
 80212ac:	4558      	cmp	r0, fp
 80212ae:	d246      	bcs.n	802133e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80212b0:	f814 eb01 	ldrb.w	lr, [r4], #1
 80212b4:	2303      	movs	r3, #3
 80212b6:	2204      	movs	r2, #4
 80212b8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80212bc:	eb07 0a0e 	add.w	sl, r7, lr
 80212c0:	8803      	ldrh	r3, [r0, #0]
 80212c2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80212c6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80212ca:	1219      	asrs	r1, r3, #8
 80212cc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80212d0:	fb18 f805 	smulbb	r8, r8, r5
 80212d4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80212d8:	10da      	asrs	r2, r3, #3
 80212da:	fb01 810c 	mla	r1, r1, ip, r8
 80212de:	00db      	lsls	r3, r3, #3
 80212e0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80212e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80212e8:	b2db      	uxtb	r3, r3
 80212ea:	fb18 f805 	smulbb	r8, r8, r5
 80212ee:	fb1e fe05 	smulbb	lr, lr, r5
 80212f2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80212f6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80212fa:	b289      	uxth	r1, r1
 80212fc:	fb02 820c 	mla	r2, r2, ip, r8
 8021300:	fb03 e30c 	mla	r3, r3, ip, lr
 8021304:	b292      	uxth	r2, r2
 8021306:	b29b      	uxth	r3, r3
 8021308:	f101 0801 	add.w	r8, r1, #1
 802130c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8021310:	f103 0e01 	add.w	lr, r3, #1
 8021314:	f102 0801 	add.w	r8, r2, #1
 8021318:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 802131c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8021320:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021324:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021328:	ea4f 1858 	mov.w	r8, r8, lsr #5
 802132c:	ea4e 0101 	orr.w	r1, lr, r1
 8021330:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021334:	ea41 0108 	orr.w	r1, r1, r8
 8021338:	f820 1b02 	strh.w	r1, [r0], #2
 802133c:	e7b6      	b.n	80212ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 802133e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021340:	881b      	ldrh	r3, [r3, #0]
 8021342:	1b9b      	subs	r3, r3, r6
 8021344:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021348:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802134c:	1b9b      	subs	r3, r3, r6
 802134e:	441c      	add	r4, r3
 8021350:	e7a6      	b.n	80212a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8021352:	491b      	ldr	r1, [pc, #108]	; (80213c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8021354:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8021358:	2203      	movs	r2, #3
 802135a:	2504      	movs	r5, #4
 802135c:	4550      	cmp	r0, sl
 802135e:	d228      	bcs.n	80213b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021360:	eb00 0c09 	add.w	ip, r0, r9
 8021364:	4560      	cmp	r0, ip
 8021366:	4623      	mov	r3, r4
 8021368:	d219      	bcs.n	802139e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 802136a:	f893 e000 	ldrb.w	lr, [r3]
 802136e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8021372:	eb07 0b0e 	add.w	fp, r7, lr
 8021376:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802137a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802137e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8021382:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8021386:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 802138a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802138e:	ea43 030b 	orr.w	r3, r3, fp
 8021392:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8021396:	3401      	adds	r4, #1
 8021398:	f820 3b02 	strh.w	r3, [r0], #2
 802139c:	e7e2      	b.n	8021364 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 802139e:	f8b8 3000 	ldrh.w	r3, [r8]
 80213a2:	1b9b      	subs	r3, r3, r6
 80213a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80213a8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80213ac:	1b9b      	subs	r3, r3, r6
 80213ae:	441c      	add	r4, r3
 80213b0:	e7d4      	b.n	802135c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80213b2:	4b04      	ldr	r3, [pc, #16]	; (80213c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80213b4:	6818      	ldr	r0, [r3, #0]
 80213b6:	6803      	ldr	r3, [r0, #0]
 80213b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80213ba:	4798      	blx	r3
 80213bc:	e750      	b.n	8021260 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80213be:	bf00      	nop
 80213c0:	fffff800 	.word	0xfffff800
 80213c4:	20013854 	.word	0x20013854
 80213c8:	2001384e 	.word	0x2001384e

080213cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80213cc:	b4f0      	push	{r4, r5, r6, r7}
 80213ce:	460c      	mov	r4, r1
 80213d0:	4611      	mov	r1, r2
 80213d2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80213d6:	780f      	ldrb	r7, [r1, #0]
 80213d8:	784e      	ldrb	r6, [r1, #1]
 80213da:	2f01      	cmp	r7, #1
 80213dc:	461a      	mov	r2, r3
 80213de:	9b04      	ldr	r3, [sp, #16]
 80213e0:	d036      	beq.n	8021450 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 80213e2:	d31e      	bcc.n	8021422 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 80213e4:	2f02      	cmp	r7, #2
 80213e6:	d14a      	bne.n	802147e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80213e8:	2e03      	cmp	r6, #3
 80213ea:	d848      	bhi.n	802147e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80213ec:	e8df f006 	tbb	[pc, r6]
 80213f0:	16140702 	.word	0x16140702
 80213f4:	9504      	str	r5, [sp, #16]
 80213f6:	4620      	mov	r0, r4
 80213f8:	bcf0      	pop	{r4, r5, r6, r7}
 80213fa:	f7ff be09 	b.w	8021010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80213fe:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021400:	2800      	cmp	r0, #0
 8021402:	d03c      	beq.n	802147e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021404:	6806      	ldr	r6, [r0, #0]
 8021406:	e9cd 3504 	strd	r3, r5, [sp, #16]
 802140a:	68b5      	ldr	r5, [r6, #8]
 802140c:	4613      	mov	r3, r2
 802140e:	46ac      	mov	ip, r5
 8021410:	460a      	mov	r2, r1
 8021412:	4621      	mov	r1, r4
 8021414:	bcf0      	pop	{r4, r5, r6, r7}
 8021416:	4760      	bx	ip
 8021418:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 802141a:	e7f1      	b.n	8021400 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 802141c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8021420:	e7ee      	b.n	8021400 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8021422:	2e03      	cmp	r6, #3
 8021424:	d82b      	bhi.n	802147e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021426:	e8df f006 	tbb	[pc, r6]
 802142a:	0702      	.short	0x0702
 802142c:	100e      	.short	0x100e
 802142e:	9504      	str	r5, [sp, #16]
 8021430:	4620      	mov	r0, r4
 8021432:	bcf0      	pop	{r4, r5, r6, r7}
 8021434:	f7ff bd06 	b.w	8020e44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8021438:	6f80      	ldr	r0, [r0, #120]	; 0x78
 802143a:	b300      	cbz	r0, 802147e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802143c:	6806      	ldr	r6, [r0, #0]
 802143e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021442:	68f5      	ldr	r5, [r6, #12]
 8021444:	e7e2      	b.n	802140c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8021446:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021448:	e7f7      	b.n	802143a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 802144a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802144e:	e7f4      	b.n	802143a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8021450:	2e03      	cmp	r6, #3
 8021452:	d814      	bhi.n	802147e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021454:	e8df f006 	tbb	[pc, r6]
 8021458:	100e0702 	.word	0x100e0702
 802145c:	9504      	str	r5, [sp, #16]
 802145e:	4620      	mov	r0, r4
 8021460:	bcf0      	pop	{r4, r5, r6, r7}
 8021462:	f7ff bea1 	b.w	80211a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8021466:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021468:	b148      	cbz	r0, 802147e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802146a:	6806      	ldr	r6, [r0, #0]
 802146c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021470:	6935      	ldr	r5, [r6, #16]
 8021472:	e7cb      	b.n	802140c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8021474:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021476:	e7f7      	b.n	8021468 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8021478:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802147c:	e7f4      	b.n	8021468 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 802147e:	bcf0      	pop	{r4, r5, r6, r7}
 8021480:	4770      	bx	lr
	...

08021484 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8021484:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021488:	4604      	mov	r4, r0
 802148a:	b087      	sub	sp, #28
 802148c:	6810      	ldr	r0, [r2, #0]
 802148e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8021492:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80216cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8021496:	460e      	mov	r6, r1
 8021498:	6851      	ldr	r1, [r2, #4]
 802149a:	ad02      	add	r5, sp, #8
 802149c:	c503      	stmia	r5!, {r0, r1}
 802149e:	6818      	ldr	r0, [r3, #0]
 80214a0:	6859      	ldr	r1, [r3, #4]
 80214a2:	ad04      	add	r5, sp, #16
 80214a4:	4617      	mov	r7, r2
 80214a6:	c503      	stmia	r5!, {r0, r1}
 80214a8:	a802      	add	r0, sp, #8
 80214aa:	f7f7 f975 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80214ae:	4639      	mov	r1, r7
 80214b0:	a804      	add	r0, sp, #16
 80214b2:	f7f7 f9b5 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80214b6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80214ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80214be:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80214c2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80214c6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80214ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 80214ce:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80214d2:	440e      	add	r6, r1
 80214d4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80214d8:	440a      	add	r2, r1
 80214da:	f8ad 2010 	strh.w	r2, [sp, #16]
 80214de:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80214e2:	4413      	add	r3, r2
 80214e4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80214e8:	4b77      	ldr	r3, [pc, #476]	; (80216c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80214ea:	6818      	ldr	r0, [r3, #0]
 80214ec:	6803      	ldr	r3, [r0, #0]
 80214ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80214f0:	4798      	blx	r3
 80214f2:	f8b9 b000 	ldrh.w	fp, [r9]
 80214f6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80214fa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80214fe:	fb0b 2303 	mla	r3, fp, r3, r2
 8021502:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021506:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802150a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802150e:	fb05 f50b 	mul.w	r5, r5, fp
 8021512:	9300      	str	r3, [sp, #0]
 8021514:	d069      	beq.n	80215ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8021516:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 802151a:	4558      	cmp	r0, fp
 802151c:	f080 80cc 	bcs.w	80216b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021520:	9b00      	ldr	r3, [sp, #0]
 8021522:	18c3      	adds	r3, r0, r3
 8021524:	9301      	str	r3, [sp, #4]
 8021526:	4631      	mov	r1, r6
 8021528:	9b01      	ldr	r3, [sp, #4]
 802152a:	4298      	cmp	r0, r3
 802152c:	d24f      	bcs.n	80215ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 802152e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8021532:	2a00      	cmp	r2, #0
 8021534:	d048      	beq.n	80215c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8021536:	fb0a f202 	mul.w	r2, sl, r2
 802153a:	1c53      	adds	r3, r2, #1
 802153c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021540:	121b      	asrs	r3, r3, #8
 8021542:	d041      	beq.n	80215c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8021544:	8802      	ldrh	r2, [r0, #0]
 8021546:	f8b4 c000 	ldrh.w	ip, [r4]
 802154a:	b29e      	uxth	r6, r3
 802154c:	1215      	asrs	r5, r2, #8
 802154e:	43db      	mvns	r3, r3
 8021550:	b2db      	uxtb	r3, r3
 8021552:	ea4f 272c 	mov.w	r7, ip, asr #8
 8021556:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802155a:	fb15 f503 	smulbb	r5, r5, r3
 802155e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8021562:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8021566:	00d2      	lsls	r2, r2, #3
 8021568:	fb07 5706 	mla	r7, r7, r6, r5
 802156c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021570:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021574:	b2d2      	uxtb	r2, r2
 8021576:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802157a:	b2bf      	uxth	r7, r7
 802157c:	fb1e fe03 	smulbb	lr, lr, r3
 8021580:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021584:	fa5f fc8c 	uxtb.w	ip, ip
 8021588:	fb12 f203 	smulbb	r2, r2, r3
 802158c:	fb05 e506 	mla	r5, r5, r6, lr
 8021590:	fb0c 2c06 	mla	ip, ip, r6, r2
 8021594:	f107 0e01 	add.w	lr, r7, #1
 8021598:	fa1f fc8c 	uxth.w	ip, ip
 802159c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80215a0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80215a4:	f10c 0701 	add.w	r7, ip, #1
 80215a8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80215ac:	b2ad      	uxth	r5, r5
 80215ae:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80215b2:	ea47 070e 	orr.w	r7, r7, lr
 80215b6:	f105 0e01 	add.w	lr, r5, #1
 80215ba:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80215be:	096d      	lsrs	r5, r5, #5
 80215c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80215c4:	432f      	orrs	r7, r5
 80215c6:	8007      	strh	r7, [r0, #0]
 80215c8:	3002      	adds	r0, #2
 80215ca:	3402      	adds	r4, #2
 80215cc:	e7ac      	b.n	8021528 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80215ce:	f8b9 3000 	ldrh.w	r3, [r9]
 80215d2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80215d6:	eba3 0308 	sub.w	r3, r3, r8
 80215da:	eba6 0608 	sub.w	r6, r6, r8
 80215de:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80215e2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80215e6:	440e      	add	r6, r1
 80215e8:	e797      	b.n	802151a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80215ea:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80215ee:	42a8      	cmp	r0, r5
 80215f0:	d262      	bcs.n	80216b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80215f2:	9b00      	ldr	r3, [sp, #0]
 80215f4:	4631      	mov	r1, r6
 80215f6:	eb00 0b03 	add.w	fp, r0, r3
 80215fa:	4558      	cmp	r0, fp
 80215fc:	d24e      	bcs.n	802169c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80215fe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021602:	b12b      	cbz	r3, 8021610 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8021604:	2bff      	cmp	r3, #255	; 0xff
 8021606:	f8b4 e000 	ldrh.w	lr, [r4]
 802160a:	d104      	bne.n	8021616 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 802160c:	f8a0 e000 	strh.w	lr, [r0]
 8021610:	3002      	adds	r0, #2
 8021612:	3402      	adds	r4, #2
 8021614:	e7f1      	b.n	80215fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8021616:	8802      	ldrh	r2, [r0, #0]
 8021618:	b29f      	uxth	r7, r3
 802161a:	1216      	asrs	r6, r2, #8
 802161c:	43db      	mvns	r3, r3
 802161e:	b2db      	uxtb	r3, r3
 8021620:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8021624:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021628:	fb16 f603 	smulbb	r6, r6, r3
 802162c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8021630:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021634:	00d2      	lsls	r2, r2, #3
 8021636:	fb0c 6c07 	mla	ip, ip, r7, r6
 802163a:	b2d2      	uxtb	r2, r2
 802163c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8021640:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8021644:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021648:	fb1a fa03 	smulbb	sl, sl, r3
 802164c:	fa1f fc8c 	uxth.w	ip, ip
 8021650:	fb12 f303 	smulbb	r3, r2, r3
 8021654:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021658:	fa5f fe8e 	uxtb.w	lr, lr
 802165c:	fb06 a607 	mla	r6, r6, r7, sl
 8021660:	f10c 0201 	add.w	r2, ip, #1
 8021664:	fb0e 3307 	mla	r3, lr, r7, r3
 8021668:	b2b6      	uxth	r6, r6
 802166a:	b29b      	uxth	r3, r3
 802166c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8021670:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8021674:	f106 0a01 	add.w	sl, r6, #1
 8021678:	f103 0c01 	add.w	ip, r3, #1
 802167c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021680:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8021684:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021688:	0976      	lsrs	r6, r6, #5
 802168a:	ea4c 0c02 	orr.w	ip, ip, r2
 802168e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8021692:	ea4c 0c06 	orr.w	ip, ip, r6
 8021696:	f8a0 c000 	strh.w	ip, [r0]
 802169a:	e7b9      	b.n	8021610 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 802169c:	f8b9 3000 	ldrh.w	r3, [r9]
 80216a0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80216a4:	eba3 0308 	sub.w	r3, r3, r8
 80216a8:	eba6 0608 	sub.w	r6, r6, r8
 80216ac:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80216b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80216b4:	440e      	add	r6, r1
 80216b6:	e79a      	b.n	80215ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80216b8:	4b03      	ldr	r3, [pc, #12]	; (80216c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80216ba:	6818      	ldr	r0, [r3, #0]
 80216bc:	6803      	ldr	r3, [r0, #0]
 80216be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80216c0:	4798      	blx	r3
 80216c2:	b007      	add	sp, #28
 80216c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80216c8:	20013854 	.word	0x20013854
 80216cc:	2001384e 	.word	0x2001384e

080216d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80216d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80216d4:	b089      	sub	sp, #36	; 0x24
 80216d6:	4682      	mov	sl, r0
 80216d8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80216dc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80216de:	460f      	mov	r7, r1
 80216e0:	4691      	mov	r9, r2
 80216e2:	4698      	mov	r8, r3
 80216e4:	2e00      	cmp	r6, #0
 80216e6:	d03d      	beq.n	8021764 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80216e8:	4608      	mov	r0, r1
 80216ea:	f7fa fe59 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80216ee:	4605      	mov	r5, r0
 80216f0:	4638      	mov	r0, r7
 80216f2:	f7fa fe89 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80216f6:	f8ad 000e 	strh.w	r0, [sp, #14]
 80216fa:	4638      	mov	r0, r7
 80216fc:	f8ad 9008 	strh.w	r9, [sp, #8]
 8021700:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021704:	f8ad 800a 	strh.w	r8, [sp, #10]
 8021708:	f7fa ff36 	bl	801c578 <_ZNK8touchgfx6Bitmap7getDataEv>
 802170c:	4605      	mov	r5, r0
 802170e:	4638      	mov	r0, r7
 8021710:	f7fa ff62 	bl	801c5d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8021714:	4681      	mov	r9, r0
 8021716:	4638      	mov	r0, r7
 8021718:	f7fa ffb2 	bl	801c680 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802171c:	280b      	cmp	r0, #11
 802171e:	d821      	bhi.n	8021764 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021720:	e8df f000 	tbb	[pc, r0]
 8021724:	2006aebe 	.word	0x2006aebe
 8021728:	20202020 	.word	0x20202020
 802172c:	b5202020 	.word	0xb5202020
 8021730:	4bb0      	ldr	r3, [pc, #704]	; (80219f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8021732:	6818      	ldr	r0, [r3, #0]
 8021734:	6803      	ldr	r3, [r0, #0]
 8021736:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021738:	4798      	blx	r3
 802173a:	2eff      	cmp	r6, #255	; 0xff
 802173c:	d101      	bne.n	8021742 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 802173e:	0683      	lsls	r3, r0, #26
 8021740:	d506      	bpl.n	8021750 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 8021742:	4633      	mov	r3, r6
 8021744:	4622      	mov	r2, r4
 8021746:	a902      	add	r1, sp, #8
 8021748:	4628      	mov	r0, r5
 802174a:	f7ff f909 	bl	8020960 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802174e:	e009      	b.n	8021764 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021750:	4638      	mov	r0, r7
 8021752:	f7fa fed9 	bl	801c508 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021756:	b940      	cbnz	r0, 802176a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8021758:	4623      	mov	r3, r4
 802175a:	aa02      	add	r2, sp, #8
 802175c:	4629      	mov	r1, r5
 802175e:	4650      	mov	r0, sl
 8021760:	f7ff f9e4 	bl	8020b2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021764:	b009      	add	sp, #36	; 0x24
 8021766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802176a:	f10d 0818 	add.w	r8, sp, #24
 802176e:	4639      	mov	r1, r7
 8021770:	4640      	mov	r0, r8
 8021772:	f7fa fe7d 	bl	801c470 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021776:	e898 0003 	ldmia.w	r8, {r0, r1}
 802177a:	af04      	add	r7, sp, #16
 802177c:	e887 0003 	stmia.w	r7, {r0, r1}
 8021780:	4638      	mov	r0, r7
 8021782:	4621      	mov	r1, r4
 8021784:	f7f1 fa6a 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 8021788:	4638      	mov	r0, r7
 802178a:	f7f1 faaa 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 802178e:	2800      	cmp	r0, #0
 8021790:	d1d7      	bne.n	8021742 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8021792:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021796:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 802179a:	4293      	cmp	r3, r2
 802179c:	dd12      	ble.n	80217c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 802179e:	1a9b      	subs	r3, r3, r2
 80217a0:	f9b4 0000 	ldrsh.w	r0, [r4]
 80217a4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80217a8:	f8ad 0018 	strh.w	r0, [sp, #24]
 80217ac:	f8ad 201a 	strh.w	r2, [sp, #26]
 80217b0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80217b4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80217b8:	4642      	mov	r2, r8
 80217ba:	4633      	mov	r3, r6
 80217bc:	a902      	add	r1, sp, #8
 80217be:	4628      	mov	r0, r5
 80217c0:	f7ff f8ce 	bl	8020960 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80217c4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80217c8:	f9b4 2000 	ldrsh.w	r2, [r4]
 80217cc:	4293      	cmp	r3, r2
 80217ce:	dd12      	ble.n	80217f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 80217d0:	1a9b      	subs	r3, r3, r2
 80217d2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80217d6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80217da:	f8ad 2018 	strh.w	r2, [sp, #24]
 80217de:	f8ad 001a 	strh.w	r0, [sp, #26]
 80217e2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80217e6:	f8ad 101e 	strh.w	r1, [sp, #30]
 80217ea:	23ff      	movs	r3, #255	; 0xff
 80217ec:	4642      	mov	r2, r8
 80217ee:	a902      	add	r1, sp, #8
 80217f0:	4628      	mov	r0, r5
 80217f2:	f7ff f8b5 	bl	8020960 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80217f6:	463b      	mov	r3, r7
 80217f8:	aa02      	add	r2, sp, #8
 80217fa:	4629      	mov	r1, r5
 80217fc:	4650      	mov	r0, sl
 80217fe:	f7ff f995 	bl	8020b2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021802:	88a2      	ldrh	r2, [r4, #4]
 8021804:	8823      	ldrh	r3, [r4, #0]
 8021806:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802180a:	4413      	add	r3, r2
 802180c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021810:	440a      	add	r2, r1
 8021812:	b29b      	uxth	r3, r3
 8021814:	b292      	uxth	r2, r2
 8021816:	b211      	sxth	r1, r2
 8021818:	b218      	sxth	r0, r3
 802181a:	4288      	cmp	r0, r1
 802181c:	dd12      	ble.n	8021844 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 802181e:	1a9b      	subs	r3, r3, r2
 8021820:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021824:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8021828:	f8ad 1018 	strh.w	r1, [sp, #24]
 802182c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021830:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021834:	23ff      	movs	r3, #255	; 0xff
 8021836:	4642      	mov	r2, r8
 8021838:	a902      	add	r1, sp, #8
 802183a:	4628      	mov	r0, r5
 802183c:	f8ad 601a 	strh.w	r6, [sp, #26]
 8021840:	f7ff f88e 	bl	8020960 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021844:	88e2      	ldrh	r2, [r4, #6]
 8021846:	8863      	ldrh	r3, [r4, #2]
 8021848:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802184c:	4413      	add	r3, r2
 802184e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021852:	440a      	add	r2, r1
 8021854:	b29b      	uxth	r3, r3
 8021856:	b292      	uxth	r2, r2
 8021858:	b211      	sxth	r1, r2
 802185a:	b218      	sxth	r0, r3
 802185c:	4288      	cmp	r0, r1
 802185e:	dd81      	ble.n	8021764 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021860:	1a9b      	subs	r3, r3, r2
 8021862:	f9b4 6000 	ldrsh.w	r6, [r4]
 8021866:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802186a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802186e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8021872:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021876:	f8ad 001c 	strh.w	r0, [sp, #28]
 802187a:	23ff      	movs	r3, #255	; 0xff
 802187c:	4642      	mov	r2, r8
 802187e:	e762      	b.n	8021746 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8021880:	4633      	mov	r3, r6
 8021882:	4622      	mov	r2, r4
 8021884:	a902      	add	r1, sp, #8
 8021886:	4628      	mov	r0, r5
 8021888:	f7ff f9c0 	bl	8020c0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 802188c:	e76a      	b.n	8021764 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802188e:	e9cd 4600 	strd	r4, r6, [sp]
 8021892:	ab02      	add	r3, sp, #8
 8021894:	464a      	mov	r2, r9
 8021896:	4629      	mov	r1, r5
 8021898:	4650      	mov	r0, sl
 802189a:	f7ff fd97 	bl	80213cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802189e:	e761      	b.n	8021764 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80218a0:	4638      	mov	r0, r7
 80218a2:	f7fa fe31 	bl	801c508 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80218a6:	b950      	cbnz	r0, 80218be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 80218a8:	e9cd 6000 	strd	r6, r0, [sp]
 80218ac:	f8da 3000 	ldr.w	r3, [sl]
 80218b0:	aa02      	add	r2, sp, #8
 80218b2:	68de      	ldr	r6, [r3, #12]
 80218b4:	4629      	mov	r1, r5
 80218b6:	4623      	mov	r3, r4
 80218b8:	4650      	mov	r0, sl
 80218ba:	47b0      	blx	r6
 80218bc:	e752      	b.n	8021764 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80218be:	f10d 0818 	add.w	r8, sp, #24
 80218c2:	4639      	mov	r1, r7
 80218c4:	4640      	mov	r0, r8
 80218c6:	f7fa fdd3 	bl	801c470 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80218ca:	e898 0003 	ldmia.w	r8, {r0, r1}
 80218ce:	af04      	add	r7, sp, #16
 80218d0:	e887 0003 	stmia.w	r7, {r0, r1}
 80218d4:	4638      	mov	r0, r7
 80218d6:	4621      	mov	r1, r4
 80218d8:	f7f1 f9c0 	bl	8012c5c <_ZN8touchgfx4RectaNERKS0_>
 80218dc:	4638      	mov	r0, r7
 80218de:	f7f1 fa00 	bl	8012ce2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80218e2:	b138      	cbz	r0, 80218f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 80218e4:	9600      	str	r6, [sp, #0]
 80218e6:	4623      	mov	r3, r4
 80218e8:	aa02      	add	r2, sp, #8
 80218ea:	4649      	mov	r1, r9
 80218ec:	4628      	mov	r0, r5
 80218ee:	f7ff fdc9 	bl	8021484 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80218f2:	e737      	b.n	8021764 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80218f4:	e9cd 6000 	strd	r6, r0, [sp]
 80218f8:	f8da 3000 	ldr.w	r3, [sl]
 80218fc:	aa02      	add	r2, sp, #8
 80218fe:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8021902:	4629      	mov	r1, r5
 8021904:	463b      	mov	r3, r7
 8021906:	4650      	mov	r0, sl
 8021908:	47d8      	blx	fp
 802190a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802190e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8021912:	4293      	cmp	r3, r2
 8021914:	dd13      	ble.n	802193e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8021916:	f9b4 0000 	ldrsh.w	r0, [r4]
 802191a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802191e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8021922:	1a9b      	subs	r3, r3, r2
 8021924:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021928:	f8ad 101c 	strh.w	r1, [sp, #28]
 802192c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021930:	9600      	str	r6, [sp, #0]
 8021932:	4643      	mov	r3, r8
 8021934:	aa02      	add	r2, sp, #8
 8021936:	4649      	mov	r1, r9
 8021938:	4628      	mov	r0, r5
 802193a:	f7ff fda3 	bl	8021484 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 802193e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021942:	f9b4 2000 	ldrsh.w	r2, [r4]
 8021946:	4293      	cmp	r3, r2
 8021948:	dd13      	ble.n	8021972 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 802194a:	1a9b      	subs	r3, r3, r2
 802194c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021950:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021954:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021958:	f8ad 001a 	strh.w	r0, [sp, #26]
 802195c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021960:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021964:	9600      	str	r6, [sp, #0]
 8021966:	4643      	mov	r3, r8
 8021968:	aa02      	add	r2, sp, #8
 802196a:	4649      	mov	r1, r9
 802196c:	4628      	mov	r0, r5
 802196e:	f7ff fd89 	bl	8021484 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021972:	88a2      	ldrh	r2, [r4, #4]
 8021974:	8823      	ldrh	r3, [r4, #0]
 8021976:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802197a:	4413      	add	r3, r2
 802197c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021980:	440a      	add	r2, r1
 8021982:	b29b      	uxth	r3, r3
 8021984:	b292      	uxth	r2, r2
 8021986:	b211      	sxth	r1, r2
 8021988:	b218      	sxth	r0, r3
 802198a:	4288      	cmp	r0, r1
 802198c:	dd13      	ble.n	80219b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 802198e:	1a9b      	subs	r3, r3, r2
 8021990:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021994:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8021998:	f8ad 1018 	strh.w	r1, [sp, #24]
 802199c:	f8ad 301c 	strh.w	r3, [sp, #28]
 80219a0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80219a4:	9600      	str	r6, [sp, #0]
 80219a6:	4643      	mov	r3, r8
 80219a8:	aa02      	add	r2, sp, #8
 80219aa:	4649      	mov	r1, r9
 80219ac:	4628      	mov	r0, r5
 80219ae:	f8ad 701a 	strh.w	r7, [sp, #26]
 80219b2:	f7ff fd67 	bl	8021484 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80219b6:	88e2      	ldrh	r2, [r4, #6]
 80219b8:	8863      	ldrh	r3, [r4, #2]
 80219ba:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80219be:	4413      	add	r3, r2
 80219c0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80219c4:	440a      	add	r2, r1
 80219c6:	b29b      	uxth	r3, r3
 80219c8:	b292      	uxth	r2, r2
 80219ca:	b211      	sxth	r1, r2
 80219cc:	b218      	sxth	r0, r3
 80219ce:	4288      	cmp	r0, r1
 80219d0:	f77f aec8 	ble.w	8021764 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80219d4:	f9b4 7000 	ldrsh.w	r7, [r4]
 80219d8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80219dc:	f8ad 7018 	strh.w	r7, [sp, #24]
 80219e0:	1a9b      	subs	r3, r3, r2
 80219e2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80219e6:	f8ad 101a 	strh.w	r1, [sp, #26]
 80219ea:	f8ad 001c 	strh.w	r0, [sp, #28]
 80219ee:	9600      	str	r6, [sp, #0]
 80219f0:	4643      	mov	r3, r8
 80219f2:	e779      	b.n	80218e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 80219f4:	20013854 	.word	0x20013854

080219f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80219f8:	b180      	cbz	r0, 8021a1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80219fa:	2903      	cmp	r1, #3
 80219fc:	d81c      	bhi.n	8021a38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80219fe:	e8df f001 	tbb	[pc, r1]
 8021a02:	1d02      	.short	0x1d02
 8021a04:	1f08      	.short	0x1f08
 8021a06:	4b10      	ldr	r3, [pc, #64]	; (8021a48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021a08:	8818      	ldrh	r0, [r3, #0]
 8021a0a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021a0e:	4240      	negs	r0, r0
 8021a10:	4770      	bx	lr
 8021a12:	4b0d      	ldr	r3, [pc, #52]	; (8021a48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021a14:	8818      	ldrh	r0, [r3, #0]
 8021a16:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021a1a:	4770      	bx	lr
 8021a1c:	2903      	cmp	r1, #3
 8021a1e:	d80b      	bhi.n	8021a38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8021a20:	a301      	add	r3, pc, #4	; (adr r3, 8021a28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8021a22:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021a26:	bf00      	nop
 8021a28:	08021a3d 	.word	0x08021a3d
 8021a2c:	08021a13 	.word	0x08021a13
 8021a30:	08021a41 	.word	0x08021a41
 8021a34:	08021a07 	.word	0x08021a07
 8021a38:	2000      	movs	r0, #0
 8021a3a:	4770      	bx	lr
 8021a3c:	2001      	movs	r0, #1
 8021a3e:	4770      	bx	lr
 8021a40:	f04f 30ff 	mov.w	r0, #4294967295
 8021a44:	4770      	bx	lr
 8021a46:	bf00      	nop
 8021a48:	2001384e 	.word	0x2001384e

08021a4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8021a4c:	b180      	cbz	r0, 8021a70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8021a4e:	2903      	cmp	r1, #3
 8021a50:	d81c      	bhi.n	8021a8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021a52:	e8df f001 	tbb	[pc, r1]
 8021a56:	021d      	.short	0x021d
 8021a58:	071f      	.short	0x071f
 8021a5a:	4b10      	ldr	r3, [pc, #64]	; (8021a9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021a5c:	8818      	ldrh	r0, [r3, #0]
 8021a5e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021a62:	4770      	bx	lr
 8021a64:	4b0d      	ldr	r3, [pc, #52]	; (8021a9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021a66:	8818      	ldrh	r0, [r3, #0]
 8021a68:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021a6c:	4240      	negs	r0, r0
 8021a6e:	4770      	bx	lr
 8021a70:	2903      	cmp	r1, #3
 8021a72:	d80b      	bhi.n	8021a8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021a74:	a301      	add	r3, pc, #4	; (adr r3, 8021a7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8021a76:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021a7a:	bf00      	nop
 8021a7c:	08021a5b 	.word	0x08021a5b
 8021a80:	08021a95 	.word	0x08021a95
 8021a84:	08021a65 	.word	0x08021a65
 8021a88:	08021a91 	.word	0x08021a91
 8021a8c:	2000      	movs	r0, #0
 8021a8e:	4770      	bx	lr
 8021a90:	2001      	movs	r0, #1
 8021a92:	4770      	bx	lr
 8021a94:	f04f 30ff 	mov.w	r0, #4294967295
 8021a98:	4770      	bx	lr
 8021a9a:	bf00      	nop
 8021a9c:	2001384e 	.word	0x2001384e

08021aa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8021aa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021aa4:	b099      	sub	sp, #100	; 0x64
 8021aa6:	910b      	str	r1, [sp, #44]	; 0x2c
 8021aa8:	a914      	add	r1, sp, #80	; 0x50
 8021aaa:	e881 000c 	stmia.w	r1, {r2, r3}
 8021aae:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8021ab2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8021ab6:	f891 900d 	ldrb.w	r9, [r1, #13]
 8021aba:	9309      	str	r3, [sp, #36]	; 0x24
 8021abc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021ac0:	9310      	str	r3, [sp, #64]	; 0x40
 8021ac2:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8021ac6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8021aca:	930c      	str	r3, [sp, #48]	; 0x30
 8021acc:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8021ad0:	798f      	ldrb	r7, [r1, #6]
 8021ad2:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8021ad6:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8021ada:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8021ade:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8021ae2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8021ae6:	431f      	orrs	r7, r3
 8021ae8:	f000 8195 	beq.w	8021e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021aec:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8021af0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8021af4:	f891 9007 	ldrb.w	r9, [r1, #7]
 8021af8:	ea59 0903 	orrs.w	r9, r9, r3
 8021afc:	f000 818b 	beq.w	8021e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021b00:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8021b04:	b29b      	uxth	r3, r3
 8021b06:	2d00      	cmp	r5, #0
 8021b08:	f000 812e 	beq.w	8021d68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8021b0c:	1aed      	subs	r5, r5, r3
 8021b0e:	b2ad      	uxth	r5, r5
 8021b10:	042b      	lsls	r3, r5, #16
 8021b12:	d502      	bpl.n	8021b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021b14:	1b64      	subs	r4, r4, r5
 8021b16:	b224      	sxth	r4, r4
 8021b18:	2500      	movs	r5, #0
 8021b1a:	f9b2 1000 	ldrsh.w	r1, [r2]
 8021b1e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8021b22:	428c      	cmp	r4, r1
 8021b24:	b28b      	uxth	r3, r1
 8021b26:	bfbf      	itttt	lt
 8021b28:	18ed      	addlt	r5, r5, r3
 8021b2a:	1b2c      	sublt	r4, r5, r4
 8021b2c:	b2a5      	uxthlt	r5, r4
 8021b2e:	460c      	movlt	r4, r1
 8021b30:	8891      	ldrh	r1, [r2, #4]
 8021b32:	440b      	add	r3, r1
 8021b34:	b21b      	sxth	r3, r3
 8021b36:	930f      	str	r3, [sp, #60]	; 0x3c
 8021b38:	88d3      	ldrh	r3, [r2, #6]
 8021b3a:	8852      	ldrh	r2, [r2, #2]
 8021b3c:	4413      	add	r3, r2
 8021b3e:	b21b      	sxth	r3, r3
 8021b40:	930d      	str	r3, [sp, #52]	; 0x34
 8021b42:	4bbe      	ldr	r3, [pc, #760]	; (8021e3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8021b44:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021b46:	f893 b000 	ldrb.w	fp, [r3]
 8021b4a:	f10b 3cff 	add.w	ip, fp, #4294967295
 8021b4e:	f1dc 0300 	rsbs	r3, ip, #0
 8021b52:	eb43 030c 	adc.w	r3, r3, ip
 8021b56:	930e      	str	r3, [sp, #56]	; 0x38
 8021b58:	4621      	mov	r1, r4
 8021b5a:	4653      	mov	r3, sl
 8021b5c:	a814      	add	r0, sp, #80	; 0x50
 8021b5e:	f7f6 fc90 	bl	8018482 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8021b62:	4621      	mov	r1, r4
 8021b64:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8021b68:	4653      	mov	r3, sl
 8021b6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021b6c:	a814      	add	r0, sp, #80	; 0x50
 8021b6e:	f7f6 fca5 	bl	80184bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8021b72:	a918      	add	r1, sp, #96	; 0x60
 8021b74:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8021b78:	a817      	add	r0, sp, #92	; 0x5c
 8021b7a:	f7f6 fdcb 	bl	8018714 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8021b7e:	f1ba 0f00 	cmp.w	sl, #0
 8021b82:	f040 80f4 	bne.w	8021d6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8021b86:	f1bb 0f01 	cmp.w	fp, #1
 8021b8a:	f040 80f8 	bne.w	8021d7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8021b8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021b90:	2b00      	cmp	r3, #0
 8021b92:	f040 8145 	bne.w	8021e20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8021b96:	b2ba      	uxth	r2, r7
 8021b98:	b905      	cbnz	r5, 8021b9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8021b9a:	b16e      	cbz	r6, 8021bb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8021b9c:	fb06 5302 	mla	r3, r6, r2, r5
 8021ba0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8021ba2:	fb08 f303 	mul.w	r3, r8, r3
 8021ba6:	4631      	mov	r1, r6
 8021ba8:	f003 0607 	and.w	r6, r3, #7
 8021bac:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8021bb0:	9328      	str	r3, [sp, #160]	; 0xa0
 8021bb2:	eba9 0301 	sub.w	r3, r9, r1
 8021bb6:	930a      	str	r3, [sp, #40]	; 0x28
 8021bb8:	4651      	mov	r1, sl
 8021bba:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021bbc:	f7ff ff1c 	bl	80219f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8021bc0:	4681      	mov	r9, r0
 8021bc2:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021bc4:	f7ff ff42 	bl	8021a4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8021bc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021bca:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021bcc:	eba3 0a01 	sub.w	sl, r3, r1
 8021bd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021bd2:	459a      	cmp	sl, r3
 8021bd4:	bfa8      	it	ge
 8021bd6:	469a      	movge	sl, r3
 8021bd8:	f1ba 0f00 	cmp.w	sl, #0
 8021bdc:	4683      	mov	fp, r0
 8021bde:	f340 811a 	ble.w	8021e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021be2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021be4:	1b64      	subs	r4, r4, r5
 8021be6:	1b1c      	subs	r4, r3, r4
 8021be8:	42bc      	cmp	r4, r7
 8021bea:	bfd4      	ite	le
 8021bec:	ebc5 0504 	rsble	r5, r5, r4
 8021bf0:	ebc5 0507 	rsbgt	r5, r5, r7
 8021bf4:	2d00      	cmp	r5, #0
 8021bf6:	f340 810e 	ble.w	8021e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021bfa:	1b52      	subs	r2, r2, r5
 8021bfc:	fb08 f302 	mul.w	r3, r8, r2
 8021c00:	930f      	str	r3, [sp, #60]	; 0x3c
 8021c02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021c04:	2b00      	cmp	r3, #0
 8021c06:	f040 8116 	bne.w	8021e36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8021c0a:	4b8d      	ldr	r3, [pc, #564]	; (8021e40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8021c0c:	6818      	ldr	r0, [r3, #0]
 8021c0e:	6803      	ldr	r3, [r0, #0]
 8021c10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021c12:	4798      	blx	r3
 8021c14:	2301      	movs	r3, #1
 8021c16:	fa03 f308 	lsl.w	r3, r3, r8
 8021c1a:	4a8a      	ldr	r2, [pc, #552]	; (8021e44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8021c1c:	3b01      	subs	r3, #1
 8021c1e:	b2db      	uxtb	r3, r3
 8021c20:	8811      	ldrh	r1, [r2, #0]
 8021c22:	930e      	str	r3, [sp, #56]	; 0x38
 8021c24:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8021c28:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8021c2c:	fb01 2303 	mla	r3, r1, r3, r2
 8021c30:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021c34:	930a      	str	r3, [sp, #40]	; 0x28
 8021c36:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021c38:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021c3c:	9313      	str	r3, [sp, #76]	; 0x4c
 8021c3e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021c40:	0a19      	lsrs	r1, r3, #8
 8021c42:	b2cb      	uxtb	r3, r1
 8021c44:	9312      	str	r3, [sp, #72]	; 0x48
 8021c46:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021c48:	b2db      	uxtb	r3, r3
 8021c4a:	9311      	str	r3, [sp, #68]	; 0x44
 8021c4c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021c4e:	095a      	lsrs	r2, r3, #5
 8021c50:	4b7d      	ldr	r3, [pc, #500]	; (8021e48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8021c52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021c56:	400b      	ands	r3, r1
 8021c58:	4313      	orrs	r3, r2
 8021c5a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021c5c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021c60:	4313      	orrs	r3, r2
 8021c62:	b29b      	uxth	r3, r3
 8021c64:	9310      	str	r3, [sp, #64]	; 0x40
 8021c66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021c68:	781a      	ldrb	r2, [r3, #0]
 8021c6a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8021c6e:	4132      	asrs	r2, r6
 8021c70:	fb05 b919 	mls	r9, r5, r9, fp
 8021c74:	fb03 fb05 	mul.w	fp, r3, r5
 8021c78:	b2d2      	uxtb	r2, r2
 8021c7a:	930d      	str	r3, [sp, #52]	; 0x34
 8021c7c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8021c80:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8021c84:	f0c0 80f5 	bcc.w	8021e72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8021c88:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8021c8c:	46ae      	mov	lr, r5
 8021c8e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8021c92:	f0c0 80dd 	bcc.w	8021e50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8021c96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021c98:	4013      	ands	r3, r2
 8021c9a:	d055      	beq.n	8021d48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8021c9c:	20ff      	movs	r0, #255	; 0xff
 8021c9e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021ca0:	fb90 f1f1 	sdiv	r1, r0, r1
 8021ca4:	434b      	muls	r3, r1
 8021ca6:	2bfe      	cmp	r3, #254	; 0xfe
 8021ca8:	dd03      	ble.n	8021cb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8021caa:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021cac:	4281      	cmp	r1, r0
 8021cae:	f000 80cd 	beq.w	8021e4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8021cb2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021cb4:	f8bc 4000 	ldrh.w	r4, [ip]
 8021cb8:	fb11 f303 	smulbb	r3, r1, r3
 8021cbc:	b29b      	uxth	r3, r3
 8021cbe:	1c59      	adds	r1, r3, #1
 8021cc0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021cc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021cc8:	b29f      	uxth	r7, r3
 8021cca:	43db      	mvns	r3, r3
 8021ccc:	b2db      	uxtb	r3, r3
 8021cce:	9309      	str	r3, [sp, #36]	; 0x24
 8021cd0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021cd2:	1220      	asrs	r0, r4, #8
 8021cd4:	fb13 f907 	smulbb	r9, r3, r7
 8021cd8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021cdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021cde:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8021ce2:	fb00 9003 	mla	r0, r0, r3, r9
 8021ce6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021ce8:	10e1      	asrs	r1, r4, #3
 8021cea:	fb13 f907 	smulbb	r9, r3, r7
 8021cee:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021cf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021cf4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8021cf8:	fb01 9103 	mla	r1, r1, r3, r9
 8021cfc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021cfe:	00e4      	lsls	r4, r4, #3
 8021d00:	fb13 f707 	smulbb	r7, r3, r7
 8021d04:	b2e4      	uxtb	r4, r4
 8021d06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d08:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021d0c:	fb04 7403 	mla	r4, r4, r3, r7
 8021d10:	b280      	uxth	r0, r0
 8021d12:	b2a4      	uxth	r4, r4
 8021d14:	1c43      	adds	r3, r0, #1
 8021d16:	f104 0901 	add.w	r9, r4, #1
 8021d1a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021d1e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8021d22:	b289      	uxth	r1, r1
 8021d24:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8021d28:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021d2c:	ea49 0000 	orr.w	r0, r9, r0
 8021d30:	f101 0901 	add.w	r9, r1, #1
 8021d34:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8021d38:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021d3c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021d40:	ea40 0009 	orr.w	r0, r0, r9
 8021d44:	f8ac 0000 	strh.w	r0, [ip]
 8021d48:	4446      	add	r6, r8
 8021d4a:	b2b6      	uxth	r6, r6
 8021d4c:	2e07      	cmp	r6, #7
 8021d4e:	bf81      	itttt	hi
 8021d50:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8021d52:	785a      	ldrbhi	r2, [r3, #1]
 8021d54:	3301      	addhi	r3, #1
 8021d56:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8021d58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021d5a:	bf9a      	itte	ls
 8021d5c:	fa42 f208 	asrls.w	r2, r2, r8
 8021d60:	b2d2      	uxtbls	r2, r2
 8021d62:	2600      	movhi	r6, #0
 8021d64:	449c      	add	ip, r3
 8021d66:	e792      	b.n	8021c8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8021d68:	441c      	add	r4, r3
 8021d6a:	b224      	sxth	r4, r4
 8021d6c:	e6d5      	b.n	8021b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021d6e:	f1ba 0f01 	cmp.w	sl, #1
 8021d72:	f47f af0c 	bne.w	8021b8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d76:	f1bb 0f01 	cmp.w	fp, #1
 8021d7a:	f47f af08 	bne.w	8021b8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d7e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8021e40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8021d82:	f8db 0000 	ldr.w	r0, [fp]
 8021d86:	6803      	ldr	r3, [r0, #0]
 8021d88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021d8a:	4798      	blx	r3
 8021d8c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8021d90:	465a      	mov	r2, fp
 8021d92:	d006      	beq.n	8021da2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021d94:	f1b8 0f04 	cmp.w	r8, #4
 8021d98:	d140      	bne.n	8021e1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8021d9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021d9c:	3300      	adds	r3, #0
 8021d9e:	bf18      	it	ne
 8021da0:	2301      	movne	r3, #1
 8021da2:	0580      	lsls	r0, r0, #22
 8021da4:	d56e      	bpl.n	8021e84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021da6:	f1b8 0f08 	cmp.w	r8, #8
 8021daa:	d16b      	bne.n	8021e84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021dac:	2b00      	cmp	r3, #0
 8021dae:	bf0c      	ite	eq
 8021db0:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8021db4:	f44f 7180 	movne.w	r1, #256	; 0x100
 8021db8:	2d00      	cmp	r5, #0
 8021dba:	f47f aee8 	bne.w	8021b8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021dbe:	2e00      	cmp	r6, #0
 8021dc0:	f47f aee5 	bne.w	8021b8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021dc4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021dc6:	19e3      	adds	r3, r4, r7
 8021dc8:	4283      	cmp	r3, r0
 8021dca:	f73f aee0 	bgt.w	8021b8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021dce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021dd0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021dd2:	444b      	add	r3, r9
 8021dd4:	4283      	cmp	r3, r0
 8021dd6:	f73f aeda 	bgt.w	8021b8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021dda:	6810      	ldr	r0, [r2, #0]
 8021ddc:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8021de0:	6804      	ldr	r4, [r0, #0]
 8021de2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8021de6:	b2bf      	uxth	r7, r7
 8021de8:	f1b8 0f08 	cmp.w	r8, #8
 8021dec:	f04f 0500 	mov.w	r5, #0
 8021df0:	bf18      	it	ne
 8021df2:	3701      	addne	r7, #1
 8021df4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021df8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021dfa:	9104      	str	r1, [sp, #16]
 8021dfc:	bf18      	it	ne
 8021dfe:	f027 0701 	bicne.w	r7, r7, #1
 8021e02:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8021e04:	bf18      	it	ne
 8021e06:	b2bf      	uxthne	r7, r7
 8021e08:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8021e0c:	e9cd 7900 	strd	r7, r9, [sp]
 8021e10:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021e12:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8021e14:	47a0      	blx	r4
 8021e16:	b019      	add	sp, #100	; 0x64
 8021e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021e1c:	2300      	movs	r3, #0
 8021e1e:	e7c0      	b.n	8021da2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021e20:	2208      	movs	r2, #8
 8021e22:	fb92 f3f8 	sdiv	r3, r2, r8
 8021e26:	1e5a      	subs	r2, r3, #1
 8021e28:	443a      	add	r2, r7
 8021e2a:	fb92 f2f3 	sdiv	r2, r2, r3
 8021e2e:	fb12 f203 	smulbb	r2, r2, r3
 8021e32:	b292      	uxth	r2, r2
 8021e34:	e6b0      	b.n	8021b98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8021e36:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021e38:	e6ec      	b.n	8021c14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8021e3a:	bf00      	nop
 8021e3c:	2001384c 	.word	0x2001384c
 8021e40:	20013854 	.word	0x20013854
 8021e44:	2001384e 	.word	0x2001384e
 8021e48:	00fff800 	.word	0x00fff800
 8021e4c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021e4e:	e779      	b.n	8021d44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8021e50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021e52:	b153      	cbz	r3, 8021e6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8021e54:	441e      	add	r6, r3
 8021e56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021e58:	b2b6      	uxth	r6, r6
 8021e5a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8021e5e:	f006 0607 	and.w	r6, r6, #7
 8021e62:	781a      	ldrb	r2, [r3, #0]
 8021e64:	9328      	str	r3, [sp, #160]	; 0xa0
 8021e66:	4132      	asrs	r2, r6
 8021e68:	b2d2      	uxtb	r2, r2
 8021e6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021e6c:	445b      	add	r3, fp
 8021e6e:	930a      	str	r3, [sp, #40]	; 0x28
 8021e70:	e706      	b.n	8021c80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8021e72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021e74:	2b00      	cmp	r3, #0
 8021e76:	d1ce      	bne.n	8021e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021e78:	4b05      	ldr	r3, [pc, #20]	; (8021e90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8021e7a:	6818      	ldr	r0, [r3, #0]
 8021e7c:	6803      	ldr	r3, [r0, #0]
 8021e7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021e80:	4798      	blx	r3
 8021e82:	e7c8      	b.n	8021e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021e84:	2b00      	cmp	r3, #0
 8021e86:	f43f ae82 	beq.w	8021b8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021e8a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8021e8e:	e793      	b.n	8021db8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8021e90:	20013854 	.word	0x20013854

08021e94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8021e94:	b538      	push	{r3, r4, r5, lr}
 8021e96:	4c15      	ldr	r4, [pc, #84]	; (8021eec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8021e98:	7823      	ldrb	r3, [r4, #0]
 8021e9a:	f3bf 8f5b 	dmb	ish
 8021e9e:	07da      	lsls	r2, r3, #31
 8021ea0:	4605      	mov	r5, r0
 8021ea2:	d40b      	bmi.n	8021ebc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021ea4:	4620      	mov	r0, r4
 8021ea6:	f00a ff8a 	bl	802cdbe <__cxa_guard_acquire>
 8021eaa:	b138      	cbz	r0, 8021ebc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021eac:	4620      	mov	r0, r4
 8021eae:	f00a ff92 	bl	802cdd6 <__cxa_guard_release>
 8021eb2:	4a0f      	ldr	r2, [pc, #60]	; (8021ef0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021eb4:	490f      	ldr	r1, [pc, #60]	; (8021ef4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8021eb6:	4810      	ldr	r0, [pc, #64]	; (8021ef8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021eb8:	f00a ff7a 	bl	802cdb0 <__aeabi_atexit>
 8021ebc:	4c0f      	ldr	r4, [pc, #60]	; (8021efc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8021ebe:	7823      	ldrb	r3, [r4, #0]
 8021ec0:	f3bf 8f5b 	dmb	ish
 8021ec4:	07db      	lsls	r3, r3, #31
 8021ec6:	d40b      	bmi.n	8021ee0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021ec8:	4620      	mov	r0, r4
 8021eca:	f00a ff78 	bl	802cdbe <__cxa_guard_acquire>
 8021ece:	b138      	cbz	r0, 8021ee0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021ed0:	4620      	mov	r0, r4
 8021ed2:	f00a ff80 	bl	802cdd6 <__cxa_guard_release>
 8021ed6:	4a06      	ldr	r2, [pc, #24]	; (8021ef0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021ed8:	4909      	ldr	r1, [pc, #36]	; (8021f00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8021eda:	480a      	ldr	r0, [pc, #40]	; (8021f04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021edc:	f00a ff68 	bl	802cdb0 <__aeabi_atexit>
 8021ee0:	4b05      	ldr	r3, [pc, #20]	; (8021ef8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021ee2:	612b      	str	r3, [r5, #16]
 8021ee4:	4b07      	ldr	r3, [pc, #28]	; (8021f04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021ee6:	616b      	str	r3, [r5, #20]
 8021ee8:	bd38      	pop	{r3, r4, r5, pc}
 8021eea:	bf00      	nop
 8021eec:	20013934 	.word	0x20013934
 8021ef0:	20000000 	.word	0x20000000
 8021ef4:	0801ec97 	.word	0x0801ec97
 8021ef8:	200000d8 	.word	0x200000d8
 8021efc:	20013938 	.word	0x20013938
 8021f00:	0801ec95 	.word	0x0801ec95
 8021f04:	200000dc 	.word	0x200000dc

08021f08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8021f08:	b538      	push	{r3, r4, r5, lr}
 8021f0a:	4c15      	ldr	r4, [pc, #84]	; (8021f60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021f0c:	7823      	ldrb	r3, [r4, #0]
 8021f0e:	f3bf 8f5b 	dmb	ish
 8021f12:	07da      	lsls	r2, r3, #31
 8021f14:	4605      	mov	r5, r0
 8021f16:	d40b      	bmi.n	8021f30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021f18:	4620      	mov	r0, r4
 8021f1a:	f00a ff50 	bl	802cdbe <__cxa_guard_acquire>
 8021f1e:	b138      	cbz	r0, 8021f30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021f20:	4620      	mov	r0, r4
 8021f22:	f00a ff58 	bl	802cdd6 <__cxa_guard_release>
 8021f26:	4a0f      	ldr	r2, [pc, #60]	; (8021f64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021f28:	490f      	ldr	r1, [pc, #60]	; (8021f68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8021f2a:	4810      	ldr	r0, [pc, #64]	; (8021f6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021f2c:	f00a ff40 	bl	802cdb0 <__aeabi_atexit>
 8021f30:	4c0f      	ldr	r4, [pc, #60]	; (8021f70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8021f32:	7823      	ldrb	r3, [r4, #0]
 8021f34:	f3bf 8f5b 	dmb	ish
 8021f38:	07db      	lsls	r3, r3, #31
 8021f3a:	d40b      	bmi.n	8021f54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021f3c:	4620      	mov	r0, r4
 8021f3e:	f00a ff3e 	bl	802cdbe <__cxa_guard_acquire>
 8021f42:	b138      	cbz	r0, 8021f54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021f44:	4620      	mov	r0, r4
 8021f46:	f00a ff46 	bl	802cdd6 <__cxa_guard_release>
 8021f4a:	4a06      	ldr	r2, [pc, #24]	; (8021f64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021f4c:	4909      	ldr	r1, [pc, #36]	; (8021f74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8021f4e:	480a      	ldr	r0, [pc, #40]	; (8021f78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021f50:	f00a ff2e 	bl	802cdb0 <__aeabi_atexit>
 8021f54:	4b05      	ldr	r3, [pc, #20]	; (8021f6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021f56:	60ab      	str	r3, [r5, #8]
 8021f58:	4b07      	ldr	r3, [pc, #28]	; (8021f78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021f5a:	60eb      	str	r3, [r5, #12]
 8021f5c:	bd38      	pop	{r3, r4, r5, pc}
 8021f5e:	bf00      	nop
 8021f60:	2001390c 	.word	0x2001390c
 8021f64:	20000000 	.word	0x20000000
 8021f68:	0801ec9b 	.word	0x0801ec9b
 8021f6c:	200000b0 	.word	0x200000b0
 8021f70:	20013910 	.word	0x20013910
 8021f74:	0801ec99 	.word	0x0801ec99
 8021f78:	200000b4 	.word	0x200000b4

08021f7c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8021f7c:	b510      	push	{r4, lr}
 8021f7e:	4604      	mov	r4, r0
 8021f80:	f7ff ff88 	bl	8021e94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8021f84:	4620      	mov	r0, r4
 8021f86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021f8a:	f7ff bfbd 	b.w	8021f08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08021f90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8021f90:	b538      	push	{r3, r4, r5, lr}
 8021f92:	4c15      	ldr	r4, [pc, #84]	; (8021fe8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8021f94:	7823      	ldrb	r3, [r4, #0]
 8021f96:	f3bf 8f5b 	dmb	ish
 8021f9a:	07da      	lsls	r2, r3, #31
 8021f9c:	4605      	mov	r5, r0
 8021f9e:	d40b      	bmi.n	8021fb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021fa0:	4620      	mov	r0, r4
 8021fa2:	f00a ff0c 	bl	802cdbe <__cxa_guard_acquire>
 8021fa6:	b138      	cbz	r0, 8021fb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021fa8:	4620      	mov	r0, r4
 8021faa:	f00a ff14 	bl	802cdd6 <__cxa_guard_release>
 8021fae:	4a0f      	ldr	r2, [pc, #60]	; (8021fec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021fb0:	490f      	ldr	r1, [pc, #60]	; (8021ff0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8021fb2:	4810      	ldr	r0, [pc, #64]	; (8021ff4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021fb4:	f00a fefc 	bl	802cdb0 <__aeabi_atexit>
 8021fb8:	4c0f      	ldr	r4, [pc, #60]	; (8021ff8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8021fba:	7823      	ldrb	r3, [r4, #0]
 8021fbc:	f3bf 8f5b 	dmb	ish
 8021fc0:	07db      	lsls	r3, r3, #31
 8021fc2:	d40b      	bmi.n	8021fdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021fc4:	4620      	mov	r0, r4
 8021fc6:	f00a fefa 	bl	802cdbe <__cxa_guard_acquire>
 8021fca:	b138      	cbz	r0, 8021fdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021fcc:	4620      	mov	r0, r4
 8021fce:	f00a ff02 	bl	802cdd6 <__cxa_guard_release>
 8021fd2:	4a06      	ldr	r2, [pc, #24]	; (8021fec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021fd4:	4909      	ldr	r1, [pc, #36]	; (8021ffc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8021fd6:	480a      	ldr	r0, [pc, #40]	; (8022000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021fd8:	f00a feea 	bl	802cdb0 <__aeabi_atexit>
 8021fdc:	4b05      	ldr	r3, [pc, #20]	; (8021ff4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021fde:	622b      	str	r3, [r5, #32]
 8021fe0:	4b07      	ldr	r3, [pc, #28]	; (8022000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021fe2:	626b      	str	r3, [r5, #36]	; 0x24
 8021fe4:	bd38      	pop	{r3, r4, r5, pc}
 8021fe6:	bf00      	nop
 8021fe8:	2001393c 	.word	0x2001393c
 8021fec:	20000000 	.word	0x20000000
 8021ff0:	0801ec8f 	.word	0x0801ec8f
 8021ff4:	200000e0 	.word	0x200000e0
 8021ff8:	20013940 	.word	0x20013940
 8021ffc:	0801ec8d 	.word	0x0801ec8d
 8022000:	200000e4 	.word	0x200000e4

08022004 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8022004:	b538      	push	{r3, r4, r5, lr}
 8022006:	4c15      	ldr	r4, [pc, #84]	; (802205c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8022008:	7823      	ldrb	r3, [r4, #0]
 802200a:	f3bf 8f5b 	dmb	ish
 802200e:	07da      	lsls	r2, r3, #31
 8022010:	4605      	mov	r5, r0
 8022012:	d40b      	bmi.n	802202c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8022014:	4620      	mov	r0, r4
 8022016:	f00a fed2 	bl	802cdbe <__cxa_guard_acquire>
 802201a:	b138      	cbz	r0, 802202c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 802201c:	4620      	mov	r0, r4
 802201e:	f00a feda 	bl	802cdd6 <__cxa_guard_release>
 8022022:	4a0f      	ldr	r2, [pc, #60]	; (8022060 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8022024:	490f      	ldr	r1, [pc, #60]	; (8022064 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8022026:	4810      	ldr	r0, [pc, #64]	; (8022068 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8022028:	f00a fec2 	bl	802cdb0 <__aeabi_atexit>
 802202c:	4c0f      	ldr	r4, [pc, #60]	; (802206c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 802202e:	7823      	ldrb	r3, [r4, #0]
 8022030:	f3bf 8f5b 	dmb	ish
 8022034:	07db      	lsls	r3, r3, #31
 8022036:	d40b      	bmi.n	8022050 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8022038:	4620      	mov	r0, r4
 802203a:	f00a fec0 	bl	802cdbe <__cxa_guard_acquire>
 802203e:	b138      	cbz	r0, 8022050 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8022040:	4620      	mov	r0, r4
 8022042:	f00a fec8 	bl	802cdd6 <__cxa_guard_release>
 8022046:	4a06      	ldr	r2, [pc, #24]	; (8022060 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8022048:	4909      	ldr	r1, [pc, #36]	; (8022070 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 802204a:	480a      	ldr	r0, [pc, #40]	; (8022074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 802204c:	f00a feb0 	bl	802cdb0 <__aeabi_atexit>
 8022050:	4b05      	ldr	r3, [pc, #20]	; (8022068 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8022052:	61ab      	str	r3, [r5, #24]
 8022054:	4b07      	ldr	r3, [pc, #28]	; (8022074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8022056:	61eb      	str	r3, [r5, #28]
 8022058:	bd38      	pop	{r3, r4, r5, pc}
 802205a:	bf00      	nop
 802205c:	20013914 	.word	0x20013914
 8022060:	20000000 	.word	0x20000000
 8022064:	0801ec93 	.word	0x0801ec93
 8022068:	200000b8 	.word	0x200000b8
 802206c:	20013918 	.word	0x20013918
 8022070:	0801ec91 	.word	0x0801ec91
 8022074:	200000bc 	.word	0x200000bc

08022078 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8022078:	b510      	push	{r4, lr}
 802207a:	4604      	mov	r4, r0
 802207c:	f7ff ff88 	bl	8021f90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8022080:	4620      	mov	r0, r4
 8022082:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022086:	f7ff bfbd 	b.w	8022004 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0802208c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 802208c:	b538      	push	{r3, r4, r5, lr}
 802208e:	4c15      	ldr	r4, [pc, #84]	; (80220e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8022090:	7823      	ldrb	r3, [r4, #0]
 8022092:	f3bf 8f5b 	dmb	ish
 8022096:	07da      	lsls	r2, r3, #31
 8022098:	4605      	mov	r5, r0
 802209a:	d40b      	bmi.n	80220b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802209c:	4620      	mov	r0, r4
 802209e:	f00a fe8e 	bl	802cdbe <__cxa_guard_acquire>
 80220a2:	b138      	cbz	r0, 80220b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80220a4:	4620      	mov	r0, r4
 80220a6:	f00a fe96 	bl	802cdd6 <__cxa_guard_release>
 80220aa:	4a0f      	ldr	r2, [pc, #60]	; (80220e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80220ac:	490f      	ldr	r1, [pc, #60]	; (80220ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80220ae:	4810      	ldr	r0, [pc, #64]	; (80220f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80220b0:	f00a fe7e 	bl	802cdb0 <__aeabi_atexit>
 80220b4:	4c0f      	ldr	r4, [pc, #60]	; (80220f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80220b6:	7823      	ldrb	r3, [r4, #0]
 80220b8:	f3bf 8f5b 	dmb	ish
 80220bc:	07db      	lsls	r3, r3, #31
 80220be:	d40b      	bmi.n	80220d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80220c0:	4620      	mov	r0, r4
 80220c2:	f00a fe7c 	bl	802cdbe <__cxa_guard_acquire>
 80220c6:	b138      	cbz	r0, 80220d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80220c8:	4620      	mov	r0, r4
 80220ca:	f00a fe84 	bl	802cdd6 <__cxa_guard_release>
 80220ce:	4a06      	ldr	r2, [pc, #24]	; (80220e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80220d0:	4909      	ldr	r1, [pc, #36]	; (80220f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80220d2:	480a      	ldr	r0, [pc, #40]	; (80220fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80220d4:	f00a fe6c 	bl	802cdb0 <__aeabi_atexit>
 80220d8:	4b05      	ldr	r3, [pc, #20]	; (80220f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80220da:	632b      	str	r3, [r5, #48]	; 0x30
 80220dc:	4b07      	ldr	r3, [pc, #28]	; (80220fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80220de:	636b      	str	r3, [r5, #52]	; 0x34
 80220e0:	bd38      	pop	{r3, r4, r5, pc}
 80220e2:	bf00      	nop
 80220e4:	2001394c 	.word	0x2001394c
 80220e8:	20000000 	.word	0x20000000
 80220ec:	0801ec87 	.word	0x0801ec87
 80220f0:	200000f0 	.word	0x200000f0
 80220f4:	20013950 	.word	0x20013950
 80220f8:	0801ec85 	.word	0x0801ec85
 80220fc:	200000f4 	.word	0x200000f4

08022100 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8022100:	b538      	push	{r3, r4, r5, lr}
 8022102:	4c15      	ldr	r4, [pc, #84]	; (8022158 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8022104:	7823      	ldrb	r3, [r4, #0]
 8022106:	f3bf 8f5b 	dmb	ish
 802210a:	07da      	lsls	r2, r3, #31
 802210c:	4605      	mov	r5, r0
 802210e:	d40b      	bmi.n	8022128 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8022110:	4620      	mov	r0, r4
 8022112:	f00a fe54 	bl	802cdbe <__cxa_guard_acquire>
 8022116:	b138      	cbz	r0, 8022128 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8022118:	4620      	mov	r0, r4
 802211a:	f00a fe5c 	bl	802cdd6 <__cxa_guard_release>
 802211e:	4a0f      	ldr	r2, [pc, #60]	; (802215c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8022120:	490f      	ldr	r1, [pc, #60]	; (8022160 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8022122:	4810      	ldr	r0, [pc, #64]	; (8022164 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8022124:	f00a fe44 	bl	802cdb0 <__aeabi_atexit>
 8022128:	4c0f      	ldr	r4, [pc, #60]	; (8022168 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 802212a:	7823      	ldrb	r3, [r4, #0]
 802212c:	f3bf 8f5b 	dmb	ish
 8022130:	07db      	lsls	r3, r3, #31
 8022132:	d40b      	bmi.n	802214c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8022134:	4620      	mov	r0, r4
 8022136:	f00a fe42 	bl	802cdbe <__cxa_guard_acquire>
 802213a:	b138      	cbz	r0, 802214c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 802213c:	4620      	mov	r0, r4
 802213e:	f00a fe4a 	bl	802cdd6 <__cxa_guard_release>
 8022142:	4a06      	ldr	r2, [pc, #24]	; (802215c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8022144:	4909      	ldr	r1, [pc, #36]	; (802216c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8022146:	480a      	ldr	r0, [pc, #40]	; (8022170 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8022148:	f00a fe32 	bl	802cdb0 <__aeabi_atexit>
 802214c:	4b05      	ldr	r3, [pc, #20]	; (8022164 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802214e:	62ab      	str	r3, [r5, #40]	; 0x28
 8022150:	4b07      	ldr	r3, [pc, #28]	; (8022170 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8022152:	62eb      	str	r3, [r5, #44]	; 0x2c
 8022154:	bd38      	pop	{r3, r4, r5, pc}
 8022156:	bf00      	nop
 8022158:	2001391c 	.word	0x2001391c
 802215c:	20000000 	.word	0x20000000
 8022160:	0801ec8b 	.word	0x0801ec8b
 8022164:	200000c0 	.word	0x200000c0
 8022168:	20013920 	.word	0x20013920
 802216c:	0801ec89 	.word	0x0801ec89
 8022170:	200000c4 	.word	0x200000c4

08022174 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8022174:	b510      	push	{r4, lr}
 8022176:	4604      	mov	r4, r0
 8022178:	f7ff ff88 	bl	802208c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 802217c:	4620      	mov	r0, r4
 802217e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022182:	f7ff bfbd 	b.w	8022100 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08022188 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8022188:	b538      	push	{r3, r4, r5, lr}
 802218a:	4c15      	ldr	r4, [pc, #84]	; (80221e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802218c:	7823      	ldrb	r3, [r4, #0]
 802218e:	f3bf 8f5b 	dmb	ish
 8022192:	07da      	lsls	r2, r3, #31
 8022194:	4605      	mov	r5, r0
 8022196:	d40b      	bmi.n	80221b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022198:	4620      	mov	r0, r4
 802219a:	f00a fe10 	bl	802cdbe <__cxa_guard_acquire>
 802219e:	b138      	cbz	r0, 80221b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80221a0:	4620      	mov	r0, r4
 80221a2:	f00a fe18 	bl	802cdd6 <__cxa_guard_release>
 80221a6:	4a0f      	ldr	r2, [pc, #60]	; (80221e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80221a8:	490f      	ldr	r1, [pc, #60]	; (80221e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80221aa:	4810      	ldr	r0, [pc, #64]	; (80221ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80221ac:	f00a fe00 	bl	802cdb0 <__aeabi_atexit>
 80221b0:	4c0f      	ldr	r4, [pc, #60]	; (80221f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80221b2:	7823      	ldrb	r3, [r4, #0]
 80221b4:	f3bf 8f5b 	dmb	ish
 80221b8:	07db      	lsls	r3, r3, #31
 80221ba:	d40b      	bmi.n	80221d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80221bc:	4620      	mov	r0, r4
 80221be:	f00a fdfe 	bl	802cdbe <__cxa_guard_acquire>
 80221c2:	b138      	cbz	r0, 80221d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80221c4:	4620      	mov	r0, r4
 80221c6:	f00a fe06 	bl	802cdd6 <__cxa_guard_release>
 80221ca:	4a06      	ldr	r2, [pc, #24]	; (80221e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80221cc:	4909      	ldr	r1, [pc, #36]	; (80221f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80221ce:	480a      	ldr	r0, [pc, #40]	; (80221f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80221d0:	f00a fdee 	bl	802cdb0 <__aeabi_atexit>
 80221d4:	4b05      	ldr	r3, [pc, #20]	; (80221ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80221d6:	652b      	str	r3, [r5, #80]	; 0x50
 80221d8:	4b07      	ldr	r3, [pc, #28]	; (80221f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80221da:	656b      	str	r3, [r5, #84]	; 0x54
 80221dc:	bd38      	pop	{r3, r4, r5, pc}
 80221de:	bf00      	nop
 80221e0:	20013954 	.word	0x20013954
 80221e4:	20000000 	.word	0x20000000
 80221e8:	0801ec77 	.word	0x0801ec77
 80221ec:	200000f8 	.word	0x200000f8
 80221f0:	20013958 	.word	0x20013958
 80221f4:	0801ec75 	.word	0x0801ec75
 80221f8:	200000fc 	.word	0x200000fc

080221fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80221fc:	b538      	push	{r3, r4, r5, lr}
 80221fe:	4c15      	ldr	r4, [pc, #84]	; (8022254 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8022200:	7823      	ldrb	r3, [r4, #0]
 8022202:	f3bf 8f5b 	dmb	ish
 8022206:	07da      	lsls	r2, r3, #31
 8022208:	4605      	mov	r5, r0
 802220a:	d40b      	bmi.n	8022224 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 802220c:	4620      	mov	r0, r4
 802220e:	f00a fdd6 	bl	802cdbe <__cxa_guard_acquire>
 8022212:	b138      	cbz	r0, 8022224 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8022214:	4620      	mov	r0, r4
 8022216:	f00a fdde 	bl	802cdd6 <__cxa_guard_release>
 802221a:	4a0f      	ldr	r2, [pc, #60]	; (8022258 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 802221c:	490f      	ldr	r1, [pc, #60]	; (802225c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 802221e:	4810      	ldr	r0, [pc, #64]	; (8022260 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8022220:	f00a fdc6 	bl	802cdb0 <__aeabi_atexit>
 8022224:	4c0f      	ldr	r4, [pc, #60]	; (8022264 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8022226:	7823      	ldrb	r3, [r4, #0]
 8022228:	f3bf 8f5b 	dmb	ish
 802222c:	07db      	lsls	r3, r3, #31
 802222e:	d40b      	bmi.n	8022248 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8022230:	4620      	mov	r0, r4
 8022232:	f00a fdc4 	bl	802cdbe <__cxa_guard_acquire>
 8022236:	b138      	cbz	r0, 8022248 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8022238:	4620      	mov	r0, r4
 802223a:	f00a fdcc 	bl	802cdd6 <__cxa_guard_release>
 802223e:	4a06      	ldr	r2, [pc, #24]	; (8022258 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8022240:	4909      	ldr	r1, [pc, #36]	; (8022268 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8022242:	480a      	ldr	r0, [pc, #40]	; (802226c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8022244:	f00a fdb4 	bl	802cdb0 <__aeabi_atexit>
 8022248:	4b05      	ldr	r3, [pc, #20]	; (8022260 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802224a:	64ab      	str	r3, [r5, #72]	; 0x48
 802224c:	4b07      	ldr	r3, [pc, #28]	; (802226c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 802224e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8022250:	bd38      	pop	{r3, r4, r5, pc}
 8022252:	bf00      	nop
 8022254:	2001395c 	.word	0x2001395c
 8022258:	20000000 	.word	0x20000000
 802225c:	0801ec7b 	.word	0x0801ec7b
 8022260:	20000100 	.word	0x20000100
 8022264:	20013960 	.word	0x20013960
 8022268:	0801ec79 	.word	0x0801ec79
 802226c:	20000104 	.word	0x20000104

08022270 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8022270:	b538      	push	{r3, r4, r5, lr}
 8022272:	4c15      	ldr	r4, [pc, #84]	; (80222c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8022274:	7823      	ldrb	r3, [r4, #0]
 8022276:	f3bf 8f5b 	dmb	ish
 802227a:	07da      	lsls	r2, r3, #31
 802227c:	4605      	mov	r5, r0
 802227e:	d40b      	bmi.n	8022298 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022280:	4620      	mov	r0, r4
 8022282:	f00a fd9c 	bl	802cdbe <__cxa_guard_acquire>
 8022286:	b138      	cbz	r0, 8022298 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022288:	4620      	mov	r0, r4
 802228a:	f00a fda4 	bl	802cdd6 <__cxa_guard_release>
 802228e:	4a0f      	ldr	r2, [pc, #60]	; (80222cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022290:	490f      	ldr	r1, [pc, #60]	; (80222d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8022292:	4810      	ldr	r0, [pc, #64]	; (80222d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022294:	f00a fd8c 	bl	802cdb0 <__aeabi_atexit>
 8022298:	4c0f      	ldr	r4, [pc, #60]	; (80222d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802229a:	7823      	ldrb	r3, [r4, #0]
 802229c:	f3bf 8f5b 	dmb	ish
 80222a0:	07db      	lsls	r3, r3, #31
 80222a2:	d40b      	bmi.n	80222bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80222a4:	4620      	mov	r0, r4
 80222a6:	f00a fd8a 	bl	802cdbe <__cxa_guard_acquire>
 80222aa:	b138      	cbz	r0, 80222bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80222ac:	4620      	mov	r0, r4
 80222ae:	f00a fd92 	bl	802cdd6 <__cxa_guard_release>
 80222b2:	4a06      	ldr	r2, [pc, #24]	; (80222cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80222b4:	4909      	ldr	r1, [pc, #36]	; (80222dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80222b6:	480a      	ldr	r0, [pc, #40]	; (80222e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80222b8:	f00a fd7a 	bl	802cdb0 <__aeabi_atexit>
 80222bc:	4b05      	ldr	r3, [pc, #20]	; (80222d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80222be:	642b      	str	r3, [r5, #64]	; 0x40
 80222c0:	4b07      	ldr	r3, [pc, #28]	; (80222e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80222c2:	646b      	str	r3, [r5, #68]	; 0x44
 80222c4:	bd38      	pop	{r3, r4, r5, pc}
 80222c6:	bf00      	nop
 80222c8:	20013924 	.word	0x20013924
 80222cc:	20000000 	.word	0x20000000
 80222d0:	0801ec7f 	.word	0x0801ec7f
 80222d4:	200000c8 	.word	0x200000c8
 80222d8:	20013928 	.word	0x20013928
 80222dc:	0801ec7d 	.word	0x0801ec7d
 80222e0:	200000cc 	.word	0x200000cc

080222e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80222e4:	b538      	push	{r3, r4, r5, lr}
 80222e6:	4c15      	ldr	r4, [pc, #84]	; (802233c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80222e8:	7823      	ldrb	r3, [r4, #0]
 80222ea:	f3bf 8f5b 	dmb	ish
 80222ee:	07da      	lsls	r2, r3, #31
 80222f0:	4605      	mov	r5, r0
 80222f2:	d40b      	bmi.n	802230c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80222f4:	4620      	mov	r0, r4
 80222f6:	f00a fd62 	bl	802cdbe <__cxa_guard_acquire>
 80222fa:	b138      	cbz	r0, 802230c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80222fc:	4620      	mov	r0, r4
 80222fe:	f00a fd6a 	bl	802cdd6 <__cxa_guard_release>
 8022302:	4a0f      	ldr	r2, [pc, #60]	; (8022340 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022304:	490f      	ldr	r1, [pc, #60]	; (8022344 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8022306:	4810      	ldr	r0, [pc, #64]	; (8022348 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022308:	f00a fd52 	bl	802cdb0 <__aeabi_atexit>
 802230c:	4c0f      	ldr	r4, [pc, #60]	; (802234c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 802230e:	7823      	ldrb	r3, [r4, #0]
 8022310:	f3bf 8f5b 	dmb	ish
 8022314:	07db      	lsls	r3, r3, #31
 8022316:	d40b      	bmi.n	8022330 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022318:	4620      	mov	r0, r4
 802231a:	f00a fd50 	bl	802cdbe <__cxa_guard_acquire>
 802231e:	b138      	cbz	r0, 8022330 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022320:	4620      	mov	r0, r4
 8022322:	f00a fd58 	bl	802cdd6 <__cxa_guard_release>
 8022326:	4a06      	ldr	r2, [pc, #24]	; (8022340 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022328:	4909      	ldr	r1, [pc, #36]	; (8022350 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 802232a:	480a      	ldr	r0, [pc, #40]	; (8022354 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 802232c:	f00a fd40 	bl	802cdb0 <__aeabi_atexit>
 8022330:	4b05      	ldr	r3, [pc, #20]	; (8022348 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022332:	63ab      	str	r3, [r5, #56]	; 0x38
 8022334:	4b07      	ldr	r3, [pc, #28]	; (8022354 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8022336:	63eb      	str	r3, [r5, #60]	; 0x3c
 8022338:	bd38      	pop	{r3, r4, r5, pc}
 802233a:	bf00      	nop
 802233c:	20013944 	.word	0x20013944
 8022340:	20000000 	.word	0x20000000
 8022344:	0801ec83 	.word	0x0801ec83
 8022348:	200000e8 	.word	0x200000e8
 802234c:	20013948 	.word	0x20013948
 8022350:	0801ec81 	.word	0x0801ec81
 8022354:	200000ec 	.word	0x200000ec

08022358 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8022358:	b510      	push	{r4, lr}
 802235a:	4604      	mov	r4, r0
 802235c:	f7ff ff14 	bl	8022188 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8022360:	4620      	mov	r0, r4
 8022362:	f7ff ff85 	bl	8022270 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8022366:	4620      	mov	r0, r4
 8022368:	f7ff ff48 	bl	80221fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802236c:	4620      	mov	r0, r4
 802236e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022372:	f7ff bfb7 	b.w	80222e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08022378 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8022378:	b538      	push	{r3, r4, r5, lr}
 802237a:	4c15      	ldr	r4, [pc, #84]	; (80223d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802237c:	7823      	ldrb	r3, [r4, #0]
 802237e:	f3bf 8f5b 	dmb	ish
 8022382:	07da      	lsls	r2, r3, #31
 8022384:	4605      	mov	r5, r0
 8022386:	d40b      	bmi.n	80223a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022388:	4620      	mov	r0, r4
 802238a:	f00a fd18 	bl	802cdbe <__cxa_guard_acquire>
 802238e:	b138      	cbz	r0, 80223a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022390:	4620      	mov	r0, r4
 8022392:	f00a fd20 	bl	802cdd6 <__cxa_guard_release>
 8022396:	4a0f      	ldr	r2, [pc, #60]	; (80223d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022398:	490f      	ldr	r1, [pc, #60]	; (80223d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802239a:	4810      	ldr	r0, [pc, #64]	; (80223dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802239c:	f00a fd08 	bl	802cdb0 <__aeabi_atexit>
 80223a0:	4c0f      	ldr	r4, [pc, #60]	; (80223e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80223a2:	7823      	ldrb	r3, [r4, #0]
 80223a4:	f3bf 8f5b 	dmb	ish
 80223a8:	07db      	lsls	r3, r3, #31
 80223aa:	d40b      	bmi.n	80223c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80223ac:	4620      	mov	r0, r4
 80223ae:	f00a fd06 	bl	802cdbe <__cxa_guard_acquire>
 80223b2:	b138      	cbz	r0, 80223c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80223b4:	4620      	mov	r0, r4
 80223b6:	f00a fd0e 	bl	802cdd6 <__cxa_guard_release>
 80223ba:	4a06      	ldr	r2, [pc, #24]	; (80223d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80223bc:	4909      	ldr	r1, [pc, #36]	; (80223e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80223be:	480a      	ldr	r0, [pc, #40]	; (80223e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80223c0:	f00a fcf6 	bl	802cdb0 <__aeabi_atexit>
 80223c4:	4b05      	ldr	r3, [pc, #20]	; (80223dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80223c6:	662b      	str	r3, [r5, #96]	; 0x60
 80223c8:	4b07      	ldr	r3, [pc, #28]	; (80223e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80223ca:	666b      	str	r3, [r5, #100]	; 0x64
 80223cc:	bd38      	pop	{r3, r4, r5, pc}
 80223ce:	bf00      	nop
 80223d0:	2001392c 	.word	0x2001392c
 80223d4:	20000000 	.word	0x20000000
 80223d8:	0801ec6f 	.word	0x0801ec6f
 80223dc:	200000d0 	.word	0x200000d0
 80223e0:	20013930 	.word	0x20013930
 80223e4:	0801ec6d 	.word	0x0801ec6d
 80223e8:	200000d4 	.word	0x200000d4

080223ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80223ec:	b538      	push	{r3, r4, r5, lr}
 80223ee:	4c15      	ldr	r4, [pc, #84]	; (8022444 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80223f0:	7823      	ldrb	r3, [r4, #0]
 80223f2:	f3bf 8f5b 	dmb	ish
 80223f6:	07da      	lsls	r2, r3, #31
 80223f8:	4605      	mov	r5, r0
 80223fa:	d40b      	bmi.n	8022414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80223fc:	4620      	mov	r0, r4
 80223fe:	f00a fcde 	bl	802cdbe <__cxa_guard_acquire>
 8022402:	b138      	cbz	r0, 8022414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8022404:	4620      	mov	r0, r4
 8022406:	f00a fce6 	bl	802cdd6 <__cxa_guard_release>
 802240a:	4a0f      	ldr	r2, [pc, #60]	; (8022448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 802240c:	490f      	ldr	r1, [pc, #60]	; (802244c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 802240e:	4810      	ldr	r0, [pc, #64]	; (8022450 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8022410:	f00a fcce 	bl	802cdb0 <__aeabi_atexit>
 8022414:	4c0f      	ldr	r4, [pc, #60]	; (8022454 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8022416:	7823      	ldrb	r3, [r4, #0]
 8022418:	f3bf 8f5b 	dmb	ish
 802241c:	07db      	lsls	r3, r3, #31
 802241e:	d40b      	bmi.n	8022438 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022420:	4620      	mov	r0, r4
 8022422:	f00a fccc 	bl	802cdbe <__cxa_guard_acquire>
 8022426:	b138      	cbz	r0, 8022438 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022428:	4620      	mov	r0, r4
 802242a:	f00a fcd4 	bl	802cdd6 <__cxa_guard_release>
 802242e:	4a06      	ldr	r2, [pc, #24]	; (8022448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8022430:	4909      	ldr	r1, [pc, #36]	; (8022458 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8022432:	480a      	ldr	r0, [pc, #40]	; (802245c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8022434:	f00a fcbc 	bl	802cdb0 <__aeabi_atexit>
 8022438:	4b05      	ldr	r3, [pc, #20]	; (8022450 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802243a:	65ab      	str	r3, [r5, #88]	; 0x58
 802243c:	4b07      	ldr	r3, [pc, #28]	; (802245c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802243e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8022440:	bd38      	pop	{r3, r4, r5, pc}
 8022442:	bf00      	nop
 8022444:	20013904 	.word	0x20013904
 8022448:	20000000 	.word	0x20000000
 802244c:	0801ec73 	.word	0x0801ec73
 8022450:	200000a8 	.word	0x200000a8
 8022454:	20013908 	.word	0x20013908
 8022458:	0801ec71 	.word	0x0801ec71
 802245c:	200000ac 	.word	0x200000ac

08022460 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8022460:	b510      	push	{r4, lr}
 8022462:	4604      	mov	r4, r0
 8022464:	f7ff ff88 	bl	8022378 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8022468:	4620      	mov	r0, r4
 802246a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802246e:	f7ff bfbd 	b.w	80223ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08022474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8022474:	b538      	push	{r3, r4, r5, lr}
 8022476:	4c15      	ldr	r4, [pc, #84]	; (80224cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8022478:	7823      	ldrb	r3, [r4, #0]
 802247a:	f3bf 8f5b 	dmb	ish
 802247e:	07da      	lsls	r2, r3, #31
 8022480:	4605      	mov	r5, r0
 8022482:	d40b      	bmi.n	802249c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022484:	4620      	mov	r0, r4
 8022486:	f00a fc9a 	bl	802cdbe <__cxa_guard_acquire>
 802248a:	b138      	cbz	r0, 802249c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802248c:	4620      	mov	r0, r4
 802248e:	f00a fca2 	bl	802cdd6 <__cxa_guard_release>
 8022492:	4a0f      	ldr	r2, [pc, #60]	; (80224d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022494:	490f      	ldr	r1, [pc, #60]	; (80224d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8022496:	4810      	ldr	r0, [pc, #64]	; (80224d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022498:	f00a fc8a 	bl	802cdb0 <__aeabi_atexit>
 802249c:	4c0f      	ldr	r4, [pc, #60]	; (80224dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802249e:	7823      	ldrb	r3, [r4, #0]
 80224a0:	f3bf 8f5b 	dmb	ish
 80224a4:	07db      	lsls	r3, r3, #31
 80224a6:	d40b      	bmi.n	80224c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80224a8:	4620      	mov	r0, r4
 80224aa:	f00a fc88 	bl	802cdbe <__cxa_guard_acquire>
 80224ae:	b138      	cbz	r0, 80224c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80224b0:	4620      	mov	r0, r4
 80224b2:	f00a fc90 	bl	802cdd6 <__cxa_guard_release>
 80224b6:	4a06      	ldr	r2, [pc, #24]	; (80224d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80224b8:	4909      	ldr	r1, [pc, #36]	; (80224e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80224ba:	480a      	ldr	r0, [pc, #40]	; (80224e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80224bc:	f00a fc78 	bl	802cdb0 <__aeabi_atexit>
 80224c0:	4b05      	ldr	r3, [pc, #20]	; (80224d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80224c2:	672b      	str	r3, [r5, #112]	; 0x70
 80224c4:	4b07      	ldr	r3, [pc, #28]	; (80224e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80224c6:	676b      	str	r3, [r5, #116]	; 0x74
 80224c8:	bd38      	pop	{r3, r4, r5, pc}
 80224ca:	bf00      	nop
 80224cc:	200138fc 	.word	0x200138fc
 80224d0:	20000000 	.word	0x20000000
 80224d4:	0801ec67 	.word	0x0801ec67
 80224d8:	200000a0 	.word	0x200000a0
 80224dc:	20013900 	.word	0x20013900
 80224e0:	0801ec65 	.word	0x0801ec65
 80224e4:	200000a4 	.word	0x200000a4

080224e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80224e8:	b538      	push	{r3, r4, r5, lr}
 80224ea:	4c15      	ldr	r4, [pc, #84]	; (8022540 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80224ec:	7823      	ldrb	r3, [r4, #0]
 80224ee:	f3bf 8f5b 	dmb	ish
 80224f2:	07da      	lsls	r2, r3, #31
 80224f4:	4605      	mov	r5, r0
 80224f6:	d40b      	bmi.n	8022510 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80224f8:	4620      	mov	r0, r4
 80224fa:	f00a fc60 	bl	802cdbe <__cxa_guard_acquire>
 80224fe:	b138      	cbz	r0, 8022510 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022500:	4620      	mov	r0, r4
 8022502:	f00a fc68 	bl	802cdd6 <__cxa_guard_release>
 8022506:	4a0f      	ldr	r2, [pc, #60]	; (8022544 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022508:	490f      	ldr	r1, [pc, #60]	; (8022548 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 802250a:	4810      	ldr	r0, [pc, #64]	; (802254c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 802250c:	f00a fc50 	bl	802cdb0 <__aeabi_atexit>
 8022510:	4c0f      	ldr	r4, [pc, #60]	; (8022550 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8022512:	7823      	ldrb	r3, [r4, #0]
 8022514:	f3bf 8f5b 	dmb	ish
 8022518:	07db      	lsls	r3, r3, #31
 802251a:	d40b      	bmi.n	8022534 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 802251c:	4620      	mov	r0, r4
 802251e:	f00a fc4e 	bl	802cdbe <__cxa_guard_acquire>
 8022522:	b138      	cbz	r0, 8022534 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022524:	4620      	mov	r0, r4
 8022526:	f00a fc56 	bl	802cdd6 <__cxa_guard_release>
 802252a:	4a06      	ldr	r2, [pc, #24]	; (8022544 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 802252c:	4909      	ldr	r1, [pc, #36]	; (8022554 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 802252e:	480a      	ldr	r0, [pc, #40]	; (8022558 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8022530:	f00a fc3e 	bl	802cdb0 <__aeabi_atexit>
 8022534:	4b05      	ldr	r3, [pc, #20]	; (802254c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8022536:	66ab      	str	r3, [r5, #104]	; 0x68
 8022538:	4b07      	ldr	r3, [pc, #28]	; (8022558 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802253a:	66eb      	str	r3, [r5, #108]	; 0x6c
 802253c:	bd38      	pop	{r3, r4, r5, pc}
 802253e:	bf00      	nop
 8022540:	200138f4 	.word	0x200138f4
 8022544:	20000000 	.word	0x20000000
 8022548:	0801ec6b 	.word	0x0801ec6b
 802254c:	20000098 	.word	0x20000098
 8022550:	200138f8 	.word	0x200138f8
 8022554:	0801ec69 	.word	0x0801ec69
 8022558:	2000009c 	.word	0x2000009c

0802255c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802255c:	b510      	push	{r4, lr}
 802255e:	4604      	mov	r4, r0
 8022560:	f7ff ff88 	bl	8022474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8022564:	4620      	mov	r0, r4
 8022566:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802256a:	f7ff bfbd 	b.w	80224e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802256e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802256e:	b510      	push	{r4, lr}
 8022570:	4604      	mov	r4, r0
 8022572:	f7ff fff3 	bl	802255c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8022576:	4620      	mov	r0, r4
 8022578:	f7ff ff72 	bl	8022460 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802257c:	4620      	mov	r0, r4
 802257e:	f7ff fdf9 	bl	8022174 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8022582:	4620      	mov	r0, r4
 8022584:	f7ff fcfa 	bl	8021f7c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8022588:	4620      	mov	r0, r4
 802258a:	f7ff fd75 	bl	8022078 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802258e:	4620      	mov	r0, r4
 8022590:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022594:	f7ff bee0 	b.w	8022358 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08022598 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8022598:	b538      	push	{r3, r4, r5, lr}
 802259a:	4c0b      	ldr	r4, [pc, #44]	; (80225c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802259c:	7823      	ldrb	r3, [r4, #0]
 802259e:	f3bf 8f5b 	dmb	ish
 80225a2:	07db      	lsls	r3, r3, #31
 80225a4:	4605      	mov	r5, r0
 80225a6:	d40b      	bmi.n	80225c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80225a8:	4620      	mov	r0, r4
 80225aa:	f00a fc08 	bl	802cdbe <__cxa_guard_acquire>
 80225ae:	b138      	cbz	r0, 80225c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80225b0:	4620      	mov	r0, r4
 80225b2:	f00a fc10 	bl	802cdd6 <__cxa_guard_release>
 80225b6:	4a05      	ldr	r2, [pc, #20]	; (80225cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80225b8:	4905      	ldr	r1, [pc, #20]	; (80225d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80225ba:	4806      	ldr	r0, [pc, #24]	; (80225d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80225bc:	f00a fbf8 	bl	802cdb0 <__aeabi_atexit>
 80225c0:	4b04      	ldr	r3, [pc, #16]	; (80225d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80225c2:	67ab      	str	r3, [r5, #120]	; 0x78
 80225c4:	bd38      	pop	{r3, r4, r5, pc}
 80225c6:	bf00      	nop
 80225c8:	200138e8 	.word	0x200138e8
 80225cc:	20000000 	.word	0x20000000
 80225d0:	0801ec63 	.word	0x0801ec63
 80225d4:	20000090 	.word	0x20000090

080225d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 80225d8:	b538      	push	{r3, r4, r5, lr}
 80225da:	4c0b      	ldr	r4, [pc, #44]	; (8022608 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 80225dc:	7823      	ldrb	r3, [r4, #0]
 80225de:	f3bf 8f5b 	dmb	ish
 80225e2:	07db      	lsls	r3, r3, #31
 80225e4:	4605      	mov	r5, r0
 80225e6:	d40b      	bmi.n	8022600 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80225e8:	4620      	mov	r0, r4
 80225ea:	f00a fbe8 	bl	802cdbe <__cxa_guard_acquire>
 80225ee:	b138      	cbz	r0, 8022600 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80225f0:	4620      	mov	r0, r4
 80225f2:	f00a fbf0 	bl	802cdd6 <__cxa_guard_release>
 80225f6:	4a05      	ldr	r2, [pc, #20]	; (802260c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80225f8:	4905      	ldr	r1, [pc, #20]	; (8022610 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80225fa:	4806      	ldr	r0, [pc, #24]	; (8022614 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80225fc:	f00a fbd8 	bl	802cdb0 <__aeabi_atexit>
 8022600:	4b04      	ldr	r3, [pc, #16]	; (8022614 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8022602:	67eb      	str	r3, [r5, #124]	; 0x7c
 8022604:	bd38      	pop	{r3, r4, r5, pc}
 8022606:	bf00      	nop
 8022608:	200138ec 	.word	0x200138ec
 802260c:	20000000 	.word	0x20000000
 8022610:	0801ec61 	.word	0x0801ec61
 8022614:	20000094 	.word	0x20000094

08022618 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8022618:	b570      	push	{r4, r5, r6, lr}
 802261a:	4d0d      	ldr	r5, [pc, #52]	; (8022650 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 802261c:	4c0d      	ldr	r4, [pc, #52]	; (8022654 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 802261e:	782b      	ldrb	r3, [r5, #0]
 8022620:	f3bf 8f5b 	dmb	ish
 8022624:	f013 0f01 	tst.w	r3, #1
 8022628:	4606      	mov	r6, r0
 802262a:	d10d      	bne.n	8022648 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 802262c:	4628      	mov	r0, r5
 802262e:	f00a fbc6 	bl	802cdbe <__cxa_guard_acquire>
 8022632:	b148      	cbz	r0, 8022648 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8022634:	4b08      	ldr	r3, [pc, #32]	; (8022658 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8022636:	6023      	str	r3, [r4, #0]
 8022638:	4628      	mov	r0, r5
 802263a:	f00a fbcc 	bl	802cdd6 <__cxa_guard_release>
 802263e:	4a07      	ldr	r2, [pc, #28]	; (802265c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8022640:	4907      	ldr	r1, [pc, #28]	; (8022660 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8022642:	4620      	mov	r0, r4
 8022644:	f00a fbb4 	bl	802cdb0 <__aeabi_atexit>
 8022648:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 802264c:	bd70      	pop	{r4, r5, r6, pc}
 802264e:	bf00      	nop
 8022650:	200138f0 	.word	0x200138f0
 8022654:	20013964 	.word	0x20013964
 8022658:	08032178 	.word	0x08032178
 802265c:	20000000 	.word	0x20000000
 8022660:	0801ec5f 	.word	0x0801ec5f

08022664 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8022664:	b510      	push	{r4, lr}
 8022666:	4604      	mov	r4, r0
 8022668:	f7ff ff96 	bl	8022598 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802266c:	4620      	mov	r0, r4
 802266e:	f7ff ffb3 	bl	80225d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8022672:	4620      	mov	r0, r4
 8022674:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022678:	f7ff bfce 	b.w	8022618 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802267c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802267c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022680:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8022684:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8022688:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802268c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8022690:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8022694:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8022698:	8808      	ldrh	r0, [r1, #0]
 802269a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802269e:	2d00      	cmp	r5, #0
 80226a0:	eb02 0a0c 	add.w	sl, r2, ip
 80226a4:	f2c0 80b0 	blt.w	8022808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80226a8:	45ab      	cmp	fp, r5
 80226aa:	f340 80ad 	ble.w	8022808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80226ae:	2c00      	cmp	r4, #0
 80226b0:	f2c0 80a8 	blt.w	8022804 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80226b4:	45a6      	cmp	lr, r4
 80226b6:	f340 80a5 	ble.w	8022804 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80226ba:	f812 200c 	ldrb.w	r2, [r2, ip]
 80226be:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80226c2:	1c62      	adds	r2, r4, #1
 80226c4:	f100 80a3 	bmi.w	802280e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80226c8:	4596      	cmp	lr, r2
 80226ca:	f340 80a0 	ble.w	802280e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80226ce:	f1b9 0f00 	cmp.w	r9, #0
 80226d2:	f000 809c 	beq.w	802280e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80226d6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80226da:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80226de:	3501      	adds	r5, #1
 80226e0:	f100 8099 	bmi.w	8022816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80226e4:	45ab      	cmp	fp, r5
 80226e6:	f340 8096 	ble.w	8022816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80226ea:	2f00      	cmp	r7, #0
 80226ec:	f000 8093 	beq.w	8022816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80226f0:	2c00      	cmp	r4, #0
 80226f2:	f2c0 808e 	blt.w	8022812 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80226f6:	45a6      	cmp	lr, r4
 80226f8:	f340 808b 	ble.w	8022812 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80226fc:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8022700:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8022704:	3401      	adds	r4, #1
 8022706:	f100 8089 	bmi.w	802281c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 802270a:	45a6      	cmp	lr, r4
 802270c:	f340 8086 	ble.w	802281c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022710:	f1b9 0f00 	cmp.w	r9, #0
 8022714:	f000 8082 	beq.w	802281c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022718:	44d6      	add	lr, sl
 802271a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802271e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8022722:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022726:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802272a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802272e:	fb19 fe07 	smulbb	lr, r9, r7
 8022732:	ea44 0808 	orr.w	r8, r4, r8
 8022736:	ea4f 440c 	mov.w	r4, ip, lsl #16
 802273a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802273e:	f1c7 0210 	rsb	r2, r7, #16
 8022742:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022746:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802274a:	ea44 0c0c 	orr.w	ip, r4, ip
 802274e:	eba2 0209 	sub.w	r2, r2, r9
 8022752:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022756:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802275a:	fb04 f40c 	mul.w	r4, r4, ip
 802275e:	fb02 4808 	mla	r8, r2, r8, r4
 8022762:	041a      	lsls	r2, r3, #16
 8022764:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022768:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802276c:	4313      	orrs	r3, r2
 802276e:	042a      	lsls	r2, r5, #16
 8022770:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022774:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022778:	fb0e 8303 	mla	r3, lr, r3, r8
 802277c:	432a      	orrs	r2, r5
 802277e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022782:	fb07 3202 	mla	r2, r7, r2, r3
 8022786:	0d53      	lsrs	r3, r2, #21
 8022788:	0952      	lsrs	r2, r2, #5
 802278a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802278e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022792:	431a      	orrs	r2, r3
 8022794:	b293      	uxth	r3, r2
 8022796:	b2b4      	uxth	r4, r6
 8022798:	1202      	asrs	r2, r0, #8
 802279a:	43f6      	mvns	r6, r6
 802279c:	b2f6      	uxtb	r6, r6
 802279e:	121d      	asrs	r5, r3, #8
 80227a0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80227a4:	fb12 f206 	smulbb	r2, r2, r6
 80227a8:	10c7      	asrs	r7, r0, #3
 80227aa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80227ae:	00c0      	lsls	r0, r0, #3
 80227b0:	fb05 2504 	mla	r5, r5, r4, r2
 80227b4:	b2c0      	uxtb	r0, r0
 80227b6:	10da      	asrs	r2, r3, #3
 80227b8:	00db      	lsls	r3, r3, #3
 80227ba:	b2db      	uxtb	r3, r3
 80227bc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80227c0:	fb10 f006 	smulbb	r0, r0, r6
 80227c4:	b2ad      	uxth	r5, r5
 80227c6:	fb03 0004 	mla	r0, r3, r4, r0
 80227ca:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80227ce:	fb17 f706 	smulbb	r7, r7, r6
 80227d2:	b280      	uxth	r0, r0
 80227d4:	1c6b      	adds	r3, r5, #1
 80227d6:	fb02 7204 	mla	r2, r2, r4, r7
 80227da:	b292      	uxth	r2, r2
 80227dc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80227e0:	1c43      	adds	r3, r0, #1
 80227e2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80227e6:	1c50      	adds	r0, r2, #1
 80227e8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80227ec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80227f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80227f4:	0952      	lsrs	r2, r2, #5
 80227f6:	432b      	orrs	r3, r5
 80227f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80227fc:	4313      	orrs	r3, r2
 80227fe:	800b      	strh	r3, [r1, #0]
 8022800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022804:	4680      	mov	r8, r0
 8022806:	e75c      	b.n	80226c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8022808:	4684      	mov	ip, r0
 802280a:	4680      	mov	r8, r0
 802280c:	e767      	b.n	80226de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802280e:	4684      	mov	ip, r0
 8022810:	e765      	b.n	80226de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8022812:	4605      	mov	r5, r0
 8022814:	e776      	b.n	8022704 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8022816:	4603      	mov	r3, r0
 8022818:	4605      	mov	r5, r0
 802281a:	e782      	b.n	8022722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 802281c:	4603      	mov	r3, r0
 802281e:	e780      	b.n	8022722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08022820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022824:	b099      	sub	sp, #100	; 0x64
 8022826:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 802282a:	9215      	str	r2, [sp, #84]	; 0x54
 802282c:	9309      	str	r3, [sp, #36]	; 0x24
 802282e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8022830:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8022834:	930d      	str	r3, [sp, #52]	; 0x34
 8022836:	910c      	str	r1, [sp, #48]	; 0x30
 8022838:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 802283c:	9016      	str	r0, [sp, #88]	; 0x58
 802283e:	6850      	ldr	r0, [r2, #4]
 8022840:	6812      	ldr	r2, [r2, #0]
 8022842:	fb00 1303 	mla	r3, r0, r3, r1
 8022846:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 802284a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802284c:	681b      	ldr	r3, [r3, #0]
 802284e:	930b      	str	r3, [sp, #44]	; 0x2c
 8022850:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022852:	685e      	ldr	r6, [r3, #4]
 8022854:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022856:	43db      	mvns	r3, r3
 8022858:	b2db      	uxtb	r3, r3
 802285a:	3604      	adds	r6, #4
 802285c:	930a      	str	r3, [sp, #40]	; 0x28
 802285e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022860:	2b00      	cmp	r3, #0
 8022862:	dc03      	bgt.n	802286c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022864:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022866:	2b00      	cmp	r3, #0
 8022868:	f340 8225 	ble.w	8022cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802286c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802286e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022872:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022876:	1e48      	subs	r0, r1, #1
 8022878:	1e57      	subs	r7, r2, #1
 802287a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802287c:	2b00      	cmp	r3, #0
 802287e:	f340 80e3 	ble.w	8022a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8022882:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8022886:	ea4f 4325 	mov.w	r3, r5, asr #16
 802288a:	d406      	bmi.n	802289a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802288c:	4584      	cmp	ip, r0
 802288e:	da04      	bge.n	802289a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022890:	2b00      	cmp	r3, #0
 8022892:	db02      	blt.n	802289a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022894:	42bb      	cmp	r3, r7
 8022896:	f2c0 80d8 	blt.w	8022a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802289a:	f11c 0c01 	adds.w	ip, ip, #1
 802289e:	f100 80c9 	bmi.w	8022a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80228a2:	4561      	cmp	r1, ip
 80228a4:	f2c0 80c6 	blt.w	8022a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80228a8:	3301      	adds	r3, #1
 80228aa:	f100 80c3 	bmi.w	8022a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80228ae:	429a      	cmp	r2, r3
 80228b0:	f2c0 80c0 	blt.w	8022a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80228b4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80228b8:	4647      	mov	r7, r8
 80228ba:	f1bb 0f00 	cmp.w	fp, #0
 80228be:	f340 80e3 	ble.w	8022a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80228c2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80228c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80228c6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80228ca:	689b      	ldr	r3, [r3, #8]
 80228cc:	ea5f 422a 	movs.w	r2, sl, asr #16
 80228d0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80228d4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80228d8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80228dc:	f100 8121 	bmi.w	8022b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80228e0:	f103 39ff 	add.w	r9, r3, #4294967295
 80228e4:	454a      	cmp	r2, r9
 80228e6:	f280 811c 	bge.w	8022b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80228ea:	f1bc 0f00 	cmp.w	ip, #0
 80228ee:	f2c0 8118 	blt.w	8022b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80228f2:	f10e 39ff 	add.w	r9, lr, #4294967295
 80228f6:	45cc      	cmp	ip, r9
 80228f8:	f280 8113 	bge.w	8022b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80228fc:	b21b      	sxth	r3, r3
 80228fe:	fb0c 2203 	mla	r2, ip, r3, r2
 8022902:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022904:	eb04 0902 	add.w	r9, r4, r2
 8022908:	5ca2      	ldrb	r2, [r4, r2]
 802290a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 802290e:	2800      	cmp	r0, #0
 8022910:	f000 80fe 	beq.w	8022b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022914:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022918:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802291c:	9211      	str	r2, [sp, #68]	; 0x44
 802291e:	b151      	cbz	r1, 8022936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022920:	eb09 0203 	add.w	r2, r9, r3
 8022924:	f819 3003 	ldrb.w	r3, [r9, r3]
 8022928:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802292c:	930f      	str	r3, [sp, #60]	; 0x3c
 802292e:	7853      	ldrb	r3, [r2, #1]
 8022930:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022934:	9312      	str	r3, [sp, #72]	; 0x48
 8022936:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022938:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802293a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802293e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022942:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022946:	ea4c 0c03 	orr.w	ip, ip, r3
 802294a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802294c:	041b      	lsls	r3, r3, #16
 802294e:	fb10 f201 	smulbb	r2, r0, r1
 8022952:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022956:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802295a:	10d2      	asrs	r2, r2, #3
 802295c:	4323      	orrs	r3, r4
 802295e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8022962:	4353      	muls	r3, r2
 8022964:	fb09 330c 	mla	r3, r9, ip, r3
 8022968:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802296c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022970:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022974:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022978:	f1c1 0c10 	rsb	ip, r1, #16
 802297c:	ebac 0c00 	sub.w	ip, ip, r0
 8022980:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022984:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022988:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802298a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802298c:	0418      	lsls	r0, r3, #16
 802298e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022992:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022996:	4318      	orrs	r0, r3
 8022998:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802299c:	fb02 c200 	mla	r2, r2, r0, ip
 80229a0:	0d53      	lsrs	r3, r2, #21
 80229a2:	0952      	lsrs	r2, r2, #5
 80229a4:	8838      	ldrh	r0, [r7, #0]
 80229a6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80229aa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80229ae:	431a      	orrs	r2, r3
 80229b0:	b292      	uxth	r2, r2
 80229b2:	1201      	asrs	r1, r0, #8
 80229b4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80229b8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80229bc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80229c0:	fb11 f104 	smulbb	r1, r1, r4
 80229c4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80229c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80229cc:	00c0      	lsls	r0, r0, #3
 80229ce:	fb0c 1c03 	mla	ip, ip, r3, r1
 80229d2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80229d6:	10d1      	asrs	r1, r2, #3
 80229d8:	b2c0      	uxtb	r0, r0
 80229da:	00d2      	lsls	r2, r2, #3
 80229dc:	b2d2      	uxtb	r2, r2
 80229de:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80229e2:	fb1e fe04 	smulbb	lr, lr, r4
 80229e6:	fb10 f004 	smulbb	r0, r0, r4
 80229ea:	fa1f fc8c 	uxth.w	ip, ip
 80229ee:	fb01 e103 	mla	r1, r1, r3, lr
 80229f2:	fb02 0303 	mla	r3, r2, r3, r0
 80229f6:	b29a      	uxth	r2, r3
 80229f8:	f10c 0301 	add.w	r3, ip, #1
 80229fc:	b289      	uxth	r1, r1
 80229fe:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022a02:	1c53      	adds	r3, r2, #1
 8022a04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022a08:	1c4a      	adds	r2, r1, #1
 8022a0a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022a0e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022a12:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022a16:	0949      	lsrs	r1, r1, #5
 8022a18:	ea43 030c 	orr.w	r3, r3, ip
 8022a1c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022a20:	430b      	orrs	r3, r1
 8022a22:	803b      	strh	r3, [r7, #0]
 8022a24:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022a26:	449a      	add	sl, r3
 8022a28:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022a2a:	3702      	adds	r7, #2
 8022a2c:	441d      	add	r5, r3
 8022a2e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022a32:	e742      	b.n	80228ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022a34:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022a36:	449a      	add	sl, r3
 8022a38:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022a3a:	441d      	add	r5, r3
 8022a3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022a3e:	3b01      	subs	r3, #1
 8022a40:	9309      	str	r3, [sp, #36]	; 0x24
 8022a42:	f108 0802 	add.w	r8, r8, #2
 8022a46:	e718      	b.n	802287a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8022a48:	d023      	beq.n	8022a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8022a4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022a4c:	9825      	ldr	r0, [sp, #148]	; 0x94
 8022a4e:	3b01      	subs	r3, #1
 8022a50:	fb00 a003 	mla	r0, r0, r3, sl
 8022a54:	1400      	asrs	r0, r0, #16
 8022a56:	f53f af2d 	bmi.w	80228b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022a5a:	3901      	subs	r1, #1
 8022a5c:	4288      	cmp	r0, r1
 8022a5e:	f6bf af29 	bge.w	80228b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022a62:	9926      	ldr	r1, [sp, #152]	; 0x98
 8022a64:	fb01 5303 	mla	r3, r1, r3, r5
 8022a68:	141b      	asrs	r3, r3, #16
 8022a6a:	f53f af23 	bmi.w	80228b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022a6e:	3a01      	subs	r2, #1
 8022a70:	4293      	cmp	r3, r2
 8022a72:	f6bf af1f 	bge.w	80228b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022a76:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022a7a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8022a7e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8022a82:	f1be 0f00 	cmp.w	lr, #0
 8022a86:	dc6c      	bgt.n	8022b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022a88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022a8a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022a8e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8022a92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022a94:	2b00      	cmp	r3, #0
 8022a96:	f340 810e 	ble.w	8022cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8022a9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022a9e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022aa2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022aa6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022aa8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022aac:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022ab0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022ab4:	eef0 6a62 	vmov.f32	s13, s5
 8022ab8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022abc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ac0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022ac4:	ee16 aa90 	vmov	sl, s13
 8022ac8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022acc:	eef0 6a43 	vmov.f32	s13, s6
 8022ad0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022ad4:	ee12 2a90 	vmov	r2, s5
 8022ad8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022adc:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ae0:	ee13 2a10 	vmov	r2, s6
 8022ae4:	9325      	str	r3, [sp, #148]	; 0x94
 8022ae6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022ae8:	fb92 f3f3 	sdiv	r3, r2, r3
 8022aec:	9326      	str	r3, [sp, #152]	; 0x98
 8022aee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022af0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8022af2:	3b01      	subs	r3, #1
 8022af4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022af8:	930c      	str	r3, [sp, #48]	; 0x30
 8022afa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022afc:	bf08      	it	eq
 8022afe:	4613      	moveq	r3, r2
 8022b00:	ee16 5a90 	vmov	r5, s13
 8022b04:	9309      	str	r3, [sp, #36]	; 0x24
 8022b06:	eeb0 3a67 	vmov.f32	s6, s15
 8022b0a:	eef0 2a47 	vmov.f32	s5, s14
 8022b0e:	e6a6      	b.n	802285e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022b10:	2900      	cmp	r1, #0
 8022b12:	f43f af10 	beq.w	8022936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022b16:	f819 3003 	ldrb.w	r3, [r9, r3]
 8022b1a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022b1e:	930f      	str	r3, [sp, #60]	; 0x3c
 8022b20:	e709      	b.n	8022936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022b22:	f112 0901 	adds.w	r9, r2, #1
 8022b26:	f53f af7d 	bmi.w	8022a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022b2a:	454b      	cmp	r3, r9
 8022b2c:	f6ff af7a 	blt.w	8022a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022b30:	f11c 0901 	adds.w	r9, ip, #1
 8022b34:	f53f af76 	bmi.w	8022a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022b38:	45ce      	cmp	lr, r9
 8022b3a:	f6ff af73 	blt.w	8022a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022b3e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022b40:	9202      	str	r2, [sp, #8]
 8022b42:	b21b      	sxth	r3, r3
 8022b44:	fa0f f28e 	sxth.w	r2, lr
 8022b48:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022b4c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8022b50:	9201      	str	r2, [sp, #4]
 8022b52:	9300      	str	r3, [sp, #0]
 8022b54:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022b56:	9816      	ldr	r0, [sp, #88]	; 0x58
 8022b58:	4633      	mov	r3, r6
 8022b5a:	4639      	mov	r1, r7
 8022b5c:	f7ff fd8e 	bl	802267c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8022b60:	e760      	b.n	8022a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022b62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022b64:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022b66:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022b6a:	ea4f 422a 	mov.w	r2, sl, asr #16
 8022b6e:	1429      	asrs	r1, r5, #16
 8022b70:	fb03 2101 	mla	r1, r3, r1, r2
 8022b74:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022b76:	440a      	add	r2, r1
 8022b78:	5c61      	ldrb	r1, [r4, r1]
 8022b7a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8022b7e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022b82:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8022b86:	f1bc 0f00 	cmp.w	ip, #0
 8022b8a:	f000 808c 	beq.w	8022ca6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8022b8e:	7857      	ldrb	r7, [r2, #1]
 8022b90:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8022b94:	9413      	str	r4, [sp, #76]	; 0x4c
 8022b96:	b140      	cbz	r0, 8022baa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b98:	18d7      	adds	r7, r2, r3
 8022b9a:	5cd3      	ldrb	r3, [r2, r3]
 8022b9c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022ba0:	9310      	str	r3, [sp, #64]	; 0x40
 8022ba2:	787b      	ldrb	r3, [r7, #1]
 8022ba4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022ba8:	9314      	str	r3, [sp, #80]	; 0x50
 8022baa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022bac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022bae:	fb1c f200 	smulbb	r2, ip, r0
 8022bb2:	041f      	lsls	r7, r3, #16
 8022bb4:	10d2      	asrs	r2, r2, #3
 8022bb6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022bba:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8022bbe:	431f      	orrs	r7, r3
 8022bc0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8022bc4:	9317      	str	r3, [sp, #92]	; 0x5c
 8022bc6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022bc8:	041b      	lsls	r3, r3, #16
 8022bca:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8022bce:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022bd2:	ea43 030b 	orr.w	r3, r3, fp
 8022bd6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022bd8:	4353      	muls	r3, r2
 8022bda:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022bde:	fb04 3707 	mla	r7, r4, r7, r3
 8022be2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022be6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022bea:	ea43 0b01 	orr.w	fp, r3, r1
 8022bee:	f1c0 0110 	rsb	r1, r0, #16
 8022bf2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022bf4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022bf6:	eba1 0c0c 	sub.w	ip, r1, ip
 8022bfa:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022bfe:	fb0c 770b 	mla	r7, ip, fp, r7
 8022c02:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022c06:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8022c0a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022c0e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022c12:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022c16:	fb02 770c 	mla	r7, r2, ip, r7
 8022c1a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022c1c:	0d79      	lsrs	r1, r7, #21
 8022c1e:	097f      	lsrs	r7, r7, #5
 8022c20:	8812      	ldrh	r2, [r2, #0]
 8022c22:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c26:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022c2a:	430f      	orrs	r7, r1
 8022c2c:	b2bb      	uxth	r3, r7
 8022c2e:	1211      	asrs	r1, r2, #8
 8022c30:	1218      	asrs	r0, r3, #8
 8022c32:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022c36:	fb11 f104 	smulbb	r1, r1, r4
 8022c3a:	10d7      	asrs	r7, r2, #3
 8022c3c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022c40:	00d2      	lsls	r2, r2, #3
 8022c42:	fb00 1009 	mla	r0, r0, r9, r1
 8022c46:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022c4a:	10d9      	asrs	r1, r3, #3
 8022c4c:	b2d2      	uxtb	r2, r2
 8022c4e:	00db      	lsls	r3, r3, #3
 8022c50:	fb17 f704 	smulbb	r7, r7, r4
 8022c54:	fb12 f204 	smulbb	r2, r2, r4
 8022c58:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022c5c:	b2db      	uxtb	r3, r3
 8022c5e:	b280      	uxth	r0, r0
 8022c60:	fb01 7109 	mla	r1, r1, r9, r7
 8022c64:	fb03 2309 	mla	r3, r3, r9, r2
 8022c68:	b29b      	uxth	r3, r3
 8022c6a:	b289      	uxth	r1, r1
 8022c6c:	1c42      	adds	r2, r0, #1
 8022c6e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022c72:	1c4f      	adds	r7, r1, #1
 8022c74:	1c5a      	adds	r2, r3, #1
 8022c76:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022c7a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022c7e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022c82:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022c86:	0949      	lsrs	r1, r1, #5
 8022c88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022c8a:	4310      	orrs	r0, r2
 8022c8c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c90:	4308      	orrs	r0, r1
 8022c92:	f823 0b02 	strh.w	r0, [r3], #2
 8022c96:	930e      	str	r3, [sp, #56]	; 0x38
 8022c98:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022c9a:	449a      	add	sl, r3
 8022c9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022c9e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8022ca2:	441d      	add	r5, r3
 8022ca4:	e6ed      	b.n	8022a82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8022ca6:	2800      	cmp	r0, #0
 8022ca8:	f43f af7f 	beq.w	8022baa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022cac:	5cd3      	ldrb	r3, [r2, r3]
 8022cae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022cb2:	9310      	str	r3, [sp, #64]	; 0x40
 8022cb4:	e779      	b.n	8022baa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022cb6:	b019      	add	sp, #100	; 0x64
 8022cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022cbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022cbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022cc0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8022cc4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8022cc8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8022ccc:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8022cd0:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022cd4:	8808      	ldrh	r0, [r1, #0]
 8022cd6:	fb08 470e 	mla	r7, r8, lr, r4
 8022cda:	f1b8 0f00 	cmp.w	r8, #0
 8022cde:	eb02 0907 	add.w	r9, r2, r7
 8022ce2:	db67      	blt.n	8022db4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022ce4:	45c2      	cmp	sl, r8
 8022ce6:	dd65      	ble.n	8022db4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022ce8:	2c00      	cmp	r4, #0
 8022cea:	db61      	blt.n	8022db0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022cec:	45a6      	cmp	lr, r4
 8022cee:	dd5f      	ble.n	8022db0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022cf0:	5dd2      	ldrb	r2, [r2, r7]
 8022cf2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022cf6:	1c62      	adds	r2, r4, #1
 8022cf8:	d45f      	bmi.n	8022dba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022cfa:	4596      	cmp	lr, r2
 8022cfc:	dd5d      	ble.n	8022dba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022cfe:	2d00      	cmp	r5, #0
 8022d00:	d05b      	beq.n	8022dba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022d02:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022d06:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8022d0a:	f118 0801 	adds.w	r8, r8, #1
 8022d0e:	d458      	bmi.n	8022dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022d10:	45c2      	cmp	sl, r8
 8022d12:	dd56      	ble.n	8022dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022d14:	2e00      	cmp	r6, #0
 8022d16:	d054      	beq.n	8022dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022d18:	2c00      	cmp	r4, #0
 8022d1a:	db50      	blt.n	8022dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022d1c:	45a6      	cmp	lr, r4
 8022d1e:	dd4e      	ble.n	8022dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022d20:	f819 200e 	ldrb.w	r2, [r9, lr]
 8022d24:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8022d28:	3401      	adds	r4, #1
 8022d2a:	d407      	bmi.n	8022d3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022d2c:	45a6      	cmp	lr, r4
 8022d2e:	dd05      	ble.n	8022d3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022d30:	b125      	cbz	r5, 8022d3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022d32:	44ce      	add	lr, r9
 8022d34:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8022d38:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8022d3c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022d40:	fb15 f406 	smulbb	r4, r5, r6
 8022d44:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d48:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022d4c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022d50:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022d54:	ea43 0c0c 	orr.w	ip, r3, ip
 8022d58:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022d5c:	f1c6 0310 	rsb	r3, r6, #16
 8022d60:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022d64:	1b5b      	subs	r3, r3, r5
 8022d66:	ea4e 0707 	orr.w	r7, lr, r7
 8022d6a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022d6e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022d72:	437d      	muls	r5, r7
 8022d74:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022d78:	0403      	lsls	r3, r0, #16
 8022d7a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d7e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d82:	4318      	orrs	r0, r3
 8022d84:	0413      	lsls	r3, r2, #16
 8022d86:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d8a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d8e:	4313      	orrs	r3, r2
 8022d90:	fb04 c000 	mla	r0, r4, r0, ip
 8022d94:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022d98:	fb06 0003 	mla	r0, r6, r3, r0
 8022d9c:	0d43      	lsrs	r3, r0, #21
 8022d9e:	0940      	lsrs	r0, r0, #5
 8022da0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022da4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022da8:	4318      	orrs	r0, r3
 8022daa:	8008      	strh	r0, [r1, #0]
 8022dac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022db0:	4684      	mov	ip, r0
 8022db2:	e7a0      	b.n	8022cf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8022db4:	4607      	mov	r7, r0
 8022db6:	4684      	mov	ip, r0
 8022db8:	e7a7      	b.n	8022d0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022dba:	4607      	mov	r7, r0
 8022dbc:	e7a5      	b.n	8022d0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022dbe:	4602      	mov	r2, r0
 8022dc0:	e7b2      	b.n	8022d28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8022dc2:	4602      	mov	r2, r0
 8022dc4:	e7ba      	b.n	8022d3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08022dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022dc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022dca:	b093      	sub	sp, #76	; 0x4c
 8022dcc:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022dd0:	920f      	str	r2, [sp, #60]	; 0x3c
 8022dd2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022dd4:	9108      	str	r1, [sp, #32]
 8022dd6:	9306      	str	r3, [sp, #24]
 8022dd8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022ddc:	9010      	str	r0, [sp, #64]	; 0x40
 8022dde:	6850      	ldr	r0, [r2, #4]
 8022de0:	6812      	ldr	r2, [r2, #0]
 8022de2:	fb00 1303 	mla	r3, r0, r3, r1
 8022de6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022dea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022dec:	681b      	ldr	r3, [r3, #0]
 8022dee:	9307      	str	r3, [sp, #28]
 8022df0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022df2:	685f      	ldr	r7, [r3, #4]
 8022df4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022df8:	3704      	adds	r7, #4
 8022dfa:	9b08      	ldr	r3, [sp, #32]
 8022dfc:	2b00      	cmp	r3, #0
 8022dfe:	dc03      	bgt.n	8022e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022e00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022e02:	2b00      	cmp	r3, #0
 8022e04:	f340 81b2 	ble.w	802316c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022e08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022e0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022e12:	1e48      	subs	r0, r1, #1
 8022e14:	f102 3cff 	add.w	ip, r2, #4294967295
 8022e18:	9b06      	ldr	r3, [sp, #24]
 8022e1a:	2b00      	cmp	r3, #0
 8022e1c:	f340 80a9 	ble.w	8022f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8022e20:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022e24:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022e28:	d406      	bmi.n	8022e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022e2a:	4586      	cmp	lr, r0
 8022e2c:	da04      	bge.n	8022e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022e2e:	2b00      	cmp	r3, #0
 8022e30:	db02      	blt.n	8022e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022e32:	4563      	cmp	r3, ip
 8022e34:	f2c0 809e 	blt.w	8022f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022e38:	f11e 0e01 	adds.w	lr, lr, #1
 8022e3c:	f100 808f 	bmi.w	8022f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022e40:	4571      	cmp	r1, lr
 8022e42:	f2c0 808c 	blt.w	8022f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022e46:	3301      	adds	r3, #1
 8022e48:	f100 8089 	bmi.w	8022f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022e4c:	429a      	cmp	r2, r3
 8022e4e:	f2c0 8086 	blt.w	8022f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022e52:	f8dd b018 	ldr.w	fp, [sp, #24]
 8022e56:	46c8      	mov	r8, r9
 8022e58:	f1bb 0f00 	cmp.w	fp, #0
 8022e5c:	f340 80a6 	ble.w	8022fac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022e60:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8022e62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e64:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022e68:	689b      	ldr	r3, [r3, #8]
 8022e6a:	1422      	asrs	r2, r4, #16
 8022e6c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022e70:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022e74:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022e78:	f100 80e3 	bmi.w	8023042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022e7c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022e80:	4552      	cmp	r2, sl
 8022e82:	f280 80de 	bge.w	8023042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022e86:	f1bc 0f00 	cmp.w	ip, #0
 8022e8a:	f2c0 80da 	blt.w	8023042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022e8e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022e92:	45d4      	cmp	ip, sl
 8022e94:	f280 80d5 	bge.w	8023042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022e98:	b21b      	sxth	r3, r3
 8022e9a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022e9e:	9d07      	ldr	r5, [sp, #28]
 8022ea0:	eb05 0a02 	add.w	sl, r5, r2
 8022ea4:	5caa      	ldrb	r2, [r5, r2]
 8022ea6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8022eaa:	2800      	cmp	r0, #0
 8022eac:	f000 80c0 	beq.w	8023030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8022eb0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022eb4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8022eb8:	920b      	str	r2, [sp, #44]	; 0x2c
 8022eba:	b151      	cbz	r1, 8022ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022ebc:	eb0a 0203 	add.w	r2, sl, r3
 8022ec0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022ec4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022ec8:	9309      	str	r3, [sp, #36]	; 0x24
 8022eca:	7853      	ldrb	r3, [r2, #1]
 8022ecc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022ed0:	930c      	str	r3, [sp, #48]	; 0x30
 8022ed2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022ed4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022ed6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022eda:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022ede:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022ee2:	ea4c 0c03 	orr.w	ip, ip, r3
 8022ee6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022ee8:	041b      	lsls	r3, r3, #16
 8022eea:	fb10 f201 	smulbb	r2, r0, r1
 8022eee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022ef2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022ef6:	10d2      	asrs	r2, r2, #3
 8022ef8:	432b      	orrs	r3, r5
 8022efa:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8022efe:	4353      	muls	r3, r2
 8022f00:	fb0a 330c 	mla	r3, sl, ip, r3
 8022f04:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022f08:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022f0c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022f10:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022f14:	f1c1 0c10 	rsb	ip, r1, #16
 8022f18:	ebac 0c00 	sub.w	ip, ip, r0
 8022f1c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022f20:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022f24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022f26:	0418      	lsls	r0, r3, #16
 8022f28:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022f2c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022f30:	4318      	orrs	r0, r3
 8022f32:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022f36:	fb02 c200 	mla	r2, r2, r0, ip
 8022f3a:	0d53      	lsrs	r3, r2, #21
 8022f3c:	0952      	lsrs	r2, r2, #5
 8022f3e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022f42:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f46:	431a      	orrs	r2, r3
 8022f48:	f8a8 2000 	strh.w	r2, [r8]
 8022f4c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022f4e:	441c      	add	r4, r3
 8022f50:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022f52:	f108 0802 	add.w	r8, r8, #2
 8022f56:	441e      	add	r6, r3
 8022f58:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022f5c:	e77c      	b.n	8022e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022f5e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022f60:	441c      	add	r4, r3
 8022f62:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022f64:	441e      	add	r6, r3
 8022f66:	9b06      	ldr	r3, [sp, #24]
 8022f68:	3b01      	subs	r3, #1
 8022f6a:	9306      	str	r3, [sp, #24]
 8022f6c:	f109 0902 	add.w	r9, r9, #2
 8022f70:	e752      	b.n	8022e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022f72:	d020      	beq.n	8022fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022f74:	9b06      	ldr	r3, [sp, #24]
 8022f76:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022f78:	3b01      	subs	r3, #1
 8022f7a:	fb00 4003 	mla	r0, r0, r3, r4
 8022f7e:	1400      	asrs	r0, r0, #16
 8022f80:	f53f af67 	bmi.w	8022e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022f84:	3901      	subs	r1, #1
 8022f86:	4288      	cmp	r0, r1
 8022f88:	f6bf af63 	bge.w	8022e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022f8c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022f8e:	fb01 6303 	mla	r3, r1, r3, r6
 8022f92:	141b      	asrs	r3, r3, #16
 8022f94:	f53f af5d 	bmi.w	8022e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022f98:	3a01      	subs	r2, #1
 8022f9a:	4293      	cmp	r3, r2
 8022f9c:	f6bf af59 	bge.w	8022e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022fa0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8022fa4:	46ca      	mov	sl, r9
 8022fa6:	f1b8 0f00 	cmp.w	r8, #0
 8022faa:	dc67      	bgt.n	802307c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8022fac:	9b06      	ldr	r3, [sp, #24]
 8022fae:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022fb2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022fb6:	9b08      	ldr	r3, [sp, #32]
 8022fb8:	2b00      	cmp	r3, #0
 8022fba:	f340 80d7 	ble.w	802316c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022fbe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022fc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022fc6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022fca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022fcc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022fd0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022fd4:	eeb0 6a62 	vmov.f32	s12, s5
 8022fd8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022fdc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022fe0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022fe4:	ee16 4a10 	vmov	r4, s12
 8022fe8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022fec:	eeb0 6a43 	vmov.f32	s12, s6
 8022ff0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022ff4:	ee12 2a90 	vmov	r2, s5
 8022ff8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022ffc:	fb92 f3f3 	sdiv	r3, r2, r3
 8023000:	ee13 2a10 	vmov	r2, s6
 8023004:	931f      	str	r3, [sp, #124]	; 0x7c
 8023006:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023008:	fb92 f3f3 	sdiv	r3, r2, r3
 802300c:	9320      	str	r3, [sp, #128]	; 0x80
 802300e:	9b08      	ldr	r3, [sp, #32]
 8023010:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023012:	3b01      	subs	r3, #1
 8023014:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8023018:	9308      	str	r3, [sp, #32]
 802301a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802301c:	bf08      	it	eq
 802301e:	4613      	moveq	r3, r2
 8023020:	ee16 6a10 	vmov	r6, s12
 8023024:	9306      	str	r3, [sp, #24]
 8023026:	eeb0 3a67 	vmov.f32	s6, s15
 802302a:	eef0 2a47 	vmov.f32	s5, s14
 802302e:	e6e4      	b.n	8022dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8023030:	2900      	cmp	r1, #0
 8023032:	f43f af4e 	beq.w	8022ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8023036:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802303a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802303e:	9309      	str	r3, [sp, #36]	; 0x24
 8023040:	e747      	b.n	8022ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8023042:	f112 0a01 	adds.w	sl, r2, #1
 8023046:	d481      	bmi.n	8022f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023048:	4553      	cmp	r3, sl
 802304a:	f6ff af7f 	blt.w	8022f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802304e:	f11c 0a01 	adds.w	sl, ip, #1
 8023052:	f53f af7b 	bmi.w	8022f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023056:	45d6      	cmp	lr, sl
 8023058:	f6ff af78 	blt.w	8022f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802305c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8023060:	b21b      	sxth	r3, r3
 8023062:	fa0f f28e 	sxth.w	r2, lr
 8023066:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802306a:	9201      	str	r2, [sp, #4]
 802306c:	9300      	str	r3, [sp, #0]
 802306e:	9a07      	ldr	r2, [sp, #28]
 8023070:	9810      	ldr	r0, [sp, #64]	; 0x40
 8023072:	463b      	mov	r3, r7
 8023074:	4641      	mov	r1, r8
 8023076:	f7ff fe21 	bl	8022cbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802307a:	e767      	b.n	8022f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802307c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802307e:	9d07      	ldr	r5, [sp, #28]
 8023080:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023084:	1422      	asrs	r2, r4, #16
 8023086:	1431      	asrs	r1, r6, #16
 8023088:	fb03 2101 	mla	r1, r3, r1, r2
 802308c:	9a07      	ldr	r2, [sp, #28]
 802308e:	440a      	add	r2, r1
 8023090:	5c69      	ldrb	r1, [r5, r1]
 8023092:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8023096:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802309a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802309e:	f1be 0f00 	cmp.w	lr, #0
 80230a2:	d05c      	beq.n	802315e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80230a4:	f892 c001 	ldrb.w	ip, [r2, #1]
 80230a8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80230ac:	950d      	str	r5, [sp, #52]	; 0x34
 80230ae:	b150      	cbz	r0, 80230c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80230b0:	eb02 0c03 	add.w	ip, r2, r3
 80230b4:	5cd3      	ldrb	r3, [r2, r3]
 80230b6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80230ba:	930a      	str	r3, [sp, #40]	; 0x28
 80230bc:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80230c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80230c4:	930e      	str	r3, [sp, #56]	; 0x38
 80230c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80230c8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80230ca:	fb1e f200 	smulbb	r2, lr, r0
 80230ce:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80230d2:	10d2      	asrs	r2, r2, #3
 80230d4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80230d8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80230dc:	ea4c 0c03 	orr.w	ip, ip, r3
 80230e0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80230e4:	9311      	str	r3, [sp, #68]	; 0x44
 80230e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80230e8:	041b      	lsls	r3, r3, #16
 80230ea:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80230ee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80230f2:	ea43 030b 	orr.w	r3, r3, fp
 80230f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80230f8:	4353      	muls	r3, r2
 80230fa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80230fe:	fb05 3c0c 	mla	ip, r5, ip, r3
 8023102:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023106:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802310a:	ea43 0b01 	orr.w	fp, r3, r1
 802310e:	f1c0 0110 	rsb	r1, r0, #16
 8023112:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023114:	eba1 0e0e 	sub.w	lr, r1, lr
 8023118:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 802311c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8023120:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8023124:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8023128:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802312c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8023130:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8023134:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023138:	ea4f 535c 	mov.w	r3, ip, lsr #21
 802313c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023140:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023144:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023148:	ea43 0c0c 	orr.w	ip, r3, ip
 802314c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802314e:	f82a cb02 	strh.w	ip, [sl], #2
 8023152:	441c      	add	r4, r3
 8023154:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023156:	f108 38ff 	add.w	r8, r8, #4294967295
 802315a:	441e      	add	r6, r3
 802315c:	e723      	b.n	8022fa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802315e:	2800      	cmp	r0, #0
 8023160:	d0b1      	beq.n	80230c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8023162:	5cd3      	ldrb	r3, [r2, r3]
 8023164:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023168:	930a      	str	r3, [sp, #40]	; 0x28
 802316a:	e7ac      	b.n	80230c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802316c:	b013      	add	sp, #76	; 0x4c
 802316e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023172 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8023172:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023176:	880d      	ldrh	r5, [r1, #0]
 8023178:	b087      	sub	sp, #28
 802317a:	10ef      	asrs	r7, r5, #3
 802317c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8023180:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023184:	00ed      	lsls	r5, r5, #3
 8023186:	9701      	str	r7, [sp, #4]
 8023188:	b2ed      	uxtb	r5, r5
 802318a:	9502      	str	r5, [sp, #8]
 802318c:	9d01      	ldr	r5, [sp, #4]
 802318e:	9103      	str	r1, [sp, #12]
 8023190:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8023194:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8023198:	9902      	ldr	r1, [sp, #8]
 802319a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802319e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80231a2:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80231a6:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80231aa:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80231ae:	022d      	lsls	r5, r5, #8
 80231b0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80231b4:	fb06 0709 	mla	r7, r6, r9, r0
 80231b8:	430d      	orrs	r5, r1
 80231ba:	2e00      	cmp	r6, #0
 80231bc:	eb02 0c07 	add.w	ip, r2, r7
 80231c0:	9505      	str	r5, [sp, #20]
 80231c2:	f2c0 80b6 	blt.w	8023332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80231c6:	45b3      	cmp	fp, r6
 80231c8:	f340 80b3 	ble.w	8023332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80231cc:	2800      	cmp	r0, #0
 80231ce:	f2c0 80ae 	blt.w	802332e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80231d2:	4581      	cmp	r9, r0
 80231d4:	f340 80ab 	ble.w	802332e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80231d8:	5dd7      	ldrb	r7, [r2, r7]
 80231da:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80231de:	441f      	add	r7, r3
 80231e0:	1c42      	adds	r2, r0, #1
 80231e2:	f100 80a9 	bmi.w	8023338 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80231e6:	4591      	cmp	r9, r2
 80231e8:	f340 80a6 	ble.w	8023338 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80231ec:	2c00      	cmp	r4, #0
 80231ee:	f000 80a3 	beq.w	8023338 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80231f2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80231f6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80231fa:	441d      	add	r5, r3
 80231fc:	3601      	adds	r6, #1
 80231fe:	f100 809f 	bmi.w	8023340 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023202:	45b3      	cmp	fp, r6
 8023204:	f340 809c 	ble.w	8023340 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023208:	f1be 0f00 	cmp.w	lr, #0
 802320c:	f000 8098 	beq.w	8023340 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023210:	2800      	cmp	r0, #0
 8023212:	f2c0 8093 	blt.w	802333c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8023216:	4581      	cmp	r9, r0
 8023218:	f340 8090 	ble.w	802333c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802321c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8023220:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023224:	441e      	add	r6, r3
 8023226:	3001      	adds	r0, #1
 8023228:	f100 808d 	bmi.w	8023346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802322c:	4581      	cmp	r9, r0
 802322e:	f340 808a 	ble.w	8023346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8023232:	2c00      	cmp	r4, #0
 8023234:	f000 8087 	beq.w	8023346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8023238:	44e1      	add	r9, ip
 802323a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802323e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023242:	4413      	add	r3, r2
 8023244:	b2a4      	uxth	r4, r4
 8023246:	fa1f fe8e 	uxth.w	lr, lr
 802324a:	fb04 fb0e 	mul.w	fp, r4, lr
 802324e:	0124      	lsls	r4, r4, #4
 8023250:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8023254:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8023258:	eba4 040b 	sub.w	r4, r4, fp
 802325c:	fa1f f08e 	uxth.w	r0, lr
 8023260:	b2a2      	uxth	r2, r4
 8023262:	78ac      	ldrb	r4, [r5, #2]
 8023264:	f897 c002 	ldrb.w	ip, [r7, #2]
 8023268:	9901      	ldr	r1, [sp, #4]
 802326a:	eba9 0900 	sub.w	r9, r9, r0
 802326e:	fa1f f989 	uxth.w	r9, r9
 8023272:	4354      	muls	r4, r2
 8023274:	fb09 440c 	mla	r4, r9, ip, r4
 8023278:	f896 c002 	ldrb.w	ip, [r6, #2]
 802327c:	fb00 440c 	mla	r4, r0, ip, r4
 8023280:	f893 c002 	ldrb.w	ip, [r3, #2]
 8023284:	fa1f fe88 	uxth.w	lr, r8
 8023288:	ea6f 0808 	mvn.w	r8, r8
 802328c:	fa5f f888 	uxtb.w	r8, r8
 8023290:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8023294:	fb1a fa08 	smulbb	sl, sl, r8
 8023298:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802329c:	fb0c ac0e 	mla	ip, ip, lr, sl
 80232a0:	f895 a001 	ldrb.w	sl, [r5, #1]
 80232a4:	787c      	ldrb	r4, [r7, #1]
 80232a6:	782d      	ldrb	r5, [r5, #0]
 80232a8:	783f      	ldrb	r7, [r7, #0]
 80232aa:	fb02 fa0a 	mul.w	sl, r2, sl
 80232ae:	fb09 aa04 	mla	sl, r9, r4, sl
 80232b2:	7874      	ldrb	r4, [r6, #1]
 80232b4:	436a      	muls	r2, r5
 80232b6:	7835      	ldrb	r5, [r6, #0]
 80232b8:	fb00 aa04 	mla	sl, r0, r4, sl
 80232bc:	fb09 2207 	mla	r2, r9, r7, r2
 80232c0:	785c      	ldrb	r4, [r3, #1]
 80232c2:	781b      	ldrb	r3, [r3, #0]
 80232c4:	fb00 2005 	mla	r0, r0, r5, r2
 80232c8:	fb0b a404 	mla	r4, fp, r4, sl
 80232cc:	fb0b 0b03 	mla	fp, fp, r3, r0
 80232d0:	9b02      	ldr	r3, [sp, #8]
 80232d2:	fb11 fa08 	smulbb	sl, r1, r8
 80232d6:	fa1f fc8c 	uxth.w	ip, ip
 80232da:	fb13 f808 	smulbb	r8, r3, r8
 80232de:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80232e2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80232e6:	fb04 a40e 	mla	r4, r4, lr, sl
 80232ea:	f10c 0301 	add.w	r3, ip, #1
 80232ee:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80232f2:	fa1f fe8e 	uxth.w	lr, lr
 80232f6:	b2a4      	uxth	r4, r4
 80232f8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80232fc:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8023300:	f104 0a01 	add.w	sl, r4, #1
 8023304:	f10e 0c01 	add.w	ip, lr, #1
 8023308:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802330c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8023310:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023314:	0964      	lsrs	r4, r4, #5
 8023316:	ea4c 0c03 	orr.w	ip, ip, r3
 802331a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802331e:	9b03      	ldr	r3, [sp, #12]
 8023320:	ea4c 0c04 	orr.w	ip, ip, r4
 8023324:	f8a3 c000 	strh.w	ip, [r3]
 8023328:	b007      	add	sp, #28
 802332a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802332e:	af05      	add	r7, sp, #20
 8023330:	e756      	b.n	80231e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8023332:	ad05      	add	r5, sp, #20
 8023334:	462f      	mov	r7, r5
 8023336:	e761      	b.n	80231fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8023338:	ad05      	add	r5, sp, #20
 802333a:	e75f      	b.n	80231fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802333c:	ae05      	add	r6, sp, #20
 802333e:	e772      	b.n	8023226 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8023340:	ab05      	add	r3, sp, #20
 8023342:	461e      	mov	r6, r3
 8023344:	e77e      	b.n	8023244 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8023346:	ab05      	add	r3, sp, #20
 8023348:	e77c      	b.n	8023244 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802334a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802334a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802334e:	b095      	sub	sp, #84	; 0x54
 8023350:	9212      	str	r2, [sp, #72]	; 0x48
 8023352:	9309      	str	r3, [sp, #36]	; 0x24
 8023354:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023356:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802335a:	930f      	str	r3, [sp, #60]	; 0x3c
 802335c:	910e      	str	r1, [sp, #56]	; 0x38
 802335e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8023362:	9013      	str	r0, [sp, #76]	; 0x4c
 8023364:	6850      	ldr	r0, [r2, #4]
 8023366:	6812      	ldr	r2, [r2, #0]
 8023368:	fb00 1303 	mla	r3, r0, r3, r1
 802336c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023370:	930a      	str	r3, [sp, #40]	; 0x28
 8023372:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023374:	681b      	ldr	r3, [r3, #0]
 8023376:	930d      	str	r3, [sp, #52]	; 0x34
 8023378:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802337a:	685c      	ldr	r4, [r3, #4]
 802337c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802337e:	43db      	mvns	r3, r3
 8023380:	b2db      	uxtb	r3, r3
 8023382:	3404      	adds	r4, #4
 8023384:	930b      	str	r3, [sp, #44]	; 0x2c
 8023386:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023388:	2b00      	cmp	r3, #0
 802338a:	dc03      	bgt.n	8023394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802338c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802338e:	2b00      	cmp	r3, #0
 8023390:	f340 8255 	ble.w	802383e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023394:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023396:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802339a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802339e:	1e48      	subs	r0, r1, #1
 80233a0:	1e55      	subs	r5, r2, #1
 80233a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80233a4:	2b00      	cmp	r3, #0
 80233a6:	f340 80f9 	ble.w	802359c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80233aa:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80233ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80233ae:	1436      	asrs	r6, r6, #16
 80233b0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80233b4:	d406      	bmi.n	80233c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80233b6:	4286      	cmp	r6, r0
 80233b8:	da04      	bge.n	80233c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80233ba:	2b00      	cmp	r3, #0
 80233bc:	db02      	blt.n	80233c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80233be:	42ab      	cmp	r3, r5
 80233c0:	f2c0 80ed 	blt.w	802359e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80233c4:	3601      	adds	r6, #1
 80233c6:	f100 80da 	bmi.w	802357e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80233ca:	42b1      	cmp	r1, r6
 80233cc:	f2c0 80d7 	blt.w	802357e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80233d0:	3301      	adds	r3, #1
 80233d2:	f100 80d4 	bmi.w	802357e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80233d6:	429a      	cmp	r2, r3
 80233d8:	f2c0 80d1 	blt.w	802357e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80233dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80233de:	9311      	str	r3, [sp, #68]	; 0x44
 80233e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80233e2:	930c      	str	r3, [sp, #48]	; 0x30
 80233e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80233e6:	2b00      	cmp	r3, #0
 80233e8:	f340 80fa 	ble.w	80235e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80233ec:	9826      	ldr	r0, [sp, #152]	; 0x98
 80233ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80233f0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80233f2:	68c6      	ldr	r6, [r0, #12]
 80233f4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80233f6:	141d      	asrs	r5, r3, #16
 80233f8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80233fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80233fe:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023400:	1400      	asrs	r0, r0, #16
 8023402:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023406:	6892      	ldr	r2, [r2, #8]
 8023408:	f100 813e 	bmi.w	8023688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802340c:	1e57      	subs	r7, r2, #1
 802340e:	42b8      	cmp	r0, r7
 8023410:	f280 813a 	bge.w	8023688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023414:	2d00      	cmp	r5, #0
 8023416:	f2c0 8137 	blt.w	8023688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802341a:	1e77      	subs	r7, r6, #1
 802341c:	42bd      	cmp	r5, r7
 802341e:	f280 8133 	bge.w	8023688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023422:	b212      	sxth	r2, r2
 8023424:	fb05 0002 	mla	r0, r5, r2, r0
 8023428:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802342a:	f815 a000 	ldrb.w	sl, [r5, r0]
 802342e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8023432:	182e      	adds	r6, r5, r0
 8023434:	eb04 050a 	add.w	r5, r4, sl
 8023438:	2b00      	cmp	r3, #0
 802343a:	f000 8117 	beq.w	802366c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802343e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8023442:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8023446:	44a4      	add	ip, r4
 8023448:	2900      	cmp	r1, #0
 802344a:	f000 8117 	beq.w	802367c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802344e:	18b0      	adds	r0, r6, r2
 8023450:	5cb2      	ldrb	r2, [r6, r2]
 8023452:	7840      	ldrb	r0, [r0, #1]
 8023454:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023458:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802345c:	4422      	add	r2, r4
 802345e:	4420      	add	r0, r4
 8023460:	b29b      	uxth	r3, r3
 8023462:	b289      	uxth	r1, r1
 8023464:	fb03 f901 	mul.w	r9, r3, r1
 8023468:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802346c:	011b      	lsls	r3, r3, #4
 802346e:	b289      	uxth	r1, r1
 8023470:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8023474:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023478:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802347a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802347e:	f8b6 e000 	ldrh.w	lr, [r6]
 8023482:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8023486:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802348a:	eba3 0309 	sub.w	r3, r3, r9
 802348e:	b29b      	uxth	r3, r3
 8023490:	eba8 0801 	sub.w	r8, r8, r1
 8023494:	fa1f f888 	uxth.w	r8, r8
 8023498:	435f      	muls	r7, r3
 802349a:	fb08 770b 	mla	r7, r8, fp, r7
 802349e:	f892 b002 	ldrb.w	fp, [r2, #2]
 80234a2:	9310      	str	r3, [sp, #64]	; 0x40
 80234a4:	fb01 770b 	mla	r7, r1, fp, r7
 80234a8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80234ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80234ae:	fb09 770b 	mla	r7, r9, fp, r7
 80234b2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80234b6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80234ba:	fb1b fb03 	smulbb	fp, fp, r3
 80234be:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80234c2:	fb07 b706 	mla	r7, r7, r6, fp
 80234c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80234c8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80234cc:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80234d0:	f89c c000 	ldrb.w	ip, [ip]
 80234d4:	435d      	muls	r5, r3
 80234d6:	fb08 550b 	mla	r5, r8, fp, r5
 80234da:	f892 b001 	ldrb.w	fp, [r2, #1]
 80234de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80234e0:	fb01 550b 	mla	r5, r1, fp, r5
 80234e4:	f890 b001 	ldrb.w	fp, [r0, #1]
 80234e8:	fb09 550b 	mla	r5, r9, fp, r5
 80234ec:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80234f0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80234f4:	fb1b fb03 	smulbb	fp, fp, r3
 80234f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80234fa:	fb03 f30c 	mul.w	r3, r3, ip
 80234fe:	f892 c000 	ldrb.w	ip, [r2]
 8023502:	fb08 330a 	mla	r3, r8, sl, r3
 8023506:	fb01 330c 	mla	r3, r1, ip, r3
 802350a:	f890 c000 	ldrb.w	ip, [r0]
 802350e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023512:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023516:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023518:	fa5f fe8e 	uxtb.w	lr, lr
 802351c:	b2bf      	uxth	r7, r7
 802351e:	fb1e fe03 	smulbb	lr, lr, r3
 8023522:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023526:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802352a:	fb05 b506 	mla	r5, r5, r6, fp
 802352e:	1c7b      	adds	r3, r7, #1
 8023530:	fb0c e606 	mla	r6, ip, r6, lr
 8023534:	b2ad      	uxth	r5, r5
 8023536:	b2b6      	uxth	r6, r6
 8023538:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802353c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8023540:	f105 0b01 	add.w	fp, r5, #1
 8023544:	1c77      	adds	r7, r6, #1
 8023546:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802354a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802354e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023552:	096d      	lsrs	r5, r5, #5
 8023554:	431f      	orrs	r7, r3
 8023556:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802355a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802355c:	433d      	orrs	r5, r7
 802355e:	801d      	strh	r5, [r3, #0]
 8023560:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023562:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023564:	3302      	adds	r3, #2
 8023566:	930c      	str	r3, [sp, #48]	; 0x30
 8023568:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802356a:	4413      	add	r3, r2
 802356c:	931f      	str	r3, [sp, #124]	; 0x7c
 802356e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023570:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023572:	4413      	add	r3, r2
 8023574:	9320      	str	r3, [sp, #128]	; 0x80
 8023576:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023578:	3b01      	subs	r3, #1
 802357a:	9311      	str	r3, [sp, #68]	; 0x44
 802357c:	e732      	b.n	80233e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802357e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023580:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023582:	4433      	add	r3, r6
 8023584:	931f      	str	r3, [sp, #124]	; 0x7c
 8023586:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8023588:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802358a:	4433      	add	r3, r6
 802358c:	9320      	str	r3, [sp, #128]	; 0x80
 802358e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023590:	3b01      	subs	r3, #1
 8023592:	9309      	str	r3, [sp, #36]	; 0x24
 8023594:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023596:	3302      	adds	r3, #2
 8023598:	930a      	str	r3, [sp, #40]	; 0x28
 802359a:	e702      	b.n	80233a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802359c:	d027      	beq.n	80235ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802359e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235a0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80235a2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80235a4:	3b01      	subs	r3, #1
 80235a6:	fb00 5003 	mla	r0, r0, r3, r5
 80235aa:	1400      	asrs	r0, r0, #16
 80235ac:	f53f af16 	bmi.w	80233dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80235b0:	3901      	subs	r1, #1
 80235b2:	4288      	cmp	r0, r1
 80235b4:	f6bf af12 	bge.w	80233dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80235b8:	9922      	ldr	r1, [sp, #136]	; 0x88
 80235ba:	9820      	ldr	r0, [sp, #128]	; 0x80
 80235bc:	fb01 0303 	mla	r3, r1, r3, r0
 80235c0:	141b      	asrs	r3, r3, #16
 80235c2:	f53f af0b 	bmi.w	80233dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80235c6:	3a01      	subs	r2, #1
 80235c8:	4293      	cmp	r3, r2
 80235ca:	f6bf af07 	bge.w	80233dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80235ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235d0:	9311      	str	r3, [sp, #68]	; 0x44
 80235d2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80235d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80235d8:	930c      	str	r3, [sp, #48]	; 0x30
 80235da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80235dc:	2b00      	cmp	r3, #0
 80235de:	dc70      	bgt.n	80236c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80235e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80235e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80235e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80235ec:	930a      	str	r3, [sp, #40]	; 0x28
 80235ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80235f0:	2b00      	cmp	r3, #0
 80235f2:	f340 8124 	ble.w	802383e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80235f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80235fa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80235fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023602:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023604:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023608:	ee31 1a05 	vadd.f32	s2, s2, s10
 802360c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023610:	eef0 6a62 	vmov.f32	s13, s5
 8023614:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023618:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802361c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023620:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8023624:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023628:	eef0 6a43 	vmov.f32	s13, s6
 802362c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023630:	ee12 2a90 	vmov	r2, s5
 8023634:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023638:	fb92 f3f3 	sdiv	r3, r2, r3
 802363c:	ee13 2a10 	vmov	r2, s6
 8023640:	9321      	str	r3, [sp, #132]	; 0x84
 8023642:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023644:	fb92 f3f3 	sdiv	r3, r2, r3
 8023648:	9322      	str	r3, [sp, #136]	; 0x88
 802364a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802364c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802364e:	3b01      	subs	r3, #1
 8023650:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023654:	930e      	str	r3, [sp, #56]	; 0x38
 8023656:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023658:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802365c:	bf08      	it	eq
 802365e:	4613      	moveq	r3, r2
 8023660:	9309      	str	r3, [sp, #36]	; 0x24
 8023662:	eeb0 3a67 	vmov.f32	s6, s15
 8023666:	eef0 2a47 	vmov.f32	s5, s14
 802366a:	e68c      	b.n	8023386 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802366c:	b149      	cbz	r1, 8023682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802366e:	5cb2      	ldrb	r2, [r6, r2]
 8023670:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023674:	4422      	add	r2, r4
 8023676:	4628      	mov	r0, r5
 8023678:	46ac      	mov	ip, r5
 802367a:	e6f1      	b.n	8023460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802367c:	4628      	mov	r0, r5
 802367e:	462a      	mov	r2, r5
 8023680:	e6ee      	b.n	8023460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023682:	4628      	mov	r0, r5
 8023684:	462a      	mov	r2, r5
 8023686:	e7f7      	b.n	8023678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8023688:	1c47      	adds	r7, r0, #1
 802368a:	f53f af69 	bmi.w	8023560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802368e:	42ba      	cmp	r2, r7
 8023690:	f6ff af66 	blt.w	8023560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023694:	1c6f      	adds	r7, r5, #1
 8023696:	f53f af63 	bmi.w	8023560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802369a:	42be      	cmp	r6, r7
 802369c:	f6ff af60 	blt.w	8023560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80236a0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80236a2:	9002      	str	r0, [sp, #8]
 80236a4:	b236      	sxth	r6, r6
 80236a6:	b212      	sxth	r2, r2
 80236a8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80236ac:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80236b0:	9200      	str	r2, [sp, #0]
 80236b2:	9601      	str	r6, [sp, #4]
 80236b4:	4623      	mov	r3, r4
 80236b6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80236ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80236bc:	f7ff fd59 	bl	8023172 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80236c0:	e74e      	b.n	8023560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80236c2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80236c4:	9820      	ldr	r0, [sp, #128]	; 0x80
 80236c6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80236c8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80236ca:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80236ce:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80236d0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80236d4:	142d      	asrs	r5, r5, #16
 80236d6:	1400      	asrs	r0, r0, #16
 80236d8:	fb02 5000 	mla	r0, r2, r0, r5
 80236dc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80236de:	f815 9000 	ldrb.w	r9, [r5, r0]
 80236e2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80236e6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80236ea:	182e      	adds	r6, r5, r0
 80236ec:	eb04 0509 	add.w	r5, r4, r9
 80236f0:	2b00      	cmp	r3, #0
 80236f2:	f000 8096 	beq.w	8023822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80236f6:	7877      	ldrb	r7, [r6, #1]
 80236f8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80236fc:	4427      	add	r7, r4
 80236fe:	2900      	cmp	r1, #0
 8023700:	f000 8097 	beq.w	8023832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8023704:	18b0      	adds	r0, r6, r2
 8023706:	5cb2      	ldrb	r2, [r6, r2]
 8023708:	7840      	ldrb	r0, [r0, #1]
 802370a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802370e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023712:	4422      	add	r2, r4
 8023714:	4420      	add	r0, r4
 8023716:	b29b      	uxth	r3, r3
 8023718:	b289      	uxth	r1, r1
 802371a:	fb03 f801 	mul.w	r8, r3, r1
 802371e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8023720:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023724:	f8b6 c000 	ldrh.w	ip, [r6]
 8023728:	78be      	ldrb	r6, [r7, #2]
 802372a:	f814 9009 	ldrb.w	r9, [r4, r9]
 802372e:	011b      	lsls	r3, r3, #4
 8023730:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8023734:	b289      	uxth	r1, r1
 8023736:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802373a:	eba3 0308 	sub.w	r3, r3, r8
 802373e:	b29b      	uxth	r3, r3
 8023740:	ebae 0e01 	sub.w	lr, lr, r1
 8023744:	fa1f fe8e 	uxth.w	lr, lr
 8023748:	435e      	muls	r6, r3
 802374a:	fb0e 660b 	mla	r6, lr, fp, r6
 802374e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023752:	9310      	str	r3, [sp, #64]	; 0x40
 8023754:	fb01 660b 	mla	r6, r1, fp, r6
 8023758:	f890 b002 	ldrb.w	fp, [r0, #2]
 802375c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802375e:	fb08 660b 	mla	r6, r8, fp, r6
 8023762:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8023766:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802376a:	fb1b fb03 	smulbb	fp, fp, r3
 802376e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023772:	fb06 b60a 	mla	r6, r6, sl, fp
 8023776:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023778:	f895 b001 	ldrb.w	fp, [r5, #1]
 802377c:	787d      	ldrb	r5, [r7, #1]
 802377e:	783f      	ldrb	r7, [r7, #0]
 8023780:	435d      	muls	r5, r3
 8023782:	fb0e 550b 	mla	r5, lr, fp, r5
 8023786:	f892 b001 	ldrb.w	fp, [r2, #1]
 802378a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802378c:	fb01 550b 	mla	r5, r1, fp, r5
 8023790:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023794:	fb08 550b 	mla	r5, r8, fp, r5
 8023798:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802379c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80237a0:	fb1b fb03 	smulbb	fp, fp, r3
 80237a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80237a6:	437b      	muls	r3, r7
 80237a8:	7817      	ldrb	r7, [r2, #0]
 80237aa:	fb0e 3309 	mla	r3, lr, r9, r3
 80237ae:	fb01 3307 	mla	r3, r1, r7, r3
 80237b2:	7807      	ldrb	r7, [r0, #0]
 80237b4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80237b8:	fb08 3707 	mla	r7, r8, r7, r3
 80237bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80237be:	fa5f fc8c 	uxtb.w	ip, ip
 80237c2:	fb1c fc03 	smulbb	ip, ip, r3
 80237c6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80237ca:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80237ce:	fb05 b50a 	mla	r5, r5, sl, fp
 80237d2:	fb07 c70a 	mla	r7, r7, sl, ip
 80237d6:	b2b6      	uxth	r6, r6
 80237d8:	b2ad      	uxth	r5, r5
 80237da:	b2bf      	uxth	r7, r7
 80237dc:	1c73      	adds	r3, r6, #1
 80237de:	1c7a      	adds	r2, r7, #1
 80237e0:	f105 0b01 	add.w	fp, r5, #1
 80237e4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80237e8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80237ec:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80237f0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80237f4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80237f8:	096d      	lsrs	r5, r5, #5
 80237fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80237fc:	4316      	orrs	r6, r2
 80237fe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023802:	432e      	orrs	r6, r5
 8023804:	f823 6b02 	strh.w	r6, [r3], #2
 8023808:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802380a:	930c      	str	r3, [sp, #48]	; 0x30
 802380c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802380e:	4413      	add	r3, r2
 8023810:	931f      	str	r3, [sp, #124]	; 0x7c
 8023812:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023814:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023816:	4413      	add	r3, r2
 8023818:	9320      	str	r3, [sp, #128]	; 0x80
 802381a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802381c:	3b01      	subs	r3, #1
 802381e:	9311      	str	r3, [sp, #68]	; 0x44
 8023820:	e6db      	b.n	80235da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8023822:	b149      	cbz	r1, 8023838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8023824:	5cb2      	ldrb	r2, [r6, r2]
 8023826:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802382a:	4422      	add	r2, r4
 802382c:	4628      	mov	r0, r5
 802382e:	462f      	mov	r7, r5
 8023830:	e771      	b.n	8023716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8023832:	4628      	mov	r0, r5
 8023834:	462a      	mov	r2, r5
 8023836:	e76e      	b.n	8023716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8023838:	4628      	mov	r0, r5
 802383a:	462a      	mov	r2, r5
 802383c:	e7f7      	b.n	802382e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802383e:	b015      	add	sp, #84	; 0x54
 8023840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8023844:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023848:	880f      	ldrh	r7, [r1, #0]
 802384a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 802384e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8023852:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8023856:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802385a:	023c      	lsls	r4, r7, #8
 802385c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8023860:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8023864:	017c      	lsls	r4, r7, #5
 8023866:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802386a:	00ff      	lsls	r7, r7, #3
 802386c:	ea4b 0404 	orr.w	r4, fp, r4
 8023870:	b2ff      	uxtb	r7, r7
 8023872:	fb05 ca0e 	mla	sl, r5, lr, ip
 8023876:	4327      	orrs	r7, r4
 8023878:	2d00      	cmp	r5, #0
 802387a:	eb02 080a 	add.w	r8, r2, sl
 802387e:	9701      	str	r7, [sp, #4]
 8023880:	db7e      	blt.n	8023980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023882:	45a9      	cmp	r9, r5
 8023884:	dd7c      	ble.n	8023980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023886:	f1bc 0f00 	cmp.w	ip, #0
 802388a:	db77      	blt.n	802397c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802388c:	45e6      	cmp	lr, ip
 802388e:	dd75      	ble.n	802397c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023890:	f812 700a 	ldrb.w	r7, [r2, sl]
 8023894:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023898:	441f      	add	r7, r3
 802389a:	f11c 0201 	adds.w	r2, ip, #1
 802389e:	d472      	bmi.n	8023986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80238a0:	4596      	cmp	lr, r2
 80238a2:	dd70      	ble.n	8023986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80238a4:	2800      	cmp	r0, #0
 80238a6:	d06e      	beq.n	8023986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80238a8:	f898 4001 	ldrb.w	r4, [r8, #1]
 80238ac:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80238b0:	441c      	add	r4, r3
 80238b2:	3501      	adds	r5, #1
 80238b4:	d46b      	bmi.n	802398e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80238b6:	45a9      	cmp	r9, r5
 80238b8:	dd69      	ble.n	802398e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80238ba:	2e00      	cmp	r6, #0
 80238bc:	d067      	beq.n	802398e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80238be:	f1bc 0f00 	cmp.w	ip, #0
 80238c2:	db62      	blt.n	802398a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80238c4:	45e6      	cmp	lr, ip
 80238c6:	dd60      	ble.n	802398a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80238c8:	f818 500e 	ldrb.w	r5, [r8, lr]
 80238cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80238d0:	441d      	add	r5, r3
 80238d2:	f11c 0201 	adds.w	r2, ip, #1
 80238d6:	d45d      	bmi.n	8023994 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80238d8:	4596      	cmp	lr, r2
 80238da:	dd5b      	ble.n	8023994 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80238dc:	2800      	cmp	r0, #0
 80238de:	d059      	beq.n	8023994 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80238e0:	44c6      	add	lr, r8
 80238e2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80238e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80238ea:	4413      	add	r3, r2
 80238ec:	b280      	uxth	r0, r0
 80238ee:	b2b2      	uxth	r2, r6
 80238f0:	fb00 f602 	mul.w	r6, r0, r2
 80238f4:	0100      	lsls	r0, r0, #4
 80238f6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80238fa:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 80238fe:	1b80      	subs	r0, r0, r6
 8023900:	fa1f fc82 	uxth.w	ip, r2
 8023904:	b282      	uxth	r2, r0
 8023906:	78a0      	ldrb	r0, [r4, #2]
 8023908:	f897 e002 	ldrb.w	lr, [r7, #2]
 802390c:	f897 9000 	ldrb.w	r9, [r7]
 8023910:	787f      	ldrb	r7, [r7, #1]
 8023912:	eba8 080c 	sub.w	r8, r8, ip
 8023916:	fa1f f888 	uxth.w	r8, r8
 802391a:	4350      	muls	r0, r2
 802391c:	fb08 0e0e 	mla	lr, r8, lr, r0
 8023920:	78a8      	ldrb	r0, [r5, #2]
 8023922:	fb0c e000 	mla	r0, ip, r0, lr
 8023926:	f893 e002 	ldrb.w	lr, [r3, #2]
 802392a:	fb06 0e0e 	mla	lr, r6, lr, r0
 802392e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8023932:	f894 e000 	ldrb.w	lr, [r4]
 8023936:	fb02 fe0e 	mul.w	lr, r2, lr
 802393a:	fb08 e909 	mla	r9, r8, r9, lr
 802393e:	f895 e000 	ldrb.w	lr, [r5]
 8023942:	fb0c 990e 	mla	r9, ip, lr, r9
 8023946:	f893 e000 	ldrb.w	lr, [r3]
 802394a:	785b      	ldrb	r3, [r3, #1]
 802394c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8023950:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8023954:	ea4e 0e00 	orr.w	lr, lr, r0
 8023958:	7860      	ldrb	r0, [r4, #1]
 802395a:	4350      	muls	r0, r2
 802395c:	786a      	ldrb	r2, [r5, #1]
 802395e:	fb08 0007 	mla	r0, r8, r7, r0
 8023962:	fb0c 0202 	mla	r2, ip, r2, r0
 8023966:	fb06 2303 	mla	r3, r6, r3, r2
 802396a:	095b      	lsrs	r3, r3, #5
 802396c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023970:	ea4e 0303 	orr.w	r3, lr, r3
 8023974:	800b      	strh	r3, [r1, #0]
 8023976:	b003      	add	sp, #12
 8023978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802397c:	af01      	add	r7, sp, #4
 802397e:	e78c      	b.n	802389a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8023980:	ac01      	add	r4, sp, #4
 8023982:	4627      	mov	r7, r4
 8023984:	e795      	b.n	80238b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023986:	ac01      	add	r4, sp, #4
 8023988:	e793      	b.n	80238b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802398a:	ad01      	add	r5, sp, #4
 802398c:	e7a1      	b.n	80238d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802398e:	ab01      	add	r3, sp, #4
 8023990:	461d      	mov	r5, r3
 8023992:	e7ab      	b.n	80238ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8023994:	ab01      	add	r3, sp, #4
 8023996:	e7a9      	b.n	80238ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08023998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802399c:	b08f      	sub	sp, #60	; 0x3c
 802399e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 80239a2:	920c      	str	r2, [sp, #48]	; 0x30
 80239a4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80239a6:	910a      	str	r1, [sp, #40]	; 0x28
 80239a8:	9306      	str	r3, [sp, #24]
 80239aa:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 80239ae:	900d      	str	r0, [sp, #52]	; 0x34
 80239b0:	6850      	ldr	r0, [r2, #4]
 80239b2:	6812      	ldr	r2, [r2, #0]
 80239b4:	fb00 1303 	mla	r3, r0, r3, r1
 80239b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80239bc:	9307      	str	r3, [sp, #28]
 80239be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80239c0:	681b      	ldr	r3, [r3, #0]
 80239c2:	9308      	str	r3, [sp, #32]
 80239c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80239c6:	685c      	ldr	r4, [r3, #4]
 80239c8:	3404      	adds	r4, #4
 80239ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80239cc:	2b00      	cmp	r3, #0
 80239ce:	dc03      	bgt.n	80239d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80239d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80239d2:	2b00      	cmp	r3, #0
 80239d4:	f340 81d6 	ble.w	8023d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80239d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80239da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80239de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80239e2:	1e48      	subs	r0, r1, #1
 80239e4:	1e56      	subs	r6, r2, #1
 80239e6:	9b06      	ldr	r3, [sp, #24]
 80239e8:	2b00      	cmp	r3, #0
 80239ea:	f340 80b7 	ble.w	8023b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80239ee:	ea5f 472b 	movs.w	r7, fp, asr #16
 80239f2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80239f6:	d406      	bmi.n	8023a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80239f8:	4287      	cmp	r7, r0
 80239fa:	da04      	bge.n	8023a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80239fc:	2b00      	cmp	r3, #0
 80239fe:	db02      	blt.n	8023a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023a00:	42b3      	cmp	r3, r6
 8023a02:	f2c0 80ac 	blt.w	8023b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023a06:	3701      	adds	r7, #1
 8023a08:	f100 809d 	bmi.w	8023b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023a0c:	42b9      	cmp	r1, r7
 8023a0e:	f2c0 809a 	blt.w	8023b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023a12:	3301      	adds	r3, #1
 8023a14:	f100 8097 	bmi.w	8023b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023a18:	429a      	cmp	r2, r3
 8023a1a:	f2c0 8094 	blt.w	8023b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023a1e:	9b06      	ldr	r3, [sp, #24]
 8023a20:	930b      	str	r3, [sp, #44]	; 0x2c
 8023a22:	9b07      	ldr	r3, [sp, #28]
 8023a24:	9309      	str	r3, [sp, #36]	; 0x24
 8023a26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a28:	2b00      	cmp	r3, #0
 8023a2a:	f340 80b5 	ble.w	8023b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023a2e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023a30:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023a32:	68c7      	ldr	r7, [r0, #12]
 8023a34:	6892      	ldr	r2, [r2, #8]
 8023a36:	ea5f 402b 	movs.w	r0, fp, asr #16
 8023a3a:	ea4f 4625 	mov.w	r6, r5, asr #16
 8023a3e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023a42:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023a46:	f100 80fb 	bmi.w	8023c40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023a4a:	f102 3cff 	add.w	ip, r2, #4294967295
 8023a4e:	4560      	cmp	r0, ip
 8023a50:	f280 80f6 	bge.w	8023c40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023a54:	2e00      	cmp	r6, #0
 8023a56:	f2c0 80f3 	blt.w	8023c40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023a5a:	f107 3cff 	add.w	ip, r7, #4294967295
 8023a5e:	4566      	cmp	r6, ip
 8023a60:	f280 80ee 	bge.w	8023c40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023a64:	b212      	sxth	r2, r2
 8023a66:	fb06 0002 	mla	r0, r6, r2, r0
 8023a6a:	9e08      	ldr	r6, [sp, #32]
 8023a6c:	1837      	adds	r7, r6, r0
 8023a6e:	5c30      	ldrb	r0, [r6, r0]
 8023a70:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8023a74:	eb04 0c08 	add.w	ip, r4, r8
 8023a78:	2b00      	cmp	r3, #0
 8023a7a:	f000 80d3 	beq.w	8023c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8023a7e:	787e      	ldrb	r6, [r7, #1]
 8023a80:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023a84:	4426      	add	r6, r4
 8023a86:	2900      	cmp	r1, #0
 8023a88:	f000 80d4 	beq.w	8023c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8023a8c:	18b8      	adds	r0, r7, r2
 8023a8e:	5cba      	ldrb	r2, [r7, r2]
 8023a90:	7840      	ldrb	r0, [r0, #1]
 8023a92:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023a96:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023a9a:	4422      	add	r2, r4
 8023a9c:	4420      	add	r0, r4
 8023a9e:	b29b      	uxth	r3, r3
 8023aa0:	b289      	uxth	r1, r1
 8023aa2:	fb03 f901 	mul.w	r9, r3, r1
 8023aa6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023aaa:	011b      	lsls	r3, r3, #4
 8023aac:	b289      	uxth	r1, r1
 8023aae:	78b7      	ldrb	r7, [r6, #2]
 8023ab0:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023ab4:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023ab8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023abc:	eba3 0309 	sub.w	r3, r3, r9
 8023ac0:	b29b      	uxth	r3, r3
 8023ac2:	ebae 0e01 	sub.w	lr, lr, r1
 8023ac6:	fa1f fe8e 	uxth.w	lr, lr
 8023aca:	435f      	muls	r7, r3
 8023acc:	fb0e 770a 	mla	r7, lr, sl, r7
 8023ad0:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023ad4:	fb01 770a 	mla	r7, r1, sl, r7
 8023ad8:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023adc:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023ae0:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023ae4:	f896 8000 	ldrb.w	r8, [r6]
 8023ae8:	7876      	ldrb	r6, [r6, #1]
 8023aea:	fb03 f808 	mul.w	r8, r3, r8
 8023aee:	fb0e 8807 	mla	r8, lr, r7, r8
 8023af2:	7817      	ldrb	r7, [r2, #0]
 8023af4:	fb01 8807 	mla	r8, r1, r7, r8
 8023af8:	7807      	ldrb	r7, [r0, #0]
 8023afa:	fb09 8707 	mla	r7, r9, r7, r8
 8023afe:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023b02:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023b06:	ea47 070a 	orr.w	r7, r7, sl
 8023b0a:	4373      	muls	r3, r6
 8023b0c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8023b10:	fb0e 330c 	mla	r3, lr, ip, r3
 8023b14:	fb01 310a 	mla	r1, r1, sl, r3
 8023b18:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023b1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b1e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8023b22:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023b26:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023b2a:	ea47 070a 	orr.w	r7, r7, sl
 8023b2e:	801f      	strh	r7, [r3, #0]
 8023b30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b32:	3302      	adds	r3, #2
 8023b34:	9309      	str	r3, [sp, #36]	; 0x24
 8023b36:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023b38:	449b      	add	fp, r3
 8023b3a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023b3c:	441d      	add	r5, r3
 8023b3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023b40:	3b01      	subs	r3, #1
 8023b42:	930b      	str	r3, [sp, #44]	; 0x2c
 8023b44:	e76f      	b.n	8023a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023b46:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023b48:	449b      	add	fp, r3
 8023b4a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023b4c:	441d      	add	r5, r3
 8023b4e:	9b06      	ldr	r3, [sp, #24]
 8023b50:	3b01      	subs	r3, #1
 8023b52:	9306      	str	r3, [sp, #24]
 8023b54:	9b07      	ldr	r3, [sp, #28]
 8023b56:	3302      	adds	r3, #2
 8023b58:	9307      	str	r3, [sp, #28]
 8023b5a:	e744      	b.n	80239e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8023b5c:	d023      	beq.n	8023ba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023b5e:	9b06      	ldr	r3, [sp, #24]
 8023b60:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023b62:	3b01      	subs	r3, #1
 8023b64:	fb00 b003 	mla	r0, r0, r3, fp
 8023b68:	1400      	asrs	r0, r0, #16
 8023b6a:	f53f af58 	bmi.w	8023a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023b6e:	3901      	subs	r1, #1
 8023b70:	4288      	cmp	r0, r1
 8023b72:	f6bf af54 	bge.w	8023a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023b76:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023b78:	fb01 5303 	mla	r3, r1, r3, r5
 8023b7c:	141b      	asrs	r3, r3, #16
 8023b7e:	f53f af4e 	bmi.w	8023a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023b82:	3a01      	subs	r2, #1
 8023b84:	4293      	cmp	r3, r2
 8023b86:	f6bf af4a 	bge.w	8023a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023b8a:	9b06      	ldr	r3, [sp, #24]
 8023b8c:	9309      	str	r3, [sp, #36]	; 0x24
 8023b8e:	9b07      	ldr	r3, [sp, #28]
 8023b90:	930b      	str	r3, [sp, #44]	; 0x2c
 8023b92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b94:	2b00      	cmp	r3, #0
 8023b96:	dc70      	bgt.n	8023c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8023b98:	9b06      	ldr	r3, [sp, #24]
 8023b9a:	9a07      	ldr	r2, [sp, #28]
 8023b9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023ba0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023ba4:	9307      	str	r3, [sp, #28]
 8023ba6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023ba8:	2b00      	cmp	r3, #0
 8023baa:	f340 80eb 	ble.w	8023d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023bae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023bb2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023bb6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023bba:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023bbc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023bc0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023bc4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023bc8:	eef0 6a62 	vmov.f32	s13, s5
 8023bcc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023bd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023bd4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023bd8:	ee16 ba90 	vmov	fp, s13
 8023bdc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023be0:	eef0 6a43 	vmov.f32	s13, s6
 8023be4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023be8:	ee12 2a90 	vmov	r2, s5
 8023bec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023bf0:	fb92 f3f3 	sdiv	r3, r2, r3
 8023bf4:	ee13 2a10 	vmov	r2, s6
 8023bf8:	931b      	str	r3, [sp, #108]	; 0x6c
 8023bfa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023bfc:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c00:	931c      	str	r3, [sp, #112]	; 0x70
 8023c02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023c04:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023c06:	3b01      	subs	r3, #1
 8023c08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023c0c:	930a      	str	r3, [sp, #40]	; 0x28
 8023c0e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023c10:	bf08      	it	eq
 8023c12:	4613      	moveq	r3, r2
 8023c14:	ee16 5a90 	vmov	r5, s13
 8023c18:	9306      	str	r3, [sp, #24]
 8023c1a:	eeb0 3a67 	vmov.f32	s6, s15
 8023c1e:	eef0 2a47 	vmov.f32	s5, s14
 8023c22:	e6d2      	b.n	80239ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8023c24:	b149      	cbz	r1, 8023c3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8023c26:	5cba      	ldrb	r2, [r7, r2]
 8023c28:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023c2c:	4422      	add	r2, r4
 8023c2e:	4660      	mov	r0, ip
 8023c30:	4666      	mov	r6, ip
 8023c32:	e734      	b.n	8023a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023c34:	4660      	mov	r0, ip
 8023c36:	4662      	mov	r2, ip
 8023c38:	e731      	b.n	8023a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023c3a:	4660      	mov	r0, ip
 8023c3c:	4662      	mov	r2, ip
 8023c3e:	e7f7      	b.n	8023c30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023c40:	f110 0c01 	adds.w	ip, r0, #1
 8023c44:	f53f af74 	bmi.w	8023b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023c48:	4562      	cmp	r2, ip
 8023c4a:	f6ff af71 	blt.w	8023b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023c4e:	f116 0c01 	adds.w	ip, r6, #1
 8023c52:	f53f af6d 	bmi.w	8023b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023c56:	4567      	cmp	r7, ip
 8023c58:	f6ff af6a 	blt.w	8023b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023c5c:	b23f      	sxth	r7, r7
 8023c5e:	b212      	sxth	r2, r2
 8023c60:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8023c64:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023c68:	9200      	str	r2, [sp, #0]
 8023c6a:	9701      	str	r7, [sp, #4]
 8023c6c:	4623      	mov	r3, r4
 8023c6e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023c72:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023c74:	f7ff fde6 	bl	8023844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8023c78:	e75a      	b.n	8023b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023c7a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023c7c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023c80:	ea4f 462b 	mov.w	r6, fp, asr #16
 8023c84:	1428      	asrs	r0, r5, #16
 8023c86:	fb02 6000 	mla	r0, r2, r0, r6
 8023c8a:	9e08      	ldr	r6, [sp, #32]
 8023c8c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8023c90:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023c94:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8023c98:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023c9c:	1837      	adds	r7, r6, r0
 8023c9e:	eb04 0c08 	add.w	ip, r4, r8
 8023ca2:	2b00      	cmp	r3, #0
 8023ca4:	d060      	beq.n	8023d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8023ca6:	787e      	ldrb	r6, [r7, #1]
 8023ca8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023cac:	4426      	add	r6, r4
 8023cae:	2900      	cmp	r1, #0
 8023cb0:	d062      	beq.n	8023d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8023cb2:	18b8      	adds	r0, r7, r2
 8023cb4:	5cba      	ldrb	r2, [r7, r2]
 8023cb6:	7840      	ldrb	r0, [r0, #1]
 8023cb8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023cbc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023cc0:	4422      	add	r2, r4
 8023cc2:	4420      	add	r0, r4
 8023cc4:	b29b      	uxth	r3, r3
 8023cc6:	b289      	uxth	r1, r1
 8023cc8:	fb03 f901 	mul.w	r9, r3, r1
 8023ccc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023cd0:	011b      	lsls	r3, r3, #4
 8023cd2:	b289      	uxth	r1, r1
 8023cd4:	78b7      	ldrb	r7, [r6, #2]
 8023cd6:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023cda:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023cde:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023ce2:	eba3 0309 	sub.w	r3, r3, r9
 8023ce6:	b29b      	uxth	r3, r3
 8023ce8:	ebae 0e01 	sub.w	lr, lr, r1
 8023cec:	fa1f fe8e 	uxth.w	lr, lr
 8023cf0:	435f      	muls	r7, r3
 8023cf2:	fb0e 770a 	mla	r7, lr, sl, r7
 8023cf6:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023cfa:	fb01 770a 	mla	r7, r1, sl, r7
 8023cfe:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023d02:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023d06:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023d0a:	f896 8000 	ldrb.w	r8, [r6]
 8023d0e:	7876      	ldrb	r6, [r6, #1]
 8023d10:	fb03 f808 	mul.w	r8, r3, r8
 8023d14:	fb0e 8807 	mla	r8, lr, r7, r8
 8023d18:	7817      	ldrb	r7, [r2, #0]
 8023d1a:	fb01 8807 	mla	r8, r1, r7, r8
 8023d1e:	7807      	ldrb	r7, [r0, #0]
 8023d20:	fb09 8707 	mla	r7, r9, r7, r8
 8023d24:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023d28:	4373      	muls	r3, r6
 8023d2a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023d2e:	7856      	ldrb	r6, [r2, #1]
 8023d30:	ea47 070a 	orr.w	r7, r7, sl
 8023d34:	fb0e 330c 	mla	r3, lr, ip, r3
 8023d38:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023d3c:	fb01 3306 	mla	r3, r1, r6, r3
 8023d40:	fb09 3a0a 	mla	sl, r9, sl, r3
 8023d44:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023d48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023d4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023d4e:	ea47 070a 	orr.w	r7, r7, sl
 8023d52:	f823 7b02 	strh.w	r7, [r3], #2
 8023d56:	930b      	str	r3, [sp, #44]	; 0x2c
 8023d58:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023d5a:	449b      	add	fp, r3
 8023d5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023d5e:	441d      	add	r5, r3
 8023d60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d62:	3b01      	subs	r3, #1
 8023d64:	9309      	str	r3, [sp, #36]	; 0x24
 8023d66:	e714      	b.n	8023b92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8023d68:	b149      	cbz	r1, 8023d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023d6a:	5cba      	ldrb	r2, [r7, r2]
 8023d6c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023d70:	4422      	add	r2, r4
 8023d72:	4660      	mov	r0, ip
 8023d74:	4666      	mov	r6, ip
 8023d76:	e7a5      	b.n	8023cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023d78:	4660      	mov	r0, ip
 8023d7a:	4662      	mov	r2, ip
 8023d7c:	e7a2      	b.n	8023cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023d7e:	4660      	mov	r0, ip
 8023d80:	4662      	mov	r2, ip
 8023d82:	e7f7      	b.n	8023d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8023d84:	b00f      	add	sp, #60	; 0x3c
 8023d86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023d8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8023d8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d8e:	b085      	sub	sp, #20
 8023d90:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8023d94:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023d98:	9102      	str	r1, [sp, #8]
 8023d9a:	2c00      	cmp	r4, #0
 8023d9c:	fb04 710c 	mla	r1, r4, ip, r7
 8023da0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023da4:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8023da8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023dac:	eb02 0e01 	add.w	lr, r2, r1
 8023db0:	f2c0 8122 	blt.w	8023ff8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023db4:	45a0      	cmp	r8, r4
 8023db6:	f340 811f 	ble.w	8023ff8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023dba:	2f00      	cmp	r7, #0
 8023dbc:	f2c0 811a 	blt.w	8023ff4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023dc0:	45bc      	cmp	ip, r7
 8023dc2:	f340 8117 	ble.w	8023ff4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023dc6:	5c52      	ldrb	r2, [r2, r1]
 8023dc8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8023dcc:	1c7a      	adds	r2, r7, #1
 8023dce:	f100 8116 	bmi.w	8023ffe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023dd2:	4594      	cmp	ip, r2
 8023dd4:	f340 8113 	ble.w	8023ffe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023dd8:	2e00      	cmp	r6, #0
 8023dda:	f000 8112 	beq.w	8024002 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8023dde:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023de2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023de6:	3401      	adds	r4, #1
 8023de8:	f100 810f 	bmi.w	802400a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023dec:	45a0      	cmp	r8, r4
 8023dee:	f340 810c 	ble.w	802400a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023df2:	2800      	cmp	r0, #0
 8023df4:	f000 810c 	beq.w	8024010 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8023df8:	2f00      	cmp	r7, #0
 8023dfa:	f2c0 8104 	blt.w	8024006 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023dfe:	45bc      	cmp	ip, r7
 8023e00:	f340 8101 	ble.w	8024006 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023e04:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8023e08:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8023e0c:	3701      	adds	r7, #1
 8023e0e:	f100 8102 	bmi.w	8024016 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023e12:	45bc      	cmp	ip, r7
 8023e14:	f340 80ff 	ble.w	8024016 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023e18:	2e00      	cmp	r6, #0
 8023e1a:	f000 80fe 	beq.w	802401a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8023e1e:	44f4      	add	ip, lr
 8023e20:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8023e24:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023e28:	b2b6      	uxth	r6, r6
 8023e2a:	b280      	uxth	r0, r0
 8023e2c:	fb00 fe06 	mul.w	lr, r0, r6
 8023e30:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023e34:	0136      	lsls	r6, r6, #4
 8023e36:	eba6 070e 	sub.w	r7, r6, lr
 8023e3a:	b280      	uxth	r0, r0
 8023e3c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023e40:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023e44:	b2bf      	uxth	r7, r7
 8023e46:	1a1b      	subs	r3, r3, r0
 8023e48:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023e4c:	b29b      	uxth	r3, r3
 8023e4e:	fb0a f607 	mul.w	r6, sl, r7
 8023e52:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023e56:	fb0b 6603 	mla	r6, fp, r3, r6
 8023e5a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023e5e:	fb00 6609 	mla	r6, r0, r9, r6
 8023e62:	fb0e 6608 	mla	r6, lr, r8, r6
 8023e66:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023e6a:	9600      	str	r6, [sp, #0]
 8023e6c:	2e00      	cmp	r6, #0
 8023e6e:	f000 80be 	beq.w	8023fee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8023e72:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023e76:	fb0b fc0c 	mul.w	ip, fp, ip
 8023e7a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023e7e:	fb0b f505 	mul.w	r5, fp, r5
 8023e82:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023e86:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023e8a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023e8e:	44dc      	add	ip, fp
 8023e90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e94:	9501      	str	r5, [sp, #4]
 8023e96:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023e9a:	9503      	str	r5, [sp, #12]
 8023e9c:	9d01      	ldr	r5, [sp, #4]
 8023e9e:	9e02      	ldr	r6, [sp, #8]
 8023ea0:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023ea4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023ea8:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023eac:	fb0a fc0c 	mul.w	ip, sl, ip
 8023eb0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023eb4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023eb8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023ebc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023ec0:	4465      	add	r5, ip
 8023ec2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023ec6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023eca:	fb09 fc0c 	mul.w	ip, r9, ip
 8023ece:	fb09 f904 	mul.w	r9, r9, r4
 8023ed2:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023ed6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023eda:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023ede:	fb08 f404 	mul.w	r4, r8, r4
 8023ee2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023ee6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023eea:	fb08 f802 	mul.w	r8, r8, r2
 8023eee:	fb0a fa01 	mul.w	sl, sl, r1
 8023ef2:	0a22      	lsrs	r2, r4, #8
 8023ef4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023ef8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023efc:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023f00:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023f04:	4414      	add	r4, r2
 8023f06:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023f0a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023f0e:	0a2d      	lsrs	r5, r5, #8
 8023f10:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023f14:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023f18:	9a03      	ldr	r2, [sp, #12]
 8023f1a:	8836      	ldrh	r6, [r6, #0]
 8023f1c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023f20:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023f24:	437d      	muls	r5, r7
 8023f26:	4461      	add	r1, ip
 8023f28:	0a24      	lsrs	r4, r4, #8
 8023f2a:	fb02 5503 	mla	r5, r2, r3, r5
 8023f2e:	0a09      	lsrs	r1, r1, #8
 8023f30:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023f34:	fb04 540e 	mla	r4, r4, lr, r5
 8023f38:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023f3c:	fb01 4100 	mla	r1, r1, r0, r4
 8023f40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f44:	0a09      	lsrs	r1, r1, #8
 8023f46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f4a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023f4e:	fb07 f70a 	mul.w	r7, r7, sl
 8023f52:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023f56:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023f5a:	fb03 7101 	mla	r1, r3, r1, r7
 8023f5e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023f62:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023f66:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023f6a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023f6e:	fb00 e101 	mla	r1, r0, r1, lr
 8023f72:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8023f76:	9a00      	ldr	r2, [sp, #0]
 8023f78:	b287      	uxth	r7, r0
 8023f7a:	437a      	muls	r2, r7
 8023f7c:	0a09      	lsrs	r1, r1, #8
 8023f7e:	1c53      	adds	r3, r2, #1
 8023f80:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023f84:	4321      	orrs	r1, r4
 8023f86:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023f8a:	1235      	asrs	r5, r6, #8
 8023f8c:	0c0a      	lsrs	r2, r1, #16
 8023f8e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023f92:	b2db      	uxtb	r3, r3
 8023f94:	fb12 f207 	smulbb	r2, r2, r7
 8023f98:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023f9c:	fb05 2503 	mla	r5, r5, r3, r2
 8023fa0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023fa4:	10f2      	asrs	r2, r6, #3
 8023fa6:	b2c8      	uxtb	r0, r1
 8023fa8:	00f6      	lsls	r6, r6, #3
 8023faa:	fb14 f407 	smulbb	r4, r4, r7
 8023fae:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023fb2:	b2f6      	uxtb	r6, r6
 8023fb4:	fb10 f007 	smulbb	r0, r0, r7
 8023fb8:	fb02 4203 	mla	r2, r2, r3, r4
 8023fbc:	b2ad      	uxth	r5, r5
 8023fbe:	fb06 0303 	mla	r3, r6, r3, r0
 8023fc2:	b299      	uxth	r1, r3
 8023fc4:	b294      	uxth	r4, r2
 8023fc6:	1c6b      	adds	r3, r5, #1
 8023fc8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023fcc:	1c62      	adds	r2, r4, #1
 8023fce:	1c4b      	adds	r3, r1, #1
 8023fd0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023fd4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023fd8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023fdc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023fe0:	0952      	lsrs	r2, r2, #5
 8023fe2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023fe6:	432b      	orrs	r3, r5
 8023fe8:	4313      	orrs	r3, r2
 8023fea:	9a02      	ldr	r2, [sp, #8]
 8023fec:	8013      	strh	r3, [r2, #0]
 8023fee:	b005      	add	sp, #20
 8023ff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023ff4:	2500      	movs	r5, #0
 8023ff6:	e6e9      	b.n	8023dcc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8023ff8:	2100      	movs	r1, #0
 8023ffa:	460d      	mov	r5, r1
 8023ffc:	e6f3      	b.n	8023de6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023ffe:	2100      	movs	r1, #0
 8024000:	e6f1      	b.n	8023de6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8024002:	4631      	mov	r1, r6
 8024004:	e6ef      	b.n	8023de6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8024006:	2400      	movs	r4, #0
 8024008:	e700      	b.n	8023e0c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802400a:	2200      	movs	r2, #0
 802400c:	4614      	mov	r4, r2
 802400e:	e70b      	b.n	8023e28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8024010:	4602      	mov	r2, r0
 8024012:	4604      	mov	r4, r0
 8024014:	e708      	b.n	8023e28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8024016:	2200      	movs	r2, #0
 8024018:	e706      	b.n	8023e28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802401a:	4632      	mov	r2, r6
 802401c:	e704      	b.n	8023e28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802401e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802401e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024022:	b09f      	sub	sp, #124	; 0x7c
 8024024:	921b      	str	r2, [sp, #108]	; 0x6c
 8024026:	9309      	str	r3, [sp, #36]	; 0x24
 8024028:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802402a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802402e:	931c      	str	r3, [sp, #112]	; 0x70
 8024030:	9119      	str	r1, [sp, #100]	; 0x64
 8024032:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8024036:	901d      	str	r0, [sp, #116]	; 0x74
 8024038:	6850      	ldr	r0, [r2, #4]
 802403a:	6812      	ldr	r2, [r2, #0]
 802403c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802403e:	fb00 1303 	mla	r3, r0, r3, r1
 8024042:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024046:	930c      	str	r3, [sp, #48]	; 0x30
 8024048:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802404a:	681b      	ldr	r3, [r3, #0]
 802404c:	9312      	str	r3, [sp, #72]	; 0x48
 802404e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024050:	685e      	ldr	r6, [r3, #4]
 8024052:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8024056:	930d      	str	r3, [sp, #52]	; 0x34
 8024058:	3604      	adds	r6, #4
 802405a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802405c:	2b00      	cmp	r3, #0
 802405e:	dc03      	bgt.n	8024068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8024060:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024062:	2b00      	cmp	r3, #0
 8024064:	f340 8388 	ble.w	8024778 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8024068:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802406a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802406e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024072:	1e48      	subs	r0, r1, #1
 8024074:	1e57      	subs	r7, r2, #1
 8024076:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024078:	2b00      	cmp	r3, #0
 802407a:	f340 8195 	ble.w	80243a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802407e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024080:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024084:	ea4f 4325 	mov.w	r3, r5, asr #16
 8024088:	d406      	bmi.n	8024098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802408a:	4584      	cmp	ip, r0
 802408c:	da04      	bge.n	8024098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802408e:	2b00      	cmp	r3, #0
 8024090:	db02      	blt.n	8024098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8024092:	42bb      	cmp	r3, r7
 8024094:	f2c0 8189 	blt.w	80243aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8024098:	f11c 0c01 	adds.w	ip, ip, #1
 802409c:	f100 8177 	bmi.w	802438e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80240a0:	4561      	cmp	r1, ip
 80240a2:	f2c0 8174 	blt.w	802438e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80240a6:	3301      	adds	r3, #1
 80240a8:	f100 8171 	bmi.w	802438e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80240ac:	429a      	cmp	r2, r3
 80240ae:	f2c0 816e 	blt.w	802438e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80240b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80240b4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80240b6:	931a      	str	r3, [sp, #104]	; 0x68
 80240b8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80240ba:	2b00      	cmp	r3, #0
 80240bc:	f340 8193 	ble.w	80243e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80240c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80240c2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80240c6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80240c8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80240cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80240ce:	141b      	asrs	r3, r3, #16
 80240d0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80240d4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80240d8:	f100 81d6 	bmi.w	8024488 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80240dc:	f100 38ff 	add.w	r8, r0, #4294967295
 80240e0:	4543      	cmp	r3, r8
 80240e2:	f280 81d1 	bge.w	8024488 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80240e6:	f1bc 0f00 	cmp.w	ip, #0
 80240ea:	f2c0 81cd 	blt.w	8024488 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80240ee:	f10e 38ff 	add.w	r8, lr, #4294967295
 80240f2:	45c4      	cmp	ip, r8
 80240f4:	f280 81c8 	bge.w	8024488 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80240f8:	b200      	sxth	r0, r0
 80240fa:	fb0c 3300 	mla	r3, ip, r0, r3
 80240fe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024100:	eb04 0803 	add.w	r8, r4, r3
 8024104:	5ce3      	ldrb	r3, [r4, r3]
 8024106:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802410a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802410e:	2a00      	cmp	r2, #0
 8024110:	f000 81af 	beq.w	8024472 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024114:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024118:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802411c:	940e      	str	r4, [sp, #56]	; 0x38
 802411e:	0e24      	lsrs	r4, r4, #24
 8024120:	9415      	str	r4, [sp, #84]	; 0x54
 8024122:	b179      	cbz	r1, 8024144 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024124:	eb08 0c00 	add.w	ip, r8, r0
 8024128:	f818 0000 	ldrb.w	r0, [r8, r0]
 802412c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8024130:	900a      	str	r0, [sp, #40]	; 0x28
 8024132:	0e00      	lsrs	r0, r0, #24
 8024134:	9013      	str	r0, [sp, #76]	; 0x4c
 8024136:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802413a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802413e:	900f      	str	r0, [sp, #60]	; 0x3c
 8024140:	0e00      	lsrs	r0, r0, #24
 8024142:	9016      	str	r0, [sp, #88]	; 0x58
 8024144:	b292      	uxth	r2, r2
 8024146:	b289      	uxth	r1, r1
 8024148:	fb02 f901 	mul.w	r9, r2, r1
 802414c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024150:	0112      	lsls	r2, r2, #4
 8024152:	eba2 0809 	sub.w	r8, r2, r9
 8024156:	b289      	uxth	r1, r1
 8024158:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802415c:	9815      	ldr	r0, [sp, #84]	; 0x54
 802415e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024160:	fa1f f888 	uxth.w	r8, r8
 8024164:	1a52      	subs	r2, r2, r1
 8024166:	b292      	uxth	r2, r2
 8024168:	fb08 f000 	mul.w	r0, r8, r0
 802416c:	fb02 000e 	mla	r0, r2, lr, r0
 8024170:	fb01 0004 	mla	r0, r1, r4, r0
 8024174:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024176:	fb09 0004 	mla	r0, r9, r4, r0
 802417a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802417e:	2800      	cmp	r0, #0
 8024180:	f000 80fa 	beq.w	8024378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024184:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024188:	d01b      	beq.n	80241c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802418a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802418e:	fb0e fa0a 	mul.w	sl, lr, sl
 8024192:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024196:	fb0e fe03 	mul.w	lr, lr, r3
 802419a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802419e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80241a2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80241a6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80241aa:	4453      	add	r3, sl
 80241ac:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80241b0:	0a1b      	lsrs	r3, r3, #8
 80241b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80241ba:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80241be:	ea43 030c 	orr.w	r3, r3, ip
 80241c2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80241c4:	2cff      	cmp	r4, #255	; 0xff
 80241c6:	d021      	beq.n	802420c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80241c8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80241ca:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80241ce:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80241d0:	fb04 fb0b 	mul.w	fp, r4, fp
 80241d4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80241d6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80241da:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80241dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80241e0:	fb04 fa0a 	mul.w	sl, r4, sl
 80241e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80241ec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80241f0:	44de      	add	lr, fp
 80241f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80241f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80241fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024202:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024206:	ea4e 040a 	orr.w	r4, lr, sl
 802420a:	940e      	str	r4, [sp, #56]	; 0x38
 802420c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802420e:	2cff      	cmp	r4, #255	; 0xff
 8024210:	d021      	beq.n	8024256 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8024212:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024214:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024218:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802421a:	fb04 fb0b 	mul.w	fp, r4, fp
 802421e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024220:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024224:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024226:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802422a:	fb04 fa0a 	mul.w	sl, r4, sl
 802422e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024232:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024236:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802423a:	44de      	add	lr, fp
 802423c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024240:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024244:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024248:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802424c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024250:	ea4e 040a 	orr.w	r4, lr, sl
 8024254:	940a      	str	r4, [sp, #40]	; 0x28
 8024256:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024258:	2cff      	cmp	r4, #255	; 0xff
 802425a:	d021      	beq.n	80242a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802425c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802425e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024262:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024264:	fb04 fb0b 	mul.w	fp, r4, fp
 8024268:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802426a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802426e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024270:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024274:	fb04 fa0a 	mul.w	sl, r4, sl
 8024278:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802427c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024280:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024284:	44de      	add	lr, fp
 8024286:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802428a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802428e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024292:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024296:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802429a:	ea4e 040a 	orr.w	r4, lr, sl
 802429e:	940f      	str	r4, [sp, #60]	; 0x3c
 80242a0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80242a2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80242a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80242a8:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80242ac:	fb08 fc0c 	mul.w	ip, r8, ip
 80242b0:	fb02 cc0e 	mla	ip, r2, lr, ip
 80242b4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80242b8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80242ba:	fb01 cc0e 	mla	ip, r1, lr, ip
 80242be:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80242c2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80242c4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80242c8:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80242cc:	fb08 f80e 	mul.w	r8, r8, lr
 80242d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80242d4:	fb02 8303 	mla	r3, r2, r3, r8
 80242d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80242da:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80242dc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80242e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80242e2:	fb01 330a 	mla	r3, r1, sl, r3
 80242e6:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80242ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80242ec:	fb09 3901 	mla	r9, r9, r1, r3
 80242f0:	4342      	muls	r2, r0
 80242f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242f6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80242fa:	883b      	ldrh	r3, [r7, #0]
 80242fc:	1c50      	adds	r0, r2, #1
 80242fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024302:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024306:	ea4c 0c09 	orr.w	ip, ip, r9
 802430a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802430e:	1219      	asrs	r1, r3, #8
 8024310:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024314:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024318:	b2c0      	uxtb	r0, r0
 802431a:	fb12 f204 	smulbb	r2, r2, r4
 802431e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024322:	fb01 2100 	mla	r1, r1, r0, r2
 8024326:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802432a:	10da      	asrs	r2, r3, #3
 802432c:	fa5f fc8c 	uxtb.w	ip, ip
 8024330:	00db      	lsls	r3, r3, #3
 8024332:	fb1c fc04 	smulbb	ip, ip, r4
 8024336:	b2db      	uxtb	r3, r3
 8024338:	b289      	uxth	r1, r1
 802433a:	fb03 c300 	mla	r3, r3, r0, ip
 802433e:	fa1f fc83 	uxth.w	ip, r3
 8024342:	1c4b      	adds	r3, r1, #1
 8024344:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024348:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802434c:	fb1e fe04 	smulbb	lr, lr, r4
 8024350:	f10c 0301 	add.w	r3, ip, #1
 8024354:	fb02 e200 	mla	r2, r2, r0, lr
 8024358:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802435c:	b292      	uxth	r2, r2
 802435e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024362:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024366:	430b      	orrs	r3, r1
 8024368:	1c51      	adds	r1, r2, #1
 802436a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802436e:	0952      	lsrs	r2, r2, #5
 8024370:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024374:	4313      	orrs	r3, r2
 8024376:	803b      	strh	r3, [r7, #0]
 8024378:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802437a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802437c:	441a      	add	r2, r3
 802437e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024380:	9229      	str	r2, [sp, #164]	; 0xa4
 8024382:	441d      	add	r5, r3
 8024384:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024386:	3b01      	subs	r3, #1
 8024388:	3702      	adds	r7, #2
 802438a:	931a      	str	r3, [sp, #104]	; 0x68
 802438c:	e694      	b.n	80240b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802438e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024390:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024392:	441c      	add	r4, r3
 8024394:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024396:	9429      	str	r4, [sp, #164]	; 0xa4
 8024398:	441d      	add	r5, r3
 802439a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802439c:	3b01      	subs	r3, #1
 802439e:	9309      	str	r3, [sp, #36]	; 0x24
 80243a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80243a2:	3302      	adds	r3, #2
 80243a4:	930c      	str	r3, [sp, #48]	; 0x30
 80243a6:	e666      	b.n	8024076 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80243a8:	d024      	beq.n	80243f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80243aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80243ac:	982b      	ldr	r0, [sp, #172]	; 0xac
 80243ae:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80243b0:	3b01      	subs	r3, #1
 80243b2:	fb00 4003 	mla	r0, r0, r3, r4
 80243b6:	1400      	asrs	r0, r0, #16
 80243b8:	f53f ae7b 	bmi.w	80240b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80243bc:	3901      	subs	r1, #1
 80243be:	4288      	cmp	r0, r1
 80243c0:	f6bf ae77 	bge.w	80240b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80243c4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80243c6:	fb01 5303 	mla	r3, r1, r3, r5
 80243ca:	141b      	asrs	r3, r3, #16
 80243cc:	f53f ae71 	bmi.w	80240b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80243d0:	3a01      	subs	r2, #1
 80243d2:	4293      	cmp	r3, r2
 80243d4:	f6bf ae6d 	bge.w	80240b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80243d8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80243dc:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80243e0:	f1bb 0f00 	cmp.w	fp, #0
 80243e4:	dc70      	bgt.n	80244c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80243e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80243e8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80243ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80243ee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80243f2:	930c      	str	r3, [sp, #48]	; 0x30
 80243f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80243f6:	2b00      	cmp	r3, #0
 80243f8:	f340 81be 	ble.w	8024778 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80243fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024400:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024404:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024408:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802440a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802440e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024412:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024416:	eef0 6a62 	vmov.f32	s13, s5
 802441a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802441e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024422:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024426:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802442a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802442e:	eef0 6a43 	vmov.f32	s13, s6
 8024432:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024436:	ee12 2a90 	vmov	r2, s5
 802443a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802443e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024442:	ee13 2a10 	vmov	r2, s6
 8024446:	932b      	str	r3, [sp, #172]	; 0xac
 8024448:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802444a:	fb92 f3f3 	sdiv	r3, r2, r3
 802444e:	932c      	str	r3, [sp, #176]	; 0xb0
 8024450:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024452:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8024454:	3b01      	subs	r3, #1
 8024456:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802445a:	9319      	str	r3, [sp, #100]	; 0x64
 802445c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802445e:	bf08      	it	eq
 8024460:	4613      	moveq	r3, r2
 8024462:	ee16 5a90 	vmov	r5, s13
 8024466:	9309      	str	r3, [sp, #36]	; 0x24
 8024468:	eeb0 3a67 	vmov.f32	s6, s15
 802446c:	eef0 2a47 	vmov.f32	s5, s14
 8024470:	e5f3      	b.n	802405a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024472:	2900      	cmp	r1, #0
 8024474:	f43f ae66 	beq.w	8024144 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024478:	f818 0000 	ldrb.w	r0, [r8, r0]
 802447c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8024480:	900a      	str	r0, [sp, #40]	; 0x28
 8024482:	0e00      	lsrs	r0, r0, #24
 8024484:	9013      	str	r0, [sp, #76]	; 0x4c
 8024486:	e65d      	b.n	8024144 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024488:	f113 0801 	adds.w	r8, r3, #1
 802448c:	f53f af74 	bmi.w	8024378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024490:	4540      	cmp	r0, r8
 8024492:	f6ff af71 	blt.w	8024378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024496:	f11c 0801 	adds.w	r8, ip, #1
 802449a:	f53f af6d 	bmi.w	8024378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802449e:	45c6      	cmp	lr, r8
 80244a0:	f6ff af6a 	blt.w	8024378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80244a4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80244a6:	9302      	str	r3, [sp, #8]
 80244a8:	b200      	sxth	r0, r0
 80244aa:	fa0f f38e 	sxth.w	r3, lr
 80244ae:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80244b2:	e9cd c203 	strd	ip, r2, [sp, #12]
 80244b6:	9301      	str	r3, [sp, #4]
 80244b8:	9000      	str	r0, [sp, #0]
 80244ba:	4633      	mov	r3, r6
 80244bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80244be:	981d      	ldr	r0, [sp, #116]	; 0x74
 80244c0:	4639      	mov	r1, r7
 80244c2:	f7ff fc62 	bl	8023d8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80244c6:	e757      	b.n	8024378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80244c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80244ca:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80244cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80244d0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80244d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80244d6:	1427      	asrs	r7, r4, #16
 80244d8:	142b      	asrs	r3, r5, #16
 80244da:	fb01 7303 	mla	r3, r1, r3, r7
 80244de:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80244e0:	18e7      	adds	r7, r4, r3
 80244e2:	5ce3      	ldrb	r3, [r4, r3]
 80244e4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80244e8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80244ec:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80244f0:	2a00      	cmp	r2, #0
 80244f2:	f000 8137 	beq.w	8024764 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80244f6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80244fa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80244fe:	9410      	str	r4, [sp, #64]	; 0x40
 8024500:	0e24      	lsrs	r4, r4, #24
 8024502:	9417      	str	r4, [sp, #92]	; 0x5c
 8024504:	b170      	cbz	r0, 8024524 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024506:	eb07 0e01 	add.w	lr, r7, r1
 802450a:	5c79      	ldrb	r1, [r7, r1]
 802450c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024510:	910b      	str	r1, [sp, #44]	; 0x2c
 8024512:	0e09      	lsrs	r1, r1, #24
 8024514:	9114      	str	r1, [sp, #80]	; 0x50
 8024516:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802451a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802451e:	9111      	str	r1, [sp, #68]	; 0x44
 8024520:	0e09      	lsrs	r1, r1, #24
 8024522:	9118      	str	r1, [sp, #96]	; 0x60
 8024524:	b292      	uxth	r2, r2
 8024526:	b280      	uxth	r0, r0
 8024528:	fb02 f800 	mul.w	r8, r2, r0
 802452c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024530:	0112      	lsls	r2, r2, #4
 8024532:	eba2 0e08 	sub.w	lr, r2, r8
 8024536:	b280      	uxth	r0, r0
 8024538:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802453c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802453e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024540:	fa1f fe8e 	uxth.w	lr, lr
 8024544:	1a12      	subs	r2, r2, r0
 8024546:	b292      	uxth	r2, r2
 8024548:	fb0e f101 	mul.w	r1, lr, r1
 802454c:	fb02 110c 	mla	r1, r2, ip, r1
 8024550:	fb00 1104 	mla	r1, r0, r4, r1
 8024554:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024556:	fb08 1104 	mla	r1, r8, r4, r1
 802455a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802455e:	2900      	cmp	r1, #0
 8024560:	f000 80f5 	beq.w	802474e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024564:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024568:	d019      	beq.n	802459e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802456a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802456e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024572:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024576:	fb0c fc03 	mul.w	ip, ip, r3
 802457a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802457e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024582:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024586:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802458a:	4453      	add	r3, sl
 802458c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024590:	0a1b      	lsrs	r3, r3, #8
 8024592:	0a3f      	lsrs	r7, r7, #8
 8024594:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024598:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802459c:	433b      	orrs	r3, r7
 802459e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80245a0:	2cff      	cmp	r4, #255	; 0xff
 80245a2:	d020      	beq.n	80245e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80245a4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80245a6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80245aa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80245ac:	4367      	muls	r7, r4
 80245ae:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80245b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80245b4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80245b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80245ba:	fb04 fa0a 	mul.w	sl, r4, sl
 80245be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80245c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245c6:	44bc      	add	ip, r7
 80245c8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80245cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245e0:	ea4c 040a 	orr.w	r4, ip, sl
 80245e4:	9410      	str	r4, [sp, #64]	; 0x40
 80245e6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80245e8:	2cff      	cmp	r4, #255	; 0xff
 80245ea:	d020      	beq.n	802462e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80245ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80245ee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80245f2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80245f4:	4367      	muls	r7, r4
 80245f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80245f8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80245fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80245fe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024602:	fb04 fa0a 	mul.w	sl, r4, sl
 8024606:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802460a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802460e:	44bc      	add	ip, r7
 8024610:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024614:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024618:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802461c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024620:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024624:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024628:	ea4c 040a 	orr.w	r4, ip, sl
 802462c:	940b      	str	r4, [sp, #44]	; 0x2c
 802462e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024630:	2cff      	cmp	r4, #255	; 0xff
 8024632:	d020      	beq.n	8024676 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8024634:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024636:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802463a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802463c:	4367      	muls	r7, r4
 802463e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024640:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024644:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024646:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802464a:	fb04 fa0a 	mul.w	sl, r4, sl
 802464e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024652:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024656:	44bc      	add	ip, r7
 8024658:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802465c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024660:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024664:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024668:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802466c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024670:	ea4c 040a 	orr.w	r4, ip, sl
 8024674:	9411      	str	r4, [sp, #68]	; 0x44
 8024676:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024678:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802467c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802467e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024682:	fb0e f707 	mul.w	r7, lr, r7
 8024686:	fb02 770c 	mla	r7, r2, ip, r7
 802468a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802468e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024690:	fb00 770c 	mla	r7, r0, ip, r7
 8024694:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024698:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802469a:	fb08 770c 	mla	r7, r8, ip, r7
 802469e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80246a2:	fb0e fe0c 	mul.w	lr, lr, ip
 80246a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80246aa:	fb02 e303 	mla	r3, r2, r3, lr
 80246ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80246b0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80246b2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80246b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80246b8:	fb00 330a 	mla	r3, r0, sl, r3
 80246bc:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80246c0:	fb08 3c0c 	mla	ip, r8, ip, r3
 80246c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80246c6:	f8b9 0000 	ldrh.w	r0, [r9]
 80246ca:	434b      	muls	r3, r1
 80246cc:	0a3f      	lsrs	r7, r7, #8
 80246ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80246d2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80246d6:	1c59      	adds	r1, r3, #1
 80246d8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80246dc:	ea47 070c 	orr.w	r7, r7, ip
 80246e0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80246e4:	1202      	asrs	r2, r0, #8
 80246e6:	0c3b      	lsrs	r3, r7, #16
 80246e8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80246ec:	b2c9      	uxtb	r1, r1
 80246ee:	fb13 f304 	smulbb	r3, r3, r4
 80246f2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80246f6:	fb02 3201 	mla	r2, r2, r1, r3
 80246fa:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80246fe:	10c3      	asrs	r3, r0, #3
 8024700:	b2ff      	uxtb	r7, r7
 8024702:	00c0      	lsls	r0, r0, #3
 8024704:	b292      	uxth	r2, r2
 8024706:	fb1c fc04 	smulbb	ip, ip, r4
 802470a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802470e:	b2c0      	uxtb	r0, r0
 8024710:	fb17 f704 	smulbb	r7, r7, r4
 8024714:	fb03 c301 	mla	r3, r3, r1, ip
 8024718:	fb00 7001 	mla	r0, r0, r1, r7
 802471c:	f102 0c01 	add.w	ip, r2, #1
 8024720:	b280      	uxth	r0, r0
 8024722:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8024726:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802472a:	1c42      	adds	r2, r0, #1
 802472c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024730:	b29b      	uxth	r3, r3
 8024732:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024736:	ea42 020c 	orr.w	r2, r2, ip
 802473a:	f103 0c01 	add.w	ip, r3, #1
 802473e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024742:	095b      	lsrs	r3, r3, #5
 8024744:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024748:	431a      	orrs	r2, r3
 802474a:	f8a9 2000 	strh.w	r2, [r9]
 802474e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024750:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024752:	441a      	add	r2, r3
 8024754:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024756:	9229      	str	r2, [sp, #164]	; 0xa4
 8024758:	f109 0902 	add.w	r9, r9, #2
 802475c:	441d      	add	r5, r3
 802475e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024762:	e63d      	b.n	80243e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024764:	2800      	cmp	r0, #0
 8024766:	f43f aedd 	beq.w	8024524 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802476a:	5c79      	ldrb	r1, [r7, r1]
 802476c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024770:	910b      	str	r1, [sp, #44]	; 0x2c
 8024772:	0e09      	lsrs	r1, r1, #24
 8024774:	9114      	str	r1, [sp, #80]	; 0x50
 8024776:	e6d5      	b.n	8024524 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024778:	b01f      	add	sp, #124	; 0x7c
 802477a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802477e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802477e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024782:	b089      	sub	sp, #36	; 0x24
 8024784:	9101      	str	r1, [sp, #4]
 8024786:	9801      	ldr	r0, [sp, #4]
 8024788:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802478c:	8800      	ldrh	r0, [r0, #0]
 802478e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8024792:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8024796:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802479a:	1206      	asrs	r6, r0, #8
 802479c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80247a0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80247a4:	9602      	str	r6, [sp, #8]
 80247a6:	10c6      	asrs	r6, r0, #3
 80247a8:	00c0      	lsls	r0, r0, #3
 80247aa:	b2c0      	uxtb	r0, r0
 80247ac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80247b0:	9004      	str	r0, [sp, #16]
 80247b2:	2f00      	cmp	r7, #0
 80247b4:	fb07 100c 	mla	r0, r7, ip, r1
 80247b8:	9603      	str	r6, [sp, #12]
 80247ba:	eb02 0e00 	add.w	lr, r2, r0
 80247be:	f2c0 810a 	blt.w	80249d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80247c2:	45b8      	cmp	r8, r7
 80247c4:	f340 8107 	ble.w	80249d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80247c8:	2900      	cmp	r1, #0
 80247ca:	f2c0 8102 	blt.w	80249d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80247ce:	458c      	cmp	ip, r1
 80247d0:	f340 80ff 	ble.w	80249d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80247d4:	5c12      	ldrb	r2, [r2, r0]
 80247d6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80247da:	1c4a      	adds	r2, r1, #1
 80247dc:	f100 80fe 	bmi.w	80249dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80247e0:	4594      	cmp	ip, r2
 80247e2:	f340 80fb 	ble.w	80249dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80247e6:	2d00      	cmp	r5, #0
 80247e8:	f000 80fa 	beq.w	80249e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80247ec:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80247f0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80247f4:	3701      	adds	r7, #1
 80247f6:	f100 80f7 	bmi.w	80249e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80247fa:	45b8      	cmp	r8, r7
 80247fc:	f340 80f4 	ble.w	80249e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8024800:	2c00      	cmp	r4, #0
 8024802:	f000 80f4 	beq.w	80249ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8024806:	2900      	cmp	r1, #0
 8024808:	eb0e 020c 	add.w	r2, lr, ip
 802480c:	f2c0 80ea 	blt.w	80249e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024810:	458c      	cmp	ip, r1
 8024812:	f340 80e7 	ble.w	80249e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024816:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802481a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802481e:	3101      	adds	r1, #1
 8024820:	f100 80e8 	bmi.w	80249f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8024824:	458c      	cmp	ip, r1
 8024826:	f340 80e5 	ble.w	80249f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802482a:	2d00      	cmp	r5, #0
 802482c:	f000 80e4 	beq.w	80249f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8024830:	7852      	ldrb	r2, [r2, #1]
 8024832:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8024836:	0e0b      	lsrs	r3, r1, #24
 8024838:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 802483c:	9300      	str	r3, [sp, #0]
 802483e:	b2a4      	uxth	r4, r4
 8024840:	b2ab      	uxth	r3, r5
 8024842:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8024846:	fb03 f904 	mul.w	r9, r3, r4
 802484a:	fb0a f505 	mul.w	r5, sl, r5
 802484e:	011b      	lsls	r3, r3, #4
 8024850:	eba3 0e09 	sub.w	lr, r3, r9
 8024854:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8024858:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 802485c:	0a28      	lsrs	r0, r5, #8
 802485e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024862:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8024866:	4405      	add	r5, r0
 8024868:	0a2d      	lsrs	r5, r5, #8
 802486a:	fb0a f303 	mul.w	r3, sl, r3
 802486e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8024872:	9005      	str	r0, [sp, #20]
 8024874:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8024878:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802487c:	0a1b      	lsrs	r3, r3, #8
 802487e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8024882:	9306      	str	r3, [sp, #24]
 8024884:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8024888:	fb0b f303 	mul.w	r3, fp, r3
 802488c:	0a1d      	lsrs	r5, r3, #8
 802488e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024892:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8024896:	fb0b f606 	mul.w	r6, fp, r6
 802489a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802489e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80248a2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80248a6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80248aa:	fb08 f707 	mul.w	r7, r8, r7
 80248ae:	441d      	add	r5, r3
 80248b0:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80248b4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80248b8:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80248bc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80248c0:	fb08 fc0c 	mul.w	ip, r8, ip
 80248c4:	0a1b      	lsrs	r3, r3, #8
 80248c6:	9307      	str	r3, [sp, #28]
 80248c8:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80248cc:	0e0b      	lsrs	r3, r1, #24
 80248ce:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80248d2:	435f      	muls	r7, r3
 80248d4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80248d8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80248dc:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80248e0:	4460      	add	r0, ip
 80248e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80248e6:	b2a4      	uxth	r4, r4
 80248e8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80248ec:	0a2d      	lsrs	r5, r5, #8
 80248ee:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80248f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80248f6:	fa1f fe8e 	uxth.w	lr, lr
 80248fa:	4359      	muls	r1, r3
 80248fc:	1b12      	subs	r2, r2, r4
 80248fe:	9b05      	ldr	r3, [sp, #20]
 8024900:	44bc      	add	ip, r7
 8024902:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024906:	b292      	uxth	r2, r2
 8024908:	fb05 f50e 	mul.w	r5, r5, lr
 802490c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024910:	fb03 5502 	mla	r5, r3, r2, r5
 8024914:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024918:	9b06      	ldr	r3, [sp, #24]
 802491a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 802491e:	0a36      	lsrs	r6, r6, #8
 8024920:	0a00      	lsrs	r0, r0, #8
 8024922:	fb0c 5509 	mla	r5, ip, r9, r5
 8024926:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802492a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802492e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024932:	fb00 5504 	mla	r5, r0, r4, r5
 8024936:	fb0e f606 	mul.w	r6, lr, r6
 802493a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 802493e:	0a09      	lsrs	r1, r1, #8
 8024940:	9b07      	ldr	r3, [sp, #28]
 8024942:	fb02 6000 	mla	r0, r2, r0, r6
 8024946:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802494a:	fb09 0001 	mla	r0, r9, r1, r0
 802494e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024952:	fb0e fe0b 	mul.w	lr, lr, fp
 8024956:	fb04 0003 	mla	r0, r4, r3, r0
 802495a:	fb02 e20a 	mla	r2, r2, sl, lr
 802495e:	9b00      	ldr	r3, [sp, #0]
 8024960:	fb04 2408 	mla	r4, r4, r8, r2
 8024964:	fb09 4903 	mla	r9, r9, r3, r4
 8024968:	ea6f 2929 	mvn.w	r9, r9, asr #8
 802496c:	9b02      	ldr	r3, [sp, #8]
 802496e:	9a04      	ldr	r2, [sp, #16]
 8024970:	fa5f f989 	uxtb.w	r9, r9
 8024974:	fb03 f109 	mul.w	r1, r3, r9
 8024978:	9b03      	ldr	r3, [sp, #12]
 802497a:	0a2d      	lsrs	r5, r5, #8
 802497c:	0a00      	lsrs	r0, r0, #8
 802497e:	fb03 f309 	mul.w	r3, r3, r9
 8024982:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024986:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802498a:	4305      	orrs	r5, r0
 802498c:	fb02 f909 	mul.w	r9, r2, r9
 8024990:	1c58      	adds	r0, r3, #1
 8024992:	1c4a      	adds	r2, r1, #1
 8024994:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024998:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802499c:	0a2b      	lsrs	r3, r5, #8
 802499e:	0c2a      	lsrs	r2, r5, #16
 80249a0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80249a4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80249a8:	00db      	lsls	r3, r3, #3
 80249aa:	0212      	lsls	r2, r2, #8
 80249ac:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80249b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80249b4:	4313      	orrs	r3, r2
 80249b6:	f109 0201 	add.w	r2, r9, #1
 80249ba:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80249be:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80249c2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80249c6:	431d      	orrs	r5, r3
 80249c8:	9b01      	ldr	r3, [sp, #4]
 80249ca:	801d      	strh	r5, [r3, #0]
 80249cc:	b009      	add	sp, #36	; 0x24
 80249ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80249d2:	2000      	movs	r0, #0
 80249d4:	e701      	b.n	80247da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80249d6:	2600      	movs	r6, #0
 80249d8:	4630      	mov	r0, r6
 80249da:	e70b      	b.n	80247f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80249dc:	2600      	movs	r6, #0
 80249de:	e709      	b.n	80247f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80249e0:	462e      	mov	r6, r5
 80249e2:	e707      	b.n	80247f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80249e4:	2700      	movs	r7, #0
 80249e6:	e71a      	b.n	802481e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80249e8:	2100      	movs	r1, #0
 80249ea:	460f      	mov	r7, r1
 80249ec:	e723      	b.n	8024836 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80249ee:	4621      	mov	r1, r4
 80249f0:	4627      	mov	r7, r4
 80249f2:	e720      	b.n	8024836 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80249f4:	2100      	movs	r1, #0
 80249f6:	e71e      	b.n	8024836 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80249f8:	4629      	mov	r1, r5
 80249fa:	e71c      	b.n	8024836 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080249fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80249fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a00:	b09b      	sub	sp, #108	; 0x6c
 8024a02:	9218      	str	r2, [sp, #96]	; 0x60
 8024a04:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024a06:	9116      	str	r1, [sp, #88]	; 0x58
 8024a08:	9307      	str	r3, [sp, #28]
 8024a0a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024a0e:	9019      	str	r0, [sp, #100]	; 0x64
 8024a10:	6850      	ldr	r0, [r2, #4]
 8024a12:	6812      	ldr	r2, [r2, #0]
 8024a14:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8024a16:	fb00 1303 	mla	r3, r0, r3, r1
 8024a1a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024a1e:	930a      	str	r3, [sp, #40]	; 0x28
 8024a20:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a22:	681b      	ldr	r3, [r3, #0]
 8024a24:	930f      	str	r3, [sp, #60]	; 0x3c
 8024a26:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a28:	685e      	ldr	r6, [r3, #4]
 8024a2a:	3604      	adds	r6, #4
 8024a2c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024a2e:	2b00      	cmp	r3, #0
 8024a30:	dc03      	bgt.n	8024a3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8024a32:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024a34:	2b00      	cmp	r3, #0
 8024a36:	f340 8373 	ble.w	8025120 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024a3a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a3c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024a40:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024a44:	1e48      	subs	r0, r1, #1
 8024a46:	1e57      	subs	r7, r2, #1
 8024a48:	9b07      	ldr	r3, [sp, #28]
 8024a4a:	2b00      	cmp	r3, #0
 8024a4c:	f340 8190 	ble.w	8024d70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8024a50:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024a52:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024a56:	ea4f 4325 	mov.w	r3, r5, asr #16
 8024a5a:	d406      	bmi.n	8024a6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024a5c:	4584      	cmp	ip, r0
 8024a5e:	da04      	bge.n	8024a6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024a60:	2b00      	cmp	r3, #0
 8024a62:	db02      	blt.n	8024a6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024a64:	42bb      	cmp	r3, r7
 8024a66:	f2c0 8184 	blt.w	8024d72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8024a6a:	f11c 0c01 	adds.w	ip, ip, #1
 8024a6e:	f100 8172 	bmi.w	8024d56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a72:	4561      	cmp	r1, ip
 8024a74:	f2c0 816f 	blt.w	8024d56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a78:	3301      	adds	r3, #1
 8024a7a:	f100 816c 	bmi.w	8024d56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a7e:	429a      	cmp	r2, r3
 8024a80:	f2c0 8169 	blt.w	8024d56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024a84:	9b07      	ldr	r3, [sp, #28]
 8024a86:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024a88:	9317      	str	r3, [sp, #92]	; 0x5c
 8024a8a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024a8c:	2b00      	cmp	r3, #0
 8024a8e:	f340 818e 	ble.w	8024dae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8024a92:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024a94:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024a98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a9a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8024a9e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024aa0:	141b      	asrs	r3, r3, #16
 8024aa2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024aa6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024aaa:	f100 81d1 	bmi.w	8024e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024aae:	f101 38ff 	add.w	r8, r1, #4294967295
 8024ab2:	4543      	cmp	r3, r8
 8024ab4:	f280 81cc 	bge.w	8024e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024ab8:	f1bc 0f00 	cmp.w	ip, #0
 8024abc:	f2c0 81c8 	blt.w	8024e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024ac0:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024ac4:	45c4      	cmp	ip, r8
 8024ac6:	f280 81c3 	bge.w	8024e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024aca:	b209      	sxth	r1, r1
 8024acc:	fb0c 3301 	mla	r3, ip, r1, r3
 8024ad0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024ad2:	eb04 0803 	add.w	r8, r4, r3
 8024ad6:	5ce3      	ldrb	r3, [r4, r3]
 8024ad8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024adc:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024ae0:	2a00      	cmp	r2, #0
 8024ae2:	f000 81aa 	beq.w	8024e3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8024ae6:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024aea:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8024aee:	940b      	str	r4, [sp, #44]	; 0x2c
 8024af0:	0e24      	lsrs	r4, r4, #24
 8024af2:	9412      	str	r4, [sp, #72]	; 0x48
 8024af4:	b178      	cbz	r0, 8024b16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024af6:	eb08 0c01 	add.w	ip, r8, r1
 8024afa:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024afe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024b02:	9108      	str	r1, [sp, #32]
 8024b04:	0e09      	lsrs	r1, r1, #24
 8024b06:	9110      	str	r1, [sp, #64]	; 0x40
 8024b08:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8024b0c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024b10:	910c      	str	r1, [sp, #48]	; 0x30
 8024b12:	0e09      	lsrs	r1, r1, #24
 8024b14:	9113      	str	r1, [sp, #76]	; 0x4c
 8024b16:	b292      	uxth	r2, r2
 8024b18:	b280      	uxth	r0, r0
 8024b1a:	fb02 f900 	mul.w	r9, r2, r0
 8024b1e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024b22:	0112      	lsls	r2, r2, #4
 8024b24:	eba2 0809 	sub.w	r8, r2, r9
 8024b28:	b280      	uxth	r0, r0
 8024b2a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024b2e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8024b30:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024b32:	fa1f f888 	uxth.w	r8, r8
 8024b36:	1a12      	subs	r2, r2, r0
 8024b38:	b292      	uxth	r2, r2
 8024b3a:	fb08 f101 	mul.w	r1, r8, r1
 8024b3e:	fb02 110e 	mla	r1, r2, lr, r1
 8024b42:	fb00 1104 	mla	r1, r0, r4, r1
 8024b46:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024b48:	fb09 1104 	mla	r1, r9, r4, r1
 8024b4c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024b50:	2900      	cmp	r1, #0
 8024b52:	f000 80f5 	beq.w	8024d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024b56:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024b5a:	d01b      	beq.n	8024b94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024b5c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024b60:	fb0e fa0a 	mul.w	sl, lr, sl
 8024b64:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024b68:	fb0e fe03 	mul.w	lr, lr, r3
 8024b6c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024b70:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024b74:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024b78:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024b7c:	4453      	add	r3, sl
 8024b7e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024b82:	0a1b      	lsrs	r3, r3, #8
 8024b84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b88:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024b8c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024b90:	ea43 030c 	orr.w	r3, r3, ip
 8024b94:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024b96:	2cff      	cmp	r4, #255	; 0xff
 8024b98:	d021      	beq.n	8024bde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8024b9a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b9c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024ba0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024ba2:	fb04 fb0b 	mul.w	fp, r4, fp
 8024ba6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024ba8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024bac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024bae:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024bb2:	fb04 fa0a 	mul.w	sl, r4, sl
 8024bb6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024bba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024bbe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024bc2:	44de      	add	lr, fp
 8024bc4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024bc8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024bcc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024bd0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024bd4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024bd8:	ea4e 040a 	orr.w	r4, lr, sl
 8024bdc:	940b      	str	r4, [sp, #44]	; 0x2c
 8024bde:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024be0:	2cff      	cmp	r4, #255	; 0xff
 8024be2:	d021      	beq.n	8024c28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024be4:	9c08      	ldr	r4, [sp, #32]
 8024be6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024bea:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024bec:	fb04 fb0b 	mul.w	fp, r4, fp
 8024bf0:	9c08      	ldr	r4, [sp, #32]
 8024bf2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024bf6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024bf8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024bfc:	fb04 fa0a 	mul.w	sl, r4, sl
 8024c00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024c04:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024c08:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024c0c:	44de      	add	lr, fp
 8024c0e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024c12:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024c16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024c1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024c1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024c22:	ea4e 040a 	orr.w	r4, lr, sl
 8024c26:	9408      	str	r4, [sp, #32]
 8024c28:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024c2a:	2cff      	cmp	r4, #255	; 0xff
 8024c2c:	d021      	beq.n	8024c72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8024c2e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024c30:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024c34:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024c36:	fb04 fb0b 	mul.w	fp, r4, fp
 8024c3a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024c3c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024c40:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024c42:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024c46:	fb04 fa0a 	mul.w	sl, r4, sl
 8024c4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024c4e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024c52:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024c56:	44de      	add	lr, fp
 8024c58:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024c5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024c60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024c64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024c68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024c6c:	ea4e 040a 	orr.w	r4, lr, sl
 8024c70:	940c      	str	r4, [sp, #48]	; 0x30
 8024c72:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024c74:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024c78:	9c08      	ldr	r4, [sp, #32]
 8024c7a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024c7e:	fb08 fc0c 	mul.w	ip, r8, ip
 8024c82:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024c86:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024c8a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024c8c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024c90:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024c94:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024c96:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024c9a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024c9e:	fb08 f80e 	mul.w	r8, r8, lr
 8024ca2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024ca6:	fb02 8303 	mla	r3, r2, r3, r8
 8024caa:	9a08      	ldr	r2, [sp, #32]
 8024cac:	f8b7 8000 	ldrh.w	r8, [r7]
 8024cb0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024cb4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024cb6:	fb00 330a 	mla	r3, r0, sl, r3
 8024cba:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8024cbe:	fb09 3900 	mla	r9, r9, r0, r3
 8024cc2:	43c9      	mvns	r1, r1
 8024cc4:	ea4f 2228 	mov.w	r2, r8, asr #8
 8024cc8:	fa5f fe81 	uxtb.w	lr, r1
 8024ccc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024cd0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024cd4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024cd8:	fb02 f20e 	mul.w	r2, r2, lr
 8024cdc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ce0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024ce4:	ea4c 0c09 	orr.w	ip, ip, r9
 8024ce8:	1c53      	adds	r3, r2, #1
 8024cea:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8024cee:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8024cf2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8024cf6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024cfa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024cfe:	4a63      	ldr	r2, [pc, #396]	; (8024e8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8024d00:	fb00 f00e 	mul.w	r0, r0, lr
 8024d04:	b2db      	uxtb	r3, r3
 8024d06:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8024d0a:	1c43      	adds	r3, r0, #1
 8024d0c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024d10:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8024d14:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8024d18:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024d1c:	b2c9      	uxtb	r1, r1
 8024d1e:	00db      	lsls	r3, r3, #3
 8024d20:	fb01 f10e 	mul.w	r1, r1, lr
 8024d24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024d28:	4313      	orrs	r3, r2
 8024d2a:	1c4a      	adds	r2, r1, #1
 8024d2c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024d30:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024d34:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024d38:	ea4c 0c03 	orr.w	ip, ip, r3
 8024d3c:	f8a7 c000 	strh.w	ip, [r7]
 8024d40:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024d42:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024d44:	441a      	add	r2, r3
 8024d46:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024d48:	9225      	str	r2, [sp, #148]	; 0x94
 8024d4a:	441d      	add	r5, r3
 8024d4c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024d4e:	3b01      	subs	r3, #1
 8024d50:	3702      	adds	r7, #2
 8024d52:	9317      	str	r3, [sp, #92]	; 0x5c
 8024d54:	e699      	b.n	8024a8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024d56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024d58:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024d5a:	441c      	add	r4, r3
 8024d5c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024d5e:	9425      	str	r4, [sp, #148]	; 0x94
 8024d60:	441d      	add	r5, r3
 8024d62:	9b07      	ldr	r3, [sp, #28]
 8024d64:	3b01      	subs	r3, #1
 8024d66:	9307      	str	r3, [sp, #28]
 8024d68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024d6a:	3302      	adds	r3, #2
 8024d6c:	930a      	str	r3, [sp, #40]	; 0x28
 8024d6e:	e66b      	b.n	8024a48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8024d70:	d024      	beq.n	8024dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8024d72:	9b07      	ldr	r3, [sp, #28]
 8024d74:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024d76:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024d78:	3b01      	subs	r3, #1
 8024d7a:	fb00 4003 	mla	r0, r0, r3, r4
 8024d7e:	1400      	asrs	r0, r0, #16
 8024d80:	f53f ae80 	bmi.w	8024a84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024d84:	3901      	subs	r1, #1
 8024d86:	4288      	cmp	r0, r1
 8024d88:	f6bf ae7c 	bge.w	8024a84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024d8c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024d8e:	fb01 5303 	mla	r3, r1, r3, r5
 8024d92:	141b      	asrs	r3, r3, #16
 8024d94:	f53f ae76 	bmi.w	8024a84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024d98:	3a01      	subs	r2, #1
 8024d9a:	4293      	cmp	r3, r2
 8024d9c:	f6bf ae72 	bge.w	8024a84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024da0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024da4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024da8:	f1bb 0f00 	cmp.w	fp, #0
 8024dac:	dc70      	bgt.n	8024e90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8024dae:	9b07      	ldr	r3, [sp, #28]
 8024db0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024db4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024db6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024dba:	930a      	str	r3, [sp, #40]	; 0x28
 8024dbc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024dbe:	2b00      	cmp	r3, #0
 8024dc0:	f340 81ae 	ble.w	8025120 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024dc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024dc8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024dcc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024dd0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024dd2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024dd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024dda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024dde:	eef0 6a62 	vmov.f32	s13, s5
 8024de2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024de6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024dea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024dee:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8024df2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024df6:	eef0 6a43 	vmov.f32	s13, s6
 8024dfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024dfe:	ee12 2a90 	vmov	r2, s5
 8024e02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024e06:	fb92 f3f3 	sdiv	r3, r2, r3
 8024e0a:	ee13 2a10 	vmov	r2, s6
 8024e0e:	9327      	str	r3, [sp, #156]	; 0x9c
 8024e10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e12:	fb92 f3f3 	sdiv	r3, r2, r3
 8024e16:	9328      	str	r3, [sp, #160]	; 0xa0
 8024e18:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024e1a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024e1c:	3b01      	subs	r3, #1
 8024e1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024e22:	9316      	str	r3, [sp, #88]	; 0x58
 8024e24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e26:	bf08      	it	eq
 8024e28:	4613      	moveq	r3, r2
 8024e2a:	ee16 5a90 	vmov	r5, s13
 8024e2e:	9307      	str	r3, [sp, #28]
 8024e30:	eeb0 3a67 	vmov.f32	s6, s15
 8024e34:	eef0 2a47 	vmov.f32	s5, s14
 8024e38:	e5f8      	b.n	8024a2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8024e3a:	2800      	cmp	r0, #0
 8024e3c:	f43f ae6b 	beq.w	8024b16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024e40:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024e44:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024e48:	9108      	str	r1, [sp, #32]
 8024e4a:	0e09      	lsrs	r1, r1, #24
 8024e4c:	9110      	str	r1, [sp, #64]	; 0x40
 8024e4e:	e662      	b.n	8024b16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024e50:	f113 0801 	adds.w	r8, r3, #1
 8024e54:	f53f af74 	bmi.w	8024d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024e58:	4541      	cmp	r1, r8
 8024e5a:	f6ff af71 	blt.w	8024d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024e5e:	f11c 0801 	adds.w	r8, ip, #1
 8024e62:	f53f af6d 	bmi.w	8024d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024e66:	45c6      	cmp	lr, r8
 8024e68:	f6ff af6a 	blt.w	8024d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024e6c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8024e70:	b209      	sxth	r1, r1
 8024e72:	fa0f f38e 	sxth.w	r3, lr
 8024e76:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024e7a:	9301      	str	r3, [sp, #4]
 8024e7c:	9100      	str	r1, [sp, #0]
 8024e7e:	4633      	mov	r3, r6
 8024e80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024e82:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024e84:	4639      	mov	r1, r7
 8024e86:	f7ff fc7a 	bl	802477e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8024e8a:	e759      	b.n	8024d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024e8c:	fffff800 	.word	0xfffff800
 8024e90:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024e92:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024e94:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024e98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024e9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024e9e:	1427      	asrs	r7, r4, #16
 8024ea0:	142b      	asrs	r3, r5, #16
 8024ea2:	fb01 7303 	mla	r3, r1, r3, r7
 8024ea6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024ea8:	18e7      	adds	r7, r4, r3
 8024eaa:	5ce3      	ldrb	r3, [r4, r3]
 8024eac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024eb0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024eb4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024eb8:	2a00      	cmp	r2, #0
 8024eba:	f000 8127 	beq.w	802510c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024ebe:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024ec2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8024ec6:	940d      	str	r4, [sp, #52]	; 0x34
 8024ec8:	0e24      	lsrs	r4, r4, #24
 8024eca:	9414      	str	r4, [sp, #80]	; 0x50
 8024ecc:	b170      	cbz	r0, 8024eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024ece:	eb07 0e01 	add.w	lr, r7, r1
 8024ed2:	5c79      	ldrb	r1, [r7, r1]
 8024ed4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024ed8:	9109      	str	r1, [sp, #36]	; 0x24
 8024eda:	0e09      	lsrs	r1, r1, #24
 8024edc:	9111      	str	r1, [sp, #68]	; 0x44
 8024ede:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024ee2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024ee6:	910e      	str	r1, [sp, #56]	; 0x38
 8024ee8:	0e09      	lsrs	r1, r1, #24
 8024eea:	9115      	str	r1, [sp, #84]	; 0x54
 8024eec:	b292      	uxth	r2, r2
 8024eee:	b280      	uxth	r0, r0
 8024ef0:	fb02 f800 	mul.w	r8, r2, r0
 8024ef4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024ef8:	0112      	lsls	r2, r2, #4
 8024efa:	eba2 0e08 	sub.w	lr, r2, r8
 8024efe:	b280      	uxth	r0, r0
 8024f00:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024f04:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024f06:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024f08:	fa1f fe8e 	uxth.w	lr, lr
 8024f0c:	1a09      	subs	r1, r1, r0
 8024f0e:	b289      	uxth	r1, r1
 8024f10:	fb0e f202 	mul.w	r2, lr, r2
 8024f14:	fb01 220c 	mla	r2, r1, ip, r2
 8024f18:	fb00 2204 	mla	r2, r0, r4, r2
 8024f1c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024f1e:	fb08 2204 	mla	r2, r8, r4, r2
 8024f22:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024f26:	2a00      	cmp	r2, #0
 8024f28:	f000 80e5 	beq.w	80250f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8024f2c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024f30:	d019      	beq.n	8024f66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8024f32:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024f36:	fb0c fa0a 	mul.w	sl, ip, sl
 8024f3a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024f3e:	fb0c fc03 	mul.w	ip, ip, r3
 8024f42:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024f46:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024f4a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024f4e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024f52:	4453      	add	r3, sl
 8024f54:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024f58:	0a1b      	lsrs	r3, r3, #8
 8024f5a:	0a3f      	lsrs	r7, r7, #8
 8024f5c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024f60:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024f64:	433b      	orrs	r3, r7
 8024f66:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024f68:	2cff      	cmp	r4, #255	; 0xff
 8024f6a:	d020      	beq.n	8024fae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8024f6c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024f6e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024f72:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024f74:	4367      	muls	r7, r4
 8024f76:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024f78:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024f7c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024f7e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024f82:	fb04 fa0a 	mul.w	sl, r4, sl
 8024f86:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024f8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f8e:	44bc      	add	ip, r7
 8024f90:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024f94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024f98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024fa0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024fa4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024fa8:	ea4c 040a 	orr.w	r4, ip, sl
 8024fac:	940d      	str	r4, [sp, #52]	; 0x34
 8024fae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024fb0:	2cff      	cmp	r4, #255	; 0xff
 8024fb2:	d020      	beq.n	8024ff6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8024fb4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024fb6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024fba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024fbc:	4367      	muls	r7, r4
 8024fbe:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024fc0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024fc4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024fc6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024fca:	fb04 fa0a 	mul.w	sl, r4, sl
 8024fce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024fd2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024fd6:	44bc      	add	ip, r7
 8024fd8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024fdc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024fe0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024fe4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024fe8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024fec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ff0:	ea4c 040a 	orr.w	r4, ip, sl
 8024ff4:	9409      	str	r4, [sp, #36]	; 0x24
 8024ff6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024ff8:	2cff      	cmp	r4, #255	; 0xff
 8024ffa:	d020      	beq.n	802503e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8024ffc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024ffe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8025002:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025004:	4367      	muls	r7, r4
 8025006:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025008:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802500c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802500e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025012:	fb04 fa0a 	mul.w	sl, r4, sl
 8025016:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802501a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802501e:	44bc      	add	ip, r7
 8025020:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025024:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025028:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802502c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025030:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025034:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025038:	ea4c 040a 	orr.w	r4, ip, sl
 802503c:	940e      	str	r4, [sp, #56]	; 0x38
 802503e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025040:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8025044:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8025046:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802504a:	fb0e f707 	mul.w	r7, lr, r7
 802504e:	fb01 770c 	mla	r7, r1, ip, r7
 8025052:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025056:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025058:	fb00 770c 	mla	r7, r0, ip, r7
 802505c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025060:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025062:	fb08 770c 	mla	r7, r8, ip, r7
 8025066:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802506a:	fb0e fe0c 	mul.w	lr, lr, ip
 802506e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025072:	fb01 e303 	mla	r3, r1, r3, lr
 8025076:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025078:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802507c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802507e:	fb00 330a 	mla	r3, r0, sl, r3
 8025082:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025086:	fb08 3c0c 	mla	ip, r8, ip, r3
 802508a:	f8b9 3000 	ldrh.w	r3, [r9]
 802508e:	43d2      	mvns	r2, r2
 8025090:	1218      	asrs	r0, r3, #8
 8025092:	b2d2      	uxtb	r2, r2
 8025094:	10d9      	asrs	r1, r3, #3
 8025096:	0a3f      	lsrs	r7, r7, #8
 8025098:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802509c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80250a0:	00db      	lsls	r3, r3, #3
 80250a2:	4350      	muls	r0, r2
 80250a4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80250a8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80250ac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80250b0:	b2db      	uxtb	r3, r3
 80250b2:	ea47 070c 	orr.w	r7, r7, ip
 80250b6:	4351      	muls	r1, r2
 80250b8:	4353      	muls	r3, r2
 80250ba:	1c42      	adds	r2, r0, #1
 80250bc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80250c0:	0c3a      	lsrs	r2, r7, #16
 80250c2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80250c6:	4a18      	ldr	r2, [pc, #96]	; (8025128 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80250c8:	b2c0      	uxtb	r0, r0
 80250ca:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80250ce:	1c4a      	adds	r2, r1, #1
 80250d0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80250d4:	0a3a      	lsrs	r2, r7, #8
 80250d6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80250da:	00c9      	lsls	r1, r1, #3
 80250dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80250e0:	4301      	orrs	r1, r0
 80250e2:	1c58      	adds	r0, r3, #1
 80250e4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80250e8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80250ec:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80250f0:	4308      	orrs	r0, r1
 80250f2:	f8a9 0000 	strh.w	r0, [r9]
 80250f6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80250f8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80250fa:	441a      	add	r2, r3
 80250fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80250fe:	9225      	str	r2, [sp, #148]	; 0x94
 8025100:	f109 0902 	add.w	r9, r9, #2
 8025104:	441d      	add	r5, r3
 8025106:	f10b 3bff 	add.w	fp, fp, #4294967295
 802510a:	e64d      	b.n	8024da8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 802510c:	2800      	cmp	r0, #0
 802510e:	f43f aeed 	beq.w	8024eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8025112:	5c79      	ldrb	r1, [r7, r1]
 8025114:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025118:	9109      	str	r1, [sp, #36]	; 0x24
 802511a:	0e09      	lsrs	r1, r1, #24
 802511c:	9111      	str	r1, [sp, #68]	; 0x44
 802511e:	e6e5      	b.n	8024eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8025120:	b01b      	add	sp, #108	; 0x6c
 8025122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025126:	bf00      	nop
 8025128:	fffff800 	.word	0xfffff800

0802512c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 802512c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025130:	b085      	sub	sp, #20
 8025132:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025136:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802513a:	9103      	str	r1, [sp, #12]
 802513c:	fb00 7406 	mla	r4, r0, r6, r7
 8025140:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8025144:	2800      	cmp	r0, #0
 8025146:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802514a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802514e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025152:	9501      	str	r5, [sp, #4]
 8025154:	eb03 0904 	add.w	r9, r3, r4
 8025158:	f2c0 8150 	blt.w	80253fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802515c:	4583      	cmp	fp, r0
 802515e:	f340 814d 	ble.w	80253fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8025162:	2f00      	cmp	r7, #0
 8025164:	f2c0 8146 	blt.w	80253f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8025168:	42be      	cmp	r6, r7
 802516a:	f340 8143 	ble.w	80253f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802516e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8025172:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8025176:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802517a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802517e:	4355      	muls	r5, r2
 8025180:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025184:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025188:	fb0c f203 	mul.w	r2, ip, r3
 802518c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025190:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025194:	441d      	add	r5, r3
 8025196:	f102 0320 	add.w	r3, r2, #32
 802519a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802519e:	0a1b      	lsrs	r3, r3, #8
 80251a0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80251a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80251a8:	431c      	orrs	r4, r3
 80251aa:	1c7b      	adds	r3, r7, #1
 80251ac:	f100 812b 	bmi.w	8025406 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80251b0:	429e      	cmp	r6, r3
 80251b2:	f340 8128 	ble.w	8025406 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80251b6:	2900      	cmp	r1, #0
 80251b8:	f000 8128 	beq.w	802540c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80251bc:	9a01      	ldr	r2, [sp, #4]
 80251be:	f899 3001 	ldrb.w	r3, [r9, #1]
 80251c2:	8855      	ldrh	r5, [r2, #2]
 80251c4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80251c8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80251cc:	fb08 f802 	mul.w	r8, r8, r2
 80251d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80251d4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80251d8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80251dc:	435d      	muls	r5, r3
 80251de:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80251e2:	44d0      	add	r8, sl
 80251e4:	f105 0a20 	add.w	sl, r5, #32
 80251e8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80251ec:	0a2d      	lsrs	r5, r5, #8
 80251ee:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80251f2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80251f6:	432a      	orrs	r2, r5
 80251f8:	3001      	adds	r0, #1
 80251fa:	f100 810d 	bmi.w	8025418 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80251fe:	4583      	cmp	fp, r0
 8025200:	f340 810a 	ble.w	8025418 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8025204:	f1be 0f00 	cmp.w	lr, #0
 8025208:	f000 810b 	beq.w	8025422 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802520c:	2f00      	cmp	r7, #0
 802520e:	f2c0 8100 	blt.w	8025412 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8025212:	42be      	cmp	r6, r7
 8025214:	f340 80fd 	ble.w	8025412 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8025218:	9801      	ldr	r0, [sp, #4]
 802521a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802521e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025222:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025226:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802522a:	fb0a fa00 	mul.w	sl, sl, r0
 802522e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025232:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025236:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802523a:	fb05 f808 	mul.w	r8, r5, r8
 802523e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025242:	4482      	add	sl, r0
 8025244:	f108 0020 	add.w	r0, r8, #32
 8025248:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802524c:	0a00      	lsrs	r0, r0, #8
 802524e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025252:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025256:	ea4b 0b00 	orr.w	fp, fp, r0
 802525a:	3701      	adds	r7, #1
 802525c:	f100 80e6 	bmi.w	802542c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8025260:	42be      	cmp	r6, r7
 8025262:	f340 80e3 	ble.w	802542c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8025266:	2900      	cmp	r1, #0
 8025268:	f000 80e3 	beq.w	8025432 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802526c:	3601      	adds	r6, #1
 802526e:	9801      	ldr	r0, [sp, #4]
 8025270:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025274:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025278:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802527c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025280:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025284:	fb09 f906 	mul.w	r9, r9, r6
 8025288:	fb07 f800 	mul.w	r8, r7, r0
 802528c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025290:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025294:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025298:	44d1      	add	r9, sl
 802529a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802529e:	f108 0020 	add.w	r0, r8, #32
 80252a2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80252a6:	0a00      	lsrs	r0, r0, #8
 80252a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80252ac:	4330      	orrs	r0, r6
 80252ae:	b28e      	uxth	r6, r1
 80252b0:	fa1f f98e 	uxth.w	r9, lr
 80252b4:	fb06 f809 	mul.w	r8, r6, r9
 80252b8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80252bc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80252c0:	0136      	lsls	r6, r6, #4
 80252c2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80252c6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80252ca:	9601      	str	r6, [sp, #4]
 80252cc:	ea4a 0404 	orr.w	r4, sl, r4
 80252d0:	fa1f f689 	uxth.w	r6, r9
 80252d4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80252d8:	fb11 f90e 	smulbb	r9, r1, lr
 80252dc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80252e0:	9602      	str	r6, [sp, #8]
 80252e2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80252e6:	4626      	mov	r6, r4
 80252e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80252ec:	f1ce 0410 	rsb	r4, lr, #16
 80252f0:	1a64      	subs	r4, r4, r1
 80252f2:	ea4a 0202 	orr.w	r2, sl, r2
 80252f6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80252fa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80252fe:	434a      	muls	r2, r1
 8025300:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025304:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025308:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802530c:	fb04 2406 	mla	r4, r4, r6, r2
 8025310:	ea4a 0000 	orr.w	r0, sl, r0
 8025314:	fb09 4200 	mla	r2, r9, r0, r4
 8025318:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802531c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025320:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025324:	ea44 0b0b 	orr.w	fp, r4, fp
 8025328:	9c01      	ldr	r4, [sp, #4]
 802532a:	9e02      	ldr	r6, [sp, #8]
 802532c:	9903      	ldr	r1, [sp, #12]
 802532e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8025332:	1ba4      	subs	r4, r4, r6
 8025334:	9e01      	ldr	r6, [sp, #4]
 8025336:	8808      	ldrh	r0, [r1, #0]
 8025338:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 802533c:	eba6 0608 	sub.w	r6, r6, r8
 8025340:	b2b6      	uxth	r6, r6
 8025342:	b2a4      	uxth	r4, r4
 8025344:	4373      	muls	r3, r6
 8025346:	fb0c 3304 	mla	r3, ip, r4, r3
 802534a:	9c02      	ldr	r4, [sp, #8]
 802534c:	fb04 3505 	mla	r5, r4, r5, r3
 8025350:	fb08 5707 	mla	r7, r8, r7, r5
 8025354:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025358:	b289      	uxth	r1, r1
 802535a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802535e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8025362:	434f      	muls	r7, r1
 8025364:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025368:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802536c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025370:	1c7b      	adds	r3, r7, #1
 8025372:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025376:	ea42 0e0e 	orr.w	lr, r2, lr
 802537a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802537e:	fa1f f28e 	uxth.w	r2, lr
 8025382:	1203      	asrs	r3, r0, #8
 8025384:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8025388:	b2ff      	uxtb	r7, r7
 802538a:	1215      	asrs	r5, r2, #8
 802538c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025390:	fb13 f307 	smulbb	r3, r3, r7
 8025394:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025398:	fb05 3501 	mla	r5, r5, r1, r3
 802539c:	10c3      	asrs	r3, r0, #3
 802539e:	10d4      	asrs	r4, r2, #3
 80253a0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80253a4:	fb13 f307 	smulbb	r3, r3, r7
 80253a8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80253ac:	fb04 3401 	mla	r4, r4, r1, r3
 80253b0:	00c3      	lsls	r3, r0, #3
 80253b2:	00d2      	lsls	r2, r2, #3
 80253b4:	b2db      	uxtb	r3, r3
 80253b6:	fb13 f307 	smulbb	r3, r3, r7
 80253ba:	b2d2      	uxtb	r2, r2
 80253bc:	fb02 3101 	mla	r1, r2, r1, r3
 80253c0:	b2ad      	uxth	r5, r5
 80253c2:	b289      	uxth	r1, r1
 80253c4:	b2a4      	uxth	r4, r4
 80253c6:	1c6b      	adds	r3, r5, #1
 80253c8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80253cc:	1c62      	adds	r2, r4, #1
 80253ce:	1c4b      	adds	r3, r1, #1
 80253d0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80253d4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80253d8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80253dc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80253e0:	0964      	lsrs	r4, r4, #5
 80253e2:	432b      	orrs	r3, r5
 80253e4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80253e8:	9a03      	ldr	r2, [sp, #12]
 80253ea:	4323      	orrs	r3, r4
 80253ec:	8013      	strh	r3, [r2, #0]
 80253ee:	b005      	add	sp, #20
 80253f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80253f4:	f04f 0c00 	mov.w	ip, #0
 80253f8:	4664      	mov	r4, ip
 80253fa:	e6d6      	b.n	80251aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80253fc:	2300      	movs	r3, #0
 80253fe:	469c      	mov	ip, r3
 8025400:	461a      	mov	r2, r3
 8025402:	461c      	mov	r4, r3
 8025404:	e6f8      	b.n	80251f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025406:	2300      	movs	r3, #0
 8025408:	461a      	mov	r2, r3
 802540a:	e6f5      	b.n	80251f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802540c:	460b      	mov	r3, r1
 802540e:	460a      	mov	r2, r1
 8025410:	e6f2      	b.n	80251f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025412:	2500      	movs	r5, #0
 8025414:	46ab      	mov	fp, r5
 8025416:	e720      	b.n	802525a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8025418:	2700      	movs	r7, #0
 802541a:	463d      	mov	r5, r7
 802541c:	4638      	mov	r0, r7
 802541e:	46bb      	mov	fp, r7
 8025420:	e745      	b.n	80252ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8025422:	4677      	mov	r7, lr
 8025424:	4675      	mov	r5, lr
 8025426:	4670      	mov	r0, lr
 8025428:	46f3      	mov	fp, lr
 802542a:	e740      	b.n	80252ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802542c:	2700      	movs	r7, #0
 802542e:	4638      	mov	r0, r7
 8025430:	e73d      	b.n	80252ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8025432:	460f      	mov	r7, r1
 8025434:	4608      	mov	r0, r1
 8025436:	e73a      	b.n	80252ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08025438 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802543c:	b097      	sub	sp, #92	; 0x5c
 802543e:	9214      	str	r2, [sp, #80]	; 0x50
 8025440:	9308      	str	r3, [sp, #32]
 8025442:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025444:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8025448:	9312      	str	r3, [sp, #72]	; 0x48
 802544a:	9111      	str	r1, [sp, #68]	; 0x44
 802544c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025450:	9015      	str	r0, [sp, #84]	; 0x54
 8025452:	6850      	ldr	r0, [r2, #4]
 8025454:	6812      	ldr	r2, [r2, #0]
 8025456:	fb00 1303 	mla	r3, r0, r3, r1
 802545a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802545e:	9309      	str	r3, [sp, #36]	; 0x24
 8025460:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025462:	681b      	ldr	r3, [r3, #0]
 8025464:	930b      	str	r3, [sp, #44]	; 0x2c
 8025466:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025468:	685b      	ldr	r3, [r3, #4]
 802546a:	930c      	str	r3, [sp, #48]	; 0x30
 802546c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8025470:	930a      	str	r3, [sp, #40]	; 0x28
 8025472:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025474:	2b00      	cmp	r3, #0
 8025476:	dc03      	bgt.n	8025480 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025478:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802547a:	2b00      	cmp	r3, #0
 802547c:	f340 83cb 	ble.w	8025c16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025480:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025482:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025486:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802548a:	1e48      	subs	r0, r1, #1
 802548c:	1e55      	subs	r5, r2, #1
 802548e:	9b08      	ldr	r3, [sp, #32]
 8025490:	2b00      	cmp	r3, #0
 8025492:	f340 81a3 	ble.w	80257dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8025496:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8025498:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802549a:	1436      	asrs	r6, r6, #16
 802549c:	ea4f 4323 	mov.w	r3, r3, asr #16
 80254a0:	d406      	bmi.n	80254b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80254a2:	4286      	cmp	r6, r0
 80254a4:	da04      	bge.n	80254b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80254a6:	2b00      	cmp	r3, #0
 80254a8:	db02      	blt.n	80254b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80254aa:	42ab      	cmp	r3, r5
 80254ac:	f2c0 8197 	blt.w	80257de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80254b0:	3601      	adds	r6, #1
 80254b2:	f100 8184 	bmi.w	80257be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80254b6:	42b1      	cmp	r1, r6
 80254b8:	f2c0 8181 	blt.w	80257be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80254bc:	3301      	adds	r3, #1
 80254be:	f100 817e 	bmi.w	80257be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80254c2:	429a      	cmp	r2, r3
 80254c4:	f2c0 817b 	blt.w	80257be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80254c8:	9b08      	ldr	r3, [sp, #32]
 80254ca:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80254cc:	9313      	str	r3, [sp, #76]	; 0x4c
 80254ce:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80254d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80254d4:	2b00      	cmp	r3, #0
 80254d6:	f340 81a4 	ble.w	8025822 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80254da:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80254dc:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80254de:	1418      	asrs	r0, r3, #16
 80254e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80254e2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80254e6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80254e8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80254ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80254ee:	142d      	asrs	r5, r5, #16
 80254f0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80254f4:	f100 81f8 	bmi.w	80258e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80254f8:	f102 3eff 	add.w	lr, r2, #4294967295
 80254fc:	4575      	cmp	r5, lr
 80254fe:	f280 81f3 	bge.w	80258e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025502:	2800      	cmp	r0, #0
 8025504:	f2c0 81f0 	blt.w	80258e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025508:	f103 3eff 	add.w	lr, r3, #4294967295
 802550c:	4570      	cmp	r0, lr
 802550e:	f280 81eb 	bge.w	80258e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025512:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025514:	b212      	sxth	r2, r2
 8025516:	fb00 5002 	mla	r0, r0, r2, r5
 802551a:	fa1f fe81 	uxth.w	lr, r1
 802551e:	eb03 0a00 	add.w	sl, r3, r0
 8025522:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025526:	f813 9000 	ldrb.w	r9, [r3, r0]
 802552a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802552e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025532:	b29b      	uxth	r3, r3
 8025534:	f1bc 0f00 	cmp.w	ip, #0
 8025538:	f000 81b9 	beq.w	80258ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802553c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025540:	940d      	str	r4, [sp, #52]	; 0x34
 8025542:	eb0a 0b02 	add.w	fp, sl, r2
 8025546:	fa1f fa8c 	uxth.w	sl, ip
 802554a:	fb0a fe0e 	mul.w	lr, sl, lr
 802554e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025552:	fa1f fa8a 	uxth.w	sl, sl
 8025556:	eba5 050e 	sub.w	r5, r5, lr
 802555a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802555e:	940e      	str	r4, [sp, #56]	; 0x38
 8025560:	eba3 030a 	sub.w	r3, r3, sl
 8025564:	b2ad      	uxth	r5, r5
 8025566:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025568:	b29b      	uxth	r3, r3
 802556a:	fb08 f505 	mul.w	r5, r8, r5
 802556e:	fb09 5303 	mla	r3, r9, r3, r5
 8025572:	fb0a 3304 	mla	r3, sl, r4, r3
 8025576:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025578:	fb0e 3304 	mla	r3, lr, r4, r3
 802557c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025580:	2b00      	cmp	r3, #0
 8025582:	f000 810f 	beq.w	80257a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025586:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025588:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802558c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025590:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025594:	f000 8190 	beq.w	80258b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8025598:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802559c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80255a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80255a4:	fb09 f000 	mul.w	r0, r9, r0
 80255a8:	fb0a fe0e 	mul.w	lr, sl, lr
 80255ac:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80255b0:	f100 0b20 	add.w	fp, r0, #32
 80255b4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80255b8:	44ce      	add	lr, r9
 80255ba:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80255be:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80255c2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80255c6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80255ca:	ea4e 0909 	orr.w	r9, lr, r9
 80255ce:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80255d2:	8868      	ldrh	r0, [r5, #2]
 80255d4:	d019      	beq.n	802560a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80255d6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80255da:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80255de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80255e2:	fb08 f800 	mul.w	r8, r8, r0
 80255e6:	fb0a fe0e 	mul.w	lr, sl, lr
 80255ea:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80255ee:	f108 0b20 	add.w	fp, r8, #32
 80255f2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80255f6:	4486      	add	lr, r0
 80255f8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80255fc:	0a00      	lsrs	r0, r0, #8
 80255fe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025602:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025606:	ea4e 0000 	orr.w	r0, lr, r0
 802560a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802560e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025612:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025616:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802561a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802561e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025622:	ea4e 0909 	orr.w	r9, lr, r9
 8025626:	ea4a 0000 	orr.w	r0, sl, r0
 802562a:	f1bc 0f00 	cmp.w	ip, #0
 802562e:	f000 8145 	beq.w	80258bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8025632:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8025636:	3a01      	subs	r2, #1
 8025638:	0052      	lsls	r2, r2, #1
 802563a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802563c:	3202      	adds	r2, #2
 802563e:	2cff      	cmp	r4, #255	; 0xff
 8025640:	eb05 0e02 	add.w	lr, r5, r2
 8025644:	5aaa      	ldrh	r2, [r5, r2]
 8025646:	d018      	beq.n	802567a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8025648:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802564c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025650:	fb04 fa02 	mul.w	sl, r4, r2
 8025654:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025658:	fb08 f805 	mul.w	r8, r8, r5
 802565c:	f10a 0520 	add.w	r5, sl, #32
 8025660:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025664:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025668:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802566c:	4442      	add	r2, r8
 802566e:	0a2d      	lsrs	r5, r5, #8
 8025670:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025674:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025678:	432a      	orrs	r2, r5
 802567a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802567c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025680:	2cff      	cmp	r4, #255	; 0xff
 8025682:	d01a      	beq.n	80256ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8025684:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025688:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802568c:	fb04 fa05 	mul.w	sl, r4, r5
 8025690:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025694:	fb08 f80e 	mul.w	r8, r8, lr
 8025698:	f10a 0e20 	add.w	lr, sl, #32
 802569c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80256a0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80256a4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80256a8:	4445      	add	r5, r8
 80256aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80256ae:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80256b2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80256b6:	ea45 050e 	orr.w	r5, r5, lr
 80256ba:	fb1c fe01 	smulbb	lr, ip, r1
 80256be:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80256c2:	f1cc 0810 	rsb	r8, ip, #16
 80256c6:	eba8 0801 	sub.w	r8, r8, r1
 80256ca:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80256ce:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80256d2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80256d6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80256da:	4341      	muls	r1, r0
 80256dc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80256e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80256e4:	ea4a 0202 	orr.w	r2, sl, r2
 80256e8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80256ec:	fb09 1108 	mla	r1, r9, r8, r1
 80256f0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80256f4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80256f8:	fb0c 1102 	mla	r1, ip, r2, r1
 80256fc:	ea4b 0505 	orr.w	r5, fp, r5
 8025700:	fb0e 1e05 	mla	lr, lr, r5, r1
 8025704:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025708:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802570c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025710:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025714:	ea42 0e0e 	orr.w	lr, r2, lr
 8025718:	fa1f f28e 	uxth.w	r2, lr
 802571c:	2bff      	cmp	r3, #255	; 0xff
 802571e:	d103      	bne.n	8025728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8025720:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025722:	29ff      	cmp	r1, #255	; 0xff
 8025724:	f000 80de 	beq.w	80258e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8025728:	990a      	ldr	r1, [sp, #40]	; 0x28
 802572a:	8838      	ldrh	r0, [r7, #0]
 802572c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802572e:	434b      	muls	r3, r1
 8025730:	f103 0c01 	add.w	ip, r3, #1
 8025734:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8025738:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802573c:	fa5f fc83 	uxtb.w	ip, r3
 8025740:	1203      	asrs	r3, r0, #8
 8025742:	1215      	asrs	r5, r2, #8
 8025744:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025748:	fb13 f30c 	smulbb	r3, r3, ip
 802574c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025750:	fb05 3501 	mla	r5, r5, r1, r3
 8025754:	10c3      	asrs	r3, r0, #3
 8025756:	10d1      	asrs	r1, r2, #3
 8025758:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802575c:	fb13 f30c 	smulbb	r3, r3, ip
 8025760:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025764:	fb01 3104 	mla	r1, r1, r4, r3
 8025768:	00c3      	lsls	r3, r0, #3
 802576a:	00d2      	lsls	r2, r2, #3
 802576c:	b2db      	uxtb	r3, r3
 802576e:	b2d2      	uxtb	r2, r2
 8025770:	fb13 f30c 	smulbb	r3, r3, ip
 8025774:	b2ad      	uxth	r5, r5
 8025776:	fb02 3304 	mla	r3, r2, r4, r3
 802577a:	b29a      	uxth	r2, r3
 802577c:	1c6b      	adds	r3, r5, #1
 802577e:	b289      	uxth	r1, r1
 8025780:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025784:	1c53      	adds	r3, r2, #1
 8025786:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802578a:	1c4a      	adds	r2, r1, #1
 802578c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025790:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025794:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025798:	0949      	lsrs	r1, r1, #5
 802579a:	432b      	orrs	r3, r5
 802579c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80257a0:	430b      	orrs	r3, r1
 80257a2:	803b      	strh	r3, [r7, #0]
 80257a4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257a6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80257a8:	4413      	add	r3, r2
 80257aa:	9321      	str	r3, [sp, #132]	; 0x84
 80257ac:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80257ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80257b0:	441a      	add	r2, r3
 80257b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80257b4:	9222      	str	r2, [sp, #136]	; 0x88
 80257b6:	3b01      	subs	r3, #1
 80257b8:	3702      	adds	r7, #2
 80257ba:	9313      	str	r3, [sp, #76]	; 0x4c
 80257bc:	e689      	b.n	80254d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80257be:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257c0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80257c2:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80257c4:	4433      	add	r3, r6
 80257c6:	9321      	str	r3, [sp, #132]	; 0x84
 80257c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80257ca:	441c      	add	r4, r3
 80257cc:	9b08      	ldr	r3, [sp, #32]
 80257ce:	9422      	str	r4, [sp, #136]	; 0x88
 80257d0:	3b01      	subs	r3, #1
 80257d2:	9308      	str	r3, [sp, #32]
 80257d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80257d6:	3302      	adds	r3, #2
 80257d8:	9309      	str	r3, [sp, #36]	; 0x24
 80257da:	e658      	b.n	802548e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80257dc:	d028      	beq.n	8025830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80257de:	9b08      	ldr	r3, [sp, #32]
 80257e0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80257e2:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80257e4:	3b01      	subs	r3, #1
 80257e6:	fb00 5003 	mla	r0, r0, r3, r5
 80257ea:	1400      	asrs	r0, r0, #16
 80257ec:	f53f ae6c 	bmi.w	80254c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80257f0:	3901      	subs	r1, #1
 80257f2:	4288      	cmp	r0, r1
 80257f4:	f6bf ae68 	bge.w	80254c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80257f8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80257fa:	9822      	ldr	r0, [sp, #136]	; 0x88
 80257fc:	fb01 0303 	mla	r3, r1, r3, r0
 8025800:	141b      	asrs	r3, r3, #16
 8025802:	f53f ae61 	bmi.w	80254c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025806:	3a01      	subs	r2, #1
 8025808:	4293      	cmp	r3, r2
 802580a:	f6bf ae5d 	bge.w	80254c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802580e:	9b08      	ldr	r3, [sp, #32]
 8025810:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8025814:	9313      	str	r3, [sp, #76]	; 0x4c
 8025816:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802581a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802581c:	2b00      	cmp	r3, #0
 802581e:	f300 8082 	bgt.w	8025926 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8025822:	9b08      	ldr	r3, [sp, #32]
 8025824:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025828:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802582a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802582e:	9309      	str	r3, [sp, #36]	; 0x24
 8025830:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025832:	2b00      	cmp	r3, #0
 8025834:	f340 81ef 	ble.w	8025c16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025838:	ee30 0a04 	vadd.f32	s0, s0, s8
 802583c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025840:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025844:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025846:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802584a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802584e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025852:	eef0 6a62 	vmov.f32	s13, s5
 8025856:	ee61 7a27 	vmul.f32	s15, s2, s15
 802585a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802585e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025862:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8025866:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802586a:	eef0 6a43 	vmov.f32	s13, s6
 802586e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025872:	ee12 2a90 	vmov	r2, s5
 8025876:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802587a:	fb92 f3f3 	sdiv	r3, r2, r3
 802587e:	ee13 2a10 	vmov	r2, s6
 8025882:	9323      	str	r3, [sp, #140]	; 0x8c
 8025884:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025886:	fb92 f3f3 	sdiv	r3, r2, r3
 802588a:	9324      	str	r3, [sp, #144]	; 0x90
 802588c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802588e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025890:	3b01      	subs	r3, #1
 8025892:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025896:	9311      	str	r3, [sp, #68]	; 0x44
 8025898:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802589a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802589e:	bf08      	it	eq
 80258a0:	4613      	moveq	r3, r2
 80258a2:	9308      	str	r3, [sp, #32]
 80258a4:	eeb0 3a67 	vmov.f32	s6, s15
 80258a8:	eef0 2a47 	vmov.f32	s5, s14
 80258ac:	e5e1      	b.n	8025472 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80258ae:	fb08 f505 	mul.w	r5, r8, r5
 80258b2:	fb09 5303 	mla	r3, r9, r3, r5
 80258b6:	e661      	b.n	802557c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80258b8:	4681      	mov	r9, r0
 80258ba:	e688      	b.n	80255ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80258bc:	f1c1 0210 	rsb	r2, r1, #16
 80258c0:	4341      	muls	r1, r0
 80258c2:	fb09 1902 	mla	r9, r9, r2, r1
 80258c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80258ca:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80258ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80258d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80258d6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80258da:	ea42 0909 	orr.w	r9, r2, r9
 80258de:	fa1f f289 	uxth.w	r2, r9
 80258e2:	e71b      	b.n	802571c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80258e4:	803a      	strh	r2, [r7, #0]
 80258e6:	e75d      	b.n	80257a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80258e8:	f115 0e01 	adds.w	lr, r5, #1
 80258ec:	f53f af5a 	bmi.w	80257a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80258f0:	4572      	cmp	r2, lr
 80258f2:	f6ff af57 	blt.w	80257a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80258f6:	f110 0e01 	adds.w	lr, r0, #1
 80258fa:	f53f af53 	bmi.w	80257a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80258fe:	4573      	cmp	r3, lr
 8025900:	f6ff af50 	blt.w	80257a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025904:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025906:	9502      	str	r5, [sp, #8]
 8025908:	b21b      	sxth	r3, r3
 802590a:	b212      	sxth	r2, r2
 802590c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8025910:	9301      	str	r3, [sp, #4]
 8025912:	9200      	str	r2, [sp, #0]
 8025914:	e9cd c405 	strd	ip, r4, [sp, #20]
 8025918:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 802591c:	4639      	mov	r1, r7
 802591e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025920:	f7ff fc04 	bl	802512c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8025924:	e73e      	b.n	80257a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025926:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025928:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802592c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802592e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8025932:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025934:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025938:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802593a:	141f      	asrs	r7, r3, #16
 802593c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802593e:	141b      	asrs	r3, r3, #16
 8025940:	fb01 3707 	mla	r7, r1, r7, r3
 8025944:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025946:	fa1f fc82 	uxth.w	ip, r2
 802594a:	eb03 0a07 	add.w	sl, r3, r7
 802594e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8025952:	f813 9007 	ldrb.w	r9, [r3, r7]
 8025956:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802595a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802595e:	b29b      	uxth	r3, r3
 8025960:	2d00      	cmp	r5, #0
 8025962:	f000 813d 	beq.w	8025be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8025966:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802596a:	940f      	str	r4, [sp, #60]	; 0x3c
 802596c:	eb0a 0b01 	add.w	fp, sl, r1
 8025970:	fa1f fa85 	uxth.w	sl, r5
 8025974:	fb0a fc0c 	mul.w	ip, sl, ip
 8025978:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802597c:	fa1f fa8a 	uxth.w	sl, sl
 8025980:	eba0 000c 	sub.w	r0, r0, ip
 8025984:	eba3 030a 	sub.w	r3, r3, sl
 8025988:	b280      	uxth	r0, r0
 802598a:	fb08 f000 	mul.w	r0, r8, r0
 802598e:	b29b      	uxth	r3, r3
 8025990:	fb09 0303 	mla	r3, r9, r3, r0
 8025994:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025996:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802599a:	9410      	str	r4, [sp, #64]	; 0x40
 802599c:	fb0a 3300 	mla	r3, sl, r0, r3
 80259a0:	fb0c 3304 	mla	r3, ip, r4, r3
 80259a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80259a8:	2b00      	cmp	r3, #0
 80259aa:	f000 810b 	beq.w	8025bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80259ae:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80259b0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80259b2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80259b6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80259ba:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80259be:	f000 8114 	beq.w	8025bea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80259c2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80259c6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80259ca:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80259ce:	fb09 f707 	mul.w	r7, r9, r7
 80259d2:	fb0a fc0c 	mul.w	ip, sl, ip
 80259d6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80259da:	f107 0b20 	add.w	fp, r7, #32
 80259de:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80259e2:	44cc      	add	ip, r9
 80259e4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80259e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80259ec:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80259f0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80259f4:	ea4c 0909 	orr.w	r9, ip, r9
 80259f8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80259fc:	8847      	ldrh	r7, [r0, #2]
 80259fe:	d019      	beq.n	8025a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8025a00:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025a04:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025a08:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025a0c:	fb08 f807 	mul.w	r8, r8, r7
 8025a10:	fb0a fc0c 	mul.w	ip, sl, ip
 8025a14:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8025a18:	f108 0b20 	add.w	fp, r8, #32
 8025a1c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025a20:	44bc      	add	ip, r7
 8025a22:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8025a26:	0a3f      	lsrs	r7, r7, #8
 8025a28:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025a2c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025a30:	ea4c 0707 	orr.w	r7, ip, r7
 8025a34:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8025a38:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8025a3c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8025a40:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025a44:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025a48:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8025a4c:	ea4c 0909 	orr.w	r9, ip, r9
 8025a50:	ea4a 0707 	orr.w	r7, sl, r7
 8025a54:	2d00      	cmp	r5, #0
 8025a56:	f000 80ca 	beq.w	8025bee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8025a5a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8025a5e:	3901      	subs	r1, #1
 8025a60:	0049      	lsls	r1, r1, #1
 8025a62:	3102      	adds	r1, #2
 8025a64:	eb00 0c01 	add.w	ip, r0, r1
 8025a68:	5a41      	ldrh	r1, [r0, r1]
 8025a6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025a6c:	28ff      	cmp	r0, #255	; 0xff
 8025a6e:	d019      	beq.n	8025aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025a70:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025a72:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8025a76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025a7a:	fb04 fa01 	mul.w	sl, r4, r1
 8025a7e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025a82:	fb08 f800 	mul.w	r8, r8, r0
 8025a86:	f10a 0020 	add.w	r0, sl, #32
 8025a8a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8025a8e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025a92:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025a96:	4441      	add	r1, r8
 8025a98:	0a00      	lsrs	r0, r0, #8
 8025a9a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8025a9e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025aa2:	4301      	orrs	r1, r0
 8025aa4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025aa6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8025aaa:	2cff      	cmp	r4, #255	; 0xff
 8025aac:	d01a      	beq.n	8025ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8025aae:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8025ab2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ab6:	fb04 fa00 	mul.w	sl, r4, r0
 8025aba:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025abe:	fb08 f80c 	mul.w	r8, r8, ip
 8025ac2:	f10a 0c20 	add.w	ip, sl, #32
 8025ac6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8025aca:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8025ace:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025ad2:	4440      	add	r0, r8
 8025ad4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025ad8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8025adc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025ae0:	ea40 000c 	orr.w	r0, r0, ip
 8025ae4:	fb15 fc02 	smulbb	ip, r5, r2
 8025ae8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8025aec:	f1c5 0810 	rsb	r8, r5, #16
 8025af0:	eba8 0802 	sub.w	r8, r8, r2
 8025af4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025af8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8025afc:	437a      	muls	r2, r7
 8025afe:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025b02:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8025b06:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025b0a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025b0e:	fb09 2208 	mla	r2, r9, r8, r2
 8025b12:	ea4a 0101 	orr.w	r1, sl, r1
 8025b16:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8025b1a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025b1e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025b22:	fb05 2201 	mla	r2, r5, r1, r2
 8025b26:	ea4b 0000 	orr.w	r0, fp, r0
 8025b2a:	fb0c 2200 	mla	r2, ip, r0, r2
 8025b2e:	0d57      	lsrs	r7, r2, #21
 8025b30:	0952      	lsrs	r2, r2, #5
 8025b32:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025b36:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025b3a:	433a      	orrs	r2, r7
 8025b3c:	2bff      	cmp	r3, #255	; 0xff
 8025b3e:	b292      	uxth	r2, r2
 8025b40:	d102      	bne.n	8025b48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8025b42:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025b44:	29ff      	cmp	r1, #255	; 0xff
 8025b46:	d063      	beq.n	8025c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8025b48:	980a      	ldr	r0, [sp, #40]	; 0x28
 8025b4a:	f8be 1000 	ldrh.w	r1, [lr]
 8025b4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025b50:	4343      	muls	r3, r0
 8025b52:	1c58      	adds	r0, r3, #1
 8025b54:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8025b58:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8025b5c:	1208      	asrs	r0, r1, #8
 8025b5e:	b2db      	uxtb	r3, r3
 8025b60:	1215      	asrs	r5, r2, #8
 8025b62:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025b66:	fb10 f003 	smulbb	r0, r0, r3
 8025b6a:	10cf      	asrs	r7, r1, #3
 8025b6c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025b70:	00c9      	lsls	r1, r1, #3
 8025b72:	fb05 0504 	mla	r5, r5, r4, r0
 8025b76:	b2c9      	uxtb	r1, r1
 8025b78:	10d0      	asrs	r0, r2, #3
 8025b7a:	00d2      	lsls	r2, r2, #3
 8025b7c:	fb11 f103 	smulbb	r1, r1, r3
 8025b80:	b2d2      	uxtb	r2, r2
 8025b82:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8025b86:	fb02 1204 	mla	r2, r2, r4, r1
 8025b8a:	fb17 f703 	smulbb	r7, r7, r3
 8025b8e:	b2ad      	uxth	r5, r5
 8025b90:	b292      	uxth	r2, r2
 8025b92:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025b96:	fb00 7004 	mla	r0, r0, r4, r7
 8025b9a:	1c6b      	adds	r3, r5, #1
 8025b9c:	1c57      	adds	r7, r2, #1
 8025b9e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025ba2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025ba6:	b280      	uxth	r0, r0
 8025ba8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8025bac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025bb0:	433d      	orrs	r5, r7
 8025bb2:	1c47      	adds	r7, r0, #1
 8025bb4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025bb8:	097f      	lsrs	r7, r7, #5
 8025bba:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025bbe:	433d      	orrs	r5, r7
 8025bc0:	f8ae 5000 	strh.w	r5, [lr]
 8025bc4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025bc6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025bc8:	4413      	add	r3, r2
 8025bca:	9321      	str	r3, [sp, #132]	; 0x84
 8025bcc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025bce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025bd0:	441a      	add	r2, r3
 8025bd2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025bd4:	9222      	str	r2, [sp, #136]	; 0x88
 8025bd6:	3b01      	subs	r3, #1
 8025bd8:	f10e 0e02 	add.w	lr, lr, #2
 8025bdc:	9313      	str	r3, [sp, #76]	; 0x4c
 8025bde:	e61c      	b.n	802581a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8025be0:	fb08 f000 	mul.w	r0, r8, r0
 8025be4:	fb09 0303 	mla	r3, r9, r3, r0
 8025be8:	e6dc      	b.n	80259a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8025bea:	46b9      	mov	r9, r7
 8025bec:	e704      	b.n	80259f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8025bee:	f1c2 0110 	rsb	r1, r2, #16
 8025bf2:	437a      	muls	r2, r7
 8025bf4:	fb09 2901 	mla	r9, r9, r1, r2
 8025bf8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025bfc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025c00:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025c04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c08:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025c0c:	4302      	orrs	r2, r0
 8025c0e:	e795      	b.n	8025b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8025c10:	f8ae 2000 	strh.w	r2, [lr]
 8025c14:	e7d6      	b.n	8025bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025c16:	b017      	add	sp, #92	; 0x5c
 8025c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025c1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8025c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c20:	b085      	sub	sp, #20
 8025c22:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025c26:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025c2a:	9103      	str	r1, [sp, #12]
 8025c2c:	fb00 7406 	mla	r4, r0, r6, r7
 8025c30:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8025c34:	2800      	cmp	r0, #0
 8025c36:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8025c3a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8025c3e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025c42:	9501      	str	r5, [sp, #4]
 8025c44:	eb02 0904 	add.w	r9, r2, r4
 8025c48:	f2c0 8141 	blt.w	8025ece <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025c4c:	4583      	cmp	fp, r0
 8025c4e:	f340 813e 	ble.w	8025ece <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025c52:	2f00      	cmp	r7, #0
 8025c54:	f2c0 8137 	blt.w	8025ec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025c58:	42be      	cmp	r6, r7
 8025c5a:	f340 8134 	ble.w	8025ec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025c5e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8025c62:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8025c66:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025c6a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8025c6e:	4355      	muls	r5, r2
 8025c70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025c74:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025c78:	fb0c f203 	mul.w	r2, ip, r3
 8025c7c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025c80:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025c84:	441d      	add	r5, r3
 8025c86:	f102 0320 	add.w	r3, r2, #32
 8025c8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025c8e:	0a1b      	lsrs	r3, r3, #8
 8025c90:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025c94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025c98:	431c      	orrs	r4, r3
 8025c9a:	1c7b      	adds	r3, r7, #1
 8025c9c:	f100 811c 	bmi.w	8025ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025ca0:	429e      	cmp	r6, r3
 8025ca2:	f340 8119 	ble.w	8025ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025ca6:	2900      	cmp	r1, #0
 8025ca8:	f000 8119 	beq.w	8025ede <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8025cac:	9a01      	ldr	r2, [sp, #4]
 8025cae:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025cb2:	8855      	ldrh	r5, [r2, #2]
 8025cb4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025cb8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025cbc:	fb08 f802 	mul.w	r8, r8, r2
 8025cc0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025cc4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025cc8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025ccc:	435d      	muls	r5, r3
 8025cce:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025cd2:	44d0      	add	r8, sl
 8025cd4:	f105 0a20 	add.w	sl, r5, #32
 8025cd8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025cdc:	0a2d      	lsrs	r5, r5, #8
 8025cde:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025ce2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025ce6:	432a      	orrs	r2, r5
 8025ce8:	3001      	adds	r0, #1
 8025cea:	f100 80fe 	bmi.w	8025eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025cee:	4583      	cmp	fp, r0
 8025cf0:	f340 80fb 	ble.w	8025eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025cf4:	f1be 0f00 	cmp.w	lr, #0
 8025cf8:	f000 80fc 	beq.w	8025ef4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8025cfc:	2f00      	cmp	r7, #0
 8025cfe:	f2c0 80f1 	blt.w	8025ee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025d02:	42be      	cmp	r6, r7
 8025d04:	f340 80ee 	ble.w	8025ee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025d08:	9801      	ldr	r0, [sp, #4]
 8025d0a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025d0e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025d12:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025d16:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025d1a:	fb0a fa00 	mul.w	sl, sl, r0
 8025d1e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025d22:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025d26:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025d2a:	fb05 f808 	mul.w	r8, r5, r8
 8025d2e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025d32:	4482      	add	sl, r0
 8025d34:	f108 0020 	add.w	r0, r8, #32
 8025d38:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025d3c:	0a00      	lsrs	r0, r0, #8
 8025d3e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025d42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d46:	ea4b 0b00 	orr.w	fp, fp, r0
 8025d4a:	3701      	adds	r7, #1
 8025d4c:	f100 80d7 	bmi.w	8025efe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025d50:	42be      	cmp	r6, r7
 8025d52:	f340 80d4 	ble.w	8025efe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025d56:	2900      	cmp	r1, #0
 8025d58:	f000 80d4 	beq.w	8025f04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8025d5c:	3601      	adds	r6, #1
 8025d5e:	9801      	ldr	r0, [sp, #4]
 8025d60:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025d64:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025d68:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025d6c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025d70:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d74:	fb09 f906 	mul.w	r9, r9, r6
 8025d78:	fb07 f800 	mul.w	r8, r7, r0
 8025d7c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025d80:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025d84:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025d88:	44d1      	add	r9, sl
 8025d8a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025d8e:	f108 0020 	add.w	r0, r8, #32
 8025d92:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025d96:	0a00      	lsrs	r0, r0, #8
 8025d98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d9c:	4330      	orrs	r0, r6
 8025d9e:	b28e      	uxth	r6, r1
 8025da0:	fa1f f98e 	uxth.w	r9, lr
 8025da4:	fb06 f809 	mul.w	r8, r6, r9
 8025da8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025dac:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025db0:	0136      	lsls	r6, r6, #4
 8025db2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025db6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025dba:	9601      	str	r6, [sp, #4]
 8025dbc:	ea4a 0404 	orr.w	r4, sl, r4
 8025dc0:	fa1f f689 	uxth.w	r6, r9
 8025dc4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025dc8:	fb11 f90e 	smulbb	r9, r1, lr
 8025dcc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025dd0:	9602      	str	r6, [sp, #8]
 8025dd2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025dd6:	4626      	mov	r6, r4
 8025dd8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025ddc:	f1ce 0410 	rsb	r4, lr, #16
 8025de0:	1a64      	subs	r4, r4, r1
 8025de2:	ea4a 0202 	orr.w	r2, sl, r2
 8025de6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025dea:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025dee:	434a      	muls	r2, r1
 8025df0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025df4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025df8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025dfc:	fb04 2406 	mla	r4, r4, r6, r2
 8025e00:	ea4a 0000 	orr.w	r0, sl, r0
 8025e04:	fb09 4200 	mla	r2, r9, r0, r4
 8025e08:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025e0c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025e10:	9801      	ldr	r0, [sp, #4]
 8025e12:	9903      	ldr	r1, [sp, #12]
 8025e14:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025e18:	ea44 0b0b 	orr.w	fp, r4, fp
 8025e1c:	9c02      	ldr	r4, [sp, #8]
 8025e1e:	8809      	ldrh	r1, [r1, #0]
 8025e20:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8025e24:	1b00      	subs	r0, r0, r4
 8025e26:	9c01      	ldr	r4, [sp, #4]
 8025e28:	eba4 0608 	sub.w	r6, r4, r8
 8025e2c:	b2b6      	uxth	r6, r6
 8025e2e:	b280      	uxth	r0, r0
 8025e30:	4373      	muls	r3, r6
 8025e32:	fb0c 3300 	mla	r3, ip, r0, r3
 8025e36:	9802      	ldr	r0, [sp, #8]
 8025e38:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025e3c:	fb00 3505 	mla	r5, r0, r5, r3
 8025e40:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025e44:	fb08 5707 	mla	r7, r8, r7, r5
 8025e48:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025e4c:	120b      	asrs	r3, r1, #8
 8025e4e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025e52:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025e56:	b2ff      	uxtb	r7, r7
 8025e58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e5c:	10c8      	asrs	r0, r1, #3
 8025e5e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025e62:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025e66:	00c9      	lsls	r1, r1, #3
 8025e68:	437b      	muls	r3, r7
 8025e6a:	ea42 0e0e 	orr.w	lr, r2, lr
 8025e6e:	b2c9      	uxtb	r1, r1
 8025e70:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025e74:	fa1f f28e 	uxth.w	r2, lr
 8025e78:	4378      	muls	r0, r7
 8025e7a:	434f      	muls	r7, r1
 8025e7c:	1c59      	adds	r1, r3, #1
 8025e7e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025e82:	1213      	asrs	r3, r2, #8
 8025e84:	f023 0307 	bic.w	r3, r3, #7
 8025e88:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025e8c:	1c41      	adds	r1, r0, #1
 8025e8e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025e92:	10d1      	asrs	r1, r2, #3
 8025e94:	f021 0103 	bic.w	r1, r1, #3
 8025e98:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025e9c:	021b      	lsls	r3, r3, #8
 8025e9e:	00c9      	lsls	r1, r1, #3
 8025ea0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025ea4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025ea8:	430b      	orrs	r3, r1
 8025eaa:	1c79      	adds	r1, r7, #1
 8025eac:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8025eb0:	00d2      	lsls	r2, r2, #3
 8025eb2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8025eb6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025eba:	431a      	orrs	r2, r3
 8025ebc:	9b03      	ldr	r3, [sp, #12]
 8025ebe:	801a      	strh	r2, [r3, #0]
 8025ec0:	b005      	add	sp, #20
 8025ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025ec6:	f04f 0c00 	mov.w	ip, #0
 8025eca:	4664      	mov	r4, ip
 8025ecc:	e6e5      	b.n	8025c9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8025ece:	2300      	movs	r3, #0
 8025ed0:	469c      	mov	ip, r3
 8025ed2:	461a      	mov	r2, r3
 8025ed4:	461c      	mov	r4, r3
 8025ed6:	e707      	b.n	8025ce8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025ed8:	2300      	movs	r3, #0
 8025eda:	461a      	mov	r2, r3
 8025edc:	e704      	b.n	8025ce8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025ede:	460b      	mov	r3, r1
 8025ee0:	460a      	mov	r2, r1
 8025ee2:	e701      	b.n	8025ce8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025ee4:	2500      	movs	r5, #0
 8025ee6:	46ab      	mov	fp, r5
 8025ee8:	e72f      	b.n	8025d4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8025eea:	2700      	movs	r7, #0
 8025eec:	463d      	mov	r5, r7
 8025eee:	4638      	mov	r0, r7
 8025ef0:	46bb      	mov	fp, r7
 8025ef2:	e754      	b.n	8025d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025ef4:	4677      	mov	r7, lr
 8025ef6:	4675      	mov	r5, lr
 8025ef8:	4670      	mov	r0, lr
 8025efa:	46f3      	mov	fp, lr
 8025efc:	e74f      	b.n	8025d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025efe:	2700      	movs	r7, #0
 8025f00:	4638      	mov	r0, r7
 8025f02:	e74c      	b.n	8025d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025f04:	460f      	mov	r7, r1
 8025f06:	4608      	mov	r0, r1
 8025f08:	e749      	b.n	8025d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08025f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f10:	b093      	sub	sp, #76	; 0x4c
 8025f12:	9210      	str	r2, [sp, #64]	; 0x40
 8025f14:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025f16:	910e      	str	r1, [sp, #56]	; 0x38
 8025f18:	9306      	str	r3, [sp, #24]
 8025f1a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025f1e:	9011      	str	r0, [sp, #68]	; 0x44
 8025f20:	6850      	ldr	r0, [r2, #4]
 8025f22:	6812      	ldr	r2, [r2, #0]
 8025f24:	fb00 1303 	mla	r3, r0, r3, r1
 8025f28:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025f2c:	9307      	str	r3, [sp, #28]
 8025f2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f30:	681b      	ldr	r3, [r3, #0]
 8025f32:	9308      	str	r3, [sp, #32]
 8025f34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f36:	685b      	ldr	r3, [r3, #4]
 8025f38:	9309      	str	r3, [sp, #36]	; 0x24
 8025f3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025f3c:	2b00      	cmp	r3, #0
 8025f3e:	dc03      	bgt.n	8025f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8025f40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025f42:	2b00      	cmp	r3, #0
 8025f44:	f340 83b4 	ble.w	80266b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025f48:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025f4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025f52:	1e48      	subs	r0, r1, #1
 8025f54:	1e55      	subs	r5, r2, #1
 8025f56:	9b06      	ldr	r3, [sp, #24]
 8025f58:	2b00      	cmp	r3, #0
 8025f5a:	f340 8163 	ble.w	8026224 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8025f5e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8025f60:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025f62:	1436      	asrs	r6, r6, #16
 8025f64:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025f68:	d406      	bmi.n	8025f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025f6a:	4286      	cmp	r6, r0
 8025f6c:	da04      	bge.n	8025f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025f6e:	2b00      	cmp	r3, #0
 8025f70:	db02      	blt.n	8025f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025f72:	42ab      	cmp	r3, r5
 8025f74:	f2c0 8157 	blt.w	8026226 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8025f78:	3601      	adds	r6, #1
 8025f7a:	f100 8144 	bmi.w	8026206 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025f7e:	42b1      	cmp	r1, r6
 8025f80:	f2c0 8141 	blt.w	8026206 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025f84:	3301      	adds	r3, #1
 8025f86:	f100 813e 	bmi.w	8026206 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025f8a:	429a      	cmp	r2, r3
 8025f8c:	f2c0 813b 	blt.w	8026206 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025f90:	9b06      	ldr	r3, [sp, #24]
 8025f92:	9f07      	ldr	r7, [sp, #28]
 8025f94:	930f      	str	r3, [sp, #60]	; 0x3c
 8025f96:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025f9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025f9c:	2b00      	cmp	r3, #0
 8025f9e:	f340 8164 	ble.w	802626a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8025fa2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025fa4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8025fa6:	1418      	asrs	r0, r3, #16
 8025fa8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025faa:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025fae:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025fb0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025fb4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025fb6:	142d      	asrs	r5, r5, #16
 8025fb8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025fbc:	f100 81ee 	bmi.w	802639c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025fc0:	f102 3eff 	add.w	lr, r2, #4294967295
 8025fc4:	4575      	cmp	r5, lr
 8025fc6:	f280 81e9 	bge.w	802639c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025fca:	2800      	cmp	r0, #0
 8025fcc:	f2c0 81e6 	blt.w	802639c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025fd0:	f103 3eff 	add.w	lr, r3, #4294967295
 8025fd4:	4570      	cmp	r0, lr
 8025fd6:	f280 81e1 	bge.w	802639c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025fda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025fdc:	b212      	sxth	r2, r2
 8025fde:	fb00 5002 	mla	r0, r0, r2, r5
 8025fe2:	fa1f fe81 	uxth.w	lr, r1
 8025fe6:	eb03 0a00 	add.w	sl, r3, r0
 8025fea:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025fee:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025ff2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025ff6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025ffa:	b29b      	uxth	r3, r3
 8025ffc:	f1bc 0f00 	cmp.w	ip, #0
 8026000:	f000 8179 	beq.w	80262f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8026004:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8026008:	940a      	str	r4, [sp, #40]	; 0x28
 802600a:	eb0a 0b02 	add.w	fp, sl, r2
 802600e:	fa1f fa8c 	uxth.w	sl, ip
 8026012:	fb0a fe0e 	mul.w	lr, sl, lr
 8026016:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802601a:	fa1f fa8a 	uxth.w	sl, sl
 802601e:	eba5 050e 	sub.w	r5, r5, lr
 8026022:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8026026:	940b      	str	r4, [sp, #44]	; 0x2c
 8026028:	eba3 030a 	sub.w	r3, r3, sl
 802602c:	b2ad      	uxth	r5, r5
 802602e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8026030:	b29b      	uxth	r3, r3
 8026032:	fb08 f505 	mul.w	r5, r8, r5
 8026036:	fb09 5303 	mla	r3, r9, r3, r5
 802603a:	fb0a 3304 	mla	r3, sl, r4, r3
 802603e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8026040:	fb0e 3304 	mla	r3, lr, r4, r3
 8026044:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026048:	2b00      	cmp	r3, #0
 802604a:	f000 80cf 	beq.w	80261ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802604e:	9c08      	ldr	r4, [sp, #32]
 8026050:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026054:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8026058:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802605c:	f000 8150 	beq.w	8026300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8026060:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8026064:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8026068:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802606c:	fb09 f000 	mul.w	r0, r9, r0
 8026070:	fb0a fe0e 	mul.w	lr, sl, lr
 8026074:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8026078:	f100 0b20 	add.w	fp, r0, #32
 802607c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8026080:	44ce      	add	lr, r9
 8026082:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8026086:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802608a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802608e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8026092:	ea4e 0909 	orr.w	r9, lr, r9
 8026096:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802609a:	8868      	ldrh	r0, [r5, #2]
 802609c:	d019      	beq.n	80260d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802609e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80260a2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80260a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80260aa:	fb08 f800 	mul.w	r8, r8, r0
 80260ae:	fb0a fe0e 	mul.w	lr, sl, lr
 80260b2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80260b6:	f108 0b20 	add.w	fp, r8, #32
 80260ba:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80260be:	4486      	add	lr, r0
 80260c0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80260c4:	0a00      	lsrs	r0, r0, #8
 80260c6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80260ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80260ce:	ea4e 0000 	orr.w	r0, lr, r0
 80260d2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80260d6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80260da:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80260de:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80260e2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80260e6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80260ea:	ea4e 0909 	orr.w	r9, lr, r9
 80260ee:	ea4a 0000 	orr.w	r0, sl, r0
 80260f2:	f1bc 0f00 	cmp.w	ip, #0
 80260f6:	f000 8105 	beq.w	8026304 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80260fa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80260fe:	3a01      	subs	r2, #1
 8026100:	0052      	lsls	r2, r2, #1
 8026102:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8026104:	3202      	adds	r2, #2
 8026106:	2cff      	cmp	r4, #255	; 0xff
 8026108:	eb05 0e02 	add.w	lr, r5, r2
 802610c:	5aaa      	ldrh	r2, [r5, r2]
 802610e:	d018      	beq.n	8026142 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8026110:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8026114:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026118:	fb04 fa02 	mul.w	sl, r4, r2
 802611c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026120:	fb08 f805 	mul.w	r8, r8, r5
 8026124:	f10a 0520 	add.w	r5, sl, #32
 8026128:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802612c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8026130:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026134:	4442      	add	r2, r8
 8026136:	0a2d      	lsrs	r5, r5, #8
 8026138:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802613c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026140:	432a      	orrs	r2, r5
 8026142:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8026144:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8026148:	2cff      	cmp	r4, #255	; 0xff
 802614a:	d01a      	beq.n	8026182 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802614c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8026150:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026154:	fb04 fa05 	mul.w	sl, r4, r5
 8026158:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802615c:	fb08 f80e 	mul.w	r8, r8, lr
 8026160:	f10a 0e20 	add.w	lr, sl, #32
 8026164:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8026168:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802616c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026170:	4445      	add	r5, r8
 8026172:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026176:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802617a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802617e:	ea45 050e 	orr.w	r5, r5, lr
 8026182:	fb1c fe01 	smulbb	lr, ip, r1
 8026186:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802618a:	f1cc 0810 	rsb	r8, ip, #16
 802618e:	eba8 0801 	sub.w	r8, r8, r1
 8026192:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8026196:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802619a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802619e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80261a2:	4341      	muls	r1, r0
 80261a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80261a8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80261ac:	ea4a 0202 	orr.w	r2, sl, r2
 80261b0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80261b4:	fb09 1108 	mla	r1, r9, r8, r1
 80261b8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80261bc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80261c0:	fb0c 1102 	mla	r1, ip, r2, r1
 80261c4:	ea4b 0505 	orr.w	r5, fp, r5
 80261c8:	fb0e 1e05 	mla	lr, lr, r5, r1
 80261cc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80261d0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80261d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80261d8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80261dc:	ea42 0e0e 	orr.w	lr, r2, lr
 80261e0:	fa1f f28e 	uxth.w	r2, lr
 80261e4:	2bff      	cmp	r3, #255	; 0xff
 80261e6:	f040 80a1 	bne.w	802632c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80261ea:	803a      	strh	r2, [r7, #0]
 80261ec:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80261ee:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80261f0:	4413      	add	r3, r2
 80261f2:	931d      	str	r3, [sp, #116]	; 0x74
 80261f4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80261f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80261f8:	441a      	add	r2, r3
 80261fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80261fc:	921e      	str	r2, [sp, #120]	; 0x78
 80261fe:	3b01      	subs	r3, #1
 8026200:	3702      	adds	r7, #2
 8026202:	930f      	str	r3, [sp, #60]	; 0x3c
 8026204:	e6c9      	b.n	8025f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026206:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026208:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802620a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 802620c:	4433      	add	r3, r6
 802620e:	931d      	str	r3, [sp, #116]	; 0x74
 8026210:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026212:	441c      	add	r4, r3
 8026214:	9b06      	ldr	r3, [sp, #24]
 8026216:	941e      	str	r4, [sp, #120]	; 0x78
 8026218:	3b01      	subs	r3, #1
 802621a:	9306      	str	r3, [sp, #24]
 802621c:	9b07      	ldr	r3, [sp, #28]
 802621e:	3302      	adds	r3, #2
 8026220:	9307      	str	r3, [sp, #28]
 8026222:	e698      	b.n	8025f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8026224:	d028      	beq.n	8026278 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8026226:	9b06      	ldr	r3, [sp, #24]
 8026228:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802622a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802622c:	3b01      	subs	r3, #1
 802622e:	fb00 5003 	mla	r0, r0, r3, r5
 8026232:	1400      	asrs	r0, r0, #16
 8026234:	f53f aeac 	bmi.w	8025f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8026238:	3901      	subs	r1, #1
 802623a:	4288      	cmp	r0, r1
 802623c:	f6bf aea8 	bge.w	8025f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8026240:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026242:	981e      	ldr	r0, [sp, #120]	; 0x78
 8026244:	fb01 0303 	mla	r3, r1, r3, r0
 8026248:	141b      	asrs	r3, r3, #16
 802624a:	f53f aea1 	bmi.w	8025f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802624e:	3a01      	subs	r2, #1
 8026250:	4293      	cmp	r3, r2
 8026252:	f6bf ae9d 	bge.w	8025f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8026256:	9b06      	ldr	r3, [sp, #24]
 8026258:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802625c:	930f      	str	r3, [sp, #60]	; 0x3c
 802625e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8026262:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026264:	2b00      	cmp	r3, #0
 8026266:	f300 80b6 	bgt.w	80263d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802626a:	9b06      	ldr	r3, [sp, #24]
 802626c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8026270:	9b07      	ldr	r3, [sp, #28]
 8026272:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8026276:	9307      	str	r3, [sp, #28]
 8026278:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802627a:	2b00      	cmp	r3, #0
 802627c:	f340 8218 	ble.w	80266b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8026280:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026284:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026288:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802628c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802628e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026292:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026296:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802629a:	eef0 6a62 	vmov.f32	s13, s5
 802629e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80262a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80262a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80262aa:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80262ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80262b2:	eef0 6a43 	vmov.f32	s13, s6
 80262b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80262ba:	ee12 2a90 	vmov	r2, s5
 80262be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80262c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80262c6:	ee13 2a10 	vmov	r2, s6
 80262ca:	931f      	str	r3, [sp, #124]	; 0x7c
 80262cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80262ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80262d2:	9320      	str	r3, [sp, #128]	; 0x80
 80262d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80262d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80262d8:	3b01      	subs	r3, #1
 80262da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80262de:	930e      	str	r3, [sp, #56]	; 0x38
 80262e0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80262e2:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80262e6:	bf08      	it	eq
 80262e8:	4613      	moveq	r3, r2
 80262ea:	9306      	str	r3, [sp, #24]
 80262ec:	eeb0 3a67 	vmov.f32	s6, s15
 80262f0:	eef0 2a47 	vmov.f32	s5, s14
 80262f4:	e621      	b.n	8025f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80262f6:	fb08 f505 	mul.w	r5, r8, r5
 80262fa:	fb09 5303 	mla	r3, r9, r3, r5
 80262fe:	e6a1      	b.n	8026044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8026300:	4681      	mov	r9, r0
 8026302:	e6c8      	b.n	8026096 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8026304:	f1c1 0210 	rsb	r2, r1, #16
 8026308:	4341      	muls	r1, r0
 802630a:	fb09 1902 	mla	r9, r9, r2, r1
 802630e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8026312:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8026316:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802631a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802631e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026322:	ea42 0909 	orr.w	r9, r2, r9
 8026326:	fa1f f289 	uxth.w	r2, r9
 802632a:	e75b      	b.n	80261e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802632c:	f8b7 c000 	ldrh.w	ip, [r7]
 8026330:	43db      	mvns	r3, r3
 8026332:	ea4f 202c 	mov.w	r0, ip, asr #8
 8026336:	fa5f fe83 	uxtb.w	lr, r3
 802633a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802633e:	fb00 f00e 	mul.w	r0, r0, lr
 8026342:	1c41      	adds	r1, r0, #1
 8026344:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8026348:	1211      	asrs	r1, r2, #8
 802634a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802634e:	f021 0107 	bic.w	r1, r1, #7
 8026352:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026356:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802635a:	48d7      	ldr	r0, [pc, #860]	; (80266b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802635c:	fb05 f50e 	mul.w	r5, r5, lr
 8026360:	b2c9      	uxtb	r1, r1
 8026362:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8026366:	1c69      	adds	r1, r5, #1
 8026368:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802636c:	10d1      	asrs	r1, r2, #3
 802636e:	f021 0103 	bic.w	r1, r1, #3
 8026372:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8026376:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802637a:	b2db      	uxtb	r3, r3
 802637c:	00c9      	lsls	r1, r1, #3
 802637e:	fb03 f30e 	mul.w	r3, r3, lr
 8026382:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026386:	4301      	orrs	r1, r0
 8026388:	1c58      	adds	r0, r3, #1
 802638a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802638e:	00d2      	lsls	r2, r2, #3
 8026390:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026394:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026398:	430a      	orrs	r2, r1
 802639a:	e726      	b.n	80261ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802639c:	f115 0e01 	adds.w	lr, r5, #1
 80263a0:	f53f af24 	bmi.w	80261ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80263a4:	4572      	cmp	r2, lr
 80263a6:	f6ff af21 	blt.w	80261ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80263aa:	f110 0e01 	adds.w	lr, r0, #1
 80263ae:	f53f af1d 	bmi.w	80261ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80263b2:	4573      	cmp	r3, lr
 80263b4:	f6ff af1a 	blt.w	80261ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80263b8:	b21b      	sxth	r3, r3
 80263ba:	b212      	sxth	r2, r2
 80263bc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80263c0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80263c4:	9301      	str	r3, [sp, #4]
 80263c6:	9200      	str	r2, [sp, #0]
 80263c8:	4639      	mov	r1, r7
 80263ca:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80263ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 80263d0:	f7ff fc24 	bl	8025c1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80263d4:	e70a      	b.n	80261ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80263d6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80263d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80263dc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80263de:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80263e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80263e4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80263e8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80263ea:	141f      	asrs	r7, r3, #16
 80263ec:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80263ee:	141b      	asrs	r3, r3, #16
 80263f0:	fb01 3707 	mla	r7, r1, r7, r3
 80263f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80263f6:	fa1f fc82 	uxth.w	ip, r2
 80263fa:	eb03 0a07 	add.w	sl, r3, r7
 80263fe:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8026402:	f813 9007 	ldrb.w	r9, [r3, r7]
 8026406:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802640a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802640e:	b29b      	uxth	r3, r3
 8026410:	2d00      	cmp	r5, #0
 8026412:	f000 80fe 	beq.w	8026612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8026416:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802641a:	940c      	str	r4, [sp, #48]	; 0x30
 802641c:	eb0a 0b01 	add.w	fp, sl, r1
 8026420:	fa1f fa85 	uxth.w	sl, r5
 8026424:	fb0a fc0c 	mul.w	ip, sl, ip
 8026428:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802642c:	fa1f fa8a 	uxth.w	sl, sl
 8026430:	eba0 000c 	sub.w	r0, r0, ip
 8026434:	eba3 030a 	sub.w	r3, r3, sl
 8026438:	b280      	uxth	r0, r0
 802643a:	fb08 f000 	mul.w	r0, r8, r0
 802643e:	b29b      	uxth	r3, r3
 8026440:	fb09 0303 	mla	r3, r9, r3, r0
 8026444:	980c      	ldr	r0, [sp, #48]	; 0x30
 8026446:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802644a:	940d      	str	r4, [sp, #52]	; 0x34
 802644c:	fb0a 3300 	mla	r3, sl, r0, r3
 8026450:	fb0c 3304 	mla	r3, ip, r4, r3
 8026454:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026458:	2b00      	cmp	r3, #0
 802645a:	f000 80cc 	beq.w	80265f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802645e:	9808      	ldr	r0, [sp, #32]
 8026460:	9c08      	ldr	r4, [sp, #32]
 8026462:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026466:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802646a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802646e:	f000 80d5 	beq.w	802661c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8026472:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026476:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802647a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802647e:	fb09 f707 	mul.w	r7, r9, r7
 8026482:	fb0a fc0c 	mul.w	ip, sl, ip
 8026486:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802648a:	f107 0b20 	add.w	fp, r7, #32
 802648e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026492:	44cc      	add	ip, r9
 8026494:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8026498:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802649c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80264a0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80264a4:	ea4c 0909 	orr.w	r9, ip, r9
 80264a8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80264ac:	8847      	ldrh	r7, [r0, #2]
 80264ae:	d019      	beq.n	80264e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80264b0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80264b4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80264b8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80264bc:	fb08 f807 	mul.w	r8, r8, r7
 80264c0:	fb0a fc0c 	mul.w	ip, sl, ip
 80264c4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80264c8:	f108 0b20 	add.w	fp, r8, #32
 80264cc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80264d0:	44bc      	add	ip, r7
 80264d2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80264d6:	0a3f      	lsrs	r7, r7, #8
 80264d8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80264dc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80264e0:	ea4c 0707 	orr.w	r7, ip, r7
 80264e4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80264e8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80264ec:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80264f0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80264f4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80264f8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80264fc:	ea4c 0909 	orr.w	r9, ip, r9
 8026500:	ea4a 0707 	orr.w	r7, sl, r7
 8026504:	2d00      	cmp	r5, #0
 8026506:	f000 808b 	beq.w	8026620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802650a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802650e:	3901      	subs	r1, #1
 8026510:	0049      	lsls	r1, r1, #1
 8026512:	3102      	adds	r1, #2
 8026514:	eb00 0c01 	add.w	ip, r0, r1
 8026518:	5a41      	ldrh	r1, [r0, r1]
 802651a:	980c      	ldr	r0, [sp, #48]	; 0x30
 802651c:	28ff      	cmp	r0, #255	; 0xff
 802651e:	d019      	beq.n	8026554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8026520:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8026522:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8026526:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802652a:	fb04 fa01 	mul.w	sl, r4, r1
 802652e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026532:	fb08 f800 	mul.w	r8, r8, r0
 8026536:	f10a 0020 	add.w	r0, sl, #32
 802653a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802653e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8026542:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026546:	4441      	add	r1, r8
 8026548:	0a00      	lsrs	r0, r0, #8
 802654a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802654e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026552:	4301      	orrs	r1, r0
 8026554:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8026556:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802655a:	2cff      	cmp	r4, #255	; 0xff
 802655c:	d01a      	beq.n	8026594 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802655e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8026562:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026566:	fb04 fa00 	mul.w	sl, r4, r0
 802656a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802656e:	fb08 f80c 	mul.w	r8, r8, ip
 8026572:	f10a 0c20 	add.w	ip, sl, #32
 8026576:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802657a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802657e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026582:	4440      	add	r0, r8
 8026584:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026588:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802658c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026590:	ea40 000c 	orr.w	r0, r0, ip
 8026594:	fb15 fc02 	smulbb	ip, r5, r2
 8026598:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802659c:	f1c5 0810 	rsb	r8, r5, #16
 80265a0:	eba8 0802 	sub.w	r8, r8, r2
 80265a4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80265a8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80265ac:	437a      	muls	r2, r7
 80265ae:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80265b2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80265b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80265ba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80265be:	fb09 2208 	mla	r2, r9, r8, r2
 80265c2:	ea4a 0101 	orr.w	r1, sl, r1
 80265c6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80265ca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80265ce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80265d2:	fb05 2201 	mla	r2, r5, r1, r2
 80265d6:	ea4b 0000 	orr.w	r0, fp, r0
 80265da:	fb0c 2200 	mla	r2, ip, r0, r2
 80265de:	0d57      	lsrs	r7, r2, #21
 80265e0:	0952      	lsrs	r2, r2, #5
 80265e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80265e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80265ea:	433a      	orrs	r2, r7
 80265ec:	2bff      	cmp	r3, #255	; 0xff
 80265ee:	b292      	uxth	r2, r2
 80265f0:	d127      	bne.n	8026642 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80265f2:	f8ae 2000 	strh.w	r2, [lr]
 80265f6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80265f8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80265fa:	4413      	add	r3, r2
 80265fc:	931d      	str	r3, [sp, #116]	; 0x74
 80265fe:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8026600:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026602:	441a      	add	r2, r3
 8026604:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026606:	921e      	str	r2, [sp, #120]	; 0x78
 8026608:	3b01      	subs	r3, #1
 802660a:	f10e 0e02 	add.w	lr, lr, #2
 802660e:	930f      	str	r3, [sp, #60]	; 0x3c
 8026610:	e627      	b.n	8026262 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026612:	fb08 f000 	mul.w	r0, r8, r0
 8026616:	fb09 0303 	mla	r3, r9, r3, r0
 802661a:	e71b      	b.n	8026454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802661c:	46b9      	mov	r9, r7
 802661e:	e743      	b.n	80264a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8026620:	f1c2 0110 	rsb	r1, r2, #16
 8026624:	437a      	muls	r2, r7
 8026626:	fb09 2901 	mla	r9, r9, r1, r2
 802662a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802662e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8026632:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8026636:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802663a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802663e:	4302      	orrs	r2, r0
 8026640:	e7d4      	b.n	80265ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8026642:	f8be 7000 	ldrh.w	r7, [lr]
 8026646:	4c1c      	ldr	r4, [pc, #112]	; (80266b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8026648:	43db      	mvns	r3, r3
 802664a:	1238      	asrs	r0, r7, #8
 802664c:	fa5f fc83 	uxtb.w	ip, r3
 8026650:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026654:	10fd      	asrs	r5, r7, #3
 8026656:	fb00 f00c 	mul.w	r0, r0, ip
 802665a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802665e:	fb05 f10c 	mul.w	r1, r5, ip
 8026662:	1c45      	adds	r5, r0, #1
 8026664:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026668:	1215      	asrs	r5, r2, #8
 802666a:	f025 0507 	bic.w	r5, r5, #7
 802666e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026672:	1c4d      	adds	r5, r1, #1
 8026674:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026678:	10d1      	asrs	r1, r2, #3
 802667a:	f021 0103 	bic.w	r1, r1, #3
 802667e:	00fb      	lsls	r3, r7, #3
 8026680:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8026684:	b2db      	uxtb	r3, r3
 8026686:	b2c0      	uxtb	r0, r0
 8026688:	00c9      	lsls	r1, r1, #3
 802668a:	fb03 f30c 	mul.w	r3, r3, ip
 802668e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026692:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8026696:	4308      	orrs	r0, r1
 8026698:	1c59      	adds	r1, r3, #1
 802669a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802669e:	00d2      	lsls	r2, r2, #3
 80266a0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80266a4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80266a8:	4318      	orrs	r0, r3
 80266aa:	f8ae 0000 	strh.w	r0, [lr]
 80266ae:	e7a2      	b.n	80265f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80266b0:	b013      	add	sp, #76	; 0x4c
 80266b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80266b6:	bf00      	nop
 80266b8:	fffff800 	.word	0xfffff800

080266bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80266bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80266c0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80266c4:	fb05 4c03 	mla	ip, r5, r3, r4
 80266c8:	2d00      	cmp	r5, #0
 80266ca:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80266ce:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80266d2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80266d6:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80266da:	8808      	ldrh	r0, [r1, #0]
 80266dc:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80266e0:	f2c0 80a7 	blt.w	8026832 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80266e4:	45aa      	cmp	sl, r5
 80266e6:	f340 80a4 	ble.w	8026832 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80266ea:	2c00      	cmp	r4, #0
 80266ec:	f2c0 809f 	blt.w	802682e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80266f0:	42a3      	cmp	r3, r4
 80266f2:	f340 809c 	ble.w	802682e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80266f6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80266fa:	1c62      	adds	r2, r4, #1
 80266fc:	f100 809c 	bmi.w	8026838 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026700:	4293      	cmp	r3, r2
 8026702:	f340 8099 	ble.w	8026838 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026706:	f1b9 0f00 	cmp.w	r9, #0
 802670a:	f000 8095 	beq.w	8026838 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802670e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8026712:	3501      	adds	r5, #1
 8026714:	f100 8094 	bmi.w	8026840 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026718:	45aa      	cmp	sl, r5
 802671a:	f340 8091 	ble.w	8026840 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802671e:	2f00      	cmp	r7, #0
 8026720:	f000 808e 	beq.w	8026840 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026724:	2c00      	cmp	r4, #0
 8026726:	f2c0 8089 	blt.w	802683c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802672a:	42a3      	cmp	r3, r4
 802672c:	f340 8086 	ble.w	802683c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8026730:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8026734:	3401      	adds	r4, #1
 8026736:	f100 8086 	bmi.w	8026846 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802673a:	42a3      	cmp	r3, r4
 802673c:	f340 8083 	ble.w	8026846 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026740:	f1b9 0f00 	cmp.w	r9, #0
 8026744:	d07f      	beq.n	8026846 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026746:	3301      	adds	r3, #1
 8026748:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802674c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8026750:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026754:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8026758:	fb19 fe07 	smulbb	lr, r9, r7
 802675c:	ea44 0808 	orr.w	r8, r4, r8
 8026760:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8026764:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8026768:	f1c7 0210 	rsb	r2, r7, #16
 802676c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026770:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026774:	ea44 0c0c 	orr.w	ip, r4, ip
 8026778:	eba2 0209 	sub.w	r2, r2, r9
 802677c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8026780:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8026784:	fb04 f40c 	mul.w	r4, r4, ip
 8026788:	fb02 4808 	mla	r8, r2, r8, r4
 802678c:	041a      	lsls	r2, r3, #16
 802678e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026792:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026796:	4313      	orrs	r3, r2
 8026798:	042a      	lsls	r2, r5, #16
 802679a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802679e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80267a2:	fb0e 8303 	mla	r3, lr, r3, r8
 80267a6:	432a      	orrs	r2, r5
 80267a8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80267ac:	fb07 3202 	mla	r2, r7, r2, r3
 80267b0:	0d53      	lsrs	r3, r2, #21
 80267b2:	0952      	lsrs	r2, r2, #5
 80267b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80267b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80267bc:	431a      	orrs	r2, r3
 80267be:	b293      	uxth	r3, r2
 80267c0:	b2b4      	uxth	r4, r6
 80267c2:	1202      	asrs	r2, r0, #8
 80267c4:	43f6      	mvns	r6, r6
 80267c6:	b2f6      	uxtb	r6, r6
 80267c8:	121d      	asrs	r5, r3, #8
 80267ca:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80267ce:	fb12 f206 	smulbb	r2, r2, r6
 80267d2:	10c7      	asrs	r7, r0, #3
 80267d4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80267d8:	00c0      	lsls	r0, r0, #3
 80267da:	fb05 2504 	mla	r5, r5, r4, r2
 80267de:	b2c0      	uxtb	r0, r0
 80267e0:	10da      	asrs	r2, r3, #3
 80267e2:	00db      	lsls	r3, r3, #3
 80267e4:	b2db      	uxtb	r3, r3
 80267e6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80267ea:	fb10 f006 	smulbb	r0, r0, r6
 80267ee:	b2ad      	uxth	r5, r5
 80267f0:	fb03 0004 	mla	r0, r3, r4, r0
 80267f4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80267f8:	fb17 f706 	smulbb	r7, r7, r6
 80267fc:	b280      	uxth	r0, r0
 80267fe:	1c6b      	adds	r3, r5, #1
 8026800:	fb02 7204 	mla	r2, r2, r4, r7
 8026804:	b292      	uxth	r2, r2
 8026806:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802680a:	1c43      	adds	r3, r0, #1
 802680c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8026810:	1c50      	adds	r0, r2, #1
 8026812:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8026816:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802681a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802681e:	0952      	lsrs	r2, r2, #5
 8026820:	432b      	orrs	r3, r5
 8026822:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026826:	4313      	orrs	r3, r2
 8026828:	800b      	strh	r3, [r1, #0]
 802682a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802682e:	4680      	mov	r8, r0
 8026830:	e763      	b.n	80266fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8026832:	4684      	mov	ip, r0
 8026834:	4680      	mov	r8, r0
 8026836:	e76c      	b.n	8026712 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8026838:	4684      	mov	ip, r0
 802683a:	e76a      	b.n	8026712 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802683c:	4605      	mov	r5, r0
 802683e:	e779      	b.n	8026734 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8026840:	4603      	mov	r3, r0
 8026842:	4605      	mov	r5, r0
 8026844:	e782      	b.n	802674c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8026846:	4603      	mov	r3, r0
 8026848:	e780      	b.n	802674c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802684a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802684a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802684e:	b093      	sub	sp, #76	; 0x4c
 8026850:	461d      	mov	r5, r3
 8026852:	9210      	str	r2, [sp, #64]	; 0x40
 8026854:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026856:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802685a:	920b      	str	r2, [sp, #44]	; 0x2c
 802685c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8026860:	910a      	str	r1, [sp, #40]	; 0x28
 8026862:	6859      	ldr	r1, [r3, #4]
 8026864:	681b      	ldr	r3, [r3, #0]
 8026866:	9011      	str	r0, [sp, #68]	; 0x44
 8026868:	fb01 2707 	mla	r7, r1, r7, r2
 802686c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8026870:	9307      	str	r3, [sp, #28]
 8026872:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026874:	681b      	ldr	r3, [r3, #0]
 8026876:	9309      	str	r3, [sp, #36]	; 0x24
 8026878:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802687a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802687e:	43db      	mvns	r3, r3
 8026880:	b2db      	uxtb	r3, r3
 8026882:	9308      	str	r3, [sp, #32]
 8026884:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026886:	2b00      	cmp	r3, #0
 8026888:	dc03      	bgt.n	8026892 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802688a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802688c:	2b00      	cmp	r3, #0
 802688e:	f340 8203 	ble.w	8026c98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026892:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026894:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026898:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802689c:	1e48      	subs	r0, r1, #1
 802689e:	f102 3cff 	add.w	ip, r2, #4294967295
 80268a2:	2d00      	cmp	r5, #0
 80268a4:	f340 80da 	ble.w	8026a5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80268a8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80268ac:	ea4f 4326 	mov.w	r3, r6, asr #16
 80268b0:	d406      	bmi.n	80268c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80268b2:	4586      	cmp	lr, r0
 80268b4:	da04      	bge.n	80268c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80268b6:	2b00      	cmp	r3, #0
 80268b8:	db02      	blt.n	80268c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80268ba:	4563      	cmp	r3, ip
 80268bc:	f2c0 80cf 	blt.w	8026a5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80268c0:	f11e 0e01 	adds.w	lr, lr, #1
 80268c4:	f100 80c1 	bmi.w	8026a4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80268c8:	4571      	cmp	r1, lr
 80268ca:	f2c0 80be 	blt.w	8026a4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80268ce:	3301      	adds	r3, #1
 80268d0:	f100 80bb 	bmi.w	8026a4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80268d4:	429a      	cmp	r2, r3
 80268d6:	f2c0 80b8 	blt.w	8026a4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80268da:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80268de:	46a9      	mov	r9, r5
 80268e0:	f1b9 0f00 	cmp.w	r9, #0
 80268e4:	f340 80d8 	ble.w	8026a98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80268e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80268ea:	1421      	asrs	r1, r4, #16
 80268ec:	ea4f 4026 	mov.w	r0, r6, asr #16
 80268f0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80268f4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80268f8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80268fc:	f100 8111 	bmi.w	8026b22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026900:	f10e 3aff 	add.w	sl, lr, #4294967295
 8026904:	4551      	cmp	r1, sl
 8026906:	f280 810c 	bge.w	8026b22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802690a:	2800      	cmp	r0, #0
 802690c:	f2c0 8109 	blt.w	8026b22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026910:	f103 3aff 	add.w	sl, r3, #4294967295
 8026914:	4550      	cmp	r0, sl
 8026916:	f280 8104 	bge.w	8026b22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802691a:	fa0f f38e 	sxth.w	r3, lr
 802691e:	fb00 1103 	mla	r1, r0, r3, r1
 8026922:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026924:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8026928:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802692c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8026930:	f1bc 0f00 	cmp.w	ip, #0
 8026934:	d007      	beq.n	8026946 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8026936:	005b      	lsls	r3, r3, #1
 8026938:	eb0a 0003 	add.w	r0, sl, r3
 802693c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8026940:	930c      	str	r3, [sp, #48]	; 0x30
 8026942:	8843      	ldrh	r3, [r0, #2]
 8026944:	930d      	str	r3, [sp, #52]	; 0x34
 8026946:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802694a:	fb12 f30c 	smulbb	r3, r2, ip
 802694e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026952:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026956:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802695a:	10db      	asrs	r3, r3, #3
 802695c:	ea40 000e 	orr.w	r0, r0, lr
 8026960:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026964:	f1cc 0e10 	rsb	lr, ip, #16
 8026968:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802696c:	ebae 0e02 	sub.w	lr, lr, r2
 8026970:	ea4a 0101 	orr.w	r1, sl, r1
 8026974:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026978:	4351      	muls	r1, r2
 802697a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802697c:	9f08      	ldr	r7, [sp, #32]
 802697e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026982:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026986:	0410      	lsls	r0, r2, #16
 8026988:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802698c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026990:	4310      	orrs	r0, r2
 8026992:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026994:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026996:	0412      	lsls	r2, r2, #16
 8026998:	fb03 e000 	mla	r0, r3, r0, lr
 802699c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80269a0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80269a4:	ea42 020e 	orr.w	r2, r2, lr
 80269a8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80269ac:	fb03 0302 	mla	r3, r3, r2, r0
 80269b0:	0d5a      	lsrs	r2, r3, #21
 80269b2:	095b      	lsrs	r3, r3, #5
 80269b4:	f8b8 0000 	ldrh.w	r0, [r8]
 80269b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80269bc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80269c0:	4313      	orrs	r3, r2
 80269c2:	b29b      	uxth	r3, r3
 80269c4:	1201      	asrs	r1, r0, #8
 80269c6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80269ca:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80269ce:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80269d2:	fb11 f107 	smulbb	r1, r1, r7
 80269d6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80269da:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80269de:	00c0      	lsls	r0, r0, #3
 80269e0:	fb0c 1c02 	mla	ip, ip, r2, r1
 80269e4:	b2c0      	uxtb	r0, r0
 80269e6:	10d9      	asrs	r1, r3, #3
 80269e8:	00db      	lsls	r3, r3, #3
 80269ea:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80269ee:	b2db      	uxtb	r3, r3
 80269f0:	fb10 f007 	smulbb	r0, r0, r7
 80269f4:	fa1f fc8c 	uxth.w	ip, ip
 80269f8:	fb03 0302 	mla	r3, r3, r2, r0
 80269fc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026a00:	fb1e fe07 	smulbb	lr, lr, r7
 8026a04:	fb01 e102 	mla	r1, r1, r2, lr
 8026a08:	b29a      	uxth	r2, r3
 8026a0a:	f10c 0301 	add.w	r3, ip, #1
 8026a0e:	b289      	uxth	r1, r1
 8026a10:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8026a14:	1c53      	adds	r3, r2, #1
 8026a16:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026a1a:	1c4a      	adds	r2, r1, #1
 8026a1c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8026a20:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8026a24:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026a28:	0949      	lsrs	r1, r1, #5
 8026a2a:	ea43 030c 	orr.w	r3, r3, ip
 8026a2e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026a32:	430b      	orrs	r3, r1
 8026a34:	f8a8 3000 	strh.w	r3, [r8]
 8026a38:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026a3a:	441c      	add	r4, r3
 8026a3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026a3e:	f108 0802 	add.w	r8, r8, #2
 8026a42:	441e      	add	r6, r3
 8026a44:	f109 39ff 	add.w	r9, r9, #4294967295
 8026a48:	e74a      	b.n	80268e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8026a4a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026a4c:	441c      	add	r4, r3
 8026a4e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026a50:	441e      	add	r6, r3
 8026a52:	9b07      	ldr	r3, [sp, #28]
 8026a54:	3302      	adds	r3, #2
 8026a56:	3d01      	subs	r5, #1
 8026a58:	9307      	str	r3, [sp, #28]
 8026a5a:	e722      	b.n	80268a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026a5c:	d022      	beq.n	8026aa4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8026a5e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026a60:	1e6b      	subs	r3, r5, #1
 8026a62:	fb00 4003 	mla	r0, r0, r3, r4
 8026a66:	1400      	asrs	r0, r0, #16
 8026a68:	f53f af37 	bmi.w	80268da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026a6c:	3901      	subs	r1, #1
 8026a6e:	4288      	cmp	r0, r1
 8026a70:	f6bf af33 	bge.w	80268da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026a74:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026a76:	fb01 6303 	mla	r3, r1, r3, r6
 8026a7a:	141b      	asrs	r3, r3, #16
 8026a7c:	f53f af2d 	bmi.w	80268da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026a80:	3a01      	subs	r2, #1
 8026a82:	4293      	cmp	r3, r2
 8026a84:	f6bf af29 	bge.w	80268da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026a88:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8026a8c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8026a90:	46a8      	mov	r8, r5
 8026a92:	f1b8 0f00 	cmp.w	r8, #0
 8026a96:	dc5e      	bgt.n	8026b56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026a98:	9b07      	ldr	r3, [sp, #28]
 8026a9a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026a9e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026aa2:	9307      	str	r3, [sp, #28]
 8026aa4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026aa6:	2b00      	cmp	r3, #0
 8026aa8:	f340 80f6 	ble.w	8026c98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026aac:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026ab0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026ab4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026ab8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026aba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026abe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026ac2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026ac6:	eef0 6a62 	vmov.f32	s13, s5
 8026aca:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026ace:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026ad2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026ad6:	ee16 4a90 	vmov	r4, s13
 8026ada:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026ade:	eef0 6a43 	vmov.f32	s13, s6
 8026ae2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026ae6:	ee12 2a90 	vmov	r2, s5
 8026aea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026aee:	fb92 f3f3 	sdiv	r3, r2, r3
 8026af2:	ee13 2a10 	vmov	r2, s6
 8026af6:	931f      	str	r3, [sp, #124]	; 0x7c
 8026af8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026afa:	fb92 f3f3 	sdiv	r3, r2, r3
 8026afe:	9320      	str	r3, [sp, #128]	; 0x80
 8026b00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026b02:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026b04:	3b01      	subs	r3, #1
 8026b06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026b0a:	930a      	str	r3, [sp, #40]	; 0x28
 8026b0c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026b0e:	ee16 6a90 	vmov	r6, s13
 8026b12:	bf14      	ite	ne
 8026b14:	461d      	movne	r5, r3
 8026b16:	4615      	moveq	r5, r2
 8026b18:	eeb0 3a67 	vmov.f32	s6, s15
 8026b1c:	eef0 2a47 	vmov.f32	s5, s14
 8026b20:	e6b0      	b.n	8026884 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026b22:	f111 0a01 	adds.w	sl, r1, #1
 8026b26:	d487      	bmi.n	8026a38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026b28:	45d6      	cmp	lr, sl
 8026b2a:	db85      	blt.n	8026a38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026b2c:	f110 0a01 	adds.w	sl, r0, #1
 8026b30:	d482      	bmi.n	8026a38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026b32:	4553      	cmp	r3, sl
 8026b34:	db80      	blt.n	8026a38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026b36:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8026b38:	9101      	str	r1, [sp, #4]
 8026b3a:	b21b      	sxth	r3, r3
 8026b3c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8026b40:	9300      	str	r3, [sp, #0]
 8026b42:	e9cd c704 	strd	ip, r7, [sp, #16]
 8026b46:	fa0f f38e 	sxth.w	r3, lr
 8026b4a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026b4c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026b4e:	4641      	mov	r1, r8
 8026b50:	f7ff fdb4 	bl	80266bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8026b54:	e770      	b.n	8026a38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026b56:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026b58:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8026b5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026b5e:	1430      	asrs	r0, r6, #16
 8026b60:	1423      	asrs	r3, r4, #16
 8026b62:	fb01 3000 	mla	r0, r1, r0, r3
 8026b66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b68:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8026b6c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8026b70:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026b74:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026b78:	8858      	ldrh	r0, [r3, #2]
 8026b7a:	f1be 0f00 	cmp.w	lr, #0
 8026b7e:	d00b      	beq.n	8026b98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8026b80:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026b84:	3901      	subs	r1, #1
 8026b86:	0049      	lsls	r1, r1, #1
 8026b88:	3102      	adds	r1, #2
 8026b8a:	eb03 0b01 	add.w	fp, r3, r1
 8026b8e:	5a5b      	ldrh	r3, [r3, r1]
 8026b90:	930e      	str	r3, [sp, #56]	; 0x38
 8026b92:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026b96:	930f      	str	r3, [sp, #60]	; 0x3c
 8026b98:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8026b9c:	fb12 f30e 	smulbb	r3, r2, lr
 8026ba0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026ba4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026ba8:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8026bac:	10db      	asrs	r3, r3, #3
 8026bae:	ea41 010c 	orr.w	r1, r1, ip
 8026bb2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026bb6:	f1ce 0c10 	rsb	ip, lr, #16
 8026bba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026bbe:	ebac 0c02 	sub.w	ip, ip, r2
 8026bc2:	ea4b 0000 	orr.w	r0, fp, r0
 8026bc6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026bca:	4350      	muls	r0, r2
 8026bcc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026bce:	9f08      	ldr	r7, [sp, #32]
 8026bd0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026bd4:	fb0c 0c01 	mla	ip, ip, r1, r0
 8026bd8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026bdc:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8026be0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026be2:	980e      	ldr	r0, [sp, #56]	; 0x38
 8026be4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026be8:	0412      	lsls	r2, r2, #16
 8026bea:	ea4b 0101 	orr.w	r1, fp, r1
 8026bee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026bf2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026bf6:	fb03 c101 	mla	r1, r3, r1, ip
 8026bfa:	4302      	orrs	r2, r0
 8026bfc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026c00:	fb03 1202 	mla	r2, r3, r2, r1
 8026c04:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8026c08:	0952      	lsrs	r2, r2, #5
 8026c0a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8026c0e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8026c12:	f8b9 2000 	ldrh.w	r2, [r9]
 8026c16:	ea4b 0303 	orr.w	r3, fp, r3
 8026c1a:	b29b      	uxth	r3, r3
 8026c1c:	1211      	asrs	r1, r2, #8
 8026c1e:	1218      	asrs	r0, r3, #8
 8026c20:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026c24:	fb11 f107 	smulbb	r1, r1, r7
 8026c28:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8026c2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026c30:	00d2      	lsls	r2, r2, #3
 8026c32:	fb00 100a 	mla	r0, r0, sl, r1
 8026c36:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8026c3a:	10d9      	asrs	r1, r3, #3
 8026c3c:	b2d2      	uxtb	r2, r2
 8026c3e:	00db      	lsls	r3, r3, #3
 8026c40:	fb1c fc07 	smulbb	ip, ip, r7
 8026c44:	fb12 f207 	smulbb	r2, r2, r7
 8026c48:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026c4c:	b2db      	uxtb	r3, r3
 8026c4e:	b280      	uxth	r0, r0
 8026c50:	fb01 c10a 	mla	r1, r1, sl, ip
 8026c54:	fb03 230a 	mla	r3, r3, sl, r2
 8026c58:	b29b      	uxth	r3, r3
 8026c5a:	b289      	uxth	r1, r1
 8026c5c:	1c42      	adds	r2, r0, #1
 8026c5e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026c62:	f101 0c01 	add.w	ip, r1, #1
 8026c66:	1c5a      	adds	r2, r3, #1
 8026c68:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026c6c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8026c70:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026c72:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026c76:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026c7a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026c7e:	4310      	orrs	r0, r2
 8026c80:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026c84:	441c      	add	r4, r3
 8026c86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c88:	ea40 000c 	orr.w	r0, r0, ip
 8026c8c:	f829 0b02 	strh.w	r0, [r9], #2
 8026c90:	441e      	add	r6, r3
 8026c92:	f108 38ff 	add.w	r8, r8, #4294967295
 8026c96:	e6fc      	b.n	8026a92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8026c98:	b013      	add	sp, #76	; 0x4c
 8026c9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026c9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8026c9e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8026ca2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8026ca6:	fb0e 4703 	mla	r7, lr, r3, r4
 8026caa:	f1be 0f00 	cmp.w	lr, #0
 8026cae:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8026cb2:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8026cb6:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8026cba:	8808      	ldrh	r0, [r1, #0]
 8026cbc:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8026cc0:	db60      	blt.n	8026d84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026cc2:	45f1      	cmp	r9, lr
 8026cc4:	dd5e      	ble.n	8026d84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026cc6:	2c00      	cmp	r4, #0
 8026cc8:	db5a      	blt.n	8026d80 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026cca:	42a3      	cmp	r3, r4
 8026ccc:	dd58      	ble.n	8026d80 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026cce:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8026cd2:	1c62      	adds	r2, r4, #1
 8026cd4:	d459      	bmi.n	8026d8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026cd6:	4293      	cmp	r3, r2
 8026cd8:	dd57      	ble.n	8026d8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026cda:	2d00      	cmp	r5, #0
 8026cdc:	d055      	beq.n	8026d8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026cde:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8026ce2:	f11e 0e01 	adds.w	lr, lr, #1
 8026ce6:	d454      	bmi.n	8026d92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026ce8:	45f1      	cmp	r9, lr
 8026cea:	dd52      	ble.n	8026d92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026cec:	2e00      	cmp	r6, #0
 8026cee:	d050      	beq.n	8026d92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026cf0:	2c00      	cmp	r4, #0
 8026cf2:	db4c      	blt.n	8026d8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026cf4:	42a3      	cmp	r3, r4
 8026cf6:	dd4a      	ble.n	8026d8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026cf8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8026cfc:	3401      	adds	r4, #1
 8026cfe:	d405      	bmi.n	8026d0c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026d00:	42a3      	cmp	r3, r4
 8026d02:	dd03      	ble.n	8026d0c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026d04:	b115      	cbz	r5, 8026d0c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026d06:	3301      	adds	r3, #1
 8026d08:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8026d0c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8026d10:	fb15 f406 	smulbb	r4, r5, r6
 8026d14:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026d18:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8026d1c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026d20:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8026d24:	ea43 0c0c 	orr.w	ip, r3, ip
 8026d28:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026d2c:	f1c6 0310 	rsb	r3, r6, #16
 8026d30:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026d34:	1b5b      	subs	r3, r3, r5
 8026d36:	ea4e 0707 	orr.w	r7, lr, r7
 8026d3a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8026d3e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026d42:	437d      	muls	r5, r7
 8026d44:	fb03 5c0c 	mla	ip, r3, ip, r5
 8026d48:	0403      	lsls	r3, r0, #16
 8026d4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026d4e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026d52:	4318      	orrs	r0, r3
 8026d54:	0413      	lsls	r3, r2, #16
 8026d56:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026d5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026d5e:	4313      	orrs	r3, r2
 8026d60:	fb04 c000 	mla	r0, r4, r0, ip
 8026d64:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8026d68:	fb06 0003 	mla	r0, r6, r3, r0
 8026d6c:	0d43      	lsrs	r3, r0, #21
 8026d6e:	0940      	lsrs	r0, r0, #5
 8026d70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026d74:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026d78:	4318      	orrs	r0, r3
 8026d7a:	8008      	strh	r0, [r1, #0]
 8026d7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026d80:	4684      	mov	ip, r0
 8026d82:	e7a6      	b.n	8026cd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8026d84:	4607      	mov	r7, r0
 8026d86:	4684      	mov	ip, r0
 8026d88:	e7ab      	b.n	8026ce2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026d8a:	4607      	mov	r7, r0
 8026d8c:	e7a9      	b.n	8026ce2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026d8e:	4602      	mov	r2, r0
 8026d90:	e7b4      	b.n	8026cfc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8026d92:	4602      	mov	r2, r0
 8026d94:	e7ba      	b.n	8026d0c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08026d96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026d96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026d9a:	b08f      	sub	sp, #60	; 0x3c
 8026d9c:	461d      	mov	r5, r3
 8026d9e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026da0:	920c      	str	r2, [sp, #48]	; 0x30
 8026da2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8026da6:	9107      	str	r1, [sp, #28]
 8026da8:	6859      	ldr	r1, [r3, #4]
 8026daa:	681b      	ldr	r3, [r3, #0]
 8026dac:	900d      	str	r0, [sp, #52]	; 0x34
 8026dae:	fb01 2707 	mla	r7, r1, r7, r2
 8026db2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026db6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026db8:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8026dbc:	f8d3 8000 	ldr.w	r8, [r3]
 8026dc0:	9b07      	ldr	r3, [sp, #28]
 8026dc2:	2b00      	cmp	r3, #0
 8026dc4:	dc03      	bgt.n	8026dce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026dc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026dc8:	2b00      	cmp	r3, #0
 8026dca:	f340 8181 	ble.w	80270d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026dce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026dd0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026dd4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026dd8:	1e48      	subs	r0, r1, #1
 8026dda:	f102 3cff 	add.w	ip, r2, #4294967295
 8026dde:	2d00      	cmp	r5, #0
 8026de0:	f340 809b 	ble.w	8026f1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8026de4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026de8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026dec:	d406      	bmi.n	8026dfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026dee:	4586      	cmp	lr, r0
 8026df0:	da04      	bge.n	8026dfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026df2:	2b00      	cmp	r3, #0
 8026df4:	db02      	blt.n	8026dfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026df6:	4563      	cmp	r3, ip
 8026df8:	f2c0 8090 	blt.w	8026f1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026dfc:	f11e 0e01 	adds.w	lr, lr, #1
 8026e00:	f100 8084 	bmi.w	8026f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026e04:	4571      	cmp	r1, lr
 8026e06:	f2c0 8081 	blt.w	8026f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026e0a:	3301      	adds	r3, #1
 8026e0c:	d47e      	bmi.n	8026f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026e0e:	429a      	cmp	r2, r3
 8026e10:	db7c      	blt.n	8026f0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026e12:	46aa      	mov	sl, r5
 8026e14:	46b9      	mov	r9, r7
 8026e16:	f1ba 0f00 	cmp.w	sl, #0
 8026e1a:	f340 8099 	ble.w	8026f50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8026e1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026e20:	1421      	asrs	r1, r4, #16
 8026e22:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026e26:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026e2a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026e2e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026e32:	f100 80d0 	bmi.w	8026fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026e36:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026e3a:	4559      	cmp	r1, fp
 8026e3c:	f280 80cb 	bge.w	8026fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026e40:	2800      	cmp	r0, #0
 8026e42:	f2c0 80c8 	blt.w	8026fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026e46:	f103 3bff 	add.w	fp, r3, #4294967295
 8026e4a:	4558      	cmp	r0, fp
 8026e4c:	f280 80c3 	bge.w	8026fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026e50:	fa0f fe8e 	sxth.w	lr, lr
 8026e54:	fb00 110e 	mla	r1, r0, lr, r1
 8026e58:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026e5c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8026e60:	8841      	ldrh	r1, [r0, #2]
 8026e62:	f1bc 0f00 	cmp.w	ip, #0
 8026e66:	d00b      	beq.n	8026e80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8026e68:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8026e6c:	3b01      	subs	r3, #1
 8026e6e:	005b      	lsls	r3, r3, #1
 8026e70:	3302      	adds	r3, #2
 8026e72:	eb00 0e03 	add.w	lr, r0, r3
 8026e76:	5ac3      	ldrh	r3, [r0, r3]
 8026e78:	9308      	str	r3, [sp, #32]
 8026e7a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8026e7e:	9309      	str	r3, [sp, #36]	; 0x24
 8026e80:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8026e84:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026e88:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026e8c:	ea40 000b 	orr.w	r0, r0, fp
 8026e90:	fb12 f30c 	smulbb	r3, r2, ip
 8026e94:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026e98:	10db      	asrs	r3, r3, #3
 8026e9a:	f1cc 0e10 	rsb	lr, ip, #16
 8026e9e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026ea2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026ea6:	ebae 0e02 	sub.w	lr, lr, r2
 8026eaa:	ea4b 0101 	orr.w	r1, fp, r1
 8026eae:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026eb2:	4351      	muls	r1, r2
 8026eb4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026eb6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026eba:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026ebe:	0410      	lsls	r0, r2, #16
 8026ec0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026ec4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026ec8:	4310      	orrs	r0, r2
 8026eca:	9a08      	ldr	r2, [sp, #32]
 8026ecc:	9908      	ldr	r1, [sp, #32]
 8026ece:	0412      	lsls	r2, r2, #16
 8026ed0:	fb03 e000 	mla	r0, r3, r0, lr
 8026ed4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026ed8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026edc:	ea42 020e 	orr.w	r2, r2, lr
 8026ee0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026ee4:	fb03 0302 	mla	r3, r3, r2, r0
 8026ee8:	0d5a      	lsrs	r2, r3, #21
 8026eea:	095b      	lsrs	r3, r3, #5
 8026eec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026ef0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026ef4:	4313      	orrs	r3, r2
 8026ef6:	f8a9 3000 	strh.w	r3, [r9]
 8026efa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026efc:	441c      	add	r4, r3
 8026efe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026f00:	f109 0902 	add.w	r9, r9, #2
 8026f04:	441e      	add	r6, r3
 8026f06:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026f0a:	e784      	b.n	8026e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8026f0c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026f0e:	441c      	add	r4, r3
 8026f10:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026f12:	3d01      	subs	r5, #1
 8026f14:	441e      	add	r6, r3
 8026f16:	3702      	adds	r7, #2
 8026f18:	e761      	b.n	8026dde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026f1a:	d01d      	beq.n	8026f58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8026f1c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8026f1e:	1e6b      	subs	r3, r5, #1
 8026f20:	fb00 4003 	mla	r0, r0, r3, r4
 8026f24:	1400      	asrs	r0, r0, #16
 8026f26:	f53f af74 	bmi.w	8026e12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026f2a:	3901      	subs	r1, #1
 8026f2c:	4288      	cmp	r0, r1
 8026f2e:	f6bf af70 	bge.w	8026e12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026f32:	991c      	ldr	r1, [sp, #112]	; 0x70
 8026f34:	fb01 6303 	mla	r3, r1, r3, r6
 8026f38:	141b      	asrs	r3, r3, #16
 8026f3a:	f53f af6a 	bmi.w	8026e12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026f3e:	3a01      	subs	r2, #1
 8026f40:	4293      	cmp	r3, r2
 8026f42:	f6bf af66 	bge.w	8026e12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026f46:	46a9      	mov	r9, r5
 8026f48:	46ba      	mov	sl, r7
 8026f4a:	f1b9 0f00 	cmp.w	r9, #0
 8026f4e:	dc5a      	bgt.n	8027006 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8026f50:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026f54:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8026f58:	9b07      	ldr	r3, [sp, #28]
 8026f5a:	2b00      	cmp	r3, #0
 8026f5c:	f340 80b8 	ble.w	80270d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026f60:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026f64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026f68:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026f6c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026f6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026f72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026f76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026f7a:	eef0 6a62 	vmov.f32	s13, s5
 8026f7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026f82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026f86:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026f8a:	ee16 4a90 	vmov	r4, s13
 8026f8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026f92:	eef0 6a43 	vmov.f32	s13, s6
 8026f96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026f9a:	ee12 2a90 	vmov	r2, s5
 8026f9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026fa2:	fb92 f3f3 	sdiv	r3, r2, r3
 8026fa6:	ee13 2a10 	vmov	r2, s6
 8026faa:	931b      	str	r3, [sp, #108]	; 0x6c
 8026fac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026fae:	fb92 f3f3 	sdiv	r3, r2, r3
 8026fb2:	931c      	str	r3, [sp, #112]	; 0x70
 8026fb4:	9b07      	ldr	r3, [sp, #28]
 8026fb6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026fb8:	3b01      	subs	r3, #1
 8026fba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026fbe:	9307      	str	r3, [sp, #28]
 8026fc0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026fc2:	ee16 6a90 	vmov	r6, s13
 8026fc6:	bf14      	ite	ne
 8026fc8:	461d      	movne	r5, r3
 8026fca:	4615      	moveq	r5, r2
 8026fcc:	eeb0 3a67 	vmov.f32	s6, s15
 8026fd0:	eef0 2a47 	vmov.f32	s5, s14
 8026fd4:	e6f4      	b.n	8026dc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8026fd6:	f111 0b01 	adds.w	fp, r1, #1
 8026fda:	d48e      	bmi.n	8026efa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026fdc:	45de      	cmp	lr, fp
 8026fde:	db8c      	blt.n	8026efa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026fe0:	f110 0b01 	adds.w	fp, r0, #1
 8026fe4:	d489      	bmi.n	8026efa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026fe6:	455b      	cmp	r3, fp
 8026fe8:	db87      	blt.n	8026efa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026fea:	b21b      	sxth	r3, r3
 8026fec:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8026ff0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8026ff4:	9300      	str	r3, [sp, #0]
 8026ff6:	4642      	mov	r2, r8
 8026ff8:	fa0f f38e 	sxth.w	r3, lr
 8026ffc:	4649      	mov	r1, r9
 8026ffe:	980d      	ldr	r0, [sp, #52]	; 0x34
 8027000:	f7ff fe4d 	bl	8026c9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8027004:	e779      	b.n	8026efa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8027006:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027008:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802700c:	1420      	asrs	r0, r4, #16
 802700e:	1431      	asrs	r1, r6, #16
 8027010:	fb03 0101 	mla	r1, r3, r1, r0
 8027014:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8027018:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802701c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8027020:	8841      	ldrh	r1, [r0, #2]
 8027022:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027026:	f1be 0f00 	cmp.w	lr, #0
 802702a:	d00b      	beq.n	8027044 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802702c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8027030:	3b01      	subs	r3, #1
 8027032:	005b      	lsls	r3, r3, #1
 8027034:	3302      	adds	r3, #2
 8027036:	eb00 0b03 	add.w	fp, r0, r3
 802703a:	5ac3      	ldrh	r3, [r0, r3]
 802703c:	930a      	str	r3, [sp, #40]	; 0x28
 802703e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8027042:	930b      	str	r3, [sp, #44]	; 0x2c
 8027044:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8027048:	fb12 f30e 	smulbb	r3, r2, lr
 802704c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8027050:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8027054:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027058:	10db      	asrs	r3, r3, #3
 802705a:	ea40 000c 	orr.w	r0, r0, ip
 802705e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8027062:	f1ce 0c10 	rsb	ip, lr, #16
 8027066:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802706a:	ebac 0c02 	sub.w	ip, ip, r2
 802706e:	ea4b 0101 	orr.w	r1, fp, r1
 8027072:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8027076:	4351      	muls	r1, r2
 8027078:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802707a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802707e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8027082:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8027086:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802708a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802708c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802708e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8027092:	0412      	lsls	r2, r2, #16
 8027094:	ea4b 0000 	orr.w	r0, fp, r0
 8027098:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802709c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80270a0:	fb03 c000 	mla	r0, r3, r0, ip
 80270a4:	ea42 0b0b 	orr.w	fp, r2, fp
 80270a8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80270ac:	fb03 000b 	mla	r0, r3, fp, r0
 80270b0:	0d43      	lsrs	r3, r0, #21
 80270b2:	0940      	lsrs	r0, r0, #5
 80270b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80270b8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80270bc:	4318      	orrs	r0, r3
 80270be:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80270c0:	f82a 0b02 	strh.w	r0, [sl], #2
 80270c4:	441c      	add	r4, r3
 80270c6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80270c8:	f109 39ff 	add.w	r9, r9, #4294967295
 80270cc:	441e      	add	r6, r3
 80270ce:	e73c      	b.n	8026f4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80270d0:	b00f      	add	sp, #60	; 0x3c
 80270d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080270d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80270d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80270da:	b085      	sub	sp, #20
 80270dc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80270e0:	9102      	str	r1, [sp, #8]
 80270e2:	2c00      	cmp	r4, #0
 80270e4:	fb04 7103 	mla	r1, r4, r3, r7
 80270e8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80270ec:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80270f0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80270f4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80270f8:	f2c0 811b 	blt.w	8027332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80270fc:	45a6      	cmp	lr, r4
 80270fe:	f340 8118 	ble.w	8027332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8027102:	2f00      	cmp	r7, #0
 8027104:	f2c0 8113 	blt.w	802732e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8027108:	42bb      	cmp	r3, r7
 802710a:	f340 8110 	ble.w	802732e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802710e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8027112:	1c7a      	adds	r2, r7, #1
 8027114:	f100 8110 	bmi.w	8027338 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8027118:	4293      	cmp	r3, r2
 802711a:	f340 810d 	ble.w	8027338 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802711e:	2e00      	cmp	r6, #0
 8027120:	f000 810c 	beq.w	802733c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8027124:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027128:	3401      	adds	r4, #1
 802712a:	f100 810b 	bmi.w	8027344 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802712e:	45a6      	cmp	lr, r4
 8027130:	f340 8108 	ble.w	8027344 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8027134:	2800      	cmp	r0, #0
 8027136:	f000 8108 	beq.w	802734a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802713a:	2f00      	cmp	r7, #0
 802713c:	f2c0 8100 	blt.w	8027340 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8027140:	42bb      	cmp	r3, r7
 8027142:	f340 80fd 	ble.w	8027340 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8027146:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802714a:	3701      	adds	r7, #1
 802714c:	f100 8100 	bmi.w	8027350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8027150:	42bb      	cmp	r3, r7
 8027152:	f340 80fd 	ble.w	8027350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8027156:	2e00      	cmp	r6, #0
 8027158:	f000 80fc 	beq.w	8027354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802715c:	3301      	adds	r3, #1
 802715e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8027162:	b2b6      	uxth	r6, r6
 8027164:	b280      	uxth	r0, r0
 8027166:	fb00 fe06 	mul.w	lr, r0, r6
 802716a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802716e:	0136      	lsls	r6, r6, #4
 8027170:	eba6 070e 	sub.w	r7, r6, lr
 8027174:	b280      	uxth	r0, r0
 8027176:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802717a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802717e:	b2bf      	uxth	r7, r7
 8027180:	1a1b      	subs	r3, r3, r0
 8027182:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027186:	b29b      	uxth	r3, r3
 8027188:	fb0a f607 	mul.w	r6, sl, r7
 802718c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027190:	fb0b 6603 	mla	r6, fp, r3, r6
 8027194:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027198:	fb00 6609 	mla	r6, r0, r9, r6
 802719c:	fb0e 6608 	mla	r6, lr, r8, r6
 80271a0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80271a4:	9600      	str	r6, [sp, #0]
 80271a6:	2e00      	cmp	r6, #0
 80271a8:	f000 80be 	beq.w	8027328 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80271ac:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80271b0:	fb0b fc0c 	mul.w	ip, fp, ip
 80271b4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80271b8:	fb0b f505 	mul.w	r5, fp, r5
 80271bc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80271c0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80271c4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80271c8:	44dc      	add	ip, fp
 80271ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80271ce:	9501      	str	r5, [sp, #4]
 80271d0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80271d4:	9503      	str	r5, [sp, #12]
 80271d6:	9d01      	ldr	r5, [sp, #4]
 80271d8:	9e02      	ldr	r6, [sp, #8]
 80271da:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80271de:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80271e2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80271e6:	fb0a fc0c 	mul.w	ip, sl, ip
 80271ea:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80271ee:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80271f2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80271f6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80271fa:	4465      	add	r5, ip
 80271fc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027200:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027204:	fb09 fc0c 	mul.w	ip, r9, ip
 8027208:	fb09 f904 	mul.w	r9, r9, r4
 802720c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027210:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027214:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027218:	fb08 f404 	mul.w	r4, r8, r4
 802721c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027220:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027224:	fb08 f802 	mul.w	r8, r8, r2
 8027228:	fb0a fa01 	mul.w	sl, sl, r1
 802722c:	0a22      	lsrs	r2, r4, #8
 802722e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8027232:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027236:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802723a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802723e:	4414      	add	r4, r2
 8027240:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027244:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027248:	0a2d      	lsrs	r5, r5, #8
 802724a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802724e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027252:	9a03      	ldr	r2, [sp, #12]
 8027254:	8836      	ldrh	r6, [r6, #0]
 8027256:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802725a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802725e:	437d      	muls	r5, r7
 8027260:	4461      	add	r1, ip
 8027262:	0a24      	lsrs	r4, r4, #8
 8027264:	fb02 5503 	mla	r5, r2, r3, r5
 8027268:	0a09      	lsrs	r1, r1, #8
 802726a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802726e:	fb04 540e 	mla	r4, r4, lr, r5
 8027272:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027276:	fb01 4100 	mla	r1, r1, r0, r4
 802727a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802727e:	0a09      	lsrs	r1, r1, #8
 8027280:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027284:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027288:	fb07 f70a 	mul.w	r7, r7, sl
 802728c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027290:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027294:	fb03 7101 	mla	r1, r3, r1, r7
 8027298:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802729c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80272a0:	fb0e 1e08 	mla	lr, lr, r8, r1
 80272a4:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80272a8:	fb00 e101 	mla	r1, r0, r1, lr
 80272ac:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80272b0:	9a00      	ldr	r2, [sp, #0]
 80272b2:	b287      	uxth	r7, r0
 80272b4:	437a      	muls	r2, r7
 80272b6:	0a09      	lsrs	r1, r1, #8
 80272b8:	1c53      	adds	r3, r2, #1
 80272ba:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80272be:	4321      	orrs	r1, r4
 80272c0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80272c4:	1235      	asrs	r5, r6, #8
 80272c6:	0c0a      	lsrs	r2, r1, #16
 80272c8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80272cc:	b2db      	uxtb	r3, r3
 80272ce:	fb12 f207 	smulbb	r2, r2, r7
 80272d2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80272d6:	fb05 2503 	mla	r5, r5, r3, r2
 80272da:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80272de:	10f2      	asrs	r2, r6, #3
 80272e0:	b2c8      	uxtb	r0, r1
 80272e2:	00f6      	lsls	r6, r6, #3
 80272e4:	fb14 f407 	smulbb	r4, r4, r7
 80272e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80272ec:	b2f6      	uxtb	r6, r6
 80272ee:	fb10 f007 	smulbb	r0, r0, r7
 80272f2:	fb02 4203 	mla	r2, r2, r3, r4
 80272f6:	b2ad      	uxth	r5, r5
 80272f8:	fb06 0303 	mla	r3, r6, r3, r0
 80272fc:	b299      	uxth	r1, r3
 80272fe:	b294      	uxth	r4, r2
 8027300:	1c6b      	adds	r3, r5, #1
 8027302:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027306:	1c62      	adds	r2, r4, #1
 8027308:	1c4b      	adds	r3, r1, #1
 802730a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802730e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8027312:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027316:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802731a:	0952      	lsrs	r2, r2, #5
 802731c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027320:	432b      	orrs	r3, r5
 8027322:	4313      	orrs	r3, r2
 8027324:	9a02      	ldr	r2, [sp, #8]
 8027326:	8013      	strh	r3, [r2, #0]
 8027328:	b005      	add	sp, #20
 802732a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802732e:	2500      	movs	r5, #0
 8027330:	e6ef      	b.n	8027112 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8027332:	2100      	movs	r1, #0
 8027334:	460d      	mov	r5, r1
 8027336:	e6f7      	b.n	8027128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8027338:	2100      	movs	r1, #0
 802733a:	e6f5      	b.n	8027128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802733c:	4631      	mov	r1, r6
 802733e:	e6f3      	b.n	8027128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8027340:	2400      	movs	r4, #0
 8027342:	e702      	b.n	802714a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8027344:	2200      	movs	r2, #0
 8027346:	4614      	mov	r4, r2
 8027348:	e70b      	b.n	8027162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802734a:	4602      	mov	r2, r0
 802734c:	4604      	mov	r4, r0
 802734e:	e708      	b.n	8027162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8027350:	2200      	movs	r2, #0
 8027352:	e706      	b.n	8027162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8027354:	4632      	mov	r2, r6
 8027356:	e704      	b.n	8027162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08027358 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802735c:	b09d      	sub	sp, #116	; 0x74
 802735e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8027362:	9219      	str	r2, [sp, #100]	; 0x64
 8027364:	9307      	str	r3, [sp, #28]
 8027366:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8027368:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802736c:	931a      	str	r3, [sp, #104]	; 0x68
 802736e:	9117      	str	r1, [sp, #92]	; 0x5c
 8027370:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8027374:	901b      	str	r0, [sp, #108]	; 0x6c
 8027376:	6850      	ldr	r0, [r2, #4]
 8027378:	6812      	ldr	r2, [r2, #0]
 802737a:	fb00 1303 	mla	r3, r0, r3, r1
 802737e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027382:	930a      	str	r3, [sp, #40]	; 0x28
 8027384:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027386:	681b      	ldr	r3, [r3, #0]
 8027388:	9310      	str	r3, [sp, #64]	; 0x40
 802738a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802738e:	930b      	str	r3, [sp, #44]	; 0x2c
 8027390:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027392:	2b00      	cmp	r3, #0
 8027394:	dc03      	bgt.n	802739e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8027396:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8027398:	2b00      	cmp	r3, #0
 802739a:	f340 8375 	ble.w	8027a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802739e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80273a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80273a4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80273a8:	1e48      	subs	r0, r1, #1
 80273aa:	1e57      	subs	r7, r2, #1
 80273ac:	9b07      	ldr	r3, [sp, #28]
 80273ae:	2b00      	cmp	r3, #0
 80273b0:	f340 818e 	ble.w	80276d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80273b4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80273b8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80273bc:	d406      	bmi.n	80273cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80273be:	4584      	cmp	ip, r0
 80273c0:	da04      	bge.n	80273cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80273c2:	2b00      	cmp	r3, #0
 80273c4:	db02      	blt.n	80273cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80273c6:	42bb      	cmp	r3, r7
 80273c8:	f2c0 8183 	blt.w	80276d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80273cc:	f11c 0c01 	adds.w	ip, ip, #1
 80273d0:	f100 8173 	bmi.w	80276ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80273d4:	4561      	cmp	r1, ip
 80273d6:	f2c0 8170 	blt.w	80276ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80273da:	3301      	adds	r3, #1
 80273dc:	f100 816d 	bmi.w	80276ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80273e0:	429a      	cmp	r2, r3
 80273e2:	f2c0 816a 	blt.w	80276ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80273e6:	9b07      	ldr	r3, [sp, #28]
 80273e8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80273ea:	9318      	str	r3, [sp, #96]	; 0x60
 80273ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80273ee:	2b00      	cmp	r3, #0
 80273f0:	f340 818c 	ble.w	802770c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80273f4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80273f6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80273f8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80273fc:	689b      	ldr	r3, [r3, #8]
 80273fe:	1422      	asrs	r2, r4, #16
 8027400:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027404:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8027408:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802740c:	f100 81cd 	bmi.w	80277aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027410:	f103 38ff 	add.w	r8, r3, #4294967295
 8027414:	4542      	cmp	r2, r8
 8027416:	f280 81c8 	bge.w	80277aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802741a:	f1bc 0f00 	cmp.w	ip, #0
 802741e:	f2c0 81c4 	blt.w	80277aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027422:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027426:	45c4      	cmp	ip, r8
 8027428:	f280 81bf 	bge.w	80277aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802742c:	b21b      	sxth	r3, r3
 802742e:	fb0c 2203 	mla	r2, ip, r3, r2
 8027432:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027434:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027438:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802743c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027440:	2800      	cmp	r0, #0
 8027442:	f000 81a9 	beq.w	8027798 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8027446:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802744a:	950c      	str	r5, [sp, #48]	; 0x30
 802744c:	0e2d      	lsrs	r5, r5, #24
 802744e:	9513      	str	r5, [sp, #76]	; 0x4c
 8027450:	b181      	cbz	r1, 8027474 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027452:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027456:	3b01      	subs	r3, #1
 8027458:	009b      	lsls	r3, r3, #2
 802745a:	3304      	adds	r3, #4
 802745c:	eb08 0c03 	add.w	ip, r8, r3
 8027460:	f858 3003 	ldr.w	r3, [r8, r3]
 8027464:	9308      	str	r3, [sp, #32]
 8027466:	0e1b      	lsrs	r3, r3, #24
 8027468:	9311      	str	r3, [sp, #68]	; 0x44
 802746a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802746e:	930d      	str	r3, [sp, #52]	; 0x34
 8027470:	0e1b      	lsrs	r3, r3, #24
 8027472:	9314      	str	r3, [sp, #80]	; 0x50
 8027474:	b280      	uxth	r0, r0
 8027476:	b289      	uxth	r1, r1
 8027478:	fb00 f901 	mul.w	r9, r0, r1
 802747c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8027480:	0100      	lsls	r0, r0, #4
 8027482:	eba0 0809 	sub.w	r8, r0, r9
 8027486:	b289      	uxth	r1, r1
 8027488:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802748c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802748e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027490:	fa1f f888 	uxth.w	r8, r8
 8027494:	1a5b      	subs	r3, r3, r1
 8027496:	b29b      	uxth	r3, r3
 8027498:	fb08 f000 	mul.w	r0, r8, r0
 802749c:	fb03 000e 	mla	r0, r3, lr, r0
 80274a0:	fb01 0005 	mla	r0, r1, r5, r0
 80274a4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80274a6:	fb09 0005 	mla	r0, r9, r5, r0
 80274aa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80274ae:	2800      	cmp	r0, #0
 80274b0:	f000 80fa 	beq.w	80276a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80274b4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80274b8:	d01b      	beq.n	80274f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80274ba:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80274be:	fb0e fa0a 	mul.w	sl, lr, sl
 80274c2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80274c6:	fb0e fe02 	mul.w	lr, lr, r2
 80274ca:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80274ce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80274d2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80274d6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80274da:	4452      	add	r2, sl
 80274dc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80274e0:	0a12      	lsrs	r2, r2, #8
 80274e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80274e6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80274ea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80274ee:	ea42 020c 	orr.w	r2, r2, ip
 80274f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80274f4:	2dff      	cmp	r5, #255	; 0xff
 80274f6:	d021      	beq.n	802753c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80274f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80274fa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80274fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027500:	fb05 fb0b 	mul.w	fp, r5, fp
 8027504:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027506:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802750a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802750c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027510:	fb05 fa0a 	mul.w	sl, r5, sl
 8027514:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027518:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802751c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027520:	44de      	add	lr, fp
 8027522:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027526:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802752a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802752e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027532:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027536:	ea4e 050a 	orr.w	r5, lr, sl
 802753a:	950c      	str	r5, [sp, #48]	; 0x30
 802753c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802753e:	2dff      	cmp	r5, #255	; 0xff
 8027540:	d021      	beq.n	8027586 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8027542:	9d08      	ldr	r5, [sp, #32]
 8027544:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027548:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802754a:	fb05 fb0b 	mul.w	fp, r5, fp
 802754e:	9d08      	ldr	r5, [sp, #32]
 8027550:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027554:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027556:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802755a:	fb05 fa0a 	mul.w	sl, r5, sl
 802755e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027562:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027566:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802756a:	44de      	add	lr, fp
 802756c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027570:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027574:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027578:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802757c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027580:	ea4e 050a 	orr.w	r5, lr, sl
 8027584:	9508      	str	r5, [sp, #32]
 8027586:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027588:	2dff      	cmp	r5, #255	; 0xff
 802758a:	d021      	beq.n	80275d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802758c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802758e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027592:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027594:	fb05 fb0b 	mul.w	fp, r5, fp
 8027598:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802759a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802759e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80275a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80275a4:	fb05 fa0a 	mul.w	sl, r5, sl
 80275a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80275ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80275b0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80275b4:	44de      	add	lr, fp
 80275b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80275ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80275be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80275c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80275c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80275ca:	ea4e 050a 	orr.w	r5, lr, sl
 80275ce:	950d      	str	r5, [sp, #52]	; 0x34
 80275d0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80275d2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80275d6:	9d08      	ldr	r5, [sp, #32]
 80275d8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80275dc:	fb08 fc0c 	mul.w	ip, r8, ip
 80275e0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80275e4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80275e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80275ea:	fb01 cc0e 	mla	ip, r1, lr, ip
 80275ee:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80275f2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80275f4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80275f8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80275fc:	fb08 f80e 	mul.w	r8, r8, lr
 8027600:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027604:	fb03 8202 	mla	r2, r3, r2, r8
 8027608:	9b08      	ldr	r3, [sp, #32]
 802760a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802760c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8027610:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027612:	fb01 220a 	mla	r2, r1, sl, r2
 8027616:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802761a:	fb09 2901 	mla	r9, r9, r1, r2
 802761e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8027620:	883b      	ldrh	r3, [r7, #0]
 8027622:	4342      	muls	r2, r0
 8027624:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027628:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802762c:	1c50      	adds	r0, r2, #1
 802762e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027632:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027636:	ea4c 0c09 	orr.w	ip, ip, r9
 802763a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802763e:	1219      	asrs	r1, r3, #8
 8027640:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8027644:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8027648:	b2c0      	uxtb	r0, r0
 802764a:	fb12 f205 	smulbb	r2, r2, r5
 802764e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027652:	fb01 2100 	mla	r1, r1, r0, r2
 8027656:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802765a:	10da      	asrs	r2, r3, #3
 802765c:	fa5f fc8c 	uxtb.w	ip, ip
 8027660:	00db      	lsls	r3, r3, #3
 8027662:	fb1c fc05 	smulbb	ip, ip, r5
 8027666:	b2db      	uxtb	r3, r3
 8027668:	b289      	uxth	r1, r1
 802766a:	fb03 c300 	mla	r3, r3, r0, ip
 802766e:	fa1f fc83 	uxth.w	ip, r3
 8027672:	1c4b      	adds	r3, r1, #1
 8027674:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027678:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802767c:	fb1e fe05 	smulbb	lr, lr, r5
 8027680:	f10c 0301 	add.w	r3, ip, #1
 8027684:	fb02 e200 	mla	r2, r2, r0, lr
 8027688:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802768c:	b292      	uxth	r2, r2
 802768e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8027692:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027696:	430b      	orrs	r3, r1
 8027698:	1c51      	adds	r1, r2, #1
 802769a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802769e:	0952      	lsrs	r2, r2, #5
 80276a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80276a4:	4313      	orrs	r3, r2
 80276a6:	803b      	strh	r3, [r7, #0]
 80276a8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80276aa:	441c      	add	r4, r3
 80276ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80276ae:	441e      	add	r6, r3
 80276b0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80276b2:	3b01      	subs	r3, #1
 80276b4:	3702      	adds	r7, #2
 80276b6:	9318      	str	r3, [sp, #96]	; 0x60
 80276b8:	e698      	b.n	80273ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80276ba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80276bc:	441c      	add	r4, r3
 80276be:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80276c0:	441e      	add	r6, r3
 80276c2:	9b07      	ldr	r3, [sp, #28]
 80276c4:	3b01      	subs	r3, #1
 80276c6:	9307      	str	r3, [sp, #28]
 80276c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80276ca:	3302      	adds	r3, #2
 80276cc:	930a      	str	r3, [sp, #40]	; 0x28
 80276ce:	e66d      	b.n	80273ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80276d0:	d023      	beq.n	802771a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80276d2:	9b07      	ldr	r3, [sp, #28]
 80276d4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80276d6:	3b01      	subs	r3, #1
 80276d8:	fb00 4003 	mla	r0, r0, r3, r4
 80276dc:	1400      	asrs	r0, r0, #16
 80276de:	f53f ae82 	bmi.w	80273e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80276e2:	3901      	subs	r1, #1
 80276e4:	4288      	cmp	r0, r1
 80276e6:	f6bf ae7e 	bge.w	80273e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80276ea:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80276ec:	fb01 6303 	mla	r3, r1, r3, r6
 80276f0:	141b      	asrs	r3, r3, #16
 80276f2:	f53f ae78 	bmi.w	80273e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80276f6:	3a01      	subs	r2, #1
 80276f8:	4293      	cmp	r3, r2
 80276fa:	f6bf ae74 	bge.w	80273e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80276fe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027702:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8027706:	f1bb 0f00 	cmp.w	fp, #0
 802770a:	dc6c      	bgt.n	80277e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802770c:	9b07      	ldr	r3, [sp, #28]
 802770e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027712:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027714:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027718:	930a      	str	r3, [sp, #40]	; 0x28
 802771a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802771c:	2b00      	cmp	r3, #0
 802771e:	f340 81b3 	ble.w	8027a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8027722:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027726:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802772a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802772e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027730:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027734:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027738:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802773c:	eef0 6a62 	vmov.f32	s13, s5
 8027740:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027744:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027748:	ee77 2a62 	vsub.f32	s5, s14, s5
 802774c:	ee16 4a90 	vmov	r4, s13
 8027750:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027754:	eef0 6a43 	vmov.f32	s13, s6
 8027758:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802775c:	ee12 2a90 	vmov	r2, s5
 8027760:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027764:	fb92 f3f3 	sdiv	r3, r2, r3
 8027768:	ee13 2a10 	vmov	r2, s6
 802776c:	9329      	str	r3, [sp, #164]	; 0xa4
 802776e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027770:	fb92 f3f3 	sdiv	r3, r2, r3
 8027774:	932a      	str	r3, [sp, #168]	; 0xa8
 8027776:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027778:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802777a:	3b01      	subs	r3, #1
 802777c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027780:	9317      	str	r3, [sp, #92]	; 0x5c
 8027782:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027784:	bf08      	it	eq
 8027786:	4613      	moveq	r3, r2
 8027788:	ee16 6a90 	vmov	r6, s13
 802778c:	9307      	str	r3, [sp, #28]
 802778e:	eeb0 3a67 	vmov.f32	s6, s15
 8027792:	eef0 2a47 	vmov.f32	s5, s14
 8027796:	e5fb      	b.n	8027390 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8027798:	2900      	cmp	r1, #0
 802779a:	f43f ae6b 	beq.w	8027474 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802779e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80277a2:	9308      	str	r3, [sp, #32]
 80277a4:	0e1b      	lsrs	r3, r3, #24
 80277a6:	9311      	str	r3, [sp, #68]	; 0x44
 80277a8:	e664      	b.n	8027474 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80277aa:	f112 0801 	adds.w	r8, r2, #1
 80277ae:	f53f af7b 	bmi.w	80276a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80277b2:	4543      	cmp	r3, r8
 80277b4:	f6ff af78 	blt.w	80276a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80277b8:	f11c 0801 	adds.w	r8, ip, #1
 80277bc:	f53f af74 	bmi.w	80276a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80277c0:	45c6      	cmp	lr, r8
 80277c2:	f6ff af71 	blt.w	80276a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80277c6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80277c8:	9201      	str	r2, [sp, #4]
 80277ca:	fa0f f28e 	sxth.w	r2, lr
 80277ce:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80277d2:	e9cd c002 	strd	ip, r0, [sp, #8]
 80277d6:	9200      	str	r2, [sp, #0]
 80277d8:	b21b      	sxth	r3, r3
 80277da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80277dc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80277de:	4639      	mov	r1, r7
 80277e0:	f7ff fc79 	bl	80270d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80277e4:	e760      	b.n	80276a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80277e6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80277e8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80277ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80277ee:	1427      	asrs	r7, r4, #16
 80277f0:	1433      	asrs	r3, r6, #16
 80277f2:	fb01 7303 	mla	r3, r1, r3, r7
 80277f6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80277fa:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80277fe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027802:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027806:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802780a:	2a00      	cmp	r2, #0
 802780c:	f000 8133 	beq.w	8027a76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8027810:	687d      	ldr	r5, [r7, #4]
 8027812:	950e      	str	r5, [sp, #56]	; 0x38
 8027814:	0e2d      	lsrs	r5, r5, #24
 8027816:	9515      	str	r5, [sp, #84]	; 0x54
 8027818:	b178      	cbz	r0, 802783a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802781a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802781e:	3901      	subs	r1, #1
 8027820:	0089      	lsls	r1, r1, #2
 8027822:	3104      	adds	r1, #4
 8027824:	eb07 0e01 	add.w	lr, r7, r1
 8027828:	5879      	ldr	r1, [r7, r1]
 802782a:	9109      	str	r1, [sp, #36]	; 0x24
 802782c:	0e09      	lsrs	r1, r1, #24
 802782e:	9112      	str	r1, [sp, #72]	; 0x48
 8027830:	f8de 1004 	ldr.w	r1, [lr, #4]
 8027834:	910f      	str	r1, [sp, #60]	; 0x3c
 8027836:	0e09      	lsrs	r1, r1, #24
 8027838:	9116      	str	r1, [sp, #88]	; 0x58
 802783a:	b292      	uxth	r2, r2
 802783c:	b280      	uxth	r0, r0
 802783e:	fb02 f800 	mul.w	r8, r2, r0
 8027842:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8027846:	0112      	lsls	r2, r2, #4
 8027848:	eba2 0e08 	sub.w	lr, r2, r8
 802784c:	b280      	uxth	r0, r0
 802784e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8027852:	9915      	ldr	r1, [sp, #84]	; 0x54
 8027854:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027856:	fa1f fe8e 	uxth.w	lr, lr
 802785a:	1a12      	subs	r2, r2, r0
 802785c:	b292      	uxth	r2, r2
 802785e:	fb0e f101 	mul.w	r1, lr, r1
 8027862:	fb02 110c 	mla	r1, r2, ip, r1
 8027866:	fb00 1105 	mla	r1, r0, r5, r1
 802786a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802786c:	fb08 1105 	mla	r1, r8, r5, r1
 8027870:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8027874:	2900      	cmp	r1, #0
 8027876:	f000 80f5 	beq.w	8027a64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802787a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802787e:	d019      	beq.n	80278b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8027880:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027884:	fb0c fa0a 	mul.w	sl, ip, sl
 8027888:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802788c:	fb0c fc03 	mul.w	ip, ip, r3
 8027890:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027894:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027898:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802789c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80278a0:	4453      	add	r3, sl
 80278a2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80278a6:	0a1b      	lsrs	r3, r3, #8
 80278a8:	0a3f      	lsrs	r7, r7, #8
 80278aa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80278ae:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80278b2:	433b      	orrs	r3, r7
 80278b4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80278b6:	2dff      	cmp	r5, #255	; 0xff
 80278b8:	d020      	beq.n	80278fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80278ba:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80278bc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80278c0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80278c2:	436f      	muls	r7, r5
 80278c4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80278c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80278ca:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80278cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80278d0:	fb05 fa0a 	mul.w	sl, r5, sl
 80278d4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80278d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80278dc:	44bc      	add	ip, r7
 80278de:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80278e2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80278e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80278ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80278ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80278f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80278f6:	ea4c 050a 	orr.w	r5, ip, sl
 80278fa:	950e      	str	r5, [sp, #56]	; 0x38
 80278fc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80278fe:	2dff      	cmp	r5, #255	; 0xff
 8027900:	d020      	beq.n	8027944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8027902:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027904:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027908:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802790a:	436f      	muls	r7, r5
 802790c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802790e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027912:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027914:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027918:	fb05 fa0a 	mul.w	sl, r5, sl
 802791c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027920:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027924:	44bc      	add	ip, r7
 8027926:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802792a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802792e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027932:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027936:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802793a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802793e:	ea4c 050a 	orr.w	r5, ip, sl
 8027942:	9509      	str	r5, [sp, #36]	; 0x24
 8027944:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027946:	2dff      	cmp	r5, #255	; 0xff
 8027948:	d020      	beq.n	802798c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802794a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802794c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027950:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027952:	436f      	muls	r7, r5
 8027954:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027956:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802795a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802795c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027960:	fb05 fa0a 	mul.w	sl, r5, sl
 8027964:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027968:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802796c:	44bc      	add	ip, r7
 802796e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027972:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027976:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802797a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802797e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027982:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027986:	ea4c 050a 	orr.w	r5, ip, sl
 802798a:	950f      	str	r5, [sp, #60]	; 0x3c
 802798c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802798e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027992:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027994:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027998:	fb0e f707 	mul.w	r7, lr, r7
 802799c:	fb02 770c 	mla	r7, r2, ip, r7
 80279a0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80279a4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80279a6:	fb00 770c 	mla	r7, r0, ip, r7
 80279aa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80279ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80279b0:	fb08 770c 	mla	r7, r8, ip, r7
 80279b4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80279b8:	fb0e fe0c 	mul.w	lr, lr, ip
 80279bc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80279c0:	fb02 e303 	mla	r3, r2, r3, lr
 80279c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80279c6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80279c8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80279cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80279ce:	fb00 330a 	mla	r3, r0, sl, r3
 80279d2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80279d6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80279da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80279dc:	f8b9 0000 	ldrh.w	r0, [r9]
 80279e0:	4359      	muls	r1, r3
 80279e2:	0a3f      	lsrs	r7, r7, #8
 80279e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80279e8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80279ec:	1c4b      	adds	r3, r1, #1
 80279ee:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80279f2:	ea47 070c 	orr.w	r7, r7, ip
 80279f6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80279fa:	1202      	asrs	r2, r0, #8
 80279fc:	0c3b      	lsrs	r3, r7, #16
 80279fe:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8027a02:	b2c9      	uxtb	r1, r1
 8027a04:	fb13 f305 	smulbb	r3, r3, r5
 8027a08:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8027a0c:	fb02 3201 	mla	r2, r2, r1, r3
 8027a10:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8027a14:	10c3      	asrs	r3, r0, #3
 8027a16:	b2ff      	uxtb	r7, r7
 8027a18:	00c0      	lsls	r0, r0, #3
 8027a1a:	b2c0      	uxtb	r0, r0
 8027a1c:	fb17 f705 	smulbb	r7, r7, r5
 8027a20:	fb00 7001 	mla	r0, r0, r1, r7
 8027a24:	b292      	uxth	r2, r2
 8027a26:	fb1c fc05 	smulbb	ip, ip, r5
 8027a2a:	b280      	uxth	r0, r0
 8027a2c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8027a30:	fb03 c301 	mla	r3, r3, r1, ip
 8027a34:	1c51      	adds	r1, r2, #1
 8027a36:	f100 0c01 	add.w	ip, r0, #1
 8027a3a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027a3e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8027a42:	b29b      	uxth	r3, r3
 8027a44:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8027a48:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8027a4c:	ea4c 0202 	orr.w	r2, ip, r2
 8027a50:	f103 0c01 	add.w	ip, r3, #1
 8027a54:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8027a58:	095b      	lsrs	r3, r3, #5
 8027a5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027a5e:	431a      	orrs	r2, r3
 8027a60:	f8a9 2000 	strh.w	r2, [r9]
 8027a64:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027a66:	441c      	add	r4, r3
 8027a68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027a6a:	f109 0902 	add.w	r9, r9, #2
 8027a6e:	441e      	add	r6, r3
 8027a70:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027a74:	e647      	b.n	8027706 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8027a76:	2800      	cmp	r0, #0
 8027a78:	f43f aedf 	beq.w	802783a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027a7c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8027a80:	9109      	str	r1, [sp, #36]	; 0x24
 8027a82:	0e09      	lsrs	r1, r1, #24
 8027a84:	9112      	str	r1, [sp, #72]	; 0x48
 8027a86:	e6d8      	b.n	802783a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027a88:	b01d      	add	sp, #116	; 0x74
 8027a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027a8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8027a8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a92:	b085      	sub	sp, #20
 8027a94:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027a98:	9102      	str	r1, [sp, #8]
 8027a9a:	2c00      	cmp	r4, #0
 8027a9c:	fb04 7103 	mla	r1, r4, r3, r7
 8027aa0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027aa4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027aa8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8027aac:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027ab0:	f2c0 810c 	blt.w	8027ccc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027ab4:	45a6      	cmp	lr, r4
 8027ab6:	f340 8109 	ble.w	8027ccc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027aba:	2f00      	cmp	r7, #0
 8027abc:	f2c0 8104 	blt.w	8027cc8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027ac0:	42bb      	cmp	r3, r7
 8027ac2:	f340 8101 	ble.w	8027cc8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027ac6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8027aca:	1c7a      	adds	r2, r7, #1
 8027acc:	f100 8101 	bmi.w	8027cd2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027ad0:	4293      	cmp	r3, r2
 8027ad2:	f340 80fe 	ble.w	8027cd2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027ad6:	2e00      	cmp	r6, #0
 8027ad8:	f000 80fd 	beq.w	8027cd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8027adc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027ae0:	3401      	adds	r4, #1
 8027ae2:	f100 80fc 	bmi.w	8027cde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027ae6:	45a6      	cmp	lr, r4
 8027ae8:	f340 80f9 	ble.w	8027cde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027aec:	2800      	cmp	r0, #0
 8027aee:	f000 80f9 	beq.w	8027ce4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8027af2:	2f00      	cmp	r7, #0
 8027af4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8027af8:	f2c0 80ef 	blt.w	8027cda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027afc:	42bb      	cmp	r3, r7
 8027afe:	f340 80ec 	ble.w	8027cda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027b02:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8027b06:	3701      	adds	r7, #1
 8027b08:	f100 80ef 	bmi.w	8027cea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8027b0c:	42bb      	cmp	r3, r7
 8027b0e:	f340 80ec 	ble.w	8027cea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8027b12:	2e00      	cmp	r6, #0
 8027b14:	f000 80eb 	beq.w	8027cee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8027b18:	6852      	ldr	r2, [r2, #4]
 8027b1a:	b2b6      	uxth	r6, r6
 8027b1c:	b280      	uxth	r0, r0
 8027b1e:	fb00 fe06 	mul.w	lr, r0, r6
 8027b22:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8027b26:	0136      	lsls	r6, r6, #4
 8027b28:	eba6 070e 	sub.w	r7, r6, lr
 8027b2c:	b280      	uxth	r0, r0
 8027b2e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8027b32:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8027b36:	b2bf      	uxth	r7, r7
 8027b38:	1a1b      	subs	r3, r3, r0
 8027b3a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027b3e:	b29b      	uxth	r3, r3
 8027b40:	fb07 f60a 	mul.w	r6, r7, sl
 8027b44:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027b48:	fb0b 6603 	mla	r6, fp, r3, r6
 8027b4c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027b50:	fb00 6609 	mla	r6, r0, r9, r6
 8027b54:	fb0e 6608 	mla	r6, lr, r8, r6
 8027b58:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027b5c:	9600      	str	r6, [sp, #0]
 8027b5e:	2e00      	cmp	r6, #0
 8027b60:	f000 80af 	beq.w	8027cc2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8027b64:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027b68:	fb0b fc0c 	mul.w	ip, fp, ip
 8027b6c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027b70:	fb0b f505 	mul.w	r5, fp, r5
 8027b74:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027b78:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027b7c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027b80:	44dc      	add	ip, fp
 8027b82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027b86:	9501      	str	r5, [sp, #4]
 8027b88:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027b8c:	9503      	str	r5, [sp, #12]
 8027b8e:	9d01      	ldr	r5, [sp, #4]
 8027b90:	9e02      	ldr	r6, [sp, #8]
 8027b92:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8027b96:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027b9a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027b9e:	fb0a fc0c 	mul.w	ip, sl, ip
 8027ba2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027ba6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027baa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027bae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027bb2:	4465      	add	r5, ip
 8027bb4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027bb8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027bbc:	fb09 fc0c 	mul.w	ip, r9, ip
 8027bc0:	fb09 f904 	mul.w	r9, r9, r4
 8027bc4:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027bc8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027bcc:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027bd0:	fb08 f404 	mul.w	r4, r8, r4
 8027bd4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027bd8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027bdc:	fb08 f802 	mul.w	r8, r8, r2
 8027be0:	fb0a fa01 	mul.w	sl, sl, r1
 8027be4:	0a22      	lsrs	r2, r4, #8
 8027be6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8027bea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027bee:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027bf2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8027bf6:	4414      	add	r4, r2
 8027bf8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027bfc:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027c00:	0a2d      	lsrs	r5, r5, #8
 8027c02:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8027c06:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027c0a:	9a03      	ldr	r2, [sp, #12]
 8027c0c:	8836      	ldrh	r6, [r6, #0]
 8027c0e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027c12:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027c16:	437d      	muls	r5, r7
 8027c18:	4461      	add	r1, ip
 8027c1a:	0a24      	lsrs	r4, r4, #8
 8027c1c:	fb02 5503 	mla	r5, r2, r3, r5
 8027c20:	0a09      	lsrs	r1, r1, #8
 8027c22:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027c26:	fb04 540e 	mla	r4, r4, lr, r5
 8027c2a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027c2e:	fb01 4100 	mla	r1, r1, r0, r4
 8027c32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027c36:	0a09      	lsrs	r1, r1, #8
 8027c38:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027c3c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027c40:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027c44:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027c48:	fb07 f70a 	mul.w	r7, r7, sl
 8027c4c:	fb03 7101 	mla	r1, r3, r1, r7
 8027c50:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027c54:	9b00      	ldr	r3, [sp, #0]
 8027c56:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027c5a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027c5e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027c62:	fb00 e101 	mla	r1, r0, r1, lr
 8027c66:	43da      	mvns	r2, r3
 8027c68:	1233      	asrs	r3, r6, #8
 8027c6a:	b2d2      	uxtb	r2, r2
 8027c6c:	10f0      	asrs	r0, r6, #3
 8027c6e:	0a09      	lsrs	r1, r1, #8
 8027c70:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8027c74:	00f6      	lsls	r6, r6, #3
 8027c76:	4353      	muls	r3, r2
 8027c78:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027c7c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027c80:	b2f6      	uxtb	r6, r6
 8027c82:	4321      	orrs	r1, r4
 8027c84:	4350      	muls	r0, r2
 8027c86:	4356      	muls	r6, r2
 8027c88:	1c5a      	adds	r2, r3, #1
 8027c8a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027c8e:	0c0b      	lsrs	r3, r1, #16
 8027c90:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027c94:	1c42      	adds	r2, r0, #1
 8027c96:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027c9a:	0a0a      	lsrs	r2, r1, #8
 8027c9c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027ca0:	021b      	lsls	r3, r3, #8
 8027ca2:	00d2      	lsls	r2, r2, #3
 8027ca4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027ca8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8027cac:	4313      	orrs	r3, r2
 8027cae:	1c72      	adds	r2, r6, #1
 8027cb0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8027cb4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8027cb8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027cbc:	4319      	orrs	r1, r3
 8027cbe:	9b02      	ldr	r3, [sp, #8]
 8027cc0:	8019      	strh	r1, [r3, #0]
 8027cc2:	b005      	add	sp, #20
 8027cc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027cc8:	2500      	movs	r5, #0
 8027cca:	e6fe      	b.n	8027aca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8027ccc:	2100      	movs	r1, #0
 8027cce:	460d      	mov	r5, r1
 8027cd0:	e706      	b.n	8027ae0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027cd2:	2100      	movs	r1, #0
 8027cd4:	e704      	b.n	8027ae0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027cd6:	4631      	mov	r1, r6
 8027cd8:	e702      	b.n	8027ae0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027cda:	2400      	movs	r4, #0
 8027cdc:	e713      	b.n	8027b06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8027cde:	2200      	movs	r2, #0
 8027ce0:	4614      	mov	r4, r2
 8027ce2:	e71a      	b.n	8027b1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027ce4:	4602      	mov	r2, r0
 8027ce6:	4604      	mov	r4, r0
 8027ce8:	e717      	b.n	8027b1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027cea:	2200      	movs	r2, #0
 8027cec:	e715      	b.n	8027b1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027cee:	4632      	mov	r2, r6
 8027cf0:	e713      	b.n	8027b1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08027cf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027cf8:	b09b      	sub	sp, #108	; 0x6c
 8027cfa:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8027cfe:	9218      	str	r2, [sp, #96]	; 0x60
 8027d00:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8027d02:	9116      	str	r1, [sp, #88]	; 0x58
 8027d04:	9307      	str	r3, [sp, #28]
 8027d06:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8027d0a:	9019      	str	r0, [sp, #100]	; 0x64
 8027d0c:	6850      	ldr	r0, [r2, #4]
 8027d0e:	6812      	ldr	r2, [r2, #0]
 8027d10:	fb00 1303 	mla	r3, r0, r3, r1
 8027d14:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027d18:	930a      	str	r3, [sp, #40]	; 0x28
 8027d1a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027d1c:	681b      	ldr	r3, [r3, #0]
 8027d1e:	930f      	str	r3, [sp, #60]	; 0x3c
 8027d20:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027d22:	2b00      	cmp	r3, #0
 8027d24:	dc03      	bgt.n	8027d2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027d26:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027d28:	2b00      	cmp	r3, #0
 8027d2a:	f340 8386 	ble.w	802843a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027d2e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027d30:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027d34:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027d38:	1e48      	subs	r0, r1, #1
 8027d3a:	1e57      	subs	r7, r2, #1
 8027d3c:	9b07      	ldr	r3, [sp, #28]
 8027d3e:	2b00      	cmp	r3, #0
 8027d40:	f340 8166 	ble.w	8028010 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8027d44:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027d48:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027d4c:	d406      	bmi.n	8027d5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027d4e:	4584      	cmp	ip, r0
 8027d50:	da04      	bge.n	8027d5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027d52:	2b00      	cmp	r3, #0
 8027d54:	db02      	blt.n	8027d5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027d56:	42bb      	cmp	r3, r7
 8027d58:	f2c0 815b 	blt.w	8028012 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8027d5c:	f11c 0c01 	adds.w	ip, ip, #1
 8027d60:	f100 814b 	bmi.w	8027ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027d64:	4561      	cmp	r1, ip
 8027d66:	f2c0 8148 	blt.w	8027ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027d6a:	3301      	adds	r3, #1
 8027d6c:	f100 8145 	bmi.w	8027ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027d70:	429a      	cmp	r2, r3
 8027d72:	f2c0 8142 	blt.w	8027ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027d76:	9b07      	ldr	r3, [sp, #28]
 8027d78:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027d7a:	9317      	str	r3, [sp, #92]	; 0x5c
 8027d7c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027d7e:	2b00      	cmp	r3, #0
 8027d80:	f340 8165 	ble.w	802804e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027d84:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8027d86:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027d88:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027d8c:	689b      	ldr	r3, [r3, #8]
 8027d8e:	1422      	asrs	r2, r4, #16
 8027d90:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027d94:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027d98:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027d9c:	f100 81d5 	bmi.w	802814a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027da0:	f103 38ff 	add.w	r8, r3, #4294967295
 8027da4:	4542      	cmp	r2, r8
 8027da6:	f280 81d0 	bge.w	802814a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027daa:	f1bc 0f00 	cmp.w	ip, #0
 8027dae:	f2c0 81cc 	blt.w	802814a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027db2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027db6:	45c4      	cmp	ip, r8
 8027db8:	f280 81c7 	bge.w	802814a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027dbc:	b21b      	sxth	r3, r3
 8027dbe:	fb0c 2203 	mla	r2, ip, r3, r2
 8027dc2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027dc4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027dc8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027dcc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027dd0:	2900      	cmp	r1, #0
 8027dd2:	f000 8182 	beq.w	80280da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8027dd6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027dda:	950b      	str	r5, [sp, #44]	; 0x2c
 8027ddc:	0e2d      	lsrs	r5, r5, #24
 8027dde:	9512      	str	r5, [sp, #72]	; 0x48
 8027de0:	b180      	cbz	r0, 8027e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027de2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027de6:	3b01      	subs	r3, #1
 8027de8:	009b      	lsls	r3, r3, #2
 8027dea:	3304      	adds	r3, #4
 8027dec:	eb08 0c03 	add.w	ip, r8, r3
 8027df0:	f858 3003 	ldr.w	r3, [r8, r3]
 8027df4:	9308      	str	r3, [sp, #32]
 8027df6:	0e1b      	lsrs	r3, r3, #24
 8027df8:	9310      	str	r3, [sp, #64]	; 0x40
 8027dfa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027dfe:	930c      	str	r3, [sp, #48]	; 0x30
 8027e00:	0e1b      	lsrs	r3, r3, #24
 8027e02:	9313      	str	r3, [sp, #76]	; 0x4c
 8027e04:	b289      	uxth	r1, r1
 8027e06:	b280      	uxth	r0, r0
 8027e08:	fb01 f900 	mul.w	r9, r1, r0
 8027e0c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027e10:	0109      	lsls	r1, r1, #4
 8027e12:	eba1 0809 	sub.w	r8, r1, r9
 8027e16:	b280      	uxth	r0, r0
 8027e18:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027e1c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027e1e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027e20:	fa1f f888 	uxth.w	r8, r8
 8027e24:	1a09      	subs	r1, r1, r0
 8027e26:	b289      	uxth	r1, r1
 8027e28:	fb08 f303 	mul.w	r3, r8, r3
 8027e2c:	fb01 330e 	mla	r3, r1, lr, r3
 8027e30:	fb00 3305 	mla	r3, r0, r5, r3
 8027e34:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027e36:	fb09 3305 	mla	r3, r9, r5, r3
 8027e3a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027e3e:	2b00      	cmp	r3, #0
 8027e40:	f000 80d2 	beq.w	8027fe8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027e44:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027e48:	d01b      	beq.n	8027e82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8027e4a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027e4e:	fb0e fa0a 	mul.w	sl, lr, sl
 8027e52:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027e56:	fb0e fe02 	mul.w	lr, lr, r2
 8027e5a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027e5e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027e62:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027e66:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027e6a:	4452      	add	r2, sl
 8027e6c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027e70:	0a12      	lsrs	r2, r2, #8
 8027e72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027e76:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027e7a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027e7e:	ea42 020c 	orr.w	r2, r2, ip
 8027e82:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e84:	2dff      	cmp	r5, #255	; 0xff
 8027e86:	d021      	beq.n	8027ecc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027e88:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e8a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027e8e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e90:	fb05 fb0b 	mul.w	fp, r5, fp
 8027e94:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e96:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027e9a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e9c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027ea0:	fb05 fa0a 	mul.w	sl, r5, sl
 8027ea4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027ea8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027eac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027eb0:	44de      	add	lr, fp
 8027eb2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027eb6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027eba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027ebe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027ec2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027ec6:	ea4e 050a 	orr.w	r5, lr, sl
 8027eca:	950b      	str	r5, [sp, #44]	; 0x2c
 8027ecc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027ece:	2dff      	cmp	r5, #255	; 0xff
 8027ed0:	d021      	beq.n	8027f16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027ed2:	9d08      	ldr	r5, [sp, #32]
 8027ed4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027ed8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027eda:	fb05 fb0b 	mul.w	fp, r5, fp
 8027ede:	9d08      	ldr	r5, [sp, #32]
 8027ee0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027ee4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027ee6:	fb05 fa0e 	mul.w	sl, r5, lr
 8027eea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027eee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027ef2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027ef6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027efa:	44de      	add	lr, fp
 8027efc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027f00:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027f04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027f08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027f0c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027f10:	ea4e 050a 	orr.w	r5, lr, sl
 8027f14:	9508      	str	r5, [sp, #32]
 8027f16:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027f18:	2dff      	cmp	r5, #255	; 0xff
 8027f1a:	d021      	beq.n	8027f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8027f1c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027f1e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027f22:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027f24:	fb05 fb0b 	mul.w	fp, r5, fp
 8027f28:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027f2a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027f2e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027f30:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027f34:	fb05 fa0a 	mul.w	sl, r5, sl
 8027f38:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027f3c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027f40:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027f44:	44de      	add	lr, fp
 8027f46:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027f4a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027f4e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027f52:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027f56:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027f5a:	ea4e 050a 	orr.w	r5, lr, sl
 8027f5e:	950c      	str	r5, [sp, #48]	; 0x30
 8027f60:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027f62:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027f66:	9d08      	ldr	r5, [sp, #32]
 8027f68:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027f6c:	fb08 fc0c 	mul.w	ip, r8, ip
 8027f70:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027f74:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027f78:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027f7a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027f7e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027f82:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027f84:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027f88:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027f8c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027f90:	fb08 f80e 	mul.w	r8, r8, lr
 8027f94:	fb01 8202 	mla	r2, r1, r2, r8
 8027f98:	9908      	ldr	r1, [sp, #32]
 8027f9a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8027f9e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027fa0:	fb00 220a 	mla	r2, r0, sl, r2
 8027fa4:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8027fa8:	fb09 2900 	mla	r9, r9, r0, r2
 8027fac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027fb0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027fb4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027fb8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027fbc:	ea4c 0c09 	orr.w	ip, ip, r9
 8027fc0:	2bff      	cmp	r3, #255	; 0xff
 8027fc2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8027fc6:	f040 8091 	bne.w	80280ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027fca:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8027fce:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8027fd2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027fd6:	f022 0207 	bic.w	r2, r2, #7
 8027fda:	431a      	orrs	r2, r3
 8027fdc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027fe0:	ea4c 0c02 	orr.w	ip, ip, r2
 8027fe4:	f8a7 c000 	strh.w	ip, [r7]
 8027fe8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027fea:	441c      	add	r4, r3
 8027fec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027fee:	441e      	add	r6, r3
 8027ff0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027ff2:	3b01      	subs	r3, #1
 8027ff4:	3702      	adds	r7, #2
 8027ff6:	9317      	str	r3, [sp, #92]	; 0x5c
 8027ff8:	e6c0      	b.n	8027d7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027ffa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027ffc:	441c      	add	r4, r3
 8027ffe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028000:	441e      	add	r6, r3
 8028002:	9b07      	ldr	r3, [sp, #28]
 8028004:	3b01      	subs	r3, #1
 8028006:	9307      	str	r3, [sp, #28]
 8028008:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802800a:	3302      	adds	r3, #2
 802800c:	930a      	str	r3, [sp, #40]	; 0x28
 802800e:	e695      	b.n	8027d3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8028010:	d024      	beq.n	802805c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8028012:	9b07      	ldr	r3, [sp, #28]
 8028014:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8028016:	3b01      	subs	r3, #1
 8028018:	fb00 4003 	mla	r0, r0, r3, r4
 802801c:	1400      	asrs	r0, r0, #16
 802801e:	f53f aeaa 	bmi.w	8027d76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8028022:	3901      	subs	r1, #1
 8028024:	4288      	cmp	r0, r1
 8028026:	f6bf aea6 	bge.w	8027d76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802802a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802802c:	fb01 6303 	mla	r3, r1, r3, r6
 8028030:	141b      	asrs	r3, r3, #16
 8028032:	f53f aea0 	bmi.w	8027d76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8028036:	3a01      	subs	r2, #1
 8028038:	4293      	cmp	r3, r2
 802803a:	f6bf ae9c 	bge.w	8027d76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802803e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8028042:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8028046:	f1bb 0f00 	cmp.w	fp, #0
 802804a:	f300 809a 	bgt.w	8028182 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802804e:	9b07      	ldr	r3, [sp, #28]
 8028050:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8028054:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028056:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802805a:	930a      	str	r3, [sp, #40]	; 0x28
 802805c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802805e:	2b00      	cmp	r3, #0
 8028060:	f340 81eb 	ble.w	802843a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8028064:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028068:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802806c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028070:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028072:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028076:	ee31 1a05 	vadd.f32	s2, s2, s10
 802807a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802807e:	eef0 6a62 	vmov.f32	s13, s5
 8028082:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028086:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802808a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802808e:	ee16 4a90 	vmov	r4, s13
 8028092:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028096:	eef0 6a43 	vmov.f32	s13, s6
 802809a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802809e:	ee12 2a90 	vmov	r2, s5
 80280a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80280a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80280aa:	ee13 2a10 	vmov	r2, s6
 80280ae:	9327      	str	r3, [sp, #156]	; 0x9c
 80280b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80280b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80280b6:	9328      	str	r3, [sp, #160]	; 0xa0
 80280b8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80280ba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80280bc:	3b01      	subs	r3, #1
 80280be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80280c2:	9316      	str	r3, [sp, #88]	; 0x58
 80280c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80280c6:	bf08      	it	eq
 80280c8:	4613      	moveq	r3, r2
 80280ca:	ee16 6a90 	vmov	r6, s13
 80280ce:	9307      	str	r3, [sp, #28]
 80280d0:	eeb0 3a67 	vmov.f32	s6, s15
 80280d4:	eef0 2a47 	vmov.f32	s5, s14
 80280d8:	e622      	b.n	8027d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80280da:	2800      	cmp	r0, #0
 80280dc:	f43f ae92 	beq.w	8027e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80280e0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80280e4:	9308      	str	r3, [sp, #32]
 80280e6:	0e1b      	lsrs	r3, r3, #24
 80280e8:	9310      	str	r3, [sp, #64]	; 0x40
 80280ea:	e68b      	b.n	8027e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80280ec:	8839      	ldrh	r1, [r7, #0]
 80280ee:	4dd4      	ldr	r5, [pc, #848]	; (8028440 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80280f0:	43db      	mvns	r3, r3
 80280f2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80280f6:	fa5f f883 	uxtb.w	r8, r3
 80280fa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80280fe:	fb0e fe08 	mul.w	lr, lr, r8
 8028102:	10c8      	asrs	r0, r1, #3
 8028104:	00cb      	lsls	r3, r1, #3
 8028106:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802810a:	f10e 0101 	add.w	r1, lr, #1
 802810e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8028112:	fb00 f008 	mul.w	r0, r0, r8
 8028116:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802811a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802811e:	f100 0e01 	add.w	lr, r0, #1
 8028122:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8028126:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802812a:	b2db      	uxtb	r3, r3
 802812c:	b2c9      	uxtb	r1, r1
 802812e:	00d2      	lsls	r2, r2, #3
 8028130:	fb03 f308 	mul.w	r3, r3, r8
 8028134:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8028138:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802813c:	430a      	orrs	r2, r1
 802813e:	1c59      	adds	r1, r3, #1
 8028140:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8028144:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8028148:	e748      	b.n	8027fdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802814a:	f112 0801 	adds.w	r8, r2, #1
 802814e:	f53f af4b 	bmi.w	8027fe8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028152:	4543      	cmp	r3, r8
 8028154:	f6ff af48 	blt.w	8027fe8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028158:	f11c 0801 	adds.w	r8, ip, #1
 802815c:	f53f af44 	bmi.w	8027fe8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028160:	45c6      	cmp	lr, r8
 8028162:	f6ff af41 	blt.w	8027fe8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028166:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802816a:	fa0f f28e 	sxth.w	r2, lr
 802816e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8028172:	9200      	str	r2, [sp, #0]
 8028174:	b21b      	sxth	r3, r3
 8028176:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028178:	9819      	ldr	r0, [sp, #100]	; 0x64
 802817a:	4639      	mov	r1, r7
 802817c:	f7ff fc87 	bl	8027a8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8028180:	e732      	b.n	8027fe8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028182:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028184:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028186:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802818a:	1421      	asrs	r1, r4, #16
 802818c:	1433      	asrs	r3, r6, #16
 802818e:	fb07 1303 	mla	r3, r7, r3, r1
 8028192:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028194:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8028198:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802819c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80281a0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80281a4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80281a8:	2a00      	cmp	r2, #0
 80281aa:	f000 8107 	beq.w	80283bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80281ae:	684d      	ldr	r5, [r1, #4]
 80281b0:	950d      	str	r5, [sp, #52]	; 0x34
 80281b2:	0e2d      	lsrs	r5, r5, #24
 80281b4:	9514      	str	r5, [sp, #80]	; 0x50
 80281b6:	b178      	cbz	r0, 80281d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80281b8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80281bc:	3f01      	subs	r7, #1
 80281be:	00bf      	lsls	r7, r7, #2
 80281c0:	3704      	adds	r7, #4
 80281c2:	eb01 0e07 	add.w	lr, r1, r7
 80281c6:	59c9      	ldr	r1, [r1, r7]
 80281c8:	9109      	str	r1, [sp, #36]	; 0x24
 80281ca:	0e09      	lsrs	r1, r1, #24
 80281cc:	9111      	str	r1, [sp, #68]	; 0x44
 80281ce:	f8de 1004 	ldr.w	r1, [lr, #4]
 80281d2:	910e      	str	r1, [sp, #56]	; 0x38
 80281d4:	0e09      	lsrs	r1, r1, #24
 80281d6:	9115      	str	r1, [sp, #84]	; 0x54
 80281d8:	b292      	uxth	r2, r2
 80281da:	b280      	uxth	r0, r0
 80281dc:	fb02 f900 	mul.w	r9, r2, r0
 80281e0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80281e4:	0112      	lsls	r2, r2, #4
 80281e6:	eba2 0e09 	sub.w	lr, r2, r9
 80281ea:	b280      	uxth	r0, r0
 80281ec:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80281f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80281f2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80281f4:	fa1f fe8e 	uxth.w	lr, lr
 80281f8:	1a09      	subs	r1, r1, r0
 80281fa:	b289      	uxth	r1, r1
 80281fc:	fb0e f202 	mul.w	r2, lr, r2
 8028200:	fb01 220c 	mla	r2, r1, ip, r2
 8028204:	fb00 2205 	mla	r2, r0, r5, r2
 8028208:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802820a:	fb09 2205 	mla	r2, r9, r5, r2
 802820e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8028212:	2a00      	cmp	r2, #0
 8028214:	f000 80c9 	beq.w	80283aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8028218:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802821c:	d019      	beq.n	8028252 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802821e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8028222:	fb0c fa0a 	mul.w	sl, ip, sl
 8028226:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802822a:	fb0c fc03 	mul.w	ip, ip, r3
 802822e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8028232:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8028236:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802823a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802823e:	4453      	add	r3, sl
 8028240:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8028244:	0a1b      	lsrs	r3, r3, #8
 8028246:	0a3f      	lsrs	r7, r7, #8
 8028248:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802824c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8028250:	433b      	orrs	r3, r7
 8028252:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028254:	2dff      	cmp	r5, #255	; 0xff
 8028256:	d020      	beq.n	802829a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8028258:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802825a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802825e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028260:	436f      	muls	r7, r5
 8028262:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8028264:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028268:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802826a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802826e:	fb05 fa0a 	mul.w	sl, r5, sl
 8028272:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028276:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802827a:	44bc      	add	ip, r7
 802827c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028280:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028284:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028288:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802828c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028290:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028294:	ea4c 050a 	orr.w	r5, ip, sl
 8028298:	950d      	str	r5, [sp, #52]	; 0x34
 802829a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802829c:	2dff      	cmp	r5, #255	; 0xff
 802829e:	d020      	beq.n	80282e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80282a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80282a2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80282a6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80282a8:	436f      	muls	r7, r5
 80282aa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80282ac:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80282b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80282b2:	fb05 fa0c 	mul.w	sl, r5, ip
 80282b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80282ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80282be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80282c2:	44bc      	add	ip, r7
 80282c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80282c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80282cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80282d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80282d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80282d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80282dc:	ea4c 050a 	orr.w	r5, ip, sl
 80282e0:	9509      	str	r5, [sp, #36]	; 0x24
 80282e2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80282e4:	2dff      	cmp	r5, #255	; 0xff
 80282e6:	d020      	beq.n	802832a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80282e8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80282ea:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80282ee:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80282f0:	436f      	muls	r7, r5
 80282f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80282f4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80282f8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80282fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80282fe:	fb05 fa0a 	mul.w	sl, r5, sl
 8028302:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028306:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802830a:	44bc      	add	ip, r7
 802830c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028310:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028314:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028318:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802831c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028320:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028324:	ea4c 050a 	orr.w	r5, ip, sl
 8028328:	950e      	str	r5, [sp, #56]	; 0x38
 802832a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802832c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028330:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028332:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8028336:	fb0e f707 	mul.w	r7, lr, r7
 802833a:	fb01 770c 	mla	r7, r1, ip, r7
 802833e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8028342:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028344:	fb00 770c 	mla	r7, r0, ip, r7
 8028348:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802834c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802834e:	fb09 770c 	mla	r7, r9, ip, r7
 8028352:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028356:	fb0e fe0c 	mul.w	lr, lr, ip
 802835a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802835e:	fb01 e303 	mla	r3, r1, r3, lr
 8028362:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028364:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8028368:	990e      	ldr	r1, [sp, #56]	; 0x38
 802836a:	fb00 330a 	mla	r3, r0, sl, r3
 802836e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8028372:	fb09 3c0c 	mla	ip, r9, ip, r3
 8028376:	0a3f      	lsrs	r7, r7, #8
 8028378:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802837c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8028380:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8028384:	ea47 070c 	orr.w	r7, r7, ip
 8028388:	2aff      	cmp	r2, #255	; 0xff
 802838a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802838e:	d11e      	bne.n	80283ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8028390:	097a      	lsrs	r2, r7, #5
 8028392:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8028396:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802839a:	f023 0307 	bic.w	r3, r3, #7
 802839e:	4313      	orrs	r3, r2
 80283a0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80283a4:	431f      	orrs	r7, r3
 80283a6:	f8a8 7000 	strh.w	r7, [r8]
 80283aa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80283ac:	441c      	add	r4, r3
 80283ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80283b0:	f108 0802 	add.w	r8, r8, #2
 80283b4:	441e      	add	r6, r3
 80283b6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80283ba:	e644      	b.n	8028046 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80283bc:	2800      	cmp	r0, #0
 80283be:	f43f af0b 	beq.w	80281d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80283c2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80283c6:	9109      	str	r1, [sp, #36]	; 0x24
 80283c8:	0e09      	lsrs	r1, r1, #24
 80283ca:	9111      	str	r1, [sp, #68]	; 0x44
 80283cc:	e704      	b.n	80281d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80283ce:	f8b8 1000 	ldrh.w	r1, [r8]
 80283d2:	43d2      	mvns	r2, r2
 80283d4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80283d8:	fa5f fe82 	uxtb.w	lr, r2
 80283dc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80283e0:	fb0c fc0e 	mul.w	ip, ip, lr
 80283e4:	10c8      	asrs	r0, r1, #3
 80283e6:	00ca      	lsls	r2, r1, #3
 80283e8:	f10c 0101 	add.w	r1, ip, #1
 80283ec:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80283f0:	0c39      	lsrs	r1, r7, #16
 80283f2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80283f6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80283fa:	4911      	ldr	r1, [pc, #68]	; (8028440 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80283fc:	fb00 f00e 	mul.w	r0, r0, lr
 8028400:	fa5f fc8c 	uxtb.w	ip, ip
 8028404:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8028408:	b2d2      	uxtb	r2, r2
 802840a:	1c41      	adds	r1, r0, #1
 802840c:	fb02 f20e 	mul.w	r2, r2, lr
 8028410:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8028414:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028418:	1c51      	adds	r1, r2, #1
 802841a:	00c0      	lsls	r0, r0, #3
 802841c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8028420:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028424:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8028428:	ea4c 0c00 	orr.w	ip, ip, r0
 802842c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8028430:	ea47 0c0c 	orr.w	ip, r7, ip
 8028434:	f8a8 c000 	strh.w	ip, [r8]
 8028438:	e7b7      	b.n	80283aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802843a:	b01b      	add	sp, #108	; 0x6c
 802843c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028440:	fffff800 	.word	0xfffff800

08028444 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8028444:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028448:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802844c:	2d00      	cmp	r5, #0
 802844e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028452:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028456:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802845a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802845e:	fb05 0e03 	mla	lr, r5, r3, r0
 8028462:	f2c0 808c 	blt.w	802857e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8028466:	45a9      	cmp	r9, r5
 8028468:	f340 8089 	ble.w	802857e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802846c:	2800      	cmp	r0, #0
 802846e:	f2c0 8084 	blt.w	802857a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028472:	4580      	cmp	r8, r0
 8028474:	f340 8081 	ble.w	802857a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028478:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802847c:	f01e 0f01 	tst.w	lr, #1
 8028480:	5d16      	ldrb	r6, [r2, r4]
 8028482:	bf0c      	ite	eq
 8028484:	f006 060f 	andeq.w	r6, r6, #15
 8028488:	1136      	asrne	r6, r6, #4
 802848a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802848e:	b2f6      	uxtb	r6, r6
 8028490:	1c44      	adds	r4, r0, #1
 8028492:	d477      	bmi.n	8028584 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028494:	45a0      	cmp	r8, r4
 8028496:	dd75      	ble.n	8028584 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028498:	2f00      	cmp	r7, #0
 802849a:	d075      	beq.n	8028588 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802849c:	f10e 0a01 	add.w	sl, lr, #1
 80284a0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80284a4:	f01a 0f01 	tst.w	sl, #1
 80284a8:	5d14      	ldrb	r4, [r2, r4]
 80284aa:	bf0c      	ite	eq
 80284ac:	f004 040f 	andeq.w	r4, r4, #15
 80284b0:	1124      	asrne	r4, r4, #4
 80284b2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80284b6:	b2e4      	uxtb	r4, r4
 80284b8:	3501      	adds	r5, #1
 80284ba:	d469      	bmi.n	8028590 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80284bc:	45a9      	cmp	r9, r5
 80284be:	dd67      	ble.n	8028590 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80284c0:	f1bc 0f00 	cmp.w	ip, #0
 80284c4:	d067      	beq.n	8028596 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80284c6:	2800      	cmp	r0, #0
 80284c8:	db60      	blt.n	802858c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80284ca:	4580      	cmp	r8, r0
 80284cc:	dd5e      	ble.n	802858c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80284ce:	eb03 090e 	add.w	r9, r3, lr
 80284d2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80284d6:	f019 0f01 	tst.w	r9, #1
 80284da:	5d55      	ldrb	r5, [r2, r5]
 80284dc:	bf0c      	ite	eq
 80284de:	f005 050f 	andeq.w	r5, r5, #15
 80284e2:	112d      	asrne	r5, r5, #4
 80284e4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80284e8:	b2ed      	uxtb	r5, r5
 80284ea:	3001      	adds	r0, #1
 80284ec:	d456      	bmi.n	802859c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80284ee:	4580      	cmp	r8, r0
 80284f0:	dd54      	ble.n	802859c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80284f2:	2f00      	cmp	r7, #0
 80284f4:	d054      	beq.n	80285a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80284f6:	3301      	adds	r3, #1
 80284f8:	449e      	add	lr, r3
 80284fa:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80284fe:	f01e 0f01 	tst.w	lr, #1
 8028502:	5cd0      	ldrb	r0, [r2, r3]
 8028504:	bf0c      	ite	eq
 8028506:	f000 000f 	andeq.w	r0, r0, #15
 802850a:	1100      	asrne	r0, r0, #4
 802850c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028510:	b2c3      	uxtb	r3, r0
 8028512:	b2ba      	uxth	r2, r7
 8028514:	fa1f fc8c 	uxth.w	ip, ip
 8028518:	fb02 f00c 	mul.w	r0, r2, ip
 802851c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028520:	0112      	lsls	r2, r2, #4
 8028522:	fa1f fc8c 	uxth.w	ip, ip
 8028526:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802852a:	1a12      	subs	r2, r2, r0
 802852c:	eba7 070c 	sub.w	r7, r7, ip
 8028530:	b292      	uxth	r2, r2
 8028532:	b2bf      	uxth	r7, r7
 8028534:	4362      	muls	r2, r4
 8028536:	fb06 2207 	mla	r2, r6, r7, r2
 802853a:	fb0c 2505 	mla	r5, ip, r5, r2
 802853e:	fb00 5303 	mla	r3, r0, r3, r5
 8028542:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028546:	b1b3      	cbz	r3, 8028576 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8028548:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802854c:	435a      	muls	r2, r3
 802854e:	1c53      	adds	r3, r2, #1
 8028550:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028554:	4a2d      	ldr	r2, [pc, #180]	; (802860c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8028556:	121b      	asrs	r3, r3, #8
 8028558:	6812      	ldr	r2, [r2, #0]
 802855a:	2bff      	cmp	r3, #255	; 0xff
 802855c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8028560:	d120      	bne.n	80285a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8028562:	4b2b      	ldr	r3, [pc, #172]	; (8028610 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8028564:	0950      	lsrs	r0, r2, #5
 8028566:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802856a:	4033      	ands	r3, r6
 802856c:	4318      	orrs	r0, r3
 802856e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028572:	4302      	orrs	r2, r0
 8028574:	800a      	strh	r2, [r1, #0]
 8028576:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802857a:	2600      	movs	r6, #0
 802857c:	e788      	b.n	8028490 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802857e:	2400      	movs	r4, #0
 8028580:	4626      	mov	r6, r4
 8028582:	e799      	b.n	80284b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028584:	2400      	movs	r4, #0
 8028586:	e797      	b.n	80284b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028588:	463c      	mov	r4, r7
 802858a:	e795      	b.n	80284b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802858c:	2500      	movs	r5, #0
 802858e:	e7ac      	b.n	80284ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8028590:	2300      	movs	r3, #0
 8028592:	461d      	mov	r5, r3
 8028594:	e7bd      	b.n	8028512 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028596:	4663      	mov	r3, ip
 8028598:	4665      	mov	r5, ip
 802859a:	e7ba      	b.n	8028512 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802859c:	2300      	movs	r3, #0
 802859e:	e7b8      	b.n	8028512 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80285a0:	463b      	mov	r3, r7
 80285a2:	e7b6      	b.n	8028512 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80285a4:	880d      	ldrh	r5, [r1, #0]
 80285a6:	b29f      	uxth	r7, r3
 80285a8:	122c      	asrs	r4, r5, #8
 80285aa:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80285ae:	43db      	mvns	r3, r3
 80285b0:	b2db      	uxtb	r3, r3
 80285b2:	fb10 f007 	smulbb	r0, r0, r7
 80285b6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80285ba:	fb04 0403 	mla	r4, r4, r3, r0
 80285be:	b2f6      	uxtb	r6, r6
 80285c0:	10e8      	asrs	r0, r5, #3
 80285c2:	b2d2      	uxtb	r2, r2
 80285c4:	00ed      	lsls	r5, r5, #3
 80285c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80285ca:	fb12 f207 	smulbb	r2, r2, r7
 80285ce:	fb16 f607 	smulbb	r6, r6, r7
 80285d2:	b2ed      	uxtb	r5, r5
 80285d4:	b2a4      	uxth	r4, r4
 80285d6:	fb00 6603 	mla	r6, r0, r3, r6
 80285da:	fb05 2303 	mla	r3, r5, r3, r2
 80285de:	b29a      	uxth	r2, r3
 80285e0:	1c63      	adds	r3, r4, #1
 80285e2:	b2b0      	uxth	r0, r6
 80285e4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80285e8:	1c53      	adds	r3, r2, #1
 80285ea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80285ee:	1c42      	adds	r2, r0, #1
 80285f0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80285f4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80285f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80285fc:	0940      	lsrs	r0, r0, #5
 80285fe:	4323      	orrs	r3, r4
 8028600:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028604:	4303      	orrs	r3, r0
 8028606:	800b      	strh	r3, [r1, #0]
 8028608:	e7b5      	b.n	8028576 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802860a:	bf00      	nop
 802860c:	20013864 	.word	0x20013864
 8028610:	00fff800 	.word	0x00fff800

08028614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028618:	b097      	sub	sp, #92	; 0x5c
 802861a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802861e:	9214      	str	r2, [sp, #80]	; 0x50
 8028620:	9309      	str	r3, [sp, #36]	; 0x24
 8028622:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8028624:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8028628:	910d      	str	r1, [sp, #52]	; 0x34
 802862a:	930f      	str	r3, [sp, #60]	; 0x3c
 802862c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8028630:	9015      	str	r0, [sp, #84]	; 0x54
 8028632:	6850      	ldr	r0, [r2, #4]
 8028634:	6812      	ldr	r2, [r2, #0]
 8028636:	fb00 1303 	mla	r3, r0, r3, r1
 802863a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802863e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028640:	689b      	ldr	r3, [r3, #8]
 8028642:	3301      	adds	r3, #1
 8028644:	f023 0301 	bic.w	r3, r3, #1
 8028648:	930a      	str	r3, [sp, #40]	; 0x28
 802864a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802864c:	681f      	ldr	r7, [r3, #0]
 802864e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028650:	2b00      	cmp	r3, #0
 8028652:	dc03      	bgt.n	802865c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8028654:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8028656:	2b00      	cmp	r3, #0
 8028658:	f340 8287 	ble.w	8028b6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802865c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802865e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028662:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028666:	1e48      	subs	r0, r1, #1
 8028668:	f102 3cff 	add.w	ip, r2, #4294967295
 802866c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802866e:	2b00      	cmp	r3, #0
 8028670:	f340 80c4 	ble.w	80287fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8028674:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028678:	ea4f 4326 	mov.w	r3, r6, asr #16
 802867c:	d406      	bmi.n	802868c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802867e:	4586      	cmp	lr, r0
 8028680:	da04      	bge.n	802868c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028682:	2b00      	cmp	r3, #0
 8028684:	db02      	blt.n	802868c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028686:	4563      	cmp	r3, ip
 8028688:	f2c0 80b9 	blt.w	80287fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802868c:	f11e 0e01 	adds.w	lr, lr, #1
 8028690:	f100 80aa 	bmi.w	80287e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028694:	4571      	cmp	r1, lr
 8028696:	f2c0 80a7 	blt.w	80287e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802869a:	3301      	adds	r3, #1
 802869c:	f100 80a4 	bmi.w	80287e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80286a0:	429a      	cmp	r2, r3
 80286a2:	f2c0 80a1 	blt.w	80287e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80286a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80286a8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80286ac:	930e      	str	r3, [sp, #56]	; 0x38
 80286ae:	46c8      	mov	r8, r9
 80286b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80286b2:	2b00      	cmp	r3, #0
 80286b4:	f340 80c3 	ble.w	802883e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80286b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80286ba:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80286be:	1423      	asrs	r3, r4, #16
 80286c0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80286c4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80286c8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80286cc:	f100 814d 	bmi.w	802896a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80286d0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80286d4:	455b      	cmp	r3, fp
 80286d6:	f280 8148 	bge.w	802896a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80286da:	2800      	cmp	r0, #0
 80286dc:	f2c0 8145 	blt.w	802896a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80286e0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80286e4:	4558      	cmp	r0, fp
 80286e6:	f280 8140 	bge.w	802896a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80286ea:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80286ec:	fb00 3305 	mla	r3, r0, r5, r3
 80286f0:	0858      	lsrs	r0, r3, #1
 80286f2:	07dd      	lsls	r5, r3, #31
 80286f4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80286f8:	bf54      	ite	pl
 80286fa:	f00c 0c0f 	andpl.w	ip, ip, #15
 80286fe:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028702:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028706:	fa5f fc8c 	uxtb.w	ip, ip
 802870a:	2a00      	cmp	r2, #0
 802870c:	f000 80db 	beq.w	80288c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8028710:	1c58      	adds	r0, r3, #1
 8028712:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028716:	07c0      	lsls	r0, r0, #31
 8028718:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802871c:	bf54      	ite	pl
 802871e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028722:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028726:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802872a:	fa5f f08e 	uxtb.w	r0, lr
 802872e:	9010      	str	r0, [sp, #64]	; 0x40
 8028730:	b1c9      	cbz	r1, 8028766 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028732:	4453      	add	r3, sl
 8028734:	0858      	lsrs	r0, r3, #1
 8028736:	07dd      	lsls	r5, r3, #31
 8028738:	5c38      	ldrb	r0, [r7, r0]
 802873a:	bf54      	ite	pl
 802873c:	f000 000f 	andpl.w	r0, r0, #15
 8028740:	1100      	asrmi	r0, r0, #4
 8028742:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028746:	3301      	adds	r3, #1
 8028748:	b2c0      	uxtb	r0, r0
 802874a:	900b      	str	r0, [sp, #44]	; 0x2c
 802874c:	0858      	lsrs	r0, r3, #1
 802874e:	07dd      	lsls	r5, r3, #31
 8028750:	f817 e000 	ldrb.w	lr, [r7, r0]
 8028754:	bf54      	ite	pl
 8028756:	f00e 030f 	andpl.w	r3, lr, #15
 802875a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802875e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028762:	b2db      	uxtb	r3, r3
 8028764:	9311      	str	r3, [sp, #68]	; 0x44
 8028766:	b292      	uxth	r2, r2
 8028768:	b289      	uxth	r1, r1
 802876a:	fb02 f301 	mul.w	r3, r2, r1
 802876e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028772:	0112      	lsls	r2, r2, #4
 8028774:	b289      	uxth	r1, r1
 8028776:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802877a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802877c:	1ad2      	subs	r2, r2, r3
 802877e:	1a40      	subs	r0, r0, r1
 8028780:	b292      	uxth	r2, r2
 8028782:	436a      	muls	r2, r5
 8028784:	b280      	uxth	r0, r0
 8028786:	fb0c 2c00 	mla	ip, ip, r0, r2
 802878a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802878c:	fb01 c102 	mla	r1, r1, r2, ip
 8028790:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028792:	fb03 1302 	mla	r3, r3, r2, r1
 8028796:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802879a:	b1db      	cbz	r3, 80287d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802879c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802879e:	4353      	muls	r3, r2
 80287a0:	1c5a      	adds	r2, r3, #1
 80287a2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80287a6:	4ac6      	ldr	r2, [pc, #792]	; (8028ac0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80287a8:	121b      	asrs	r3, r3, #8
 80287aa:	6812      	ldr	r2, [r2, #0]
 80287ac:	2bff      	cmp	r3, #255	; 0xff
 80287ae:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80287b2:	f040 8099 	bne.w	80288e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80287b6:	0953      	lsrs	r3, r2, #5
 80287b8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80287bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80287c0:	f02c 0c07 	bic.w	ip, ip, #7
 80287c4:	ea43 0c0c 	orr.w	ip, r3, ip
 80287c8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80287cc:	ea4c 0202 	orr.w	r2, ip, r2
 80287d0:	f8a8 2000 	strh.w	r2, [r8]
 80287d4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80287d6:	441c      	add	r4, r3
 80287d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80287da:	441e      	add	r6, r3
 80287dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80287de:	3b01      	subs	r3, #1
 80287e0:	f108 0802 	add.w	r8, r8, #2
 80287e4:	930e      	str	r3, [sp, #56]	; 0x38
 80287e6:	e763      	b.n	80286b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80287e8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80287ea:	441c      	add	r4, r3
 80287ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80287ee:	441e      	add	r6, r3
 80287f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80287f2:	3b01      	subs	r3, #1
 80287f4:	9309      	str	r3, [sp, #36]	; 0x24
 80287f6:	f109 0902 	add.w	r9, r9, #2
 80287fa:	e737      	b.n	802866c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80287fc:	d024      	beq.n	8028848 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80287fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028800:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8028802:	3b01      	subs	r3, #1
 8028804:	fb00 4003 	mla	r0, r0, r3, r4
 8028808:	1400      	asrs	r0, r0, #16
 802880a:	f53f af4c 	bmi.w	80286a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802880e:	3901      	subs	r1, #1
 8028810:	4288      	cmp	r0, r1
 8028812:	f6bf af48 	bge.w	80286a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028816:	9924      	ldr	r1, [sp, #144]	; 0x90
 8028818:	fb01 6303 	mla	r3, r1, r3, r6
 802881c:	141b      	asrs	r3, r3, #16
 802881e:	f53f af42 	bmi.w	80286a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028822:	3a01      	subs	r2, #1
 8028824:	4293      	cmp	r3, r2
 8028826:	f6bf af3e 	bge.w	80286a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802882a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802882e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8028832:	930e      	str	r3, [sp, #56]	; 0x38
 8028834:	46c8      	mov	r8, r9
 8028836:	f1bb 0f00 	cmp.w	fp, #0
 802883a:	f300 80b7 	bgt.w	80289ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802883e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028840:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8028844:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028848:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802884a:	2b00      	cmp	r3, #0
 802884c:	f340 818d 	ble.w	8028b6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8028850:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028854:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028858:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802885c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802885e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028862:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028866:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802886a:	eef0 6a62 	vmov.f32	s13, s5
 802886e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028872:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028876:	ee77 2a62 	vsub.f32	s5, s14, s5
 802887a:	ee16 4a90 	vmov	r4, s13
 802887e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028882:	eef0 6a43 	vmov.f32	s13, s6
 8028886:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802888a:	ee12 2a90 	vmov	r2, s5
 802888e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028892:	fb92 f3f3 	sdiv	r3, r2, r3
 8028896:	ee13 2a10 	vmov	r2, s6
 802889a:	9323      	str	r3, [sp, #140]	; 0x8c
 802889c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802889e:	fb92 f3f3 	sdiv	r3, r2, r3
 80288a2:	9324      	str	r3, [sp, #144]	; 0x90
 80288a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80288a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80288a8:	3b01      	subs	r3, #1
 80288aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80288ae:	930d      	str	r3, [sp, #52]	; 0x34
 80288b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80288b2:	bf08      	it	eq
 80288b4:	4613      	moveq	r3, r2
 80288b6:	ee16 6a90 	vmov	r6, s13
 80288ba:	9309      	str	r3, [sp, #36]	; 0x24
 80288bc:	eeb0 3a67 	vmov.f32	s6, s15
 80288c0:	eef0 2a47 	vmov.f32	s5, s14
 80288c4:	e6c3      	b.n	802864e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80288c6:	2900      	cmp	r1, #0
 80288c8:	f43f af4d 	beq.w	8028766 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80288cc:	eb0a 0003 	add.w	r0, sl, r3
 80288d0:	0843      	lsrs	r3, r0, #1
 80288d2:	07c0      	lsls	r0, r0, #31
 80288d4:	5cfb      	ldrb	r3, [r7, r3]
 80288d6:	bf54      	ite	pl
 80288d8:	f003 030f 	andpl.w	r3, r3, #15
 80288dc:	111b      	asrmi	r3, r3, #4
 80288de:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80288e2:	b2db      	uxtb	r3, r3
 80288e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80288e6:	e73e      	b.n	8028766 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80288e8:	f8b8 e000 	ldrh.w	lr, [r8]
 80288ec:	fa1f fb83 	uxth.w	fp, r3
 80288f0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80288f4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80288f8:	43db      	mvns	r3, r3
 80288fa:	b2db      	uxtb	r3, r3
 80288fc:	fb11 f10b 	smulbb	r1, r1, fp
 8028900:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028904:	fb00 1003 	mla	r0, r0, r3, r1
 8028908:	fa5f fc8c 	uxtb.w	ip, ip
 802890c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028910:	b2d2      	uxtb	r2, r2
 8028912:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028916:	b280      	uxth	r0, r0
 8028918:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802891c:	fb1c fc0b 	smulbb	ip, ip, fp
 8028920:	fa5f fe8e 	uxtb.w	lr, lr
 8028924:	fb12 fb0b 	smulbb	fp, r2, fp
 8028928:	fb01 cc03 	mla	ip, r1, r3, ip
 802892c:	fb0e bb03 	mla	fp, lr, r3, fp
 8028930:	1c43      	adds	r3, r0, #1
 8028932:	fa1f fc8c 	uxth.w	ip, ip
 8028936:	fa1f fb8b 	uxth.w	fp, fp
 802893a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802893e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8028942:	f10c 0101 	add.w	r1, ip, #1
 8028946:	f10b 0001 	add.w	r0, fp, #1
 802894a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802894e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028952:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028956:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802895a:	4318      	orrs	r0, r3
 802895c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028960:	ea40 000c 	orr.w	r0, r0, ip
 8028964:	f8a8 0000 	strh.w	r0, [r8]
 8028968:	e734      	b.n	80287d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802896a:	f113 0b01 	adds.w	fp, r3, #1
 802896e:	f53f af31 	bmi.w	80287d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028972:	45dc      	cmp	ip, fp
 8028974:	f6ff af2e 	blt.w	80287d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028978:	f110 0b01 	adds.w	fp, r0, #1
 802897c:	f53f af2a 	bmi.w	80287d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028980:	45de      	cmp	lr, fp
 8028982:	f6ff af27 	blt.w	80287d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028986:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028988:	9302      	str	r3, [sp, #8]
 802898a:	fa0f f38e 	sxth.w	r3, lr
 802898e:	9301      	str	r3, [sp, #4]
 8028990:	fa0f f38c 	sxth.w	r3, ip
 8028994:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028998:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802899c:	9300      	str	r3, [sp, #0]
 802899e:	463a      	mov	r2, r7
 80289a0:	4653      	mov	r3, sl
 80289a2:	4641      	mov	r1, r8
 80289a4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80289a6:	f7ff fd4d 	bl	8028444 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80289aa:	e713      	b.n	80287d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80289ac:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80289ae:	1422      	asrs	r2, r4, #16
 80289b0:	1433      	asrs	r3, r6, #16
 80289b2:	fb05 2303 	mla	r3, r5, r3, r2
 80289b6:	085a      	lsrs	r2, r3, #1
 80289b8:	07dd      	lsls	r5, r3, #31
 80289ba:	5cba      	ldrb	r2, [r7, r2]
 80289bc:	bf54      	ite	pl
 80289be:	f002 020f 	andpl.w	r2, r2, #15
 80289c2:	1112      	asrmi	r2, r2, #4
 80289c4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80289c8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80289cc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80289d0:	b2d2      	uxtb	r2, r2
 80289d2:	2900      	cmp	r1, #0
 80289d4:	d076      	beq.n	8028ac4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80289d6:	f103 0e01 	add.w	lr, r3, #1
 80289da:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80289de:	f01e 0f01 	tst.w	lr, #1
 80289e2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80289e6:	bf0c      	ite	eq
 80289e8:	f00c 0c0f 	andeq.w	ip, ip, #15
 80289ec:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80289f0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80289f4:	fa5f f58c 	uxtb.w	r5, ip
 80289f8:	9512      	str	r5, [sp, #72]	; 0x48
 80289fa:	b300      	cbz	r0, 8028a3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80289fc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80289fe:	442b      	add	r3, r5
 8028a00:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028a04:	07dd      	lsls	r5, r3, #31
 8028a06:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028a0a:	bf54      	ite	pl
 8028a0c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028a10:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028a14:	3301      	adds	r3, #1
 8028a16:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028a1a:	fa5f f58c 	uxtb.w	r5, ip
 8028a1e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028a22:	950c      	str	r5, [sp, #48]	; 0x30
 8028a24:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028a28:	07dd      	lsls	r5, r3, #31
 8028a2a:	bf54      	ite	pl
 8028a2c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028a30:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028a34:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028a38:	fa5f f38c 	uxtb.w	r3, ip
 8028a3c:	9313      	str	r3, [sp, #76]	; 0x4c
 8028a3e:	b289      	uxth	r1, r1
 8028a40:	b280      	uxth	r0, r0
 8028a42:	fb01 f300 	mul.w	r3, r1, r0
 8028a46:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8028a4a:	0109      	lsls	r1, r1, #4
 8028a4c:	b280      	uxth	r0, r0
 8028a4e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8028a52:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028a54:	1ac9      	subs	r1, r1, r3
 8028a56:	ebac 0c00 	sub.w	ip, ip, r0
 8028a5a:	b289      	uxth	r1, r1
 8028a5c:	4369      	muls	r1, r5
 8028a5e:	fa1f fc8c 	uxth.w	ip, ip
 8028a62:	fb02 120c 	mla	r2, r2, ip, r1
 8028a66:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028a68:	fb00 2001 	mla	r0, r0, r1, r2
 8028a6c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8028a6e:	fb03 0302 	mla	r3, r3, r2, r0
 8028a72:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028a76:	b1d3      	cbz	r3, 8028aae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028a78:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028a7a:	4353      	muls	r3, r2
 8028a7c:	1c5a      	adds	r2, r3, #1
 8028a7e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028a82:	4a0f      	ldr	r2, [pc, #60]	; (8028ac0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028a84:	121b      	asrs	r3, r3, #8
 8028a86:	6812      	ldr	r2, [r2, #0]
 8028a88:	2bff      	cmp	r3, #255	; 0xff
 8028a8a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028a8e:	d12d      	bne.n	8028aec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8028a90:	0953      	lsrs	r3, r2, #5
 8028a92:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028a96:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028a9a:	f02c 0c07 	bic.w	ip, ip, #7
 8028a9e:	ea43 0c0c 	orr.w	ip, r3, ip
 8028aa2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028aa6:	ea4c 0202 	orr.w	r2, ip, r2
 8028aaa:	f8a8 2000 	strh.w	r2, [r8]
 8028aae:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028ab0:	441c      	add	r4, r3
 8028ab2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028ab4:	f108 0802 	add.w	r8, r8, #2
 8028ab8:	441e      	add	r6, r3
 8028aba:	f10b 3bff 	add.w	fp, fp, #4294967295
 8028abe:	e6ba      	b.n	8028836 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028ac0:	20013864 	.word	0x20013864
 8028ac4:	2800      	cmp	r0, #0
 8028ac6:	d0ba      	beq.n	8028a3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028ac8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028aca:	442b      	add	r3, r5
 8028acc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028ad0:	07db      	lsls	r3, r3, #31
 8028ad2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028ad6:	bf54      	ite	pl
 8028ad8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028adc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028ae0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028ae4:	fa5f f38c 	uxtb.w	r3, ip
 8028ae8:	930c      	str	r3, [sp, #48]	; 0x30
 8028aea:	e7a8      	b.n	8028a3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028aec:	f8b8 e000 	ldrh.w	lr, [r8]
 8028af0:	fa1f fa83 	uxth.w	sl, r3
 8028af4:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028af8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028afc:	43db      	mvns	r3, r3
 8028afe:	b2db      	uxtb	r3, r3
 8028b00:	fb11 f10a 	smulbb	r1, r1, sl
 8028b04:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028b08:	fb00 1003 	mla	r0, r0, r3, r1
 8028b0c:	b2d2      	uxtb	r2, r2
 8028b0e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028b12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028b16:	fa5f fe8e 	uxtb.w	lr, lr
 8028b1a:	fb12 f20a 	smulbb	r2, r2, sl
 8028b1e:	fb0e 2203 	mla	r2, lr, r3, r2
 8028b22:	fa5f fc8c 	uxtb.w	ip, ip
 8028b26:	b280      	uxth	r0, r0
 8028b28:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8028b2c:	b292      	uxth	r2, r2
 8028b2e:	fb1c fc0a 	smulbb	ip, ip, sl
 8028b32:	fb01 cc03 	mla	ip, r1, r3, ip
 8028b36:	1c43      	adds	r3, r0, #1
 8028b38:	1c51      	adds	r1, r2, #1
 8028b3a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028b3e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8028b42:	fa1f fc8c 	uxth.w	ip, ip
 8028b46:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028b4a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8028b4e:	4308      	orrs	r0, r1
 8028b50:	f10c 0101 	add.w	r1, ip, #1
 8028b54:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028b58:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8028b5c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028b60:	ea40 000c 	orr.w	r0, r0, ip
 8028b64:	f8a8 0000 	strh.w	r0, [r8]
 8028b68:	e7a1      	b.n	8028aae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028b6a:	b017      	add	sp, #92	; 0x5c
 8028b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028b70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8028b70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028b74:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8028b78:	2d00      	cmp	r5, #0
 8028b7a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028b7e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028b82:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8028b86:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8028b8a:	fb05 0e03 	mla	lr, r5, r3, r0
 8028b8e:	f2c0 80b0 	blt.w	8028cf2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028b92:	45a9      	cmp	r9, r5
 8028b94:	f340 80ad 	ble.w	8028cf2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028b98:	2800      	cmp	r0, #0
 8028b9a:	f2c0 80a8 	blt.w	8028cee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028b9e:	4580      	cmp	r8, r0
 8028ba0:	f340 80a5 	ble.w	8028cee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028ba4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028ba8:	f01e 0f01 	tst.w	lr, #1
 8028bac:	5d16      	ldrb	r6, [r2, r4]
 8028bae:	bf0c      	ite	eq
 8028bb0:	f006 060f 	andeq.w	r6, r6, #15
 8028bb4:	1136      	asrne	r6, r6, #4
 8028bb6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028bba:	b2f6      	uxtb	r6, r6
 8028bbc:	1c44      	adds	r4, r0, #1
 8028bbe:	f100 809b 	bmi.w	8028cf8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028bc2:	45a0      	cmp	r8, r4
 8028bc4:	f340 8098 	ble.w	8028cf8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028bc8:	2f00      	cmp	r7, #0
 8028bca:	f000 8097 	beq.w	8028cfc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8028bce:	f10e 0a01 	add.w	sl, lr, #1
 8028bd2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028bd6:	f01a 0f01 	tst.w	sl, #1
 8028bda:	5d14      	ldrb	r4, [r2, r4]
 8028bdc:	bf0c      	ite	eq
 8028bde:	f004 040f 	andeq.w	r4, r4, #15
 8028be2:	1124      	asrne	r4, r4, #4
 8028be4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028be8:	b2e4      	uxtb	r4, r4
 8028bea:	3501      	adds	r5, #1
 8028bec:	f100 808a 	bmi.w	8028d04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028bf0:	45a9      	cmp	r9, r5
 8028bf2:	f340 8087 	ble.w	8028d04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028bf6:	f1bc 0f00 	cmp.w	ip, #0
 8028bfa:	f000 8086 	beq.w	8028d0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8028bfe:	2800      	cmp	r0, #0
 8028c00:	db7e      	blt.n	8028d00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028c02:	4580      	cmp	r8, r0
 8028c04:	dd7c      	ble.n	8028d00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028c06:	eb03 090e 	add.w	r9, r3, lr
 8028c0a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028c0e:	f019 0f01 	tst.w	r9, #1
 8028c12:	5d55      	ldrb	r5, [r2, r5]
 8028c14:	bf0c      	ite	eq
 8028c16:	f005 050f 	andeq.w	r5, r5, #15
 8028c1a:	112d      	asrne	r5, r5, #4
 8028c1c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028c20:	b2ed      	uxtb	r5, r5
 8028c22:	3001      	adds	r0, #1
 8028c24:	d474      	bmi.n	8028d10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028c26:	4580      	cmp	r8, r0
 8028c28:	dd72      	ble.n	8028d10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028c2a:	2f00      	cmp	r7, #0
 8028c2c:	d072      	beq.n	8028d14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8028c2e:	3301      	adds	r3, #1
 8028c30:	449e      	add	lr, r3
 8028c32:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028c36:	f01e 0f01 	tst.w	lr, #1
 8028c3a:	5cd0      	ldrb	r0, [r2, r3]
 8028c3c:	bf0c      	ite	eq
 8028c3e:	f000 000f 	andeq.w	r0, r0, #15
 8028c42:	1100      	asrne	r0, r0, #4
 8028c44:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028c48:	b2c3      	uxtb	r3, r0
 8028c4a:	b2ba      	uxth	r2, r7
 8028c4c:	fa1f fc8c 	uxth.w	ip, ip
 8028c50:	fb02 f00c 	mul.w	r0, r2, ip
 8028c54:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028c58:	0112      	lsls	r2, r2, #4
 8028c5a:	fa1f fc8c 	uxth.w	ip, ip
 8028c5e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028c62:	1a12      	subs	r2, r2, r0
 8028c64:	eba7 070c 	sub.w	r7, r7, ip
 8028c68:	b292      	uxth	r2, r2
 8028c6a:	b2bf      	uxth	r7, r7
 8028c6c:	4362      	muls	r2, r4
 8028c6e:	fb06 2207 	mla	r2, r6, r7, r2
 8028c72:	fb0c 2505 	mla	r5, ip, r5, r2
 8028c76:	fb00 5303 	mla	r3, r0, r3, r5
 8028c7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028c7e:	b3a3      	cbz	r3, 8028cea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8028c80:	4a25      	ldr	r2, [pc, #148]	; (8028d18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8028c82:	880e      	ldrh	r6, [r1, #0]
 8028c84:	6815      	ldr	r5, [r2, #0]
 8028c86:	1234      	asrs	r4, r6, #8
 8028c88:	b29a      	uxth	r2, r3
 8028c8a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8028c8e:	43db      	mvns	r3, r3
 8028c90:	b2db      	uxtb	r3, r3
 8028c92:	fb10 f002 	smulbb	r0, r0, r2
 8028c96:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028c9a:	fb04 0403 	mla	r4, r4, r3, r0
 8028c9e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028ca2:	10f0      	asrs	r0, r6, #3
 8028ca4:	b2ed      	uxtb	r5, r5
 8028ca6:	00f6      	lsls	r6, r6, #3
 8028ca8:	fb17 f702 	smulbb	r7, r7, r2
 8028cac:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028cb0:	fb15 f202 	smulbb	r2, r5, r2
 8028cb4:	b2f6      	uxtb	r6, r6
 8028cb6:	b2a4      	uxth	r4, r4
 8028cb8:	fb00 7003 	mla	r0, r0, r3, r7
 8028cbc:	fb06 2303 	mla	r3, r6, r3, r2
 8028cc0:	b29a      	uxth	r2, r3
 8028cc2:	1c63      	adds	r3, r4, #1
 8028cc4:	b280      	uxth	r0, r0
 8028cc6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028cca:	1c53      	adds	r3, r2, #1
 8028ccc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028cd0:	1c42      	adds	r2, r0, #1
 8028cd2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028cd6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028cda:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028cde:	0940      	lsrs	r0, r0, #5
 8028ce0:	4323      	orrs	r3, r4
 8028ce2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028ce6:	4303      	orrs	r3, r0
 8028ce8:	800b      	strh	r3, [r1, #0]
 8028cea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028cee:	2600      	movs	r6, #0
 8028cf0:	e764      	b.n	8028bbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8028cf2:	2400      	movs	r4, #0
 8028cf4:	4626      	mov	r6, r4
 8028cf6:	e778      	b.n	8028bea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028cf8:	2400      	movs	r4, #0
 8028cfa:	e776      	b.n	8028bea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028cfc:	463c      	mov	r4, r7
 8028cfe:	e774      	b.n	8028bea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028d00:	2500      	movs	r5, #0
 8028d02:	e78e      	b.n	8028c22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8028d04:	2300      	movs	r3, #0
 8028d06:	461d      	mov	r5, r3
 8028d08:	e79f      	b.n	8028c4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028d0a:	4663      	mov	r3, ip
 8028d0c:	4665      	mov	r5, ip
 8028d0e:	e79c      	b.n	8028c4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028d10:	2300      	movs	r3, #0
 8028d12:	e79a      	b.n	8028c4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028d14:	463b      	mov	r3, r7
 8028d16:	e798      	b.n	8028c4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028d18:	20013864 	.word	0x20013864

08028d1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028d20:	b093      	sub	sp, #76	; 0x4c
 8028d22:	461d      	mov	r5, r3
 8028d24:	920c      	str	r2, [sp, #48]	; 0x30
 8028d26:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8028d28:	9107      	str	r1, [sp, #28]
 8028d2a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8028d2e:	9011      	str	r0, [sp, #68]	; 0x44
 8028d30:	6850      	ldr	r0, [r2, #4]
 8028d32:	6812      	ldr	r2, [r2, #0]
 8028d34:	fb00 1303 	mla	r3, r0, r3, r1
 8028d38:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028d3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028d3e:	689b      	ldr	r3, [r3, #8]
 8028d40:	3301      	adds	r3, #1
 8028d42:	f023 0301 	bic.w	r3, r3, #1
 8028d46:	9306      	str	r3, [sp, #24]
 8028d48:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028d4a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8028d4e:	681f      	ldr	r7, [r3, #0]
 8028d50:	9b07      	ldr	r3, [sp, #28]
 8028d52:	2b00      	cmp	r3, #0
 8028d54:	dc03      	bgt.n	8028d5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8028d56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8028d58:	2b00      	cmp	r3, #0
 8028d5a:	f340 8267 	ble.w	802922c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028d5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028d60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028d64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028d68:	1e48      	subs	r0, r1, #1
 8028d6a:	f102 3cff 	add.w	ip, r2, #4294967295
 8028d6e:	2d00      	cmp	r5, #0
 8028d70:	f340 80b8 	ble.w	8028ee4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028d74:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028d78:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028d7c:	d406      	bmi.n	8028d8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028d7e:	4586      	cmp	lr, r0
 8028d80:	da04      	bge.n	8028d8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028d82:	2b00      	cmp	r3, #0
 8028d84:	db02      	blt.n	8028d8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028d86:	4563      	cmp	r3, ip
 8028d88:	f2c0 80ad 	blt.w	8028ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8028d8c:	f11e 0e01 	adds.w	lr, lr, #1
 8028d90:	f100 80a0 	bmi.w	8028ed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028d94:	4571      	cmp	r1, lr
 8028d96:	f2c0 809d 	blt.w	8028ed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028d9a:	3301      	adds	r3, #1
 8028d9c:	f100 809a 	bmi.w	8028ed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028da0:	429a      	cmp	r2, r3
 8028da2:	f2c0 8097 	blt.w	8028ed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028da6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028daa:	9509      	str	r5, [sp, #36]	; 0x24
 8028dac:	46c8      	mov	r8, r9
 8028dae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028db0:	2b00      	cmp	r3, #0
 8028db2:	f340 80b6 	ble.w	8028f22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8028db6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028dba:	9308      	str	r3, [sp, #32]
 8028dbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028dbe:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028dc2:	1423      	asrs	r3, r4, #16
 8028dc4:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028dc8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028dcc:	f100 813e 	bmi.w	802904c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028dd0:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028dd4:	455b      	cmp	r3, fp
 8028dd6:	f280 8139 	bge.w	802904c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028dda:	2800      	cmp	r0, #0
 8028ddc:	f2c0 8136 	blt.w	802904c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028de0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028de4:	4558      	cmp	r0, fp
 8028de6:	f280 8131 	bge.w	802904c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028dea:	9a06      	ldr	r2, [sp, #24]
 8028dec:	fb00 3302 	mla	r3, r0, r2, r3
 8028df0:	0858      	lsrs	r0, r3, #1
 8028df2:	07da      	lsls	r2, r3, #31
 8028df4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028df8:	9a08      	ldr	r2, [sp, #32]
 8028dfa:	bf54      	ite	pl
 8028dfc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028e00:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028e04:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028e08:	fa5f fc8c 	uxtb.w	ip, ip
 8028e0c:	2a00      	cmp	r2, #0
 8028e0e:	f000 80cb 	beq.w	8028fa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8028e12:	1c58      	adds	r0, r3, #1
 8028e14:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028e18:	07c0      	lsls	r0, r0, #31
 8028e1a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028e1e:	bf54      	ite	pl
 8028e20:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028e24:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028e28:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028e2c:	fa5f fe8e 	uxtb.w	lr, lr
 8028e30:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8028e34:	b1b9      	cbz	r1, 8028e66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028e36:	4453      	add	r3, sl
 8028e38:	0858      	lsrs	r0, r3, #1
 8028e3a:	07da      	lsls	r2, r3, #31
 8028e3c:	5c38      	ldrb	r0, [r7, r0]
 8028e3e:	bf54      	ite	pl
 8028e40:	f000 000f 	andpl.w	r0, r0, #15
 8028e44:	1100      	asrmi	r0, r0, #4
 8028e46:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028e4a:	b2c0      	uxtb	r0, r0
 8028e4c:	900a      	str	r0, [sp, #40]	; 0x28
 8028e4e:	1c58      	adds	r0, r3, #1
 8028e50:	0843      	lsrs	r3, r0, #1
 8028e52:	07c2      	lsls	r2, r0, #31
 8028e54:	5cfb      	ldrb	r3, [r7, r3]
 8028e56:	bf54      	ite	pl
 8028e58:	f003 030f 	andpl.w	r3, r3, #15
 8028e5c:	111b      	asrmi	r3, r3, #4
 8028e5e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028e62:	b2db      	uxtb	r3, r3
 8028e64:	930e      	str	r3, [sp, #56]	; 0x38
 8028e66:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028e6a:	b289      	uxth	r1, r1
 8028e6c:	fb02 f301 	mul.w	r3, r2, r1
 8028e70:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028e74:	0112      	lsls	r2, r2, #4
 8028e76:	b289      	uxth	r1, r1
 8028e78:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028e7c:	1a40      	subs	r0, r0, r1
 8028e7e:	fa1f fe80 	uxth.w	lr, r0
 8028e82:	1ad2      	subs	r2, r2, r3
 8028e84:	980d      	ldr	r0, [sp, #52]	; 0x34
 8028e86:	b292      	uxth	r2, r2
 8028e88:	4342      	muls	r2, r0
 8028e8a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028e8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028e90:	fb01 c102 	mla	r1, r1, r2, ip
 8028e94:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028e96:	fb03 1302 	mla	r3, r3, r2, r1
 8028e9a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028e9e:	2bff      	cmp	r3, #255	; 0xff
 8028ea0:	f040 8093 	bne.w	8028fca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8028ea4:	4bbe      	ldr	r3, [pc, #760]	; (80291a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028ea6:	681a      	ldr	r2, [r3, #0]
 8028ea8:	4bbe      	ldr	r3, [pc, #760]	; (80291a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028eaa:	0951      	lsrs	r1, r2, #5
 8028eac:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028eb0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028eb4:	430b      	orrs	r3, r1
 8028eb6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028eba:	4313      	orrs	r3, r2
 8028ebc:	f8a8 3000 	strh.w	r3, [r8]
 8028ec0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028ec2:	441c      	add	r4, r3
 8028ec4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028ec6:	441e      	add	r6, r3
 8028ec8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028eca:	3b01      	subs	r3, #1
 8028ecc:	f108 0802 	add.w	r8, r8, #2
 8028ed0:	9309      	str	r3, [sp, #36]	; 0x24
 8028ed2:	e76c      	b.n	8028dae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028ed4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028ed6:	441c      	add	r4, r3
 8028ed8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028eda:	3d01      	subs	r5, #1
 8028edc:	441e      	add	r6, r3
 8028ede:	f109 0902 	add.w	r9, r9, #2
 8028ee2:	e744      	b.n	8028d6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8028ee4:	d021      	beq.n	8028f2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8028ee6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8028ee8:	1e6b      	subs	r3, r5, #1
 8028eea:	fb00 4003 	mla	r0, r0, r3, r4
 8028eee:	1400      	asrs	r0, r0, #16
 8028ef0:	f53f af59 	bmi.w	8028da6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028ef4:	3901      	subs	r1, #1
 8028ef6:	4288      	cmp	r0, r1
 8028ef8:	f6bf af55 	bge.w	8028da6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028efc:	9920      	ldr	r1, [sp, #128]	; 0x80
 8028efe:	fb01 6303 	mla	r3, r1, r3, r6
 8028f02:	141b      	asrs	r3, r3, #16
 8028f04:	f53f af4f 	bmi.w	8028da6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028f08:	3a01      	subs	r2, #1
 8028f0a:	4293      	cmp	r3, r2
 8028f0c:	f6bf af4b 	bge.w	8028da6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028f10:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8028f14:	9308      	str	r3, [sp, #32]
 8028f16:	46a8      	mov	r8, r5
 8028f18:	46ce      	mov	lr, r9
 8028f1a:	f1b8 0f00 	cmp.w	r8, #0
 8028f1e:	f300 80b5 	bgt.w	802908c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8028f22:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028f26:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028f2a:	9b07      	ldr	r3, [sp, #28]
 8028f2c:	2b00      	cmp	r3, #0
 8028f2e:	f340 817d 	ble.w	802922c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028f32:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028f36:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028f3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028f3e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028f40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028f44:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028f48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028f4c:	eef0 6a62 	vmov.f32	s13, s5
 8028f50:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028f54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028f58:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028f5c:	ee16 4a90 	vmov	r4, s13
 8028f60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028f64:	eef0 6a43 	vmov.f32	s13, s6
 8028f68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028f6c:	ee12 2a90 	vmov	r2, s5
 8028f70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028f74:	fb92 f3f3 	sdiv	r3, r2, r3
 8028f78:	ee13 2a10 	vmov	r2, s6
 8028f7c:	931f      	str	r3, [sp, #124]	; 0x7c
 8028f7e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028f80:	fb92 f3f3 	sdiv	r3, r2, r3
 8028f84:	9320      	str	r3, [sp, #128]	; 0x80
 8028f86:	9b07      	ldr	r3, [sp, #28]
 8028f88:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028f8a:	3b01      	subs	r3, #1
 8028f8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028f90:	9307      	str	r3, [sp, #28]
 8028f92:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028f94:	ee16 6a90 	vmov	r6, s13
 8028f98:	bf14      	ite	ne
 8028f9a:	461d      	movne	r5, r3
 8028f9c:	4615      	moveq	r5, r2
 8028f9e:	eeb0 3a67 	vmov.f32	s6, s15
 8028fa2:	eef0 2a47 	vmov.f32	s5, s14
 8028fa6:	e6d3      	b.n	8028d50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8028fa8:	2900      	cmp	r1, #0
 8028faa:	f43f af5c 	beq.w	8028e66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028fae:	eb0a 0003 	add.w	r0, sl, r3
 8028fb2:	0843      	lsrs	r3, r0, #1
 8028fb4:	07c0      	lsls	r0, r0, #31
 8028fb6:	5cfb      	ldrb	r3, [r7, r3]
 8028fb8:	bf54      	ite	pl
 8028fba:	f003 030f 	andpl.w	r3, r3, #15
 8028fbe:	111b      	asrmi	r3, r3, #4
 8028fc0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028fc4:	b2db      	uxtb	r3, r3
 8028fc6:	930a      	str	r3, [sp, #40]	; 0x28
 8028fc8:	e74d      	b.n	8028e66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028fca:	2b00      	cmp	r3, #0
 8028fcc:	f43f af78 	beq.w	8028ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028fd0:	4a73      	ldr	r2, [pc, #460]	; (80291a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028fd2:	f8b8 c000 	ldrh.w	ip, [r8]
 8028fd6:	6810      	ldr	r0, [r2, #0]
 8028fd8:	fa1f fe83 	uxth.w	lr, r3
 8028fdc:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028fe0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028fe4:	43db      	mvns	r3, r3
 8028fe6:	b2db      	uxtb	r3, r3
 8028fe8:	fb12 f20e 	smulbb	r2, r2, lr
 8028fec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028ff0:	fb01 2103 	mla	r1, r1, r3, r2
 8028ff4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028ff8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028ffc:	b2c0      	uxtb	r0, r0
 8028ffe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8029002:	fb1b fb0e 	smulbb	fp, fp, lr
 8029006:	b289      	uxth	r1, r1
 8029008:	fb10 fe0e 	smulbb	lr, r0, lr
 802900c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8029010:	fa5f fc8c 	uxtb.w	ip, ip
 8029014:	fb02 b203 	mla	r2, r2, r3, fp
 8029018:	1c48      	adds	r0, r1, #1
 802901a:	fb0c e303 	mla	r3, ip, r3, lr
 802901e:	b292      	uxth	r2, r2
 8029020:	b29b      	uxth	r3, r3
 8029022:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8029026:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802902a:	f102 0b01 	add.w	fp, r2, #1
 802902e:	1c59      	adds	r1, r3, #1
 8029030:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8029034:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8029038:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802903c:	0952      	lsrs	r2, r2, #5
 802903e:	4301      	orrs	r1, r0
 8029040:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029044:	4311      	orrs	r1, r2
 8029046:	f8a8 1000 	strh.w	r1, [r8]
 802904a:	e739      	b.n	8028ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802904c:	f113 0b01 	adds.w	fp, r3, #1
 8029050:	f53f af36 	bmi.w	8028ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029054:	45dc      	cmp	ip, fp
 8029056:	f6ff af33 	blt.w	8028ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802905a:	f110 0b01 	adds.w	fp, r0, #1
 802905e:	f53f af2f 	bmi.w	8028ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029062:	45de      	cmp	lr, fp
 8029064:	f6ff af2c 	blt.w	8028ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8029068:	9a08      	ldr	r2, [sp, #32]
 802906a:	9302      	str	r3, [sp, #8]
 802906c:	fa0f f38e 	sxth.w	r3, lr
 8029070:	9301      	str	r3, [sp, #4]
 8029072:	fa0f f38c 	sxth.w	r3, ip
 8029076:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802907a:	9105      	str	r1, [sp, #20]
 802907c:	9300      	str	r3, [sp, #0]
 802907e:	463a      	mov	r2, r7
 8029080:	4653      	mov	r3, sl
 8029082:	4641      	mov	r1, r8
 8029084:	9811      	ldr	r0, [sp, #68]	; 0x44
 8029086:	f7ff fd73 	bl	8028b70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802908a:	e719      	b.n	8028ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802908c:	9906      	ldr	r1, [sp, #24]
 802908e:	1422      	asrs	r2, r4, #16
 8029090:	1433      	asrs	r3, r6, #16
 8029092:	fb01 2303 	mla	r3, r1, r3, r2
 8029096:	085a      	lsrs	r2, r3, #1
 8029098:	07d9      	lsls	r1, r3, #31
 802909a:	5cba      	ldrb	r2, [r7, r2]
 802909c:	bf54      	ite	pl
 802909e:	f002 020f 	andpl.w	r2, r2, #15
 80290a2:	1112      	asrmi	r2, r2, #4
 80290a4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80290a8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80290ac:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80290b0:	b2d2      	uxtb	r2, r2
 80290b2:	2800      	cmp	r0, #0
 80290b4:	d062      	beq.n	802917c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80290b6:	f103 0a01 	add.w	sl, r3, #1
 80290ba:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80290be:	f01a 0f01 	tst.w	sl, #1
 80290c2:	5c79      	ldrb	r1, [r7, r1]
 80290c4:	bf0c      	ite	eq
 80290c6:	f001 010f 	andeq.w	r1, r1, #15
 80290ca:	1109      	asrne	r1, r1, #4
 80290cc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80290d0:	b2c9      	uxtb	r1, r1
 80290d2:	910f      	str	r1, [sp, #60]	; 0x3c
 80290d4:	f1bc 0f00 	cmp.w	ip, #0
 80290d8:	d019      	beq.n	802910e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80290da:	9908      	ldr	r1, [sp, #32]
 80290dc:	440b      	add	r3, r1
 80290de:	0859      	lsrs	r1, r3, #1
 80290e0:	f013 0f01 	tst.w	r3, #1
 80290e4:	5c79      	ldrb	r1, [r7, r1]
 80290e6:	bf0c      	ite	eq
 80290e8:	f001 010f 	andeq.w	r1, r1, #15
 80290ec:	1109      	asrne	r1, r1, #4
 80290ee:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80290f2:	b2c9      	uxtb	r1, r1
 80290f4:	3301      	adds	r3, #1
 80290f6:	910b      	str	r1, [sp, #44]	; 0x2c
 80290f8:	0859      	lsrs	r1, r3, #1
 80290fa:	07db      	lsls	r3, r3, #31
 80290fc:	5c79      	ldrb	r1, [r7, r1]
 80290fe:	bf54      	ite	pl
 8029100:	f001 010f 	andpl.w	r1, r1, #15
 8029104:	1109      	asrmi	r1, r1, #4
 8029106:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802910a:	b2c9      	uxtb	r1, r1
 802910c:	9110      	str	r1, [sp, #64]	; 0x40
 802910e:	b280      	uxth	r0, r0
 8029110:	fa1f fc8c 	uxth.w	ip, ip
 8029114:	fb00 f30c 	mul.w	r3, r0, ip
 8029118:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802911c:	0100      	lsls	r0, r0, #4
 802911e:	fa1f fc8c 	uxth.w	ip, ip
 8029122:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8029126:	eba1 010c 	sub.w	r1, r1, ip
 802912a:	fa1f fa81 	uxth.w	sl, r1
 802912e:	1ac0      	subs	r0, r0, r3
 8029130:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029132:	b280      	uxth	r0, r0
 8029134:	4348      	muls	r0, r1
 8029136:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8029138:	fb02 020a 	mla	r2, r2, sl, r0
 802913c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8029140:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8029142:	fb03 c302 	mla	r3, r3, r2, ip
 8029146:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802914a:	2bff      	cmp	r3, #255	; 0xff
 802914c:	d12c      	bne.n	80291a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802914e:	4b14      	ldr	r3, [pc, #80]	; (80291a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8029150:	681a      	ldr	r2, [r3, #0]
 8029152:	4b14      	ldr	r3, [pc, #80]	; (80291a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8029154:	0951      	lsrs	r1, r2, #5
 8029156:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802915a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802915e:	430b      	orrs	r3, r1
 8029160:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8029164:	4313      	orrs	r3, r2
 8029166:	f8ae 3000 	strh.w	r3, [lr]
 802916a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802916c:	441c      	add	r4, r3
 802916e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029170:	f10e 0e02 	add.w	lr, lr, #2
 8029174:	441e      	add	r6, r3
 8029176:	f108 38ff 	add.w	r8, r8, #4294967295
 802917a:	e6ce      	b.n	8028f1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802917c:	f1bc 0f00 	cmp.w	ip, #0
 8029180:	d0c5      	beq.n	802910e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8029182:	9908      	ldr	r1, [sp, #32]
 8029184:	440b      	add	r3, r1
 8029186:	0859      	lsrs	r1, r3, #1
 8029188:	07db      	lsls	r3, r3, #31
 802918a:	5c79      	ldrb	r1, [r7, r1]
 802918c:	bf54      	ite	pl
 802918e:	f001 010f 	andpl.w	r1, r1, #15
 8029192:	1109      	asrmi	r1, r1, #4
 8029194:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029198:	b2c9      	uxtb	r1, r1
 802919a:	910b      	str	r1, [sp, #44]	; 0x2c
 802919c:	e7b7      	b.n	802910e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802919e:	bf00      	nop
 80291a0:	20013864 	.word	0x20013864
 80291a4:	fffff800 	.word	0xfffff800
 80291a8:	2b00      	cmp	r3, #0
 80291aa:	d0de      	beq.n	802916a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80291ac:	4a21      	ldr	r2, [pc, #132]	; (8029234 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80291ae:	f8be c000 	ldrh.w	ip, [lr]
 80291b2:	6810      	ldr	r0, [r2, #0]
 80291b4:	fa1f fa83 	uxth.w	sl, r3
 80291b8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80291bc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80291c0:	43db      	mvns	r3, r3
 80291c2:	b2db      	uxtb	r3, r3
 80291c4:	fb12 f20a 	smulbb	r2, r2, sl
 80291c8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80291cc:	fb01 2103 	mla	r1, r1, r3, r2
 80291d0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80291d4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80291d8:	b2c0      	uxtb	r0, r0
 80291da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80291de:	fa5f fc8c 	uxtb.w	ip, ip
 80291e2:	fb10 f00a 	smulbb	r0, r0, sl
 80291e6:	fb0c 0003 	mla	r0, ip, r3, r0
 80291ea:	b289      	uxth	r1, r1
 80291ec:	fb1b fb0a 	smulbb	fp, fp, sl
 80291f0:	b280      	uxth	r0, r0
 80291f2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80291f6:	fb02 b203 	mla	r2, r2, r3, fp
 80291fa:	1c4b      	adds	r3, r1, #1
 80291fc:	f100 0b01 	add.w	fp, r0, #1
 8029200:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8029204:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8029208:	b292      	uxth	r2, r2
 802920a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802920e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8029212:	ea4b 0101 	orr.w	r1, fp, r1
 8029216:	f102 0b01 	add.w	fp, r2, #1
 802921a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802921e:	0952      	lsrs	r2, r2, #5
 8029220:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029224:	4311      	orrs	r1, r2
 8029226:	f8ae 1000 	strh.w	r1, [lr]
 802922a:	e79e      	b.n	802916a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802922c:	b013      	add	sp, #76	; 0x4c
 802922e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029232:	bf00      	nop
 8029234:	20013864 	.word	0x20013864

08029238 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8029238:	b570      	push	{r4, r5, r6, lr}
 802923a:	1208      	asrs	r0, r1, #8
 802923c:	b29e      	uxth	r6, r3
 802923e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8029242:	1213      	asrs	r3, r2, #8
 8029244:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8029248:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802924c:	fb13 f305 	smulbb	r3, r3, r5
 8029250:	fb10 f006 	smulbb	r0, r0, r6
 8029254:	4418      	add	r0, r3
 8029256:	10cc      	asrs	r4, r1, #3
 8029258:	10d3      	asrs	r3, r2, #3
 802925a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802925e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8029262:	fb13 f305 	smulbb	r3, r3, r5
 8029266:	fb14 f406 	smulbb	r4, r4, r6
 802926a:	00c9      	lsls	r1, r1, #3
 802926c:	00d2      	lsls	r2, r2, #3
 802926e:	441c      	add	r4, r3
 8029270:	b2d2      	uxtb	r2, r2
 8029272:	b2cb      	uxtb	r3, r1
 8029274:	fb12 f205 	smulbb	r2, r2, r5
 8029278:	b280      	uxth	r0, r0
 802927a:	fb13 f306 	smulbb	r3, r3, r6
 802927e:	4413      	add	r3, r2
 8029280:	1c42      	adds	r2, r0, #1
 8029282:	b29b      	uxth	r3, r3
 8029284:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029288:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802928c:	1c58      	adds	r0, r3, #1
 802928e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029292:	b2a4      	uxth	r4, r4
 8029294:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029298:	4310      	orrs	r0, r2
 802929a:	1c62      	adds	r2, r4, #1
 802929c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80292a0:	0964      	lsrs	r4, r4, #5
 80292a2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80292a6:	4320      	orrs	r0, r4
 80292a8:	bd70      	pop	{r4, r5, r6, pc}
	...

080292ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80292ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80292b0:	b08f      	sub	sp, #60	; 0x3c
 80292b2:	461c      	mov	r4, r3
 80292b4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80292b8:	9004      	str	r0, [sp, #16]
 80292ba:	460d      	mov	r5, r1
 80292bc:	4616      	mov	r6, r2
 80292be:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80292c0:	2f00      	cmp	r7, #0
 80292c2:	f000 80f6 	beq.w	80294b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80292c6:	6820      	ldr	r0, [r4, #0]
 80292c8:	6861      	ldr	r1, [r4, #4]
 80292ca:	aa0a      	add	r2, sp, #40	; 0x28
 80292cc:	c203      	stmia	r2!, {r0, r1}
 80292ce:	6818      	ldr	r0, [r3, #0]
 80292d0:	6859      	ldr	r1, [r3, #4]
 80292d2:	aa0c      	add	r2, sp, #48	; 0x30
 80292d4:	c203      	stmia	r2!, {r0, r1}
 80292d6:	a80a      	add	r0, sp, #40	; 0x28
 80292d8:	f7ef fa5e 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80292dc:	4621      	mov	r1, r4
 80292de:	a80c      	add	r0, sp, #48	; 0x30
 80292e0:	f7ef fa9e 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80292e4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80292e8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80292ec:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80292f0:	f002 0301 	and.w	r3, r2, #1
 80292f4:	9306      	str	r3, [sp, #24]
 80292f6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80292fa:	f003 0101 	and.w	r1, r3, #1
 80292fe:	9105      	str	r1, [sp, #20]
 8029300:	9805      	ldr	r0, [sp, #20]
 8029302:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029306:	4403      	add	r3, r0
 8029308:	fb01 2303 	mla	r3, r1, r3, r2
 802930c:	f04f 0802 	mov.w	r8, #2
 8029310:	fb93 f3f8 	sdiv	r3, r3, r8
 8029314:	441d      	add	r5, r3
 8029316:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802931a:	441a      	add	r2, r3
 802931c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029320:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029324:	4419      	add	r1, r3
 8029326:	4b64      	ldr	r3, [pc, #400]	; (80294b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8029328:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802932c:	6818      	ldr	r0, [r3, #0]
 802932e:	6803      	ldr	r3, [r0, #0]
 8029330:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029332:	4798      	blx	r3
 8029334:	4a61      	ldr	r2, [pc, #388]	; (80294bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8029336:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802933a:	8813      	ldrh	r3, [r2, #0]
 802933c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8029340:	2fff      	cmp	r7, #255	; 0xff
 8029342:	fb03 a404 	mla	r4, r3, r4, sl
 8029346:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802934a:	f106 0604 	add.w	r6, r6, #4
 802934e:	4611      	mov	r1, r2
 8029350:	fb03 fb0b 	mul.w	fp, r3, fp
 8029354:	d06b      	beq.n	802942e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8029356:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802935a:	9303      	str	r3, [sp, #12]
 802935c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8029360:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029364:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8029368:	9b07      	ldr	r3, [sp, #28]
 802936a:	42a3      	cmp	r3, r4
 802936c:	f240 809c 	bls.w	80294a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8029370:	9b06      	ldr	r3, [sp, #24]
 8029372:	2b00      	cmp	r3, #0
 8029374:	d039      	beq.n	80293ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8029376:	782b      	ldrb	r3, [r5, #0]
 8029378:	8822      	ldrh	r2, [r4, #0]
 802937a:	9804      	ldr	r0, [sp, #16]
 802937c:	f003 030f 	and.w	r3, r3, #15
 8029380:	f105 0801 	add.w	r8, r5, #1
 8029384:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029388:	9b03      	ldr	r3, [sp, #12]
 802938a:	9300      	str	r3, [sp, #0]
 802938c:	463b      	mov	r3, r7
 802938e:	f7ff ff53 	bl	8029238 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029392:	f824 0b02 	strh.w	r0, [r4], #2
 8029396:	f109 3bff 	add.w	fp, r9, #4294967295
 802939a:	f1bb 0f01 	cmp.w	fp, #1
 802939e:	46a2      	mov	sl, r4
 80293a0:	f104 0404 	add.w	r4, r4, #4
 80293a4:	dd24      	ble.n	80293f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80293a6:	f898 3000 	ldrb.w	r3, [r8]
 80293aa:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80293ae:	9804      	ldr	r0, [sp, #16]
 80293b0:	091b      	lsrs	r3, r3, #4
 80293b2:	f1ab 0b02 	sub.w	fp, fp, #2
 80293b6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80293ba:	9b03      	ldr	r3, [sp, #12]
 80293bc:	9300      	str	r3, [sp, #0]
 80293be:	463b      	mov	r3, r7
 80293c0:	f7ff ff3a 	bl	8029238 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80293c4:	f824 0c04 	strh.w	r0, [r4, #-4]
 80293c8:	f818 3b01 	ldrb.w	r3, [r8], #1
 80293cc:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80293d0:	9804      	ldr	r0, [sp, #16]
 80293d2:	f003 030f 	and.w	r3, r3, #15
 80293d6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80293da:	9b03      	ldr	r3, [sp, #12]
 80293dc:	9300      	str	r3, [sp, #0]
 80293de:	463b      	mov	r3, r7
 80293e0:	f7ff ff2a 	bl	8029238 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80293e4:	f824 0c02 	strh.w	r0, [r4, #-2]
 80293e8:	e7d7      	b.n	802939a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80293ea:	46a8      	mov	r8, r5
 80293ec:	46cb      	mov	fp, r9
 80293ee:	e7d4      	b.n	802939a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80293f0:	d10e      	bne.n	8029410 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80293f2:	f898 3000 	ldrb.w	r3, [r8]
 80293f6:	f8ba 2000 	ldrh.w	r2, [sl]
 80293fa:	9804      	ldr	r0, [sp, #16]
 80293fc:	091b      	lsrs	r3, r3, #4
 80293fe:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029402:	9b03      	ldr	r3, [sp, #12]
 8029404:	9300      	str	r3, [sp, #0]
 8029406:	463b      	mov	r3, r7
 8029408:	f7ff ff16 	bl	8029238 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802940c:	f82a 0b02 	strh.w	r0, [sl], #2
 8029410:	9b08      	ldr	r3, [sp, #32]
 8029412:	9a05      	ldr	r2, [sp, #20]
 8029414:	881c      	ldrh	r4, [r3, #0]
 8029416:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802941a:	eba4 0409 	sub.w	r4, r4, r9
 802941e:	4413      	add	r3, r2
 8029420:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8029424:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029426:	fb93 f3f2 	sdiv	r3, r3, r2
 802942a:	441d      	add	r5, r3
 802942c:	e79c      	b.n	8029368 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802942e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8029432:	45a3      	cmp	fp, r4
 8029434:	d938      	bls.n	80294a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8029436:	9b06      	ldr	r3, [sp, #24]
 8029438:	b1f3      	cbz	r3, 8029478 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802943a:	782b      	ldrb	r3, [r5, #0]
 802943c:	f003 030f 	and.w	r3, r3, #15
 8029440:	1c6a      	adds	r2, r5, #1
 8029442:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029446:	8023      	strh	r3, [r4, #0]
 8029448:	f109 30ff 	add.w	r0, r9, #4294967295
 802944c:	3402      	adds	r4, #2
 802944e:	2801      	cmp	r0, #1
 8029450:	4623      	mov	r3, r4
 8029452:	f104 0404 	add.w	r4, r4, #4
 8029456:	dd12      	ble.n	802947e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8029458:	7813      	ldrb	r3, [r2, #0]
 802945a:	091b      	lsrs	r3, r3, #4
 802945c:	3802      	subs	r0, #2
 802945e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029462:	f824 3c04 	strh.w	r3, [r4, #-4]
 8029466:	f812 3b01 	ldrb.w	r3, [r2], #1
 802946a:	f003 030f 	and.w	r3, r3, #15
 802946e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029472:	f824 3c02 	strh.w	r3, [r4, #-2]
 8029476:	e7ea      	b.n	802944e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8029478:	462a      	mov	r2, r5
 802947a:	4648      	mov	r0, r9
 802947c:	e7e7      	b.n	802944e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802947e:	d106      	bne.n	802948e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8029480:	7812      	ldrb	r2, [r2, #0]
 8029482:	0912      	lsrs	r2, r2, #4
 8029484:	3302      	adds	r3, #2
 8029486:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802948a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802948e:	880c      	ldrh	r4, [r1, #0]
 8029490:	9a05      	ldr	r2, [sp, #20]
 8029492:	eba4 0409 	sub.w	r4, r4, r9
 8029496:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802949a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802949e:	4413      	add	r3, r2
 80294a0:	fb93 f3f8 	sdiv	r3, r3, r8
 80294a4:	441d      	add	r5, r3
 80294a6:	e7c4      	b.n	8029432 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80294a8:	4b03      	ldr	r3, [pc, #12]	; (80294b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80294aa:	6818      	ldr	r0, [r3, #0]
 80294ac:	6803      	ldr	r3, [r0, #0]
 80294ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80294b0:	4798      	blx	r3
 80294b2:	b00f      	add	sp, #60	; 0x3c
 80294b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80294b8:	20013854 	.word	0x20013854
 80294bc:	2001384e 	.word	0x2001384e

080294c0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80294c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80294c2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80294c6:	2dff      	cmp	r5, #255	; 0xff
 80294c8:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80294cc:	d10c      	bne.n	80294e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80294ce:	2bff      	cmp	r3, #255	; 0xff
 80294d0:	d10a      	bne.n	80294e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80294d2:	4b25      	ldr	r3, [pc, #148]	; (8029568 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80294d4:	0948      	lsrs	r0, r1, #5
 80294d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80294da:	403b      	ands	r3, r7
 80294dc:	4318      	orrs	r0, r3
 80294de:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80294e2:	4308      	orrs	r0, r1
 80294e4:	b280      	uxth	r0, r0
 80294e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80294e8:	fb15 f503 	smulbb	r5, r5, r3
 80294ec:	b2ab      	uxth	r3, r5
 80294ee:	1c5d      	adds	r5, r3, #1
 80294f0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80294f4:	1214      	asrs	r4, r2, #8
 80294f6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80294fa:	fa1f fc85 	uxth.w	ip, r5
 80294fe:	10d6      	asrs	r6, r2, #3
 8029500:	00d0      	lsls	r0, r2, #3
 8029502:	43ed      	mvns	r5, r5
 8029504:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029508:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802950c:	b2eb      	uxtb	r3, r5
 802950e:	b2c0      	uxtb	r0, r0
 8029510:	fb12 f20c 	smulbb	r2, r2, ip
 8029514:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029518:	fb04 2403 	mla	r4, r4, r3, r2
 802951c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8029520:	b2c8      	uxtb	r0, r1
 8029522:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8029526:	b2fd      	uxtb	r5, r7
 8029528:	fb10 f00c 	smulbb	r0, r0, ip
 802952c:	b2a4      	uxth	r4, r4
 802952e:	fb02 0003 	mla	r0, r2, r3, r0
 8029532:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8029536:	fb15 f50c 	smulbb	r5, r5, ip
 802953a:	fb06 5503 	mla	r5, r6, r3, r5
 802953e:	b283      	uxth	r3, r0
 8029540:	1c60      	adds	r0, r4, #1
 8029542:	b2ad      	uxth	r5, r5
 8029544:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8029548:	1c58      	adds	r0, r3, #1
 802954a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802954e:	1c6b      	adds	r3, r5, #1
 8029550:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029554:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8029558:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802955c:	096d      	lsrs	r5, r5, #5
 802955e:	4320      	orrs	r0, r4
 8029560:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029564:	4328      	orrs	r0, r5
 8029566:	e7be      	b.n	80294e6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8029568:	00fff800 	.word	0x00fff800

0802956c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802956c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029570:	461c      	mov	r4, r3
 8029572:	b08d      	sub	sp, #52	; 0x34
 8029574:	460d      	mov	r5, r1
 8029576:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8029578:	6861      	ldr	r1, [r4, #4]
 802957a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802957e:	4680      	mov	r8, r0
 8029580:	6820      	ldr	r0, [r4, #0]
 8029582:	4616      	mov	r6, r2
 8029584:	aa08      	add	r2, sp, #32
 8029586:	c203      	stmia	r2!, {r0, r1}
 8029588:	6818      	ldr	r0, [r3, #0]
 802958a:	6859      	ldr	r1, [r3, #4]
 802958c:	aa0a      	add	r2, sp, #40	; 0x28
 802958e:	c203      	stmia	r2!, {r0, r1}
 8029590:	a808      	add	r0, sp, #32
 8029592:	f7ef f901 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029596:	4621      	mov	r1, r4
 8029598:	a80a      	add	r0, sp, #40	; 0x28
 802959a:	f7ef f941 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802959e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80295a2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80295a6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80295aa:	f002 0301 	and.w	r3, r2, #1
 80295ae:	9303      	str	r3, [sp, #12]
 80295b0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80295b4:	f003 0101 	and.w	r1, r3, #1
 80295b8:	9102      	str	r1, [sp, #8]
 80295ba:	9802      	ldr	r0, [sp, #8]
 80295bc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80295c0:	4403      	add	r3, r0
 80295c2:	fb01 2303 	mla	r3, r1, r3, r2
 80295c6:	f04f 0a02 	mov.w	sl, #2
 80295ca:	fb93 f3fa 	sdiv	r3, r3, sl
 80295ce:	441d      	add	r5, r3
 80295d0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80295d4:	441a      	add	r2, r3
 80295d6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80295da:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80295de:	4a3f      	ldr	r2, [pc, #252]	; (80296dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80295e0:	9205      	str	r2, [sp, #20]
 80295e2:	4419      	add	r1, r3
 80295e4:	6810      	ldr	r0, [r2, #0]
 80295e6:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80295ea:	6803      	ldr	r3, [r0, #0]
 80295ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80295ee:	4798      	blx	r3
 80295f0:	4b3b      	ldr	r3, [pc, #236]	; (80296e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80295f2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80295f6:	8819      	ldrh	r1, [r3, #0]
 80295f8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80295fc:	fb01 c404 	mla	r4, r1, r4, ip
 8029600:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029604:	434f      	muls	r7, r1
 8029606:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802960a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802960e:	3604      	adds	r6, #4
 8029610:	9204      	str	r2, [sp, #16]
 8029612:	9b04      	ldr	r3, [sp, #16]
 8029614:	429c      	cmp	r4, r3
 8029616:	d258      	bcs.n	80296ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8029618:	9b03      	ldr	r3, [sp, #12]
 802961a:	2b00      	cmp	r3, #0
 802961c:	d034      	beq.n	8029688 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802961e:	782b      	ldrb	r3, [r5, #0]
 8029620:	f003 030f 	and.w	r3, r3, #15
 8029624:	1c6f      	adds	r7, r5, #1
 8029626:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802962a:	0e0b      	lsrs	r3, r1, #24
 802962c:	d006      	beq.n	802963c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802962e:	8822      	ldrh	r2, [r4, #0]
 8029630:	9300      	str	r3, [sp, #0]
 8029632:	4640      	mov	r0, r8
 8029634:	464b      	mov	r3, r9
 8029636:	f7ff ff43 	bl	80294c0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802963a:	8020      	strh	r0, [r4, #0]
 802963c:	3402      	adds	r4, #2
 802963e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8029642:	f1ba 0f01 	cmp.w	sl, #1
 8029646:	dd22      	ble.n	802968e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8029648:	783b      	ldrb	r3, [r7, #0]
 802964a:	091b      	lsrs	r3, r3, #4
 802964c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029650:	0e0b      	lsrs	r3, r1, #24
 8029652:	d006      	beq.n	8029662 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8029654:	8822      	ldrh	r2, [r4, #0]
 8029656:	9300      	str	r3, [sp, #0]
 8029658:	4640      	mov	r0, r8
 802965a:	464b      	mov	r3, r9
 802965c:	f7ff ff30 	bl	80294c0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029660:	8020      	strh	r0, [r4, #0]
 8029662:	f817 3b01 	ldrb.w	r3, [r7], #1
 8029666:	f003 030f 	and.w	r3, r3, #15
 802966a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802966e:	0e0b      	lsrs	r3, r1, #24
 8029670:	d006      	beq.n	8029680 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8029672:	8862      	ldrh	r2, [r4, #2]
 8029674:	9300      	str	r3, [sp, #0]
 8029676:	4640      	mov	r0, r8
 8029678:	464b      	mov	r3, r9
 802967a:	f7ff ff21 	bl	80294c0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802967e:	8060      	strh	r0, [r4, #2]
 8029680:	3404      	adds	r4, #4
 8029682:	f1aa 0a02 	sub.w	sl, sl, #2
 8029686:	e7dc      	b.n	8029642 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029688:	462f      	mov	r7, r5
 802968a:	46da      	mov	sl, fp
 802968c:	e7d9      	b.n	8029642 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802968e:	d10d      	bne.n	80296ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8029690:	783b      	ldrb	r3, [r7, #0]
 8029692:	091b      	lsrs	r3, r3, #4
 8029694:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029698:	0e0b      	lsrs	r3, r1, #24
 802969a:	d006      	beq.n	80296aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802969c:	8822      	ldrh	r2, [r4, #0]
 802969e:	9300      	str	r3, [sp, #0]
 80296a0:	4640      	mov	r0, r8
 80296a2:	464b      	mov	r3, r9
 80296a4:	f7ff ff0c 	bl	80294c0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80296a8:	8020      	strh	r0, [r4, #0]
 80296aa:	3402      	adds	r4, #2
 80296ac:	9b06      	ldr	r3, [sp, #24]
 80296ae:	9a02      	ldr	r2, [sp, #8]
 80296b0:	881b      	ldrh	r3, [r3, #0]
 80296b2:	eba3 030b 	sub.w	r3, r3, fp
 80296b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80296ba:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80296be:	4413      	add	r3, r2
 80296c0:	9a07      	ldr	r2, [sp, #28]
 80296c2:	fb93 f3f2 	sdiv	r3, r3, r2
 80296c6:	441d      	add	r5, r3
 80296c8:	e7a3      	b.n	8029612 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80296ca:	9b05      	ldr	r3, [sp, #20]
 80296cc:	6818      	ldr	r0, [r3, #0]
 80296ce:	6803      	ldr	r3, [r0, #0]
 80296d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80296d2:	4798      	blx	r3
 80296d4:	b00d      	add	sp, #52	; 0x34
 80296d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80296da:	bf00      	nop
 80296dc:	20013854 	.word	0x20013854
 80296e0:	2001384e 	.word	0x2001384e

080296e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80296e4:	b570      	push	{r4, r5, r6, lr}
 80296e6:	1214      	asrs	r4, r2, #8
 80296e8:	788d      	ldrb	r5, [r1, #2]
 80296ea:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80296ee:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80296f2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80296f6:	fb15 f503 	smulbb	r5, r5, r3
 80296fa:	fb04 5506 	mla	r5, r4, r6, r5
 80296fe:	10d0      	asrs	r0, r2, #3
 8029700:	784c      	ldrb	r4, [r1, #1]
 8029702:	7809      	ldrb	r1, [r1, #0]
 8029704:	00d2      	lsls	r2, r2, #3
 8029706:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802970a:	b2d2      	uxtb	r2, r2
 802970c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8029710:	fb14 f403 	smulbb	r4, r4, r3
 8029714:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8029718:	fb11 f303 	smulbb	r3, r1, r3
 802971c:	fb00 4406 	mla	r4, r0, r6, r4
 8029720:	fb02 3306 	mla	r3, r2, r6, r3
 8029724:	b2ad      	uxth	r5, r5
 8029726:	b29b      	uxth	r3, r3
 8029728:	b2a4      	uxth	r4, r4
 802972a:	1c68      	adds	r0, r5, #1
 802972c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8029730:	1c62      	adds	r2, r4, #1
 8029732:	1c58      	adds	r0, r3, #1
 8029734:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029738:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802973c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8029740:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029744:	0964      	lsrs	r4, r4, #5
 8029746:	4328      	orrs	r0, r5
 8029748:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802974c:	4320      	orrs	r0, r4
 802974e:	bd70      	pop	{r4, r5, r6, pc}

08029750 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8029750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029754:	b08f      	sub	sp, #60	; 0x3c
 8029756:	461c      	mov	r4, r3
 8029758:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802975c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802975e:	4682      	mov	sl, r0
 8029760:	460e      	mov	r6, r1
 8029762:	4615      	mov	r5, r2
 8029764:	2f00      	cmp	r7, #0
 8029766:	f000 8142 	beq.w	80299ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802976a:	6820      	ldr	r0, [r4, #0]
 802976c:	6861      	ldr	r1, [r4, #4]
 802976e:	aa0a      	add	r2, sp, #40	; 0x28
 8029770:	c203      	stmia	r2!, {r0, r1}
 8029772:	6818      	ldr	r0, [r3, #0]
 8029774:	6859      	ldr	r1, [r3, #4]
 8029776:	aa0c      	add	r2, sp, #48	; 0x30
 8029778:	c203      	stmia	r2!, {r0, r1}
 802977a:	a80a      	add	r0, sp, #40	; 0x28
 802977c:	f7ef f80c 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029780:	4621      	mov	r1, r4
 8029782:	a80c      	add	r0, sp, #48	; 0x30
 8029784:	f7ef f84c 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029788:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802978c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029790:	f002 0301 	and.w	r3, r2, #1
 8029794:	9306      	str	r3, [sp, #24]
 8029796:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802979a:	f003 0101 	and.w	r1, r3, #1
 802979e:	9105      	str	r1, [sp, #20]
 80297a0:	9805      	ldr	r0, [sp, #20]
 80297a2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80297a6:	4403      	add	r3, r0
 80297a8:	fb01 2303 	mla	r3, r1, r3, r2
 80297ac:	f04f 0802 	mov.w	r8, #2
 80297b0:	fb93 f3f8 	sdiv	r3, r3, r8
 80297b4:	441e      	add	r6, r3
 80297b6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80297ba:	441a      	add	r2, r3
 80297bc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80297c0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80297c4:	4419      	add	r1, r3
 80297c6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80297ca:	9303      	str	r3, [sp, #12]
 80297cc:	4b89      	ldr	r3, [pc, #548]	; (80299f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80297ce:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80297d2:	6818      	ldr	r0, [r3, #0]
 80297d4:	6803      	ldr	r3, [r0, #0]
 80297d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80297d8:	4798      	blx	r3
 80297da:	4a87      	ldr	r2, [pc, #540]	; (80299f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80297dc:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80297e0:	8813      	ldrh	r3, [r2, #0]
 80297e2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80297e6:	2fff      	cmp	r7, #255	; 0xff
 80297e8:	fb03 9404 	mla	r4, r3, r4, r9
 80297ec:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80297f0:	f105 0504 	add.w	r5, r5, #4
 80297f4:	4694      	mov	ip, r2
 80297f6:	fb03 f30b 	mul.w	r3, r3, fp
 80297fa:	d071      	beq.n	80298e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80297fc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029800:	43f9      	mvns	r1, r7
 8029802:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029806:	b2c9      	uxtb	r1, r1
 8029808:	9104      	str	r1, [sp, #16]
 802980a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802980e:	9b07      	ldr	r3, [sp, #28]
 8029810:	42a3      	cmp	r3, r4
 8029812:	f240 80e7 	bls.w	80299e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029816:	9b06      	ldr	r3, [sp, #24]
 8029818:	2b00      	cmp	r3, #0
 802981a:	d03d      	beq.n	8029898 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802981c:	7831      	ldrb	r1, [r6, #0]
 802981e:	9b04      	ldr	r3, [sp, #16]
 8029820:	8822      	ldrh	r2, [r4, #0]
 8029822:	9300      	str	r3, [sp, #0]
 8029824:	f001 010f 	and.w	r1, r1, #15
 8029828:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802982c:	463b      	mov	r3, r7
 802982e:	4429      	add	r1, r5
 8029830:	4650      	mov	r0, sl
 8029832:	f7ff ff57 	bl	80296e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029836:	9b03      	ldr	r3, [sp, #12]
 8029838:	f824 0b02 	strh.w	r0, [r4], #2
 802983c:	f106 0801 	add.w	r8, r6, #1
 8029840:	f103 3bff 	add.w	fp, r3, #4294967295
 8029844:	f1bb 0f01 	cmp.w	fp, #1
 8029848:	46a1      	mov	r9, r4
 802984a:	f104 0404 	add.w	r4, r4, #4
 802984e:	dd27      	ble.n	80298a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8029850:	f898 1000 	ldrb.w	r1, [r8]
 8029854:	9b04      	ldr	r3, [sp, #16]
 8029856:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802985a:	9300      	str	r3, [sp, #0]
 802985c:	0909      	lsrs	r1, r1, #4
 802985e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029862:	463b      	mov	r3, r7
 8029864:	4429      	add	r1, r5
 8029866:	4650      	mov	r0, sl
 8029868:	f7ff ff3c 	bl	80296e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802986c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029870:	f818 1b01 	ldrb.w	r1, [r8], #1
 8029874:	9b04      	ldr	r3, [sp, #16]
 8029876:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802987a:	9300      	str	r3, [sp, #0]
 802987c:	f001 010f 	and.w	r1, r1, #15
 8029880:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029884:	463b      	mov	r3, r7
 8029886:	4429      	add	r1, r5
 8029888:	4650      	mov	r0, sl
 802988a:	f7ff ff2b 	bl	80296e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802988e:	f1ab 0b02 	sub.w	fp, fp, #2
 8029892:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029896:	e7d5      	b.n	8029844 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029898:	46b0      	mov	r8, r6
 802989a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802989e:	e7d1      	b.n	8029844 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80298a0:	d10f      	bne.n	80298c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80298a2:	f898 1000 	ldrb.w	r1, [r8]
 80298a6:	9b04      	ldr	r3, [sp, #16]
 80298a8:	f8b9 2000 	ldrh.w	r2, [r9]
 80298ac:	9300      	str	r3, [sp, #0]
 80298ae:	0909      	lsrs	r1, r1, #4
 80298b0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80298b4:	463b      	mov	r3, r7
 80298b6:	4429      	add	r1, r5
 80298b8:	4650      	mov	r0, sl
 80298ba:	f7ff ff13 	bl	80296e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80298be:	f829 0b02 	strh.w	r0, [r9], #2
 80298c2:	9b08      	ldr	r3, [sp, #32]
 80298c4:	9a05      	ldr	r2, [sp, #20]
 80298c6:	881c      	ldrh	r4, [r3, #0]
 80298c8:	9b03      	ldr	r3, [sp, #12]
 80298ca:	1ae4      	subs	r4, r4, r3
 80298cc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80298d0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80298d4:	4413      	add	r3, r2
 80298d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80298d8:	fb93 f3f2 	sdiv	r3, r3, r2
 80298dc:	441e      	add	r6, r3
 80298de:	e796      	b.n	802980e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80298e0:	4f46      	ldr	r7, [pc, #280]	; (80299fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80298e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80298e6:	42a3      	cmp	r3, r4
 80298e8:	d97c      	bls.n	80299e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80298ea:	9a06      	ldr	r2, [sp, #24]
 80298ec:	2a00      	cmp	r2, #0
 80298ee:	d054      	beq.n	802999a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80298f0:	7830      	ldrb	r0, [r6, #0]
 80298f2:	f000 000f 	and.w	r0, r0, #15
 80298f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80298fa:	eb05 0e00 	add.w	lr, r5, r0
 80298fe:	5c28      	ldrb	r0, [r5, r0]
 8029900:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8029904:	f89e e001 	ldrb.w	lr, [lr, #1]
 8029908:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802990c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8029910:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029914:	ea42 020e 	orr.w	r2, r2, lr
 8029918:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802991c:	f824 2b02 	strh.w	r2, [r4], #2
 8029920:	9a03      	ldr	r2, [sp, #12]
 8029922:	1c71      	adds	r1, r6, #1
 8029924:	f102 3eff 	add.w	lr, r2, #4294967295
 8029928:	f1be 0f01 	cmp.w	lr, #1
 802992c:	4620      	mov	r0, r4
 802992e:	f104 0404 	add.w	r4, r4, #4
 8029932:	dd36      	ble.n	80299a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8029934:	7808      	ldrb	r0, [r1, #0]
 8029936:	0900      	lsrs	r0, r0, #4
 8029938:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802993c:	eb05 0a00 	add.w	sl, r5, r0
 8029940:	f1ae 0e02 	sub.w	lr, lr, #2
 8029944:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8029948:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802994c:	00d2      	lsls	r2, r2, #3
 802994e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029952:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029956:	ea49 0202 	orr.w	r2, r9, r2
 802995a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802995e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029962:	f824 2c04 	strh.w	r2, [r4, #-4]
 8029966:	f811 0b01 	ldrb.w	r0, [r1], #1
 802996a:	f000 000f 	and.w	r0, r0, #15
 802996e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029972:	eb05 0a00 	add.w	sl, r5, r0
 8029976:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802997a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802997e:	00d2      	lsls	r2, r2, #3
 8029980:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029984:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029988:	ea49 0202 	orr.w	r2, r9, r2
 802998c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029990:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029994:	f824 2c02 	strh.w	r2, [r4, #-2]
 8029998:	e7c6      	b.n	8029928 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802999a:	4631      	mov	r1, r6
 802999c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80299a0:	e7c2      	b.n	8029928 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80299a2:	d111      	bne.n	80299c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80299a4:	7809      	ldrb	r1, [r1, #0]
 80299a6:	0909      	lsrs	r1, r1, #4
 80299a8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80299ac:	186c      	adds	r4, r5, r1
 80299ae:	5c69      	ldrb	r1, [r5, r1]
 80299b0:	78a2      	ldrb	r2, [r4, #2]
 80299b2:	7864      	ldrb	r4, [r4, #1]
 80299b4:	00e4      	lsls	r4, r4, #3
 80299b6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80299ba:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80299be:	4322      	orrs	r2, r4
 80299c0:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80299c4:	f820 2b02 	strh.w	r2, [r0], #2
 80299c8:	9a03      	ldr	r2, [sp, #12]
 80299ca:	f8bc 4000 	ldrh.w	r4, [ip]
 80299ce:	9905      	ldr	r1, [sp, #20]
 80299d0:	1aa4      	subs	r4, r4, r2
 80299d2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80299d6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80299da:	440a      	add	r2, r1
 80299dc:	fb92 f2f8 	sdiv	r2, r2, r8
 80299e0:	4416      	add	r6, r2
 80299e2:	e780      	b.n	80298e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80299e4:	4b03      	ldr	r3, [pc, #12]	; (80299f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80299e6:	6818      	ldr	r0, [r3, #0]
 80299e8:	6803      	ldr	r3, [r0, #0]
 80299ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80299ec:	4798      	blx	r3
 80299ee:	b00f      	add	sp, #60	; 0x3c
 80299f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80299f4:	20013854 	.word	0x20013854
 80299f8:	2001384e 	.word	0x2001384e
 80299fc:	fffff800 	.word	0xfffff800

08029a00 <CRC_Lock>:
 8029a00:	b530      	push	{r4, r5, lr}
 8029a02:	4a20      	ldr	r2, [pc, #128]	; (8029a84 <CRC_Lock+0x84>)
 8029a04:	6813      	ldr	r3, [r2, #0]
 8029a06:	f023 0301 	bic.w	r3, r3, #1
 8029a0a:	6013      	str	r3, [r2, #0]
 8029a0c:	4b1e      	ldr	r3, [pc, #120]	; (8029a88 <CRC_Lock+0x88>)
 8029a0e:	681a      	ldr	r2, [r3, #0]
 8029a10:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8029a14:	4022      	ands	r2, r4
 8029a16:	f24c 2540 	movw	r5, #49728	; 0xc240
 8029a1a:	42aa      	cmp	r2, r5
 8029a1c:	d005      	beq.n	8029a2a <CRC_Lock+0x2a>
 8029a1e:	681b      	ldr	r3, [r3, #0]
 8029a20:	f24c 2270 	movw	r2, #49776	; 0xc270
 8029a24:	4023      	ands	r3, r4
 8029a26:	4293      	cmp	r3, r2
 8029a28:	d124      	bne.n	8029a74 <CRC_Lock+0x74>
 8029a2a:	4b18      	ldr	r3, [pc, #96]	; (8029a8c <CRC_Lock+0x8c>)
 8029a2c:	681b      	ldr	r3, [r3, #0]
 8029a2e:	bb0b      	cbnz	r3, 8029a74 <CRC_Lock+0x74>
 8029a30:	4b17      	ldr	r3, [pc, #92]	; (8029a90 <CRC_Lock+0x90>)
 8029a32:	681a      	ldr	r2, [r3, #0]
 8029a34:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029a38:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8029a3c:	d00d      	beq.n	8029a5a <CRC_Lock+0x5a>
 8029a3e:	681a      	ldr	r2, [r3, #0]
 8029a40:	f240 4483 	movw	r4, #1155	; 0x483
 8029a44:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029a48:	42a2      	cmp	r2, r4
 8029a4a:	d006      	beq.n	8029a5a <CRC_Lock+0x5a>
 8029a4c:	681b      	ldr	r3, [r3, #0]
 8029a4e:	f240 4285 	movw	r2, #1157	; 0x485
 8029a52:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8029a56:	4293      	cmp	r3, r2
 8029a58:	d10c      	bne.n	8029a74 <CRC_Lock+0x74>
 8029a5a:	4b0e      	ldr	r3, [pc, #56]	; (8029a94 <CRC_Lock+0x94>)
 8029a5c:	2201      	movs	r2, #1
 8029a5e:	601a      	str	r2, [r3, #0]
 8029a60:	681a      	ldr	r2, [r3, #0]
 8029a62:	2a00      	cmp	r2, #0
 8029a64:	d1fc      	bne.n	8029a60 <CRC_Lock+0x60>
 8029a66:	4b0c      	ldr	r3, [pc, #48]	; (8029a98 <CRC_Lock+0x98>)
 8029a68:	6018      	str	r0, [r3, #0]
 8029a6a:	6818      	ldr	r0, [r3, #0]
 8029a6c:	1a43      	subs	r3, r0, r1
 8029a6e:	4258      	negs	r0, r3
 8029a70:	4158      	adcs	r0, r3
 8029a72:	bd30      	pop	{r4, r5, pc}
 8029a74:	4b09      	ldr	r3, [pc, #36]	; (8029a9c <CRC_Lock+0x9c>)
 8029a76:	2201      	movs	r2, #1
 8029a78:	601a      	str	r2, [r3, #0]
 8029a7a:	681a      	ldr	r2, [r3, #0]
 8029a7c:	2a00      	cmp	r2, #0
 8029a7e:	d1fc      	bne.n	8029a7a <CRC_Lock+0x7a>
 8029a80:	4b07      	ldr	r3, [pc, #28]	; (8029aa0 <CRC_Lock+0xa0>)
 8029a82:	e7f1      	b.n	8029a68 <CRC_Lock+0x68>
 8029a84:	e0002000 	.word	0xe0002000
 8029a88:	e000ed00 	.word	0xe000ed00
 8029a8c:	e0042000 	.word	0xe0042000
 8029a90:	5c001000 	.word	0x5c001000
 8029a94:	58024c08 	.word	0x58024c08
 8029a98:	58024c00 	.word	0x58024c00
 8029a9c:	40023008 	.word	0x40023008
 8029aa0:	40023000 	.word	0x40023000

08029aa4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8029aa4:	6101      	str	r1, [r0, #16]
 8029aa6:	4770      	bx	lr

08029aa8 <_ZN8touchgfx8Gestures4tickEv>:
 8029aa8:	7b83      	ldrb	r3, [r0, #14]
 8029aaa:	b14b      	cbz	r3, 8029ac0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8029aac:	8903      	ldrh	r3, [r0, #8]
 8029aae:	3301      	adds	r3, #1
 8029ab0:	b29b      	uxth	r3, r3
 8029ab2:	2b07      	cmp	r3, #7
 8029ab4:	8103      	strh	r3, [r0, #8]
 8029ab6:	bf81      	itttt	hi
 8029ab8:	2300      	movhi	r3, #0
 8029aba:	8143      	strhhi	r3, [r0, #10]
 8029abc:	8183      	strhhi	r3, [r0, #12]
 8029abe:	7383      	strbhi	r3, [r0, #14]
 8029ac0:	4770      	bx	lr
	...

08029ac4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8029ac4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8029ac8:	4698      	mov	r8, r3
 8029aca:	8883      	ldrh	r3, [r0, #4]
 8029acc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029ad0:	eba8 0303 	sub.w	r3, r8, r3
 8029ad4:	b21b      	sxth	r3, r3
 8029ad6:	4604      	mov	r4, r0
 8029ad8:	2b00      	cmp	r3, #0
 8029ada:	4617      	mov	r7, r2
 8029adc:	4a18      	ldr	r2, [pc, #96]	; (8029b40 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8029ade:	9200      	str	r2, [sp, #0]
 8029ae0:	bfb8      	it	lt
 8029ae2:	425b      	neglt	r3, r3
 8029ae4:	8aa2      	ldrh	r2, [r4, #20]
 8029ae6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8029aea:	f8ad 800a 	strh.w	r8, [sp, #10]
 8029aee:	b21b      	sxth	r3, r3
 8029af0:	460e      	mov	r6, r1
 8029af2:	4293      	cmp	r3, r2
 8029af4:	88c1      	ldrh	r1, [r0, #6]
 8029af6:	f8ad 1008 	strh.w	r1, [sp, #8]
 8029afa:	f04f 0000 	mov.w	r0, #0
 8029afe:	f88d 0004 	strb.w	r0, [sp, #4]
 8029b02:	f8ad 500c 	strh.w	r5, [sp, #12]
 8029b06:	dc07      	bgt.n	8029b18 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8029b08:	1a69      	subs	r1, r5, r1
 8029b0a:	b209      	sxth	r1, r1
 8029b0c:	2900      	cmp	r1, #0
 8029b0e:	bfb8      	it	lt
 8029b10:	4249      	neglt	r1, r1
 8029b12:	b209      	sxth	r1, r1
 8029b14:	428a      	cmp	r2, r1
 8029b16:	da10      	bge.n	8029b3a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8029b18:	6920      	ldr	r0, [r4, #16]
 8029b1a:	6803      	ldr	r3, [r0, #0]
 8029b1c:	4669      	mov	r1, sp
 8029b1e:	685b      	ldr	r3, [r3, #4]
 8029b20:	4798      	blx	r3
 8029b22:	eba8 0606 	sub.w	r6, r8, r6
 8029b26:	2300      	movs	r3, #0
 8029b28:	1bef      	subs	r7, r5, r7
 8029b2a:	2001      	movs	r0, #1
 8029b2c:	8123      	strh	r3, [r4, #8]
 8029b2e:	8166      	strh	r6, [r4, #10]
 8029b30:	81a7      	strh	r7, [r4, #12]
 8029b32:	f8a4 8004 	strh.w	r8, [r4, #4]
 8029b36:	80e5      	strh	r5, [r4, #6]
 8029b38:	73a0      	strb	r0, [r4, #14]
 8029b3a:	b004      	add	sp, #16
 8029b3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029b40:	080320e4 	.word	0x080320e4

08029b44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8029b44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029b46:	461e      	mov	r6, r3
 8029b48:	1e4b      	subs	r3, r1, #1
 8029b4a:	2b01      	cmp	r3, #1
 8029b4c:	b085      	sub	sp, #20
 8029b4e:	4604      	mov	r4, r0
 8029b50:	460d      	mov	r5, r1
 8029b52:	4617      	mov	r7, r2
 8029b54:	d84b      	bhi.n	8029bee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8029b56:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8029b5a:	1cd3      	adds	r3, r2, #3
 8029b5c:	b29b      	uxth	r3, r3
 8029b5e:	2b06      	cmp	r3, #6
 8029b60:	d916      	bls.n	8029b90 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8029b62:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8029c04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029b66:	f8cd c004 	str.w	ip, [sp, #4]
 8029b6a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029b6e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029b72:	6900      	ldr	r0, [r0, #16]
 8029b74:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029b78:	f04f 0c00 	mov.w	ip, #0
 8029b7c:	f88d c008 	strb.w	ip, [sp, #8]
 8029b80:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029b84:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029b88:	6803      	ldr	r3, [r0, #0]
 8029b8a:	a901      	add	r1, sp, #4
 8029b8c:	689b      	ldr	r3, [r3, #8]
 8029b8e:	4798      	blx	r3
 8029b90:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029b94:	1cd3      	adds	r3, r2, #3
 8029b96:	b29b      	uxth	r3, r3
 8029b98:	2b06      	cmp	r3, #6
 8029b9a:	d916      	bls.n	8029bca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029b9c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8029c04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029ba0:	f8cd c004 	str.w	ip, [sp, #4]
 8029ba4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029ba8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029bac:	6920      	ldr	r0, [r4, #16]
 8029bae:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029bb2:	f04f 0c01 	mov.w	ip, #1
 8029bb6:	f88d c008 	strb.w	ip, [sp, #8]
 8029bba:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029bbe:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029bc2:	6803      	ldr	r3, [r0, #0]
 8029bc4:	a901      	add	r1, sp, #4
 8029bc6:	689b      	ldr	r3, [r3, #8]
 8029bc8:	4798      	blx	r3
 8029bca:	4b0d      	ldr	r3, [pc, #52]	; (8029c00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8029bcc:	9301      	str	r3, [sp, #4]
 8029bce:	6920      	ldr	r0, [r4, #16]
 8029bd0:	f88d 5008 	strb.w	r5, [sp, #8]
 8029bd4:	2300      	movs	r3, #0
 8029bd6:	f8ad 700a 	strh.w	r7, [sp, #10]
 8029bda:	f8ad 600c 	strh.w	r6, [sp, #12]
 8029bde:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029be2:	6803      	ldr	r3, [r0, #0]
 8029be4:	a901      	add	r1, sp, #4
 8029be6:	681b      	ldr	r3, [r3, #0]
 8029be8:	4798      	blx	r3
 8029bea:	b005      	add	sp, #20
 8029bec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029bee:	2900      	cmp	r1, #0
 8029bf0:	d1eb      	bne.n	8029bca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029bf2:	80a2      	strh	r2, [r4, #4]
 8029bf4:	80c6      	strh	r6, [r0, #6]
 8029bf6:	60a1      	str	r1, [r4, #8]
 8029bf8:	81a1      	strh	r1, [r4, #12]
 8029bfa:	73a1      	strb	r1, [r4, #14]
 8029bfc:	e7e5      	b.n	8029bca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029bfe:	bf00      	nop
 8029c00:	080320d0 	.word	0x080320d0
 8029c04:	080320f8 	.word	0x080320f8

08029c08 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8029c08:	10c9      	asrs	r1, r1, #3
 8029c0a:	2900      	cmp	r1, #0
 8029c0c:	bfb8      	it	lt
 8029c0e:	4249      	neglt	r1, r1
 8029c10:	2801      	cmp	r0, #1
 8029c12:	d108      	bne.n	8029c26 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029c14:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8029c18:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8029c1c:	4601      	mov	r1, r0
 8029c1e:	dd02      	ble.n	8029c26 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029c20:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8029c24:	4770      	bx	lr
 8029c26:	29ff      	cmp	r1, #255	; 0xff
 8029c28:	bfa8      	it	ge
 8029c2a:	21ff      	movge	r1, #255	; 0xff
 8029c2c:	4608      	mov	r0, r1
 8029c2e:	4770      	bx	lr

08029c30 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8029c30:	b410      	push	{r4}
 8029c32:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8029c36:	429c      	cmp	r4, r3
 8029c38:	d803      	bhi.n	8029c42 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8029c3a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029c3e:	f7ed b8b1 	b.w	8016da4 <_ZN8touchgfx7Outline6lineToEii>
 8029c42:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029c46:	4770      	bx	lr

08029c48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8029c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029c4c:	b08b      	sub	sp, #44	; 0x2c
 8029c4e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029c52:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8029c56:	9308      	str	r3, [sp, #32]
 8029c58:	4606      	mov	r6, r0
 8029c5a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8029c5e:	9309      	str	r3, [sp, #36]	; 0x24
 8029c60:	468a      	mov	sl, r1
 8029c62:	f7ed fa0c 	bl	801707e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8029c66:	68b5      	ldr	r5, [r6, #8]
 8029c68:	4604      	mov	r4, r0
 8029c6a:	2d00      	cmp	r5, #0
 8029c6c:	d044      	beq.n	8029cf8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029c6e:	6873      	ldr	r3, [r6, #4]
 8029c70:	42ab      	cmp	r3, r5
 8029c72:	d33d      	bcc.n	8029cf0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8029c74:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8029c78:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8029c7c:	eb02 0b03 	add.w	fp, r2, r3
 8029c80:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8029c84:	fb02 1203 	mla	r2, r2, r3, r1
 8029c88:	9205      	str	r2, [sp, #20]
 8029c8a:	1e6a      	subs	r2, r5, #1
 8029c8c:	9204      	str	r2, [sp, #16]
 8029c8e:	f04f 0800 	mov.w	r8, #0
 8029c92:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8029c96:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029c9a:	454b      	cmp	r3, r9
 8029c9c:	463a      	mov	r2, r7
 8029c9e:	d008      	beq.n	8029cb2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8029ca0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8029ca4:	eb03 0b09 	add.w	fp, r3, r9
 8029ca8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8029cac:	fb03 1309 	mla	r3, r3, r9, r1
 8029cb0:	9305      	str	r3, [sp, #20]
 8029cb2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8029cb6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8029cba:	4498      	add	r8, r3
 8029cbc:	9b04      	ldr	r3, [sp, #16]
 8029cbe:	3b01      	subs	r3, #1
 8029cc0:	9304      	str	r3, [sp, #16]
 8029cc2:	9b04      	ldr	r3, [sp, #16]
 8029cc4:	3301      	adds	r3, #1
 8029cc6:	d015      	beq.n	8029cf4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8029cc8:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8029ccc:	42bb      	cmp	r3, r7
 8029cce:	d117      	bne.n	8029d00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8029cd0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8029cd4:	9b04      	ldr	r3, [sp, #16]
 8029cd6:	4548      	cmp	r0, r9
 8029cd8:	f103 33ff 	add.w	r3, r3, #4294967295
 8029cdc:	d17f      	bne.n	8029dde <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8029cde:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8029ce2:	4401      	add	r1, r0
 8029ce4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8029ce8:	4480      	add	r8, r0
 8029cea:	e7e9      	b.n	8029cc0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8029cec:	461f      	mov	r7, r3
 8029cee:	e044      	b.n	8029d7a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8029cf0:	2000      	movs	r0, #0
 8029cf2:	e002      	b.n	8029cfa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8029cf4:	2900      	cmp	r1, #0
 8029cf6:	d16f      	bne.n	8029dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8029cf8:	2001      	movs	r0, #1
 8029cfa:	b00b      	add	sp, #44	; 0x2c
 8029cfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029d00:	2900      	cmp	r1, #0
 8029d02:	d030      	beq.n	8029d66 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8029d04:	2f00      	cmp	r7, #0
 8029d06:	db29      	blt.n	8029d5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029d08:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029d0c:	42bb      	cmp	r3, r7
 8029d0e:	dd25      	ble.n	8029d5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029d10:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8029d14:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029d18:	f7ff ff76 	bl	8029c08 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029d1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029d1e:	fb10 f003 	smulbb	r0, r0, r3
 8029d22:	b280      	uxth	r0, r0
 8029d24:	1c41      	adds	r1, r0, #1
 8029d26:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029d2a:	1209      	asrs	r1, r1, #8
 8029d2c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029d30:	d014      	beq.n	8029d5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029d32:	9808      	ldr	r0, [sp, #32]
 8029d34:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029d36:	b2c9      	uxtb	r1, r1
 8029d38:	b2ba      	uxth	r2, r7
 8029d3a:	9102      	str	r1, [sp, #8]
 8029d3c:	2101      	movs	r1, #1
 8029d3e:	4413      	add	r3, r2
 8029d40:	9101      	str	r1, [sp, #4]
 8029d42:	4402      	add	r2, r0
 8029d44:	fa0f f18b 	sxth.w	r1, fp
 8029d48:	f8da 0000 	ldr.w	r0, [sl]
 8029d4c:	9100      	str	r1, [sp, #0]
 8029d4e:	6941      	ldr	r1, [r0, #20]
 8029d50:	b21b      	sxth	r3, r3
 8029d52:	460d      	mov	r5, r1
 8029d54:	b212      	sxth	r2, r2
 8029d56:	9905      	ldr	r1, [sp, #20]
 8029d58:	4650      	mov	r0, sl
 8029d5a:	47a8      	blx	r5
 8029d5c:	9b04      	ldr	r3, [sp, #16]
 8029d5e:	3301      	adds	r3, #1
 8029d60:	f107 0201 	add.w	r2, r7, #1
 8029d64:	d0c8      	beq.n	8029cf8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029d66:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029d6a:	1abb      	subs	r3, r7, r2
 8029d6c:	2b00      	cmp	r3, #0
 8029d6e:	dd31      	ble.n	8029dd4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029d70:	2a00      	cmp	r2, #0
 8029d72:	dabb      	bge.n	8029cec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8029d74:	2f00      	cmp	r7, #0
 8029d76:	dd2d      	ble.n	8029dd4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029d78:	2200      	movs	r2, #0
 8029d7a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029d7e:	19d1      	adds	r1, r2, r7
 8029d80:	4299      	cmp	r1, r3
 8029d82:	db02      	blt.n	8029d8a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8029d84:	1a9f      	subs	r7, r3, r2
 8029d86:	2f00      	cmp	r7, #0
 8029d88:	dd24      	ble.n	8029dd4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029d8a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8029d8e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029d92:	f7ff ff39 	bl	8029c08 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029d96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029d98:	fb10 f003 	smulbb	r0, r0, r3
 8029d9c:	b280      	uxth	r0, r0
 8029d9e:	1c41      	adds	r1, r0, #1
 8029da0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029da4:	1209      	asrs	r1, r1, #8
 8029da6:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029daa:	d013      	beq.n	8029dd4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029dac:	9808      	ldr	r0, [sp, #32]
 8029dae:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029db0:	b292      	uxth	r2, r2
 8029db2:	b2c9      	uxtb	r1, r1
 8029db4:	4413      	add	r3, r2
 8029db6:	9102      	str	r1, [sp, #8]
 8029db8:	4402      	add	r2, r0
 8029dba:	b23f      	sxth	r7, r7
 8029dbc:	f8da 0000 	ldr.w	r0, [sl]
 8029dc0:	9701      	str	r7, [sp, #4]
 8029dc2:	fa0f f18b 	sxth.w	r1, fp
 8029dc6:	9100      	str	r1, [sp, #0]
 8029dc8:	6947      	ldr	r7, [r0, #20]
 8029dca:	9905      	ldr	r1, [sp, #20]
 8029dcc:	b21b      	sxth	r3, r3
 8029dce:	b212      	sxth	r2, r2
 8029dd0:	4650      	mov	r0, sl
 8029dd2:	47b8      	blx	r7
 8029dd4:	464b      	mov	r3, r9
 8029dd6:	e75c      	b.n	8029c92 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8029dd8:	2f00      	cmp	r7, #0
 8029dda:	da95      	bge.n	8029d08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8029ddc:	e78c      	b.n	8029cf8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029dde:	2900      	cmp	r1, #0
 8029de0:	d0f8      	beq.n	8029dd4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029de2:	e78f      	b.n	8029d04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08029de4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8029de4:	4b4b      	ldr	r3, [pc, #300]	; (8029f14 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8029de6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8029dea:	2500      	movs	r5, #0
 8029dec:	f100 0620 	add.w	r6, r0, #32
 8029df0:	4604      	mov	r4, r0
 8029df2:	e9c0 3100 	strd	r3, r1, [r0]
 8029df6:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8029dfa:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8029dfe:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8029e02:	f100 0718 	add.w	r7, r0, #24
 8029e06:	4630      	mov	r0, r6
 8029e08:	4690      	mov	r8, r2
 8029e0a:	f7ec fb03 	bl	8016414 <_ZN8touchgfx7OutlineC1Ev>
 8029e0e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8029e12:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8029e16:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8029e1a:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8029e1e:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8029e22:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8029e26:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8029e2a:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8029e2e:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8029e32:	f9b8 2000 	ldrsh.w	r2, [r8]
 8029e36:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8029e3a:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8029e3e:	9500      	str	r5, [sp, #0]
 8029e40:	4410      	add	r0, r2
 8029e42:	b280      	uxth	r0, r0
 8029e44:	fa0f fa80 	sxth.w	sl, r0
 8029e48:	45aa      	cmp	sl, r5
 8029e4a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8029e4e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8029e52:	dd5c      	ble.n	8029f0e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029e54:	4591      	cmp	r9, r2
 8029e56:	dd5a      	ble.n	8029f0e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029e58:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8029e5c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8029e60:	440b      	add	r3, r1
 8029e62:	b29b      	uxth	r3, r3
 8029e64:	b21d      	sxth	r5, r3
 8029e66:	2d00      	cmp	r5, #0
 8029e68:	dd51      	ble.n	8029f0e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029e6a:	458e      	cmp	lr, r1
 8029e6c:	dd4f      	ble.n	8029f0e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029e6e:	45d1      	cmp	r9, sl
 8029e70:	bfb8      	it	lt
 8029e72:	fa1f f089 	uxthlt.w	r0, r9
 8029e76:	45ae      	cmp	lr, r5
 8029e78:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8029e7c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8029e80:	bfb8      	it	lt
 8029e82:	fa1f f38e 	uxthlt.w	r3, lr
 8029e86:	1a80      	subs	r0, r0, r2
 8029e88:	1a5b      	subs	r3, r3, r1
 8029e8a:	f8ad 0004 	strh.w	r0, [sp, #4]
 8029e8e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029e92:	f8ad 2000 	strh.w	r2, [sp]
 8029e96:	f8ad 1002 	strh.w	r1, [sp, #2]
 8029e9a:	466d      	mov	r5, sp
 8029e9c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8029ea0:	e887 0003 	stmia.w	r7, {r0, r1}
 8029ea4:	f8dc 3000 	ldr.w	r3, [ip]
 8029ea8:	4660      	mov	r0, ip
 8029eaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029eac:	4639      	mov	r1, r7
 8029eae:	4798      	blx	r3
 8029eb0:	6861      	ldr	r1, [r4, #4]
 8029eb2:	4628      	mov	r0, r5
 8029eb4:	3104      	adds	r1, #4
 8029eb6:	f7ee fcb3 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029eba:	4638      	mov	r0, r7
 8029ebc:	f7ee fc6c 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029ec0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029ec4:	f8bd 2000 	ldrh.w	r2, [sp]
 8029ec8:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8029ecc:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8029ed0:	4630      	mov	r0, r6
 8029ed2:	f7ec fa83 	bl	80163dc <_ZN8touchgfx7Outline5resetEv>
 8029ed6:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029eda:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8029ede:	015b      	lsls	r3, r3, #5
 8029ee0:	60a3      	str	r3, [r4, #8]
 8029ee2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029ee6:	015b      	lsls	r3, r3, #5
 8029ee8:	60e3      	str	r3, [r4, #12]
 8029eea:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8029eee:	015b      	lsls	r3, r3, #5
 8029ef0:	6123      	str	r3, [r4, #16]
 8029ef2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8029ef6:	015b      	lsls	r3, r3, #5
 8029ef8:	6163      	str	r3, [r4, #20]
 8029efa:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8029efe:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8029f02:	4620      	mov	r0, r4
 8029f04:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8029f08:	b002      	add	sp, #8
 8029f0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029f0e:	2300      	movs	r3, #0
 8029f10:	9301      	str	r3, [sp, #4]
 8029f12:	e7c2      	b.n	8029e9a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8029f14:	0803241c 	.word	0x0803241c

08029f18 <_ZN8touchgfx6Canvas5closeEv>:
 8029f18:	b538      	push	{r3, r4, r5, lr}
 8029f1a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029f1e:	4604      	mov	r4, r0
 8029f20:	b193      	cbz	r3, 8029f48 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029f22:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8029f26:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8029f2a:	4213      	tst	r3, r2
 8029f2c:	d10c      	bne.n	8029f48 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029f2e:	f100 0520 	add.w	r5, r0, #32
 8029f32:	b123      	cbz	r3, 8029f3e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8029f34:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8029f38:	4628      	mov	r0, r5
 8029f3a:	f7ff fe79 	bl	8029c30 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029f3e:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8029f42:	4628      	mov	r0, r5
 8029f44:	f7ff fe74 	bl	8029c30 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029f48:	2300      	movs	r3, #0
 8029f4a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029f4e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8029f52:	4298      	cmp	r0, r3
 8029f54:	bf34      	ite	cc
 8029f56:	2000      	movcc	r0, #0
 8029f58:	2001      	movcs	r0, #1
 8029f5a:	bd38      	pop	{r3, r4, r5, pc}

08029f5c <_ZN8touchgfx6Canvas6renderEh>:
 8029f5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029f60:	4604      	mov	r4, r0
 8029f62:	6840      	ldr	r0, [r0, #4]
 8029f64:	6803      	ldr	r3, [r0, #0]
 8029f66:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8029f68:	460d      	mov	r5, r1
 8029f6a:	4798      	blx	r3
 8029f6c:	fb10 f105 	smulbb	r1, r0, r5
 8029f70:	b289      	uxth	r1, r1
 8029f72:	1c4d      	adds	r5, r1, #1
 8029f74:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8029f78:	122d      	asrs	r5, r5, #8
 8029f7a:	f000 809d 	beq.w	802a0b8 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029f7e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8029f82:	2b00      	cmp	r3, #0
 8029f84:	f000 8098 	beq.w	802a0b8 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029f88:	4620      	mov	r0, r4
 8029f8a:	f7ff ffc5 	bl	8029f18 <_ZN8touchgfx6Canvas5closeEv>
 8029f8e:	4607      	mov	r7, r0
 8029f90:	2800      	cmp	r0, #0
 8029f92:	d048      	beq.n	802a026 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029f94:	6863      	ldr	r3, [r4, #4]
 8029f96:	4e49      	ldr	r6, [pc, #292]	; (802a0bc <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8029f98:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029f9a:	6837      	ldr	r7, [r6, #0]
 8029f9c:	6803      	ldr	r3, [r0, #0]
 8029f9e:	689b      	ldr	r3, [r3, #8]
 8029fa0:	4798      	blx	r3
 8029fa2:	4601      	mov	r1, r0
 8029fa4:	4638      	mov	r0, r7
 8029fa6:	f7ea f9bb 	bl	8014320 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8029faa:	4607      	mov	r7, r0
 8029fac:	f7db fb40 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8029fb0:	6803      	ldr	r3, [r0, #0]
 8029fb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8029fb4:	4798      	blx	r3
 8029fb6:	4680      	mov	r8, r0
 8029fb8:	f7db fb3a 	bl	8005630 <_ZN8touchgfx3HAL3lcdEv>
 8029fbc:	6803      	ldr	r3, [r0, #0]
 8029fbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029fc0:	4798      	blx	r3
 8029fc2:	280b      	cmp	r0, #11
 8029fc4:	d85d      	bhi.n	802a082 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8029fc6:	e8df f000 	tbb	[pc, r0]
 8029fca:	5e53      	.short	0x5e53
 8029fcc:	325c066e 	.word	0x325c066e
 8029fd0:	67676742 	.word	0x67676742
 8029fd4:	6767      	.short	0x6767
 8029fd6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029fda:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029fde:	2208      	movs	r2, #8
 8029fe0:	fb91 f2f2 	sdiv	r2, r1, r2
 8029fe4:	fb08 2303 	mla	r3, r8, r3, r2
 8029fe8:	441f      	add	r7, r3
 8029fea:	424b      	negs	r3, r1
 8029fec:	f003 0307 	and.w	r3, r3, #7
 8029ff0:	f001 0107 	and.w	r1, r1, #7
 8029ff4:	bf58      	it	pl
 8029ff6:	4259      	negpl	r1, r3
 8029ff8:	b2c9      	uxtb	r1, r1
 8029ffa:	b2ed      	uxtb	r5, r5
 8029ffc:	e9cd 1500 	strd	r1, r5, [sp]
 802a000:	6860      	ldr	r0, [r4, #4]
 802a002:	463a      	mov	r2, r7
 802a004:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802a006:	fa0f f388 	sxth.w	r3, r8
 802a00a:	f104 0020 	add.w	r0, r4, #32
 802a00e:	f7ff fe1b 	bl	8029c48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802a012:	6863      	ldr	r3, [r4, #4]
 802a014:	4607      	mov	r7, r0
 802a016:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802a018:	6803      	ldr	r3, [r0, #0]
 802a01a:	691b      	ldr	r3, [r3, #16]
 802a01c:	4798      	blx	r3
 802a01e:	6830      	ldr	r0, [r6, #0]
 802a020:	6803      	ldr	r3, [r0, #0]
 802a022:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802a024:	4798      	blx	r3
 802a026:	4638      	mov	r0, r7
 802a028:	b002      	add	sp, #8
 802a02a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a02e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a032:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802a036:	2204      	movs	r2, #4
 802a038:	fb91 f2f2 	sdiv	r2, r1, r2
 802a03c:	fb08 2303 	mla	r3, r8, r3, r2
 802a040:	441f      	add	r7, r3
 802a042:	424b      	negs	r3, r1
 802a044:	f003 0303 	and.w	r3, r3, #3
 802a048:	f001 0103 	and.w	r1, r1, #3
 802a04c:	e7d2      	b.n	8029ff4 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802a04e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802a052:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a056:	2900      	cmp	r1, #0
 802a058:	f04f 0202 	mov.w	r2, #2
 802a05c:	fb91 f2f2 	sdiv	r2, r1, r2
 802a060:	f001 0101 	and.w	r1, r1, #1
 802a064:	fb08 2303 	mla	r3, r8, r3, r2
 802a068:	441f      	add	r7, r3
 802a06a:	bfb8      	it	lt
 802a06c:	4249      	neglt	r1, r1
 802a06e:	e7c3      	b.n	8029ff8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802a070:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a074:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a078:	fb08 f303 	mul.w	r3, r8, r3
 802a07c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a080:	441f      	add	r7, r3
 802a082:	2100      	movs	r1, #0
 802a084:	e7b9      	b.n	8029ffa <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802a086:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a08a:	fb08 f203 	mul.w	r2, r8, r3
 802a08e:	8b23      	ldrh	r3, [r4, #24]
 802a090:	2103      	movs	r1, #3
 802a092:	fb13 2301 	smlabb	r3, r3, r1, r2
 802a096:	e7f3      	b.n	802a080 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a098:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a09c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a0a0:	fb08 2303 	mla	r3, r8, r3, r2
 802a0a4:	e7ec      	b.n	802a080 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a0a6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a0aa:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a0ae:	fb08 f303 	mul.w	r3, r8, r3
 802a0b2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802a0b6:	e7e3      	b.n	802a080 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a0b8:	2701      	movs	r7, #1
 802a0ba:	e7b4      	b.n	802a026 <_ZN8touchgfx6Canvas6renderEh+0xca>
 802a0bc:	20013854 	.word	0x20013854

0802a0c0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802a0c0:	b510      	push	{r4, lr}
 802a0c2:	4b07      	ldr	r3, [pc, #28]	; (802a0e0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802a0c4:	781b      	ldrb	r3, [r3, #0]
 802a0c6:	2b01      	cmp	r3, #1
 802a0c8:	d108      	bne.n	802a0dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802a0ca:	6843      	ldr	r3, [r0, #4]
 802a0cc:	6814      	ldr	r4, [r2, #0]
 802a0ce:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802a0d2:	680b      	ldr	r3, [r1, #0]
 802a0d4:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802a0d8:	6013      	str	r3, [r2, #0]
 802a0da:	600c      	str	r4, [r1, #0]
 802a0dc:	bd10      	pop	{r4, pc}
 802a0de:	bf00      	nop
 802a0e0:	2001384c 	.word	0x2001384c

0802a0e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802a0e4:	b513      	push	{r0, r1, r4, lr}
 802a0e6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802a0ea:	4604      	mov	r4, r0
 802a0ec:	e9cd 2100 	strd	r2, r1, [sp]
 802a0f0:	b9a3      	cbnz	r3, 802a11c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802a0f2:	466a      	mov	r2, sp
 802a0f4:	a901      	add	r1, sp, #4
 802a0f6:	4620      	mov	r0, r4
 802a0f8:	f7ff ffe2 	bl	802a0c0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a0fc:	68a3      	ldr	r3, [r4, #8]
 802a0fe:	9901      	ldr	r1, [sp, #4]
 802a100:	9a00      	ldr	r2, [sp, #0]
 802a102:	1ac9      	subs	r1, r1, r3
 802a104:	68e3      	ldr	r3, [r4, #12]
 802a106:	9101      	str	r1, [sp, #4]
 802a108:	1ad2      	subs	r2, r2, r3
 802a10a:	2a00      	cmp	r2, #0
 802a10c:	9200      	str	r2, [sp, #0]
 802a10e:	da0b      	bge.n	802a128 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802a110:	2301      	movs	r3, #1
 802a112:	2900      	cmp	r1, #0
 802a114:	da0e      	bge.n	802a134 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802a116:	f043 0304 	orr.w	r3, r3, #4
 802a11a:	e013      	b.n	802a144 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802a11c:	f7ff fefc 	bl	8029f18 <_ZN8touchgfx6Canvas5closeEv>
 802a120:	2800      	cmp	r0, #0
 802a122:	d1e6      	bne.n	802a0f2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802a124:	b002      	add	sp, #8
 802a126:	bd10      	pop	{r4, pc}
 802a128:	6963      	ldr	r3, [r4, #20]
 802a12a:	429a      	cmp	r2, r3
 802a12c:	bfac      	ite	ge
 802a12e:	2302      	movge	r3, #2
 802a130:	2300      	movlt	r3, #0
 802a132:	e7ee      	b.n	802a112 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802a134:	6920      	ldr	r0, [r4, #16]
 802a136:	4281      	cmp	r1, r0
 802a138:	bfac      	ite	ge
 802a13a:	2008      	movge	r0, #8
 802a13c:	2000      	movlt	r0, #0
 802a13e:	4318      	orrs	r0, r3
 802a140:	b2c3      	uxtb	r3, r0
 802a142:	b158      	cbz	r0, 802a15c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802a144:	2200      	movs	r2, #0
 802a146:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802a14a:	9901      	ldr	r1, [sp, #4]
 802a14c:	9a00      	ldr	r2, [sp, #0]
 802a14e:	66a1      	str	r1, [r4, #104]	; 0x68
 802a150:	66e2      	str	r2, [r4, #108]	; 0x6c
 802a152:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802a156:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802a15a:	e7e3      	b.n	802a124 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802a15c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a160:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a164:	4298      	cmp	r0, r3
 802a166:	d803      	bhi.n	802a170 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802a168:	f104 0020 	add.w	r0, r4, #32
 802a16c:	f7ec fe34 	bl	8016dd8 <_ZN8touchgfx7Outline6moveToEii>
 802a170:	2301      	movs	r3, #1
 802a172:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a176:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a17a:	2300      	movs	r3, #0
 802a17c:	e7e5      	b.n	802a14a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802a17e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a180:	ab02      	add	r3, sp, #8
 802a182:	4604      	mov	r4, r0
 802a184:	f843 2d08 	str.w	r2, [r3, #-8]!
 802a188:	9101      	str	r1, [sp, #4]
 802a18a:	461a      	mov	r2, r3
 802a18c:	a901      	add	r1, sp, #4
 802a18e:	f7ff ff97 	bl	802a0c0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a192:	68a3      	ldr	r3, [r4, #8]
 802a194:	9901      	ldr	r1, [sp, #4]
 802a196:	9a00      	ldr	r2, [sp, #0]
 802a198:	1ac9      	subs	r1, r1, r3
 802a19a:	68e3      	ldr	r3, [r4, #12]
 802a19c:	9101      	str	r1, [sp, #4]
 802a19e:	1ad2      	subs	r2, r2, r3
 802a1a0:	2a00      	cmp	r2, #0
 802a1a2:	9200      	str	r2, [sp, #0]
 802a1a4:	db1c      	blt.n	802a1e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802a1a6:	6963      	ldr	r3, [r4, #20]
 802a1a8:	429a      	cmp	r2, r3
 802a1aa:	bfac      	ite	ge
 802a1ac:	2002      	movge	r0, #2
 802a1ae:	2000      	movlt	r0, #0
 802a1b0:	2900      	cmp	r1, #0
 802a1b2:	db17      	blt.n	802a1e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802a1b4:	6923      	ldr	r3, [r4, #16]
 802a1b6:	4299      	cmp	r1, r3
 802a1b8:	bfac      	ite	ge
 802a1ba:	2308      	movge	r3, #8
 802a1bc:	2300      	movlt	r3, #0
 802a1be:	4303      	orrs	r3, r0
 802a1c0:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802a1c4:	b2dd      	uxtb	r5, r3
 802a1c6:	b978      	cbnz	r0, 802a1e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802a1c8:	f104 0020 	add.w	r0, r4, #32
 802a1cc:	f7ff fd30 	bl	8029c30 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a1d0:	9b01      	ldr	r3, [sp, #4]
 802a1d2:	65e3      	str	r3, [r4, #92]	; 0x5c
 802a1d4:	9b00      	ldr	r3, [sp, #0]
 802a1d6:	6623      	str	r3, [r4, #96]	; 0x60
 802a1d8:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802a1dc:	b002      	add	sp, #8
 802a1de:	bd70      	pop	{r4, r5, r6, pc}
 802a1e0:	2001      	movs	r0, #1
 802a1e2:	e7e5      	b.n	802a1b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802a1e4:	2304      	movs	r3, #4
 802a1e6:	e7ea      	b.n	802a1be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802a1e8:	b113      	cbz	r3, 802a1f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802a1ea:	ea10 0305 	ands.w	r3, r0, r5
 802a1ee:	d11c      	bne.n	802a22a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802a1f0:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802a1f4:	f104 0620 	add.w	r6, r4, #32
 802a1f8:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802a1fc:	b98b      	cbnz	r3, 802a222 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802a1fe:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a202:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a206:	4298      	cmp	r0, r3
 802a208:	d802      	bhi.n	802a210 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802a20a:	4630      	mov	r0, r6
 802a20c:	f7ec fde4 	bl	8016dd8 <_ZN8touchgfx7Outline6moveToEii>
 802a210:	2301      	movs	r3, #1
 802a212:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a216:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a21a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802a21e:	4630      	mov	r0, r6
 802a220:	e7d4      	b.n	802a1cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802a222:	4630      	mov	r0, r6
 802a224:	f7ff fd04 	bl	8029c30 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a228:	e7f7      	b.n	802a21a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802a22a:	461d      	mov	r5, r3
 802a22c:	e7d0      	b.n	802a1d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802a230 <_ZN8touchgfx6CanvasD1Ev>:
 802a230:	b510      	push	{r4, lr}
 802a232:	4b04      	ldr	r3, [pc, #16]	; (802a244 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802a234:	4604      	mov	r4, r0
 802a236:	f840 3b20 	str.w	r3, [r0], #32
 802a23a:	f7ec f8c7 	bl	80163cc <_ZN8touchgfx7OutlineD1Ev>
 802a23e:	4620      	mov	r0, r4
 802a240:	bd10      	pop	{r4, pc}
 802a242:	bf00      	nop
 802a244:	0803241c 	.word	0x0803241c

0802a248 <_ZN8touchgfx6CanvasD0Ev>:
 802a248:	b510      	push	{r4, lr}
 802a24a:	4604      	mov	r4, r0
 802a24c:	f7ff fff0 	bl	802a230 <_ZN8touchgfx6CanvasD1Ev>
 802a250:	4620      	mov	r0, r4
 802a252:	2170      	movs	r1, #112	; 0x70
 802a254:	f002 fdb1 	bl	802cdba <_ZdlPvj>
 802a258:	4620      	mov	r0, r4
 802a25a:	bd10      	pop	{r4, pc}

0802a25c <_ZN8touchgfx6CircleD1Ev>:
 802a25c:	4770      	bx	lr

0802a25e <_ZN8touchgfx6CircleD0Ev>:
 802a25e:	b510      	push	{r4, lr}
 802a260:	2148      	movs	r1, #72	; 0x48
 802a262:	4604      	mov	r4, r0
 802a264:	f002 fda9 	bl	802cdba <_ZdlPvj>
 802a268:	4620      	mov	r0, r4
 802a26a:	bd10      	pop	{r4, pc}

0802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802a26c:	b508      	push	{r3, lr}
 802a26e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802a272:	f7ea fbab 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a276:	bd08      	pop	{r3, pc}

0802a278 <_ZN8touchgfx6CircleC1Ev>:
 802a278:	b510      	push	{r4, lr}
 802a27a:	4604      	mov	r4, r0
 802a27c:	f7ea fa42 	bl	8014704 <_ZN8touchgfx12CanvasWidgetC1Ev>
 802a280:	4b08      	ldr	r3, [pc, #32]	; (802a2a4 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802a282:	6023      	str	r3, [r4, #0]
 802a284:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802a288:	2300      	movs	r3, #0
 802a28a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802a28e:	f24b 4205 	movw	r2, #46085	; 0xb405
 802a292:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802a296:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802a29a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802a29e:	60a3      	str	r3, [r4, #8]
 802a2a0:	4620      	mov	r0, r4
 802a2a2:	bd10      	pop	{r4, pc}
 802a2a4:	08032430 	.word	0x08032430

0802a2a8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802a2a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a2ac:	428a      	cmp	r2, r1
 802a2ae:	4680      	mov	r8, r0
 802a2b0:	4610      	mov	r0, r2
 802a2b2:	4699      	mov	r9, r3
 802a2b4:	bfa6      	itte	ge
 802a2b6:	460a      	movge	r2, r1
 802a2b8:	4603      	movge	r3, r0
 802a2ba:	460b      	movlt	r3, r1
 802a2bc:	1a99      	subs	r1, r3, r2
 802a2be:	b085      	sub	sp, #20
 802a2c0:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 802a2c4:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802a2c8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802a2ca:	bfa4      	itt	ge
 802a2cc:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 802a2d0:	2200      	movge	r2, #0
 802a2d2:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802a2d6:	9300      	str	r3, [sp, #0]
 802a2d8:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802a2dc:	f102 0b01 	add.w	fp, r2, #1
 802a2e0:	2c00      	cmp	r4, #0
 802a2e2:	f040 80af 	bne.w	802a444 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802a2e6:	4610      	mov	r0, r2
 802a2e8:	9201      	str	r2, [sp, #4]
 802a2ea:	f7ea fb6f 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a2ee:	a903      	add	r1, sp, #12
 802a2f0:	9003      	str	r0, [sp, #12]
 802a2f2:	4650      	mov	r0, sl
 802a2f4:	f7ea fa32 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a2f8:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a2fc:	9a01      	ldr	r2, [sp, #4]
 802a2fe:	4408      	add	r0, r1
 802a300:	f8d9 1000 	ldr.w	r1, [r9]
 802a304:	4281      	cmp	r1, r0
 802a306:	bfc8      	it	gt
 802a308:	f8c9 0000 	strgt.w	r0, [r9]
 802a30c:	6839      	ldr	r1, [r7, #0]
 802a30e:	4288      	cmp	r0, r1
 802a310:	bfc8      	it	gt
 802a312:	6038      	strgt	r0, [r7, #0]
 802a314:	4610      	mov	r0, r2
 802a316:	f7ff ffa9 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a31a:	a903      	add	r1, sp, #12
 802a31c:	9003      	str	r0, [sp, #12]
 802a31e:	4650      	mov	r0, sl
 802a320:	f7ea fa1c 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a324:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a328:	1a10      	subs	r0, r2, r0
 802a32a:	6832      	ldr	r2, [r6, #0]
 802a32c:	4282      	cmp	r2, r0
 802a32e:	bfc8      	it	gt
 802a330:	6030      	strgt	r0, [r6, #0]
 802a332:	682a      	ldr	r2, [r5, #0]
 802a334:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a338:	4290      	cmp	r0, r2
 802a33a:	fb9b f2f1 	sdiv	r2, fp, r1
 802a33e:	fb01 b212 	mls	r2, r1, r2, fp
 802a342:	eba1 0202 	sub.w	r2, r1, r2
 802a346:	bfc8      	it	gt
 802a348:	6028      	strgt	r0, [r5, #0]
 802a34a:	fb92 f0f1 	sdiv	r0, r2, r1
 802a34e:	fb01 2210 	mls	r2, r1, r0, r2
 802a352:	4493      	add	fp, r2
 802a354:	9b00      	ldr	r3, [sp, #0]
 802a356:	455b      	cmp	r3, fp
 802a358:	db2a      	blt.n	802a3b0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802a35a:	4658      	mov	r0, fp
 802a35c:	f7ea fb36 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a360:	a903      	add	r1, sp, #12
 802a362:	9003      	str	r0, [sp, #12]
 802a364:	4650      	mov	r0, sl
 802a366:	f7ea f9f9 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a36a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a36e:	4410      	add	r0, r2
 802a370:	f8d9 2000 	ldr.w	r2, [r9]
 802a374:	4282      	cmp	r2, r0
 802a376:	bfc8      	it	gt
 802a378:	f8c9 0000 	strgt.w	r0, [r9]
 802a37c:	683a      	ldr	r2, [r7, #0]
 802a37e:	4290      	cmp	r0, r2
 802a380:	bfc8      	it	gt
 802a382:	6038      	strgt	r0, [r7, #0]
 802a384:	4658      	mov	r0, fp
 802a386:	f7ff ff71 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a38a:	a903      	add	r1, sp, #12
 802a38c:	9003      	str	r0, [sp, #12]
 802a38e:	4650      	mov	r0, sl
 802a390:	f7ea f9e4 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a394:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a398:	1a10      	subs	r0, r2, r0
 802a39a:	6832      	ldr	r2, [r6, #0]
 802a39c:	4282      	cmp	r2, r0
 802a39e:	bfc8      	it	gt
 802a3a0:	6030      	strgt	r0, [r6, #0]
 802a3a2:	682a      	ldr	r2, [r5, #0]
 802a3a4:	4290      	cmp	r0, r2
 802a3a6:	bfc8      	it	gt
 802a3a8:	6028      	strgt	r0, [r5, #0]
 802a3aa:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a3ae:	e7d1      	b.n	802a354 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 802a3b0:	9b00      	ldr	r3, [sp, #0]
 802a3b2:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a3b6:	455b      	cmp	r3, fp
 802a3b8:	dd27      	ble.n	802a40a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802a3ba:	4618      	mov	r0, r3
 802a3bc:	f7ea fb06 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a3c0:	a903      	add	r1, sp, #12
 802a3c2:	9003      	str	r0, [sp, #12]
 802a3c4:	4650      	mov	r0, sl
 802a3c6:	f7ea f9c9 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a3ca:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a3ce:	4410      	add	r0, r2
 802a3d0:	f8d9 2000 	ldr.w	r2, [r9]
 802a3d4:	4282      	cmp	r2, r0
 802a3d6:	bfc8      	it	gt
 802a3d8:	f8c9 0000 	strgt.w	r0, [r9]
 802a3dc:	683a      	ldr	r2, [r7, #0]
 802a3de:	4290      	cmp	r0, r2
 802a3e0:	bfc8      	it	gt
 802a3e2:	6038      	strgt	r0, [r7, #0]
 802a3e4:	9800      	ldr	r0, [sp, #0]
 802a3e6:	f7ff ff41 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a3ea:	a903      	add	r1, sp, #12
 802a3ec:	9003      	str	r0, [sp, #12]
 802a3ee:	4650      	mov	r0, sl
 802a3f0:	f7ea f9b4 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a3f4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a3f8:	1a10      	subs	r0, r2, r0
 802a3fa:	6832      	ldr	r2, [r6, #0]
 802a3fc:	4282      	cmp	r2, r0
 802a3fe:	bfc8      	it	gt
 802a400:	6030      	strgt	r0, [r6, #0]
 802a402:	682a      	ldr	r2, [r5, #0]
 802a404:	4290      	cmp	r0, r2
 802a406:	bfc8      	it	gt
 802a408:	6028      	strgt	r0, [r5, #0]
 802a40a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a40e:	f8d9 1000 	ldr.w	r1, [r9]
 802a412:	4291      	cmp	r1, r2
 802a414:	bfc8      	it	gt
 802a416:	f8c9 2000 	strgt.w	r2, [r9]
 802a41a:	683a      	ldr	r2, [r7, #0]
 802a41c:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 802a420:	429a      	cmp	r2, r3
 802a422:	bfb8      	it	lt
 802a424:	603b      	strlt	r3, [r7, #0]
 802a426:	6832      	ldr	r2, [r6, #0]
 802a428:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a42c:	429a      	cmp	r2, r3
 802a42e:	bfc8      	it	gt
 802a430:	6033      	strgt	r3, [r6, #0]
 802a432:	682a      	ldr	r2, [r5, #0]
 802a434:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a438:	429a      	cmp	r2, r3
 802a43a:	da00      	bge.n	802a43e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a43c:	602b      	str	r3, [r5, #0]
 802a43e:	b005      	add	sp, #20
 802a440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a444:	2002      	movs	r0, #2
 802a446:	3401      	adds	r4, #1
 802a448:	fb94 f4f0 	sdiv	r4, r4, r0
 802a44c:	4610      	mov	r0, r2
 802a44e:	9201      	str	r2, [sp, #4]
 802a450:	f7ea fabc 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a454:	a903      	add	r1, sp, #12
 802a456:	9003      	str	r0, [sp, #12]
 802a458:	4650      	mov	r0, sl
 802a45a:	f7ea f97f 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a45e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a462:	9a01      	ldr	r2, [sp, #4]
 802a464:	4408      	add	r0, r1
 802a466:	f8d9 1000 	ldr.w	r1, [r9]
 802a46a:	1b03      	subs	r3, r0, r4
 802a46c:	4299      	cmp	r1, r3
 802a46e:	bfc8      	it	gt
 802a470:	f8c9 3000 	strgt.w	r3, [r9]
 802a474:	6839      	ldr	r1, [r7, #0]
 802a476:	428b      	cmp	r3, r1
 802a478:	bfc8      	it	gt
 802a47a:	603b      	strgt	r3, [r7, #0]
 802a47c:	f8d9 1000 	ldr.w	r1, [r9]
 802a480:	4420      	add	r0, r4
 802a482:	4281      	cmp	r1, r0
 802a484:	bfc8      	it	gt
 802a486:	f8c9 0000 	strgt.w	r0, [r9]
 802a48a:	6839      	ldr	r1, [r7, #0]
 802a48c:	4288      	cmp	r0, r1
 802a48e:	bfc8      	it	gt
 802a490:	6038      	strgt	r0, [r7, #0]
 802a492:	4610      	mov	r0, r2
 802a494:	f7ff feea 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a498:	a903      	add	r1, sp, #12
 802a49a:	9003      	str	r0, [sp, #12]
 802a49c:	4650      	mov	r0, sl
 802a49e:	f7ea f95d 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a4a2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a4a6:	1a10      	subs	r0, r2, r0
 802a4a8:	6832      	ldr	r2, [r6, #0]
 802a4aa:	1b01      	subs	r1, r0, r4
 802a4ac:	428a      	cmp	r2, r1
 802a4ae:	bfc8      	it	gt
 802a4b0:	6031      	strgt	r1, [r6, #0]
 802a4b2:	682a      	ldr	r2, [r5, #0]
 802a4b4:	4291      	cmp	r1, r2
 802a4b6:	bfc8      	it	gt
 802a4b8:	6029      	strgt	r1, [r5, #0]
 802a4ba:	6832      	ldr	r2, [r6, #0]
 802a4bc:	4420      	add	r0, r4
 802a4be:	4282      	cmp	r2, r0
 802a4c0:	bfc8      	it	gt
 802a4c2:	6030      	strgt	r0, [r6, #0]
 802a4c4:	682a      	ldr	r2, [r5, #0]
 802a4c6:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a4ca:	4290      	cmp	r0, r2
 802a4cc:	fb9b f2f1 	sdiv	r2, fp, r1
 802a4d0:	fb01 b212 	mls	r2, r1, r2, fp
 802a4d4:	eba1 0202 	sub.w	r2, r1, r2
 802a4d8:	bfc8      	it	gt
 802a4da:	6028      	strgt	r0, [r5, #0]
 802a4dc:	fb92 f0f1 	sdiv	r0, r2, r1
 802a4e0:	fb01 2210 	mls	r2, r1, r0, r2
 802a4e4:	4493      	add	fp, r2
 802a4e6:	9b00      	ldr	r3, [sp, #0]
 802a4e8:	455b      	cmp	r3, fp
 802a4ea:	db40      	blt.n	802a56e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802a4ec:	4658      	mov	r0, fp
 802a4ee:	f7ea fa6d 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a4f2:	a903      	add	r1, sp, #12
 802a4f4:	9003      	str	r0, [sp, #12]
 802a4f6:	4650      	mov	r0, sl
 802a4f8:	f7ea f930 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a4fc:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a500:	4410      	add	r0, r2
 802a502:	f8d9 2000 	ldr.w	r2, [r9]
 802a506:	1b01      	subs	r1, r0, r4
 802a508:	428a      	cmp	r2, r1
 802a50a:	bfc8      	it	gt
 802a50c:	f8c9 1000 	strgt.w	r1, [r9]
 802a510:	683a      	ldr	r2, [r7, #0]
 802a512:	4291      	cmp	r1, r2
 802a514:	bfc8      	it	gt
 802a516:	6039      	strgt	r1, [r7, #0]
 802a518:	f8d9 2000 	ldr.w	r2, [r9]
 802a51c:	4420      	add	r0, r4
 802a51e:	4282      	cmp	r2, r0
 802a520:	bfc8      	it	gt
 802a522:	f8c9 0000 	strgt.w	r0, [r9]
 802a526:	683a      	ldr	r2, [r7, #0]
 802a528:	4290      	cmp	r0, r2
 802a52a:	bfc8      	it	gt
 802a52c:	6038      	strgt	r0, [r7, #0]
 802a52e:	4658      	mov	r0, fp
 802a530:	f7ff fe9c 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a534:	a903      	add	r1, sp, #12
 802a536:	9003      	str	r0, [sp, #12]
 802a538:	4650      	mov	r0, sl
 802a53a:	f7ea f90f 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a53e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a542:	1a10      	subs	r0, r2, r0
 802a544:	6832      	ldr	r2, [r6, #0]
 802a546:	1b01      	subs	r1, r0, r4
 802a548:	428a      	cmp	r2, r1
 802a54a:	bfc8      	it	gt
 802a54c:	6031      	strgt	r1, [r6, #0]
 802a54e:	682a      	ldr	r2, [r5, #0]
 802a550:	4291      	cmp	r1, r2
 802a552:	bfc8      	it	gt
 802a554:	6029      	strgt	r1, [r5, #0]
 802a556:	6832      	ldr	r2, [r6, #0]
 802a558:	4420      	add	r0, r4
 802a55a:	4282      	cmp	r2, r0
 802a55c:	bfc8      	it	gt
 802a55e:	6030      	strgt	r0, [r6, #0]
 802a560:	682a      	ldr	r2, [r5, #0]
 802a562:	4290      	cmp	r0, r2
 802a564:	bfc8      	it	gt
 802a566:	6028      	strgt	r0, [r5, #0]
 802a568:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a56c:	e7bb      	b.n	802a4e6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802a56e:	9b00      	ldr	r3, [sp, #0]
 802a570:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a574:	455b      	cmp	r3, fp
 802a576:	f77f af62 	ble.w	802a43e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a57a:	4618      	mov	r0, r3
 802a57c:	f7ea fa26 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a580:	a903      	add	r1, sp, #12
 802a582:	9003      	str	r0, [sp, #12]
 802a584:	4650      	mov	r0, sl
 802a586:	f7ea f8e9 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a58a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a58e:	4410      	add	r0, r2
 802a590:	f8d9 2000 	ldr.w	r2, [r9]
 802a594:	1b01      	subs	r1, r0, r4
 802a596:	428a      	cmp	r2, r1
 802a598:	bfc8      	it	gt
 802a59a:	f8c9 1000 	strgt.w	r1, [r9]
 802a59e:	683a      	ldr	r2, [r7, #0]
 802a5a0:	4291      	cmp	r1, r2
 802a5a2:	bfc8      	it	gt
 802a5a4:	6039      	strgt	r1, [r7, #0]
 802a5a6:	f8d9 2000 	ldr.w	r2, [r9]
 802a5aa:	4420      	add	r0, r4
 802a5ac:	4282      	cmp	r2, r0
 802a5ae:	bfc8      	it	gt
 802a5b0:	f8c9 0000 	strgt.w	r0, [r9]
 802a5b4:	683b      	ldr	r3, [r7, #0]
 802a5b6:	4298      	cmp	r0, r3
 802a5b8:	bfc8      	it	gt
 802a5ba:	6038      	strgt	r0, [r7, #0]
 802a5bc:	9800      	ldr	r0, [sp, #0]
 802a5be:	f7ff fe55 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a5c2:	a903      	add	r1, sp, #12
 802a5c4:	9003      	str	r0, [sp, #12]
 802a5c6:	4650      	mov	r0, sl
 802a5c8:	f7ea f8c8 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a5cc:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a5d0:	6832      	ldr	r2, [r6, #0]
 802a5d2:	1a18      	subs	r0, r3, r0
 802a5d4:	1b03      	subs	r3, r0, r4
 802a5d6:	429a      	cmp	r2, r3
 802a5d8:	bfc8      	it	gt
 802a5da:	6033      	strgt	r3, [r6, #0]
 802a5dc:	682a      	ldr	r2, [r5, #0]
 802a5de:	4293      	cmp	r3, r2
 802a5e0:	bfc8      	it	gt
 802a5e2:	602b      	strgt	r3, [r5, #0]
 802a5e4:	6833      	ldr	r3, [r6, #0]
 802a5e6:	4404      	add	r4, r0
 802a5e8:	42a3      	cmp	r3, r4
 802a5ea:	bfc8      	it	gt
 802a5ec:	6034      	strgt	r4, [r6, #0]
 802a5ee:	682b      	ldr	r3, [r5, #0]
 802a5f0:	429c      	cmp	r4, r3
 802a5f2:	bfc8      	it	gt
 802a5f4:	602c      	strgt	r4, [r5, #0]
 802a5f6:	e722      	b.n	802a43e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802a5f8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802a5f8:	b530      	push	{r4, r5, lr}
 802a5fa:	4604      	mov	r4, r0
 802a5fc:	4608      	mov	r0, r1
 802a5fe:	4611      	mov	r1, r2
 802a600:	461a      	mov	r2, r3
 802a602:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802a606:	b089      	sub	sp, #36	; 0x24
 802a608:	015b      	lsls	r3, r3, #5
 802a60a:	9304      	str	r3, [sp, #16]
 802a60c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802a610:	2500      	movs	r5, #0
 802a612:	015b      	lsls	r3, r3, #5
 802a614:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802a618:	ab07      	add	r3, sp, #28
 802a61a:	9302      	str	r3, [sp, #8]
 802a61c:	ab06      	add	r3, sp, #24
 802a61e:	9301      	str	r3, [sp, #4]
 802a620:	ab05      	add	r3, sp, #20
 802a622:	9300      	str	r3, [sp, #0]
 802a624:	ab04      	add	r3, sp, #16
 802a626:	9505      	str	r5, [sp, #20]
 802a628:	f7ff fe3e 	bl	802a2a8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 802a62c:	2520      	movs	r5, #32
 802a62e:	9a04      	ldr	r2, [sp, #16]
 802a630:	9805      	ldr	r0, [sp, #20]
 802a632:	fb92 f2f5 	sdiv	r2, r2, r5
 802a636:	fb90 f0f5 	sdiv	r0, r0, r5
 802a63a:	b292      	uxth	r2, r2
 802a63c:	3002      	adds	r0, #2
 802a63e:	1a80      	subs	r0, r0, r2
 802a640:	9b06      	ldr	r3, [sp, #24]
 802a642:	9907      	ldr	r1, [sp, #28]
 802a644:	fb93 f3f5 	sdiv	r3, r3, r5
 802a648:	fb91 f1f5 	sdiv	r1, r1, r5
 802a64c:	b29b      	uxth	r3, r3
 802a64e:	3102      	adds	r1, #2
 802a650:	1ac9      	subs	r1, r1, r3
 802a652:	3a01      	subs	r2, #1
 802a654:	3b01      	subs	r3, #1
 802a656:	80a0      	strh	r0, [r4, #4]
 802a658:	4620      	mov	r0, r4
 802a65a:	8022      	strh	r2, [r4, #0]
 802a65c:	8063      	strh	r3, [r4, #2]
 802a65e:	80e1      	strh	r1, [r4, #6]
 802a660:	b009      	add	sp, #36	; 0x24
 802a662:	bd30      	pop	{r4, r5, pc}

0802a664 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 802a664:	b510      	push	{r4, lr}
 802a666:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802a66a:	4604      	mov	r4, r0
 802a66c:	f7ff ffc4 	bl	802a5f8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a670:	4620      	mov	r0, r4
 802a672:	bd10      	pop	{r4, pc}

0802a674 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 802a674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a676:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802a67a:	4606      	mov	r6, r0
 802a67c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802a680:	6813      	ldr	r3, [r2, #0]
 802a682:	42a5      	cmp	r5, r4
 802a684:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802a688:	da2b      	bge.n	802a6e2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802a68a:	42a3      	cmp	r3, r4
 802a68c:	dd14      	ble.n	802a6b8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802a68e:	b168      	cbz	r0, 802a6ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a690:	4267      	negs	r7, r4
 802a692:	fb97 f2f0 	sdiv	r2, r7, r0
 802a696:	fb00 7212 	mls	r2, r0, r2, r7
 802a69a:	1a82      	subs	r2, r0, r2
 802a69c:	fb92 f7f0 	sdiv	r7, r2, r0
 802a6a0:	fb00 2017 	mls	r0, r0, r7, r2
 802a6a4:	1a24      	subs	r4, r4, r0
 802a6a6:	42ac      	cmp	r4, r5
 802a6a8:	bfb8      	it	lt
 802a6aa:	462c      	movlt	r4, r5
 802a6ac:	4630      	mov	r0, r6
 802a6ae:	4622      	mov	r2, r4
 802a6b0:	f7ff ffa2 	bl	802a5f8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a6b4:	4630      	mov	r0, r6
 802a6b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a6b8:	42ab      	cmp	r3, r5
 802a6ba:	dd0e      	ble.n	802a6da <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a6bc:	b168      	cbz	r0, 802a6da <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a6be:	425f      	negs	r7, r3
 802a6c0:	fb97 f2f0 	sdiv	r2, r7, r0
 802a6c4:	fb00 7212 	mls	r2, r0, r2, r7
 802a6c8:	1a82      	subs	r2, r0, r2
 802a6ca:	fb92 f7f0 	sdiv	r7, r2, r0
 802a6ce:	fb00 2017 	mls	r0, r0, r7, r2
 802a6d2:	1a1b      	subs	r3, r3, r0
 802a6d4:	42ab      	cmp	r3, r5
 802a6d6:	bfb8      	it	lt
 802a6d8:	462b      	movlt	r3, r5
 802a6da:	4622      	mov	r2, r4
 802a6dc:	461c      	mov	r4, r3
 802a6de:	4613      	mov	r3, r2
 802a6e0:	e7e4      	b.n	802a6ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a6e2:	42a3      	cmp	r3, r4
 802a6e4:	da10      	bge.n	802a708 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802a6e6:	b148      	cbz	r0, 802a6fc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802a6e8:	fb94 f2f0 	sdiv	r2, r4, r0
 802a6ec:	fb00 4212 	mls	r2, r0, r2, r4
 802a6f0:	1a82      	subs	r2, r0, r2
 802a6f2:	fb92 f7f0 	sdiv	r7, r2, r0
 802a6f6:	fb00 2017 	mls	r0, r0, r7, r2
 802a6fa:	4404      	add	r4, r0
 802a6fc:	42a5      	cmp	r5, r4
 802a6fe:	bfa8      	it	ge
 802a700:	4625      	movge	r5, r4
 802a702:	461c      	mov	r4, r3
 802a704:	462b      	mov	r3, r5
 802a706:	e7d1      	b.n	802a6ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a708:	42ab      	cmp	r3, r5
 802a70a:	dacf      	bge.n	802a6ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a70c:	2800      	cmp	r0, #0
 802a70e:	d0cd      	beq.n	802a6ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a710:	fb93 f2f0 	sdiv	r2, r3, r0
 802a714:	fb00 3212 	mls	r2, r0, r2, r3
 802a718:	1a82      	subs	r2, r0, r2
 802a71a:	fb92 f7f0 	sdiv	r7, r2, r0
 802a71e:	fb00 2017 	mls	r0, r0, r7, r2
 802a722:	4403      	add	r3, r0
 802a724:	42ab      	cmp	r3, r5
 802a726:	bfa8      	it	ge
 802a728:	462b      	movge	r3, r5
 802a72a:	e7bf      	b.n	802a6ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0802a72c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 802a72c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a730:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 802a734:	42ae      	cmp	r6, r5
 802a736:	bfa2      	ittt	ge
 802a738:	4633      	movge	r3, r6
 802a73a:	462e      	movge	r6, r5
 802a73c:	461d      	movge	r5, r3
 802a73e:	1bab      	subs	r3, r5, r6
 802a740:	468b      	mov	fp, r1
 802a742:	6c01      	ldr	r1, [r0, #64]	; 0x40
 802a744:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802a748:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802a74c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a750:	f04f 0220 	mov.w	r2, #32
 802a754:	b0ab      	sub	sp, #172	; 0xac
 802a756:	4604      	mov	r4, r0
 802a758:	bfa4      	itt	ge
 802a75a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802a75e:	2600      	movge	r6, #0
 802a760:	fb99 f9f2 	sdiv	r9, r9, r2
 802a764:	fb9a faf2 	sdiv	sl, sl, r2
 802a768:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802a76a:	2900      	cmp	r1, #0
 802a76c:	f000 80f5 	beq.w	802a95a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802a770:	f9bb 0000 	ldrsh.w	r0, [fp]
 802a774:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802a778:	eba9 0700 	sub.w	r7, r9, r0
 802a77c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 802a780:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 802a784:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802a788:	ebaa 0802 	sub.w	r8, sl, r2
 802a78c:	4407      	add	r7, r0
 802a78e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 802a792:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802a796:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802a79a:	b23f      	sxth	r7, r7
 802a79c:	4490      	add	r8, r2
 802a79e:	eba9 0707 	sub.w	r7, r9, r7
 802a7a2:	fa0f f888 	sxth.w	r8, r8
 802a7a6:	ebaa 0808 	sub.w	r8, sl, r8
 802a7aa:	2f00      	cmp	r7, #0
 802a7ac:	bfb8      	it	lt
 802a7ae:	427f      	neglt	r7, r7
 802a7b0:	f1b8 0f00 	cmp.w	r8, #0
 802a7b4:	bfb8      	it	lt
 802a7b6:	f1c8 0800 	rsblt	r8, r8, #0
 802a7ba:	45bc      	cmp	ip, r7
 802a7bc:	bfcc      	ite	gt
 802a7be:	f10c 0701 	addgt.w	r7, ip, #1
 802a7c2:	3701      	addle	r7, #1
 802a7c4:	4540      	cmp	r0, r8
 802a7c6:	bfc8      	it	gt
 802a7c8:	f100 0801 	addgt.w	r8, r0, #1
 802a7cc:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802a7d0:	f100 0001 	add.w	r0, r0, #1
 802a7d4:	ea4f 0060 	mov.w	r0, r0, asr #1
 802a7d8:	f04f 0202 	mov.w	r2, #2
 802a7dc:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802a7e0:	fb91 f1f2 	sdiv	r1, r1, r2
 802a7e4:	eba3 0301 	sub.w	r3, r3, r1
 802a7e8:	bfd8      	it	le
 802a7ea:	f108 0801 	addle.w	r8, r8, #1
 802a7ee:	9201      	str	r2, [sp, #4]
 802a7f0:	930d      	str	r3, [sp, #52]	; 0x34
 802a7f2:	f7ea f8cb 	bl	801498c <_ZN8touchgfx7CWRUtil4sineEi>
 802a7f6:	a92a      	add	r1, sp, #168	; 0xa8
 802a7f8:	fb08 f808 	mul.w	r8, r8, r8
 802a7fc:	f841 0d70 	str.w	r0, [r1, #-112]!
 802a800:	a80d      	add	r0, sp, #52	; 0x34
 802a802:	f7e9 ffab 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a806:	fb07 8707 	mla	r7, r7, r7, r8
 802a80a:	f04f 0c20 	mov.w	ip, #32
 802a80e:	fb90 f0fc 	sdiv	r0, r0, ip
 802a812:	4340      	muls	r0, r0
 802a814:	4287      	cmp	r7, r0
 802a816:	9a01      	ldr	r2, [sp, #4]
 802a818:	da04      	bge.n	802a824 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802a81a:	2401      	movs	r4, #1
 802a81c:	4620      	mov	r0, r4
 802a81e:	b02b      	add	sp, #172	; 0xac
 802a820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a824:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802a826:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802a828:	fb91 f3f2 	sdiv	r3, r1, r2
 802a82c:	4403      	add	r3, r0
 802a82e:	fb93 f3fc 	sdiv	r3, r3, ip
 802a832:	f9bb 1000 	ldrsh.w	r1, [fp]
 802a836:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802a83a:	440a      	add	r2, r1
 802a83c:	b212      	sxth	r2, r2
 802a83e:	454a      	cmp	r2, r9
 802a840:	bfa8      	it	ge
 802a842:	464a      	movge	r2, r9
 802a844:	428a      	cmp	r2, r1
 802a846:	bfac      	ite	ge
 802a848:	eba9 0902 	subge.w	r9, r9, r2
 802a84c:	eba9 0901 	sublt.w	r9, r9, r1
 802a850:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 802a854:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802a858:	440a      	add	r2, r1
 802a85a:	b212      	sxth	r2, r2
 802a85c:	4552      	cmp	r2, sl
 802a85e:	bfa8      	it	ge
 802a860:	4652      	movge	r2, sl
 802a862:	428a      	cmp	r2, r1
 802a864:	bfac      	ite	ge
 802a866:	ebaa 0a02 	subge.w	sl, sl, r2
 802a86a:	ebaa 0a01 	sublt.w	sl, sl, r1
 802a86e:	3301      	adds	r3, #1
 802a870:	fb0a fa0a 	mul.w	sl, sl, sl
 802a874:	fb09 a909 	mla	r9, r9, r9, sl
 802a878:	435b      	muls	r3, r3
 802a87a:	4599      	cmp	r9, r3
 802a87c:	dccd      	bgt.n	802a81a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802a87e:	465a      	mov	r2, fp
 802a880:	4621      	mov	r1, r4
 802a882:	a80e      	add	r0, sp, #56	; 0x38
 802a884:	f7ff faae 	bl	8029de4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802a888:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802a88a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802a88c:	9209      	str	r2, [sp, #36]	; 0x24
 802a88e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802a892:	930a      	str	r3, [sp, #40]	; 0x28
 802a894:	dd07      	ble.n	802a8a6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802a896:	2102      	movs	r1, #2
 802a898:	fb93 f3f1 	sdiv	r3, r3, r1
 802a89c:	4413      	add	r3, r2
 802a89e:	930a      	str	r3, [sp, #40]	; 0x28
 802a8a0:	fb93 f3f1 	sdiv	r3, r3, r1
 802a8a4:	9309      	str	r3, [sp, #36]	; 0x24
 802a8a6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a8aa:	4630      	mov	r0, r6
 802a8ac:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a8b0:	930b      	str	r3, [sp, #44]	; 0x2c
 802a8b2:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802a8b6:	f7ea f889 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a8ba:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802a8be:	f04f 0a02 	mov.w	sl, #2
 802a8c2:	f849 0d74 	str.w	r0, [r9, #-116]!
 802a8c6:	a80b      	add	r0, sp, #44	; 0x2c
 802a8c8:	4649      	mov	r1, r9
 802a8ca:	f7e9 ff47 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8ce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a8d0:	fb90 f0fa 	sdiv	r0, r0, sl
 802a8d4:	eb00 0b03 	add.w	fp, r0, r3
 802a8d8:	4630      	mov	r0, r6
 802a8da:	f7ff fcc7 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a8de:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802a8e2:	017f      	lsls	r7, r7, #5
 802a8e4:	f848 0d78 	str.w	r0, [r8, #-120]!
 802a8e8:	a80b      	add	r0, sp, #44	; 0x2c
 802a8ea:	4641      	mov	r1, r8
 802a8ec:	f7e9 ff36 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a8f2:	fb90 f0fa 	sdiv	r0, r0, sl
 802a8f6:	4659      	mov	r1, fp
 802a8f8:	1a12      	subs	r2, r2, r0
 802a8fa:	a80e      	add	r0, sp, #56	; 0x38
 802a8fc:	f7ff fbf2 	bl	802a0e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802a900:	f106 0a20 	add.w	sl, r6, #32
 802a904:	bb67      	cbnz	r7, 802a960 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802a906:	46b3      	mov	fp, r6
 802a908:	45aa      	cmp	sl, r5
 802a90a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a90c:	dc33      	bgt.n	802a976 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802a90e:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a910:	4650      	mov	r0, sl
 802a912:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802a916:	920b      	str	r2, [sp, #44]	; 0x2c
 802a918:	f7ea f858 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a91c:	4641      	mov	r1, r8
 802a91e:	900c      	str	r0, [sp, #48]	; 0x30
 802a920:	a80b      	add	r0, sp, #44	; 0x2c
 802a922:	f7e9 ff1b 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a926:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802a928:	2302      	movs	r3, #2
 802a92a:	fb90 f0f3 	sdiv	r0, r0, r3
 802a92e:	eb00 0b02 	add.w	fp, r0, r2
 802a932:	4650      	mov	r0, sl
 802a934:	f7ff fc9a 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a938:	4649      	mov	r1, r9
 802a93a:	900d      	str	r0, [sp, #52]	; 0x34
 802a93c:	a80b      	add	r0, sp, #44	; 0x2c
 802a93e:	f7e9 ff0d 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a942:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a944:	2302      	movs	r3, #2
 802a946:	4659      	mov	r1, fp
 802a948:	fb90 f0f3 	sdiv	r0, r0, r3
 802a94c:	1a12      	subs	r2, r2, r0
 802a94e:	a80e      	add	r0, sp, #56	; 0x38
 802a950:	46d3      	mov	fp, sl
 802a952:	f7ff fc14 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a956:	44ba      	add	sl, r7
 802a958:	e7d6      	b.n	802a908 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802a95a:	fb93 f3f2 	sdiv	r3, r3, r2
 802a95e:	e768      	b.n	802a832 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802a960:	fb9a f2f7 	sdiv	r2, sl, r7
 802a964:	fb07 a212 	mls	r2, r7, r2, sl
 802a968:	1aba      	subs	r2, r7, r2
 802a96a:	fb92 f1f7 	sdiv	r1, r2, r7
 802a96e:	fb07 2211 	mls	r2, r7, r1, r2
 802a972:	4492      	add	sl, r2
 802a974:	e7c7      	b.n	802a906 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802a976:	45ab      	cmp	fp, r5
 802a978:	da23      	bge.n	802a9c2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802a97a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a97c:	4628      	mov	r0, r5
 802a97e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802a982:	920b      	str	r2, [sp, #44]	; 0x2c
 802a984:	f7ea f822 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a988:	4641      	mov	r1, r8
 802a98a:	900c      	str	r0, [sp, #48]	; 0x30
 802a98c:	a80b      	add	r0, sp, #44	; 0x2c
 802a98e:	f7e9 fee5 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a992:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a994:	f04f 0a02 	mov.w	sl, #2
 802a998:	fb90 f0fa 	sdiv	r0, r0, sl
 802a99c:	4403      	add	r3, r0
 802a99e:	4628      	mov	r0, r5
 802a9a0:	9301      	str	r3, [sp, #4]
 802a9a2:	f7ff fc63 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a9a6:	4649      	mov	r1, r9
 802a9a8:	900d      	str	r0, [sp, #52]	; 0x34
 802a9aa:	a80b      	add	r0, sp, #44	; 0x2c
 802a9ac:	f7e9 fed6 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a9b2:	9b01      	ldr	r3, [sp, #4]
 802a9b4:	fb90 f0fa 	sdiv	r0, r0, sl
 802a9b8:	4619      	mov	r1, r3
 802a9ba:	1a12      	subs	r2, r2, r0
 802a9bc:	a80e      	add	r0, sp, #56	; 0x38
 802a9be:	f7ff fbde 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a9c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802a9c4:	b99b      	cbnz	r3, 802a9ee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 802a9c6:	1bad      	subs	r5, r5, r6
 802a9c8:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802a9cc:	da04      	bge.n	802a9d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802a9ce:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802a9d2:	a80e      	add	r0, sp, #56	; 0x38
 802a9d4:	f7ff fbd3 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a9d8:	21ff      	movs	r1, #255	; 0xff
 802a9da:	a80e      	add	r0, sp, #56	; 0x38
 802a9dc:	f7ff fabe 	bl	8029f5c <_ZN8touchgfx6Canvas6renderEh>
 802a9e0:	4604      	mov	r4, r0
 802a9e2:	4b8a      	ldr	r3, [pc, #552]	; (802ac0c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 802a9e4:	930e      	str	r3, [sp, #56]	; 0x38
 802a9e6:	a816      	add	r0, sp, #88	; 0x58
 802a9e8:	f7eb fcf0 	bl	80163cc <_ZN8touchgfx7OutlineD1Ev>
 802a9ec:	e716      	b.n	802a81c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802a9ee:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802a9f2:	429a      	cmp	r2, r3
 802a9f4:	f0c0 8107 	bcc.w	802ac06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 802a9f8:	1bab      	subs	r3, r5, r6
 802a9fa:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802a9fe:	9301      	str	r3, [sp, #4]
 802aa00:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802aa04:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 802aa08:	da43      	bge.n	802aa92 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802aa0a:	4628      	mov	r0, r5
 802aa0c:	f7e9 ffde 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa10:	4649      	mov	r1, r9
 802aa12:	900d      	str	r0, [sp, #52]	; 0x34
 802aa14:	a809      	add	r0, sp, #36	; 0x24
 802aa16:	f7e9 fea1 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa1a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802aa1c:	18c3      	adds	r3, r0, r3
 802aa1e:	4628      	mov	r0, r5
 802aa20:	9303      	str	r3, [sp, #12]
 802aa22:	f7ff fc23 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa26:	4649      	mov	r1, r9
 802aa28:	900d      	str	r0, [sp, #52]	; 0x34
 802aa2a:	a809      	add	r0, sp, #36	; 0x24
 802aa2c:	f7e9 fe96 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa30:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802aa32:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802aa36:	1a1b      	subs	r3, r3, r0
 802aa38:	9302      	str	r3, [sp, #8]
 802aa3a:	9204      	str	r2, [sp, #16]
 802aa3c:	eb0a 0305 	add.w	r3, sl, r5
 802aa40:	9a04      	ldr	r2, [sp, #16]
 802aa42:	4293      	cmp	r3, r2
 802aa44:	da25      	bge.n	802aa92 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802aa46:	4618      	mov	r0, r3
 802aa48:	9306      	str	r3, [sp, #24]
 802aa4a:	f7e9 ffbf 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa4e:	4649      	mov	r1, r9
 802aa50:	900d      	str	r0, [sp, #52]	; 0x34
 802aa52:	a80a      	add	r0, sp, #40	; 0x28
 802aa54:	f7e9 fe82 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa58:	9b03      	ldr	r3, [sp, #12]
 802aa5a:	2202      	movs	r2, #2
 802aa5c:	fb90 f0f2 	sdiv	r0, r0, r2
 802aa60:	18c3      	adds	r3, r0, r3
 802aa62:	9305      	str	r3, [sp, #20]
 802aa64:	9b06      	ldr	r3, [sp, #24]
 802aa66:	9207      	str	r2, [sp, #28]
 802aa68:	4618      	mov	r0, r3
 802aa6a:	f7ff fbff 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa6e:	a92a      	add	r1, sp, #168	; 0xa8
 802aa70:	f841 0d78 	str.w	r0, [r1, #-120]!
 802aa74:	a80a      	add	r0, sp, #40	; 0x28
 802aa76:	f7e9 fe71 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa7a:	9b02      	ldr	r3, [sp, #8]
 802aa7c:	9a07      	ldr	r2, [sp, #28]
 802aa7e:	9905      	ldr	r1, [sp, #20]
 802aa80:	fb90 f2f2 	sdiv	r2, r0, r2
 802aa84:	a80e      	add	r0, sp, #56	; 0x38
 802aa86:	1a9a      	subs	r2, r3, r2
 802aa88:	f7ff fb79 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aa8c:	9b06      	ldr	r3, [sp, #24]
 802aa8e:	4453      	add	r3, sl
 802aa90:	e7d6      	b.n	802aa40 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 802aa92:	45ab      	cmp	fp, r5
 802aa94:	da25      	bge.n	802aae2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802aa96:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802aa9a:	4628      	mov	r0, r5
 802aa9c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802aaa0:	930b      	str	r3, [sp, #44]	; 0x2c
 802aaa2:	f7e9 ff93 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aaa6:	4641      	mov	r1, r8
 802aaa8:	900c      	str	r0, [sp, #48]	; 0x30
 802aaaa:	a80b      	add	r0, sp, #44	; 0x2c
 802aaac:	f7e9 fe56 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aab0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802aab2:	2202      	movs	r2, #2
 802aab4:	fb90 f0f2 	sdiv	r0, r0, r2
 802aab8:	eb00 0903 	add.w	r9, r0, r3
 802aabc:	4628      	mov	r0, r5
 802aabe:	9202      	str	r2, [sp, #8]
 802aac0:	f7ff fbd4 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aac4:	a92a      	add	r1, sp, #168	; 0xa8
 802aac6:	f841 0d74 	str.w	r0, [r1, #-116]!
 802aaca:	a80b      	add	r0, sp, #44	; 0x2c
 802aacc:	f7e9 fe46 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aad0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802aad2:	9a02      	ldr	r2, [sp, #8]
 802aad4:	fb90 f2f2 	sdiv	r2, r0, r2
 802aad8:	4649      	mov	r1, r9
 802aada:	1a9a      	subs	r2, r3, r2
 802aadc:	a80e      	add	r0, sp, #56	; 0x38
 802aade:	f7ff fb4e 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aae2:	46d9      	mov	r9, fp
 802aae4:	2502      	movs	r5, #2
 802aae6:	45b1      	cmp	r9, r6
 802aae8:	db25      	blt.n	802ab36 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802aaea:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802aaee:	4648      	mov	r0, r9
 802aaf0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802aaf4:	930b      	str	r3, [sp, #44]	; 0x2c
 802aaf6:	f7e9 ff69 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aafa:	4641      	mov	r1, r8
 802aafc:	900c      	str	r0, [sp, #48]	; 0x30
 802aafe:	a80b      	add	r0, sp, #44	; 0x2c
 802ab00:	f7e9 fe2c 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802ab04:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802ab06:	fb90 f0f5 	sdiv	r0, r0, r5
 802ab0a:	eb00 0b03 	add.w	fp, r0, r3
 802ab0e:	4648      	mov	r0, r9
 802ab10:	f7ff fbac 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802ab14:	a90d      	add	r1, sp, #52	; 0x34
 802ab16:	900d      	str	r0, [sp, #52]	; 0x34
 802ab18:	a80b      	add	r0, sp, #44	; 0x2c
 802ab1a:	f7e9 fe1f 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802ab1e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802ab20:	fb90 f0f5 	sdiv	r0, r0, r5
 802ab24:	4659      	mov	r1, fp
 802ab26:	1a12      	subs	r2, r2, r0
 802ab28:	a80e      	add	r0, sp, #56	; 0x38
 802ab2a:	46cb      	mov	fp, r9
 802ab2c:	f7ff fb27 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802ab30:	eba9 0907 	sub.w	r9, r9, r7
 802ab34:	e7d7      	b.n	802aae6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802ab36:	455e      	cmp	r6, fp
 802ab38:	da22      	bge.n	802ab80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802ab3a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802ab3e:	4630      	mov	r0, r6
 802ab40:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802ab44:	930b      	str	r3, [sp, #44]	; 0x2c
 802ab46:	f7e9 ff41 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802ab4a:	4641      	mov	r1, r8
 802ab4c:	900c      	str	r0, [sp, #48]	; 0x30
 802ab4e:	a80b      	add	r0, sp, #44	; 0x2c
 802ab50:	f7e9 fe04 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802ab54:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802ab56:	2502      	movs	r5, #2
 802ab58:	fb90 f0f5 	sdiv	r0, r0, r5
 802ab5c:	4407      	add	r7, r0
 802ab5e:	4630      	mov	r0, r6
 802ab60:	f7ff fb84 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802ab64:	a92a      	add	r1, sp, #168	; 0xa8
 802ab66:	f841 0d74 	str.w	r0, [r1, #-116]!
 802ab6a:	a80b      	add	r0, sp, #44	; 0x2c
 802ab6c:	f7e9 fdf6 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802ab70:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802ab72:	fb90 f0f5 	sdiv	r0, r0, r5
 802ab76:	4639      	mov	r1, r7
 802ab78:	1a12      	subs	r2, r2, r0
 802ab7a:	a80e      	add	r0, sp, #56	; 0x38
 802ab7c:	f7ff faff 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802ab80:	9b01      	ldr	r3, [sp, #4]
 802ab82:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802ab86:	f6bf af27 	bge.w	802a9d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802ab8a:	4630      	mov	r0, r6
 802ab8c:	f7e9 ff1e 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802ab90:	ad2a      	add	r5, sp, #168	; 0xa8
 802ab92:	f04f 0b02 	mov.w	fp, #2
 802ab96:	f845 0d74 	str.w	r0, [r5, #-116]!
 802ab9a:	a809      	add	r0, sp, #36	; 0x24
 802ab9c:	4629      	mov	r1, r5
 802ab9e:	f7e9 fddd 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aba2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802aba4:	eb00 0903 	add.w	r9, r0, r3
 802aba8:	4630      	mov	r0, r6
 802abaa:	f7ff fb5f 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802abae:	4629      	mov	r1, r5
 802abb0:	900d      	str	r0, [sp, #52]	; 0x34
 802abb2:	a809      	add	r0, sp, #36	; 0x24
 802abb4:	f7e9 fdd2 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802abb8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802abba:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802abbe:	eba3 0800 	sub.w	r8, r3, r0
 802abc2:	4454      	add	r4, sl
 802abc4:	42a6      	cmp	r6, r4
 802abc6:	f77f af07 	ble.w	802a9d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802abca:	4620      	mov	r0, r4
 802abcc:	f7e9 fefe 	bl	80149cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802abd0:	4629      	mov	r1, r5
 802abd2:	900d      	str	r0, [sp, #52]	; 0x34
 802abd4:	a80a      	add	r0, sp, #40	; 0x28
 802abd6:	f7e9 fdc1 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802abda:	fb90 f0fb 	sdiv	r0, r0, fp
 802abde:	eb00 0709 	add.w	r7, r0, r9
 802abe2:	4620      	mov	r0, r4
 802abe4:	f7ff fb42 	bl	802a26c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802abe8:	a90c      	add	r1, sp, #48	; 0x30
 802abea:	900c      	str	r0, [sp, #48]	; 0x30
 802abec:	a80a      	add	r0, sp, #40	; 0x28
 802abee:	f7e9 fdb5 	bl	801475c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802abf2:	4639      	mov	r1, r7
 802abf4:	fb90 f2fb 	sdiv	r2, r0, fp
 802abf8:	a80e      	add	r0, sp, #56	; 0x38
 802abfa:	eba8 0202 	sub.w	r2, r8, r2
 802abfe:	f7ff fabe 	bl	802a17e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802ac02:	4454      	add	r4, sl
 802ac04:	e7de      	b.n	802abc4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802ac06:	2400      	movs	r4, #0
 802ac08:	e6eb      	b.n	802a9e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 802ac0a:	bf00      	nop
 802ac0c:	0803241c 	.word	0x0803241c

0802ac10 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802ac10:	b570      	push	{r4, r5, r6, lr}
 802ac12:	790b      	ldrb	r3, [r1, #4]
 802ac14:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802ac18:	2b00      	cmp	r3, #0
 802ac1a:	bf0c      	ite	eq
 802ac1c:	2301      	moveq	r3, #1
 802ac1e:	2300      	movne	r3, #0
 802ac20:	4604      	mov	r4, r0
 802ac22:	460e      	mov	r6, r1
 802ac24:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802ac28:	d109      	bne.n	802ac3e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802ac2a:	b14d      	cbz	r5, 802ac40 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 802ac2c:	7933      	ldrb	r3, [r6, #4]
 802ac2e:	2b01      	cmp	r3, #1
 802ac30:	d10c      	bne.n	802ac4c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802ac32:	6823      	ldr	r3, [r4, #0]
 802ac34:	4620      	mov	r0, r4
 802ac36:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802ac38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802ac3c:	4718      	bx	r3
 802ac3e:	b12d      	cbz	r5, 802ac4c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802ac40:	6823      	ldr	r3, [r4, #0]
 802ac42:	4620      	mov	r0, r4
 802ac44:	695b      	ldr	r3, [r3, #20]
 802ac46:	4798      	blx	r3
 802ac48:	2d00      	cmp	r5, #0
 802ac4a:	d1ef      	bne.n	802ac2c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 802ac4c:	bd70      	pop	{r4, r5, r6, pc}

0802ac4e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802ac4e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 802ac52:	4770      	bx	lr

0802ac54 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 802ac54:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802ac58:	4770      	bx	lr

0802ac5a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802ac5a:	6802      	ldr	r2, [r0, #0]
 802ac5c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ac60:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ac62:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ac66:	4710      	bx	r2

0802ac68 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802ac68:	6802      	ldr	r2, [r0, #0]
 802ac6a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ac6e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ac70:	eef0 0a40 	vmov.f32	s1, s0
 802ac74:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ac78:	4710      	bx	r2

0802ac7a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802ac7a:	6802      	ldr	r2, [r0, #0]
 802ac7c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ac80:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ac82:	eeb0 1a40 	vmov.f32	s2, s0
 802ac86:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ac8a:	4710      	bx	r2

0802ac8c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 802ac8c:	6802      	ldr	r2, [r0, #0]
 802ac8e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ac92:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ac94:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ac98:	4710      	bx	r2

0802ac9a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802ac9a:	6802      	ldr	r2, [r0, #0]
 802ac9c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802aca0:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802aca2:	eef0 0a40 	vmov.f32	s1, s0
 802aca6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802acaa:	4710      	bx	r2

0802acac <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 802acac:	6802      	ldr	r2, [r0, #0]
 802acae:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802acb2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802acb4:	eeb0 1a40 	vmov.f32	s2, s0
 802acb8:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802acbc:	4710      	bx	r2

0802acbe <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802acbe:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802acc2:	4770      	bx	lr

0802acc4 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 802acc4:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802acc8:	4770      	bx	lr

0802acca <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802acca:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802acce:	4770      	bx	lr

0802acd0 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 802acd0:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 802acd4:	4770      	bx	lr

0802acd6 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802acd6:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802acda:	4770      	bx	lr

0802acdc <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 802acdc:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 802ace0:	4770      	bx	lr

0802ace2 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802ace2:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802ace6:	4770      	bx	lr

0802ace8 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 802ace8:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 802acec:	4770      	bx	lr

0802acee <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802acee:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802acf2:	4770      	bx	lr

0802acf4 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 802acf4:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 802acf8:	4770      	bx	lr

0802acfa <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 802acfa:	ee07 2a90 	vmov	s15, r2
 802acfe:	6803      	ldr	r3, [r0, #0]
 802ad00:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802ad04:	ee07 1a90 	vmov	s15, r1
 802ad08:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 802ad0c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802ad10:	4718      	bx	r3

0802ad12 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802ad12:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802ad16:	4770      	bx	lr

0802ad18 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802ad18:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 802ad1c:	4770      	bx	lr

0802ad1e <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802ad1e:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802ad22:	4770      	bx	lr

0802ad24 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802ad24:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802ad28:	4770      	bx	lr

0802ad2a <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802ad2a:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802ad2e:	4770      	bx	lr

0802ad30 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802ad30:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 802ad34:	4770      	bx	lr

0802ad36 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802ad36:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802ad3a:	4770      	bx	lr

0802ad3c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 802ad3c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802ad40:	4770      	bx	lr

0802ad42 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802ad42:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802ad46:	4770      	bx	lr

0802ad48 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802ad48:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 802ad4c:	4770      	bx	lr

0802ad4e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802ad4e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802ad52:	4770      	bx	lr

0802ad54 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 802ad54:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802ad58:	4770      	bx	lr

0802ad5a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802ad5a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802ad5e:	4770      	bx	lr

0802ad60 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 802ad60:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 802ad64:	4770      	bx	lr

0802ad66 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802ad66:	b510      	push	{r4, lr}
 802ad68:	ed2d 8b04 	vpush	{d8-d9}
 802ad6c:	6803      	ldr	r3, [r0, #0]
 802ad6e:	4604      	mov	r4, r0
 802ad70:	699b      	ldr	r3, [r3, #24]
 802ad72:	eeb0 8a40 	vmov.f32	s16, s0
 802ad76:	eef0 8a60 	vmov.f32	s17, s1
 802ad7a:	eeb0 9a41 	vmov.f32	s18, s2
 802ad7e:	4798      	blx	r3
 802ad80:	6823      	ldr	r3, [r4, #0]
 802ad82:	4620      	mov	r0, r4
 802ad84:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802ad86:	eeb0 1a49 	vmov.f32	s2, s18
 802ad8a:	eef0 0a68 	vmov.f32	s1, s17
 802ad8e:	eeb0 0a48 	vmov.f32	s0, s16
 802ad92:	4798      	blx	r3
 802ad94:	ecbd 8b04 	vpop	{d8-d9}
 802ad98:	6823      	ldr	r3, [r4, #0]
 802ad9a:	4620      	mov	r0, r4
 802ad9c:	699b      	ldr	r3, [r3, #24]
 802ad9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ada2:	4718      	bx	r3

0802ada4 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 802ada4:	b510      	push	{r4, lr}
 802ada6:	ed2d 8b02 	vpush	{d8}
 802adaa:	6803      	ldr	r3, [r0, #0]
 802adac:	4604      	mov	r4, r0
 802adae:	699b      	ldr	r3, [r3, #24]
 802adb0:	eeb0 8a40 	vmov.f32	s16, s0
 802adb4:	4798      	blx	r3
 802adb6:	6823      	ldr	r3, [r4, #0]
 802adb8:	4620      	mov	r0, r4
 802adba:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802adbe:	eeb0 0a48 	vmov.f32	s0, s16
 802adc2:	4798      	blx	r3
 802adc4:	ecbd 8b02 	vpop	{d8}
 802adc8:	6823      	ldr	r3, [r4, #0]
 802adca:	4620      	mov	r0, r4
 802adcc:	699b      	ldr	r3, [r3, #24]
 802adce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802add2:	4718      	bx	r3

0802add4 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 802add4:	2200      	movs	r2, #0
 802add6:	8002      	strh	r2, [r0, #0]
 802add8:	8042      	strh	r2, [r0, #2]
 802adda:	8082      	strh	r2, [r0, #4]
 802addc:	80c2      	strh	r2, [r0, #6]
 802adde:	4770      	bx	lr

0802ade0 <_ZN8touchgfx13TextureMapperD1Ev>:
 802ade0:	4770      	bx	lr

0802ade2 <_ZN8touchgfx13TextureMapperD0Ev>:
 802ade2:	b510      	push	{r4, lr}
 802ade4:	2190      	movs	r1, #144	; 0x90
 802ade6:	4604      	mov	r4, r0
 802ade8:	f001 ffe7 	bl	802cdba <_ZdlPvj>
 802adec:	4620      	mov	r0, r4
 802adee:	bd10      	pop	{r4, pc}

0802adf0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802adf0:	b538      	push	{r3, r4, r5, lr}
 802adf2:	2500      	movs	r5, #0
 802adf4:	e9c0 5505 	strd	r5, r5, [r0, #20]
 802adf8:	2301      	movs	r3, #1
 802adfa:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802adfe:	4b1f      	ldr	r3, [pc, #124]	; (802ae7c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802ae00:	8085      	strh	r5, [r0, #4]
 802ae02:	80c5      	strh	r5, [r0, #6]
 802ae04:	8105      	strh	r5, [r0, #8]
 802ae06:	8145      	strh	r5, [r0, #10]
 802ae08:	8185      	strh	r5, [r0, #12]
 802ae0a:	81c5      	strh	r5, [r0, #14]
 802ae0c:	8205      	strh	r5, [r0, #16]
 802ae0e:	8245      	strh	r5, [r0, #18]
 802ae10:	61c5      	str	r5, [r0, #28]
 802ae12:	8405      	strh	r5, [r0, #32]
 802ae14:	8445      	strh	r5, [r0, #34]	; 0x22
 802ae16:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802ae1a:	6003      	str	r3, [r0, #0]
 802ae1c:	880b      	ldrh	r3, [r1, #0]
 802ae1e:	84c3      	strh	r3, [r0, #38]	; 0x26
 802ae20:	23ff      	movs	r3, #255	; 0xff
 802ae22:	4604      	mov	r4, r0
 802ae24:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802ae28:	f7eb f96b 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802ae2c:	4b14      	ldr	r3, [pc, #80]	; (802ae80 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802ae2e:	6023      	str	r3, [r4, #0]
 802ae30:	2300      	movs	r3, #0
 802ae32:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802ae36:	4913      	ldr	r1, [pc, #76]	; (802ae84 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802ae38:	62e3      	str	r3, [r4, #44]	; 0x2c
 802ae3a:	6323      	str	r3, [r4, #48]	; 0x30
 802ae3c:	6363      	str	r3, [r4, #52]	; 0x34
 802ae3e:	63a3      	str	r3, [r4, #56]	; 0x38
 802ae40:	63e3      	str	r3, [r4, #60]	; 0x3c
 802ae42:	6463      	str	r3, [r4, #68]	; 0x44
 802ae44:	64a3      	str	r3, [r4, #72]	; 0x48
 802ae46:	6523      	str	r3, [r4, #80]	; 0x50
 802ae48:	6563      	str	r3, [r4, #84]	; 0x54
 802ae4a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802ae4c:	6623      	str	r3, [r4, #96]	; 0x60
 802ae4e:	66a3      	str	r3, [r4, #104]	; 0x68
 802ae50:	66e3      	str	r3, [r4, #108]	; 0x6c
 802ae52:	6763      	str	r3, [r4, #116]	; 0x74
 802ae54:	67a3      	str	r3, [r4, #120]	; 0x78
 802ae56:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802ae5a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802ae5e:	230c      	movs	r3, #12
 802ae60:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 802ae64:	6422      	str	r2, [r4, #64]	; 0x40
 802ae66:	64e1      	str	r1, [r4, #76]	; 0x4c
 802ae68:	65a1      	str	r1, [r4, #88]	; 0x58
 802ae6a:	6662      	str	r2, [r4, #100]	; 0x64
 802ae6c:	6722      	str	r2, [r4, #112]	; 0x70
 802ae6e:	67e2      	str	r2, [r4, #124]	; 0x7c
 802ae70:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 802ae74:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802ae78:	4620      	mov	r0, r4
 802ae7a:	bd38      	pop	{r3, r4, r5, pc}
 802ae7c:	08031ec4 	.word	0x08031ec4
 802ae80:	080324a8 	.word	0x080324a8
 802ae84:	447a0000 	.word	0x447a0000

0802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802ae88:	b570      	push	{r4, r5, r6, lr}
 802ae8a:	ed2d 8b04 	vpush	{d8-d9}
 802ae8e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 802ae92:	add0      	add	r5, sp, #832	; 0x340
 802ae94:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802ae96:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802ae9a:	4604      	mov	r4, r0
 802ae9c:	4628      	mov	r0, r5
 802ae9e:	f7f1 fa7f 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802aea2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 802aea4:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802aea8:	4606      	mov	r6, r0
 802aeaa:	4628      	mov	r0, r5
 802aeac:	f7f1 faac 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802aeb0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 802aeb4:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 802aeb8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802aeba:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802aebe:	9312      	str	r3, [sp, #72]	; 0x48
 802aec0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802aec4:	1c72      	adds	r2, r6, #1
 802aec6:	3001      	adds	r0, #1
 802aec8:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802aecc:	ee07 2a90 	vmov	s15, r2
 802aed0:	ee06 0a90 	vmov	s13, r0
 802aed4:	ee36 6a47 	vsub.f32	s12, s12, s14
 802aed8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802aedc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 802aee0:	ee77 7a86 	vadd.f32	s15, s15, s12
 802aee4:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802aee8:	9316      	str	r3, [sp, #88]	; 0x58
 802aeea:	931a      	str	r3, [sp, #104]	; 0x68
 802aeec:	931e      	str	r3, [sp, #120]	; 0x78
 802aeee:	2300      	movs	r3, #0
 802aef0:	9320      	str	r3, [sp, #128]	; 0x80
 802aef2:	9321      	str	r3, [sp, #132]	; 0x84
 802aef4:	9322      	str	r3, [sp, #136]	; 0x88
 802aef6:	9324      	str	r3, [sp, #144]	; 0x90
 802aef8:	9325      	str	r3, [sp, #148]	; 0x94
 802aefa:	9326      	str	r3, [sp, #152]	; 0x98
 802aefc:	9328      	str	r3, [sp, #160]	; 0xa0
 802aefe:	9329      	str	r3, [sp, #164]	; 0xa4
 802af00:	932a      	str	r3, [sp, #168]	; 0xa8
 802af02:	932c      	str	r3, [sp, #176]	; 0xb0
 802af04:	932d      	str	r3, [sp, #180]	; 0xb4
 802af06:	932e      	str	r3, [sp, #184]	; 0xb8
 802af08:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802af0c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 802af10:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802af14:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802af18:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 802af1c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 802af20:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 802af24:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802af28:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 802af2c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 802af30:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802af34:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802af38:	a830      	add	r0, sp, #192	; 0xc0
 802af3a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802af3e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 802af42:	f000 fc43 	bl	802b7cc <_ZN8touchgfx9Matrix4x4C1Ev>
 802af46:	eeb1 0a49 	vneg.f32	s0, s18
 802af4a:	a830      	add	r0, sp, #192	; 0xc0
 802af4c:	f000 fd12 	bl	802b974 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802af50:	eeb1 0a68 	vneg.f32	s0, s17
 802af54:	f000 fd1c 	bl	802b990 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802af58:	eeb1 0a48 	vneg.f32	s0, s16
 802af5c:	f000 fd27 	bl	802b9ae <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802af60:	a840      	add	r0, sp, #256	; 0x100
 802af62:	f000 fc33 	bl	802b7cc <_ZN8touchgfx9Matrix4x4C1Ev>
 802af66:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802af6a:	a840      	add	r0, sp, #256	; 0x100
 802af6c:	f000 fc86 	bl	802b87c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 802af70:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 802af74:	f000 fcac 	bl	802b8d0 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802af78:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802af7c:	f000 fcd1 	bl	802b922 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 802af80:	a850      	add	r0, sp, #320	; 0x140
 802af82:	f000 fc23 	bl	802b7cc <_ZN8touchgfx9Matrix4x4C1Ev>
 802af86:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802af8a:	a850      	add	r0, sp, #320	; 0x140
 802af8c:	f000 fd1e 	bl	802b9cc <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 802af90:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802af94:	f000 fd26 	bl	802b9e4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802af98:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802af9c:	f000 fd2f 	bl	802b9fe <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 802afa0:	a860      	add	r0, sp, #384	; 0x180
 802afa2:	f000 fc13 	bl	802b7cc <_ZN8touchgfx9Matrix4x4C1Ev>
 802afa6:	eeb0 0a49 	vmov.f32	s0, s18
 802afaa:	a860      	add	r0, sp, #384	; 0x180
 802afac:	f000 fce2 	bl	802b974 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802afb0:	eeb0 0a68 	vmov.f32	s0, s17
 802afb4:	f000 fcec 	bl	802b990 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802afb8:	eeb0 0a48 	vmov.f32	s0, s16
 802afbc:	f000 fcf7 	bl	802b9ae <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802afc0:	aa50      	add	r2, sp, #320	; 0x140
 802afc2:	a960      	add	r1, sp, #384	; 0x180
 802afc4:	a8b0      	add	r0, sp, #704	; 0x2c0
 802afc6:	f000 fc1b 	bl	802b800 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802afca:	4628      	mov	r0, r5
 802afcc:	aa40      	add	r2, sp, #256	; 0x100
 802afce:	a9b0      	add	r1, sp, #704	; 0x2c0
 802afd0:	f000 fc16 	bl	802b800 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802afd4:	4629      	mov	r1, r5
 802afd6:	aa30      	add	r2, sp, #192	; 0xc0
 802afd8:	a870      	add	r0, sp, #448	; 0x1c0
 802afda:	f000 fc11 	bl	802b800 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802afde:	a880      	add	r0, sp, #512	; 0x200
 802afe0:	f000 fbf4 	bl	802b7cc <_ZN8touchgfx9Matrix4x4C1Ev>
 802afe4:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802afe8:	a880      	add	r0, sp, #512	; 0x200
 802afea:	eeb1 0a40 	vneg.f32	s0, s0
 802afee:	f000 fcc1 	bl	802b974 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802aff2:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802aff6:	a880      	add	r0, sp, #512	; 0x200
 802aff8:	eeb1 0a40 	vneg.f32	s0, s0
 802affc:	f000 fcc8 	bl	802b990 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802b000:	a890      	add	r0, sp, #576	; 0x240
 802b002:	f000 fbe3 	bl	802b7cc <_ZN8touchgfx9Matrix4x4C1Ev>
 802b006:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802b00a:	a890      	add	r0, sp, #576	; 0x240
 802b00c:	f000 fc26 	bl	802b85c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 802b010:	a8a0      	add	r0, sp, #640	; 0x280
 802b012:	f000 fbdb 	bl	802b7cc <_ZN8touchgfx9Matrix4x4C1Ev>
 802b016:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802b01a:	a8a0      	add	r0, sp, #640	; 0x280
 802b01c:	f000 fcaa 	bl	802b974 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802b020:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802b024:	f000 fcb4 	bl	802b990 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802b028:	aa90      	add	r2, sp, #576	; 0x240
 802b02a:	a9a0      	add	r1, sp, #640	; 0x280
 802b02c:	a8b0      	add	r0, sp, #704	; 0x2c0
 802b02e:	f000 fbe7 	bl	802b800 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802b032:	4628      	mov	r0, r5
 802b034:	aa80      	add	r2, sp, #512	; 0x200
 802b036:	a9b0      	add	r1, sp, #704	; 0x2c0
 802b038:	f000 fbe2 	bl	802b800 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802b03c:	4629      	mov	r1, r5
 802b03e:	aa70      	add	r2, sp, #448	; 0x1c0
 802b040:	4668      	mov	r0, sp
 802b042:	466d      	mov	r5, sp
 802b044:	f000 fbdc 	bl	802b800 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802b048:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802b04a:	ae70      	add	r6, sp, #448	; 0x1c0
 802b04c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802b04e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802b050:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802b052:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802b054:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802b056:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802b05a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802b05e:	2500      	movs	r5, #0
 802b060:	0129      	lsls	r1, r5, #4
 802b062:	ab20      	add	r3, sp, #128	; 0x80
 802b064:	185e      	adds	r6, r3, r1
 802b066:	ab10      	add	r3, sp, #64	; 0x40
 802b068:	4419      	add	r1, r3
 802b06a:	a870      	add	r0, sp, #448	; 0x1c0
 802b06c:	f000 fb7e 	bl	802b76c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 802b070:	3501      	adds	r5, #1
 802b072:	2d04      	cmp	r5, #4
 802b074:	ed86 0a00 	vstr	s0, [r6]
 802b078:	edc6 0a01 	vstr	s1, [r6, #4]
 802b07c:	ed86 1a02 	vstr	s2, [r6, #8]
 802b080:	edc6 1a03 	vstr	s3, [r6, #12]
 802b084:	d1ec      	bne.n	802b060 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802b086:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802b08a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802b08e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802b092:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b096:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802b09a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b09e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802b0a2:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802b0a6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b0aa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b0ae:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802b0b2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802b0b6:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802b0ba:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b0be:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802b0c2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b0c6:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802b0ca:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802b0ce:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b0d2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b0d6:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802b0da:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802b0de:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802b0e2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b0e6:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802b0ea:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b0ee:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802b0f2:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802b0f6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b0fa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b0fe:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802b102:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802b106:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802b10a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b10e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802b112:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b116:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802b11a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802b11e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b122:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802b126:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802b12a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802b12e:	ecbd 8b04 	vpop	{d8-d9}
 802b132:	bd70      	pop	{r4, r5, r6, pc}

0802b134 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 802b134:	b510      	push	{r4, lr}
 802b136:	4604      	mov	r4, r0
 802b138:	f7ea ffe3 	bl	8016102 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802b13c:	4620      	mov	r0, r4
 802b13e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b142:	f7ff bea1 	b.w	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b146 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802b146:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802b14a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802b14e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802b152:	f7ff be99 	b.w	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b156 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802b156:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802b15a:	f7ff be95 	b.w	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b15e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802b15e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802b162:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802b166:	f7ff be8f 	b.w	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b16a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802b16a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b16e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b172:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b176:	bfd8      	it	le
 802b178:	eeb0 0a67 	vmovle.f32	s0, s15
 802b17c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802b180:	f7ff be82 	b.w	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b184 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 802b184:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802b188:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802b18c:	f7ff be7c 	b.w	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b190 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802b190:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b194:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b198:	f7ff be76 	b.w	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b19c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802b19c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b1a0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b1a4:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802b1a8:	f7ff be6e 	b.w	802ae88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b1ac <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802b1ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b1b0:	ed2d 8b04 	vpush	{d8-d9}
 802b1b4:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802b1b8:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802b1bc:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 802b1c0:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 802b1c4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b1c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1cc:	bf54      	ite	pl
 802b1ce:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b1d2:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b1d6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b1da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1de:	bfd8      	it	le
 802b1e0:	eeb0 0a49 	vmovle.f32	s0, s18
 802b1e4:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b1e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1ec:	bfd8      	it	le
 802b1ee:	eeb0 0a68 	vmovle.f32	s0, s17
 802b1f2:	460c      	mov	r4, r1
 802b1f4:	4607      	mov	r7, r0
 802b1f6:	f001 ffd3 	bl	802d1a0 <floorf>
 802b1fa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b1fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b202:	bf58      	it	pl
 802b204:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b208:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b20c:	bf56      	itet	pl
 802b20e:	ee10 3a10 	vmovpl	r3, s0
 802b212:	2600      	movmi	r6, #0
 802b214:	b21e      	sxthpl	r6, r3
 802b216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b21a:	bfd8      	it	le
 802b21c:	eeb0 8a69 	vmovle.f32	s16, s19
 802b220:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b228:	bf58      	it	pl
 802b22a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b22e:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b232:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b236:	bf54      	ite	pl
 802b238:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b23c:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b240:	f001 ff6c 	bl	802d11c <ceilf>
 802b244:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802b248:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802b24c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802b250:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 802b254:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802b258:	ee07 8a90 	vmov	s15, r8
 802b25c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b260:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b264:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b268:	bfd8      	it	le
 802b26a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b26e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b272:	bfdc      	itt	le
 802b274:	ee10 3a10 	vmovle	r3, s0
 802b278:	fa0f f883 	sxthle.w	r8, r3
 802b27c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b280:	bf54      	ite	pl
 802b282:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b286:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b28a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b28e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b292:	bfd8      	it	le
 802b294:	eeb0 0a49 	vmovle.f32	s0, s18
 802b298:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b29c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b2a0:	bfd8      	it	le
 802b2a2:	eeb0 0a68 	vmovle.f32	s0, s17
 802b2a6:	f001 ff7b 	bl	802d1a0 <floorf>
 802b2aa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b2ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b2b2:	bf58      	it	pl
 802b2b4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b2b8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b2bc:	bf56      	itet	pl
 802b2be:	ee10 3a10 	vmovpl	r3, s0
 802b2c2:	2500      	movmi	r5, #0
 802b2c4:	b21d      	sxthpl	r5, r3
 802b2c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b2ca:	bfd8      	it	le
 802b2cc:	eeb0 8a69 	vmovle.f32	s16, s19
 802b2d0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b2d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b2d8:	bf58      	it	pl
 802b2da:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b2de:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b2e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b2e6:	bf54      	ite	pl
 802b2e8:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b2ec:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b2f0:	f001 ff14 	bl	802d11c <ceilf>
 802b2f4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802b2f8:	803e      	strh	r6, [r7, #0]
 802b2fa:	ee07 3a90 	vmov	s15, r3
 802b2fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b302:	807d      	strh	r5, [r7, #2]
 802b304:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b30c:	bfd8      	it	le
 802b30e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b312:	eba8 0606 	sub.w	r6, r8, r6
 802b316:	bfdc      	itt	le
 802b318:	ee10 3a10 	vmovle	r3, s0
 802b31c:	b21b      	sxthle	r3, r3
 802b31e:	1b5d      	subs	r5, r3, r5
 802b320:	80be      	strh	r6, [r7, #4]
 802b322:	80fd      	strh	r5, [r7, #6]
 802b324:	ecbd 8b04 	vpop	{d8-d9}
 802b328:	4638      	mov	r0, r7
 802b32a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802b32e <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802b32e:	b513      	push	{r0, r1, r4, lr}
 802b330:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b334:	4604      	mov	r4, r0
 802b336:	b143      	cbz	r3, 802b34a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802b338:	4601      	mov	r1, r0
 802b33a:	4668      	mov	r0, sp
 802b33c:	f7ff ff36 	bl	802b1ac <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802b340:	6823      	ldr	r3, [r4, #0]
 802b342:	4669      	mov	r1, sp
 802b344:	691b      	ldr	r3, [r3, #16]
 802b346:	4620      	mov	r0, r4
 802b348:	4798      	blx	r3
 802b34a:	b002      	add	sp, #8
 802b34c:	bd10      	pop	{r4, pc}

0802b34e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802b34e:	4603      	mov	r3, r0
 802b350:	3026      	adds	r0, #38	; 0x26
 802b352:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802b356:	b90b      	cbnz	r3, 802b35c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802b358:	f7ee bdfa 	b.w	8019f50 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802b35c:	f7ee be08 	b.w	8019f70 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802b360 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802b360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b364:	ed2d 8b04 	vpush	{d8-d9}
 802b368:	4604      	mov	r4, r0
 802b36a:	469b      	mov	fp, r3
 802b36c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802b370:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802b374:	f9b1 6000 	ldrsh.w	r6, [r1]
 802b378:	8888      	ldrh	r0, [r1, #4]
 802b37a:	b0b3      	sub	sp, #204	; 0xcc
 802b37c:	4430      	add	r0, r6
 802b37e:	b280      	uxth	r0, r0
 802b380:	9206      	str	r2, [sp, #24]
 802b382:	fa0f fe80 	sxth.w	lr, r0
 802b386:	2200      	movs	r2, #0
 802b388:	4596      	cmp	lr, r2
 802b38a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802b38e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802b392:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802b396:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802b398:	9211      	str	r2, [sp, #68]	; 0x44
 802b39a:	f340 8129 	ble.w	802b5f0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b39e:	45b4      	cmp	ip, r6
 802b3a0:	f340 8126 	ble.w	802b5f0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b3a4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802b3a8:	88ca      	ldrh	r2, [r1, #6]
 802b3aa:	442a      	add	r2, r5
 802b3ac:	b292      	uxth	r2, r2
 802b3ae:	b211      	sxth	r1, r2
 802b3b0:	2900      	cmp	r1, #0
 802b3b2:	f340 811d 	ble.w	802b5f0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b3b6:	42ab      	cmp	r3, r5
 802b3b8:	f340 811a 	ble.w	802b5f0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b3bc:	45f4      	cmp	ip, lr
 802b3be:	bfb8      	it	lt
 802b3c0:	fa1f f08c 	uxthlt.w	r0, ip
 802b3c4:	428b      	cmp	r3, r1
 802b3c6:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802b3ca:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802b3ce:	bfb8      	it	lt
 802b3d0:	b29a      	uxthlt	r2, r3
 802b3d2:	1b80      	subs	r0, r0, r6
 802b3d4:	1b52      	subs	r2, r2, r5
 802b3d6:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802b3da:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802b3de:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802b3e2:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802b3e6:	ab11      	add	r3, sp, #68	; 0x44
 802b3e8:	e893 0003 	ldmia.w	r3, {r0, r1}
 802b3ec:	6822      	ldr	r2, [r4, #0]
 802b3ee:	9307      	str	r3, [sp, #28]
 802b3f0:	ad13      	add	r5, sp, #76	; 0x4c
 802b3f2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802b3f4:	e885 0003 	stmia.w	r5, {r0, r1}
 802b3f8:	4629      	mov	r1, r5
 802b3fa:	4620      	mov	r0, r4
 802b3fc:	4790      	blx	r2
 802b3fe:	4621      	mov	r1, r4
 802b400:	a815      	add	r0, sp, #84	; 0x54
 802b402:	f7ee fd01 	bl	8019e08 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802b406:	a815      	add	r0, sp, #84	; 0x54
 802b408:	f7ed f9c6 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b40c:	9b07      	ldr	r3, [sp, #28]
 802b40e:	1d26      	adds	r6, r4, #4
 802b410:	4618      	mov	r0, r3
 802b412:	4631      	mov	r1, r6
 802b414:	f7ed fa04 	bl	8018820 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802b418:	4628      	mov	r0, r5
 802b41a:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802b41e:	f7ed f9bb 	bl	8018798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b422:	4628      	mov	r0, r5
 802b424:	f7f1 f8a8 	bl	801c578 <_ZNK8touchgfx6Bitmap7getDataEv>
 802b428:	9007      	str	r0, [sp, #28]
 802b42a:	2800      	cmp	r0, #0
 802b42c:	f000 80db 	beq.w	802b5e6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802b430:	f8db 2000 	ldr.w	r2, [fp]
 802b434:	9209      	str	r2, [sp, #36]	; 0x24
 802b436:	f8db 2004 	ldr.w	r2, [fp, #4]
 802b43a:	920a      	str	r2, [sp, #40]	; 0x28
 802b43c:	f8db 2008 	ldr.w	r2, [fp, #8]
 802b440:	920b      	str	r2, [sp, #44]	; 0x2c
 802b442:	f8db 200c 	ldr.w	r2, [fp, #12]
 802b446:	920c      	str	r2, [sp, #48]	; 0x30
 802b448:	f8da 2000 	ldr.w	r2, [sl]
 802b44c:	920d      	str	r2, [sp, #52]	; 0x34
 802b44e:	f8da 2004 	ldr.w	r2, [sl, #4]
 802b452:	920e      	str	r2, [sp, #56]	; 0x38
 802b454:	f8da 2008 	ldr.w	r2, [sl, #8]
 802b458:	920f      	str	r2, [sp, #60]	; 0x3c
 802b45a:	f8da 200c 	ldr.w	r2, [sl, #12]
 802b45e:	9210      	str	r2, [sp, #64]	; 0x40
 802b460:	a90d      	add	r1, sp, #52	; 0x34
 802b462:	4632      	mov	r2, r6
 802b464:	a809      	add	r0, sp, #36	; 0x24
 802b466:	f7ed f9bf 	bl	80187e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b46a:	4632      	mov	r2, r6
 802b46c:	a90e      	add	r1, sp, #56	; 0x38
 802b46e:	a80a      	add	r0, sp, #40	; 0x28
 802b470:	f7ed f9ba 	bl	80187e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b474:	4632      	mov	r2, r6
 802b476:	a90f      	add	r1, sp, #60	; 0x3c
 802b478:	a80b      	add	r0, sp, #44	; 0x2c
 802b47a:	f7ed f9b5 	bl	80187e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b47e:	4632      	mov	r2, r6
 802b480:	a910      	add	r1, sp, #64	; 0x40
 802b482:	a80c      	add	r0, sp, #48	; 0x30
 802b484:	f7ed f9b0 	bl	80187e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b488:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802b48c:	edd7 4a00 	vldr	s9, [r7]
 802b490:	edd7 5a01 	vldr	s11, [r7, #4]
 802b494:	ed98 4a00 	vldr	s8, [r8]
 802b498:	ed98 5a01 	vldr	s10, [r8, #4]
 802b49c:	ed99 9a00 	vldr	s18, [r9]
 802b4a0:	ed99 8a01 	vldr	s16, [r9, #4]
 802b4a4:	edd9 8a02 	vldr	s17, [r9, #8]
 802b4a8:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802b4ac:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802b4b0:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 802b4b4:	eef0 6a67 	vmov.f32	s13, s15
 802b4b8:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802b4bc:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802b4c0:	eeb0 7a67 	vmov.f32	s14, s15
 802b4c4:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802b4c8:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802b4cc:	eeb0 6a67 	vmov.f32	s12, s15
 802b4d0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b4d4:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802b4d8:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802b4dc:	ee16 6a10 	vmov	r6, s12
 802b4e0:	eeb0 6a67 	vmov.f32	s12, s15
 802b4e4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b4e8:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802b4ec:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802b4f0:	f8d8 b008 	ldr.w	fp, [r8, #8]
 802b4f4:	68ff      	ldr	r7, [r7, #12]
 802b4f6:	9624      	str	r6, [sp, #144]	; 0x90
 802b4f8:	ee16 0a10 	vmov	r0, s12
 802b4fc:	eeb0 6a67 	vmov.f32	s12, s15
 802b500:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b504:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802b508:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802b50c:	ee16 1a10 	vmov	r1, s12
 802b510:	eeb0 6a67 	vmov.f32	s12, s15
 802b514:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b518:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 802b51c:	ee16 2a10 	vmov	r2, s12
 802b520:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802b524:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802b528:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802b52c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802b530:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b534:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802b538:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802b53c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802b540:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 802b544:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802b548:	922d      	str	r2, [sp, #180]	; 0xb4
 802b54a:	4a2b      	ldr	r2, [pc, #172]	; (802b5f8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802b54c:	9b06      	ldr	r3, [sp, #24]
 802b54e:	8812      	ldrh	r2, [r2, #0]
 802b550:	9317      	str	r3, [sp, #92]	; 0x5c
 802b552:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802b556:	9b07      	ldr	r3, [sp, #28]
 802b558:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802b55c:	4628      	mov	r0, r5
 802b55e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802b562:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802b566:	9218      	str	r2, [sp, #96]	; 0x60
 802b568:	9319      	str	r3, [sp, #100]	; 0x64
 802b56a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802b56e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802b572:	9731      	str	r7, [sp, #196]	; 0xc4
 802b574:	f7f1 f830 	bl	801c5d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802b578:	901a      	str	r0, [sp, #104]	; 0x68
 802b57a:	4628      	mov	r0, r5
 802b57c:	f7f0 ff10 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b580:	901b      	str	r0, [sp, #108]	; 0x6c
 802b582:	4628      	mov	r0, r5
 802b584:	f7f0 ff40 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b588:	901c      	str	r0, [sp, #112]	; 0x70
 802b58a:	4628      	mov	r0, r5
 802b58c:	f7f0 ff08 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b590:	eeb4 9a48 	vcmp.f32	s18, s16
 802b594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b598:	901d      	str	r0, [sp, #116]	; 0x74
 802b59a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802b59e:	d107      	bne.n	802b5b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802b5a0:	eeb4 8a68 	vcmp.f32	s16, s17
 802b5a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b5a8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802b5ac:	bf08      	it	eq
 802b5ae:	461e      	moveq	r6, r3
 802b5b0:	4b12      	ldr	r3, [pc, #72]	; (802b5fc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802b5b2:	681b      	ldr	r3, [r3, #0]
 802b5b4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802b5b8:	b10a      	cbz	r2, 802b5be <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802b5ba:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802b5bc:	b905      	cbnz	r5, 802b5c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802b5be:	689d      	ldr	r5, [r3, #8]
 802b5c0:	682b      	ldr	r3, [r5, #0]
 802b5c2:	4620      	mov	r0, r4
 802b5c4:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802b5c6:	f7ff fec2 	bl	802b34e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802b5ca:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802b5ce:	9604      	str	r6, [sp, #16]
 802b5d0:	e9cd 0302 	strd	r0, r3, [sp, #8]
 802b5d4:	ab13      	add	r3, sp, #76	; 0x4c
 802b5d6:	9301      	str	r3, [sp, #4]
 802b5d8:	ab15      	add	r3, sp, #84	; 0x54
 802b5da:	9300      	str	r3, [sp, #0]
 802b5dc:	aa1e      	add	r2, sp, #120	; 0x78
 802b5de:	ab19      	add	r3, sp, #100	; 0x64
 802b5e0:	a917      	add	r1, sp, #92	; 0x5c
 802b5e2:	4628      	mov	r0, r5
 802b5e4:	47b8      	blx	r7
 802b5e6:	b033      	add	sp, #204	; 0xcc
 802b5e8:	ecbd 8b04 	vpop	{d8-d9}
 802b5ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b5f0:	2300      	movs	r3, #0
 802b5f2:	9312      	str	r3, [sp, #72]	; 0x48
 802b5f4:	e6f7      	b.n	802b3e6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802b5f6:	bf00      	nop
 802b5f8:	2001384e 	.word	0x2001384e
 802b5fc:	20013854 	.word	0x20013854

0802b600 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802b600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b604:	ed2d 8b02 	vpush	{d8}
 802b608:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b60c:	b098      	sub	sp, #96	; 0x60
 802b60e:	4604      	mov	r4, r0
 802b610:	4688      	mov	r8, r1
 802b612:	2b00      	cmp	r3, #0
 802b614:	d077      	beq.n	802b706 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802b616:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802b61a:	4628      	mov	r0, r5
 802b61c:	f7f0 fec0 	bl	801c3a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b620:	ee07 0a90 	vmov	s15, r0
 802b624:	4628      	mov	r0, r5
 802b626:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802b62a:	f7f0 feed 	bl	801c408 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b62e:	4b4e      	ldr	r3, [pc, #312]	; (802b768 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802b630:	781b      	ldrb	r3, [r3, #0]
 802b632:	ee07 0a90 	vmov	s15, r0
 802b636:	2b01      	cmp	r3, #1
 802b638:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b63c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802b640:	d066      	beq.n	802b710 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802b642:	eeb0 6a47 	vmov.f32	s12, s14
 802b646:	ee17 3a10 	vmov	r3, s14
 802b64a:	eeb0 4a48 	vmov.f32	s8, s16
 802b64e:	eeb0 7a48 	vmov.f32	s14, s16
 802b652:	eef0 4a67 	vmov.f32	s9, s15
 802b656:	eeb0 8a67 	vmov.f32	s16, s15
 802b65a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802b65e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802b662:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802b666:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802b66a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802b66e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802b672:	6f25      	ldr	r5, [r4, #112]	; 0x70
 802b674:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802b676:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802b678:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802b67c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802b680:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b684:	ee73 1a65 	vsub.f32	s3, s6, s11
 802b688:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802b68c:	ee32 1a45 	vsub.f32	s2, s4, s10
 802b690:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 802b694:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802b698:	eee1 6a21 	vfma.f32	s13, s2, s3
 802b69c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802b6a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b6a4:	dd3d      	ble.n	802b722 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802b6a6:	ed8d 5a04 	vstr	s10, [sp, #16]
 802b6aa:	ed8d 2a05 	vstr	s4, [sp, #20]
 802b6ae:	edcd 2a06 	vstr	s5, [sp, #24]
 802b6b2:	f8cd c01c 	str.w	ip, [sp, #28]
 802b6b6:	edcd 5a08 	vstr	s11, [sp, #32]
 802b6ba:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802b6be:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802b6c2:	970b      	str	r7, [sp, #44]	; 0x2c
 802b6c4:	960c      	str	r6, [sp, #48]	; 0x30
 802b6c6:	950d      	str	r5, [sp, #52]	; 0x34
 802b6c8:	920e      	str	r2, [sp, #56]	; 0x38
 802b6ca:	900f      	str	r0, [sp, #60]	; 0x3c
 802b6cc:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802b6d0:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 802b6d4:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802b6d8:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802b6dc:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802b6e0:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 802b6e4:	9316      	str	r3, [sp, #88]	; 0x58
 802b6e6:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802b6ea:	ab14      	add	r3, sp, #80	; 0x50
 802b6ec:	9303      	str	r3, [sp, #12]
 802b6ee:	ab10      	add	r3, sp, #64	; 0x40
 802b6f0:	9302      	str	r3, [sp, #8]
 802b6f2:	ab0c      	add	r3, sp, #48	; 0x30
 802b6f4:	9301      	str	r3, [sp, #4]
 802b6f6:	ab08      	add	r3, sp, #32
 802b6f8:	9300      	str	r3, [sp, #0]
 802b6fa:	2200      	movs	r2, #0
 802b6fc:	ab04      	add	r3, sp, #16
 802b6fe:	4641      	mov	r1, r8
 802b700:	4620      	mov	r0, r4
 802b702:	f7ff fe2d 	bl	802b360 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802b706:	b018      	add	sp, #96	; 0x60
 802b708:	ecbd 8b02 	vpop	{d8}
 802b70c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b710:	eeb0 6a48 	vmov.f32	s12, s16
 802b714:	eef0 4a47 	vmov.f32	s9, s14
 802b718:	ee17 3a90 	vmov	r3, s15
 802b71c:	eeb0 4a67 	vmov.f32	s8, s15
 802b720:	e79b      	b.n	802b65a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802b722:	ed8d 5a05 	vstr	s10, [sp, #20]
 802b726:	ed8d 2a04 	vstr	s4, [sp, #16]
 802b72a:	f8cd c018 	str.w	ip, [sp, #24]
 802b72e:	edcd 2a07 	vstr	s5, [sp, #28]
 802b732:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802b736:	ed8d 3a08 	vstr	s6, [sp, #32]
 802b73a:	970a      	str	r7, [sp, #40]	; 0x28
 802b73c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802b740:	960d      	str	r6, [sp, #52]	; 0x34
 802b742:	950c      	str	r5, [sp, #48]	; 0x30
 802b744:	900e      	str	r0, [sp, #56]	; 0x38
 802b746:	920f      	str	r2, [sp, #60]	; 0x3c
 802b748:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802b74c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802b750:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 802b754:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802b758:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802b75c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802b760:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 802b764:	9317      	str	r3, [sp, #92]	; 0x5c
 802b766:	e7c0      	b.n	802b6ea <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802b768:	2001384c 	.word	0x2001384c

0802b76c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802b76c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b76e:	b08d      	sub	sp, #52	; 0x34
 802b770:	2300      	movs	r3, #0
 802b772:	9304      	str	r3, [sp, #16]
 802b774:	9305      	str	r3, [sp, #20]
 802b776:	9306      	str	r3, [sp, #24]
 802b778:	aa04      	add	r2, sp, #16
 802b77a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802b77e:	9307      	str	r3, [sp, #28]
 802b780:	f100 0640 	add.w	r6, r0, #64	; 0x40
 802b784:	4613      	mov	r3, r2
 802b786:	f101 0710 	add.w	r7, r1, #16
 802b78a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b7c8 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802b78e:	460c      	mov	r4, r1
 802b790:	4605      	mov	r5, r0
 802b792:	ecb4 7a01 	vldmia	r4!, {s14}
 802b796:	ecf5 6a01 	vldmia	r5!, {s13}
 802b79a:	42bc      	cmp	r4, r7
 802b79c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b7a0:	d1f7      	bne.n	802b792 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802b7a2:	3010      	adds	r0, #16
 802b7a4:	42b0      	cmp	r0, r6
 802b7a6:	ece2 7a01 	vstmia	r2!, {s15}
 802b7aa:	d1ee      	bne.n	802b78a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802b7ac:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802b7ae:	ac0c      	add	r4, sp, #48	; 0x30
 802b7b0:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 802b7b4:	ed9d 0a08 	vldr	s0, [sp, #32]
 802b7b8:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802b7bc:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802b7c0:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 802b7c4:	b00d      	add	sp, #52	; 0x34
 802b7c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b7c8:	00000000 	.word	0x00000000

0802b7cc <_ZN8touchgfx9Matrix4x4C1Ev>:
 802b7cc:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802b7fc <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802b7d0:	2300      	movs	r3, #0
 802b7d2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b7d6:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802b7da:	2200      	movs	r2, #0
 802b7dc:	4293      	cmp	r3, r2
 802b7de:	f102 0201 	add.w	r2, r2, #1
 802b7e2:	bf14      	ite	ne
 802b7e4:	eef0 6a47 	vmovne.f32	s13, s14
 802b7e8:	eef0 6a67 	vmoveq.f32	s13, s15
 802b7ec:	2a04      	cmp	r2, #4
 802b7ee:	ece1 6a01 	vstmia	r1!, {s13}
 802b7f2:	d1f3      	bne.n	802b7dc <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 802b7f4:	3301      	adds	r3, #1
 802b7f6:	2b04      	cmp	r3, #4
 802b7f8:	d1ed      	bne.n	802b7d6 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802b7fa:	4770      	bx	lr
 802b7fc:	00000000 	.word	0x00000000

0802b800 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802b800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b804:	460c      	mov	r4, r1
 802b806:	4605      	mov	r5, r0
 802b808:	4690      	mov	r8, r2
 802b80a:	f7ff ffdf 	bl	802b7cc <_ZN8touchgfx9Matrix4x4C1Ev>
 802b80e:	4628      	mov	r0, r5
 802b810:	4621      	mov	r1, r4
 802b812:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802b816:	2300      	movs	r3, #0
 802b818:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b858 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 802b81c:	eb08 0603 	add.w	r6, r8, r3
 802b820:	460f      	mov	r7, r1
 802b822:	2400      	movs	r4, #0
 802b824:	4632      	mov	r2, r6
 802b826:	ecf7 6a01 	vldmia	r7!, {s13}
 802b82a:	ed92 7a00 	vldr	s14, [r2]
 802b82e:	3401      	adds	r4, #1
 802b830:	2c04      	cmp	r4, #4
 802b832:	f106 0610 	add.w	r6, r6, #16
 802b836:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b83a:	d1f3      	bne.n	802b824 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802b83c:	18c2      	adds	r2, r0, r3
 802b83e:	3304      	adds	r3, #4
 802b840:	2b10      	cmp	r3, #16
 802b842:	edc2 7a00 	vstr	s15, [r2]
 802b846:	d1e7      	bne.n	802b818 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802b848:	3110      	adds	r1, #16
 802b84a:	4561      	cmp	r1, ip
 802b84c:	f100 0010 	add.w	r0, r0, #16
 802b850:	d1e1      	bne.n	802b816 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802b852:	4628      	mov	r0, r5
 802b854:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b858:	00000000 	.word	0x00000000

0802b85c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802b85c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b860:	ee87 0a80 	vdiv.f32	s0, s15, s0
 802b864:	f100 0320 	add.w	r3, r0, #32
 802b868:	3030      	adds	r0, #48	; 0x30
 802b86a:	ecf3 7a01 	vldmia	r3!, {s15}
 802b86e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b872:	4283      	cmp	r3, r0
 802b874:	edc3 7a03 	vstr	s15, [r3, #12]
 802b878:	d1f7      	bne.n	802b86a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802b87a:	4770      	bx	lr

0802b87c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802b87c:	b510      	push	{r4, lr}
 802b87e:	ed2d 8b02 	vpush	{d8}
 802b882:	4604      	mov	r4, r0
 802b884:	eef0 8a40 	vmov.f32	s17, s0
 802b888:	f001 fbfe 	bl	802d088 <sinf>
 802b88c:	eeb0 8a40 	vmov.f32	s16, s0
 802b890:	eeb0 0a68 	vmov.f32	s0, s17
 802b894:	f001 fbac 	bl	802cff0 <cosf>
 802b898:	f104 0310 	add.w	r3, r4, #16
 802b89c:	f104 0220 	add.w	r2, r4, #32
 802b8a0:	eeb1 6a48 	vneg.f32	s12, s16
 802b8a4:	edd3 7a04 	vldr	s15, [r3, #16]
 802b8a8:	edd3 6a00 	vldr	s13, [r3]
 802b8ac:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b8b0:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b8b4:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b8b8:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b8bc:	eca3 7a01 	vstmia	r3!, {s14}
 802b8c0:	429a      	cmp	r2, r3
 802b8c2:	edc3 7a03 	vstr	s15, [r3, #12]
 802b8c6:	d1ed      	bne.n	802b8a4 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802b8c8:	ecbd 8b02 	vpop	{d8}
 802b8cc:	4620      	mov	r0, r4
 802b8ce:	bd10      	pop	{r4, pc}

0802b8d0 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802b8d0:	b510      	push	{r4, lr}
 802b8d2:	ed2d 8b02 	vpush	{d8}
 802b8d6:	4604      	mov	r4, r0
 802b8d8:	eef0 8a40 	vmov.f32	s17, s0
 802b8dc:	f001 fbd4 	bl	802d088 <sinf>
 802b8e0:	eeb0 8a40 	vmov.f32	s16, s0
 802b8e4:	eeb0 0a68 	vmov.f32	s0, s17
 802b8e8:	f001 fb82 	bl	802cff0 <cosf>
 802b8ec:	4623      	mov	r3, r4
 802b8ee:	f104 0210 	add.w	r2, r4, #16
 802b8f2:	eeb1 6a48 	vneg.f32	s12, s16
 802b8f6:	edd3 7a08 	vldr	s15, [r3, #32]
 802b8fa:	edd3 6a00 	vldr	s13, [r3]
 802b8fe:	ee27 7a88 	vmul.f32	s14, s15, s16
 802b902:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b906:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b90a:	eee6 7a26 	vfma.f32	s15, s12, s13
 802b90e:	eca3 7a01 	vstmia	r3!, {s14}
 802b912:	429a      	cmp	r2, r3
 802b914:	edc3 7a07 	vstr	s15, [r3, #28]
 802b918:	d1ed      	bne.n	802b8f6 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802b91a:	ecbd 8b02 	vpop	{d8}
 802b91e:	4620      	mov	r0, r4
 802b920:	bd10      	pop	{r4, pc}

0802b922 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802b922:	b510      	push	{r4, lr}
 802b924:	ed2d 8b02 	vpush	{d8}
 802b928:	4604      	mov	r4, r0
 802b92a:	eef0 8a40 	vmov.f32	s17, s0
 802b92e:	f001 fbab 	bl	802d088 <sinf>
 802b932:	eeb0 8a40 	vmov.f32	s16, s0
 802b936:	eeb0 0a68 	vmov.f32	s0, s17
 802b93a:	f001 fb59 	bl	802cff0 <cosf>
 802b93e:	4623      	mov	r3, r4
 802b940:	f104 0210 	add.w	r2, r4, #16
 802b944:	eeb1 6a48 	vneg.f32	s12, s16
 802b948:	edd3 7a04 	vldr	s15, [r3, #16]
 802b94c:	edd3 6a00 	vldr	s13, [r3]
 802b950:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b954:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b958:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b95c:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b960:	eca3 7a01 	vstmia	r3!, {s14}
 802b964:	429a      	cmp	r2, r3
 802b966:	edc3 7a03 	vstr	s15, [r3, #12]
 802b96a:	d1ed      	bne.n	802b948 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802b96c:	ecbd 8b02 	vpop	{d8}
 802b970:	4620      	mov	r0, r4
 802b972:	bd10      	pop	{r4, pc}

0802b974 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 802b974:	4603      	mov	r3, r0
 802b976:	f100 0210 	add.w	r2, r0, #16
 802b97a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802b97e:	edd3 7a00 	vldr	s15, [r3]
 802b982:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b986:	ece3 7a01 	vstmia	r3!, {s15}
 802b98a:	4293      	cmp	r3, r2
 802b98c:	d1f5      	bne.n	802b97a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802b98e:	4770      	bx	lr

0802b990 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 802b990:	f100 0310 	add.w	r3, r0, #16
 802b994:	f100 0220 	add.w	r2, r0, #32
 802b998:	ed93 7a08 	vldr	s14, [r3, #32]
 802b99c:	edd3 7a00 	vldr	s15, [r3]
 802b9a0:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b9a4:	ece3 7a01 	vstmia	r3!, {s15}
 802b9a8:	4293      	cmp	r3, r2
 802b9aa:	d1f5      	bne.n	802b998 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802b9ac:	4770      	bx	lr

0802b9ae <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802b9ae:	f100 0320 	add.w	r3, r0, #32
 802b9b2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b9b6:	ed93 7a04 	vldr	s14, [r3, #16]
 802b9ba:	edd3 7a00 	vldr	s15, [r3]
 802b9be:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b9c2:	ece3 7a01 	vstmia	r3!, {s15}
 802b9c6:	4293      	cmp	r3, r2
 802b9c8:	d1f5      	bne.n	802b9b6 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802b9ca:	4770      	bx	lr

0802b9cc <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802b9cc:	4603      	mov	r3, r0
 802b9ce:	f100 0210 	add.w	r2, r0, #16
 802b9d2:	edd3 7a00 	vldr	s15, [r3]
 802b9d6:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b9da:	ece3 7a01 	vstmia	r3!, {s15}
 802b9de:	4293      	cmp	r3, r2
 802b9e0:	d1f7      	bne.n	802b9d2 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802b9e2:	4770      	bx	lr

0802b9e4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 802b9e4:	f100 0310 	add.w	r3, r0, #16
 802b9e8:	f100 0220 	add.w	r2, r0, #32
 802b9ec:	edd3 7a00 	vldr	s15, [r3]
 802b9f0:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b9f4:	ece3 7a01 	vstmia	r3!, {s15}
 802b9f8:	4293      	cmp	r3, r2
 802b9fa:	d1f7      	bne.n	802b9ec <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 802b9fc:	4770      	bx	lr

0802b9fe <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802b9fe:	f100 0320 	add.w	r3, r0, #32
 802ba02:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802ba06:	edd3 7a00 	vldr	s15, [r3]
 802ba0a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802ba0e:	ece3 7a01 	vstmia	r3!, {s15}
 802ba12:	4293      	cmp	r3, r2
 802ba14:	d1f7      	bne.n	802ba06 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802ba16:	4770      	bx	lr

0802ba18 <arm_std_f32>:
 802ba18:	2901      	cmp	r1, #1
 802ba1a:	d065      	beq.n	802bae8 <arm_std_f32+0xd0>
 802ba1c:	b530      	push	{r4, r5, lr}
 802ba1e:	eddf 6a37 	vldr	s13, [pc, #220]	; 802bafc <arm_std_f32+0xe4>
 802ba22:	088d      	lsrs	r5, r1, #2
 802ba24:	b083      	sub	sp, #12
 802ba26:	eef0 7a66 	vmov.f32	s15, s13
 802ba2a:	d028      	beq.n	802ba7e <arm_std_f32+0x66>
 802ba2c:	f100 0310 	add.w	r3, r0, #16
 802ba30:	462c      	mov	r4, r5
 802ba32:	ed13 7a04 	vldr	s14, [r3, #-16]
 802ba36:	ed53 4a03 	vldr	s9, [r3, #-12]
 802ba3a:	ed13 5a02 	vldr	s10, [r3, #-8]
 802ba3e:	ed13 6a01 	vldr	s12, [r3, #-4]
 802ba42:	ee27 0a07 	vmul.f32	s0, s14, s14
 802ba46:	ee64 5aa4 	vmul.f32	s11, s9, s9
 802ba4a:	ee37 7a87 	vadd.f32	s14, s15, s14
 802ba4e:	ee70 6a26 	vadd.f32	s13, s0, s13
 802ba52:	ee77 7a24 	vadd.f32	s15, s14, s9
 802ba56:	ee75 6aa6 	vadd.f32	s13, s11, s13
 802ba5a:	ee25 7a05 	vmul.f32	s14, s10, s10
 802ba5e:	ee77 7a85 	vadd.f32	s15, s15, s10
 802ba62:	ee77 6a26 	vadd.f32	s13, s14, s13
 802ba66:	ee26 7a06 	vmul.f32	s14, s12, s12
 802ba6a:	3c01      	subs	r4, #1
 802ba6c:	ee77 7a86 	vadd.f32	s15, s15, s12
 802ba70:	ee77 6a26 	vadd.f32	s13, s14, s13
 802ba74:	f103 0310 	add.w	r3, r3, #16
 802ba78:	d1db      	bne.n	802ba32 <arm_std_f32+0x1a>
 802ba7a:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 802ba7e:	f011 0303 	ands.w	r3, r1, #3
 802ba82:	d009      	beq.n	802ba98 <arm_std_f32+0x80>
 802ba84:	ecb0 7a01 	vldmia	r0!, {s14}
 802ba88:	ee27 6a07 	vmul.f32	s12, s14, s14
 802ba8c:	3b01      	subs	r3, #1
 802ba8e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ba92:	ee76 6a86 	vadd.f32	s13, s13, s12
 802ba96:	d1f5      	bne.n	802ba84 <arm_std_f32+0x6c>
 802ba98:	ee07 1a10 	vmov	s14, r1
 802ba9c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 802baa0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802baa4:	eec7 7a87 	vdiv.f32	s15, s15, s14
 802baa8:	ee37 0a40 	vsub.f32	s0, s14, s0
 802baac:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802bab0:	ee87 7a00 	vdiv.f32	s14, s14, s0
 802bab4:	eec6 6a80 	vdiv.f32	s13, s13, s0
 802bab8:	ee67 7a87 	vmul.f32	s15, s15, s14
 802babc:	ee76 7ae7 	vsub.f32	s15, s13, s15
 802bac0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802bac4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bac8:	da03      	bge.n	802bad2 <arm_std_f32+0xba>
 802baca:	2300      	movs	r3, #0
 802bacc:	6013      	str	r3, [r2, #0]
 802bace:	b003      	add	sp, #12
 802bad0:	bd30      	pop	{r4, r5, pc}
 802bad2:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802bad6:	eeb4 0a40 	vcmp.f32	s0, s0
 802bada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bade:	d106      	bne.n	802baee <arm_std_f32+0xd6>
 802bae0:	ed82 0a00 	vstr	s0, [r2]
 802bae4:	b003      	add	sp, #12
 802bae6:	bd30      	pop	{r4, r5, pc}
 802bae8:	2300      	movs	r3, #0
 802baea:	6013      	str	r3, [r2, #0]
 802baec:	4770      	bx	lr
 802baee:	eeb0 0a67 	vmov.f32	s0, s15
 802baf2:	9201      	str	r2, [sp, #4]
 802baf4:	f001 f98a 	bl	802ce0c <sqrtf>
 802baf8:	9a01      	ldr	r2, [sp, #4]
 802bafa:	e7f1      	b.n	802bae0 <arm_std_f32+0xc8>
 802bafc:	00000000 	.word	0x00000000

0802bb00 <arm_mean_f32>:
 802bb00:	b430      	push	{r4, r5}
 802bb02:	088d      	lsrs	r5, r1, #2
 802bb04:	eddf 7a17 	vldr	s15, [pc, #92]	; 802bb64 <arm_mean_f32+0x64>
 802bb08:	d018      	beq.n	802bb3c <arm_mean_f32+0x3c>
 802bb0a:	f100 0310 	add.w	r3, r0, #16
 802bb0e:	462c      	mov	r4, r5
 802bb10:	ed13 7a04 	vldr	s14, [r3, #-16]
 802bb14:	ed53 5a03 	vldr	s11, [r3, #-12]
 802bb18:	ed13 6a02 	vldr	s12, [r3, #-8]
 802bb1c:	ed53 6a01 	vldr	s13, [r3, #-4]
 802bb20:	ee37 7a87 	vadd.f32	s14, s15, s14
 802bb24:	3c01      	subs	r4, #1
 802bb26:	ee77 7a25 	vadd.f32	s15, s14, s11
 802bb2a:	f103 0310 	add.w	r3, r3, #16
 802bb2e:	ee77 7a86 	vadd.f32	s15, s15, s12
 802bb32:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802bb36:	d1eb      	bne.n	802bb10 <arm_mean_f32+0x10>
 802bb38:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 802bb3c:	f011 0303 	ands.w	r3, r1, #3
 802bb40:	d005      	beq.n	802bb4e <arm_mean_f32+0x4e>
 802bb42:	ecb0 7a01 	vldmia	r0!, {s14}
 802bb46:	3b01      	subs	r3, #1
 802bb48:	ee77 7a87 	vadd.f32	s15, s15, s14
 802bb4c:	d1f9      	bne.n	802bb42 <arm_mean_f32+0x42>
 802bb4e:	ee07 1a10 	vmov	s14, r1
 802bb52:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 802bb56:	bc30      	pop	{r4, r5}
 802bb58:	eec7 7a87 	vdiv.f32	s15, s15, s14
 802bb5c:	edc2 7a00 	vstr	s15, [r2]
 802bb60:	4770      	bx	lr
 802bb62:	bf00      	nop
 802bb64:	00000000 	.word	0x00000000

0802bb68 <arm_max_f32>:
 802bb68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bb6c:	1e4f      	subs	r7, r1, #1
 802bb6e:	ea5f 0897 	movs.w	r8, r7, lsr #2
 802bb72:	f100 0e04 	add.w	lr, r0, #4
 802bb76:	edd0 7a00 	vldr	s15, [r0]
 802bb7a:	d058      	beq.n	802bc2e <arm_max_f32+0xc6>
 802bb7c:	3014      	adds	r0, #20
 802bb7e:	46c4      	mov	ip, r8
 802bb80:	2604      	movs	r6, #4
 802bb82:	2400      	movs	r4, #0
 802bb84:	ed10 6a04 	vldr	s12, [r0, #-16]
 802bb88:	ed50 6a03 	vldr	s13, [r0, #-12]
 802bb8c:	ed10 7a02 	vldr	s14, [r0, #-8]
 802bb90:	ed50 5a01 	vldr	s11, [r0, #-4]
 802bb94:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802bb98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bb9c:	bfc8      	it	gt
 802bb9e:	eef0 7a46 	vmovgt.f32	s15, s12
 802bba2:	f1a6 0503 	sub.w	r5, r6, #3
 802bba6:	eef4 7ae6 	vcmpe.f32	s15, s13
 802bbaa:	bfc8      	it	gt
 802bbac:	462c      	movgt	r4, r5
 802bbae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bbb2:	bf48      	it	mi
 802bbb4:	eef0 7a66 	vmovmi.f32	s15, s13
 802bbb8:	f1a6 0502 	sub.w	r5, r6, #2
 802bbbc:	eef4 7ac7 	vcmpe.f32	s15, s14
 802bbc0:	bf48      	it	mi
 802bbc2:	462c      	movmi	r4, r5
 802bbc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bbc8:	bf48      	it	mi
 802bbca:	eef0 7a47 	vmovmi.f32	s15, s14
 802bbce:	f106 35ff 	add.w	r5, r6, #4294967295
 802bbd2:	eef4 7ae5 	vcmpe.f32	s15, s11
 802bbd6:	bf48      	it	mi
 802bbd8:	462c      	movmi	r4, r5
 802bbda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bbde:	bf48      	it	mi
 802bbe0:	4634      	movmi	r4, r6
 802bbe2:	bf48      	it	mi
 802bbe4:	eef0 7a65 	vmovmi.f32	s15, s11
 802bbe8:	f1bc 0c01 	subs.w	ip, ip, #1
 802bbec:	f106 0604 	add.w	r6, r6, #4
 802bbf0:	f100 0010 	add.w	r0, r0, #16
 802bbf4:	d1c6      	bne.n	802bb84 <arm_max_f32+0x1c>
 802bbf6:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802bbfa:	f017 0003 	ands.w	r0, r7, #3
 802bbfe:	d018      	beq.n	802bc32 <arm_max_f32+0xca>
 802bc00:	1a08      	subs	r0, r1, r0
 802bc02:	ecbe 7a01 	vldmia	lr!, {s14}
 802bc06:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802bc0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bc0e:	bfc8      	it	gt
 802bc10:	4604      	movgt	r4, r0
 802bc12:	f100 0001 	add.w	r0, r0, #1
 802bc16:	bfd8      	it	le
 802bc18:	eeb0 7a67 	vmovle.f32	s14, s15
 802bc1c:	4288      	cmp	r0, r1
 802bc1e:	eef0 7a47 	vmov.f32	s15, s14
 802bc22:	d1ee      	bne.n	802bc02 <arm_max_f32+0x9a>
 802bc24:	ed82 7a00 	vstr	s14, [r2]
 802bc28:	601c      	str	r4, [r3, #0]
 802bc2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bc2e:	4644      	mov	r4, r8
 802bc30:	e7e3      	b.n	802bbfa <arm_max_f32+0x92>
 802bc32:	eeb0 7a67 	vmov.f32	s14, s15
 802bc36:	e7f5      	b.n	802bc24 <arm_max_f32+0xbc>

0802bc38 <arm_rfft_fast_init_f32>:
 802bc38:	084b      	lsrs	r3, r1, #1
 802bc3a:	2b80      	cmp	r3, #128	; 0x80
 802bc3c:	b410      	push	{r4}
 802bc3e:	8201      	strh	r1, [r0, #16]
 802bc40:	8003      	strh	r3, [r0, #0]
 802bc42:	d047      	beq.n	802bcd4 <arm_rfft_fast_init_f32+0x9c>
 802bc44:	d917      	bls.n	802bc76 <arm_rfft_fast_init_f32+0x3e>
 802bc46:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802bc4a:	d03d      	beq.n	802bcc8 <arm_rfft_fast_init_f32+0x90>
 802bc4c:	d929      	bls.n	802bca2 <arm_rfft_fast_init_f32+0x6a>
 802bc4e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802bc52:	d020      	beq.n	802bc96 <arm_rfft_fast_init_f32+0x5e>
 802bc54:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802bc58:	d113      	bne.n	802bc82 <arm_rfft_fast_init_f32+0x4a>
 802bc5a:	4921      	ldr	r1, [pc, #132]	; (802bce0 <arm_rfft_fast_init_f32+0xa8>)
 802bc5c:	4a21      	ldr	r2, [pc, #132]	; (802bce4 <arm_rfft_fast_init_f32+0xac>)
 802bc5e:	4b22      	ldr	r3, [pc, #136]	; (802bce8 <arm_rfft_fast_init_f32+0xb0>)
 802bc60:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802bc64:	8184      	strh	r4, [r0, #12]
 802bc66:	6081      	str	r1, [r0, #8]
 802bc68:	6042      	str	r2, [r0, #4]
 802bc6a:	6143      	str	r3, [r0, #20]
 802bc6c:	2000      	movs	r0, #0
 802bc6e:	b240      	sxtb	r0, r0
 802bc70:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bc74:	4770      	bx	lr
 802bc76:	2b20      	cmp	r3, #32
 802bc78:	d01c      	beq.n	802bcb4 <arm_rfft_fast_init_f32+0x7c>
 802bc7a:	2b40      	cmp	r3, #64	; 0x40
 802bc7c:	d006      	beq.n	802bc8c <arm_rfft_fast_init_f32+0x54>
 802bc7e:	2b10      	cmp	r3, #16
 802bc80:	d01d      	beq.n	802bcbe <arm_rfft_fast_init_f32+0x86>
 802bc82:	20ff      	movs	r0, #255	; 0xff
 802bc84:	b240      	sxtb	r0, r0
 802bc86:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bc8a:	4770      	bx	lr
 802bc8c:	2438      	movs	r4, #56	; 0x38
 802bc8e:	4917      	ldr	r1, [pc, #92]	; (802bcec <arm_rfft_fast_init_f32+0xb4>)
 802bc90:	4a17      	ldr	r2, [pc, #92]	; (802bcf0 <arm_rfft_fast_init_f32+0xb8>)
 802bc92:	4b18      	ldr	r3, [pc, #96]	; (802bcf4 <arm_rfft_fast_init_f32+0xbc>)
 802bc94:	e7e6      	b.n	802bc64 <arm_rfft_fast_init_f32+0x2c>
 802bc96:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802bc9a:	4917      	ldr	r1, [pc, #92]	; (802bcf8 <arm_rfft_fast_init_f32+0xc0>)
 802bc9c:	4a17      	ldr	r2, [pc, #92]	; (802bcfc <arm_rfft_fast_init_f32+0xc4>)
 802bc9e:	4b18      	ldr	r3, [pc, #96]	; (802bd00 <arm_rfft_fast_init_f32+0xc8>)
 802bca0:	e7e0      	b.n	802bc64 <arm_rfft_fast_init_f32+0x2c>
 802bca2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802bca6:	d1ec      	bne.n	802bc82 <arm_rfft_fast_init_f32+0x4a>
 802bca8:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802bcac:	4915      	ldr	r1, [pc, #84]	; (802bd04 <arm_rfft_fast_init_f32+0xcc>)
 802bcae:	4a16      	ldr	r2, [pc, #88]	; (802bd08 <arm_rfft_fast_init_f32+0xd0>)
 802bcb0:	4b16      	ldr	r3, [pc, #88]	; (802bd0c <arm_rfft_fast_init_f32+0xd4>)
 802bcb2:	e7d7      	b.n	802bc64 <arm_rfft_fast_init_f32+0x2c>
 802bcb4:	2430      	movs	r4, #48	; 0x30
 802bcb6:	4916      	ldr	r1, [pc, #88]	; (802bd10 <arm_rfft_fast_init_f32+0xd8>)
 802bcb8:	4a16      	ldr	r2, [pc, #88]	; (802bd14 <arm_rfft_fast_init_f32+0xdc>)
 802bcba:	4b17      	ldr	r3, [pc, #92]	; (802bd18 <arm_rfft_fast_init_f32+0xe0>)
 802bcbc:	e7d2      	b.n	802bc64 <arm_rfft_fast_init_f32+0x2c>
 802bcbe:	2414      	movs	r4, #20
 802bcc0:	4916      	ldr	r1, [pc, #88]	; (802bd1c <arm_rfft_fast_init_f32+0xe4>)
 802bcc2:	4a17      	ldr	r2, [pc, #92]	; (802bd20 <arm_rfft_fast_init_f32+0xe8>)
 802bcc4:	4b17      	ldr	r3, [pc, #92]	; (802bd24 <arm_rfft_fast_init_f32+0xec>)
 802bcc6:	e7cd      	b.n	802bc64 <arm_rfft_fast_init_f32+0x2c>
 802bcc8:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802bccc:	4916      	ldr	r1, [pc, #88]	; (802bd28 <arm_rfft_fast_init_f32+0xf0>)
 802bcce:	4a17      	ldr	r2, [pc, #92]	; (802bd2c <arm_rfft_fast_init_f32+0xf4>)
 802bcd0:	4b17      	ldr	r3, [pc, #92]	; (802bd30 <arm_rfft_fast_init_f32+0xf8>)
 802bcd2:	e7c7      	b.n	802bc64 <arm_rfft_fast_init_f32+0x2c>
 802bcd4:	24d0      	movs	r4, #208	; 0xd0
 802bcd6:	4917      	ldr	r1, [pc, #92]	; (802bd34 <arm_rfft_fast_init_f32+0xfc>)
 802bcd8:	4a17      	ldr	r2, [pc, #92]	; (802bd38 <arm_rfft_fast_init_f32+0x100>)
 802bcda:	4b18      	ldr	r3, [pc, #96]	; (802bd3c <arm_rfft_fast_init_f32+0x104>)
 802bcdc:	e7c2      	b.n	802bc64 <arm_rfft_fast_init_f32+0x2c>
 802bcde:	bf00      	nop
 802bce0:	080413bc 	.word	0x080413bc
 802bce4:	080325b4 	.word	0x080325b4
 802bce8:	08038724 	.word	0x08038724
 802bcec:	080366b4 	.word	0x080366b4
 802bcf0:	0804317c 	.word	0x0804317c
 802bcf4:	0804566c 	.word	0x0804566c
 802bcf8:	0803f0a4 	.word	0x0803f0a4
 802bcfc:	0803cfa4 	.word	0x0803cfa4
 802bd00:	08036724 	.word	0x08036724
 802bd04:	080452fc 	.word	0x080452fc
 802bd08:	0803c724 	.word	0x0803c724
 802bd0c:	0804337c 	.word	0x0804337c
 802bd10:	0803ff5c 	.word	0x0803ff5c
 802bd14:	0803efa4 	.word	0x0803efa4
 802bd18:	080365b4 	.word	0x080365b4
 802bd1c:	0803feb4 	.word	0x0803feb4
 802bd20:	0803cf24 	.word	0x0803cf24
 802bd24:	0803fedc 	.word	0x0803fedc
 802bd28:	08043b7c 	.word	0x08043b7c
 802bd2c:	080403bc 	.word	0x080403bc
 802bd30:	08043efc 	.word	0x08043efc
 802bd34:	0804586c 	.word	0x0804586c
 802bd38:	0803ffbc 	.word	0x0803ffbc
 802bd3c:	08044efc 	.word	0x08044efc

0802bd40 <arm_rfft_fast_f32>:
 802bd40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bd44:	8a06      	ldrh	r6, [r0, #16]
 802bd46:	0876      	lsrs	r6, r6, #1
 802bd48:	4607      	mov	r7, r0
 802bd4a:	4615      	mov	r5, r2
 802bd4c:	8006      	strh	r6, [r0, #0]
 802bd4e:	460c      	mov	r4, r1
 802bd50:	2b00      	cmp	r3, #0
 802bd52:	d15c      	bne.n	802be0e <arm_rfft_fast_f32+0xce>
 802bd54:	461a      	mov	r2, r3
 802bd56:	2301      	movs	r3, #1
 802bd58:	f000 fbe6 	bl	802c528 <arm_cfft_f32>
 802bd5c:	edd4 7a00 	vldr	s15, [r4]
 802bd60:	ed94 7a01 	vldr	s14, [r4, #4]
 802bd64:	883e      	ldrh	r6, [r7, #0]
 802bd66:	6978      	ldr	r0, [r7, #20]
 802bd68:	ee37 7a07 	vadd.f32	s14, s14, s14
 802bd6c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802bd70:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802bd74:	ee77 6a87 	vadd.f32	s13, s15, s14
 802bd78:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802bd7c:	3e01      	subs	r6, #1
 802bd7e:	ee26 7aa3 	vmul.f32	s14, s13, s7
 802bd82:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bd86:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802bd8a:	ed85 7a00 	vstr	s14, [r5]
 802bd8e:	edc5 7a01 	vstr	s15, [r5, #4]
 802bd92:	3010      	adds	r0, #16
 802bd94:	f105 0210 	add.w	r2, r5, #16
 802bd98:	3b08      	subs	r3, #8
 802bd9a:	f104 0110 	add.w	r1, r4, #16
 802bd9e:	ed51 4a02 	vldr	s9, [r1, #-8]
 802bda2:	ed93 5a02 	vldr	s10, [r3, #8]
 802bda6:	ed11 7a01 	vldr	s14, [r1, #-4]
 802bdaa:	ed10 6a02 	vldr	s12, [r0, #-8]
 802bdae:	edd3 5a03 	vldr	s11, [r3, #12]
 802bdb2:	ed50 6a01 	vldr	s13, [r0, #-4]
 802bdb6:	ee75 7a64 	vsub.f32	s15, s10, s9
 802bdba:	ee35 4a87 	vadd.f32	s8, s11, s14
 802bdbe:	ee35 5a24 	vadd.f32	s10, s10, s9
 802bdc2:	ee77 5a65 	vsub.f32	s11, s14, s11
 802bdc6:	ee66 4a27 	vmul.f32	s9, s12, s15
 802bdca:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802bdce:	ee34 5a85 	vadd.f32	s10, s9, s10
 802bdd2:	ee26 6a04 	vmul.f32	s12, s12, s8
 802bdd6:	ee66 6a84 	vmul.f32	s13, s13, s8
 802bdda:	ee77 7a25 	vadd.f32	s15, s14, s11
 802bdde:	ee76 6a85 	vadd.f32	s13, s13, s10
 802bde2:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bde6:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802bdea:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bdee:	3e01      	subs	r6, #1
 802bdf0:	ed42 6a02 	vstr	s13, [r2, #-8]
 802bdf4:	ed42 7a01 	vstr	s15, [r2, #-4]
 802bdf8:	f1a3 0308 	sub.w	r3, r3, #8
 802bdfc:	f101 0108 	add.w	r1, r1, #8
 802be00:	f100 0008 	add.w	r0, r0, #8
 802be04:	f102 0208 	add.w	r2, r2, #8
 802be08:	d1c9      	bne.n	802bd9e <arm_rfft_fast_f32+0x5e>
 802be0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802be0e:	edd1 7a00 	vldr	s15, [r1]
 802be12:	edd1 6a01 	vldr	s13, [r1, #4]
 802be16:	6941      	ldr	r1, [r0, #20]
 802be18:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802be1c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802be20:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802be24:	ee27 7a23 	vmul.f32	s14, s14, s7
 802be28:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802be2c:	3e01      	subs	r6, #1
 802be2e:	ed82 7a00 	vstr	s14, [r2]
 802be32:	edc2 7a01 	vstr	s15, [r2, #4]
 802be36:	00f0      	lsls	r0, r6, #3
 802be38:	b3ee      	cbz	r6, 802beb6 <arm_rfft_fast_f32+0x176>
 802be3a:	3808      	subs	r0, #8
 802be3c:	f101 0e10 	add.w	lr, r1, #16
 802be40:	4420      	add	r0, r4
 802be42:	f104 0110 	add.w	r1, r4, #16
 802be46:	f102 0c10 	add.w	ip, r2, #16
 802be4a:	ed90 7a02 	vldr	s14, [r0, #8]
 802be4e:	ed51 6a02 	vldr	s13, [r1, #-8]
 802be52:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802be56:	ed90 4a03 	vldr	s8, [r0, #12]
 802be5a:	ed11 5a01 	vldr	s10, [r1, #-4]
 802be5e:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802be62:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802be66:	ee74 4a05 	vadd.f32	s9, s8, s10
 802be6a:	ee26 3a27 	vmul.f32	s6, s12, s15
 802be6e:	ee77 6a26 	vadd.f32	s13, s14, s13
 802be72:	ee35 5a44 	vsub.f32	s10, s10, s8
 802be76:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802be7a:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802be7e:	ee77 7a05 	vadd.f32	s15, s14, s10
 802be82:	ee26 6a24 	vmul.f32	s12, s12, s9
 802be86:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802be8a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802be8e:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802be92:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802be96:	ee27 7a23 	vmul.f32	s14, s14, s7
 802be9a:	3e01      	subs	r6, #1
 802be9c:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802bea0:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802bea4:	f1a0 0008 	sub.w	r0, r0, #8
 802bea8:	f101 0108 	add.w	r1, r1, #8
 802beac:	f10e 0e08 	add.w	lr, lr, #8
 802beb0:	f10c 0c08 	add.w	ip, ip, #8
 802beb4:	d1c9      	bne.n	802be4a <arm_rfft_fast_f32+0x10a>
 802beb6:	4638      	mov	r0, r7
 802beb8:	4629      	mov	r1, r5
 802beba:	461a      	mov	r2, r3
 802bebc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802bec0:	2301      	movs	r3, #1
 802bec2:	f000 bb31 	b.w	802c528 <arm_cfft_f32>
 802bec6:	bf00      	nop

0802bec8 <arm_cfft_radix8by2_f32>:
 802bec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802becc:	ed2d 8b08 	vpush	{d8-d11}
 802bed0:	f8b0 e000 	ldrh.w	lr, [r0]
 802bed4:	6842      	ldr	r2, [r0, #4]
 802bed6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802beda:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802bede:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802bee2:	4607      	mov	r7, r0
 802bee4:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802bee8:	f000 80af 	beq.w	802c04a <arm_cfft_radix8by2_f32+0x182>
 802beec:	3310      	adds	r3, #16
 802beee:	18ce      	adds	r6, r1, r3
 802bef0:	3210      	adds	r2, #16
 802bef2:	4443      	add	r3, r8
 802bef4:	f101 0510 	add.w	r5, r1, #16
 802bef8:	f108 0410 	add.w	r4, r8, #16
 802befc:	ed54 1a04 	vldr	s3, [r4, #-16]
 802bf00:	ed13 4a04 	vldr	s8, [r3, #-16]
 802bf04:	ed53 3a03 	vldr	s7, [r3, #-12]
 802bf08:	ed53 5a02 	vldr	s11, [r3, #-8]
 802bf0c:	ed13 5a01 	vldr	s10, [r3, #-4]
 802bf10:	ed54 6a03 	vldr	s13, [r4, #-12]
 802bf14:	ed14 0a02 	vldr	s0, [r4, #-8]
 802bf18:	ed16 2a04 	vldr	s4, [r6, #-16]
 802bf1c:	ed56 2a03 	vldr	s5, [r6, #-12]
 802bf20:	ed15 6a03 	vldr	s12, [r5, #-12]
 802bf24:	ed15 7a01 	vldr	s14, [r5, #-4]
 802bf28:	ed15 3a04 	vldr	s6, [r5, #-16]
 802bf2c:	ed54 7a01 	vldr	s15, [r4, #-4]
 802bf30:	ed56 0a02 	vldr	s1, [r6, #-8]
 802bf34:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bf38:	ed55 4a02 	vldr	s9, [r5, #-8]
 802bf3c:	ee73 ba21 	vadd.f32	s23, s6, s3
 802bf40:	ee36 ba26 	vadd.f32	s22, s12, s13
 802bf44:	ee37 aa27 	vadd.f32	s20, s14, s15
 802bf48:	ee72 9a04 	vadd.f32	s19, s4, s8
 802bf4c:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802bf50:	ee31 8a05 	vadd.f32	s16, s2, s10
 802bf54:	ee74 aa80 	vadd.f32	s21, s9, s0
 802bf58:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802bf5c:	ed45 ba04 	vstr	s23, [r5, #-16]
 802bf60:	ed05 ba03 	vstr	s22, [r5, #-12]
 802bf64:	ed45 aa02 	vstr	s21, [r5, #-8]
 802bf68:	ed05 aa01 	vstr	s20, [r5, #-4]
 802bf6c:	ed06 8a01 	vstr	s16, [r6, #-4]
 802bf70:	ed46 9a04 	vstr	s19, [r6, #-16]
 802bf74:	ed06 9a03 	vstr	s18, [r6, #-12]
 802bf78:	ed46 8a02 	vstr	s17, [r6, #-8]
 802bf7c:	ee76 6a66 	vsub.f32	s13, s12, s13
 802bf80:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802bf84:	ed12 6a03 	vldr	s12, [r2, #-12]
 802bf88:	ed52 2a04 	vldr	s5, [r2, #-16]
 802bf8c:	ee33 3a61 	vsub.f32	s6, s6, s3
 802bf90:	ee34 4a42 	vsub.f32	s8, s8, s4
 802bf94:	ee26 8a86 	vmul.f32	s16, s13, s12
 802bf98:	ee24 2a06 	vmul.f32	s4, s8, s12
 802bf9c:	ee63 1a22 	vmul.f32	s3, s6, s5
 802bfa0:	ee24 4a22 	vmul.f32	s8, s8, s5
 802bfa4:	ee23 3a06 	vmul.f32	s6, s6, s12
 802bfa8:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802bfac:	ee23 6a86 	vmul.f32	s12, s7, s12
 802bfb0:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802bfb4:	ee36 6a04 	vadd.f32	s12, s12, s8
 802bfb8:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bfbc:	ee72 3a63 	vsub.f32	s7, s4, s7
 802bfc0:	ee71 2a88 	vadd.f32	s5, s3, s16
 802bfc4:	ed44 6a03 	vstr	s13, [r4, #-12]
 802bfc8:	ed44 2a04 	vstr	s5, [r4, #-16]
 802bfcc:	ed43 3a04 	vstr	s7, [r3, #-16]
 802bfd0:	ed03 6a03 	vstr	s12, [r3, #-12]
 802bfd4:	ee77 7a67 	vsub.f32	s15, s14, s15
 802bfd8:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802bfdc:	ed12 7a01 	vldr	s14, [r2, #-4]
 802bfe0:	ed52 5a02 	vldr	s11, [r2, #-8]
 802bfe4:	ee35 6a41 	vsub.f32	s12, s10, s2
 802bfe8:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802bfec:	ee67 3a87 	vmul.f32	s7, s15, s14
 802bff0:	ee26 5a87 	vmul.f32	s10, s13, s14
 802bff4:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802bff8:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802bffc:	ee64 4a87 	vmul.f32	s9, s9, s14
 802c000:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802c004:	ee26 7a07 	vmul.f32	s14, s12, s14
 802c008:	ee26 6a25 	vmul.f32	s12, s12, s11
 802c00c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802c010:	ee74 5a23 	vadd.f32	s11, s8, s7
 802c014:	ee35 6a46 	vsub.f32	s12, s10, s12
 802c018:	ee37 7a26 	vadd.f32	s14, s14, s13
 802c01c:	f1be 0e01 	subs.w	lr, lr, #1
 802c020:	ed44 5a02 	vstr	s11, [r4, #-8]
 802c024:	f105 0510 	add.w	r5, r5, #16
 802c028:	ed44 7a01 	vstr	s15, [r4, #-4]
 802c02c:	f106 0610 	add.w	r6, r6, #16
 802c030:	ed03 6a02 	vstr	s12, [r3, #-8]
 802c034:	ed03 7a01 	vstr	s14, [r3, #-4]
 802c038:	f102 0210 	add.w	r2, r2, #16
 802c03c:	f104 0410 	add.w	r4, r4, #16
 802c040:	f103 0310 	add.w	r3, r3, #16
 802c044:	f47f af5a 	bne.w	802befc <arm_cfft_radix8by2_f32+0x34>
 802c048:	687a      	ldr	r2, [r7, #4]
 802c04a:	fa1f f48c 	uxth.w	r4, ip
 802c04e:	4608      	mov	r0, r1
 802c050:	2302      	movs	r3, #2
 802c052:	4621      	mov	r1, r4
 802c054:	f000 fbca 	bl	802c7ec <arm_radix8_butterfly_f32>
 802c058:	ecbd 8b08 	vpop	{d8-d11}
 802c05c:	4640      	mov	r0, r8
 802c05e:	4621      	mov	r1, r4
 802c060:	687a      	ldr	r2, [r7, #4]
 802c062:	2302      	movs	r3, #2
 802c064:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802c068:	f000 bbc0 	b.w	802c7ec <arm_radix8_butterfly_f32>

0802c06c <arm_cfft_radix8by4_f32>:
 802c06c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c070:	ed2d 8b0a 	vpush	{d8-d12}
 802c074:	8802      	ldrh	r2, [r0, #0]
 802c076:	ed91 6a00 	vldr	s12, [r1]
 802c07a:	b08f      	sub	sp, #60	; 0x3c
 802c07c:	460f      	mov	r7, r1
 802c07e:	0852      	lsrs	r2, r2, #1
 802c080:	0093      	lsls	r3, r2, #2
 802c082:	900c      	str	r0, [sp, #48]	; 0x30
 802c084:	9103      	str	r1, [sp, #12]
 802c086:	6841      	ldr	r1, [r0, #4]
 802c088:	ed97 7a01 	vldr	s14, [r7, #4]
 802c08c:	4638      	mov	r0, r7
 802c08e:	4418      	add	r0, r3
 802c090:	4606      	mov	r6, r0
 802c092:	9009      	str	r0, [sp, #36]	; 0x24
 802c094:	4418      	add	r0, r3
 802c096:	edd0 6a00 	vldr	s13, [r0]
 802c09a:	edd6 3a00 	vldr	s7, [r6]
 802c09e:	edd6 2a01 	vldr	s5, [r6, #4]
 802c0a2:	edd0 7a01 	vldr	s15, [r0, #4]
 802c0a6:	900a      	str	r0, [sp, #40]	; 0x28
 802c0a8:	ee76 5a26 	vadd.f32	s11, s12, s13
 802c0ac:	4604      	mov	r4, r0
 802c0ae:	4625      	mov	r5, r4
 802c0b0:	441c      	add	r4, r3
 802c0b2:	ed94 4a00 	vldr	s8, [r4]
 802c0b6:	ed94 5a01 	vldr	s10, [r4, #4]
 802c0ba:	9401      	str	r4, [sp, #4]
 802c0bc:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802c0c0:	4630      	mov	r0, r6
 802c0c2:	ee74 4a24 	vadd.f32	s9, s8, s9
 802c0c6:	463e      	mov	r6, r7
 802c0c8:	ee14 ea90 	vmov	lr, s9
 802c0cc:	ee76 6a66 	vsub.f32	s13, s12, s13
 802c0d0:	f846 eb08 	str.w	lr, [r6], #8
 802c0d4:	ee37 6a27 	vadd.f32	s12, s14, s15
 802c0d8:	edd0 4a01 	vldr	s9, [r0, #4]
 802c0dc:	9604      	str	r6, [sp, #16]
 802c0de:	ee77 7a67 	vsub.f32	s15, s14, s15
 802c0e2:	9e01      	ldr	r6, [sp, #4]
 802c0e4:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802c0e8:	ed96 2a01 	vldr	s4, [r6, #4]
 802c0ec:	ee36 7a24 	vadd.f32	s14, s12, s9
 802c0f0:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802c0f4:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802c0f8:	ee36 6a62 	vsub.f32	s12, s12, s5
 802c0fc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802c100:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802c104:	ee73 3a45 	vsub.f32	s7, s6, s10
 802c108:	4604      	mov	r4, r0
 802c10a:	ee36 6a45 	vsub.f32	s12, s12, s10
 802c10e:	ee75 6a26 	vadd.f32	s13, s10, s13
 802c112:	46a3      	mov	fp, r4
 802c114:	ee37 7a02 	vadd.f32	s14, s14, s4
 802c118:	ee34 5a84 	vadd.f32	s10, s9, s8
 802c11c:	ee13 8a90 	vmov	r8, s7
 802c120:	46a4      	mov	ip, r4
 802c122:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802c126:	ed87 7a01 	vstr	s14, [r7, #4]
 802c12a:	f84b 8b08 	str.w	r8, [fp], #8
 802c12e:	f1ac 0704 	sub.w	r7, ip, #4
 802c132:	ed8c 5a01 	vstr	s10, [ip, #4]
 802c136:	f101 0c08 	add.w	ip, r1, #8
 802c13a:	462c      	mov	r4, r5
 802c13c:	f8cd c014 	str.w	ip, [sp, #20]
 802c140:	ee15 ca90 	vmov	ip, s11
 802c144:	f844 cb08 	str.w	ip, [r4], #8
 802c148:	9407      	str	r4, [sp, #28]
 802c14a:	f101 0410 	add.w	r4, r1, #16
 802c14e:	ed85 6a01 	vstr	s12, [r5, #4]
 802c152:	0852      	lsrs	r2, r2, #1
 802c154:	9402      	str	r4, [sp, #8]
 802c156:	462c      	mov	r4, r5
 802c158:	f101 0518 	add.w	r5, r1, #24
 802c15c:	920b      	str	r2, [sp, #44]	; 0x2c
 802c15e:	46b2      	mov	sl, r6
 802c160:	9506      	str	r5, [sp, #24]
 802c162:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802c166:	3a02      	subs	r2, #2
 802c168:	ee16 5a90 	vmov	r5, s13
 802c16c:	46b6      	mov	lr, r6
 802c16e:	4630      	mov	r0, r6
 802c170:	0852      	lsrs	r2, r2, #1
 802c172:	f84a 5b08 	str.w	r5, [sl], #8
 802c176:	f1a0 0604 	sub.w	r6, r0, #4
 802c17a:	edce 7a01 	vstr	s15, [lr, #4]
 802c17e:	9208      	str	r2, [sp, #32]
 802c180:	f000 8130 	beq.w	802c3e4 <arm_cfft_radix8by4_f32+0x378>
 802c184:	4691      	mov	r9, r2
 802c186:	9a03      	ldr	r2, [sp, #12]
 802c188:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802c18c:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802c190:	3b08      	subs	r3, #8
 802c192:	f102 0510 	add.w	r5, r2, #16
 802c196:	f101 0c20 	add.w	ip, r1, #32
 802c19a:	f1a4 020c 	sub.w	r2, r4, #12
 802c19e:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802c1a2:	4433      	add	r3, r6
 802c1a4:	3410      	adds	r4, #16
 802c1a6:	4650      	mov	r0, sl
 802c1a8:	4659      	mov	r1, fp
 802c1aa:	ed55 3a02 	vldr	s7, [r5, #-8]
 802c1ae:	ed14 5a02 	vldr	s10, [r4, #-8]
 802c1b2:	ed91 7a00 	vldr	s14, [r1]
 802c1b6:	edd0 7a00 	vldr	s15, [r0]
 802c1ba:	ed15 4a01 	vldr	s8, [r5, #-4]
 802c1be:	ed54 5a01 	vldr	s11, [r4, #-4]
 802c1c2:	edd0 6a01 	vldr	s13, [r0, #4]
 802c1c6:	ed91 6a01 	vldr	s12, [r1, #4]
 802c1ca:	ee33 8a85 	vadd.f32	s16, s7, s10
 802c1ce:	ee34 0a25 	vadd.f32	s0, s8, s11
 802c1d2:	ee78 4a07 	vadd.f32	s9, s16, s14
 802c1d6:	ee74 5a65 	vsub.f32	s11, s8, s11
 802c1da:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802c1de:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802c1e2:	ed45 4a02 	vstr	s9, [r5, #-8]
 802c1e6:	edd1 4a01 	vldr	s9, [r1, #4]
 802c1ea:	ed90 4a01 	vldr	s8, [r0, #4]
 802c1ee:	ee70 4a24 	vadd.f32	s9, s0, s9
 802c1f2:	ee76 aa05 	vadd.f32	s21, s12, s10
 802c1f6:	ee74 4a84 	vadd.f32	s9, s9, s8
 802c1fa:	ee35 aac7 	vsub.f32	s20, s11, s14
 802c1fe:	ed45 4a01 	vstr	s9, [r5, #-4]
 802c202:	edd6 1a00 	vldr	s3, [r6]
 802c206:	edd7 0a00 	vldr	s1, [r7]
 802c20a:	ed92 4a02 	vldr	s8, [r2, #8]
 802c20e:	edd3 3a02 	vldr	s7, [r3, #8]
 802c212:	ed93 2a01 	vldr	s4, [r3, #4]
 802c216:	ed16 1a01 	vldr	s2, [r6, #-4]
 802c21a:	edd2 2a01 	vldr	s5, [r2, #4]
 802c21e:	ed57 9a01 	vldr	s19, [r7, #-4]
 802c222:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802c226:	ee39 3a81 	vadd.f32	s6, s19, s2
 802c22a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802c22e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802c232:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802c236:	ee7a aae6 	vsub.f32	s21, s21, s13
 802c23a:	ee18 aa90 	vmov	sl, s17
 802c23e:	f847 a908 	str.w	sl, [r7], #-8
 802c242:	edd2 8a01 	vldr	s17, [r2, #4]
 802c246:	ed93 9a01 	vldr	s18, [r3, #4]
 802c24a:	ee73 8a28 	vadd.f32	s17, s6, s17
 802c24e:	ee3a aa27 	vadd.f32	s20, s20, s15
 802c252:	ee78 8a89 	vadd.f32	s17, s17, s18
 802c256:	ee74 0a63 	vsub.f32	s1, s8, s7
 802c25a:	edc7 8a01 	vstr	s17, [r7, #4]
 802c25e:	ed18 ba02 	vldr	s22, [r8, #-8]
 802c262:	ed58 8a01 	vldr	s17, [r8, #-4]
 802c266:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802c26a:	ee6a ba28 	vmul.f32	s23, s20, s17
 802c26e:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802c272:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802c276:	ee30 9a81 	vadd.f32	s18, s1, s2
 802c27a:	ee79 9a82 	vadd.f32	s19, s19, s4
 802c27e:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802c282:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802c286:	ee69 baa8 	vmul.f32	s23, s19, s17
 802c28a:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802c28e:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802c292:	ee69 8a28 	vmul.f32	s17, s18, s17
 802c296:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802c29a:	ee1c aa10 	vmov	sl, s24
 802c29e:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802c2a2:	f841 ab08 	str.w	sl, [r1], #8
 802c2a6:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802c2aa:	ee3b bacb 	vsub.f32	s22, s23, s22
 802c2ae:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802c2b2:	ee33 3a62 	vsub.f32	s6, s6, s5
 802c2b6:	ed01 aa01 	vstr	s20, [r1, #-4]
 802c2ba:	edc2 8a01 	vstr	s17, [r2, #4]
 802c2be:	ed82 ba02 	vstr	s22, [r2, #8]
 802c2c2:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802c2c6:	ee74 3a63 	vsub.f32	s7, s8, s7
 802c2ca:	ee38 8a47 	vsub.f32	s16, s16, s14
 802c2ce:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802c2d2:	ee30 0a46 	vsub.f32	s0, s0, s12
 802c2d6:	ee33 3a42 	vsub.f32	s6, s6, s4
 802c2da:	ee38 8a67 	vsub.f32	s16, s16, s15
 802c2de:	ee30 0a66 	vsub.f32	s0, s0, s13
 802c2e2:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802c2e6:	ee63 8a04 	vmul.f32	s17, s6, s8
 802c2ea:	ee28 aa24 	vmul.f32	s20, s16, s9
 802c2ee:	ee60 9a04 	vmul.f32	s19, s0, s8
 802c2f2:	ee28 8a04 	vmul.f32	s16, s16, s8
 802c2f6:	ee20 0a24 	vmul.f32	s0, s0, s9
 802c2fa:	ee63 3a84 	vmul.f32	s7, s7, s8
 802c2fe:	ee39 4a68 	vsub.f32	s8, s18, s17
 802c302:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802c306:	ee14 aa10 	vmov	sl, s8
 802c30a:	ee30 0a48 	vsub.f32	s0, s0, s16
 802c30e:	ee63 4a24 	vmul.f32	s9, s6, s9
 802c312:	ed44 9a02 	vstr	s19, [r4, #-8]
 802c316:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802c31a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802c31e:	f846 a908 	str.w	sl, [r6], #-8
 802c322:	ee35 6a46 	vsub.f32	s12, s10, s12
 802c326:	ee35 7a87 	vadd.f32	s14, s11, s14
 802c32a:	edc6 3a01 	vstr	s7, [r6, #4]
 802c32e:	ee76 6a86 	vadd.f32	s13, s13, s12
 802c332:	ee77 7a67 	vsub.f32	s15, s14, s15
 802c336:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802c33a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802c33e:	ee67 5a86 	vmul.f32	s11, s15, s12
 802c342:	ee26 5a87 	vmul.f32	s10, s13, s14
 802c346:	ee72 2a62 	vsub.f32	s5, s4, s5
 802c34a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c34e:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802c352:	ee75 5a25 	vadd.f32	s11, s10, s11
 802c356:	ee62 0a86 	vmul.f32	s1, s5, s12
 802c35a:	ee66 6a86 	vmul.f32	s13, s13, s12
 802c35e:	ee67 7a87 	vmul.f32	s15, s15, s14
 802c362:	ee21 6a06 	vmul.f32	s12, s2, s12
 802c366:	ee62 2a87 	vmul.f32	s5, s5, s14
 802c36a:	ee21 1a07 	vmul.f32	s2, s2, s14
 802c36e:	ee15 aa90 	vmov	sl, s11
 802c372:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802c376:	f840 ab08 	str.w	sl, [r0], #8
 802c37a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c37e:	ee76 2a22 	vadd.f32	s5, s12, s5
 802c382:	f1b9 0901 	subs.w	r9, r9, #1
 802c386:	ed40 7a01 	vstr	s15, [r0, #-4]
 802c38a:	f105 0508 	add.w	r5, r5, #8
 802c38e:	ed83 1a02 	vstr	s2, [r3, #8]
 802c392:	edc3 2a01 	vstr	s5, [r3, #4]
 802c396:	f108 0808 	add.w	r8, r8, #8
 802c39a:	f1a2 0208 	sub.w	r2, r2, #8
 802c39e:	f10c 0c10 	add.w	ip, ip, #16
 802c3a2:	f104 0408 	add.w	r4, r4, #8
 802c3a6:	f10e 0e18 	add.w	lr, lr, #24
 802c3aa:	f1a3 0308 	sub.w	r3, r3, #8
 802c3ae:	f47f aefc 	bne.w	802c1aa <arm_cfft_radix8by4_f32+0x13e>
 802c3b2:	9908      	ldr	r1, [sp, #32]
 802c3b4:	9802      	ldr	r0, [sp, #8]
 802c3b6:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802c3ba:	00cb      	lsls	r3, r1, #3
 802c3bc:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802c3c0:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802c3c4:	9102      	str	r1, [sp, #8]
 802c3c6:	9904      	ldr	r1, [sp, #16]
 802c3c8:	4419      	add	r1, r3
 802c3ca:	9104      	str	r1, [sp, #16]
 802c3cc:	9905      	ldr	r1, [sp, #20]
 802c3ce:	4419      	add	r1, r3
 802c3d0:	9105      	str	r1, [sp, #20]
 802c3d2:	9907      	ldr	r1, [sp, #28]
 802c3d4:	449b      	add	fp, r3
 802c3d6:	4419      	add	r1, r3
 802c3d8:	449a      	add	sl, r3
 802c3da:	9b06      	ldr	r3, [sp, #24]
 802c3dc:	9107      	str	r1, [sp, #28]
 802c3de:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802c3e2:	9306      	str	r3, [sp, #24]
 802c3e4:	9a04      	ldr	r2, [sp, #16]
 802c3e6:	9807      	ldr	r0, [sp, #28]
 802c3e8:	edd2 3a00 	vldr	s7, [r2]
 802c3ec:	ed90 4a00 	vldr	s8, [r0]
 802c3f0:	eddb 7a00 	vldr	s15, [fp]
 802c3f4:	ed9a 3a00 	vldr	s6, [sl]
 802c3f8:	edd2 4a01 	vldr	s9, [r2, #4]
 802c3fc:	ed90 7a01 	vldr	s14, [r0, #4]
 802c400:	ed9b 2a01 	vldr	s4, [fp, #4]
 802c404:	edda 5a01 	vldr	s11, [sl, #4]
 802c408:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802c40c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802c40e:	ee73 6a84 	vadd.f32	s13, s7, s8
 802c412:	ee34 6a87 	vadd.f32	s12, s9, s14
 802c416:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802c41a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802c41e:	ee33 5a05 	vadd.f32	s10, s6, s10
 802c422:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802c426:	ed82 5a00 	vstr	s10, [r2]
 802c42a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802c42e:	edda 4a01 	vldr	s9, [sl, #4]
 802c432:	ee36 5a05 	vadd.f32	s10, s12, s10
 802c436:	ee72 3a04 	vadd.f32	s7, s4, s8
 802c43a:	ee35 5a24 	vadd.f32	s10, s10, s9
 802c43e:	ee77 4a67 	vsub.f32	s9, s14, s15
 802c442:	ed82 5a01 	vstr	s10, [r2, #4]
 802c446:	9a05      	ldr	r2, [sp, #20]
 802c448:	ee34 5a83 	vadd.f32	s10, s9, s6
 802c44c:	edd2 1a00 	vldr	s3, [r2]
 802c450:	edd2 2a01 	vldr	s5, [r2, #4]
 802c454:	9a02      	ldr	r2, [sp, #8]
 802c456:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802c45a:	ee36 6a42 	vsub.f32	s12, s12, s4
 802c45e:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802c462:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802c466:	ee65 2a22 	vmul.f32	s5, s10, s5
 802c46a:	ee25 5a21 	vmul.f32	s10, s10, s3
 802c46e:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802c472:	ee35 5a63 	vsub.f32	s10, s10, s7
 802c476:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802c47a:	edcb 2a00 	vstr	s5, [fp]
 802c47e:	ed8b 5a01 	vstr	s10, [fp, #4]
 802c482:	edd2 3a01 	vldr	s7, [r2, #4]
 802c486:	ed92 5a00 	vldr	s10, [r2]
 802c48a:	9a06      	ldr	r2, [sp, #24]
 802c48c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802c490:	ee36 6a65 	vsub.f32	s12, s12, s11
 802c494:	ee66 4a85 	vmul.f32	s9, s13, s10
 802c498:	ee26 5a05 	vmul.f32	s10, s12, s10
 802c49c:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802c4a0:	ee26 6a23 	vmul.f32	s12, s12, s7
 802c4a4:	ee75 6a66 	vsub.f32	s13, s10, s13
 802c4a8:	ee34 6a86 	vadd.f32	s12, s9, s12
 802c4ac:	ee34 4a42 	vsub.f32	s8, s8, s4
 802c4b0:	ee37 7a27 	vadd.f32	s14, s14, s15
 802c4b4:	edc0 6a01 	vstr	s13, [r0, #4]
 802c4b8:	ed80 6a00 	vstr	s12, [r0]
 802c4bc:	ed92 6a01 	vldr	s12, [r2, #4]
 802c4c0:	9803      	ldr	r0, [sp, #12]
 802c4c2:	ee77 7a43 	vsub.f32	s15, s14, s6
 802c4c6:	ee75 5a84 	vadd.f32	s11, s11, s8
 802c4ca:	ed92 7a00 	vldr	s14, [r2]
 802c4ce:	ee65 6a87 	vmul.f32	s13, s11, s14
 802c4d2:	ee27 7a87 	vmul.f32	s14, s15, s14
 802c4d6:	ee65 5a86 	vmul.f32	s11, s11, s12
 802c4da:	ee67 7a86 	vmul.f32	s15, s15, s12
 802c4de:	ee77 5a65 	vsub.f32	s11, s14, s11
 802c4e2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802c4e6:	edca 5a01 	vstr	s11, [sl, #4]
 802c4ea:	edca 7a00 	vstr	s15, [sl]
 802c4ee:	6872      	ldr	r2, [r6, #4]
 802c4f0:	4621      	mov	r1, r4
 802c4f2:	2304      	movs	r3, #4
 802c4f4:	f000 f97a 	bl	802c7ec <arm_radix8_butterfly_f32>
 802c4f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c4fa:	6872      	ldr	r2, [r6, #4]
 802c4fc:	4621      	mov	r1, r4
 802c4fe:	2304      	movs	r3, #4
 802c500:	f000 f974 	bl	802c7ec <arm_radix8_butterfly_f32>
 802c504:	980a      	ldr	r0, [sp, #40]	; 0x28
 802c506:	6872      	ldr	r2, [r6, #4]
 802c508:	4621      	mov	r1, r4
 802c50a:	2304      	movs	r3, #4
 802c50c:	f000 f96e 	bl	802c7ec <arm_radix8_butterfly_f32>
 802c510:	9801      	ldr	r0, [sp, #4]
 802c512:	6872      	ldr	r2, [r6, #4]
 802c514:	4621      	mov	r1, r4
 802c516:	2304      	movs	r3, #4
 802c518:	b00f      	add	sp, #60	; 0x3c
 802c51a:	ecbd 8b0a 	vpop	{d8-d12}
 802c51e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c522:	f000 b963 	b.w	802c7ec <arm_radix8_butterfly_f32>
 802c526:	bf00      	nop

0802c528 <arm_cfft_f32>:
 802c528:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c52c:	2a01      	cmp	r2, #1
 802c52e:	4606      	mov	r6, r0
 802c530:	4617      	mov	r7, r2
 802c532:	460c      	mov	r4, r1
 802c534:	4698      	mov	r8, r3
 802c536:	8805      	ldrh	r5, [r0, #0]
 802c538:	d054      	beq.n	802c5e4 <arm_cfft_f32+0xbc>
 802c53a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c53e:	d04c      	beq.n	802c5da <arm_cfft_f32+0xb2>
 802c540:	d916      	bls.n	802c570 <arm_cfft_f32+0x48>
 802c542:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802c546:	d01a      	beq.n	802c57e <arm_cfft_f32+0x56>
 802c548:	d95c      	bls.n	802c604 <arm_cfft_f32+0xdc>
 802c54a:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802c54e:	d044      	beq.n	802c5da <arm_cfft_f32+0xb2>
 802c550:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802c554:	d105      	bne.n	802c562 <arm_cfft_f32+0x3a>
 802c556:	4620      	mov	r0, r4
 802c558:	4629      	mov	r1, r5
 802c55a:	6872      	ldr	r2, [r6, #4]
 802c55c:	2301      	movs	r3, #1
 802c55e:	f000 f945 	bl	802c7ec <arm_radix8_butterfly_f32>
 802c562:	f1b8 0f00 	cmp.w	r8, #0
 802c566:	d111      	bne.n	802c58c <arm_cfft_f32+0x64>
 802c568:	2f01      	cmp	r7, #1
 802c56a:	d016      	beq.n	802c59a <arm_cfft_f32+0x72>
 802c56c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c570:	2d20      	cmp	r5, #32
 802c572:	d032      	beq.n	802c5da <arm_cfft_f32+0xb2>
 802c574:	d94a      	bls.n	802c60c <arm_cfft_f32+0xe4>
 802c576:	2d40      	cmp	r5, #64	; 0x40
 802c578:	d0ed      	beq.n	802c556 <arm_cfft_f32+0x2e>
 802c57a:	2d80      	cmp	r5, #128	; 0x80
 802c57c:	d1f1      	bne.n	802c562 <arm_cfft_f32+0x3a>
 802c57e:	4630      	mov	r0, r6
 802c580:	4621      	mov	r1, r4
 802c582:	f7ff fca1 	bl	802bec8 <arm_cfft_radix8by2_f32>
 802c586:	f1b8 0f00 	cmp.w	r8, #0
 802c58a:	d0ed      	beq.n	802c568 <arm_cfft_f32+0x40>
 802c58c:	4620      	mov	r0, r4
 802c58e:	89b1      	ldrh	r1, [r6, #12]
 802c590:	68b2      	ldr	r2, [r6, #8]
 802c592:	f7d3 fe2d 	bl	80001f0 <arm_bitreversal_32>
 802c596:	2f01      	cmp	r7, #1
 802c598:	d1e8      	bne.n	802c56c <arm_cfft_f32+0x44>
 802c59a:	ee07 5a90 	vmov	s15, r5
 802c59e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802c5a2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802c5a6:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802c5aa:	2d00      	cmp	r5, #0
 802c5ac:	d0de      	beq.n	802c56c <arm_cfft_f32+0x44>
 802c5ae:	f104 0108 	add.w	r1, r4, #8
 802c5b2:	2300      	movs	r3, #0
 802c5b4:	3301      	adds	r3, #1
 802c5b6:	429d      	cmp	r5, r3
 802c5b8:	f101 0108 	add.w	r1, r1, #8
 802c5bc:	ed11 7a04 	vldr	s14, [r1, #-16]
 802c5c0:	ed51 7a03 	vldr	s15, [r1, #-12]
 802c5c4:	ee27 7a26 	vmul.f32	s14, s14, s13
 802c5c8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802c5cc:	ed01 7a04 	vstr	s14, [r1, #-16]
 802c5d0:	ed41 7a03 	vstr	s15, [r1, #-12]
 802c5d4:	d1ee      	bne.n	802c5b4 <arm_cfft_f32+0x8c>
 802c5d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c5da:	4630      	mov	r0, r6
 802c5dc:	4621      	mov	r1, r4
 802c5de:	f7ff fd45 	bl	802c06c <arm_cfft_radix8by4_f32>
 802c5e2:	e7be      	b.n	802c562 <arm_cfft_f32+0x3a>
 802c5e4:	b1ad      	cbz	r5, 802c612 <arm_cfft_f32+0xea>
 802c5e6:	f101 030c 	add.w	r3, r1, #12
 802c5ea:	2200      	movs	r2, #0
 802c5ec:	ed53 7a02 	vldr	s15, [r3, #-8]
 802c5f0:	3201      	adds	r2, #1
 802c5f2:	eef1 7a67 	vneg.f32	s15, s15
 802c5f6:	4295      	cmp	r5, r2
 802c5f8:	ed43 7a02 	vstr	s15, [r3, #-8]
 802c5fc:	f103 0308 	add.w	r3, r3, #8
 802c600:	d1f4      	bne.n	802c5ec <arm_cfft_f32+0xc4>
 802c602:	e79a      	b.n	802c53a <arm_cfft_f32+0x12>
 802c604:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802c608:	d0a5      	beq.n	802c556 <arm_cfft_f32+0x2e>
 802c60a:	e7aa      	b.n	802c562 <arm_cfft_f32+0x3a>
 802c60c:	2d10      	cmp	r5, #16
 802c60e:	d0b6      	beq.n	802c57e <arm_cfft_f32+0x56>
 802c610:	e7a7      	b.n	802c562 <arm_cfft_f32+0x3a>
 802c612:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c616:	d894      	bhi.n	802c542 <arm_cfft_f32+0x1a>
 802c618:	e7aa      	b.n	802c570 <arm_cfft_f32+0x48>
 802c61a:	bf00      	nop

0802c61c <arm_cmplx_mag_f32>:
 802c61c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c620:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802c624:	b084      	sub	sp, #16
 802c626:	d07f      	beq.n	802c728 <arm_cmplx_mag_f32+0x10c>
 802c628:	2700      	movs	r7, #0
 802c62a:	f100 0420 	add.w	r4, r0, #32
 802c62e:	f101 0510 	add.w	r5, r1, #16
 802c632:	4646      	mov	r6, r8
 802c634:	e05a      	b.n	802c6ec <arm_cmplx_mag_f32+0xd0>
 802c636:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c63a:	eeb4 0a40 	vcmp.f32	s0, s0
 802c63e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c642:	f040 80a4 	bne.w	802c78e <arm_cmplx_mag_f32+0x172>
 802c646:	ed05 0a04 	vstr	s0, [r5, #-16]
 802c64a:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802c64e:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802c652:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c656:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c65a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c65e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c666:	f2c0 808f 	blt.w	802c788 <arm_cmplx_mag_f32+0x16c>
 802c66a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c66e:	eeb4 0a40 	vcmp.f32	s0, s0
 802c672:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c676:	f040 80af 	bne.w	802c7d8 <arm_cmplx_mag_f32+0x1bc>
 802c67a:	ed05 0a03 	vstr	s0, [r5, #-12]
 802c67e:	ed54 7a04 	vldr	s15, [r4, #-16]
 802c682:	ed14 0a03 	vldr	s0, [r4, #-12]
 802c686:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c68a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c68e:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c692:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c696:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c69a:	db72      	blt.n	802c782 <arm_cmplx_mag_f32+0x166>
 802c69c:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c6a0:	eeb4 0a40 	vcmp.f32	s0, s0
 802c6a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c6a8:	f040 808c 	bne.w	802c7c4 <arm_cmplx_mag_f32+0x1a8>
 802c6ac:	ed05 0a02 	vstr	s0, [r5, #-8]
 802c6b0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c6b4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c6b8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c6bc:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c6c0:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c6c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c6c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c6cc:	db20      	blt.n	802c710 <arm_cmplx_mag_f32+0xf4>
 802c6ce:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c6d2:	eeb4 0a40 	vcmp.f32	s0, s0
 802c6d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c6da:	d169      	bne.n	802c7b0 <arm_cmplx_mag_f32+0x194>
 802c6dc:	3e01      	subs	r6, #1
 802c6de:	ed05 0a01 	vstr	s0, [r5, #-4]
 802c6e2:	f104 0420 	add.w	r4, r4, #32
 802c6e6:	f105 0510 	add.w	r5, r5, #16
 802c6ea:	d019      	beq.n	802c720 <arm_cmplx_mag_f32+0x104>
 802c6ec:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802c6f0:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802c6f4:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c6f8:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c6fc:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c700:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c708:	da95      	bge.n	802c636 <arm_cmplx_mag_f32+0x1a>
 802c70a:	f845 7c10 	str.w	r7, [r5, #-16]
 802c70e:	e79c      	b.n	802c64a <arm_cmplx_mag_f32+0x2e>
 802c710:	3e01      	subs	r6, #1
 802c712:	f845 7c04 	str.w	r7, [r5, #-4]
 802c716:	f104 0420 	add.w	r4, r4, #32
 802c71a:	f105 0510 	add.w	r5, r5, #16
 802c71e:	d1e5      	bne.n	802c6ec <arm_cmplx_mag_f32+0xd0>
 802c720:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802c724:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802c728:	f012 0503 	ands.w	r5, r2, #3
 802c72c:	d026      	beq.n	802c77c <arm_cmplx_mag_f32+0x160>
 802c72e:	2600      	movs	r6, #0
 802c730:	f100 0408 	add.w	r4, r0, #8
 802c734:	e00c      	b.n	802c750 <arm_cmplx_mag_f32+0x134>
 802c736:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c73a:	eeb4 0a40 	vcmp.f32	s0, s0
 802c73e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c742:	d12e      	bne.n	802c7a2 <arm_cmplx_mag_f32+0x186>
 802c744:	3d01      	subs	r5, #1
 802c746:	ed01 0a01 	vstr	s0, [r1, #-4]
 802c74a:	f104 0408 	add.w	r4, r4, #8
 802c74e:	d015      	beq.n	802c77c <arm_cmplx_mag_f32+0x160>
 802c750:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c754:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c758:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c75c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c760:	3104      	adds	r1, #4
 802c762:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c766:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c76a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c76e:	dae2      	bge.n	802c736 <arm_cmplx_mag_f32+0x11a>
 802c770:	3d01      	subs	r5, #1
 802c772:	f841 6c04 	str.w	r6, [r1, #-4]
 802c776:	f104 0408 	add.w	r4, r4, #8
 802c77a:	d1e9      	bne.n	802c750 <arm_cmplx_mag_f32+0x134>
 802c77c:	b004      	add	sp, #16
 802c77e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c782:	f845 7c08 	str.w	r7, [r5, #-8]
 802c786:	e793      	b.n	802c6b0 <arm_cmplx_mag_f32+0x94>
 802c788:	f845 7c0c 	str.w	r7, [r5, #-12]
 802c78c:	e777      	b.n	802c67e <arm_cmplx_mag_f32+0x62>
 802c78e:	eeb0 0a67 	vmov.f32	s0, s15
 802c792:	9203      	str	r2, [sp, #12]
 802c794:	9102      	str	r1, [sp, #8]
 802c796:	9001      	str	r0, [sp, #4]
 802c798:	f000 fb38 	bl	802ce0c <sqrtf>
 802c79c:	a801      	add	r0, sp, #4
 802c79e:	c807      	ldmia	r0, {r0, r1, r2}
 802c7a0:	e751      	b.n	802c646 <arm_cmplx_mag_f32+0x2a>
 802c7a2:	eeb0 0a67 	vmov.f32	s0, s15
 802c7a6:	9101      	str	r1, [sp, #4]
 802c7a8:	f000 fb30 	bl	802ce0c <sqrtf>
 802c7ac:	9901      	ldr	r1, [sp, #4]
 802c7ae:	e7c9      	b.n	802c744 <arm_cmplx_mag_f32+0x128>
 802c7b0:	eeb0 0a67 	vmov.f32	s0, s15
 802c7b4:	9203      	str	r2, [sp, #12]
 802c7b6:	9102      	str	r1, [sp, #8]
 802c7b8:	9001      	str	r0, [sp, #4]
 802c7ba:	f000 fb27 	bl	802ce0c <sqrtf>
 802c7be:	a801      	add	r0, sp, #4
 802c7c0:	c807      	ldmia	r0, {r0, r1, r2}
 802c7c2:	e78b      	b.n	802c6dc <arm_cmplx_mag_f32+0xc0>
 802c7c4:	eeb0 0a67 	vmov.f32	s0, s15
 802c7c8:	9203      	str	r2, [sp, #12]
 802c7ca:	9102      	str	r1, [sp, #8]
 802c7cc:	9001      	str	r0, [sp, #4]
 802c7ce:	f000 fb1d 	bl	802ce0c <sqrtf>
 802c7d2:	a801      	add	r0, sp, #4
 802c7d4:	c807      	ldmia	r0, {r0, r1, r2}
 802c7d6:	e769      	b.n	802c6ac <arm_cmplx_mag_f32+0x90>
 802c7d8:	eeb0 0a67 	vmov.f32	s0, s15
 802c7dc:	9203      	str	r2, [sp, #12]
 802c7de:	9102      	str	r1, [sp, #8]
 802c7e0:	9001      	str	r0, [sp, #4]
 802c7e2:	f000 fb13 	bl	802ce0c <sqrtf>
 802c7e6:	a801      	add	r0, sp, #4
 802c7e8:	c807      	ldmia	r0, {r0, r1, r2}
 802c7ea:	e746      	b.n	802c67a <arm_cmplx_mag_f32+0x5e>

0802c7ec <arm_radix8_butterfly_f32>:
 802c7ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c7f0:	ed2d 8b10 	vpush	{d8-d15}
 802c7f4:	b09d      	sub	sp, #116	; 0x74
 802c7f6:	461c      	mov	r4, r3
 802c7f8:	ed9f bac8 	vldr	s22, [pc, #800]	; 802cb1c <arm_radix8_butterfly_f32+0x330>
 802c7fc:	921a      	str	r2, [sp, #104]	; 0x68
 802c7fe:	1d03      	adds	r3, r0, #4
 802c800:	4682      	mov	sl, r0
 802c802:	4689      	mov	r9, r1
 802c804:	468b      	mov	fp, r1
 802c806:	931b      	str	r3, [sp, #108]	; 0x6c
 802c808:	9400      	str	r4, [sp, #0]
 802c80a:	469e      	mov	lr, r3
 802c80c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802c810:	005a      	lsls	r2, r3, #1
 802c812:	18d6      	adds	r6, r2, r3
 802c814:	18f5      	adds	r5, r6, r3
 802c816:	9203      	str	r2, [sp, #12]
 802c818:	195a      	adds	r2, r3, r5
 802c81a:	18d0      	adds	r0, r2, r3
 802c81c:	00df      	lsls	r7, r3, #3
 802c81e:	1819      	adds	r1, r3, r0
 802c820:	463c      	mov	r4, r7
 802c822:	9701      	str	r7, [sp, #4]
 802c824:	4457      	add	r7, sl
 802c826:	930c      	str	r3, [sp, #48]	; 0x30
 802c828:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802c82c:	011b      	lsls	r3, r3, #4
 802c82e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802c832:	eb07 0c04 	add.w	ip, r7, r4
 802c836:	9c00      	ldr	r4, [sp, #0]
 802c838:	9302      	str	r3, [sp, #8]
 802c83a:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802c83e:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802c842:	3204      	adds	r2, #4
 802c844:	3104      	adds	r1, #4
 802c846:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802c84a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802c84e:	f04f 0800 	mov.w	r8, #0
 802c852:	eddc 7a00 	vldr	s15, [ip]
 802c856:	edd7 6a00 	vldr	s13, [r7]
 802c85a:	edd6 3a00 	vldr	s7, [r6]
 802c85e:	ed5e aa01 	vldr	s21, [lr, #-4]
 802c862:	edd5 4a00 	vldr	s9, [r5]
 802c866:	ed90 2a00 	vldr	s4, [r0]
 802c86a:	ed12 7a01 	vldr	s14, [r2, #-4]
 802c86e:	ed51 0a01 	vldr	s1, [r1, #-4]
 802c872:	ee77 8a82 	vadd.f32	s17, s15, s4
 802c876:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802c87a:	ee76 1a87 	vadd.f32	s3, s13, s14
 802c87e:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802c882:	ee31 6a84 	vadd.f32	s12, s3, s8
 802c886:	ee33 5a28 	vadd.f32	s10, s6, s17
 802c88a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802c88e:	ee75 6a06 	vadd.f32	s13, s10, s12
 802c892:	ee35 5a46 	vsub.f32	s10, s10, s12
 802c896:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802c89a:	ed85 5a00 	vstr	s10, [r5]
 802c89e:	ed96 1a01 	vldr	s2, [r6, #4]
 802c8a2:	edd7 5a01 	vldr	s11, [r7, #4]
 802c8a6:	ed92 aa00 	vldr	s20, [r2]
 802c8aa:	ed91 6a00 	vldr	s12, [r1]
 802c8ae:	ed9e 9a00 	vldr	s18, [lr]
 802c8b2:	ed95 5a01 	vldr	s10, [r5, #4]
 802c8b6:	eddc 6a01 	vldr	s13, [ip, #4]
 802c8ba:	edd0 9a01 	vldr	s19, [r0, #4]
 802c8be:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802c8c2:	ee71 2a46 	vsub.f32	s5, s2, s12
 802c8c6:	ee75 3aca 	vsub.f32	s7, s11, s20
 802c8ca:	ee37 0a60 	vsub.f32	s0, s14, s1
 802c8ce:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802c8d2:	ee37 7a20 	vadd.f32	s14, s14, s1
 802c8d6:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802c8da:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802c8de:	ee79 3a05 	vadd.f32	s7, s18, s10
 802c8e2:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802c8e6:	ee39 5a45 	vsub.f32	s10, s18, s10
 802c8ea:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802c8ee:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802c8f2:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802c8f6:	ee31 6a06 	vadd.f32	s12, s2, s12
 802c8fa:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802c8fe:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802c902:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802c906:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802c90a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802c90e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802c912:	ee75 8a86 	vadd.f32	s17, s11, s12
 802c916:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802c91a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802c91e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802c922:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802c926:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802c92a:	ee33 1a89 	vadd.f32	s2, s7, s18
 802c92e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802c932:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802c936:	ee75 4a22 	vadd.f32	s9, s10, s5
 802c93a:	ee32 5a27 	vadd.f32	s10, s4, s15
 802c93e:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c942:	ee33 8a06 	vadd.f32	s16, s6, s12
 802c946:	ee75 2a87 	vadd.f32	s5, s11, s14
 802c94a:	ee31 9a28 	vadd.f32	s18, s2, s17
 802c94e:	ee33 6a46 	vsub.f32	s12, s6, s12
 802c952:	ee74 0a61 	vsub.f32	s1, s8, s3
 802c956:	ee33 2a80 	vadd.f32	s4, s7, s0
 802c95a:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802c95e:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802c962:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802c966:	ee31 1a68 	vsub.f32	s2, s2, s17
 802c96a:	ee34 4a21 	vadd.f32	s8, s8, s3
 802c96e:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802c972:	ee74 4a85 	vadd.f32	s9, s9, s10
 802c976:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802c97a:	44d8      	add	r8, fp
 802c97c:	45c1      	cmp	r9, r8
 802c97e:	ed8e 9a00 	vstr	s18, [lr]
 802c982:	ed85 1a01 	vstr	s2, [r5, #4]
 802c986:	449e      	add	lr, r3
 802c988:	ed8c 8a00 	vstr	s16, [ip]
 802c98c:	441d      	add	r5, r3
 802c98e:	ed80 6a00 	vstr	s12, [r0]
 802c992:	edcc 0a01 	vstr	s1, [ip, #4]
 802c996:	ed80 4a01 	vstr	s8, [r0, #4]
 802c99a:	449c      	add	ip, r3
 802c99c:	ed87 2a00 	vstr	s4, [r7]
 802c9a0:	4418      	add	r0, r3
 802c9a2:	ed41 3a01 	vstr	s7, [r1, #-4]
 802c9a6:	ed42 2a01 	vstr	s5, [r2, #-4]
 802c9aa:	ed86 7a00 	vstr	s14, [r6]
 802c9ae:	ed87 3a01 	vstr	s6, [r7, #4]
 802c9b2:	edc1 4a00 	vstr	s9, [r1]
 802c9b6:	441f      	add	r7, r3
 802c9b8:	edc2 5a00 	vstr	s11, [r2]
 802c9bc:	4419      	add	r1, r3
 802c9be:	edc6 6a01 	vstr	s13, [r6, #4]
 802c9c2:	441a      	add	r2, r3
 802c9c4:	441e      	add	r6, r3
 802c9c6:	f63f af44 	bhi.w	802c852 <arm_radix8_butterfly_f32+0x66>
 802c9ca:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c9cc:	2907      	cmp	r1, #7
 802c9ce:	4620      	mov	r0, r4
 802c9d0:	f240 81e9 	bls.w	802cda6 <arm_radix8_butterfly_f32+0x5ba>
 802c9d4:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802c9d8:	193e      	adds	r6, r7, r4
 802c9da:	1935      	adds	r5, r6, r4
 802c9dc:	9c03      	ldr	r4, [sp, #12]
 802c9de:	9000      	str	r0, [sp, #0]
 802c9e0:	4622      	mov	r2, r4
 802c9e2:	3201      	adds	r2, #1
 802c9e4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802c9e8:	9900      	ldr	r1, [sp, #0]
 802c9ea:	1828      	adds	r0, r5, r0
 802c9ec:	eb00 0e01 	add.w	lr, r0, r1
 802c9f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c9f2:	440a      	add	r2, r1
 802c9f4:	eb04 0c01 	add.w	ip, r4, r1
 802c9f8:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802c9fc:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802ca00:	9a00      	ldr	r2, [sp, #0]
 802ca02:	940f      	str	r4, [sp, #60]	; 0x3c
 802ca04:	00ed      	lsls	r5, r5, #3
 802ca06:	9511      	str	r5, [sp, #68]	; 0x44
 802ca08:	00d5      	lsls	r5, r2, #3
 802ca0a:	950d      	str	r5, [sp, #52]	; 0x34
 802ca0c:	9d01      	ldr	r5, [sp, #4]
 802ca0e:	3508      	adds	r5, #8
 802ca10:	9516      	str	r5, [sp, #88]	; 0x58
 802ca12:	9d02      	ldr	r5, [sp, #8]
 802ca14:	3508      	adds	r5, #8
 802ca16:	0114      	lsls	r4, r2, #4
 802ca18:	9517      	str	r5, [sp, #92]	; 0x5c
 802ca1a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802ca1c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802ca1e:	940e      	str	r4, [sp, #56]	; 0x38
 802ca20:	00c0      	lsls	r0, r0, #3
 802ca22:	9010      	str	r0, [sp, #64]	; 0x40
 802ca24:	18aa      	adds	r2, r5, r2
 802ca26:	9207      	str	r2, [sp, #28]
 802ca28:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802ca2a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802ca2c:	18aa      	adds	r2, r5, r2
 802ca2e:	9208      	str	r2, [sp, #32]
 802ca30:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802ca32:	18aa      	adds	r2, r5, r2
 802ca34:	9209      	str	r2, [sp, #36]	; 0x24
 802ca36:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802ca3a:	f10e 0204 	add.w	r2, lr, #4
 802ca3e:	920a      	str	r2, [sp, #40]	; 0x28
 802ca40:	00c9      	lsls	r1, r1, #3
 802ca42:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802ca44:	310c      	adds	r1, #12
 802ca46:	00f6      	lsls	r6, r6, #3
 802ca48:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802ca4c:	9114      	str	r1, [sp, #80]	; 0x50
 802ca4e:	18a9      	adds	r1, r5, r2
 802ca50:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802ca52:	9612      	str	r6, [sp, #72]	; 0x48
 802ca54:	00ff      	lsls	r7, r7, #3
 802ca56:	19ae      	adds	r6, r5, r6
 802ca58:	3008      	adds	r0, #8
 802ca5a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802ca5e:	9606      	str	r6, [sp, #24]
 802ca60:	9019      	str	r0, [sp, #100]	; 0x64
 802ca62:	18aa      	adds	r2, r5, r2
 802ca64:	0164      	lsls	r4, r4, #5
 802ca66:	19ee      	adds	r6, r5, r7
 802ca68:	f10c 000c 	add.w	r0, ip, #12
 802ca6c:	9713      	str	r7, [sp, #76]	; 0x4c
 802ca6e:	9604      	str	r6, [sp, #16]
 802ca70:	9015      	str	r0, [sp, #84]	; 0x54
 802ca72:	9103      	str	r1, [sp, #12]
 802ca74:	9205      	str	r2, [sp, #20]
 802ca76:	f104 0208 	add.w	r2, r4, #8
 802ca7a:	9218      	str	r2, [sp, #96]	; 0x60
 802ca7c:	f04f 0801 	mov.w	r8, #1
 802ca80:	2200      	movs	r2, #0
 802ca82:	f102 0108 	add.w	r1, r2, #8
 802ca86:	460f      	mov	r7, r1
 802ca88:	910b      	str	r1, [sp, #44]	; 0x2c
 802ca8a:	9918      	ldr	r1, [sp, #96]	; 0x60
 802ca8c:	188e      	adds	r6, r1, r2
 802ca8e:	9916      	ldr	r1, [sp, #88]	; 0x58
 802ca90:	188d      	adds	r5, r1, r2
 802ca92:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802ca94:	188c      	adds	r4, r1, r2
 802ca96:	9919      	ldr	r1, [sp, #100]	; 0x64
 802ca98:	1888      	adds	r0, r1, r2
 802ca9a:	9914      	ldr	r1, [sp, #80]	; 0x50
 802ca9c:	eb01 0c02 	add.w	ip, r1, r2
 802caa0:	9915      	ldr	r1, [sp, #84]	; 0x54
 802caa2:	440a      	add	r2, r1
 802caa4:	9903      	ldr	r1, [sp, #12]
 802caa6:	edd1 fa00 	vldr	s31, [r1]
 802caaa:	9905      	ldr	r1, [sp, #20]
 802caac:	ed91 fa00 	vldr	s30, [r1]
 802cab0:	9904      	ldr	r1, [sp, #16]
 802cab2:	edd1 ea00 	vldr	s29, [r1]
 802cab6:	9906      	ldr	r1, [sp, #24]
 802cab8:	ed91 ea00 	vldr	s28, [r1]
 802cabc:	9909      	ldr	r1, [sp, #36]	; 0x24
 802cabe:	edd1 da00 	vldr	s27, [r1]
 802cac2:	9908      	ldr	r1, [sp, #32]
 802cac4:	ed91 da00 	vldr	s26, [r1]
 802cac8:	9907      	ldr	r1, [sp, #28]
 802caca:	edd1 ca00 	vldr	s25, [r1]
 802cace:	9903      	ldr	r1, [sp, #12]
 802cad0:	ed91 ca01 	vldr	s24, [r1, #4]
 802cad4:	9905      	ldr	r1, [sp, #20]
 802cad6:	edd1 ba01 	vldr	s23, [r1, #4]
 802cada:	9904      	ldr	r1, [sp, #16]
 802cadc:	edd1 aa01 	vldr	s21, [r1, #4]
 802cae0:	9906      	ldr	r1, [sp, #24]
 802cae2:	ed91 aa01 	vldr	s20, [r1, #4]
 802cae6:	9909      	ldr	r1, [sp, #36]	; 0x24
 802cae8:	edd1 7a01 	vldr	s15, [r1, #4]
 802caec:	9908      	ldr	r1, [sp, #32]
 802caee:	edcd 7a00 	vstr	s15, [sp]
 802caf2:	edd1 7a01 	vldr	s15, [r1, #4]
 802caf6:	9907      	ldr	r1, [sp, #28]
 802caf8:	edcd 7a01 	vstr	s15, [sp, #4]
 802cafc:	edd1 7a01 	vldr	s15, [r1, #4]
 802cb00:	eb0a 0e07 	add.w	lr, sl, r7
 802cb04:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802cb06:	edcd 7a02 	vstr	s15, [sp, #8]
 802cb0a:	eb0c 010a 	add.w	r1, ip, sl
 802cb0e:	4456      	add	r6, sl
 802cb10:	4455      	add	r5, sl
 802cb12:	4454      	add	r4, sl
 802cb14:	4450      	add	r0, sl
 802cb16:	4452      	add	r2, sl
 802cb18:	46c4      	mov	ip, r8
 802cb1a:	e001      	b.n	802cb20 <arm_radix8_butterfly_f32+0x334>
 802cb1c:	3f3504f3 	.word	0x3f3504f3
 802cb20:	ed96 5a00 	vldr	s10, [r6]
 802cb24:	ed52 9a01 	vldr	s19, [r2, #-4]
 802cb28:	ed11 6a01 	vldr	s12, [r1, #-4]
 802cb2c:	edd0 7a00 	vldr	s15, [r0]
 802cb30:	ed17 7a01 	vldr	s14, [r7, #-4]
 802cb34:	edde 3a00 	vldr	s7, [lr]
 802cb38:	ed94 3a00 	vldr	s6, [r4]
 802cb3c:	ed95 2a00 	vldr	s4, [r5]
 802cb40:	ed9e 0a01 	vldr	s0, [lr, #4]
 802cb44:	ee33 8a85 	vadd.f32	s16, s7, s10
 802cb48:	ee32 1a06 	vadd.f32	s2, s4, s12
 802cb4c:	ee33 4a29 	vadd.f32	s8, s6, s19
 802cb50:	ee77 4a87 	vadd.f32	s9, s15, s14
 802cb54:	ee78 1a04 	vadd.f32	s3, s16, s8
 802cb58:	ee71 6a24 	vadd.f32	s13, s2, s9
 802cb5c:	ee32 2a46 	vsub.f32	s4, s4, s12
 802cb60:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802cb64:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cb68:	ed8e 6a00 	vstr	s12, [lr]
 802cb6c:	edd0 8a01 	vldr	s17, [r0, #4]
 802cb70:	ed95 9a01 	vldr	s18, [r5, #4]
 802cb74:	edd1 2a00 	vldr	s5, [r1]
 802cb78:	ed97 7a00 	vldr	s14, [r7]
 802cb7c:	edd4 0a01 	vldr	s1, [r4, #4]
 802cb80:	ed96 6a01 	vldr	s12, [r6, #4]
 802cb84:	edd2 5a00 	vldr	s11, [r2]
 802cb88:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802cb8c:	ee33 3a69 	vsub.f32	s6, s6, s19
 802cb90:	ee39 5a62 	vsub.f32	s10, s18, s5
 802cb94:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802cb98:	ee38 4a44 	vsub.f32	s8, s16, s8
 802cb9c:	ee38 7a87 	vadd.f32	s14, s17, s14
 802cba0:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802cba4:	ee79 2a22 	vadd.f32	s5, s18, s5
 802cba8:	ee75 8a69 	vsub.f32	s17, s10, s19
 802cbac:	ee32 9a27 	vadd.f32	s18, s4, s15
 802cbb0:	ee35 5a29 	vadd.f32	s10, s10, s19
 802cbb4:	ee72 7a67 	vsub.f32	s15, s4, s15
 802cbb8:	ee30 2a06 	vadd.f32	s4, s0, s12
 802cbbc:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802cbc0:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802cbc4:	ee32 9a08 	vadd.f32	s18, s4, s16
 802cbc8:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802cbcc:	ee32 2a48 	vsub.f32	s4, s4, s16
 802cbd0:	ee71 4a64 	vsub.f32	s9, s2, s9
 802cbd4:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802cbd8:	ee32 1a87 	vadd.f32	s2, s5, s14
 802cbdc:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802cbe0:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802cbe4:	ee30 6a46 	vsub.f32	s12, s0, s12
 802cbe8:	ee73 0a29 	vadd.f32	s1, s6, s19
 802cbec:	ee36 0a28 	vadd.f32	s0, s12, s17
 802cbf0:	ee33 3a69 	vsub.f32	s6, s6, s19
 802cbf4:	ee32 7a64 	vsub.f32	s14, s4, s9
 802cbf8:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802cbfc:	ee36 6a68 	vsub.f32	s12, s12, s17
 802cc00:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802cc04:	ee75 8a85 	vadd.f32	s17, s11, s10
 802cc08:	ee74 3a22 	vadd.f32	s7, s8, s5
 802cc0c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802cc10:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802cc14:	ee79 1a41 	vsub.f32	s3, s18, s2
 802cc18:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802cc1c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802cc20:	ee74 2a62 	vsub.f32	s5, s8, s5
 802cc24:	ee72 4a24 	vadd.f32	s9, s4, s9
 802cc28:	ee30 4a60 	vsub.f32	s8, s0, s1
 802cc2c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802cc30:	ee30 0a20 	vadd.f32	s0, s0, s1
 802cc34:	ee77 9a85 	vadd.f32	s19, s15, s10
 802cc38:	ee36 6a03 	vadd.f32	s12, s12, s6
 802cc3c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802cc40:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802cc44:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802cc48:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802cc4c:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802cc50:	ee39 1a01 	vadd.f32	s2, s18, s2
 802cc54:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802cc58:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802cc5c:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802cc60:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802cc64:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802cc68:	ee35 3a03 	vadd.f32	s6, s10, s6
 802cc6c:	ee72 6a66 	vsub.f32	s13, s4, s13
 802cc70:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802cc74:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802cc78:	ed9d 4a02 	vldr	s8, [sp, #8]
 802cc7c:	ed8e 1a01 	vstr	s2, [lr, #4]
 802cc80:	ee77 3a63 	vsub.f32	s7, s14, s7
 802cc84:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802cc88:	ed9d 7a01 	vldr	s14, [sp, #4]
 802cc8c:	ed86 3a00 	vstr	s6, [r6]
 802cc90:	ee30 9a89 	vadd.f32	s18, s1, s18
 802cc94:	ee32 2a05 	vadd.f32	s4, s4, s10
 802cc98:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802cc9c:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802cca0:	ee67 2a22 	vmul.f32	s5, s14, s5
 802cca4:	ee64 1a00 	vmul.f32	s3, s8, s0
 802cca8:	ee27 7a24 	vmul.f32	s14, s14, s9
 802ccac:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802ccb0:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802ccb4:	ee64 8a28 	vmul.f32	s17, s8, s17
 802ccb8:	ed9d 4a00 	vldr	s8, [sp]
 802ccbc:	edc6 6a01 	vstr	s13, [r6, #4]
 802ccc0:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802ccc4:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802ccc8:	ee64 9a29 	vmul.f32	s19, s8, s19
 802cccc:	ee24 4a25 	vmul.f32	s8, s8, s11
 802ccd0:	ee30 7a87 	vadd.f32	s14, s1, s14
 802ccd4:	ee74 4a84 	vadd.f32	s9, s9, s8
 802ccd8:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802ccdc:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802cce0:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802cce4:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802cce8:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802ccec:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802ccf0:	ee75 1a21 	vadd.f32	s3, s10, s3
 802ccf4:	ee30 0a68 	vsub.f32	s0, s0, s17
 802ccf8:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802ccfc:	ee70 0a84 	vadd.f32	s1, s1, s8
 802cd00:	ee36 6a67 	vsub.f32	s12, s12, s15
 802cd04:	44dc      	add	ip, fp
 802cd06:	45e1      	cmp	r9, ip
 802cd08:	ed84 9a00 	vstr	s18, [r4]
 802cd0c:	edc4 3a01 	vstr	s7, [r4, #4]
 802cd10:	449e      	add	lr, r3
 802cd12:	ed02 7a01 	vstr	s14, [r2, #-4]
 802cd16:	edc2 2a00 	vstr	s5, [r2]
 802cd1a:	441e      	add	r6, r3
 802cd1c:	ed85 2a00 	vstr	s4, [r5]
 802cd20:	ed85 8a01 	vstr	s16, [r5, #4]
 802cd24:	441c      	add	r4, r3
 802cd26:	ed47 1a01 	vstr	s3, [r7, #-4]
 802cd2a:	ed87 0a00 	vstr	s0, [r7]
 802cd2e:	441a      	add	r2, r3
 802cd30:	ed41 4a01 	vstr	s9, [r1, #-4]
 802cd34:	edc1 9a00 	vstr	s19, [r1]
 802cd38:	441d      	add	r5, r3
 802cd3a:	edc0 0a00 	vstr	s1, [r0]
 802cd3e:	441f      	add	r7, r3
 802cd40:	ed80 6a01 	vstr	s12, [r0, #4]
 802cd44:	4419      	add	r1, r3
 802cd46:	4418      	add	r0, r3
 802cd48:	f63f aeea 	bhi.w	802cb20 <arm_radix8_butterfly_f32+0x334>
 802cd4c:	9a03      	ldr	r2, [sp, #12]
 802cd4e:	990d      	ldr	r1, [sp, #52]	; 0x34
 802cd50:	440a      	add	r2, r1
 802cd52:	9203      	str	r2, [sp, #12]
 802cd54:	990e      	ldr	r1, [sp, #56]	; 0x38
 802cd56:	9a05      	ldr	r2, [sp, #20]
 802cd58:	440a      	add	r2, r1
 802cd5a:	9205      	str	r2, [sp, #20]
 802cd5c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802cd5e:	9a04      	ldr	r2, [sp, #16]
 802cd60:	440a      	add	r2, r1
 802cd62:	9204      	str	r2, [sp, #16]
 802cd64:	9912      	ldr	r1, [sp, #72]	; 0x48
 802cd66:	9a06      	ldr	r2, [sp, #24]
 802cd68:	440a      	add	r2, r1
 802cd6a:	9206      	str	r2, [sp, #24]
 802cd6c:	9911      	ldr	r1, [sp, #68]	; 0x44
 802cd6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802cd70:	440a      	add	r2, r1
 802cd72:	9209      	str	r2, [sp, #36]	; 0x24
 802cd74:	9910      	ldr	r1, [sp, #64]	; 0x40
 802cd76:	9a08      	ldr	r2, [sp, #32]
 802cd78:	440a      	add	r2, r1
 802cd7a:	9208      	str	r2, [sp, #32]
 802cd7c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802cd7e:	9a07      	ldr	r2, [sp, #28]
 802cd80:	440a      	add	r2, r1
 802cd82:	9207      	str	r2, [sp, #28]
 802cd84:	990c      	ldr	r1, [sp, #48]	; 0x30
 802cd86:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802cd88:	f108 0801 	add.w	r8, r8, #1
 802cd8c:	3208      	adds	r2, #8
 802cd8e:	4588      	cmp	r8, r1
 802cd90:	920a      	str	r2, [sp, #40]	; 0x28
 802cd92:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802cd94:	f47f ae75 	bne.w	802ca82 <arm_radix8_butterfly_f32+0x296>
 802cd98:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802cd9c:	9300      	str	r3, [sp, #0]
 802cd9e:	46c3      	mov	fp, r8
 802cda0:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802cda4:	e532      	b.n	802c80c <arm_radix8_butterfly_f32+0x20>
 802cda6:	b01d      	add	sp, #116	; 0x74
 802cda8:	ecbd 8b10 	vpop	{d8-d15}
 802cdac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802cdb0 <__aeabi_atexit>:
 802cdb0:	460b      	mov	r3, r1
 802cdb2:	4601      	mov	r1, r0
 802cdb4:	4618      	mov	r0, r3
 802cdb6:	f000 bfc7 	b.w	802dd48 <__cxa_atexit>

0802cdba <_ZdlPvj>:
 802cdba:	f000 b812 	b.w	802cde2 <_ZdlPv>

0802cdbe <__cxa_guard_acquire>:
 802cdbe:	6803      	ldr	r3, [r0, #0]
 802cdc0:	07db      	lsls	r3, r3, #31
 802cdc2:	d406      	bmi.n	802cdd2 <__cxa_guard_acquire+0x14>
 802cdc4:	7843      	ldrb	r3, [r0, #1]
 802cdc6:	b103      	cbz	r3, 802cdca <__cxa_guard_acquire+0xc>
 802cdc8:	deff      	udf	#255	; 0xff
 802cdca:	2301      	movs	r3, #1
 802cdcc:	7043      	strb	r3, [r0, #1]
 802cdce:	4618      	mov	r0, r3
 802cdd0:	4770      	bx	lr
 802cdd2:	2000      	movs	r0, #0
 802cdd4:	4770      	bx	lr

0802cdd6 <__cxa_guard_release>:
 802cdd6:	2301      	movs	r3, #1
 802cdd8:	6003      	str	r3, [r0, #0]
 802cdda:	4770      	bx	lr

0802cddc <__cxa_pure_virtual>:
 802cddc:	b508      	push	{r3, lr}
 802cdde:	f000 f80f 	bl	802ce00 <_ZSt9terminatev>

0802cde2 <_ZdlPv>:
 802cde2:	f000 befd 	b.w	802dbe0 <free>

0802cde6 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802cde6:	b508      	push	{r3, lr}
 802cde8:	4780      	blx	r0
 802cdea:	f000 fec5 	bl	802db78 <abort>
	...

0802cdf0 <_ZSt13get_terminatev>:
 802cdf0:	4b02      	ldr	r3, [pc, #8]	; (802cdfc <_ZSt13get_terminatev+0xc>)
 802cdf2:	6818      	ldr	r0, [r3, #0]
 802cdf4:	f3bf 8f5b 	dmb	ish
 802cdf8:	4770      	bx	lr
 802cdfa:	bf00      	nop
 802cdfc:	20000108 	.word	0x20000108

0802ce00 <_ZSt9terminatev>:
 802ce00:	b508      	push	{r3, lr}
 802ce02:	f7ff fff5 	bl	802cdf0 <_ZSt13get_terminatev>
 802ce06:	f7ff ffee 	bl	802cde6 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802ce0c <sqrtf>:
 802ce0c:	b508      	push	{r3, lr}
 802ce0e:	ed2d 8b02 	vpush	{d8}
 802ce12:	eeb0 8a40 	vmov.f32	s16, s0
 802ce16:	f000 f97d 	bl	802d114 <__ieee754_sqrtf>
 802ce1a:	eeb4 8a48 	vcmp.f32	s16, s16
 802ce1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ce22:	d60c      	bvs.n	802ce3e <sqrtf+0x32>
 802ce24:	eddf 8a07 	vldr	s17, [pc, #28]	; 802ce44 <sqrtf+0x38>
 802ce28:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802ce2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ce30:	d505      	bpl.n	802ce3e <sqrtf+0x32>
 802ce32:	f001 f9a7 	bl	802e184 <__errno>
 802ce36:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802ce3a:	2321      	movs	r3, #33	; 0x21
 802ce3c:	6003      	str	r3, [r0, #0]
 802ce3e:	ecbd 8b02 	vpop	{d8}
 802ce42:	bd08      	pop	{r3, pc}
 802ce44:	00000000 	.word	0x00000000

0802ce48 <atanf>:
 802ce48:	b538      	push	{r3, r4, r5, lr}
 802ce4a:	ee10 5a10 	vmov	r5, s0
 802ce4e:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 802ce52:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 802ce56:	eef0 7a40 	vmov.f32	s15, s0
 802ce5a:	db10      	blt.n	802ce7e <atanf+0x36>
 802ce5c:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 802ce60:	dd04      	ble.n	802ce6c <atanf+0x24>
 802ce62:	ee70 7a00 	vadd.f32	s15, s0, s0
 802ce66:	eeb0 0a67 	vmov.f32	s0, s15
 802ce6a:	bd38      	pop	{r3, r4, r5, pc}
 802ce6c:	eddf 7a4d 	vldr	s15, [pc, #308]	; 802cfa4 <atanf+0x15c>
 802ce70:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 802cfa8 <atanf+0x160>
 802ce74:	2d00      	cmp	r5, #0
 802ce76:	bfd8      	it	le
 802ce78:	eef0 7a47 	vmovle.f32	s15, s14
 802ce7c:	e7f3      	b.n	802ce66 <atanf+0x1e>
 802ce7e:	4b4b      	ldr	r3, [pc, #300]	; (802cfac <atanf+0x164>)
 802ce80:	429c      	cmp	r4, r3
 802ce82:	dc10      	bgt.n	802cea6 <atanf+0x5e>
 802ce84:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 802ce88:	da0a      	bge.n	802cea0 <atanf+0x58>
 802ce8a:	ed9f 7a49 	vldr	s14, [pc, #292]	; 802cfb0 <atanf+0x168>
 802ce8e:	ee30 7a07 	vadd.f32	s14, s0, s14
 802ce92:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802ce96:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802ce9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ce9e:	dce2      	bgt.n	802ce66 <atanf+0x1e>
 802cea0:	f04f 33ff 	mov.w	r3, #4294967295
 802cea4:	e013      	b.n	802cece <atanf+0x86>
 802cea6:	f000 f8e7 	bl	802d078 <fabsf>
 802ceaa:	4b42      	ldr	r3, [pc, #264]	; (802cfb4 <atanf+0x16c>)
 802ceac:	429c      	cmp	r4, r3
 802ceae:	dc4f      	bgt.n	802cf50 <atanf+0x108>
 802ceb0:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 802ceb4:	429c      	cmp	r4, r3
 802ceb6:	dc41      	bgt.n	802cf3c <atanf+0xf4>
 802ceb8:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 802cebc:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cec0:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cec4:	2300      	movs	r3, #0
 802cec6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ceca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cece:	1c5a      	adds	r2, r3, #1
 802ced0:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802ced4:	ed9f 7a38 	vldr	s14, [pc, #224]	; 802cfb8 <atanf+0x170>
 802ced8:	eddf 5a38 	vldr	s11, [pc, #224]	; 802cfbc <atanf+0x174>
 802cedc:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802cfc0 <atanf+0x178>
 802cee0:	ee66 6a06 	vmul.f32	s13, s12, s12
 802cee4:	eee6 5a87 	vfma.f32	s11, s13, s14
 802cee8:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802cfc4 <atanf+0x17c>
 802ceec:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802cef0:	eddf 5a35 	vldr	s11, [pc, #212]	; 802cfc8 <atanf+0x180>
 802cef4:	eee7 5a26 	vfma.f32	s11, s14, s13
 802cef8:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802cfcc <atanf+0x184>
 802cefc:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802cf00:	eddf 5a33 	vldr	s11, [pc, #204]	; 802cfd0 <atanf+0x188>
 802cf04:	eee7 5a26 	vfma.f32	s11, s14, s13
 802cf08:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802cfd4 <atanf+0x18c>
 802cf0c:	eea6 5a87 	vfma.f32	s10, s13, s14
 802cf10:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802cfd8 <atanf+0x190>
 802cf14:	eea5 7a26 	vfma.f32	s14, s10, s13
 802cf18:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802cfdc <atanf+0x194>
 802cf1c:	eea7 5a26 	vfma.f32	s10, s14, s13
 802cf20:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802cfe0 <atanf+0x198>
 802cf24:	eea5 7a26 	vfma.f32	s14, s10, s13
 802cf28:	ee27 7a26 	vmul.f32	s14, s14, s13
 802cf2c:	eea5 7a86 	vfma.f32	s14, s11, s12
 802cf30:	ee27 7a87 	vmul.f32	s14, s15, s14
 802cf34:	d121      	bne.n	802cf7a <atanf+0x132>
 802cf36:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cf3a:	e794      	b.n	802ce66 <atanf+0x1e>
 802cf3c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802cf40:	ee30 7a67 	vsub.f32	s14, s0, s15
 802cf44:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cf48:	2301      	movs	r3, #1
 802cf4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cf4e:	e7be      	b.n	802cece <atanf+0x86>
 802cf50:	4b24      	ldr	r3, [pc, #144]	; (802cfe4 <atanf+0x19c>)
 802cf52:	429c      	cmp	r4, r3
 802cf54:	dc0b      	bgt.n	802cf6e <atanf+0x126>
 802cf56:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 802cf5a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802cf5e:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cf62:	2302      	movs	r3, #2
 802cf64:	ee70 6a67 	vsub.f32	s13, s0, s15
 802cf68:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802cf6c:	e7af      	b.n	802cece <atanf+0x86>
 802cf6e:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cf72:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cf76:	2303      	movs	r3, #3
 802cf78:	e7a9      	b.n	802cece <atanf+0x86>
 802cf7a:	4a1b      	ldr	r2, [pc, #108]	; (802cfe8 <atanf+0x1a0>)
 802cf7c:	491b      	ldr	r1, [pc, #108]	; (802cfec <atanf+0x1a4>)
 802cf7e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802cf82:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802cf86:	edd3 6a00 	vldr	s13, [r3]
 802cf8a:	ee37 7a66 	vsub.f32	s14, s14, s13
 802cf8e:	2d00      	cmp	r5, #0
 802cf90:	ee37 7a67 	vsub.f32	s14, s14, s15
 802cf94:	edd2 7a00 	vldr	s15, [r2]
 802cf98:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cf9c:	bfb8      	it	lt
 802cf9e:	eef1 7a67 	vneglt.f32	s15, s15
 802cfa2:	e760      	b.n	802ce66 <atanf+0x1e>
 802cfa4:	3fc90fdb 	.word	0x3fc90fdb
 802cfa8:	bfc90fdb 	.word	0xbfc90fdb
 802cfac:	3edfffff 	.word	0x3edfffff
 802cfb0:	7149f2ca 	.word	0x7149f2ca
 802cfb4:	3f97ffff 	.word	0x3f97ffff
 802cfb8:	3c8569d7 	.word	0x3c8569d7
 802cfbc:	3d4bda59 	.word	0x3d4bda59
 802cfc0:	bd6ef16b 	.word	0xbd6ef16b
 802cfc4:	3d886b35 	.word	0x3d886b35
 802cfc8:	3dba2e6e 	.word	0x3dba2e6e
 802cfcc:	3e124925 	.word	0x3e124925
 802cfd0:	3eaaaaab 	.word	0x3eaaaaab
 802cfd4:	bd15a221 	.word	0xbd15a221
 802cfd8:	bd9d8795 	.word	0xbd9d8795
 802cfdc:	bde38e38 	.word	0xbde38e38
 802cfe0:	be4ccccd 	.word	0xbe4ccccd
 802cfe4:	401bffff 	.word	0x401bffff
 802cfe8:	08045a0c 	.word	0x08045a0c
 802cfec:	08045a1c 	.word	0x08045a1c

0802cff0 <cosf>:
 802cff0:	ee10 3a10 	vmov	r3, s0
 802cff4:	b507      	push	{r0, r1, r2, lr}
 802cff6:	4a1e      	ldr	r2, [pc, #120]	; (802d070 <cosf+0x80>)
 802cff8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cffc:	4293      	cmp	r3, r2
 802cffe:	dc06      	bgt.n	802d00e <cosf+0x1e>
 802d000:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802d074 <cosf+0x84>
 802d004:	b003      	add	sp, #12
 802d006:	f85d eb04 	ldr.w	lr, [sp], #4
 802d00a:	f000 b90b 	b.w	802d224 <__kernel_cosf>
 802d00e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802d012:	db04      	blt.n	802d01e <cosf+0x2e>
 802d014:	ee30 0a40 	vsub.f32	s0, s0, s0
 802d018:	b003      	add	sp, #12
 802d01a:	f85d fb04 	ldr.w	pc, [sp], #4
 802d01e:	4668      	mov	r0, sp
 802d020:	f000 f9a6 	bl	802d370 <__ieee754_rem_pio2f>
 802d024:	f000 0003 	and.w	r0, r0, #3
 802d028:	2801      	cmp	r0, #1
 802d02a:	d009      	beq.n	802d040 <cosf+0x50>
 802d02c:	2802      	cmp	r0, #2
 802d02e:	d010      	beq.n	802d052 <cosf+0x62>
 802d030:	b9b0      	cbnz	r0, 802d060 <cosf+0x70>
 802d032:	eddd 0a01 	vldr	s1, [sp, #4]
 802d036:	ed9d 0a00 	vldr	s0, [sp]
 802d03a:	f000 f8f3 	bl	802d224 <__kernel_cosf>
 802d03e:	e7eb      	b.n	802d018 <cosf+0x28>
 802d040:	eddd 0a01 	vldr	s1, [sp, #4]
 802d044:	ed9d 0a00 	vldr	s0, [sp]
 802d048:	f000 f94a 	bl	802d2e0 <__kernel_sinf>
 802d04c:	eeb1 0a40 	vneg.f32	s0, s0
 802d050:	e7e2      	b.n	802d018 <cosf+0x28>
 802d052:	eddd 0a01 	vldr	s1, [sp, #4]
 802d056:	ed9d 0a00 	vldr	s0, [sp]
 802d05a:	f000 f8e3 	bl	802d224 <__kernel_cosf>
 802d05e:	e7f5      	b.n	802d04c <cosf+0x5c>
 802d060:	eddd 0a01 	vldr	s1, [sp, #4]
 802d064:	ed9d 0a00 	vldr	s0, [sp]
 802d068:	2001      	movs	r0, #1
 802d06a:	f000 f939 	bl	802d2e0 <__kernel_sinf>
 802d06e:	e7d3      	b.n	802d018 <cosf+0x28>
 802d070:	3f490fd8 	.word	0x3f490fd8
 802d074:	00000000 	.word	0x00000000

0802d078 <fabsf>:
 802d078:	ee10 3a10 	vmov	r3, s0
 802d07c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d080:	ee00 3a10 	vmov	s0, r3
 802d084:	4770      	bx	lr
	...

0802d088 <sinf>:
 802d088:	ee10 3a10 	vmov	r3, s0
 802d08c:	b507      	push	{r0, r1, r2, lr}
 802d08e:	4a1f      	ldr	r2, [pc, #124]	; (802d10c <sinf+0x84>)
 802d090:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d094:	4293      	cmp	r3, r2
 802d096:	dc07      	bgt.n	802d0a8 <sinf+0x20>
 802d098:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802d110 <sinf+0x88>
 802d09c:	2000      	movs	r0, #0
 802d09e:	b003      	add	sp, #12
 802d0a0:	f85d eb04 	ldr.w	lr, [sp], #4
 802d0a4:	f000 b91c 	b.w	802d2e0 <__kernel_sinf>
 802d0a8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802d0ac:	db04      	blt.n	802d0b8 <sinf+0x30>
 802d0ae:	ee30 0a40 	vsub.f32	s0, s0, s0
 802d0b2:	b003      	add	sp, #12
 802d0b4:	f85d fb04 	ldr.w	pc, [sp], #4
 802d0b8:	4668      	mov	r0, sp
 802d0ba:	f000 f959 	bl	802d370 <__ieee754_rem_pio2f>
 802d0be:	f000 0003 	and.w	r0, r0, #3
 802d0c2:	2801      	cmp	r0, #1
 802d0c4:	d00a      	beq.n	802d0dc <sinf+0x54>
 802d0c6:	2802      	cmp	r0, #2
 802d0c8:	d00f      	beq.n	802d0ea <sinf+0x62>
 802d0ca:	b9c0      	cbnz	r0, 802d0fe <sinf+0x76>
 802d0cc:	eddd 0a01 	vldr	s1, [sp, #4]
 802d0d0:	ed9d 0a00 	vldr	s0, [sp]
 802d0d4:	2001      	movs	r0, #1
 802d0d6:	f000 f903 	bl	802d2e0 <__kernel_sinf>
 802d0da:	e7ea      	b.n	802d0b2 <sinf+0x2a>
 802d0dc:	eddd 0a01 	vldr	s1, [sp, #4]
 802d0e0:	ed9d 0a00 	vldr	s0, [sp]
 802d0e4:	f000 f89e 	bl	802d224 <__kernel_cosf>
 802d0e8:	e7e3      	b.n	802d0b2 <sinf+0x2a>
 802d0ea:	eddd 0a01 	vldr	s1, [sp, #4]
 802d0ee:	ed9d 0a00 	vldr	s0, [sp]
 802d0f2:	2001      	movs	r0, #1
 802d0f4:	f000 f8f4 	bl	802d2e0 <__kernel_sinf>
 802d0f8:	eeb1 0a40 	vneg.f32	s0, s0
 802d0fc:	e7d9      	b.n	802d0b2 <sinf+0x2a>
 802d0fe:	eddd 0a01 	vldr	s1, [sp, #4]
 802d102:	ed9d 0a00 	vldr	s0, [sp]
 802d106:	f000 f88d 	bl	802d224 <__kernel_cosf>
 802d10a:	e7f5      	b.n	802d0f8 <sinf+0x70>
 802d10c:	3f490fd8 	.word	0x3f490fd8
 802d110:	00000000 	.word	0x00000000

0802d114 <__ieee754_sqrtf>:
 802d114:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802d118:	4770      	bx	lr
	...

0802d11c <ceilf>:
 802d11c:	ee10 3a10 	vmov	r3, s0
 802d120:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d124:	3a7f      	subs	r2, #127	; 0x7f
 802d126:	2a16      	cmp	r2, #22
 802d128:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802d12c:	dc2a      	bgt.n	802d184 <ceilf+0x68>
 802d12e:	2a00      	cmp	r2, #0
 802d130:	da11      	bge.n	802d156 <ceilf+0x3a>
 802d132:	eddf 7a19 	vldr	s15, [pc, #100]	; 802d198 <ceilf+0x7c>
 802d136:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d13a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d13e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d142:	dd05      	ble.n	802d150 <ceilf+0x34>
 802d144:	2b00      	cmp	r3, #0
 802d146:	db23      	blt.n	802d190 <ceilf+0x74>
 802d148:	2900      	cmp	r1, #0
 802d14a:	bf18      	it	ne
 802d14c:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802d150:	ee00 3a10 	vmov	s0, r3
 802d154:	4770      	bx	lr
 802d156:	4911      	ldr	r1, [pc, #68]	; (802d19c <ceilf+0x80>)
 802d158:	4111      	asrs	r1, r2
 802d15a:	420b      	tst	r3, r1
 802d15c:	d0fa      	beq.n	802d154 <ceilf+0x38>
 802d15e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d198 <ceilf+0x7c>
 802d162:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d166:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d16a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d16e:	ddef      	ble.n	802d150 <ceilf+0x34>
 802d170:	2b00      	cmp	r3, #0
 802d172:	bfc2      	ittt	gt
 802d174:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802d178:	fa40 f202 	asrgt.w	r2, r0, r2
 802d17c:	189b      	addgt	r3, r3, r2
 802d17e:	ea23 0301 	bic.w	r3, r3, r1
 802d182:	e7e5      	b.n	802d150 <ceilf+0x34>
 802d184:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802d188:	d3e4      	bcc.n	802d154 <ceilf+0x38>
 802d18a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d18e:	4770      	bx	lr
 802d190:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802d194:	e7dc      	b.n	802d150 <ceilf+0x34>
 802d196:	bf00      	nop
 802d198:	7149f2ca 	.word	0x7149f2ca
 802d19c:	007fffff 	.word	0x007fffff

0802d1a0 <floorf>:
 802d1a0:	ee10 3a10 	vmov	r3, s0
 802d1a4:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d1a8:	3a7f      	subs	r2, #127	; 0x7f
 802d1aa:	2a16      	cmp	r2, #22
 802d1ac:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802d1b0:	dc2a      	bgt.n	802d208 <floorf+0x68>
 802d1b2:	2a00      	cmp	r2, #0
 802d1b4:	da11      	bge.n	802d1da <floorf+0x3a>
 802d1b6:	eddf 7a18 	vldr	s15, [pc, #96]	; 802d218 <floorf+0x78>
 802d1ba:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d1be:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d1c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d1c6:	dd05      	ble.n	802d1d4 <floorf+0x34>
 802d1c8:	2b00      	cmp	r3, #0
 802d1ca:	da23      	bge.n	802d214 <floorf+0x74>
 802d1cc:	4a13      	ldr	r2, [pc, #76]	; (802d21c <floorf+0x7c>)
 802d1ce:	2900      	cmp	r1, #0
 802d1d0:	bf18      	it	ne
 802d1d2:	4613      	movne	r3, r2
 802d1d4:	ee00 3a10 	vmov	s0, r3
 802d1d8:	4770      	bx	lr
 802d1da:	4911      	ldr	r1, [pc, #68]	; (802d220 <floorf+0x80>)
 802d1dc:	4111      	asrs	r1, r2
 802d1de:	420b      	tst	r3, r1
 802d1e0:	d0fa      	beq.n	802d1d8 <floorf+0x38>
 802d1e2:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802d218 <floorf+0x78>
 802d1e6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d1ea:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d1ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d1f2:	ddef      	ble.n	802d1d4 <floorf+0x34>
 802d1f4:	2b00      	cmp	r3, #0
 802d1f6:	bfbe      	ittt	lt
 802d1f8:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802d1fc:	fa40 f202 	asrlt.w	r2, r0, r2
 802d200:	189b      	addlt	r3, r3, r2
 802d202:	ea23 0301 	bic.w	r3, r3, r1
 802d206:	e7e5      	b.n	802d1d4 <floorf+0x34>
 802d208:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802d20c:	d3e4      	bcc.n	802d1d8 <floorf+0x38>
 802d20e:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d212:	4770      	bx	lr
 802d214:	2300      	movs	r3, #0
 802d216:	e7dd      	b.n	802d1d4 <floorf+0x34>
 802d218:	7149f2ca 	.word	0x7149f2ca
 802d21c:	bf800000 	.word	0xbf800000
 802d220:	007fffff 	.word	0x007fffff

0802d224 <__kernel_cosf>:
 802d224:	ee10 3a10 	vmov	r3, s0
 802d228:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d22c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802d230:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802d234:	da05      	bge.n	802d242 <__kernel_cosf+0x1e>
 802d236:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d23a:	ee17 2a90 	vmov	r2, s15
 802d23e:	2a00      	cmp	r2, #0
 802d240:	d03b      	beq.n	802d2ba <__kernel_cosf+0x96>
 802d242:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d246:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d2c0 <__kernel_cosf+0x9c>
 802d24a:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802d2c4 <__kernel_cosf+0xa0>
 802d24e:	4a1e      	ldr	r2, [pc, #120]	; (802d2c8 <__kernel_cosf+0xa4>)
 802d250:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d254:	4293      	cmp	r3, r2
 802d256:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802d2cc <__kernel_cosf+0xa8>
 802d25a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d25e:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802d2d0 <__kernel_cosf+0xac>
 802d262:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d266:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802d2d4 <__kernel_cosf+0xb0>
 802d26a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d26e:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802d2d8 <__kernel_cosf+0xb4>
 802d272:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d276:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802d27a:	ee26 6a07 	vmul.f32	s12, s12, s14
 802d27e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d282:	eee7 0a06 	vfma.f32	s1, s14, s12
 802d286:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d28a:	dc04      	bgt.n	802d296 <__kernel_cosf+0x72>
 802d28c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d290:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802d294:	4770      	bx	lr
 802d296:	4a11      	ldr	r2, [pc, #68]	; (802d2dc <__kernel_cosf+0xb8>)
 802d298:	4293      	cmp	r3, r2
 802d29a:	bfda      	itte	le
 802d29c:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802d2a0:	ee07 3a10 	vmovle	s14, r3
 802d2a4:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802d2a8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d2ac:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802d2b0:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d2b4:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d2b8:	4770      	bx	lr
 802d2ba:	eeb0 0a66 	vmov.f32	s0, s13
 802d2be:	4770      	bx	lr
 802d2c0:	ad47d74e 	.word	0xad47d74e
 802d2c4:	310f74f6 	.word	0x310f74f6
 802d2c8:	3e999999 	.word	0x3e999999
 802d2cc:	b493f27c 	.word	0xb493f27c
 802d2d0:	37d00d01 	.word	0x37d00d01
 802d2d4:	bab60b61 	.word	0xbab60b61
 802d2d8:	3d2aaaab 	.word	0x3d2aaaab
 802d2dc:	3f480000 	.word	0x3f480000

0802d2e0 <__kernel_sinf>:
 802d2e0:	ee10 3a10 	vmov	r3, s0
 802d2e4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d2e8:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802d2ec:	da04      	bge.n	802d2f8 <__kernel_sinf+0x18>
 802d2ee:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d2f2:	ee17 3a90 	vmov	r3, s15
 802d2f6:	b35b      	cbz	r3, 802d350 <__kernel_sinf+0x70>
 802d2f8:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d2fc:	eddf 7a15 	vldr	s15, [pc, #84]	; 802d354 <__kernel_sinf+0x74>
 802d300:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802d358 <__kernel_sinf+0x78>
 802d304:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d308:	eddf 7a14 	vldr	s15, [pc, #80]	; 802d35c <__kernel_sinf+0x7c>
 802d30c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d310:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802d360 <__kernel_sinf+0x80>
 802d314:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d318:	eddf 7a12 	vldr	s15, [pc, #72]	; 802d364 <__kernel_sinf+0x84>
 802d31c:	ee60 6a07 	vmul.f32	s13, s0, s14
 802d320:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d324:	b930      	cbnz	r0, 802d334 <__kernel_sinf+0x54>
 802d326:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802d368 <__kernel_sinf+0x88>
 802d32a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d32e:	eea6 0a26 	vfma.f32	s0, s12, s13
 802d332:	4770      	bx	lr
 802d334:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802d338:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802d33c:	eee0 7a86 	vfma.f32	s15, s1, s12
 802d340:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802d344:	eddf 7a09 	vldr	s15, [pc, #36]	; 802d36c <__kernel_sinf+0x8c>
 802d348:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802d34c:	ee30 0a60 	vsub.f32	s0, s0, s1
 802d350:	4770      	bx	lr
 802d352:	bf00      	nop
 802d354:	2f2ec9d3 	.word	0x2f2ec9d3
 802d358:	b2d72f34 	.word	0xb2d72f34
 802d35c:	3638ef1b 	.word	0x3638ef1b
 802d360:	b9500d01 	.word	0xb9500d01
 802d364:	3c088889 	.word	0x3c088889
 802d368:	be2aaaab 	.word	0xbe2aaaab
 802d36c:	3e2aaaab 	.word	0x3e2aaaab

0802d370 <__ieee754_rem_pio2f>:
 802d370:	b5f0      	push	{r4, r5, r6, r7, lr}
 802d372:	ee10 6a10 	vmov	r6, s0
 802d376:	4b86      	ldr	r3, [pc, #536]	; (802d590 <__ieee754_rem_pio2f+0x220>)
 802d378:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802d37c:	429d      	cmp	r5, r3
 802d37e:	b087      	sub	sp, #28
 802d380:	4604      	mov	r4, r0
 802d382:	dc05      	bgt.n	802d390 <__ieee754_rem_pio2f+0x20>
 802d384:	2300      	movs	r3, #0
 802d386:	ed80 0a00 	vstr	s0, [r0]
 802d38a:	6043      	str	r3, [r0, #4]
 802d38c:	2000      	movs	r0, #0
 802d38e:	e020      	b.n	802d3d2 <__ieee754_rem_pio2f+0x62>
 802d390:	4b80      	ldr	r3, [pc, #512]	; (802d594 <__ieee754_rem_pio2f+0x224>)
 802d392:	429d      	cmp	r5, r3
 802d394:	dc38      	bgt.n	802d408 <__ieee754_rem_pio2f+0x98>
 802d396:	2e00      	cmp	r6, #0
 802d398:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802d598 <__ieee754_rem_pio2f+0x228>
 802d39c:	4b7f      	ldr	r3, [pc, #508]	; (802d59c <__ieee754_rem_pio2f+0x22c>)
 802d39e:	f025 050f 	bic.w	r5, r5, #15
 802d3a2:	dd18      	ble.n	802d3d6 <__ieee754_rem_pio2f+0x66>
 802d3a4:	429d      	cmp	r5, r3
 802d3a6:	ee70 7a47 	vsub.f32	s15, s0, s14
 802d3aa:	bf09      	itett	eq
 802d3ac:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802d5a0 <__ieee754_rem_pio2f+0x230>
 802d3b0:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802d5a4 <__ieee754_rem_pio2f+0x234>
 802d3b4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802d3b8:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802d5a8 <__ieee754_rem_pio2f+0x238>
 802d3bc:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802d3c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d3c4:	edc0 6a00 	vstr	s13, [r0]
 802d3c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d3cc:	edc0 7a01 	vstr	s15, [r0, #4]
 802d3d0:	2001      	movs	r0, #1
 802d3d2:	b007      	add	sp, #28
 802d3d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d3d6:	429d      	cmp	r5, r3
 802d3d8:	ee70 7a07 	vadd.f32	s15, s0, s14
 802d3dc:	bf09      	itett	eq
 802d3de:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802d5a0 <__ieee754_rem_pio2f+0x230>
 802d3e2:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802d5a4 <__ieee754_rem_pio2f+0x234>
 802d3e6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802d3ea:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802d5a8 <__ieee754_rem_pio2f+0x238>
 802d3ee:	ee77 6a87 	vadd.f32	s13, s15, s14
 802d3f2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d3f6:	edc0 6a00 	vstr	s13, [r0]
 802d3fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d3fe:	edc0 7a01 	vstr	s15, [r0, #4]
 802d402:	f04f 30ff 	mov.w	r0, #4294967295
 802d406:	e7e4      	b.n	802d3d2 <__ieee754_rem_pio2f+0x62>
 802d408:	4b68      	ldr	r3, [pc, #416]	; (802d5ac <__ieee754_rem_pio2f+0x23c>)
 802d40a:	429d      	cmp	r5, r3
 802d40c:	dc71      	bgt.n	802d4f2 <__ieee754_rem_pio2f+0x182>
 802d40e:	f7ff fe33 	bl	802d078 <fabsf>
 802d412:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802d5b0 <__ieee754_rem_pio2f+0x240>
 802d416:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d41a:	eee0 7a07 	vfma.f32	s15, s0, s14
 802d41e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d422:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802d426:	ee17 0a90 	vmov	r0, s15
 802d42a:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d598 <__ieee754_rem_pio2f+0x228>
 802d42e:	eea7 0a67 	vfms.f32	s0, s14, s15
 802d432:	281f      	cmp	r0, #31
 802d434:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d5a4 <__ieee754_rem_pio2f+0x234>
 802d438:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d43c:	eeb1 6a47 	vneg.f32	s12, s14
 802d440:	ee70 6a67 	vsub.f32	s13, s0, s15
 802d444:	ee16 2a90 	vmov	r2, s13
 802d448:	dc1c      	bgt.n	802d484 <__ieee754_rem_pio2f+0x114>
 802d44a:	495a      	ldr	r1, [pc, #360]	; (802d5b4 <__ieee754_rem_pio2f+0x244>)
 802d44c:	1e47      	subs	r7, r0, #1
 802d44e:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802d452:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802d456:	428b      	cmp	r3, r1
 802d458:	d014      	beq.n	802d484 <__ieee754_rem_pio2f+0x114>
 802d45a:	6022      	str	r2, [r4, #0]
 802d45c:	ed94 7a00 	vldr	s14, [r4]
 802d460:	ee30 0a47 	vsub.f32	s0, s0, s14
 802d464:	2e00      	cmp	r6, #0
 802d466:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d46a:	ed84 0a01 	vstr	s0, [r4, #4]
 802d46e:	dab0      	bge.n	802d3d2 <__ieee754_rem_pio2f+0x62>
 802d470:	eeb1 7a47 	vneg.f32	s14, s14
 802d474:	eeb1 0a40 	vneg.f32	s0, s0
 802d478:	ed84 7a00 	vstr	s14, [r4]
 802d47c:	ed84 0a01 	vstr	s0, [r4, #4]
 802d480:	4240      	negs	r0, r0
 802d482:	e7a6      	b.n	802d3d2 <__ieee754_rem_pio2f+0x62>
 802d484:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d488:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802d48c:	2908      	cmp	r1, #8
 802d48e:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802d492:	dde2      	ble.n	802d45a <__ieee754_rem_pio2f+0xea>
 802d494:	eddf 5a42 	vldr	s11, [pc, #264]	; 802d5a0 <__ieee754_rem_pio2f+0x230>
 802d498:	eef0 6a40 	vmov.f32	s13, s0
 802d49c:	eee6 6a25 	vfma.f32	s13, s12, s11
 802d4a0:	ee70 7a66 	vsub.f32	s15, s0, s13
 802d4a4:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d4a8:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802d5a8 <__ieee754_rem_pio2f+0x238>
 802d4ac:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802d4b0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802d4b4:	ee15 2a90 	vmov	r2, s11
 802d4b8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d4bc:	1a5b      	subs	r3, r3, r1
 802d4be:	2b19      	cmp	r3, #25
 802d4c0:	dc04      	bgt.n	802d4cc <__ieee754_rem_pio2f+0x15c>
 802d4c2:	edc4 5a00 	vstr	s11, [r4]
 802d4c6:	eeb0 0a66 	vmov.f32	s0, s13
 802d4ca:	e7c7      	b.n	802d45c <__ieee754_rem_pio2f+0xec>
 802d4cc:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802d5b8 <__ieee754_rem_pio2f+0x248>
 802d4d0:	eeb0 0a66 	vmov.f32	s0, s13
 802d4d4:	eea6 0a25 	vfma.f32	s0, s12, s11
 802d4d8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802d4dc:	eddf 6a37 	vldr	s13, [pc, #220]	; 802d5bc <__ieee754_rem_pio2f+0x24c>
 802d4e0:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d4e4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802d4e8:	ee30 7a67 	vsub.f32	s14, s0, s15
 802d4ec:	ed84 7a00 	vstr	s14, [r4]
 802d4f0:	e7b4      	b.n	802d45c <__ieee754_rem_pio2f+0xec>
 802d4f2:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802d4f6:	db06      	blt.n	802d506 <__ieee754_rem_pio2f+0x196>
 802d4f8:	ee70 7a40 	vsub.f32	s15, s0, s0
 802d4fc:	edc0 7a01 	vstr	s15, [r0, #4]
 802d500:	edc0 7a00 	vstr	s15, [r0]
 802d504:	e742      	b.n	802d38c <__ieee754_rem_pio2f+0x1c>
 802d506:	15ea      	asrs	r2, r5, #23
 802d508:	3a86      	subs	r2, #134	; 0x86
 802d50a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802d50e:	ee07 3a90 	vmov	s15, r3
 802d512:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d516:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802d5c0 <__ieee754_rem_pio2f+0x250>
 802d51a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d51e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d522:	ed8d 7a03 	vstr	s14, [sp, #12]
 802d526:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d52a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d52e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d532:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d536:	ed8d 7a04 	vstr	s14, [sp, #16]
 802d53a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d53e:	eef5 7a40 	vcmp.f32	s15, #0.0
 802d542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d546:	edcd 7a05 	vstr	s15, [sp, #20]
 802d54a:	d11e      	bne.n	802d58a <__ieee754_rem_pio2f+0x21a>
 802d54c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802d550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d554:	bf14      	ite	ne
 802d556:	2302      	movne	r3, #2
 802d558:	2301      	moveq	r3, #1
 802d55a:	491a      	ldr	r1, [pc, #104]	; (802d5c4 <__ieee754_rem_pio2f+0x254>)
 802d55c:	9101      	str	r1, [sp, #4]
 802d55e:	2102      	movs	r1, #2
 802d560:	9100      	str	r1, [sp, #0]
 802d562:	a803      	add	r0, sp, #12
 802d564:	4621      	mov	r1, r4
 802d566:	f000 f895 	bl	802d694 <__kernel_rem_pio2f>
 802d56a:	2e00      	cmp	r6, #0
 802d56c:	f6bf af31 	bge.w	802d3d2 <__ieee754_rem_pio2f+0x62>
 802d570:	edd4 7a00 	vldr	s15, [r4]
 802d574:	eef1 7a67 	vneg.f32	s15, s15
 802d578:	edc4 7a00 	vstr	s15, [r4]
 802d57c:	edd4 7a01 	vldr	s15, [r4, #4]
 802d580:	eef1 7a67 	vneg.f32	s15, s15
 802d584:	edc4 7a01 	vstr	s15, [r4, #4]
 802d588:	e77a      	b.n	802d480 <__ieee754_rem_pio2f+0x110>
 802d58a:	2303      	movs	r3, #3
 802d58c:	e7e5      	b.n	802d55a <__ieee754_rem_pio2f+0x1ea>
 802d58e:	bf00      	nop
 802d590:	3f490fd8 	.word	0x3f490fd8
 802d594:	4016cbe3 	.word	0x4016cbe3
 802d598:	3fc90f80 	.word	0x3fc90f80
 802d59c:	3fc90fd0 	.word	0x3fc90fd0
 802d5a0:	37354400 	.word	0x37354400
 802d5a4:	37354443 	.word	0x37354443
 802d5a8:	2e85a308 	.word	0x2e85a308
 802d5ac:	43490f80 	.word	0x43490f80
 802d5b0:	3f22f984 	.word	0x3f22f984
 802d5b4:	08045a2c 	.word	0x08045a2c
 802d5b8:	2e85a300 	.word	0x2e85a300
 802d5bc:	248d3132 	.word	0x248d3132
 802d5c0:	43800000 	.word	0x43800000
 802d5c4:	08045aac 	.word	0x08045aac

0802d5c8 <scalbnf>:
 802d5c8:	ee10 3a10 	vmov	r3, s0
 802d5cc:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802d5d0:	d02b      	beq.n	802d62a <scalbnf+0x62>
 802d5d2:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802d5d6:	d302      	bcc.n	802d5de <scalbnf+0x16>
 802d5d8:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d5dc:	4770      	bx	lr
 802d5de:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802d5e2:	d123      	bne.n	802d62c <scalbnf+0x64>
 802d5e4:	4b24      	ldr	r3, [pc, #144]	; (802d678 <scalbnf+0xb0>)
 802d5e6:	eddf 7a25 	vldr	s15, [pc, #148]	; 802d67c <scalbnf+0xb4>
 802d5ea:	4298      	cmp	r0, r3
 802d5ec:	ee20 0a27 	vmul.f32	s0, s0, s15
 802d5f0:	db17      	blt.n	802d622 <scalbnf+0x5a>
 802d5f2:	ee10 3a10 	vmov	r3, s0
 802d5f6:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d5fa:	3a19      	subs	r2, #25
 802d5fc:	f24c 3150 	movw	r1, #50000	; 0xc350
 802d600:	4288      	cmp	r0, r1
 802d602:	dd15      	ble.n	802d630 <scalbnf+0x68>
 802d604:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d680 <scalbnf+0xb8>
 802d608:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802d684 <scalbnf+0xbc>
 802d60c:	ee10 3a10 	vmov	r3, s0
 802d610:	eeb0 7a67 	vmov.f32	s14, s15
 802d614:	2b00      	cmp	r3, #0
 802d616:	bfb8      	it	lt
 802d618:	eef0 7a66 	vmovlt.f32	s15, s13
 802d61c:	ee27 0a87 	vmul.f32	s0, s15, s14
 802d620:	4770      	bx	lr
 802d622:	eddf 7a19 	vldr	s15, [pc, #100]	; 802d688 <scalbnf+0xc0>
 802d626:	ee27 0a80 	vmul.f32	s0, s15, s0
 802d62a:	4770      	bx	lr
 802d62c:	0dd2      	lsrs	r2, r2, #23
 802d62e:	e7e5      	b.n	802d5fc <scalbnf+0x34>
 802d630:	4410      	add	r0, r2
 802d632:	28fe      	cmp	r0, #254	; 0xfe
 802d634:	dce6      	bgt.n	802d604 <scalbnf+0x3c>
 802d636:	2800      	cmp	r0, #0
 802d638:	dd06      	ble.n	802d648 <scalbnf+0x80>
 802d63a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d63e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d642:	ee00 3a10 	vmov	s0, r3
 802d646:	4770      	bx	lr
 802d648:	f110 0f16 	cmn.w	r0, #22
 802d64c:	da09      	bge.n	802d662 <scalbnf+0x9a>
 802d64e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d688 <scalbnf+0xc0>
 802d652:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802d68c <scalbnf+0xc4>
 802d656:	ee10 3a10 	vmov	r3, s0
 802d65a:	eeb0 7a67 	vmov.f32	s14, s15
 802d65e:	2b00      	cmp	r3, #0
 802d660:	e7d9      	b.n	802d616 <scalbnf+0x4e>
 802d662:	3019      	adds	r0, #25
 802d664:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d668:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d66c:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802d690 <scalbnf+0xc8>
 802d670:	ee07 3a90 	vmov	s15, r3
 802d674:	e7d7      	b.n	802d626 <scalbnf+0x5e>
 802d676:	bf00      	nop
 802d678:	ffff3cb0 	.word	0xffff3cb0
 802d67c:	4c000000 	.word	0x4c000000
 802d680:	7149f2ca 	.word	0x7149f2ca
 802d684:	f149f2ca 	.word	0xf149f2ca
 802d688:	0da24260 	.word	0x0da24260
 802d68c:	8da24260 	.word	0x8da24260
 802d690:	33000000 	.word	0x33000000

0802d694 <__kernel_rem_pio2f>:
 802d694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d698:	ed2d 8b04 	vpush	{d8-d9}
 802d69c:	b0d9      	sub	sp, #356	; 0x164
 802d69e:	4688      	mov	r8, r1
 802d6a0:	9002      	str	r0, [sp, #8]
 802d6a2:	49b8      	ldr	r1, [pc, #736]	; (802d984 <__kernel_rem_pio2f+0x2f0>)
 802d6a4:	9866      	ldr	r0, [sp, #408]	; 0x198
 802d6a6:	9301      	str	r3, [sp, #4]
 802d6a8:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802d6ac:	9901      	ldr	r1, [sp, #4]
 802d6ae:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802d6b0:	f101 3bff 	add.w	fp, r1, #4294967295
 802d6b4:	1d11      	adds	r1, r2, #4
 802d6b6:	db25      	blt.n	802d704 <__kernel_rem_pio2f+0x70>
 802d6b8:	1ed0      	subs	r0, r2, #3
 802d6ba:	bf48      	it	mi
 802d6bc:	1d10      	addmi	r0, r2, #4
 802d6be:	10c0      	asrs	r0, r0, #3
 802d6c0:	1c45      	adds	r5, r0, #1
 802d6c2:	00e9      	lsls	r1, r5, #3
 802d6c4:	eba0 070b 	sub.w	r7, r0, fp
 802d6c8:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802d994 <__kernel_rem_pio2f+0x300>
 802d6cc:	9103      	str	r1, [sp, #12]
 802d6ce:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802d6d2:	eb0a 0c0b 	add.w	ip, sl, fp
 802d6d6:	ae1c      	add	r6, sp, #112	; 0x70
 802d6d8:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802d6dc:	2400      	movs	r4, #0
 802d6de:	4564      	cmp	r4, ip
 802d6e0:	dd12      	ble.n	802d708 <__kernel_rem_pio2f+0x74>
 802d6e2:	9901      	ldr	r1, [sp, #4]
 802d6e4:	ac1c      	add	r4, sp, #112	; 0x70
 802d6e6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802d6ea:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802d6ee:	f04f 0c00 	mov.w	ip, #0
 802d6f2:	45d4      	cmp	ip, sl
 802d6f4:	dc27      	bgt.n	802d746 <__kernel_rem_pio2f+0xb2>
 802d6f6:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d6fa:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802d994 <__kernel_rem_pio2f+0x300>
 802d6fe:	4627      	mov	r7, r4
 802d700:	2600      	movs	r6, #0
 802d702:	e016      	b.n	802d732 <__kernel_rem_pio2f+0x9e>
 802d704:	2000      	movs	r0, #0
 802d706:	e7db      	b.n	802d6c0 <__kernel_rem_pio2f+0x2c>
 802d708:	42e7      	cmn	r7, r4
 802d70a:	bf5d      	ittte	pl
 802d70c:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802d710:	ee07 1a90 	vmovpl	s15, r1
 802d714:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802d718:	eef0 7a47 	vmovmi.f32	s15, s14
 802d71c:	ece6 7a01 	vstmia	r6!, {s15}
 802d720:	3401      	adds	r4, #1
 802d722:	e7dc      	b.n	802d6de <__kernel_rem_pio2f+0x4a>
 802d724:	ecfe 6a01 	vldmia	lr!, {s13}
 802d728:	ed97 7a00 	vldr	s14, [r7]
 802d72c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d730:	3601      	adds	r6, #1
 802d732:	455e      	cmp	r6, fp
 802d734:	f1a7 0704 	sub.w	r7, r7, #4
 802d738:	ddf4      	ble.n	802d724 <__kernel_rem_pio2f+0x90>
 802d73a:	ece9 7a01 	vstmia	r9!, {s15}
 802d73e:	f10c 0c01 	add.w	ip, ip, #1
 802d742:	3404      	adds	r4, #4
 802d744:	e7d5      	b.n	802d6f2 <__kernel_rem_pio2f+0x5e>
 802d746:	a908      	add	r1, sp, #32
 802d748:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802d74c:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802d750:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802d990 <__kernel_rem_pio2f+0x2fc>
 802d754:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802d98c <__kernel_rem_pio2f+0x2f8>
 802d758:	9105      	str	r1, [sp, #20]
 802d75a:	9304      	str	r3, [sp, #16]
 802d75c:	4656      	mov	r6, sl
 802d75e:	00b3      	lsls	r3, r6, #2
 802d760:	9306      	str	r3, [sp, #24]
 802d762:	ab58      	add	r3, sp, #352	; 0x160
 802d764:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d768:	ac08      	add	r4, sp, #32
 802d76a:	ab44      	add	r3, sp, #272	; 0x110
 802d76c:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802d770:	46a4      	mov	ip, r4
 802d772:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d776:	4637      	mov	r7, r6
 802d778:	2f00      	cmp	r7, #0
 802d77a:	f1a0 0004 	sub.w	r0, r0, #4
 802d77e:	dc4a      	bgt.n	802d816 <__kernel_rem_pio2f+0x182>
 802d780:	4628      	mov	r0, r5
 802d782:	9207      	str	r2, [sp, #28]
 802d784:	f7ff ff20 	bl	802d5c8 <scalbnf>
 802d788:	eeb0 8a40 	vmov.f32	s16, s0
 802d78c:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802d790:	ee28 0a00 	vmul.f32	s0, s16, s0
 802d794:	f7ff fd04 	bl	802d1a0 <floorf>
 802d798:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802d79c:	eea0 8a67 	vfms.f32	s16, s0, s15
 802d7a0:	2d00      	cmp	r5, #0
 802d7a2:	9a07      	ldr	r2, [sp, #28]
 802d7a4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802d7a8:	ee17 9a90 	vmov	r9, s15
 802d7ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d7b0:	ee38 8a67 	vsub.f32	s16, s16, s15
 802d7b4:	dd41      	ble.n	802d83a <__kernel_rem_pio2f+0x1a6>
 802d7b6:	f106 3cff 	add.w	ip, r6, #4294967295
 802d7ba:	ab08      	add	r3, sp, #32
 802d7bc:	f1c5 0e08 	rsb	lr, r5, #8
 802d7c0:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802d7c4:	fa47 f00e 	asr.w	r0, r7, lr
 802d7c8:	4481      	add	r9, r0
 802d7ca:	fa00 f00e 	lsl.w	r0, r0, lr
 802d7ce:	1a3f      	subs	r7, r7, r0
 802d7d0:	f1c5 0007 	rsb	r0, r5, #7
 802d7d4:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802d7d8:	4107      	asrs	r7, r0
 802d7da:	2f00      	cmp	r7, #0
 802d7dc:	dd3c      	ble.n	802d858 <__kernel_rem_pio2f+0x1c4>
 802d7de:	f04f 0e00 	mov.w	lr, #0
 802d7e2:	f109 0901 	add.w	r9, r9, #1
 802d7e6:	4671      	mov	r1, lr
 802d7e8:	4576      	cmp	r6, lr
 802d7ea:	dc67      	bgt.n	802d8bc <__kernel_rem_pio2f+0x228>
 802d7ec:	2d00      	cmp	r5, #0
 802d7ee:	dd03      	ble.n	802d7f8 <__kernel_rem_pio2f+0x164>
 802d7f0:	2d01      	cmp	r5, #1
 802d7f2:	d074      	beq.n	802d8de <__kernel_rem_pio2f+0x24a>
 802d7f4:	2d02      	cmp	r5, #2
 802d7f6:	d07b      	beq.n	802d8f0 <__kernel_rem_pio2f+0x25c>
 802d7f8:	2f02      	cmp	r7, #2
 802d7fa:	d12d      	bne.n	802d858 <__kernel_rem_pio2f+0x1c4>
 802d7fc:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d800:	ee30 8a48 	vsub.f32	s16, s0, s16
 802d804:	b341      	cbz	r1, 802d858 <__kernel_rem_pio2f+0x1c4>
 802d806:	4628      	mov	r0, r5
 802d808:	9207      	str	r2, [sp, #28]
 802d80a:	f7ff fedd 	bl	802d5c8 <scalbnf>
 802d80e:	9a07      	ldr	r2, [sp, #28]
 802d810:	ee38 8a40 	vsub.f32	s16, s16, s0
 802d814:	e020      	b.n	802d858 <__kernel_rem_pio2f+0x1c4>
 802d816:	ee60 7a28 	vmul.f32	s15, s0, s17
 802d81a:	3f01      	subs	r7, #1
 802d81c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d820:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d824:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802d828:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d82c:	ecac 0a01 	vstmia	ip!, {s0}
 802d830:	ed90 0a00 	vldr	s0, [r0]
 802d834:	ee37 0a80 	vadd.f32	s0, s15, s0
 802d838:	e79e      	b.n	802d778 <__kernel_rem_pio2f+0xe4>
 802d83a:	d105      	bne.n	802d848 <__kernel_rem_pio2f+0x1b4>
 802d83c:	1e70      	subs	r0, r6, #1
 802d83e:	ab08      	add	r3, sp, #32
 802d840:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802d844:	11ff      	asrs	r7, r7, #7
 802d846:	e7c8      	b.n	802d7da <__kernel_rem_pio2f+0x146>
 802d848:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d84c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802d850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d854:	da30      	bge.n	802d8b8 <__kernel_rem_pio2f+0x224>
 802d856:	2700      	movs	r7, #0
 802d858:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802d85c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d860:	f040 809a 	bne.w	802d998 <__kernel_rem_pio2f+0x304>
 802d864:	1e74      	subs	r4, r6, #1
 802d866:	46a4      	mov	ip, r4
 802d868:	2100      	movs	r1, #0
 802d86a:	45d4      	cmp	ip, sl
 802d86c:	da47      	bge.n	802d8fe <__kernel_rem_pio2f+0x26a>
 802d86e:	2900      	cmp	r1, #0
 802d870:	d063      	beq.n	802d93a <__kernel_rem_pio2f+0x2a6>
 802d872:	ab08      	add	r3, sp, #32
 802d874:	3d08      	subs	r5, #8
 802d876:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802d87a:	2b00      	cmp	r3, #0
 802d87c:	d07f      	beq.n	802d97e <__kernel_rem_pio2f+0x2ea>
 802d87e:	4628      	mov	r0, r5
 802d880:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d884:	f7ff fea0 	bl	802d5c8 <scalbnf>
 802d888:	1c63      	adds	r3, r4, #1
 802d88a:	aa44      	add	r2, sp, #272	; 0x110
 802d88c:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802d990 <__kernel_rem_pio2f+0x2fc>
 802d890:	0099      	lsls	r1, r3, #2
 802d892:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802d896:	4623      	mov	r3, r4
 802d898:	2b00      	cmp	r3, #0
 802d89a:	f280 80ad 	bge.w	802d9f8 <__kernel_rem_pio2f+0x364>
 802d89e:	4623      	mov	r3, r4
 802d8a0:	2b00      	cmp	r3, #0
 802d8a2:	f2c0 80cb 	blt.w	802da3c <__kernel_rem_pio2f+0x3a8>
 802d8a6:	aa44      	add	r2, sp, #272	; 0x110
 802d8a8:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802d8ac:	4e36      	ldr	r6, [pc, #216]	; (802d988 <__kernel_rem_pio2f+0x2f4>)
 802d8ae:	eddf 7a39 	vldr	s15, [pc, #228]	; 802d994 <__kernel_rem_pio2f+0x300>
 802d8b2:	2000      	movs	r0, #0
 802d8b4:	1ae2      	subs	r2, r4, r3
 802d8b6:	e0b6      	b.n	802da26 <__kernel_rem_pio2f+0x392>
 802d8b8:	2702      	movs	r7, #2
 802d8ba:	e790      	b.n	802d7de <__kernel_rem_pio2f+0x14a>
 802d8bc:	6820      	ldr	r0, [r4, #0]
 802d8be:	b949      	cbnz	r1, 802d8d4 <__kernel_rem_pio2f+0x240>
 802d8c0:	b118      	cbz	r0, 802d8ca <__kernel_rem_pio2f+0x236>
 802d8c2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802d8c6:	6020      	str	r0, [r4, #0]
 802d8c8:	2001      	movs	r0, #1
 802d8ca:	f10e 0e01 	add.w	lr, lr, #1
 802d8ce:	3404      	adds	r4, #4
 802d8d0:	4601      	mov	r1, r0
 802d8d2:	e789      	b.n	802d7e8 <__kernel_rem_pio2f+0x154>
 802d8d4:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802d8d8:	6020      	str	r0, [r4, #0]
 802d8da:	4608      	mov	r0, r1
 802d8dc:	e7f5      	b.n	802d8ca <__kernel_rem_pio2f+0x236>
 802d8de:	1e74      	subs	r4, r6, #1
 802d8e0:	ab08      	add	r3, sp, #32
 802d8e2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d8e6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802d8ea:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802d8ee:	e783      	b.n	802d7f8 <__kernel_rem_pio2f+0x164>
 802d8f0:	1e74      	subs	r4, r6, #1
 802d8f2:	ab08      	add	r3, sp, #32
 802d8f4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d8f8:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802d8fc:	e7f5      	b.n	802d8ea <__kernel_rem_pio2f+0x256>
 802d8fe:	ab08      	add	r3, sp, #32
 802d900:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802d904:	f10c 3cff 	add.w	ip, ip, #4294967295
 802d908:	4301      	orrs	r1, r0
 802d90a:	e7ae      	b.n	802d86a <__kernel_rem_pio2f+0x1d6>
 802d90c:	3001      	adds	r0, #1
 802d90e:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802d912:	2f00      	cmp	r7, #0
 802d914:	d0fa      	beq.n	802d90c <__kernel_rem_pio2f+0x278>
 802d916:	9b06      	ldr	r3, [sp, #24]
 802d918:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802d91c:	eb0d 0403 	add.w	r4, sp, r3
 802d920:	9b01      	ldr	r3, [sp, #4]
 802d922:	18f7      	adds	r7, r6, r3
 802d924:	ab1c      	add	r3, sp, #112	; 0x70
 802d926:	f106 0c01 	add.w	ip, r6, #1
 802d92a:	3c4c      	subs	r4, #76	; 0x4c
 802d92c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802d930:	4430      	add	r0, r6
 802d932:	4560      	cmp	r0, ip
 802d934:	da04      	bge.n	802d940 <__kernel_rem_pio2f+0x2ac>
 802d936:	4606      	mov	r6, r0
 802d938:	e711      	b.n	802d75e <__kernel_rem_pio2f+0xca>
 802d93a:	9c05      	ldr	r4, [sp, #20]
 802d93c:	2001      	movs	r0, #1
 802d93e:	e7e6      	b.n	802d90e <__kernel_rem_pio2f+0x27a>
 802d940:	9b04      	ldr	r3, [sp, #16]
 802d942:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d946:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802d94a:	9306      	str	r3, [sp, #24]
 802d94c:	ee07 3a90 	vmov	s15, r3
 802d950:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d954:	2600      	movs	r6, #0
 802d956:	ece7 7a01 	vstmia	r7!, {s15}
 802d95a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d994 <__kernel_rem_pio2f+0x300>
 802d95e:	46b9      	mov	r9, r7
 802d960:	455e      	cmp	r6, fp
 802d962:	dd04      	ble.n	802d96e <__kernel_rem_pio2f+0x2da>
 802d964:	ece4 7a01 	vstmia	r4!, {s15}
 802d968:	f10c 0c01 	add.w	ip, ip, #1
 802d96c:	e7e1      	b.n	802d932 <__kernel_rem_pio2f+0x29e>
 802d96e:	ecfe 6a01 	vldmia	lr!, {s13}
 802d972:	ed39 7a01 	vldmdb	r9!, {s14}
 802d976:	3601      	adds	r6, #1
 802d978:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d97c:	e7f0      	b.n	802d960 <__kernel_rem_pio2f+0x2cc>
 802d97e:	3c01      	subs	r4, #1
 802d980:	e777      	b.n	802d872 <__kernel_rem_pio2f+0x1de>
 802d982:	bf00      	nop
 802d984:	08045df0 	.word	0x08045df0
 802d988:	08045dc4 	.word	0x08045dc4
 802d98c:	43800000 	.word	0x43800000
 802d990:	3b800000 	.word	0x3b800000
 802d994:	00000000 	.word	0x00000000
 802d998:	9b03      	ldr	r3, [sp, #12]
 802d99a:	eeb0 0a48 	vmov.f32	s0, s16
 802d99e:	1a98      	subs	r0, r3, r2
 802d9a0:	f7ff fe12 	bl	802d5c8 <scalbnf>
 802d9a4:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802d98c <__kernel_rem_pio2f+0x2f8>
 802d9a8:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802d9ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d9b0:	db19      	blt.n	802d9e6 <__kernel_rem_pio2f+0x352>
 802d9b2:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802d990 <__kernel_rem_pio2f+0x2fc>
 802d9b6:	ee60 7a27 	vmul.f32	s15, s0, s15
 802d9ba:	aa08      	add	r2, sp, #32
 802d9bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d9c0:	1c74      	adds	r4, r6, #1
 802d9c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d9c6:	3508      	adds	r5, #8
 802d9c8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802d9cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d9d0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d9d4:	ee10 3a10 	vmov	r3, s0
 802d9d8:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d9dc:	ee17 3a90 	vmov	r3, s15
 802d9e0:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802d9e4:	e74b      	b.n	802d87e <__kernel_rem_pio2f+0x1ea>
 802d9e6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d9ea:	aa08      	add	r2, sp, #32
 802d9ec:	ee10 3a10 	vmov	r3, s0
 802d9f0:	4634      	mov	r4, r6
 802d9f2:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d9f6:	e742      	b.n	802d87e <__kernel_rem_pio2f+0x1ea>
 802d9f8:	a808      	add	r0, sp, #32
 802d9fa:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802d9fe:	9001      	str	r0, [sp, #4]
 802da00:	ee07 0a90 	vmov	s15, r0
 802da04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802da08:	3b01      	subs	r3, #1
 802da0a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802da0e:	ee20 0a07 	vmul.f32	s0, s0, s14
 802da12:	ed62 7a01 	vstmdb	r2!, {s15}
 802da16:	e73f      	b.n	802d898 <__kernel_rem_pio2f+0x204>
 802da18:	ecf6 6a01 	vldmia	r6!, {s13}
 802da1c:	ecb5 7a01 	vldmia	r5!, {s14}
 802da20:	eee6 7a87 	vfma.f32	s15, s13, s14
 802da24:	3001      	adds	r0, #1
 802da26:	4550      	cmp	r0, sl
 802da28:	dc01      	bgt.n	802da2e <__kernel_rem_pio2f+0x39a>
 802da2a:	4290      	cmp	r0, r2
 802da2c:	ddf4      	ble.n	802da18 <__kernel_rem_pio2f+0x384>
 802da2e:	a858      	add	r0, sp, #352	; 0x160
 802da30:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802da34:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802da38:	3b01      	subs	r3, #1
 802da3a:	e731      	b.n	802d8a0 <__kernel_rem_pio2f+0x20c>
 802da3c:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802da3e:	2b02      	cmp	r3, #2
 802da40:	dc09      	bgt.n	802da56 <__kernel_rem_pio2f+0x3c2>
 802da42:	2b00      	cmp	r3, #0
 802da44:	dc2b      	bgt.n	802da9e <__kernel_rem_pio2f+0x40a>
 802da46:	d044      	beq.n	802dad2 <__kernel_rem_pio2f+0x43e>
 802da48:	f009 0007 	and.w	r0, r9, #7
 802da4c:	b059      	add	sp, #356	; 0x164
 802da4e:	ecbd 8b04 	vpop	{d8-d9}
 802da52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802da56:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802da58:	2b03      	cmp	r3, #3
 802da5a:	d1f5      	bne.n	802da48 <__kernel_rem_pio2f+0x3b4>
 802da5c:	aa30      	add	r2, sp, #192	; 0xc0
 802da5e:	1f0b      	subs	r3, r1, #4
 802da60:	4413      	add	r3, r2
 802da62:	461a      	mov	r2, r3
 802da64:	4620      	mov	r0, r4
 802da66:	2800      	cmp	r0, #0
 802da68:	f1a2 0204 	sub.w	r2, r2, #4
 802da6c:	dc52      	bgt.n	802db14 <__kernel_rem_pio2f+0x480>
 802da6e:	4622      	mov	r2, r4
 802da70:	2a01      	cmp	r2, #1
 802da72:	f1a3 0304 	sub.w	r3, r3, #4
 802da76:	dc5d      	bgt.n	802db34 <__kernel_rem_pio2f+0x4a0>
 802da78:	ab30      	add	r3, sp, #192	; 0xc0
 802da7a:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802d994 <__kernel_rem_pio2f+0x300>
 802da7e:	440b      	add	r3, r1
 802da80:	2c01      	cmp	r4, #1
 802da82:	dc67      	bgt.n	802db54 <__kernel_rem_pio2f+0x4c0>
 802da84:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802da88:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802da8c:	2f00      	cmp	r7, #0
 802da8e:	d167      	bne.n	802db60 <__kernel_rem_pio2f+0x4cc>
 802da90:	edc8 6a00 	vstr	s13, [r8]
 802da94:	ed88 7a01 	vstr	s14, [r8, #4]
 802da98:	edc8 7a02 	vstr	s15, [r8, #8]
 802da9c:	e7d4      	b.n	802da48 <__kernel_rem_pio2f+0x3b4>
 802da9e:	ab30      	add	r3, sp, #192	; 0xc0
 802daa0:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802d994 <__kernel_rem_pio2f+0x300>
 802daa4:	440b      	add	r3, r1
 802daa6:	4622      	mov	r2, r4
 802daa8:	2a00      	cmp	r2, #0
 802daaa:	da24      	bge.n	802daf6 <__kernel_rem_pio2f+0x462>
 802daac:	b34f      	cbz	r7, 802db02 <__kernel_rem_pio2f+0x46e>
 802daae:	eef1 7a47 	vneg.f32	s15, s14
 802dab2:	edc8 7a00 	vstr	s15, [r8]
 802dab6:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802daba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dabe:	aa31      	add	r2, sp, #196	; 0xc4
 802dac0:	2301      	movs	r3, #1
 802dac2:	429c      	cmp	r4, r3
 802dac4:	da20      	bge.n	802db08 <__kernel_rem_pio2f+0x474>
 802dac6:	b10f      	cbz	r7, 802dacc <__kernel_rem_pio2f+0x438>
 802dac8:	eef1 7a67 	vneg.f32	s15, s15
 802dacc:	edc8 7a01 	vstr	s15, [r8, #4]
 802dad0:	e7ba      	b.n	802da48 <__kernel_rem_pio2f+0x3b4>
 802dad2:	ab30      	add	r3, sp, #192	; 0xc0
 802dad4:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802d994 <__kernel_rem_pio2f+0x300>
 802dad8:	440b      	add	r3, r1
 802dada:	2c00      	cmp	r4, #0
 802dadc:	da05      	bge.n	802daea <__kernel_rem_pio2f+0x456>
 802dade:	b10f      	cbz	r7, 802dae4 <__kernel_rem_pio2f+0x450>
 802dae0:	eef1 7a67 	vneg.f32	s15, s15
 802dae4:	edc8 7a00 	vstr	s15, [r8]
 802dae8:	e7ae      	b.n	802da48 <__kernel_rem_pio2f+0x3b4>
 802daea:	ed33 7a01 	vldmdb	r3!, {s14}
 802daee:	3c01      	subs	r4, #1
 802daf0:	ee77 7a87 	vadd.f32	s15, s15, s14
 802daf4:	e7f1      	b.n	802dada <__kernel_rem_pio2f+0x446>
 802daf6:	ed73 7a01 	vldmdb	r3!, {s15}
 802dafa:	3a01      	subs	r2, #1
 802dafc:	ee37 7a27 	vadd.f32	s14, s14, s15
 802db00:	e7d2      	b.n	802daa8 <__kernel_rem_pio2f+0x414>
 802db02:	eef0 7a47 	vmov.f32	s15, s14
 802db06:	e7d4      	b.n	802dab2 <__kernel_rem_pio2f+0x41e>
 802db08:	ecb2 7a01 	vldmia	r2!, {s14}
 802db0c:	3301      	adds	r3, #1
 802db0e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802db12:	e7d6      	b.n	802dac2 <__kernel_rem_pio2f+0x42e>
 802db14:	edd2 7a00 	vldr	s15, [r2]
 802db18:	edd2 6a01 	vldr	s13, [r2, #4]
 802db1c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802db20:	3801      	subs	r0, #1
 802db22:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802db26:	ed82 7a00 	vstr	s14, [r2]
 802db2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802db2e:	edc2 7a01 	vstr	s15, [r2, #4]
 802db32:	e798      	b.n	802da66 <__kernel_rem_pio2f+0x3d2>
 802db34:	edd3 7a00 	vldr	s15, [r3]
 802db38:	edd3 6a01 	vldr	s13, [r3, #4]
 802db3c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802db40:	3a01      	subs	r2, #1
 802db42:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802db46:	ed83 7a00 	vstr	s14, [r3]
 802db4a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802db4e:	edc3 7a01 	vstr	s15, [r3, #4]
 802db52:	e78d      	b.n	802da70 <__kernel_rem_pio2f+0x3dc>
 802db54:	ed33 7a01 	vldmdb	r3!, {s14}
 802db58:	3c01      	subs	r4, #1
 802db5a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802db5e:	e78f      	b.n	802da80 <__kernel_rem_pio2f+0x3ec>
 802db60:	eef1 6a66 	vneg.f32	s13, s13
 802db64:	eeb1 7a47 	vneg.f32	s14, s14
 802db68:	edc8 6a00 	vstr	s13, [r8]
 802db6c:	ed88 7a01 	vstr	s14, [r8, #4]
 802db70:	eef1 7a67 	vneg.f32	s15, s15
 802db74:	e790      	b.n	802da98 <__kernel_rem_pio2f+0x404>
 802db76:	bf00      	nop

0802db78 <abort>:
 802db78:	b508      	push	{r3, lr}
 802db7a:	2006      	movs	r0, #6
 802db7c:	f000 fa3a 	bl	802dff4 <raise>
 802db80:	2001      	movs	r0, #1
 802db82:	f7d4 ff31 	bl	80029e8 <_exit>
	...

0802db88 <__assert_func>:
 802db88:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802db8a:	4614      	mov	r4, r2
 802db8c:	461a      	mov	r2, r3
 802db8e:	4b09      	ldr	r3, [pc, #36]	; (802dbb4 <__assert_func+0x2c>)
 802db90:	681b      	ldr	r3, [r3, #0]
 802db92:	4605      	mov	r5, r0
 802db94:	68d8      	ldr	r0, [r3, #12]
 802db96:	b14c      	cbz	r4, 802dbac <__assert_func+0x24>
 802db98:	4b07      	ldr	r3, [pc, #28]	; (802dbb8 <__assert_func+0x30>)
 802db9a:	9100      	str	r1, [sp, #0]
 802db9c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802dba0:	4906      	ldr	r1, [pc, #24]	; (802dbbc <__assert_func+0x34>)
 802dba2:	462b      	mov	r3, r5
 802dba4:	f000 f982 	bl	802deac <fiprintf>
 802dba8:	f7ff ffe6 	bl	802db78 <abort>
 802dbac:	4b04      	ldr	r3, [pc, #16]	; (802dbc0 <__assert_func+0x38>)
 802dbae:	461c      	mov	r4, r3
 802dbb0:	e7f3      	b.n	802db9a <__assert_func+0x12>
 802dbb2:	bf00      	nop
 802dbb4:	20000164 	.word	0x20000164
 802dbb8:	08045dfc 	.word	0x08045dfc
 802dbbc:	08045e09 	.word	0x08045e09
 802dbc0:	08045e37 	.word	0x08045e37

0802dbc4 <atexit>:
 802dbc4:	2300      	movs	r3, #0
 802dbc6:	4601      	mov	r1, r0
 802dbc8:	461a      	mov	r2, r3
 802dbca:	4618      	mov	r0, r3
 802dbcc:	f000 bb16 	b.w	802e1fc <__register_exitproc>

0802dbd0 <malloc>:
 802dbd0:	4b02      	ldr	r3, [pc, #8]	; (802dbdc <malloc+0xc>)
 802dbd2:	4601      	mov	r1, r0
 802dbd4:	6818      	ldr	r0, [r3, #0]
 802dbd6:	f000 b82b 	b.w	802dc30 <_malloc_r>
 802dbda:	bf00      	nop
 802dbdc:	20000164 	.word	0x20000164

0802dbe0 <free>:
 802dbe0:	4b02      	ldr	r3, [pc, #8]	; (802dbec <free+0xc>)
 802dbe2:	4601      	mov	r1, r0
 802dbe4:	6818      	ldr	r0, [r3, #0]
 802dbe6:	f000 bb67 	b.w	802e2b8 <_free_r>
 802dbea:	bf00      	nop
 802dbec:	20000164 	.word	0x20000164

0802dbf0 <sbrk_aligned>:
 802dbf0:	b570      	push	{r4, r5, r6, lr}
 802dbf2:	4e0e      	ldr	r6, [pc, #56]	; (802dc2c <sbrk_aligned+0x3c>)
 802dbf4:	460c      	mov	r4, r1
 802dbf6:	6831      	ldr	r1, [r6, #0]
 802dbf8:	4605      	mov	r5, r0
 802dbfa:	b911      	cbnz	r1, 802dc02 <sbrk_aligned+0x12>
 802dbfc:	f000 faa0 	bl	802e140 <_sbrk_r>
 802dc00:	6030      	str	r0, [r6, #0]
 802dc02:	4621      	mov	r1, r4
 802dc04:	4628      	mov	r0, r5
 802dc06:	f000 fa9b 	bl	802e140 <_sbrk_r>
 802dc0a:	1c43      	adds	r3, r0, #1
 802dc0c:	d00a      	beq.n	802dc24 <sbrk_aligned+0x34>
 802dc0e:	1cc4      	adds	r4, r0, #3
 802dc10:	f024 0403 	bic.w	r4, r4, #3
 802dc14:	42a0      	cmp	r0, r4
 802dc16:	d007      	beq.n	802dc28 <sbrk_aligned+0x38>
 802dc18:	1a21      	subs	r1, r4, r0
 802dc1a:	4628      	mov	r0, r5
 802dc1c:	f000 fa90 	bl	802e140 <_sbrk_r>
 802dc20:	3001      	adds	r0, #1
 802dc22:	d101      	bne.n	802dc28 <sbrk_aligned+0x38>
 802dc24:	f04f 34ff 	mov.w	r4, #4294967295
 802dc28:	4620      	mov	r0, r4
 802dc2a:	bd70      	pop	{r4, r5, r6, pc}
 802dc2c:	200141ac 	.word	0x200141ac

0802dc30 <_malloc_r>:
 802dc30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802dc34:	1ccd      	adds	r5, r1, #3
 802dc36:	f025 0503 	bic.w	r5, r5, #3
 802dc3a:	3508      	adds	r5, #8
 802dc3c:	2d0c      	cmp	r5, #12
 802dc3e:	bf38      	it	cc
 802dc40:	250c      	movcc	r5, #12
 802dc42:	2d00      	cmp	r5, #0
 802dc44:	4607      	mov	r7, r0
 802dc46:	db01      	blt.n	802dc4c <_malloc_r+0x1c>
 802dc48:	42a9      	cmp	r1, r5
 802dc4a:	d905      	bls.n	802dc58 <_malloc_r+0x28>
 802dc4c:	230c      	movs	r3, #12
 802dc4e:	603b      	str	r3, [r7, #0]
 802dc50:	2600      	movs	r6, #0
 802dc52:	4630      	mov	r0, r6
 802dc54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802dc58:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802dd2c <_malloc_r+0xfc>
 802dc5c:	f000 f868 	bl	802dd30 <__malloc_lock>
 802dc60:	f8d8 3000 	ldr.w	r3, [r8]
 802dc64:	461c      	mov	r4, r3
 802dc66:	bb5c      	cbnz	r4, 802dcc0 <_malloc_r+0x90>
 802dc68:	4629      	mov	r1, r5
 802dc6a:	4638      	mov	r0, r7
 802dc6c:	f7ff ffc0 	bl	802dbf0 <sbrk_aligned>
 802dc70:	1c43      	adds	r3, r0, #1
 802dc72:	4604      	mov	r4, r0
 802dc74:	d155      	bne.n	802dd22 <_malloc_r+0xf2>
 802dc76:	f8d8 4000 	ldr.w	r4, [r8]
 802dc7a:	4626      	mov	r6, r4
 802dc7c:	2e00      	cmp	r6, #0
 802dc7e:	d145      	bne.n	802dd0c <_malloc_r+0xdc>
 802dc80:	2c00      	cmp	r4, #0
 802dc82:	d048      	beq.n	802dd16 <_malloc_r+0xe6>
 802dc84:	6823      	ldr	r3, [r4, #0]
 802dc86:	4631      	mov	r1, r6
 802dc88:	4638      	mov	r0, r7
 802dc8a:	eb04 0903 	add.w	r9, r4, r3
 802dc8e:	f000 fa57 	bl	802e140 <_sbrk_r>
 802dc92:	4581      	cmp	r9, r0
 802dc94:	d13f      	bne.n	802dd16 <_malloc_r+0xe6>
 802dc96:	6821      	ldr	r1, [r4, #0]
 802dc98:	1a6d      	subs	r5, r5, r1
 802dc9a:	4629      	mov	r1, r5
 802dc9c:	4638      	mov	r0, r7
 802dc9e:	f7ff ffa7 	bl	802dbf0 <sbrk_aligned>
 802dca2:	3001      	adds	r0, #1
 802dca4:	d037      	beq.n	802dd16 <_malloc_r+0xe6>
 802dca6:	6823      	ldr	r3, [r4, #0]
 802dca8:	442b      	add	r3, r5
 802dcaa:	6023      	str	r3, [r4, #0]
 802dcac:	f8d8 3000 	ldr.w	r3, [r8]
 802dcb0:	2b00      	cmp	r3, #0
 802dcb2:	d038      	beq.n	802dd26 <_malloc_r+0xf6>
 802dcb4:	685a      	ldr	r2, [r3, #4]
 802dcb6:	42a2      	cmp	r2, r4
 802dcb8:	d12b      	bne.n	802dd12 <_malloc_r+0xe2>
 802dcba:	2200      	movs	r2, #0
 802dcbc:	605a      	str	r2, [r3, #4]
 802dcbe:	e00f      	b.n	802dce0 <_malloc_r+0xb0>
 802dcc0:	6822      	ldr	r2, [r4, #0]
 802dcc2:	1b52      	subs	r2, r2, r5
 802dcc4:	d41f      	bmi.n	802dd06 <_malloc_r+0xd6>
 802dcc6:	2a0b      	cmp	r2, #11
 802dcc8:	d917      	bls.n	802dcfa <_malloc_r+0xca>
 802dcca:	1961      	adds	r1, r4, r5
 802dccc:	42a3      	cmp	r3, r4
 802dcce:	6025      	str	r5, [r4, #0]
 802dcd0:	bf18      	it	ne
 802dcd2:	6059      	strne	r1, [r3, #4]
 802dcd4:	6863      	ldr	r3, [r4, #4]
 802dcd6:	bf08      	it	eq
 802dcd8:	f8c8 1000 	streq.w	r1, [r8]
 802dcdc:	5162      	str	r2, [r4, r5]
 802dcde:	604b      	str	r3, [r1, #4]
 802dce0:	4638      	mov	r0, r7
 802dce2:	f104 060b 	add.w	r6, r4, #11
 802dce6:	f000 f829 	bl	802dd3c <__malloc_unlock>
 802dcea:	f026 0607 	bic.w	r6, r6, #7
 802dcee:	1d23      	adds	r3, r4, #4
 802dcf0:	1af2      	subs	r2, r6, r3
 802dcf2:	d0ae      	beq.n	802dc52 <_malloc_r+0x22>
 802dcf4:	1b9b      	subs	r3, r3, r6
 802dcf6:	50a3      	str	r3, [r4, r2]
 802dcf8:	e7ab      	b.n	802dc52 <_malloc_r+0x22>
 802dcfa:	42a3      	cmp	r3, r4
 802dcfc:	6862      	ldr	r2, [r4, #4]
 802dcfe:	d1dd      	bne.n	802dcbc <_malloc_r+0x8c>
 802dd00:	f8c8 2000 	str.w	r2, [r8]
 802dd04:	e7ec      	b.n	802dce0 <_malloc_r+0xb0>
 802dd06:	4623      	mov	r3, r4
 802dd08:	6864      	ldr	r4, [r4, #4]
 802dd0a:	e7ac      	b.n	802dc66 <_malloc_r+0x36>
 802dd0c:	4634      	mov	r4, r6
 802dd0e:	6876      	ldr	r6, [r6, #4]
 802dd10:	e7b4      	b.n	802dc7c <_malloc_r+0x4c>
 802dd12:	4613      	mov	r3, r2
 802dd14:	e7cc      	b.n	802dcb0 <_malloc_r+0x80>
 802dd16:	230c      	movs	r3, #12
 802dd18:	603b      	str	r3, [r7, #0]
 802dd1a:	4638      	mov	r0, r7
 802dd1c:	f000 f80e 	bl	802dd3c <__malloc_unlock>
 802dd20:	e797      	b.n	802dc52 <_malloc_r+0x22>
 802dd22:	6025      	str	r5, [r4, #0]
 802dd24:	e7dc      	b.n	802dce0 <_malloc_r+0xb0>
 802dd26:	605b      	str	r3, [r3, #4]
 802dd28:	deff      	udf	#255	; 0xff
 802dd2a:	bf00      	nop
 802dd2c:	200141a8 	.word	0x200141a8

0802dd30 <__malloc_lock>:
 802dd30:	4801      	ldr	r0, [pc, #4]	; (802dd38 <__malloc_lock+0x8>)
 802dd32:	f000 ba52 	b.w	802e1da <__retarget_lock_acquire_recursive>
 802dd36:	bf00      	nop
 802dd38:	200142f1 	.word	0x200142f1

0802dd3c <__malloc_unlock>:
 802dd3c:	4801      	ldr	r0, [pc, #4]	; (802dd44 <__malloc_unlock+0x8>)
 802dd3e:	f000 ba4d 	b.w	802e1dc <__retarget_lock_release_recursive>
 802dd42:	bf00      	nop
 802dd44:	200142f1 	.word	0x200142f1

0802dd48 <__cxa_atexit>:
 802dd48:	b510      	push	{r4, lr}
 802dd4a:	4c05      	ldr	r4, [pc, #20]	; (802dd60 <__cxa_atexit+0x18>)
 802dd4c:	4613      	mov	r3, r2
 802dd4e:	b12c      	cbz	r4, 802dd5c <__cxa_atexit+0x14>
 802dd50:	460a      	mov	r2, r1
 802dd52:	4601      	mov	r1, r0
 802dd54:	2002      	movs	r0, #2
 802dd56:	f000 fa51 	bl	802e1fc <__register_exitproc>
 802dd5a:	bd10      	pop	{r4, pc}
 802dd5c:	4620      	mov	r0, r4
 802dd5e:	e7fc      	b.n	802dd5a <__cxa_atexit+0x12>
 802dd60:	0802e1fd 	.word	0x0802e1fd

0802dd64 <std>:
 802dd64:	2300      	movs	r3, #0
 802dd66:	b510      	push	{r4, lr}
 802dd68:	4604      	mov	r4, r0
 802dd6a:	e9c0 3300 	strd	r3, r3, [r0]
 802dd6e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802dd72:	6083      	str	r3, [r0, #8]
 802dd74:	8181      	strh	r1, [r0, #12]
 802dd76:	6643      	str	r3, [r0, #100]	; 0x64
 802dd78:	81c2      	strh	r2, [r0, #14]
 802dd7a:	6183      	str	r3, [r0, #24]
 802dd7c:	4619      	mov	r1, r3
 802dd7e:	2208      	movs	r2, #8
 802dd80:	305c      	adds	r0, #92	; 0x5c
 802dd82:	f000 f906 	bl	802df92 <memset>
 802dd86:	4b0d      	ldr	r3, [pc, #52]	; (802ddbc <std+0x58>)
 802dd88:	6263      	str	r3, [r4, #36]	; 0x24
 802dd8a:	4b0d      	ldr	r3, [pc, #52]	; (802ddc0 <std+0x5c>)
 802dd8c:	62a3      	str	r3, [r4, #40]	; 0x28
 802dd8e:	4b0d      	ldr	r3, [pc, #52]	; (802ddc4 <std+0x60>)
 802dd90:	62e3      	str	r3, [r4, #44]	; 0x2c
 802dd92:	4b0d      	ldr	r3, [pc, #52]	; (802ddc8 <std+0x64>)
 802dd94:	6323      	str	r3, [r4, #48]	; 0x30
 802dd96:	4b0d      	ldr	r3, [pc, #52]	; (802ddcc <std+0x68>)
 802dd98:	6224      	str	r4, [r4, #32]
 802dd9a:	429c      	cmp	r4, r3
 802dd9c:	d006      	beq.n	802ddac <std+0x48>
 802dd9e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802dda2:	4294      	cmp	r4, r2
 802dda4:	d002      	beq.n	802ddac <std+0x48>
 802dda6:	33d0      	adds	r3, #208	; 0xd0
 802dda8:	429c      	cmp	r4, r3
 802ddaa:	d105      	bne.n	802ddb8 <std+0x54>
 802ddac:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802ddb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ddb4:	f000 ba10 	b.w	802e1d8 <__retarget_lock_init_recursive>
 802ddb8:	bd10      	pop	{r4, pc}
 802ddba:	bf00      	nop
 802ddbc:	0802df0d 	.word	0x0802df0d
 802ddc0:	0802df2f 	.word	0x0802df2f
 802ddc4:	0802df67 	.word	0x0802df67
 802ddc8:	0802df8b 	.word	0x0802df8b
 802ddcc:	200141b0 	.word	0x200141b0

0802ddd0 <stdio_exit_handler>:
 802ddd0:	4a02      	ldr	r2, [pc, #8]	; (802dddc <stdio_exit_handler+0xc>)
 802ddd2:	4903      	ldr	r1, [pc, #12]	; (802dde0 <stdio_exit_handler+0x10>)
 802ddd4:	4803      	ldr	r0, [pc, #12]	; (802dde4 <stdio_exit_handler+0x14>)
 802ddd6:	f000 b87b 	b.w	802ded0 <_fwalk_sglue>
 802ddda:	bf00      	nop
 802dddc:	2000010c 	.word	0x2000010c
 802dde0:	0802ea05 	.word	0x0802ea05
 802dde4:	20000118 	.word	0x20000118

0802dde8 <cleanup_stdio>:
 802dde8:	6841      	ldr	r1, [r0, #4]
 802ddea:	4b0c      	ldr	r3, [pc, #48]	; (802de1c <cleanup_stdio+0x34>)
 802ddec:	4299      	cmp	r1, r3
 802ddee:	b510      	push	{r4, lr}
 802ddf0:	4604      	mov	r4, r0
 802ddf2:	d001      	beq.n	802ddf8 <cleanup_stdio+0x10>
 802ddf4:	f000 fe06 	bl	802ea04 <_fflush_r>
 802ddf8:	68a1      	ldr	r1, [r4, #8]
 802ddfa:	4b09      	ldr	r3, [pc, #36]	; (802de20 <cleanup_stdio+0x38>)
 802ddfc:	4299      	cmp	r1, r3
 802ddfe:	d002      	beq.n	802de06 <cleanup_stdio+0x1e>
 802de00:	4620      	mov	r0, r4
 802de02:	f000 fdff 	bl	802ea04 <_fflush_r>
 802de06:	68e1      	ldr	r1, [r4, #12]
 802de08:	4b06      	ldr	r3, [pc, #24]	; (802de24 <cleanup_stdio+0x3c>)
 802de0a:	4299      	cmp	r1, r3
 802de0c:	d004      	beq.n	802de18 <cleanup_stdio+0x30>
 802de0e:	4620      	mov	r0, r4
 802de10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802de14:	f000 bdf6 	b.w	802ea04 <_fflush_r>
 802de18:	bd10      	pop	{r4, pc}
 802de1a:	bf00      	nop
 802de1c:	200141b0 	.word	0x200141b0
 802de20:	20014218 	.word	0x20014218
 802de24:	20014280 	.word	0x20014280

0802de28 <global_stdio_init.part.0>:
 802de28:	b510      	push	{r4, lr}
 802de2a:	4b0b      	ldr	r3, [pc, #44]	; (802de58 <global_stdio_init.part.0+0x30>)
 802de2c:	4c0b      	ldr	r4, [pc, #44]	; (802de5c <global_stdio_init.part.0+0x34>)
 802de2e:	4a0c      	ldr	r2, [pc, #48]	; (802de60 <global_stdio_init.part.0+0x38>)
 802de30:	601a      	str	r2, [r3, #0]
 802de32:	4620      	mov	r0, r4
 802de34:	2200      	movs	r2, #0
 802de36:	2104      	movs	r1, #4
 802de38:	f7ff ff94 	bl	802dd64 <std>
 802de3c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802de40:	2201      	movs	r2, #1
 802de42:	2109      	movs	r1, #9
 802de44:	f7ff ff8e 	bl	802dd64 <std>
 802de48:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802de4c:	2202      	movs	r2, #2
 802de4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802de52:	2112      	movs	r1, #18
 802de54:	f7ff bf86 	b.w	802dd64 <std>
 802de58:	200142e8 	.word	0x200142e8
 802de5c:	200141b0 	.word	0x200141b0
 802de60:	0802ddd1 	.word	0x0802ddd1

0802de64 <__sfp_lock_acquire>:
 802de64:	4801      	ldr	r0, [pc, #4]	; (802de6c <__sfp_lock_acquire+0x8>)
 802de66:	f000 b9b8 	b.w	802e1da <__retarget_lock_acquire_recursive>
 802de6a:	bf00      	nop
 802de6c:	200142f2 	.word	0x200142f2

0802de70 <__sfp_lock_release>:
 802de70:	4801      	ldr	r0, [pc, #4]	; (802de78 <__sfp_lock_release+0x8>)
 802de72:	f000 b9b3 	b.w	802e1dc <__retarget_lock_release_recursive>
 802de76:	bf00      	nop
 802de78:	200142f2 	.word	0x200142f2

0802de7c <__sinit>:
 802de7c:	b510      	push	{r4, lr}
 802de7e:	4604      	mov	r4, r0
 802de80:	f7ff fff0 	bl	802de64 <__sfp_lock_acquire>
 802de84:	6a23      	ldr	r3, [r4, #32]
 802de86:	b11b      	cbz	r3, 802de90 <__sinit+0x14>
 802de88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802de8c:	f7ff bff0 	b.w	802de70 <__sfp_lock_release>
 802de90:	4b04      	ldr	r3, [pc, #16]	; (802dea4 <__sinit+0x28>)
 802de92:	6223      	str	r3, [r4, #32]
 802de94:	4b04      	ldr	r3, [pc, #16]	; (802dea8 <__sinit+0x2c>)
 802de96:	681b      	ldr	r3, [r3, #0]
 802de98:	2b00      	cmp	r3, #0
 802de9a:	d1f5      	bne.n	802de88 <__sinit+0xc>
 802de9c:	f7ff ffc4 	bl	802de28 <global_stdio_init.part.0>
 802dea0:	e7f2      	b.n	802de88 <__sinit+0xc>
 802dea2:	bf00      	nop
 802dea4:	0802dde9 	.word	0x0802dde9
 802dea8:	200142e8 	.word	0x200142e8

0802deac <fiprintf>:
 802deac:	b40e      	push	{r1, r2, r3}
 802deae:	b503      	push	{r0, r1, lr}
 802deb0:	4601      	mov	r1, r0
 802deb2:	ab03      	add	r3, sp, #12
 802deb4:	4805      	ldr	r0, [pc, #20]	; (802decc <fiprintf+0x20>)
 802deb6:	f853 2b04 	ldr.w	r2, [r3], #4
 802deba:	6800      	ldr	r0, [r0, #0]
 802debc:	9301      	str	r3, [sp, #4]
 802debe:	f000 fa71 	bl	802e3a4 <_vfiprintf_r>
 802dec2:	b002      	add	sp, #8
 802dec4:	f85d eb04 	ldr.w	lr, [sp], #4
 802dec8:	b003      	add	sp, #12
 802deca:	4770      	bx	lr
 802decc:	20000164 	.word	0x20000164

0802ded0 <_fwalk_sglue>:
 802ded0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ded4:	4607      	mov	r7, r0
 802ded6:	4688      	mov	r8, r1
 802ded8:	4614      	mov	r4, r2
 802deda:	2600      	movs	r6, #0
 802dedc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802dee0:	f1b9 0901 	subs.w	r9, r9, #1
 802dee4:	d505      	bpl.n	802def2 <_fwalk_sglue+0x22>
 802dee6:	6824      	ldr	r4, [r4, #0]
 802dee8:	2c00      	cmp	r4, #0
 802deea:	d1f7      	bne.n	802dedc <_fwalk_sglue+0xc>
 802deec:	4630      	mov	r0, r6
 802deee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802def2:	89ab      	ldrh	r3, [r5, #12]
 802def4:	2b01      	cmp	r3, #1
 802def6:	d907      	bls.n	802df08 <_fwalk_sglue+0x38>
 802def8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802defc:	3301      	adds	r3, #1
 802defe:	d003      	beq.n	802df08 <_fwalk_sglue+0x38>
 802df00:	4629      	mov	r1, r5
 802df02:	4638      	mov	r0, r7
 802df04:	47c0      	blx	r8
 802df06:	4306      	orrs	r6, r0
 802df08:	3568      	adds	r5, #104	; 0x68
 802df0a:	e7e9      	b.n	802dee0 <_fwalk_sglue+0x10>

0802df0c <__sread>:
 802df0c:	b510      	push	{r4, lr}
 802df0e:	460c      	mov	r4, r1
 802df10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802df14:	f000 f8ee 	bl	802e0f4 <_read_r>
 802df18:	2800      	cmp	r0, #0
 802df1a:	bfab      	itete	ge
 802df1c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802df1e:	89a3      	ldrhlt	r3, [r4, #12]
 802df20:	181b      	addge	r3, r3, r0
 802df22:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802df26:	bfac      	ite	ge
 802df28:	6563      	strge	r3, [r4, #84]	; 0x54
 802df2a:	81a3      	strhlt	r3, [r4, #12]
 802df2c:	bd10      	pop	{r4, pc}

0802df2e <__swrite>:
 802df2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802df32:	461f      	mov	r7, r3
 802df34:	898b      	ldrh	r3, [r1, #12]
 802df36:	05db      	lsls	r3, r3, #23
 802df38:	4605      	mov	r5, r0
 802df3a:	460c      	mov	r4, r1
 802df3c:	4616      	mov	r6, r2
 802df3e:	d505      	bpl.n	802df4c <__swrite+0x1e>
 802df40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802df44:	2302      	movs	r3, #2
 802df46:	2200      	movs	r2, #0
 802df48:	f000 f8c2 	bl	802e0d0 <_lseek_r>
 802df4c:	89a3      	ldrh	r3, [r4, #12]
 802df4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802df52:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802df56:	81a3      	strh	r3, [r4, #12]
 802df58:	4632      	mov	r2, r6
 802df5a:	463b      	mov	r3, r7
 802df5c:	4628      	mov	r0, r5
 802df5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802df62:	f000 b8fd 	b.w	802e160 <_write_r>

0802df66 <__sseek>:
 802df66:	b510      	push	{r4, lr}
 802df68:	460c      	mov	r4, r1
 802df6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802df6e:	f000 f8af 	bl	802e0d0 <_lseek_r>
 802df72:	1c43      	adds	r3, r0, #1
 802df74:	89a3      	ldrh	r3, [r4, #12]
 802df76:	bf15      	itete	ne
 802df78:	6560      	strne	r0, [r4, #84]	; 0x54
 802df7a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802df7e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802df82:	81a3      	strheq	r3, [r4, #12]
 802df84:	bf18      	it	ne
 802df86:	81a3      	strhne	r3, [r4, #12]
 802df88:	bd10      	pop	{r4, pc}

0802df8a <__sclose>:
 802df8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802df8e:	f000 b839 	b.w	802e004 <_close_r>

0802df92 <memset>:
 802df92:	4402      	add	r2, r0
 802df94:	4603      	mov	r3, r0
 802df96:	4293      	cmp	r3, r2
 802df98:	d100      	bne.n	802df9c <memset+0xa>
 802df9a:	4770      	bx	lr
 802df9c:	f803 1b01 	strb.w	r1, [r3], #1
 802dfa0:	e7f9      	b.n	802df96 <memset+0x4>

0802dfa2 <_raise_r>:
 802dfa2:	291f      	cmp	r1, #31
 802dfa4:	b538      	push	{r3, r4, r5, lr}
 802dfa6:	4604      	mov	r4, r0
 802dfa8:	460d      	mov	r5, r1
 802dfaa:	d904      	bls.n	802dfb6 <_raise_r+0x14>
 802dfac:	2316      	movs	r3, #22
 802dfae:	6003      	str	r3, [r0, #0]
 802dfb0:	f04f 30ff 	mov.w	r0, #4294967295
 802dfb4:	bd38      	pop	{r3, r4, r5, pc}
 802dfb6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802dfb8:	b112      	cbz	r2, 802dfc0 <_raise_r+0x1e>
 802dfba:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802dfbe:	b94b      	cbnz	r3, 802dfd4 <_raise_r+0x32>
 802dfc0:	4620      	mov	r0, r4
 802dfc2:	f000 f8bb 	bl	802e13c <_getpid_r>
 802dfc6:	462a      	mov	r2, r5
 802dfc8:	4601      	mov	r1, r0
 802dfca:	4620      	mov	r0, r4
 802dfcc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802dfd0:	f000 b8a2 	b.w	802e118 <_kill_r>
 802dfd4:	2b01      	cmp	r3, #1
 802dfd6:	d00a      	beq.n	802dfee <_raise_r+0x4c>
 802dfd8:	1c59      	adds	r1, r3, #1
 802dfda:	d103      	bne.n	802dfe4 <_raise_r+0x42>
 802dfdc:	2316      	movs	r3, #22
 802dfde:	6003      	str	r3, [r0, #0]
 802dfe0:	2001      	movs	r0, #1
 802dfe2:	e7e7      	b.n	802dfb4 <_raise_r+0x12>
 802dfe4:	2400      	movs	r4, #0
 802dfe6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802dfea:	4628      	mov	r0, r5
 802dfec:	4798      	blx	r3
 802dfee:	2000      	movs	r0, #0
 802dff0:	e7e0      	b.n	802dfb4 <_raise_r+0x12>
	...

0802dff4 <raise>:
 802dff4:	4b02      	ldr	r3, [pc, #8]	; (802e000 <raise+0xc>)
 802dff6:	4601      	mov	r1, r0
 802dff8:	6818      	ldr	r0, [r3, #0]
 802dffa:	f7ff bfd2 	b.w	802dfa2 <_raise_r>
 802dffe:	bf00      	nop
 802e000:	20000164 	.word	0x20000164

0802e004 <_close_r>:
 802e004:	b538      	push	{r3, r4, r5, lr}
 802e006:	4d06      	ldr	r5, [pc, #24]	; (802e020 <_close_r+0x1c>)
 802e008:	2300      	movs	r3, #0
 802e00a:	4604      	mov	r4, r0
 802e00c:	4608      	mov	r0, r1
 802e00e:	602b      	str	r3, [r5, #0]
 802e010:	f7d4 fd0c 	bl	8002a2c <_close>
 802e014:	1c43      	adds	r3, r0, #1
 802e016:	d102      	bne.n	802e01e <_close_r+0x1a>
 802e018:	682b      	ldr	r3, [r5, #0]
 802e01a:	b103      	cbz	r3, 802e01e <_close_r+0x1a>
 802e01c:	6023      	str	r3, [r4, #0]
 802e01e:	bd38      	pop	{r3, r4, r5, pc}
 802e020:	200142ec 	.word	0x200142ec

0802e024 <_reclaim_reent>:
 802e024:	4b29      	ldr	r3, [pc, #164]	; (802e0cc <_reclaim_reent+0xa8>)
 802e026:	681b      	ldr	r3, [r3, #0]
 802e028:	4283      	cmp	r3, r0
 802e02a:	b570      	push	{r4, r5, r6, lr}
 802e02c:	4604      	mov	r4, r0
 802e02e:	d04b      	beq.n	802e0c8 <_reclaim_reent+0xa4>
 802e030:	69c3      	ldr	r3, [r0, #28]
 802e032:	b143      	cbz	r3, 802e046 <_reclaim_reent+0x22>
 802e034:	68db      	ldr	r3, [r3, #12]
 802e036:	2b00      	cmp	r3, #0
 802e038:	d144      	bne.n	802e0c4 <_reclaim_reent+0xa0>
 802e03a:	69e3      	ldr	r3, [r4, #28]
 802e03c:	6819      	ldr	r1, [r3, #0]
 802e03e:	b111      	cbz	r1, 802e046 <_reclaim_reent+0x22>
 802e040:	4620      	mov	r0, r4
 802e042:	f000 f939 	bl	802e2b8 <_free_r>
 802e046:	6961      	ldr	r1, [r4, #20]
 802e048:	b111      	cbz	r1, 802e050 <_reclaim_reent+0x2c>
 802e04a:	4620      	mov	r0, r4
 802e04c:	f000 f934 	bl	802e2b8 <_free_r>
 802e050:	69e1      	ldr	r1, [r4, #28]
 802e052:	b111      	cbz	r1, 802e05a <_reclaim_reent+0x36>
 802e054:	4620      	mov	r0, r4
 802e056:	f000 f92f 	bl	802e2b8 <_free_r>
 802e05a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802e05c:	b111      	cbz	r1, 802e064 <_reclaim_reent+0x40>
 802e05e:	4620      	mov	r0, r4
 802e060:	f000 f92a 	bl	802e2b8 <_free_r>
 802e064:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e066:	b111      	cbz	r1, 802e06e <_reclaim_reent+0x4a>
 802e068:	4620      	mov	r0, r4
 802e06a:	f000 f925 	bl	802e2b8 <_free_r>
 802e06e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802e070:	b111      	cbz	r1, 802e078 <_reclaim_reent+0x54>
 802e072:	4620      	mov	r0, r4
 802e074:	f000 f920 	bl	802e2b8 <_free_r>
 802e078:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802e07a:	b111      	cbz	r1, 802e082 <_reclaim_reent+0x5e>
 802e07c:	4620      	mov	r0, r4
 802e07e:	f000 f91b 	bl	802e2b8 <_free_r>
 802e082:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802e084:	b111      	cbz	r1, 802e08c <_reclaim_reent+0x68>
 802e086:	4620      	mov	r0, r4
 802e088:	f000 f916 	bl	802e2b8 <_free_r>
 802e08c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802e08e:	b111      	cbz	r1, 802e096 <_reclaim_reent+0x72>
 802e090:	4620      	mov	r0, r4
 802e092:	f000 f911 	bl	802e2b8 <_free_r>
 802e096:	6a23      	ldr	r3, [r4, #32]
 802e098:	b1b3      	cbz	r3, 802e0c8 <_reclaim_reent+0xa4>
 802e09a:	4620      	mov	r0, r4
 802e09c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802e0a0:	4718      	bx	r3
 802e0a2:	5949      	ldr	r1, [r1, r5]
 802e0a4:	b941      	cbnz	r1, 802e0b8 <_reclaim_reent+0x94>
 802e0a6:	3504      	adds	r5, #4
 802e0a8:	69e3      	ldr	r3, [r4, #28]
 802e0aa:	2d80      	cmp	r5, #128	; 0x80
 802e0ac:	68d9      	ldr	r1, [r3, #12]
 802e0ae:	d1f8      	bne.n	802e0a2 <_reclaim_reent+0x7e>
 802e0b0:	4620      	mov	r0, r4
 802e0b2:	f000 f901 	bl	802e2b8 <_free_r>
 802e0b6:	e7c0      	b.n	802e03a <_reclaim_reent+0x16>
 802e0b8:	680e      	ldr	r6, [r1, #0]
 802e0ba:	4620      	mov	r0, r4
 802e0bc:	f000 f8fc 	bl	802e2b8 <_free_r>
 802e0c0:	4631      	mov	r1, r6
 802e0c2:	e7ef      	b.n	802e0a4 <_reclaim_reent+0x80>
 802e0c4:	2500      	movs	r5, #0
 802e0c6:	e7ef      	b.n	802e0a8 <_reclaim_reent+0x84>
 802e0c8:	bd70      	pop	{r4, r5, r6, pc}
 802e0ca:	bf00      	nop
 802e0cc:	20000164 	.word	0x20000164

0802e0d0 <_lseek_r>:
 802e0d0:	b538      	push	{r3, r4, r5, lr}
 802e0d2:	4d07      	ldr	r5, [pc, #28]	; (802e0f0 <_lseek_r+0x20>)
 802e0d4:	4604      	mov	r4, r0
 802e0d6:	4608      	mov	r0, r1
 802e0d8:	4611      	mov	r1, r2
 802e0da:	2200      	movs	r2, #0
 802e0dc:	602a      	str	r2, [r5, #0]
 802e0de:	461a      	mov	r2, r3
 802e0e0:	f7d4 fcb0 	bl	8002a44 <_lseek>
 802e0e4:	1c43      	adds	r3, r0, #1
 802e0e6:	d102      	bne.n	802e0ee <_lseek_r+0x1e>
 802e0e8:	682b      	ldr	r3, [r5, #0]
 802e0ea:	b103      	cbz	r3, 802e0ee <_lseek_r+0x1e>
 802e0ec:	6023      	str	r3, [r4, #0]
 802e0ee:	bd38      	pop	{r3, r4, r5, pc}
 802e0f0:	200142ec 	.word	0x200142ec

0802e0f4 <_read_r>:
 802e0f4:	b538      	push	{r3, r4, r5, lr}
 802e0f6:	4d07      	ldr	r5, [pc, #28]	; (802e114 <_read_r+0x20>)
 802e0f8:	4604      	mov	r4, r0
 802e0fa:	4608      	mov	r0, r1
 802e0fc:	4611      	mov	r1, r2
 802e0fe:	2200      	movs	r2, #0
 802e100:	602a      	str	r2, [r5, #0]
 802e102:	461a      	mov	r2, r3
 802e104:	f7d4 fc76 	bl	80029f4 <_read>
 802e108:	1c43      	adds	r3, r0, #1
 802e10a:	d102      	bne.n	802e112 <_read_r+0x1e>
 802e10c:	682b      	ldr	r3, [r5, #0]
 802e10e:	b103      	cbz	r3, 802e112 <_read_r+0x1e>
 802e110:	6023      	str	r3, [r4, #0]
 802e112:	bd38      	pop	{r3, r4, r5, pc}
 802e114:	200142ec 	.word	0x200142ec

0802e118 <_kill_r>:
 802e118:	b538      	push	{r3, r4, r5, lr}
 802e11a:	4d07      	ldr	r5, [pc, #28]	; (802e138 <_kill_r+0x20>)
 802e11c:	2300      	movs	r3, #0
 802e11e:	4604      	mov	r4, r0
 802e120:	4608      	mov	r0, r1
 802e122:	4611      	mov	r1, r2
 802e124:	602b      	str	r3, [r5, #0]
 802e126:	f7d4 fc57 	bl	80029d8 <_kill>
 802e12a:	1c43      	adds	r3, r0, #1
 802e12c:	d102      	bne.n	802e134 <_kill_r+0x1c>
 802e12e:	682b      	ldr	r3, [r5, #0]
 802e130:	b103      	cbz	r3, 802e134 <_kill_r+0x1c>
 802e132:	6023      	str	r3, [r4, #0]
 802e134:	bd38      	pop	{r3, r4, r5, pc}
 802e136:	bf00      	nop
 802e138:	200142ec 	.word	0x200142ec

0802e13c <_getpid_r>:
 802e13c:	f7d4 bc4a 	b.w	80029d4 <_getpid>

0802e140 <_sbrk_r>:
 802e140:	b538      	push	{r3, r4, r5, lr}
 802e142:	4d06      	ldr	r5, [pc, #24]	; (802e15c <_sbrk_r+0x1c>)
 802e144:	2300      	movs	r3, #0
 802e146:	4604      	mov	r4, r0
 802e148:	4608      	mov	r0, r1
 802e14a:	602b      	str	r3, [r5, #0]
 802e14c:	f7d4 fc7c 	bl	8002a48 <_sbrk>
 802e150:	1c43      	adds	r3, r0, #1
 802e152:	d102      	bne.n	802e15a <_sbrk_r+0x1a>
 802e154:	682b      	ldr	r3, [r5, #0]
 802e156:	b103      	cbz	r3, 802e15a <_sbrk_r+0x1a>
 802e158:	6023      	str	r3, [r4, #0]
 802e15a:	bd38      	pop	{r3, r4, r5, pc}
 802e15c:	200142ec 	.word	0x200142ec

0802e160 <_write_r>:
 802e160:	b538      	push	{r3, r4, r5, lr}
 802e162:	4d07      	ldr	r5, [pc, #28]	; (802e180 <_write_r+0x20>)
 802e164:	4604      	mov	r4, r0
 802e166:	4608      	mov	r0, r1
 802e168:	4611      	mov	r1, r2
 802e16a:	2200      	movs	r2, #0
 802e16c:	602a      	str	r2, [r5, #0]
 802e16e:	461a      	mov	r2, r3
 802e170:	f7d4 fc4e 	bl	8002a10 <_write>
 802e174:	1c43      	adds	r3, r0, #1
 802e176:	d102      	bne.n	802e17e <_write_r+0x1e>
 802e178:	682b      	ldr	r3, [r5, #0]
 802e17a:	b103      	cbz	r3, 802e17e <_write_r+0x1e>
 802e17c:	6023      	str	r3, [r4, #0]
 802e17e:	bd38      	pop	{r3, r4, r5, pc}
 802e180:	200142ec 	.word	0x200142ec

0802e184 <__errno>:
 802e184:	4b01      	ldr	r3, [pc, #4]	; (802e18c <__errno+0x8>)
 802e186:	6818      	ldr	r0, [r3, #0]
 802e188:	4770      	bx	lr
 802e18a:	bf00      	nop
 802e18c:	20000164 	.word	0x20000164

0802e190 <__libc_init_array>:
 802e190:	b570      	push	{r4, r5, r6, lr}
 802e192:	4d0d      	ldr	r5, [pc, #52]	; (802e1c8 <__libc_init_array+0x38>)
 802e194:	4c0d      	ldr	r4, [pc, #52]	; (802e1cc <__libc_init_array+0x3c>)
 802e196:	1b64      	subs	r4, r4, r5
 802e198:	10a4      	asrs	r4, r4, #2
 802e19a:	2600      	movs	r6, #0
 802e19c:	42a6      	cmp	r6, r4
 802e19e:	d109      	bne.n	802e1b4 <__libc_init_array+0x24>
 802e1a0:	4d0b      	ldr	r5, [pc, #44]	; (802e1d0 <__libc_init_array+0x40>)
 802e1a2:	4c0c      	ldr	r4, [pc, #48]	; (802e1d4 <__libc_init_array+0x44>)
 802e1a4:	f000 fd70 	bl	802ec88 <_init>
 802e1a8:	1b64      	subs	r4, r4, r5
 802e1aa:	10a4      	asrs	r4, r4, #2
 802e1ac:	2600      	movs	r6, #0
 802e1ae:	42a6      	cmp	r6, r4
 802e1b0:	d105      	bne.n	802e1be <__libc_init_array+0x2e>
 802e1b2:	bd70      	pop	{r4, r5, r6, pc}
 802e1b4:	f855 3b04 	ldr.w	r3, [r5], #4
 802e1b8:	4798      	blx	r3
 802e1ba:	3601      	adds	r6, #1
 802e1bc:	e7ee      	b.n	802e19c <__libc_init_array+0xc>
 802e1be:	f855 3b04 	ldr.w	r3, [r5], #4
 802e1c2:	4798      	blx	r3
 802e1c4:	3601      	adds	r6, #1
 802e1c6:	e7f2      	b.n	802e1ae <__libc_init_array+0x1e>
 802e1c8:	080cf5e0 	.word	0x080cf5e0
 802e1cc:	080cf5e0 	.word	0x080cf5e0
 802e1d0:	080cf5e0 	.word	0x080cf5e0
 802e1d4:	080cf5f4 	.word	0x080cf5f4

0802e1d8 <__retarget_lock_init_recursive>:
 802e1d8:	4770      	bx	lr

0802e1da <__retarget_lock_acquire_recursive>:
 802e1da:	4770      	bx	lr

0802e1dc <__retarget_lock_release_recursive>:
 802e1dc:	4770      	bx	lr

0802e1de <memcpy>:
 802e1de:	440a      	add	r2, r1
 802e1e0:	4291      	cmp	r1, r2
 802e1e2:	f100 33ff 	add.w	r3, r0, #4294967295
 802e1e6:	d100      	bne.n	802e1ea <memcpy+0xc>
 802e1e8:	4770      	bx	lr
 802e1ea:	b510      	push	{r4, lr}
 802e1ec:	f811 4b01 	ldrb.w	r4, [r1], #1
 802e1f0:	f803 4f01 	strb.w	r4, [r3, #1]!
 802e1f4:	4291      	cmp	r1, r2
 802e1f6:	d1f9      	bne.n	802e1ec <memcpy+0xe>
 802e1f8:	bd10      	pop	{r4, pc}
	...

0802e1fc <__register_exitproc>:
 802e1fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802e200:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802e2b4 <__register_exitproc+0xb8>
 802e204:	4606      	mov	r6, r0
 802e206:	f8d8 0000 	ldr.w	r0, [r8]
 802e20a:	461f      	mov	r7, r3
 802e20c:	460d      	mov	r5, r1
 802e20e:	4691      	mov	r9, r2
 802e210:	f7ff ffe3 	bl	802e1da <__retarget_lock_acquire_recursive>
 802e214:	4b23      	ldr	r3, [pc, #140]	; (802e2a4 <__register_exitproc+0xa8>)
 802e216:	681c      	ldr	r4, [r3, #0]
 802e218:	b934      	cbnz	r4, 802e228 <__register_exitproc+0x2c>
 802e21a:	4c23      	ldr	r4, [pc, #140]	; (802e2a8 <__register_exitproc+0xac>)
 802e21c:	601c      	str	r4, [r3, #0]
 802e21e:	4b23      	ldr	r3, [pc, #140]	; (802e2ac <__register_exitproc+0xb0>)
 802e220:	b113      	cbz	r3, 802e228 <__register_exitproc+0x2c>
 802e222:	681b      	ldr	r3, [r3, #0]
 802e224:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802e228:	6863      	ldr	r3, [r4, #4]
 802e22a:	2b1f      	cmp	r3, #31
 802e22c:	dd07      	ble.n	802e23e <__register_exitproc+0x42>
 802e22e:	f8d8 0000 	ldr.w	r0, [r8]
 802e232:	f7ff ffd3 	bl	802e1dc <__retarget_lock_release_recursive>
 802e236:	f04f 30ff 	mov.w	r0, #4294967295
 802e23a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e23e:	b32e      	cbz	r6, 802e28c <__register_exitproc+0x90>
 802e240:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802e244:	b968      	cbnz	r0, 802e262 <__register_exitproc+0x66>
 802e246:	4b1a      	ldr	r3, [pc, #104]	; (802e2b0 <__register_exitproc+0xb4>)
 802e248:	2b00      	cmp	r3, #0
 802e24a:	d0f0      	beq.n	802e22e <__register_exitproc+0x32>
 802e24c:	f44f 7084 	mov.w	r0, #264	; 0x108
 802e250:	f7ff fcbe 	bl	802dbd0 <malloc>
 802e254:	2800      	cmp	r0, #0
 802e256:	d0ea      	beq.n	802e22e <__register_exitproc+0x32>
 802e258:	2300      	movs	r3, #0
 802e25a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802e25e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802e262:	6863      	ldr	r3, [r4, #4]
 802e264:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802e268:	2201      	movs	r2, #1
 802e26a:	409a      	lsls	r2, r3
 802e26c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802e270:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802e274:	4313      	orrs	r3, r2
 802e276:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802e27a:	2e02      	cmp	r6, #2
 802e27c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802e280:	bf02      	ittt	eq
 802e282:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802e286:	4313      	orreq	r3, r2
 802e288:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802e28c:	6863      	ldr	r3, [r4, #4]
 802e28e:	f8d8 0000 	ldr.w	r0, [r8]
 802e292:	1c5a      	adds	r2, r3, #1
 802e294:	3302      	adds	r3, #2
 802e296:	6062      	str	r2, [r4, #4]
 802e298:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802e29c:	f7ff ff9e 	bl	802e1dc <__retarget_lock_release_recursive>
 802e2a0:	2000      	movs	r0, #0
 802e2a2:	e7ca      	b.n	802e23a <__register_exitproc+0x3e>
 802e2a4:	20014380 	.word	0x20014380
 802e2a8:	200142f4 	.word	0x200142f4
 802e2ac:	08045e38 	.word	0x08045e38
 802e2b0:	0802dbd1 	.word	0x0802dbd1
 802e2b4:	20000168 	.word	0x20000168

0802e2b8 <_free_r>:
 802e2b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802e2ba:	2900      	cmp	r1, #0
 802e2bc:	d044      	beq.n	802e348 <_free_r+0x90>
 802e2be:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802e2c2:	9001      	str	r0, [sp, #4]
 802e2c4:	2b00      	cmp	r3, #0
 802e2c6:	f1a1 0404 	sub.w	r4, r1, #4
 802e2ca:	bfb8      	it	lt
 802e2cc:	18e4      	addlt	r4, r4, r3
 802e2ce:	f7ff fd2f 	bl	802dd30 <__malloc_lock>
 802e2d2:	4a1e      	ldr	r2, [pc, #120]	; (802e34c <_free_r+0x94>)
 802e2d4:	9801      	ldr	r0, [sp, #4]
 802e2d6:	6813      	ldr	r3, [r2, #0]
 802e2d8:	b933      	cbnz	r3, 802e2e8 <_free_r+0x30>
 802e2da:	6063      	str	r3, [r4, #4]
 802e2dc:	6014      	str	r4, [r2, #0]
 802e2de:	b003      	add	sp, #12
 802e2e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802e2e4:	f7ff bd2a 	b.w	802dd3c <__malloc_unlock>
 802e2e8:	42a3      	cmp	r3, r4
 802e2ea:	d908      	bls.n	802e2fe <_free_r+0x46>
 802e2ec:	6825      	ldr	r5, [r4, #0]
 802e2ee:	1961      	adds	r1, r4, r5
 802e2f0:	428b      	cmp	r3, r1
 802e2f2:	bf01      	itttt	eq
 802e2f4:	6819      	ldreq	r1, [r3, #0]
 802e2f6:	685b      	ldreq	r3, [r3, #4]
 802e2f8:	1949      	addeq	r1, r1, r5
 802e2fa:	6021      	streq	r1, [r4, #0]
 802e2fc:	e7ed      	b.n	802e2da <_free_r+0x22>
 802e2fe:	461a      	mov	r2, r3
 802e300:	685b      	ldr	r3, [r3, #4]
 802e302:	b10b      	cbz	r3, 802e308 <_free_r+0x50>
 802e304:	42a3      	cmp	r3, r4
 802e306:	d9fa      	bls.n	802e2fe <_free_r+0x46>
 802e308:	6811      	ldr	r1, [r2, #0]
 802e30a:	1855      	adds	r5, r2, r1
 802e30c:	42a5      	cmp	r5, r4
 802e30e:	d10b      	bne.n	802e328 <_free_r+0x70>
 802e310:	6824      	ldr	r4, [r4, #0]
 802e312:	4421      	add	r1, r4
 802e314:	1854      	adds	r4, r2, r1
 802e316:	42a3      	cmp	r3, r4
 802e318:	6011      	str	r1, [r2, #0]
 802e31a:	d1e0      	bne.n	802e2de <_free_r+0x26>
 802e31c:	681c      	ldr	r4, [r3, #0]
 802e31e:	685b      	ldr	r3, [r3, #4]
 802e320:	6053      	str	r3, [r2, #4]
 802e322:	440c      	add	r4, r1
 802e324:	6014      	str	r4, [r2, #0]
 802e326:	e7da      	b.n	802e2de <_free_r+0x26>
 802e328:	d902      	bls.n	802e330 <_free_r+0x78>
 802e32a:	230c      	movs	r3, #12
 802e32c:	6003      	str	r3, [r0, #0]
 802e32e:	e7d6      	b.n	802e2de <_free_r+0x26>
 802e330:	6825      	ldr	r5, [r4, #0]
 802e332:	1961      	adds	r1, r4, r5
 802e334:	428b      	cmp	r3, r1
 802e336:	bf04      	itt	eq
 802e338:	6819      	ldreq	r1, [r3, #0]
 802e33a:	685b      	ldreq	r3, [r3, #4]
 802e33c:	6063      	str	r3, [r4, #4]
 802e33e:	bf04      	itt	eq
 802e340:	1949      	addeq	r1, r1, r5
 802e342:	6021      	streq	r1, [r4, #0]
 802e344:	6054      	str	r4, [r2, #4]
 802e346:	e7ca      	b.n	802e2de <_free_r+0x26>
 802e348:	b003      	add	sp, #12
 802e34a:	bd30      	pop	{r4, r5, pc}
 802e34c:	200141a8 	.word	0x200141a8

0802e350 <__sfputc_r>:
 802e350:	6893      	ldr	r3, [r2, #8]
 802e352:	3b01      	subs	r3, #1
 802e354:	2b00      	cmp	r3, #0
 802e356:	b410      	push	{r4}
 802e358:	6093      	str	r3, [r2, #8]
 802e35a:	da08      	bge.n	802e36e <__sfputc_r+0x1e>
 802e35c:	6994      	ldr	r4, [r2, #24]
 802e35e:	42a3      	cmp	r3, r4
 802e360:	db01      	blt.n	802e366 <__sfputc_r+0x16>
 802e362:	290a      	cmp	r1, #10
 802e364:	d103      	bne.n	802e36e <__sfputc_r+0x1e>
 802e366:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e36a:	f000 bb73 	b.w	802ea54 <__swbuf_r>
 802e36e:	6813      	ldr	r3, [r2, #0]
 802e370:	1c58      	adds	r0, r3, #1
 802e372:	6010      	str	r0, [r2, #0]
 802e374:	7019      	strb	r1, [r3, #0]
 802e376:	4608      	mov	r0, r1
 802e378:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e37c:	4770      	bx	lr

0802e37e <__sfputs_r>:
 802e37e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e380:	4606      	mov	r6, r0
 802e382:	460f      	mov	r7, r1
 802e384:	4614      	mov	r4, r2
 802e386:	18d5      	adds	r5, r2, r3
 802e388:	42ac      	cmp	r4, r5
 802e38a:	d101      	bne.n	802e390 <__sfputs_r+0x12>
 802e38c:	2000      	movs	r0, #0
 802e38e:	e007      	b.n	802e3a0 <__sfputs_r+0x22>
 802e390:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e394:	463a      	mov	r2, r7
 802e396:	4630      	mov	r0, r6
 802e398:	f7ff ffda 	bl	802e350 <__sfputc_r>
 802e39c:	1c43      	adds	r3, r0, #1
 802e39e:	d1f3      	bne.n	802e388 <__sfputs_r+0xa>
 802e3a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802e3a4 <_vfiprintf_r>:
 802e3a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e3a8:	460d      	mov	r5, r1
 802e3aa:	b09d      	sub	sp, #116	; 0x74
 802e3ac:	4614      	mov	r4, r2
 802e3ae:	4698      	mov	r8, r3
 802e3b0:	4606      	mov	r6, r0
 802e3b2:	b118      	cbz	r0, 802e3bc <_vfiprintf_r+0x18>
 802e3b4:	6a03      	ldr	r3, [r0, #32]
 802e3b6:	b90b      	cbnz	r3, 802e3bc <_vfiprintf_r+0x18>
 802e3b8:	f7ff fd60 	bl	802de7c <__sinit>
 802e3bc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e3be:	07d9      	lsls	r1, r3, #31
 802e3c0:	d405      	bmi.n	802e3ce <_vfiprintf_r+0x2a>
 802e3c2:	89ab      	ldrh	r3, [r5, #12]
 802e3c4:	059a      	lsls	r2, r3, #22
 802e3c6:	d402      	bmi.n	802e3ce <_vfiprintf_r+0x2a>
 802e3c8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e3ca:	f7ff ff06 	bl	802e1da <__retarget_lock_acquire_recursive>
 802e3ce:	89ab      	ldrh	r3, [r5, #12]
 802e3d0:	071b      	lsls	r3, r3, #28
 802e3d2:	d501      	bpl.n	802e3d8 <_vfiprintf_r+0x34>
 802e3d4:	692b      	ldr	r3, [r5, #16]
 802e3d6:	b99b      	cbnz	r3, 802e400 <_vfiprintf_r+0x5c>
 802e3d8:	4629      	mov	r1, r5
 802e3da:	4630      	mov	r0, r6
 802e3dc:	f000 fb78 	bl	802ead0 <__swsetup_r>
 802e3e0:	b170      	cbz	r0, 802e400 <_vfiprintf_r+0x5c>
 802e3e2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e3e4:	07dc      	lsls	r4, r3, #31
 802e3e6:	d504      	bpl.n	802e3f2 <_vfiprintf_r+0x4e>
 802e3e8:	f04f 30ff 	mov.w	r0, #4294967295
 802e3ec:	b01d      	add	sp, #116	; 0x74
 802e3ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e3f2:	89ab      	ldrh	r3, [r5, #12]
 802e3f4:	0598      	lsls	r0, r3, #22
 802e3f6:	d4f7      	bmi.n	802e3e8 <_vfiprintf_r+0x44>
 802e3f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e3fa:	f7ff feef 	bl	802e1dc <__retarget_lock_release_recursive>
 802e3fe:	e7f3      	b.n	802e3e8 <_vfiprintf_r+0x44>
 802e400:	2300      	movs	r3, #0
 802e402:	9309      	str	r3, [sp, #36]	; 0x24
 802e404:	2320      	movs	r3, #32
 802e406:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802e40a:	f8cd 800c 	str.w	r8, [sp, #12]
 802e40e:	2330      	movs	r3, #48	; 0x30
 802e410:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802e5c4 <_vfiprintf_r+0x220>
 802e414:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802e418:	f04f 0901 	mov.w	r9, #1
 802e41c:	4623      	mov	r3, r4
 802e41e:	469a      	mov	sl, r3
 802e420:	f813 2b01 	ldrb.w	r2, [r3], #1
 802e424:	b10a      	cbz	r2, 802e42a <_vfiprintf_r+0x86>
 802e426:	2a25      	cmp	r2, #37	; 0x25
 802e428:	d1f9      	bne.n	802e41e <_vfiprintf_r+0x7a>
 802e42a:	ebba 0b04 	subs.w	fp, sl, r4
 802e42e:	d00b      	beq.n	802e448 <_vfiprintf_r+0xa4>
 802e430:	465b      	mov	r3, fp
 802e432:	4622      	mov	r2, r4
 802e434:	4629      	mov	r1, r5
 802e436:	4630      	mov	r0, r6
 802e438:	f7ff ffa1 	bl	802e37e <__sfputs_r>
 802e43c:	3001      	adds	r0, #1
 802e43e:	f000 80a9 	beq.w	802e594 <_vfiprintf_r+0x1f0>
 802e442:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802e444:	445a      	add	r2, fp
 802e446:	9209      	str	r2, [sp, #36]	; 0x24
 802e448:	f89a 3000 	ldrb.w	r3, [sl]
 802e44c:	2b00      	cmp	r3, #0
 802e44e:	f000 80a1 	beq.w	802e594 <_vfiprintf_r+0x1f0>
 802e452:	2300      	movs	r3, #0
 802e454:	f04f 32ff 	mov.w	r2, #4294967295
 802e458:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802e45c:	f10a 0a01 	add.w	sl, sl, #1
 802e460:	9304      	str	r3, [sp, #16]
 802e462:	9307      	str	r3, [sp, #28]
 802e464:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802e468:	931a      	str	r3, [sp, #104]	; 0x68
 802e46a:	4654      	mov	r4, sl
 802e46c:	2205      	movs	r2, #5
 802e46e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e472:	4854      	ldr	r0, [pc, #336]	; (802e5c4 <_vfiprintf_r+0x220>)
 802e474:	f7d1 ff1c 	bl	80002b0 <memchr>
 802e478:	9a04      	ldr	r2, [sp, #16]
 802e47a:	b9d8      	cbnz	r0, 802e4b4 <_vfiprintf_r+0x110>
 802e47c:	06d1      	lsls	r1, r2, #27
 802e47e:	bf44      	itt	mi
 802e480:	2320      	movmi	r3, #32
 802e482:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e486:	0713      	lsls	r3, r2, #28
 802e488:	bf44      	itt	mi
 802e48a:	232b      	movmi	r3, #43	; 0x2b
 802e48c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e490:	f89a 3000 	ldrb.w	r3, [sl]
 802e494:	2b2a      	cmp	r3, #42	; 0x2a
 802e496:	d015      	beq.n	802e4c4 <_vfiprintf_r+0x120>
 802e498:	9a07      	ldr	r2, [sp, #28]
 802e49a:	4654      	mov	r4, sl
 802e49c:	2000      	movs	r0, #0
 802e49e:	f04f 0c0a 	mov.w	ip, #10
 802e4a2:	4621      	mov	r1, r4
 802e4a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 802e4a8:	3b30      	subs	r3, #48	; 0x30
 802e4aa:	2b09      	cmp	r3, #9
 802e4ac:	d94d      	bls.n	802e54a <_vfiprintf_r+0x1a6>
 802e4ae:	b1b0      	cbz	r0, 802e4de <_vfiprintf_r+0x13a>
 802e4b0:	9207      	str	r2, [sp, #28]
 802e4b2:	e014      	b.n	802e4de <_vfiprintf_r+0x13a>
 802e4b4:	eba0 0308 	sub.w	r3, r0, r8
 802e4b8:	fa09 f303 	lsl.w	r3, r9, r3
 802e4bc:	4313      	orrs	r3, r2
 802e4be:	9304      	str	r3, [sp, #16]
 802e4c0:	46a2      	mov	sl, r4
 802e4c2:	e7d2      	b.n	802e46a <_vfiprintf_r+0xc6>
 802e4c4:	9b03      	ldr	r3, [sp, #12]
 802e4c6:	1d19      	adds	r1, r3, #4
 802e4c8:	681b      	ldr	r3, [r3, #0]
 802e4ca:	9103      	str	r1, [sp, #12]
 802e4cc:	2b00      	cmp	r3, #0
 802e4ce:	bfbb      	ittet	lt
 802e4d0:	425b      	neglt	r3, r3
 802e4d2:	f042 0202 	orrlt.w	r2, r2, #2
 802e4d6:	9307      	strge	r3, [sp, #28]
 802e4d8:	9307      	strlt	r3, [sp, #28]
 802e4da:	bfb8      	it	lt
 802e4dc:	9204      	strlt	r2, [sp, #16]
 802e4de:	7823      	ldrb	r3, [r4, #0]
 802e4e0:	2b2e      	cmp	r3, #46	; 0x2e
 802e4e2:	d10c      	bne.n	802e4fe <_vfiprintf_r+0x15a>
 802e4e4:	7863      	ldrb	r3, [r4, #1]
 802e4e6:	2b2a      	cmp	r3, #42	; 0x2a
 802e4e8:	d134      	bne.n	802e554 <_vfiprintf_r+0x1b0>
 802e4ea:	9b03      	ldr	r3, [sp, #12]
 802e4ec:	1d1a      	adds	r2, r3, #4
 802e4ee:	681b      	ldr	r3, [r3, #0]
 802e4f0:	9203      	str	r2, [sp, #12]
 802e4f2:	2b00      	cmp	r3, #0
 802e4f4:	bfb8      	it	lt
 802e4f6:	f04f 33ff 	movlt.w	r3, #4294967295
 802e4fa:	3402      	adds	r4, #2
 802e4fc:	9305      	str	r3, [sp, #20]
 802e4fe:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802e5d4 <_vfiprintf_r+0x230>
 802e502:	7821      	ldrb	r1, [r4, #0]
 802e504:	2203      	movs	r2, #3
 802e506:	4650      	mov	r0, sl
 802e508:	f7d1 fed2 	bl	80002b0 <memchr>
 802e50c:	b138      	cbz	r0, 802e51e <_vfiprintf_r+0x17a>
 802e50e:	9b04      	ldr	r3, [sp, #16]
 802e510:	eba0 000a 	sub.w	r0, r0, sl
 802e514:	2240      	movs	r2, #64	; 0x40
 802e516:	4082      	lsls	r2, r0
 802e518:	4313      	orrs	r3, r2
 802e51a:	3401      	adds	r4, #1
 802e51c:	9304      	str	r3, [sp, #16]
 802e51e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e522:	4829      	ldr	r0, [pc, #164]	; (802e5c8 <_vfiprintf_r+0x224>)
 802e524:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802e528:	2206      	movs	r2, #6
 802e52a:	f7d1 fec1 	bl	80002b0 <memchr>
 802e52e:	2800      	cmp	r0, #0
 802e530:	d03f      	beq.n	802e5b2 <_vfiprintf_r+0x20e>
 802e532:	4b26      	ldr	r3, [pc, #152]	; (802e5cc <_vfiprintf_r+0x228>)
 802e534:	bb1b      	cbnz	r3, 802e57e <_vfiprintf_r+0x1da>
 802e536:	9b03      	ldr	r3, [sp, #12]
 802e538:	3307      	adds	r3, #7
 802e53a:	f023 0307 	bic.w	r3, r3, #7
 802e53e:	3308      	adds	r3, #8
 802e540:	9303      	str	r3, [sp, #12]
 802e542:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802e544:	443b      	add	r3, r7
 802e546:	9309      	str	r3, [sp, #36]	; 0x24
 802e548:	e768      	b.n	802e41c <_vfiprintf_r+0x78>
 802e54a:	fb0c 3202 	mla	r2, ip, r2, r3
 802e54e:	460c      	mov	r4, r1
 802e550:	2001      	movs	r0, #1
 802e552:	e7a6      	b.n	802e4a2 <_vfiprintf_r+0xfe>
 802e554:	2300      	movs	r3, #0
 802e556:	3401      	adds	r4, #1
 802e558:	9305      	str	r3, [sp, #20]
 802e55a:	4619      	mov	r1, r3
 802e55c:	f04f 0c0a 	mov.w	ip, #10
 802e560:	4620      	mov	r0, r4
 802e562:	f810 2b01 	ldrb.w	r2, [r0], #1
 802e566:	3a30      	subs	r2, #48	; 0x30
 802e568:	2a09      	cmp	r2, #9
 802e56a:	d903      	bls.n	802e574 <_vfiprintf_r+0x1d0>
 802e56c:	2b00      	cmp	r3, #0
 802e56e:	d0c6      	beq.n	802e4fe <_vfiprintf_r+0x15a>
 802e570:	9105      	str	r1, [sp, #20]
 802e572:	e7c4      	b.n	802e4fe <_vfiprintf_r+0x15a>
 802e574:	fb0c 2101 	mla	r1, ip, r1, r2
 802e578:	4604      	mov	r4, r0
 802e57a:	2301      	movs	r3, #1
 802e57c:	e7f0      	b.n	802e560 <_vfiprintf_r+0x1bc>
 802e57e:	ab03      	add	r3, sp, #12
 802e580:	9300      	str	r3, [sp, #0]
 802e582:	462a      	mov	r2, r5
 802e584:	4b12      	ldr	r3, [pc, #72]	; (802e5d0 <_vfiprintf_r+0x22c>)
 802e586:	a904      	add	r1, sp, #16
 802e588:	4630      	mov	r0, r6
 802e58a:	f3af 8000 	nop.w
 802e58e:	4607      	mov	r7, r0
 802e590:	1c78      	adds	r0, r7, #1
 802e592:	d1d6      	bne.n	802e542 <_vfiprintf_r+0x19e>
 802e594:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e596:	07d9      	lsls	r1, r3, #31
 802e598:	d405      	bmi.n	802e5a6 <_vfiprintf_r+0x202>
 802e59a:	89ab      	ldrh	r3, [r5, #12]
 802e59c:	059a      	lsls	r2, r3, #22
 802e59e:	d402      	bmi.n	802e5a6 <_vfiprintf_r+0x202>
 802e5a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e5a2:	f7ff fe1b 	bl	802e1dc <__retarget_lock_release_recursive>
 802e5a6:	89ab      	ldrh	r3, [r5, #12]
 802e5a8:	065b      	lsls	r3, r3, #25
 802e5aa:	f53f af1d 	bmi.w	802e3e8 <_vfiprintf_r+0x44>
 802e5ae:	9809      	ldr	r0, [sp, #36]	; 0x24
 802e5b0:	e71c      	b.n	802e3ec <_vfiprintf_r+0x48>
 802e5b2:	ab03      	add	r3, sp, #12
 802e5b4:	9300      	str	r3, [sp, #0]
 802e5b6:	462a      	mov	r2, r5
 802e5b8:	4b05      	ldr	r3, [pc, #20]	; (802e5d0 <_vfiprintf_r+0x22c>)
 802e5ba:	a904      	add	r1, sp, #16
 802e5bc:	4630      	mov	r0, r6
 802e5be:	f000 f879 	bl	802e6b4 <_printf_i>
 802e5c2:	e7e4      	b.n	802e58e <_vfiprintf_r+0x1ea>
 802e5c4:	08045e3c 	.word	0x08045e3c
 802e5c8:	08045e46 	.word	0x08045e46
 802e5cc:	00000000 	.word	0x00000000
 802e5d0:	0802e37f 	.word	0x0802e37f
 802e5d4:	08045e42 	.word	0x08045e42

0802e5d8 <_printf_common>:
 802e5d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802e5dc:	4616      	mov	r6, r2
 802e5de:	4699      	mov	r9, r3
 802e5e0:	688a      	ldr	r2, [r1, #8]
 802e5e2:	690b      	ldr	r3, [r1, #16]
 802e5e4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802e5e8:	4293      	cmp	r3, r2
 802e5ea:	bfb8      	it	lt
 802e5ec:	4613      	movlt	r3, r2
 802e5ee:	6033      	str	r3, [r6, #0]
 802e5f0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802e5f4:	4607      	mov	r7, r0
 802e5f6:	460c      	mov	r4, r1
 802e5f8:	b10a      	cbz	r2, 802e5fe <_printf_common+0x26>
 802e5fa:	3301      	adds	r3, #1
 802e5fc:	6033      	str	r3, [r6, #0]
 802e5fe:	6823      	ldr	r3, [r4, #0]
 802e600:	0699      	lsls	r1, r3, #26
 802e602:	bf42      	ittt	mi
 802e604:	6833      	ldrmi	r3, [r6, #0]
 802e606:	3302      	addmi	r3, #2
 802e608:	6033      	strmi	r3, [r6, #0]
 802e60a:	6825      	ldr	r5, [r4, #0]
 802e60c:	f015 0506 	ands.w	r5, r5, #6
 802e610:	d106      	bne.n	802e620 <_printf_common+0x48>
 802e612:	f104 0a19 	add.w	sl, r4, #25
 802e616:	68e3      	ldr	r3, [r4, #12]
 802e618:	6832      	ldr	r2, [r6, #0]
 802e61a:	1a9b      	subs	r3, r3, r2
 802e61c:	42ab      	cmp	r3, r5
 802e61e:	dc26      	bgt.n	802e66e <_printf_common+0x96>
 802e620:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802e624:	1e13      	subs	r3, r2, #0
 802e626:	6822      	ldr	r2, [r4, #0]
 802e628:	bf18      	it	ne
 802e62a:	2301      	movne	r3, #1
 802e62c:	0692      	lsls	r2, r2, #26
 802e62e:	d42b      	bmi.n	802e688 <_printf_common+0xb0>
 802e630:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802e634:	4649      	mov	r1, r9
 802e636:	4638      	mov	r0, r7
 802e638:	47c0      	blx	r8
 802e63a:	3001      	adds	r0, #1
 802e63c:	d01e      	beq.n	802e67c <_printf_common+0xa4>
 802e63e:	6823      	ldr	r3, [r4, #0]
 802e640:	6922      	ldr	r2, [r4, #16]
 802e642:	f003 0306 	and.w	r3, r3, #6
 802e646:	2b04      	cmp	r3, #4
 802e648:	bf02      	ittt	eq
 802e64a:	68e5      	ldreq	r5, [r4, #12]
 802e64c:	6833      	ldreq	r3, [r6, #0]
 802e64e:	1aed      	subeq	r5, r5, r3
 802e650:	68a3      	ldr	r3, [r4, #8]
 802e652:	bf0c      	ite	eq
 802e654:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802e658:	2500      	movne	r5, #0
 802e65a:	4293      	cmp	r3, r2
 802e65c:	bfc4      	itt	gt
 802e65e:	1a9b      	subgt	r3, r3, r2
 802e660:	18ed      	addgt	r5, r5, r3
 802e662:	2600      	movs	r6, #0
 802e664:	341a      	adds	r4, #26
 802e666:	42b5      	cmp	r5, r6
 802e668:	d11a      	bne.n	802e6a0 <_printf_common+0xc8>
 802e66a:	2000      	movs	r0, #0
 802e66c:	e008      	b.n	802e680 <_printf_common+0xa8>
 802e66e:	2301      	movs	r3, #1
 802e670:	4652      	mov	r2, sl
 802e672:	4649      	mov	r1, r9
 802e674:	4638      	mov	r0, r7
 802e676:	47c0      	blx	r8
 802e678:	3001      	adds	r0, #1
 802e67a:	d103      	bne.n	802e684 <_printf_common+0xac>
 802e67c:	f04f 30ff 	mov.w	r0, #4294967295
 802e680:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e684:	3501      	adds	r5, #1
 802e686:	e7c6      	b.n	802e616 <_printf_common+0x3e>
 802e688:	18e1      	adds	r1, r4, r3
 802e68a:	1c5a      	adds	r2, r3, #1
 802e68c:	2030      	movs	r0, #48	; 0x30
 802e68e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802e692:	4422      	add	r2, r4
 802e694:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802e698:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802e69c:	3302      	adds	r3, #2
 802e69e:	e7c7      	b.n	802e630 <_printf_common+0x58>
 802e6a0:	2301      	movs	r3, #1
 802e6a2:	4622      	mov	r2, r4
 802e6a4:	4649      	mov	r1, r9
 802e6a6:	4638      	mov	r0, r7
 802e6a8:	47c0      	blx	r8
 802e6aa:	3001      	adds	r0, #1
 802e6ac:	d0e6      	beq.n	802e67c <_printf_common+0xa4>
 802e6ae:	3601      	adds	r6, #1
 802e6b0:	e7d9      	b.n	802e666 <_printf_common+0x8e>
	...

0802e6b4 <_printf_i>:
 802e6b4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802e6b8:	7e0f      	ldrb	r7, [r1, #24]
 802e6ba:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802e6bc:	2f78      	cmp	r7, #120	; 0x78
 802e6be:	4691      	mov	r9, r2
 802e6c0:	4680      	mov	r8, r0
 802e6c2:	460c      	mov	r4, r1
 802e6c4:	469a      	mov	sl, r3
 802e6c6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802e6ca:	d807      	bhi.n	802e6dc <_printf_i+0x28>
 802e6cc:	2f62      	cmp	r7, #98	; 0x62
 802e6ce:	d80a      	bhi.n	802e6e6 <_printf_i+0x32>
 802e6d0:	2f00      	cmp	r7, #0
 802e6d2:	f000 80d4 	beq.w	802e87e <_printf_i+0x1ca>
 802e6d6:	2f58      	cmp	r7, #88	; 0x58
 802e6d8:	f000 80c0 	beq.w	802e85c <_printf_i+0x1a8>
 802e6dc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e6e0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802e6e4:	e03a      	b.n	802e75c <_printf_i+0xa8>
 802e6e6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802e6ea:	2b15      	cmp	r3, #21
 802e6ec:	d8f6      	bhi.n	802e6dc <_printf_i+0x28>
 802e6ee:	a101      	add	r1, pc, #4	; (adr r1, 802e6f4 <_printf_i+0x40>)
 802e6f0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802e6f4:	0802e74d 	.word	0x0802e74d
 802e6f8:	0802e761 	.word	0x0802e761
 802e6fc:	0802e6dd 	.word	0x0802e6dd
 802e700:	0802e6dd 	.word	0x0802e6dd
 802e704:	0802e6dd 	.word	0x0802e6dd
 802e708:	0802e6dd 	.word	0x0802e6dd
 802e70c:	0802e761 	.word	0x0802e761
 802e710:	0802e6dd 	.word	0x0802e6dd
 802e714:	0802e6dd 	.word	0x0802e6dd
 802e718:	0802e6dd 	.word	0x0802e6dd
 802e71c:	0802e6dd 	.word	0x0802e6dd
 802e720:	0802e865 	.word	0x0802e865
 802e724:	0802e78d 	.word	0x0802e78d
 802e728:	0802e81f 	.word	0x0802e81f
 802e72c:	0802e6dd 	.word	0x0802e6dd
 802e730:	0802e6dd 	.word	0x0802e6dd
 802e734:	0802e887 	.word	0x0802e887
 802e738:	0802e6dd 	.word	0x0802e6dd
 802e73c:	0802e78d 	.word	0x0802e78d
 802e740:	0802e6dd 	.word	0x0802e6dd
 802e744:	0802e6dd 	.word	0x0802e6dd
 802e748:	0802e827 	.word	0x0802e827
 802e74c:	682b      	ldr	r3, [r5, #0]
 802e74e:	1d1a      	adds	r2, r3, #4
 802e750:	681b      	ldr	r3, [r3, #0]
 802e752:	602a      	str	r2, [r5, #0]
 802e754:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e758:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802e75c:	2301      	movs	r3, #1
 802e75e:	e09f      	b.n	802e8a0 <_printf_i+0x1ec>
 802e760:	6820      	ldr	r0, [r4, #0]
 802e762:	682b      	ldr	r3, [r5, #0]
 802e764:	0607      	lsls	r7, r0, #24
 802e766:	f103 0104 	add.w	r1, r3, #4
 802e76a:	6029      	str	r1, [r5, #0]
 802e76c:	d501      	bpl.n	802e772 <_printf_i+0xbe>
 802e76e:	681e      	ldr	r6, [r3, #0]
 802e770:	e003      	b.n	802e77a <_printf_i+0xc6>
 802e772:	0646      	lsls	r6, r0, #25
 802e774:	d5fb      	bpl.n	802e76e <_printf_i+0xba>
 802e776:	f9b3 6000 	ldrsh.w	r6, [r3]
 802e77a:	2e00      	cmp	r6, #0
 802e77c:	da03      	bge.n	802e786 <_printf_i+0xd2>
 802e77e:	232d      	movs	r3, #45	; 0x2d
 802e780:	4276      	negs	r6, r6
 802e782:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e786:	485a      	ldr	r0, [pc, #360]	; (802e8f0 <_printf_i+0x23c>)
 802e788:	230a      	movs	r3, #10
 802e78a:	e012      	b.n	802e7b2 <_printf_i+0xfe>
 802e78c:	682b      	ldr	r3, [r5, #0]
 802e78e:	6820      	ldr	r0, [r4, #0]
 802e790:	1d19      	adds	r1, r3, #4
 802e792:	6029      	str	r1, [r5, #0]
 802e794:	0605      	lsls	r5, r0, #24
 802e796:	d501      	bpl.n	802e79c <_printf_i+0xe8>
 802e798:	681e      	ldr	r6, [r3, #0]
 802e79a:	e002      	b.n	802e7a2 <_printf_i+0xee>
 802e79c:	0641      	lsls	r1, r0, #25
 802e79e:	d5fb      	bpl.n	802e798 <_printf_i+0xe4>
 802e7a0:	881e      	ldrh	r6, [r3, #0]
 802e7a2:	4853      	ldr	r0, [pc, #332]	; (802e8f0 <_printf_i+0x23c>)
 802e7a4:	2f6f      	cmp	r7, #111	; 0x6f
 802e7a6:	bf0c      	ite	eq
 802e7a8:	2308      	moveq	r3, #8
 802e7aa:	230a      	movne	r3, #10
 802e7ac:	2100      	movs	r1, #0
 802e7ae:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802e7b2:	6865      	ldr	r5, [r4, #4]
 802e7b4:	60a5      	str	r5, [r4, #8]
 802e7b6:	2d00      	cmp	r5, #0
 802e7b8:	bfa2      	ittt	ge
 802e7ba:	6821      	ldrge	r1, [r4, #0]
 802e7bc:	f021 0104 	bicge.w	r1, r1, #4
 802e7c0:	6021      	strge	r1, [r4, #0]
 802e7c2:	b90e      	cbnz	r6, 802e7c8 <_printf_i+0x114>
 802e7c4:	2d00      	cmp	r5, #0
 802e7c6:	d04b      	beq.n	802e860 <_printf_i+0x1ac>
 802e7c8:	4615      	mov	r5, r2
 802e7ca:	fbb6 f1f3 	udiv	r1, r6, r3
 802e7ce:	fb03 6711 	mls	r7, r3, r1, r6
 802e7d2:	5dc7      	ldrb	r7, [r0, r7]
 802e7d4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802e7d8:	4637      	mov	r7, r6
 802e7da:	42bb      	cmp	r3, r7
 802e7dc:	460e      	mov	r6, r1
 802e7de:	d9f4      	bls.n	802e7ca <_printf_i+0x116>
 802e7e0:	2b08      	cmp	r3, #8
 802e7e2:	d10b      	bne.n	802e7fc <_printf_i+0x148>
 802e7e4:	6823      	ldr	r3, [r4, #0]
 802e7e6:	07de      	lsls	r6, r3, #31
 802e7e8:	d508      	bpl.n	802e7fc <_printf_i+0x148>
 802e7ea:	6923      	ldr	r3, [r4, #16]
 802e7ec:	6861      	ldr	r1, [r4, #4]
 802e7ee:	4299      	cmp	r1, r3
 802e7f0:	bfde      	ittt	le
 802e7f2:	2330      	movle	r3, #48	; 0x30
 802e7f4:	f805 3c01 	strble.w	r3, [r5, #-1]
 802e7f8:	f105 35ff 	addle.w	r5, r5, #4294967295
 802e7fc:	1b52      	subs	r2, r2, r5
 802e7fe:	6122      	str	r2, [r4, #16]
 802e800:	f8cd a000 	str.w	sl, [sp]
 802e804:	464b      	mov	r3, r9
 802e806:	aa03      	add	r2, sp, #12
 802e808:	4621      	mov	r1, r4
 802e80a:	4640      	mov	r0, r8
 802e80c:	f7ff fee4 	bl	802e5d8 <_printf_common>
 802e810:	3001      	adds	r0, #1
 802e812:	d14a      	bne.n	802e8aa <_printf_i+0x1f6>
 802e814:	f04f 30ff 	mov.w	r0, #4294967295
 802e818:	b004      	add	sp, #16
 802e81a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e81e:	6823      	ldr	r3, [r4, #0]
 802e820:	f043 0320 	orr.w	r3, r3, #32
 802e824:	6023      	str	r3, [r4, #0]
 802e826:	4833      	ldr	r0, [pc, #204]	; (802e8f4 <_printf_i+0x240>)
 802e828:	2778      	movs	r7, #120	; 0x78
 802e82a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802e82e:	6823      	ldr	r3, [r4, #0]
 802e830:	6829      	ldr	r1, [r5, #0]
 802e832:	061f      	lsls	r7, r3, #24
 802e834:	f851 6b04 	ldr.w	r6, [r1], #4
 802e838:	d402      	bmi.n	802e840 <_printf_i+0x18c>
 802e83a:	065f      	lsls	r7, r3, #25
 802e83c:	bf48      	it	mi
 802e83e:	b2b6      	uxthmi	r6, r6
 802e840:	07df      	lsls	r7, r3, #31
 802e842:	bf48      	it	mi
 802e844:	f043 0320 	orrmi.w	r3, r3, #32
 802e848:	6029      	str	r1, [r5, #0]
 802e84a:	bf48      	it	mi
 802e84c:	6023      	strmi	r3, [r4, #0]
 802e84e:	b91e      	cbnz	r6, 802e858 <_printf_i+0x1a4>
 802e850:	6823      	ldr	r3, [r4, #0]
 802e852:	f023 0320 	bic.w	r3, r3, #32
 802e856:	6023      	str	r3, [r4, #0]
 802e858:	2310      	movs	r3, #16
 802e85a:	e7a7      	b.n	802e7ac <_printf_i+0xf8>
 802e85c:	4824      	ldr	r0, [pc, #144]	; (802e8f0 <_printf_i+0x23c>)
 802e85e:	e7e4      	b.n	802e82a <_printf_i+0x176>
 802e860:	4615      	mov	r5, r2
 802e862:	e7bd      	b.n	802e7e0 <_printf_i+0x12c>
 802e864:	682b      	ldr	r3, [r5, #0]
 802e866:	6826      	ldr	r6, [r4, #0]
 802e868:	6961      	ldr	r1, [r4, #20]
 802e86a:	1d18      	adds	r0, r3, #4
 802e86c:	6028      	str	r0, [r5, #0]
 802e86e:	0635      	lsls	r5, r6, #24
 802e870:	681b      	ldr	r3, [r3, #0]
 802e872:	d501      	bpl.n	802e878 <_printf_i+0x1c4>
 802e874:	6019      	str	r1, [r3, #0]
 802e876:	e002      	b.n	802e87e <_printf_i+0x1ca>
 802e878:	0670      	lsls	r0, r6, #25
 802e87a:	d5fb      	bpl.n	802e874 <_printf_i+0x1c0>
 802e87c:	8019      	strh	r1, [r3, #0]
 802e87e:	2300      	movs	r3, #0
 802e880:	6123      	str	r3, [r4, #16]
 802e882:	4615      	mov	r5, r2
 802e884:	e7bc      	b.n	802e800 <_printf_i+0x14c>
 802e886:	682b      	ldr	r3, [r5, #0]
 802e888:	1d1a      	adds	r2, r3, #4
 802e88a:	602a      	str	r2, [r5, #0]
 802e88c:	681d      	ldr	r5, [r3, #0]
 802e88e:	6862      	ldr	r2, [r4, #4]
 802e890:	2100      	movs	r1, #0
 802e892:	4628      	mov	r0, r5
 802e894:	f7d1 fd0c 	bl	80002b0 <memchr>
 802e898:	b108      	cbz	r0, 802e89e <_printf_i+0x1ea>
 802e89a:	1b40      	subs	r0, r0, r5
 802e89c:	6060      	str	r0, [r4, #4]
 802e89e:	6863      	ldr	r3, [r4, #4]
 802e8a0:	6123      	str	r3, [r4, #16]
 802e8a2:	2300      	movs	r3, #0
 802e8a4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e8a8:	e7aa      	b.n	802e800 <_printf_i+0x14c>
 802e8aa:	6923      	ldr	r3, [r4, #16]
 802e8ac:	462a      	mov	r2, r5
 802e8ae:	4649      	mov	r1, r9
 802e8b0:	4640      	mov	r0, r8
 802e8b2:	47d0      	blx	sl
 802e8b4:	3001      	adds	r0, #1
 802e8b6:	d0ad      	beq.n	802e814 <_printf_i+0x160>
 802e8b8:	6823      	ldr	r3, [r4, #0]
 802e8ba:	079b      	lsls	r3, r3, #30
 802e8bc:	d413      	bmi.n	802e8e6 <_printf_i+0x232>
 802e8be:	68e0      	ldr	r0, [r4, #12]
 802e8c0:	9b03      	ldr	r3, [sp, #12]
 802e8c2:	4298      	cmp	r0, r3
 802e8c4:	bfb8      	it	lt
 802e8c6:	4618      	movlt	r0, r3
 802e8c8:	e7a6      	b.n	802e818 <_printf_i+0x164>
 802e8ca:	2301      	movs	r3, #1
 802e8cc:	4632      	mov	r2, r6
 802e8ce:	4649      	mov	r1, r9
 802e8d0:	4640      	mov	r0, r8
 802e8d2:	47d0      	blx	sl
 802e8d4:	3001      	adds	r0, #1
 802e8d6:	d09d      	beq.n	802e814 <_printf_i+0x160>
 802e8d8:	3501      	adds	r5, #1
 802e8da:	68e3      	ldr	r3, [r4, #12]
 802e8dc:	9903      	ldr	r1, [sp, #12]
 802e8de:	1a5b      	subs	r3, r3, r1
 802e8e0:	42ab      	cmp	r3, r5
 802e8e2:	dcf2      	bgt.n	802e8ca <_printf_i+0x216>
 802e8e4:	e7eb      	b.n	802e8be <_printf_i+0x20a>
 802e8e6:	2500      	movs	r5, #0
 802e8e8:	f104 0619 	add.w	r6, r4, #25
 802e8ec:	e7f5      	b.n	802e8da <_printf_i+0x226>
 802e8ee:	bf00      	nop
 802e8f0:	08045e4d 	.word	0x08045e4d
 802e8f4:	08045e5e 	.word	0x08045e5e

0802e8f8 <__sflush_r>:
 802e8f8:	898a      	ldrh	r2, [r1, #12]
 802e8fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e8fe:	4605      	mov	r5, r0
 802e900:	0710      	lsls	r0, r2, #28
 802e902:	460c      	mov	r4, r1
 802e904:	d458      	bmi.n	802e9b8 <__sflush_r+0xc0>
 802e906:	684b      	ldr	r3, [r1, #4]
 802e908:	2b00      	cmp	r3, #0
 802e90a:	dc05      	bgt.n	802e918 <__sflush_r+0x20>
 802e90c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802e90e:	2b00      	cmp	r3, #0
 802e910:	dc02      	bgt.n	802e918 <__sflush_r+0x20>
 802e912:	2000      	movs	r0, #0
 802e914:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e918:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e91a:	2e00      	cmp	r6, #0
 802e91c:	d0f9      	beq.n	802e912 <__sflush_r+0x1a>
 802e91e:	2300      	movs	r3, #0
 802e920:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802e924:	682f      	ldr	r7, [r5, #0]
 802e926:	6a21      	ldr	r1, [r4, #32]
 802e928:	602b      	str	r3, [r5, #0]
 802e92a:	d032      	beq.n	802e992 <__sflush_r+0x9a>
 802e92c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802e92e:	89a3      	ldrh	r3, [r4, #12]
 802e930:	075a      	lsls	r2, r3, #29
 802e932:	d505      	bpl.n	802e940 <__sflush_r+0x48>
 802e934:	6863      	ldr	r3, [r4, #4]
 802e936:	1ac0      	subs	r0, r0, r3
 802e938:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802e93a:	b10b      	cbz	r3, 802e940 <__sflush_r+0x48>
 802e93c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802e93e:	1ac0      	subs	r0, r0, r3
 802e940:	2300      	movs	r3, #0
 802e942:	4602      	mov	r2, r0
 802e944:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e946:	6a21      	ldr	r1, [r4, #32]
 802e948:	4628      	mov	r0, r5
 802e94a:	47b0      	blx	r6
 802e94c:	1c43      	adds	r3, r0, #1
 802e94e:	89a3      	ldrh	r3, [r4, #12]
 802e950:	d106      	bne.n	802e960 <__sflush_r+0x68>
 802e952:	6829      	ldr	r1, [r5, #0]
 802e954:	291d      	cmp	r1, #29
 802e956:	d82b      	bhi.n	802e9b0 <__sflush_r+0xb8>
 802e958:	4a29      	ldr	r2, [pc, #164]	; (802ea00 <__sflush_r+0x108>)
 802e95a:	410a      	asrs	r2, r1
 802e95c:	07d6      	lsls	r6, r2, #31
 802e95e:	d427      	bmi.n	802e9b0 <__sflush_r+0xb8>
 802e960:	2200      	movs	r2, #0
 802e962:	6062      	str	r2, [r4, #4]
 802e964:	04d9      	lsls	r1, r3, #19
 802e966:	6922      	ldr	r2, [r4, #16]
 802e968:	6022      	str	r2, [r4, #0]
 802e96a:	d504      	bpl.n	802e976 <__sflush_r+0x7e>
 802e96c:	1c42      	adds	r2, r0, #1
 802e96e:	d101      	bne.n	802e974 <__sflush_r+0x7c>
 802e970:	682b      	ldr	r3, [r5, #0]
 802e972:	b903      	cbnz	r3, 802e976 <__sflush_r+0x7e>
 802e974:	6560      	str	r0, [r4, #84]	; 0x54
 802e976:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e978:	602f      	str	r7, [r5, #0]
 802e97a:	2900      	cmp	r1, #0
 802e97c:	d0c9      	beq.n	802e912 <__sflush_r+0x1a>
 802e97e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e982:	4299      	cmp	r1, r3
 802e984:	d002      	beq.n	802e98c <__sflush_r+0x94>
 802e986:	4628      	mov	r0, r5
 802e988:	f7ff fc96 	bl	802e2b8 <_free_r>
 802e98c:	2000      	movs	r0, #0
 802e98e:	6360      	str	r0, [r4, #52]	; 0x34
 802e990:	e7c0      	b.n	802e914 <__sflush_r+0x1c>
 802e992:	2301      	movs	r3, #1
 802e994:	4628      	mov	r0, r5
 802e996:	47b0      	blx	r6
 802e998:	1c41      	adds	r1, r0, #1
 802e99a:	d1c8      	bne.n	802e92e <__sflush_r+0x36>
 802e99c:	682b      	ldr	r3, [r5, #0]
 802e99e:	2b00      	cmp	r3, #0
 802e9a0:	d0c5      	beq.n	802e92e <__sflush_r+0x36>
 802e9a2:	2b1d      	cmp	r3, #29
 802e9a4:	d001      	beq.n	802e9aa <__sflush_r+0xb2>
 802e9a6:	2b16      	cmp	r3, #22
 802e9a8:	d101      	bne.n	802e9ae <__sflush_r+0xb6>
 802e9aa:	602f      	str	r7, [r5, #0]
 802e9ac:	e7b1      	b.n	802e912 <__sflush_r+0x1a>
 802e9ae:	89a3      	ldrh	r3, [r4, #12]
 802e9b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e9b4:	81a3      	strh	r3, [r4, #12]
 802e9b6:	e7ad      	b.n	802e914 <__sflush_r+0x1c>
 802e9b8:	690f      	ldr	r7, [r1, #16]
 802e9ba:	2f00      	cmp	r7, #0
 802e9bc:	d0a9      	beq.n	802e912 <__sflush_r+0x1a>
 802e9be:	0793      	lsls	r3, r2, #30
 802e9c0:	680e      	ldr	r6, [r1, #0]
 802e9c2:	bf08      	it	eq
 802e9c4:	694b      	ldreq	r3, [r1, #20]
 802e9c6:	600f      	str	r7, [r1, #0]
 802e9c8:	bf18      	it	ne
 802e9ca:	2300      	movne	r3, #0
 802e9cc:	eba6 0807 	sub.w	r8, r6, r7
 802e9d0:	608b      	str	r3, [r1, #8]
 802e9d2:	f1b8 0f00 	cmp.w	r8, #0
 802e9d6:	dd9c      	ble.n	802e912 <__sflush_r+0x1a>
 802e9d8:	6a21      	ldr	r1, [r4, #32]
 802e9da:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802e9dc:	4643      	mov	r3, r8
 802e9de:	463a      	mov	r2, r7
 802e9e0:	4628      	mov	r0, r5
 802e9e2:	47b0      	blx	r6
 802e9e4:	2800      	cmp	r0, #0
 802e9e6:	dc06      	bgt.n	802e9f6 <__sflush_r+0xfe>
 802e9e8:	89a3      	ldrh	r3, [r4, #12]
 802e9ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e9ee:	81a3      	strh	r3, [r4, #12]
 802e9f0:	f04f 30ff 	mov.w	r0, #4294967295
 802e9f4:	e78e      	b.n	802e914 <__sflush_r+0x1c>
 802e9f6:	4407      	add	r7, r0
 802e9f8:	eba8 0800 	sub.w	r8, r8, r0
 802e9fc:	e7e9      	b.n	802e9d2 <__sflush_r+0xda>
 802e9fe:	bf00      	nop
 802ea00:	dfbffffe 	.word	0xdfbffffe

0802ea04 <_fflush_r>:
 802ea04:	b538      	push	{r3, r4, r5, lr}
 802ea06:	690b      	ldr	r3, [r1, #16]
 802ea08:	4605      	mov	r5, r0
 802ea0a:	460c      	mov	r4, r1
 802ea0c:	b913      	cbnz	r3, 802ea14 <_fflush_r+0x10>
 802ea0e:	2500      	movs	r5, #0
 802ea10:	4628      	mov	r0, r5
 802ea12:	bd38      	pop	{r3, r4, r5, pc}
 802ea14:	b118      	cbz	r0, 802ea1e <_fflush_r+0x1a>
 802ea16:	6a03      	ldr	r3, [r0, #32]
 802ea18:	b90b      	cbnz	r3, 802ea1e <_fflush_r+0x1a>
 802ea1a:	f7ff fa2f 	bl	802de7c <__sinit>
 802ea1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ea22:	2b00      	cmp	r3, #0
 802ea24:	d0f3      	beq.n	802ea0e <_fflush_r+0xa>
 802ea26:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802ea28:	07d0      	lsls	r0, r2, #31
 802ea2a:	d404      	bmi.n	802ea36 <_fflush_r+0x32>
 802ea2c:	0599      	lsls	r1, r3, #22
 802ea2e:	d402      	bmi.n	802ea36 <_fflush_r+0x32>
 802ea30:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ea32:	f7ff fbd2 	bl	802e1da <__retarget_lock_acquire_recursive>
 802ea36:	4628      	mov	r0, r5
 802ea38:	4621      	mov	r1, r4
 802ea3a:	f7ff ff5d 	bl	802e8f8 <__sflush_r>
 802ea3e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802ea40:	07da      	lsls	r2, r3, #31
 802ea42:	4605      	mov	r5, r0
 802ea44:	d4e4      	bmi.n	802ea10 <_fflush_r+0xc>
 802ea46:	89a3      	ldrh	r3, [r4, #12]
 802ea48:	059b      	lsls	r3, r3, #22
 802ea4a:	d4e1      	bmi.n	802ea10 <_fflush_r+0xc>
 802ea4c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ea4e:	f7ff fbc5 	bl	802e1dc <__retarget_lock_release_recursive>
 802ea52:	e7dd      	b.n	802ea10 <_fflush_r+0xc>

0802ea54 <__swbuf_r>:
 802ea54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ea56:	460e      	mov	r6, r1
 802ea58:	4614      	mov	r4, r2
 802ea5a:	4605      	mov	r5, r0
 802ea5c:	b118      	cbz	r0, 802ea66 <__swbuf_r+0x12>
 802ea5e:	6a03      	ldr	r3, [r0, #32]
 802ea60:	b90b      	cbnz	r3, 802ea66 <__swbuf_r+0x12>
 802ea62:	f7ff fa0b 	bl	802de7c <__sinit>
 802ea66:	69a3      	ldr	r3, [r4, #24]
 802ea68:	60a3      	str	r3, [r4, #8]
 802ea6a:	89a3      	ldrh	r3, [r4, #12]
 802ea6c:	071a      	lsls	r2, r3, #28
 802ea6e:	d525      	bpl.n	802eabc <__swbuf_r+0x68>
 802ea70:	6923      	ldr	r3, [r4, #16]
 802ea72:	b31b      	cbz	r3, 802eabc <__swbuf_r+0x68>
 802ea74:	6823      	ldr	r3, [r4, #0]
 802ea76:	6922      	ldr	r2, [r4, #16]
 802ea78:	1a98      	subs	r0, r3, r2
 802ea7a:	6963      	ldr	r3, [r4, #20]
 802ea7c:	b2f6      	uxtb	r6, r6
 802ea7e:	4283      	cmp	r3, r0
 802ea80:	4637      	mov	r7, r6
 802ea82:	dc04      	bgt.n	802ea8e <__swbuf_r+0x3a>
 802ea84:	4621      	mov	r1, r4
 802ea86:	4628      	mov	r0, r5
 802ea88:	f7ff ffbc 	bl	802ea04 <_fflush_r>
 802ea8c:	b9e0      	cbnz	r0, 802eac8 <__swbuf_r+0x74>
 802ea8e:	68a3      	ldr	r3, [r4, #8]
 802ea90:	3b01      	subs	r3, #1
 802ea92:	60a3      	str	r3, [r4, #8]
 802ea94:	6823      	ldr	r3, [r4, #0]
 802ea96:	1c5a      	adds	r2, r3, #1
 802ea98:	6022      	str	r2, [r4, #0]
 802ea9a:	701e      	strb	r6, [r3, #0]
 802ea9c:	6962      	ldr	r2, [r4, #20]
 802ea9e:	1c43      	adds	r3, r0, #1
 802eaa0:	429a      	cmp	r2, r3
 802eaa2:	d004      	beq.n	802eaae <__swbuf_r+0x5a>
 802eaa4:	89a3      	ldrh	r3, [r4, #12]
 802eaa6:	07db      	lsls	r3, r3, #31
 802eaa8:	d506      	bpl.n	802eab8 <__swbuf_r+0x64>
 802eaaa:	2e0a      	cmp	r6, #10
 802eaac:	d104      	bne.n	802eab8 <__swbuf_r+0x64>
 802eaae:	4621      	mov	r1, r4
 802eab0:	4628      	mov	r0, r5
 802eab2:	f7ff ffa7 	bl	802ea04 <_fflush_r>
 802eab6:	b938      	cbnz	r0, 802eac8 <__swbuf_r+0x74>
 802eab8:	4638      	mov	r0, r7
 802eaba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802eabc:	4621      	mov	r1, r4
 802eabe:	4628      	mov	r0, r5
 802eac0:	f000 f806 	bl	802ead0 <__swsetup_r>
 802eac4:	2800      	cmp	r0, #0
 802eac6:	d0d5      	beq.n	802ea74 <__swbuf_r+0x20>
 802eac8:	f04f 37ff 	mov.w	r7, #4294967295
 802eacc:	e7f4      	b.n	802eab8 <__swbuf_r+0x64>
	...

0802ead0 <__swsetup_r>:
 802ead0:	b538      	push	{r3, r4, r5, lr}
 802ead2:	4b2a      	ldr	r3, [pc, #168]	; (802eb7c <__swsetup_r+0xac>)
 802ead4:	4605      	mov	r5, r0
 802ead6:	6818      	ldr	r0, [r3, #0]
 802ead8:	460c      	mov	r4, r1
 802eada:	b118      	cbz	r0, 802eae4 <__swsetup_r+0x14>
 802eadc:	6a03      	ldr	r3, [r0, #32]
 802eade:	b90b      	cbnz	r3, 802eae4 <__swsetup_r+0x14>
 802eae0:	f7ff f9cc 	bl	802de7c <__sinit>
 802eae4:	89a3      	ldrh	r3, [r4, #12]
 802eae6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802eaea:	0718      	lsls	r0, r3, #28
 802eaec:	d422      	bmi.n	802eb34 <__swsetup_r+0x64>
 802eaee:	06d9      	lsls	r1, r3, #27
 802eaf0:	d407      	bmi.n	802eb02 <__swsetup_r+0x32>
 802eaf2:	2309      	movs	r3, #9
 802eaf4:	602b      	str	r3, [r5, #0]
 802eaf6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802eafa:	81a3      	strh	r3, [r4, #12]
 802eafc:	f04f 30ff 	mov.w	r0, #4294967295
 802eb00:	e034      	b.n	802eb6c <__swsetup_r+0x9c>
 802eb02:	0758      	lsls	r0, r3, #29
 802eb04:	d512      	bpl.n	802eb2c <__swsetup_r+0x5c>
 802eb06:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802eb08:	b141      	cbz	r1, 802eb1c <__swsetup_r+0x4c>
 802eb0a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802eb0e:	4299      	cmp	r1, r3
 802eb10:	d002      	beq.n	802eb18 <__swsetup_r+0x48>
 802eb12:	4628      	mov	r0, r5
 802eb14:	f7ff fbd0 	bl	802e2b8 <_free_r>
 802eb18:	2300      	movs	r3, #0
 802eb1a:	6363      	str	r3, [r4, #52]	; 0x34
 802eb1c:	89a3      	ldrh	r3, [r4, #12]
 802eb1e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802eb22:	81a3      	strh	r3, [r4, #12]
 802eb24:	2300      	movs	r3, #0
 802eb26:	6063      	str	r3, [r4, #4]
 802eb28:	6923      	ldr	r3, [r4, #16]
 802eb2a:	6023      	str	r3, [r4, #0]
 802eb2c:	89a3      	ldrh	r3, [r4, #12]
 802eb2e:	f043 0308 	orr.w	r3, r3, #8
 802eb32:	81a3      	strh	r3, [r4, #12]
 802eb34:	6923      	ldr	r3, [r4, #16]
 802eb36:	b94b      	cbnz	r3, 802eb4c <__swsetup_r+0x7c>
 802eb38:	89a3      	ldrh	r3, [r4, #12]
 802eb3a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802eb3e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802eb42:	d003      	beq.n	802eb4c <__swsetup_r+0x7c>
 802eb44:	4621      	mov	r1, r4
 802eb46:	4628      	mov	r0, r5
 802eb48:	f000 f840 	bl	802ebcc <__smakebuf_r>
 802eb4c:	89a0      	ldrh	r0, [r4, #12]
 802eb4e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802eb52:	f010 0301 	ands.w	r3, r0, #1
 802eb56:	d00a      	beq.n	802eb6e <__swsetup_r+0x9e>
 802eb58:	2300      	movs	r3, #0
 802eb5a:	60a3      	str	r3, [r4, #8]
 802eb5c:	6963      	ldr	r3, [r4, #20]
 802eb5e:	425b      	negs	r3, r3
 802eb60:	61a3      	str	r3, [r4, #24]
 802eb62:	6923      	ldr	r3, [r4, #16]
 802eb64:	b943      	cbnz	r3, 802eb78 <__swsetup_r+0xa8>
 802eb66:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802eb6a:	d1c4      	bne.n	802eaf6 <__swsetup_r+0x26>
 802eb6c:	bd38      	pop	{r3, r4, r5, pc}
 802eb6e:	0781      	lsls	r1, r0, #30
 802eb70:	bf58      	it	pl
 802eb72:	6963      	ldrpl	r3, [r4, #20]
 802eb74:	60a3      	str	r3, [r4, #8]
 802eb76:	e7f4      	b.n	802eb62 <__swsetup_r+0x92>
 802eb78:	2000      	movs	r0, #0
 802eb7a:	e7f7      	b.n	802eb6c <__swsetup_r+0x9c>
 802eb7c:	20000164 	.word	0x20000164

0802eb80 <__swhatbuf_r>:
 802eb80:	b570      	push	{r4, r5, r6, lr}
 802eb82:	460c      	mov	r4, r1
 802eb84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802eb88:	2900      	cmp	r1, #0
 802eb8a:	b096      	sub	sp, #88	; 0x58
 802eb8c:	4615      	mov	r5, r2
 802eb8e:	461e      	mov	r6, r3
 802eb90:	da0d      	bge.n	802ebae <__swhatbuf_r+0x2e>
 802eb92:	89a3      	ldrh	r3, [r4, #12]
 802eb94:	f013 0f80 	tst.w	r3, #128	; 0x80
 802eb98:	f04f 0100 	mov.w	r1, #0
 802eb9c:	bf0c      	ite	eq
 802eb9e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802eba2:	2340      	movne	r3, #64	; 0x40
 802eba4:	2000      	movs	r0, #0
 802eba6:	6031      	str	r1, [r6, #0]
 802eba8:	602b      	str	r3, [r5, #0]
 802ebaa:	b016      	add	sp, #88	; 0x58
 802ebac:	bd70      	pop	{r4, r5, r6, pc}
 802ebae:	466a      	mov	r2, sp
 802ebb0:	f000 f848 	bl	802ec44 <_fstat_r>
 802ebb4:	2800      	cmp	r0, #0
 802ebb6:	dbec      	blt.n	802eb92 <__swhatbuf_r+0x12>
 802ebb8:	9901      	ldr	r1, [sp, #4]
 802ebba:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802ebbe:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802ebc2:	4259      	negs	r1, r3
 802ebc4:	4159      	adcs	r1, r3
 802ebc6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802ebca:	e7eb      	b.n	802eba4 <__swhatbuf_r+0x24>

0802ebcc <__smakebuf_r>:
 802ebcc:	898b      	ldrh	r3, [r1, #12]
 802ebce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802ebd0:	079d      	lsls	r5, r3, #30
 802ebd2:	4606      	mov	r6, r0
 802ebd4:	460c      	mov	r4, r1
 802ebd6:	d507      	bpl.n	802ebe8 <__smakebuf_r+0x1c>
 802ebd8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802ebdc:	6023      	str	r3, [r4, #0]
 802ebde:	6123      	str	r3, [r4, #16]
 802ebe0:	2301      	movs	r3, #1
 802ebe2:	6163      	str	r3, [r4, #20]
 802ebe4:	b002      	add	sp, #8
 802ebe6:	bd70      	pop	{r4, r5, r6, pc}
 802ebe8:	ab01      	add	r3, sp, #4
 802ebea:	466a      	mov	r2, sp
 802ebec:	f7ff ffc8 	bl	802eb80 <__swhatbuf_r>
 802ebf0:	9900      	ldr	r1, [sp, #0]
 802ebf2:	4605      	mov	r5, r0
 802ebf4:	4630      	mov	r0, r6
 802ebf6:	f7ff f81b 	bl	802dc30 <_malloc_r>
 802ebfa:	b948      	cbnz	r0, 802ec10 <__smakebuf_r+0x44>
 802ebfc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ec00:	059a      	lsls	r2, r3, #22
 802ec02:	d4ef      	bmi.n	802ebe4 <__smakebuf_r+0x18>
 802ec04:	f023 0303 	bic.w	r3, r3, #3
 802ec08:	f043 0302 	orr.w	r3, r3, #2
 802ec0c:	81a3      	strh	r3, [r4, #12]
 802ec0e:	e7e3      	b.n	802ebd8 <__smakebuf_r+0xc>
 802ec10:	89a3      	ldrh	r3, [r4, #12]
 802ec12:	6020      	str	r0, [r4, #0]
 802ec14:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802ec18:	81a3      	strh	r3, [r4, #12]
 802ec1a:	9b00      	ldr	r3, [sp, #0]
 802ec1c:	6163      	str	r3, [r4, #20]
 802ec1e:	9b01      	ldr	r3, [sp, #4]
 802ec20:	6120      	str	r0, [r4, #16]
 802ec22:	b15b      	cbz	r3, 802ec3c <__smakebuf_r+0x70>
 802ec24:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ec28:	4630      	mov	r0, r6
 802ec2a:	f000 f81d 	bl	802ec68 <_isatty_r>
 802ec2e:	b128      	cbz	r0, 802ec3c <__smakebuf_r+0x70>
 802ec30:	89a3      	ldrh	r3, [r4, #12]
 802ec32:	f023 0303 	bic.w	r3, r3, #3
 802ec36:	f043 0301 	orr.w	r3, r3, #1
 802ec3a:	81a3      	strh	r3, [r4, #12]
 802ec3c:	89a3      	ldrh	r3, [r4, #12]
 802ec3e:	431d      	orrs	r5, r3
 802ec40:	81a5      	strh	r5, [r4, #12]
 802ec42:	e7cf      	b.n	802ebe4 <__smakebuf_r+0x18>

0802ec44 <_fstat_r>:
 802ec44:	b538      	push	{r3, r4, r5, lr}
 802ec46:	4d07      	ldr	r5, [pc, #28]	; (802ec64 <_fstat_r+0x20>)
 802ec48:	2300      	movs	r3, #0
 802ec4a:	4604      	mov	r4, r0
 802ec4c:	4608      	mov	r0, r1
 802ec4e:	4611      	mov	r1, r2
 802ec50:	602b      	str	r3, [r5, #0]
 802ec52:	f7d3 feef 	bl	8002a34 <_fstat>
 802ec56:	1c43      	adds	r3, r0, #1
 802ec58:	d102      	bne.n	802ec60 <_fstat_r+0x1c>
 802ec5a:	682b      	ldr	r3, [r5, #0]
 802ec5c:	b103      	cbz	r3, 802ec60 <_fstat_r+0x1c>
 802ec5e:	6023      	str	r3, [r4, #0]
 802ec60:	bd38      	pop	{r3, r4, r5, pc}
 802ec62:	bf00      	nop
 802ec64:	200142ec 	.word	0x200142ec

0802ec68 <_isatty_r>:
 802ec68:	b538      	push	{r3, r4, r5, lr}
 802ec6a:	4d06      	ldr	r5, [pc, #24]	; (802ec84 <_isatty_r+0x1c>)
 802ec6c:	2300      	movs	r3, #0
 802ec6e:	4604      	mov	r4, r0
 802ec70:	4608      	mov	r0, r1
 802ec72:	602b      	str	r3, [r5, #0]
 802ec74:	f7d3 fee4 	bl	8002a40 <_isatty>
 802ec78:	1c43      	adds	r3, r0, #1
 802ec7a:	d102      	bne.n	802ec82 <_isatty_r+0x1a>
 802ec7c:	682b      	ldr	r3, [r5, #0]
 802ec7e:	b103      	cbz	r3, 802ec82 <_isatty_r+0x1a>
 802ec80:	6023      	str	r3, [r4, #0]
 802ec82:	bd38      	pop	{r3, r4, r5, pc}
 802ec84:	200142ec 	.word	0x200142ec

0802ec88 <_init>:
 802ec88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ec8a:	bf00      	nop
 802ec8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ec8e:	bc08      	pop	{r3}
 802ec90:	469e      	mov	lr, r3
 802ec92:	4770      	bx	lr

0802ec94 <_fini>:
 802ec94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ec96:	bf00      	nop
 802ec98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ec9a:	bc08      	pop	{r3}
 802ec9c:	469e      	mov	lr, r3
 802ec9e:	4770      	bx	lr
